{"version":3,"file":"js/4432.d3d8c74c.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/@radiantearth/stac-fields/I18N.js","webpack://@openeo/web-editor/./node_modules/@radiantearth/stac-fields/datatypes.js","webpack://@openeo/web-editor/./node_modules/@radiantearth/stac-fields/formatters.js","webpack://@openeo/web-editor/./node_modules/@radiantearth/stac-fields/helper.js"],"sourcesContent":["const Defaults = {\r\n\tcollatorOptions: {},\r\n\tnumberFormatterOptions: {\r\n\t\tmaximumFractionDigits: 10\r\n\t},\r\n\tdateFormatterOptions: {\r\n\t\tday: 'numeric',\r\n\t\tmonth: 'numeric',\r\n\t\tyear: 'numeric'\r\n\t},\r\n\tdateTimeFormatterOptions: {\r\n\t\tday: 'numeric',\r\n\t\tmonth: 'numeric',\r\n\t\tyear: 'numeric',\r\n\t\thour: 'numeric',\r\n\t\tminute: 'numeric',\r\n\t\tsecond: 'numeric',\r\n\t\ttimeZone: \"UTC\",\r\n\t\ttimeZoneName: \"short\"\r\n\t}\r\n};\r\n\r\nconst I18N = {\r\n\r\n\tlocales: [],\r\n\tcollator: new Intl.Collator(Defaults.collatorOptions),\r\n\tdateFormatter: new Intl.DateTimeFormat(Defaults.dateFormatterOptions),\r\n\tdateTimeFormatter: new Intl.DateTimeFormat(Defaults.dateTimeFormatterOptions),\r\n\tnumberFormatter: new Intl.NumberFormat(Defaults.numberFormatterOptions),\r\n\ttranslate: null, // function(value: string, vars: array|object = null) : string\r\n\r\n\tgetDefaults() {\r\n\t\treturn Defaults;\r\n\t},\r\n\r\n\tsetLocales(locales, dateFormatterOptions = {}, dateTimeFormatterOptions = {}, numberFormatterOptions = {}, collatorOptions = {}) {\r\n\t\tthis.locales = locales;\r\n\r\n\t\tcollatorOptions = Object.assign({}, Defaults.collatorOptions, collatorOptions);\r\n\t\tthis.collator = new Intl.Collator(locales, collatorOptions);\r\n\r\n\t\tdateFormatterOptions = Object.assign({}, Defaults.dateFormatterOptions, dateFormatterOptions);\r\n\t\tthis.dateFormatter = new Intl.DateTimeFormat(locales, dateFormatterOptions);\r\n\r\n\t\tdateTimeFormatterOptions = Object.assign({}, Defaults.dateTimeFormatterOptions, dateTimeFormatterOptions);\r\n\t\tthis.dateTimeFormatter = new Intl.DateTimeFormat(locales, dateTimeFormatterOptions);\r\n\r\n\t\tnumberFormatterOptions = Object.assign({}, Defaults.numberFormatterOptions, numberFormatterOptions);\r\n\t\tthis.numberFormatter = new Intl.NumberFormat(locales, numberFormatterOptions);\r\n\t},\r\n\r\n\tsetTranslator(fn) {\r\n\t\tthis.translate = fn;\r\n\t},\r\n\r\n\tformat(value, vars = null) {\r\n\t\tif (vars) {\r\n\t\t\tfor(let key in vars) {\r\n\t\t\t\tvalue = value.replaceAll(`{${key}}`, vars[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n};\r\n\r\nmodule.exports = I18N;","const _ = require('./helper');\r\nconst I18N = require('./I18N');\r\n\r\nconst DataTypes = {\r\n\r\n\tarray(arr, sort = false, unit = '') {\r\n\t\treturn _.toList(arr, sort, v => DataTypes.format(v, unit));\r\n\t},\r\n\t\r\n\tobject(obj) {\r\n\t\treturn _.toObject(obj, v => DataTypes.format(v));\r\n\t},\r\n\t\r\n\tnull(label = null) {\r\n\t\tif (label === null) {\r\n\t\t\tlabel = _.t('n/a');\r\n\t\t}\r\n\t\treturn _.toNothing(label);\r\n\t},\r\n\t\r\n\tnumber(num, unit = '') {\r\n\t\tif (typeof num !== 'number') {\r\n\t\t\tnum = parseFloat(num);\r\n\t\t}\r\n\t\treturn _.unit(I18N.numberFormatter.format(num), unit);\r\n\t},\r\n\r\n\tstring(str, unit = '') {\r\n\t\treturn _.unit(_.e(str).replace(/(\\r\\n|\\r|\\n){2,}/g, '<br>'), unit);\r\n\t},\r\n\t\r\n\tboolean(bool) {\r\n\t\treturn bool ? '✔️' : '❌';\r\n\t},\r\n\t\r\n\tformat(value, unit = '') {\r\n\t\tif (typeof value === 'boolean') {\r\n\t\t\treturn DataTypes.boolean(value);\r\n\t\t}\r\n\t\telse if (typeof value === 'number') {\r\n\t\t\treturn DataTypes.number(value, unit);\r\n\t\t}\r\n\t\telse if (typeof value === 'string') {\r\n\t\t\treturn DataTypes.string(value, unit);\r\n\t\t}\r\n\t\telse if (Array.isArray(value)) {\r\n\t\t\treturn DataTypes.array(value, unit);\r\n\t\t}\r\n\t\telse if (_.isObject(value)) {\r\n\t\t\treturn DataTypes.object(value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nmodule.exports = DataTypes;","const _ = require('./helper');\nconst DataTypes = require('./datatypes');\nconst I18N = require('./I18N');\nconst Registry = require('./registry');\n\nconst Formatters = {\n\n\tallowHtmlInCommonMark: false,\n\n\tformatUrl(value, field, spec = {}, context = null, parent = null) {\n\t\tlet title = _.isObject(parent) && typeof parent === 'string' ? parent.title : value;\n\t\treturn _.toLink(value, title, parent.rel || \"\");\n\t},\n\n\tformatLink(value) {\n\t\treturn _.toList(value, false, value => _.toLink(value.href, value.title, value.rel));\n\t},\n\n\tformatMediaType(value, field, spec = {}) {\n\t\treturn _.e(_.t(Formatters._formatMediaType(value, field, spec)));\n\t},\n\n\t_formatMediaType(value, field, spec = {}) {\n\t\tlet short = Boolean(spec.shorten);\n\n\t\tconst mediaType = Registry.getDependency('content-type');\n\t\tif (!mediaType) {\n\t\t\treturn short ? \"\" : _.e(value);\n\t\t}\n\n\t\tlet media;\n\t\ttry {\n\t\t\tmedia = mediaType.parse(value);\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t\treturn short ? \"\" : _.e(value);\n\t\t}\n\n\t\tswitch(media.type) {\n\t\t\t// not supported: image/vnd.stac.geotiff; cloud-optimized=true\n\t\t\tcase 'image/tiff':\n\t\t\t\tif (media.parameters.application === \"geotiff\") {\n\t\t\t\t\tif (media.parameters.profile === \"cloud-optimized\") {\n\t\t\t\t\t\treturn short ? 'COG' : 'Cloud-Optimized GeoTIFF image';\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn short ? 'GeoTiff' : 'GeoTIFF image';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn short ? 'TIFF' : 'TIFF image';\n\t\t\t\t}\n\t\t\tcase 'image/jp2':\n\t\t\t\treturn short ? 'JPEG 2000' : 'JPEG 2000 image';\n\t\t\tcase 'image/png':\n\t\t\tcase 'image/apng':\n\t\t\tcase 'image/vnd.mozilla.apng':\n\t\t\t\treturn short ? 'PNG' : 'PNG image';\n\t\t\tcase 'image/gif':\n\t\t\t\treturn short ? 'GIF' : 'GIF image';\n\t\t\tcase 'image/jpeg':\n\t\t\tcase 'image/jpg':\n\t\t\t\treturn short ? 'JPEG' : 'JPEG image';\n\t\t\tcase 'image/webp':\n\t\t\t\treturn short ? 'WebP' : 'WebP image';\n\t\t\tcase 'image/bmp':\n\t\t\tcase 'image/x-bmp':\n\t\t\tcase 'image/x-ms-bmp':\n\t\t\tcase 'image/wbmp':\n\t\t\t\treturn short ? 'Bitmap' : 'Bitmap image';\n\t\t\tcase 'image/svg+xml':\n\t\t\t\treturn short ? 'SVG' : 'SVG vector image';\n\t\t\tcase 'text/csv':\n\t\t\t\treturn short ? 'CSV' : 'Comma-separated values (CSV)';\n\t\t\tcase 'text/xml':\n\t\t\tcase 'application/xml':\n\t\t\t\treturn 'XML';\n\t\t\tcase 'text/json':\n\t\t\tcase 'application/json':\n\t\t\t\treturn 'JSON';\n\t\t\tcase 'application/x-ndjson':\n\t\t\t\treturn short ? 'NDJSON' : 'Newline Delimited JSON';\n\t\t\tcase 'text/yaml':\n\t\t\tcase 'text/vnd.yaml':\n\t\t\tcase 'text/x-yaml':\n\t\t\tcase 'application/x-yaml':\n\t\t\t\treturn 'YAML';\n\t\t\tcase 'application/geo+json':\n\t\t\t\treturn 'GeoJSON';\n\t\t\tcase 'application/gml+xml':\n\t\t\t\treturn 'GML';\n\t\t\tcase 'application/vnd.google-earth.kml+xml':\n\t\t\tcase 'application/vnd.google-earth.kmz':\n\t\t\t\treturn 'KML';\n\t\t\tcase 'application/geopackage+vnd.sqlite3':\n\t\t\tcase 'application/geopackage+sqlite3':\n\t\t\t\treturn 'GeoPackage';\n\t\t\tcase 'text/html':\n\t\t\tcase 'application/html':\n\t\t\tcase 'application/xhtml+xml':\n\t\t\t\treturn short ? 'HTML' : 'HTML (Website)';\n\t\t\tcase 'text/plain':\n\t\t\t\treturn short ? 'Text' : 'Text document';\n\t\t\tcase 'text/markdown':\n\t\t\t\treturn short ? 'Markdown' : 'Markdown document';\n\t\t\tcase 'application/pdf':\n\t\t\t\treturn short ? 'PDF' : 'PDF document';\n\t\t\tcase 'application/zip':\n\t\t\t\treturn short ? 'ZIP' : 'ZIP archive';\n\t\t\tcase 'application/gzip':\n\t\t\t\treturn short ? 'GZIP' : 'GZIP archive';\n\t\t\tcase 'application/x-hdf':\n\t\t\t\treturn 'HDF';\n\t\t\tcase 'application/netcdf':\n\t\t\tcase 'application/x-netcdf':\n\t\t\t\treturn 'NetCDF';\n\t\t\tcase 'application/x.mrf':\n\t\t\t\treturn short ? 'MRF' : 'Meta Raster Format';\n\t\t\tcase 'application/wmo-GRIB2':\n\t\t\t\treturn 'GRIB 2';\n\t\t\tcase 'application/grib':\n\t\t\t\treturn `GRIB ${media.parameters.edition || \"\"}`.trim();\n\t\t\tcase 'application/bufr':\n\t\t\t\treturn `BUFR ${media.parameters.edition || \"\"}`.trim();\n\t\t\tcase 'application/octet-stream':\n\t\t\t\treturn short ? 'Binary' : 'Binary file';\n\t\t\tcase 'application/vnd.laszip':\n\t\t\t\treturn 'LASzip';\n\t\t\tcase 'application/vnd.laszip+copc': // https://github.com/copcio/copcio.github.io/issues/53\n\t\t\t\treturn short ? 'COPC' : 'Cloud-Optimized Point Cloud (LASzip)';\n\t\t\tcase 'application/vnd+zarr': // https://github.com/zarr-developers/zarr-specs/issues/123\n\t\t\t\treturn 'Zarr';\n\t\t\tcase 'application/x-parquet': // Inofficial\n\t\t\tcase 'application/vnd.apache.parquet': // Official (tbc): https://github.com/opengeospatial/geoparquet/issues/115\n\t\t\t\treturn 'Parquet'\n\t\t\tcase 'application/vnd.pmtiles':\n\t\t\t\treturn 'PMTiles';\n\t\t\tcase 'application/vnd.cov+json':\n\t\t\t\treturn 'CoverageJSON';\n\t\t\tcase 'application/vnd.flatgeobuf':\n\t\t\t\treturn 'FlatGeobuf'; // inofficial: https://github.com/flatgeobuf/flatgeobuf/discussions/112\n\t\t\tcase 'application/x-filegdb':\n\t\t\t\treturn short ? 'Geodatabase' : 'Esri File Geodatabase';\n\t\t\tcase 'application/vnd.nitf':\n\t\t\t\treturn short ? 'NITF' : 'National Imagery Transmission Format';\n\t\t\tcase 'application/3dtiles+json':\n\t\t\t\treturn '3D Tiles';\n\t\t\tdefault: {\n\t\t\t\tlet [group, format] = media.type.split('/');\n\t\t\t\tformat = _.formatKey(format.replace(/^(vnd|x)[.+-]/, ''));\n\t\t\t\tif (short) {\n\t\t\t\t\treturn format;\n\t\t\t\t}\n\t\t\t\tswitch(group) {\n\t\t\t\t\tcase 'audio':\n\t\t\t\t\t\treturn `${format} audio`;\n\t\t\t\t\tcase 'image':\n\t\t\t\t\t\treturn `${format} image`;\n\t\t\t\t\tcase 'font':\n\t\t\t\t\t\treturn `Font`;\n\t\t\t\t\tcase 'model':\n\t\t\t\t\t\treturn `${format} 3D model`;\n\t\t\t\t\tcase 'video':\n\t\t\t\t\t\treturn `${format} video`;\n\t\t\t\t\tcase 'text':\n\t\t\t\t\tcase 'application':\n\t\t\t\t\t\treturn format;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tformatTimestamp(value) {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\treturn I18N.dateTimeFormatter.format(new Date(value));\n\t\t\t} catch (error) {}\n\t\t}\n\t\treturn DataTypes.null();\n\t},\n\n\tformatPercent0to1(value, field, spec = {}) {\n\t\treturn DataTypes.number(value * 100, spec.unit);\n\t},\n\n\tformatDate(value) {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\treturn I18N.dateFormatter.format(new Date(value));\n\t\t\t} catch (error) {}\n\t\t}\n\t\treturn DataTypes.null();\n\t},\n\n\tformatDuration(value) {\n\t\tif (typeof value === 'string') {\n\t\t\tconst lib = Registry.getDependency('@musement/iso-duration');\n\t\t\tif (!lib) {\n\t\t\t\treturn _.e(value);\n\t\t\t}\n\t\t\tconst { isoDuration, en } = lib;\n\t\t\tisoDuration.setLocales({ en }, { fallbackLocale: 'en' });\n\t\t\tlet formatted = isoDuration(value).humanize('en');\n\t\t\tif (formatted.length === 0) {\n\t\t\t\treturn _.e(_.t('none'));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn _.e(formatted);\n\t\t\t}\n\t\t}\n\t\treturn DataTypes.null();\n\t},\n\n\tformatLanguageCode(value) {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn _.toList(value, true, Formatters.formatLanguageCode, false);\n\t\t}\n\t\telse if (typeof value !== 'string' || value.length < 2) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\tconst list = require('./languages.json');\n\t\tconst [code, ...rest] = value.split('-');\n\t\tif (code in list) {\n\t\t\tconst name = list[code];\n\t\t\tif (rest.length > 0) {\n\t\t\t\treturn _.e(_.t(`${name} (${rest.join(' ')})`));\n\t\t\t}\n\t\t\treturn _.e(_.t(name));\n\t\t}\n\t\treturn _.e(_.t(value));\n\t},\n\n\tformatLicense(value, field, spec = {}, context = null) {\n\t\tif (typeof value !== 'string' || value.length === 0) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\t// We could use the spdx-license-ids and/or spdx-to-html packages previously used in STAC Browser,\n\t\t// but let's try it without additional dependency for now.\n\t\tif (value !== 'other' && value !== 'proprietary' && value !== 'various' && value.match(/^[\\w\\.\\-]+$/i)) { // SPDX\n\t\t\treturn _.toLink(`https://spdx.org/licenses/${value}.html`, value, \"license\");\n\t\t}\n\t\t\n\t\tlet licenses = Array.isArray(context.links) ? context.links.filter(link => (_.isObject(link) && typeof link.href === 'string' && link.rel === 'license')) : [];\n\t\tif (licenses.length > 0) {\n\t\t\treturn _.toList(licenses, false, link => _.toLink(link.href, link.title || value, \"license\"));\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.string(value);\n\t\t}\n\t},\n\n\tformatProviders(value) {\n\t\treturn _.toList(value, false, provider => {\n\t\t\tlet name = provider.name;\n\t\t\tlet roles = '';\n\t\t\tlet description = '';\n\t\t\tif (typeof provider.url === 'string' && provider.url.length > 0) {\n\t\t\t\tname = _.toLink(provider.url, name);\n\t\t\t}\n\t\t\tif (Array.isArray(provider.roles) && provider.roles.length > 0) {\n\t\t\t\troles = provider.roles.map(r => DataTypes.format(r)).join(', ');\n\t\t\t\troles = ` (<em>${roles}</em>)`;\n\t\t\t}\n\t\t\tif (typeof provider.description === 'string' && provider.description.length > 0) {\n\t\t\t\tdescription = Formatters.formatCommonMark(provider.description);\n\t\t\t}\n\t\t\treturn `${name}${roles}${description}`;\n\t\t});\n\t},\n\n\tformatCommonMark(value) {\n\t\tif (typeof value !== 'string' || value.length === 0) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\tconst commonmark = Registry.getDependency('commonmark');\n\t\tlet html;\n\t\tif (commonmark) {\n\t\t\tlet reader = new commonmark.Parser();\n\t\t\tlet writer = new commonmark.HtmlRenderer({safe: !Formatters.allowHtmlInCommonMark, smart: true});\n\t\t\thtml = writer.render(reader.parse(value));\n\t\t}\n\t\telse if (Formatters.allowHtmlInCommonMark) {\n\t\t\thtml = value;\n\t\t}\n\t\telse {\n\t\t\thtml = _.e(value);\n\t\t}\n\t\treturn `<div class=\"description\">${html}</div>`;\n\t},\n\n\tformatSoftware(value) {\n\t\tif (!_.isObject(value)) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\tlet list = [];\n\t\tfor(let software in value) {\n\t\t\tlet version = value[software];\n\t\t\tif ((typeof version === 'string' && version.length > 0) || typeof version === 'number') {\n\t\t\t\tlist.push(`${software} (${version})`);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlist.push(software);\n\t\t\t}\n\t\t}\n\t\treturn _.toList(list, true, null, false);\n\t},\n\n\tformatDOI(value) {\n\t\tvalue = DataTypes.format(value);\n\t\treturn _.toLink(`http://doi.org/${value}`, value);\n\t},\n\n\tformatCRS(value) {\n\t\treturn _.toList(value, false, value => {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tlet title = value\n\t\t\t\t\t.replace(/^https?:\\/\\/www\\.opengis\\.net\\/def\\/crs\\//i, '') // HTTP(s) URI\n\t\t\t\t\t.replace(/^urn:ogc:def:crs:/i, ''); // OGC URN\n\t\t\t\treturn _.toLink(value, title);\n\t\t\t}\n\t\t\treturn DataTypes.format(value);\n\t\t});\n\t},\n\n\tformatCrsCode(value) {\n\t\tif (typeof value === 'string') {\n\t\t\tconst [authority, code] = value.split(':', 2);\n\t\t\tswitch(authority.toUpperCase()) {\n\t\t\t\tcase 'EPSG':\n\t\t\t\tcase 'ESRI':\n\t\t\t\tcase 'IAU_2015':\n\t\t\t\tcase 'IGNF':\n\t\t\t\tcase 'MKG':\n\t\t\t\tcase 'OGC':\n\t\t\t\t\treturn _.toLink(`https://spatialreference.org/ref/${authority.toLowerCase()}/${code}/`, value);\n\t\t\t\tdefault:\n\t\t\t\t\treturn DataTypes.string(value);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn DataTypes.null();\n\t},\n\n\t/**\n\t * @deprecated Use formatCrsCode instead\n\t */\n\tformatEPSG(value) {\n\t\tif (typeof value === 'number') {\n\t\t\treturn Formatters.formatCrsCode(`EPSG:${value}`);\n\t\t}\n\t\telse if (typeof value === 'string') {\n\t\t\treturn Formatters.formatCrsCode(value);\n\t\t}\n\t\treturn DataTypes.null();\n\t},\n\n\tformatExtent(value, field, spec = {}) {\n\t\tif (!Array.isArray(value) || value.length < 2) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\telse if (value[0] === value[1]) {\n\t\t\treturn DataTypes.format(value[0], spec.unit);\n\t\t}\n\t\telse if (value[0] === null) {\n\t\t\treturn `< ${DataTypes.format(value[1], spec.unit)}`;\n\t\t}\n\t\telse if (value[1] === null) {\n\t\t\treturn `> ${DataTypes.format(value[0], spec.unit)}`;\n\t\t}\n\t\telse {\n\t\t\treturn value.map(v => DataTypes.format(v, spec.unit)).join(' – ');\n\t\t}\n\t},\n\n\tformatHexColor(value) {\n\t\tif (typeof value !== 'string' || !value.match(/^#?[\\dA-F]{3,8}$/i)) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\tif (value.startsWith('#')) {\n\t\t\tvalue = value.substring(1);\n\t\t}\n\t\treturn `<div class=\"color\" style=\"background-color: #${value}\"><code class=\"color-code\">#${value}</code></div>`;\n\t},\n\n\tformatPROJJSON(value) {\n\t\tif (!_.isObject(value)) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\tif (_.isObject(value.id) && value.id.authority === 'EPSG' && typeof value.code === 'number' && value.code > 0) {\n\t\t\treturn 'EPSG ' + Formatters.formatEPSG(value);\n\t\t}\n\t\telse if (typeof value.name === 'string') {\n\t\t\treturn DataTypes.string(value.name);\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.object(value);\n\t\t}\n\t},\n\n\tformatTemporalExtent(value, field, spec = {}) {\t\n\t\tif (!Array.isArray(value) || value.length !== 2) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\tvalue = value.map(d => {\n\t\t\ttry {\n\t\t\t\treturn d ? new Date(d) : null;\n\t\t\t} catch(e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\tconst [start, end] = value;\n\t\t\tif (start || end) {\n\t\t\t\tconst base = spec.shorten ? I18N.dateFormatter : I18N.dateTimeFormatter;\n\t\t\t\tif (!start) {\n\t\t\t\t\treturn _.t(\"Until {0}\", [base.format(end)]);\n\t\t\t\t}\n\t\t\t\telse if (!end) {\n\t\t\t\t\treturn _.t(\"{0} until present\", [base.format(start)]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn base.formatRange(start, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {}\n\n\t\treturn DataTypes.null();\n\t},\n\n\tformatTemporalExtents(value, field, spec = {}) {\n\t\tlet sortExtents = (a,b) => {\n\t\t\tif (a[0] === null) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn I18N.collator.compare(a[0], b[0]);\n\t\t\t}\n\t\t};\n\t\treturn _.toList(value, sortExtents, v => Formatters.formatTemporalExtent(v, field, spec));\n\t},\n\n\tformatWKT2(value) {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\t\n\t\t// This is a VERY simplistic WKT2 formatter, which may fail to render properly in some cases.\n\t\tlet indent = -1;\n\t\tlet formatted;\n\t\ttry {\n\t\t\tformatted = value.replace(/([A-Z]+)\\[|\\]/ig, (match, keyword) => {\n\t\t\t\tif (match === ']') {\n\t\t\t\t\tindent--;\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tindent++;\n\t\t\t\t\tlet tabs = \"  \".repeat(indent);\n\t\t\t\t\treturn `\\n${tabs}${keyword}[`;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\t// In case the formatting did not work properly\n\t\t\t// (usually the number of [ and ] doesn't match)\n\t\t\t// just return the unformatted value\n\t\t\tformatted = value;\n\t\t\t\n\t\t}\n\n\t\treturn `<pre>${formatted}</pre>`;\n\t},\n\n\tfileSizeUnits: ['B', 'kB', 'MB', 'GB', 'TB'],\n\n\tformatFileSize(value) {\n\t\tif (typeof value !== 'number') {\n\t\t\treturn DataTypes.format(value);\n\t\t}\n\t\tvar i = value == 0 ? 0 : Math.floor( Math.log(value) / Math.log(1024) );\n\t\treturn _.unit(( value / Math.pow(1024, i) ).toFixed(2) * 1, Formatters.fileSizeUnits[i]);\n\t},\n\n\tformatChecksum(value) {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\tconst multihash = Registry.getDependency('multihashes');\n\t\tif (!multihash) {\n\t\t\treturn _.e(value);\n\t\t}\n\n\t\ttry {\n\t\t\tconst meta = multihash.decode(_.hexToUint8(value));\n\t\t\tconst name = _.e(meta.name);\n\t\t\tconst hex = _.e(_.uint8ToHex(meta.digest));\n\t\t\treturn `<div class=\"checksum\"><input class=\"checksum-input\" size=\"32\" value=\"${hex}\" readonly><br><span class=\"checksum-algo\">${_.t('Hashing algorithm:')} <strong>${name}</strong></span></div>`;\n\t\t} catch (error) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t},\n\n\tfileDataTypes: {\n\t\t\"int8\": \"8-bit integer\",\n\t\t\"int16\": \"16-bit integer\",\n\t\t\"int32\": \"32-bit integer\",\n\t\t\"int64\": \"64-bit integer\",\n\t\t\"uint8\": \"unsigned 8-bit integer\",\n\t\t\"uint16\": \"unsigned 16-bit integer\",\n\t\t\"uint32\": \"unsigned 32-bit integer\",\n\t\t\"uint64\": \"unsigned 64-bit integer\",\n\t\t\"float16\": \"16-bit float\",\n\t\t\"float32\": \"32-bit float\",\n\t\t\"float64\": \"64-bit float\",\n\t\t\"cint16\": \"16-bit complex integer\",\n\t\t\"cint32\": \"32-bit complex integer\",\n\t\t\"cfloat32\": \"32-bit complex float\",\n\t\t\"cfloat64\": \"64-bit complex float\"\n\t},\n\n\tformatFileDataType(value) {\n\t\tif (value === \"other\") {\n\t\t\treturn _.t(\"non-standard\");\n\t\t}\n\t\telse if (typeof value === 'string' && value in Formatters.fileDataTypes) {\n\t\t\treturn _.abbrev(_.t(value), _.t(Formatters.fileDataTypes[value]));\n\t\t}\n\n\t\treturn DataTypes.null();\n\t},\n\n\tformatTransform(value) {\n\t\tif (Array.isArray(value) && value.length % 3 === 0) {\n\t\t\tlet rows = [];\n\t\t\tfor (let i = 0; i < value.length; i = i+3) {\n\t\t\t\tlet chunk = value.slice(i, i + 3);\n\t\t\t\trows.push(`[${Formatters.formatCSV(chunk)}]`);\n\t\t\t}\n\t\t\treturn rows.join('<br>');\n\t\t}\n\t\telse {\n\t\t\treturn Formatters.formatCSV(value);\n\t\t}\n\t},\n\n\tformatShape(value, field, spec = {}) {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map(x => DataTypes.format(x, spec.unit)).join(' × ');\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.format(value, spec.unit);\n\t\t}\n\t},\n\n\tformatCSV(value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tlet numeric = value.find(v => typeof v === 'number') !== undefined;\n\t\t\t// If there's potentially a comma in the values (decimal or thousand separators in numbers), use semicolon instead of comma.\n\t\t\treturn value.map(DataTypes.format).join(numeric ? '; ' : ', ');\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.format(value);\n\t\t}\n\t},\n\n\tformatImage(value, field) { // from url or link\n\t\tlet title = \"\";\n\t\tlet src = null;\n\t\tif (_.isObject(value)) {\n\t\t\tsrc = value.href;\n\t\t\ttitle = value.title || \"\";\n\t\t}\n\t\telse if (typeof value === 'string') {\n\t\t\tsrc = value;\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.format(src);\n\t\t}\n\n\t\treturn `<img src=\"${_.e(src)}\" title=\"${_.e(title)}\" class=\"${_.e(field.replace(':', '_'))}\">`;\n\t},\n\n\tformatPhone(value) {\n\t\treturn _.toLink(`tel:${value}`, value);\n\t},\n\n\tformatEmail(value) {\n\t\treturn _.toLink(`mailto:${value}`, value);\n\t},\n\n\tformatConcepts(value) {\n\t\treturn _.toList(value, false, concept => {\n\t\t\tif (!_.isObject(concept)) {\n\t\t\t\treturn DataTypes.format(concept);\n\t\t\t}\n\n\t\t\tlet html = \"\";\n\t\t\tif (concept.title) {\n\t\t\t\tlet title = concept.title;\n\t\t\t\tif (concept.url) {\n\t\t\t\t\ttitle = _.toLink(concept.url, concept.title);\n\t\t\t\t}\n\t\t\t\thtml += `<strong>${title}</strong> (<code>${_.e(concept.id)}</code>)`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet title = concept.id;\n\t\t\t\tif (concept.url) {\n\t\t\t\t\ttitle = _.toLink(concept.url, concept.id);\n\t\t\t\t}\n\t\t\t\thtml += `<strong><code>${title}</code></strong>`;\n\t\t\t}\n\t\t\tif (concept.description) {\n\t\t\t\thtml += `<br><small>${_.e(concept.description)}</small>`;\n\t\t\t}\n\t\t\treturn html;\n\t\t});\n\t},\n\n\tformatAddress(value) { // array or object\n\t\treturn _.toList(value, false, address => {\n\t\t\tif (!_.isObject(address)) {\n\t\t\t\treturn DataTypes.format(address);\n\t\t\t}\n\n\t\t\tlet lines = Array.isArray(address.deliveryPoint) ? address.deliveryPoint.slice(0) : [];\n\n\t\t\tif (address.postalCode && address.city) {\n\t\t\t\t// Try to create a compact address\n\t\t\t\tlet line = `${address.postalCode} ${address.city}`;\n\t\t\t\tif (address.administrativeArea) {\n\t\t\t\t\tline += ` (${address.administrativeArea})`;\n\t\t\t\t}\n\t\t\t\tif (typeof address.country === 'string' && address.country.length > 0) {\n\t\t\t\t\tif (address.country.length === 2 && address.country.toUpperCase() === address.country) { // is ISO code\n\t\t\t\t\t\tline = address.country + '-' + line;\n\t\t\t\t\t\tlines.push(line);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlines.push(line);\n\t\t\t\t\t\tlines.push(address.country.toUpperCase());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Long version of the address\n\t\t\t\tif (address.city) {\n\t\t\t\t\tlines.push(address.city);\n\t\t\t\t}\n\t\t\t\tif (address.administrativeArea) {\n\t\t\t\t\tlines.push(address.administrativeArea);\n\t\t\t\t}\n\t\t\t\tif (address.postalCode) {\n\t\t\t\t\tlines.push(address.postalCode);\n\t\t\t\t}\n\t\t\t\tif (typeof address.country === 'string' && address.country.length > 0) {\n\t\t\t\t\tlines.push(address.country.toUpperCase());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn DataTypes.string(lines.join(\"\\n\\n\"));\n\t\t});\n\t},\n\n\tformatGridCode(value) {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn DataTypes.format(value);\n\t\t}\n\n\t\tlet splitHalf = function(parts, value, labelA, labelB) {\n\t\t\tlet len = value.length;\n\t\t\tif ((len % 2) === 1) {\n\t\t\t\tparts.push(`Code: ${value}`);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet mid = len/2;\n\t\t\t\tlet a = value.substring(0, mid);\n\t\t\t\tparts.push(`${labelA}: ${a}`);\n\t\t\t\tlet b = value.substring(mid, len);\n\t\t\t\tparts.push(`${labelB}: ${b}`);\n\t\t\t}\n\t\t};\n\n\t\tlet [designator, code] = value.split(/-(.*)/);\n\t\tlet parts = [];\n\t\tswitch(designator) {\n\t\t\tcase 'MGRS': \n\t\t\t\tparts.push(_.abbrev(_.t(designator), _.t('Military Grid Reference System')));\n\t\t\t\tlet [, utm, band, sq, coord] = code.match(/^(\\d{2})([C-X])([A-Z]{2})(\\d*)$/);\n\t\t\t\tparts.push(`${_.t(\"UTM Zone\")}: ${utm}`);\n\t\t\t\tparts.push(`${_.t(\"Latitude Band\")}: ${band}`);\n\t\t\t\tparts.push(`${_.t(\"Square Identifier\")}: ${sq}`);\n\t\t\t\tif (coord) {\n\t\t\t\t\tsplitHalf(parts, coord, _.t(\"Easting\"), _.t(\"Northing\"));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'MSIN':\n\t\t\t\tparts.push(_.t('MODIS Sinusoidal Tile Grid'));\n\t\t\t\tsplitHalf(parts, code, _.t('Horizontal'), _.t('Vertical'));\n\t\t\t\tbreak;\n\t\t\tcase 'WRS1':\n\t\t\tcase 'WRS2':\n\t\t\t\tlet version = designator.substring(3,4);\n\t\t\t\tparts.push(_.abbrev(_.t('WRS-' + version), _.t('Worldwide Reference System ' + version)));\n\t\t\t\tsplitHalf(parts, code, _.t('Path'), _.t('Row'));\n\t\t\t\tbreak;\n\t\t\tcase 'DOQ':\n\t\t\t\tparts.push(_abbrev(_.t(designator), _.t('Digital Orthophoto Quadrangle')));\n\t\t\t\tparts.push(`${_.t(\"Quadrangle\")}: ${code}`);\n\t\t\t\tbreak;\n\t\t\tcase 'DOQQ':\n\t\t\t\tparts.push(_abbrev(_.t(designator), _.t('Digital Orthophoto Quarter Quadrangle')));\n\t\t\t\tlet quad = code.substr(0, code.length - 2);\n\t\t\t\tparts.push(`${_.t(\"Quadrangle\")}: ${quad}`);\n\t\t\t\tlet quarter = code.substr(-2);\n\t\t\t\tlet a = quarter[0] === 'N' ? _.t('North') : _.t('South');\n\t\t\t\tlet b = quarter[1] === 'E' ? _.t('East') : _.t('West');\n\t\t\t\tparts.push(`${_.t(\"Quarter\")}: ${a} ${b}`);\n\t\t\t\tbreak;\n\t\t\tcase 'MXRA':\n\t\t\t\tparts.push(_.t('Maxar ARD Tile Grid'));\n\t\t\t\tlet [zone, quadkey] = code.split(/-(.*)/);\n\t\t\t\tif (zone.startsWith('Z')) {\n\t\t\t\t\tzone = zone.substring(1);\n\t\t\t\t}\n\t\t\t\tparts.push(`${_.t(\"UTM Zone\")}: ${zone}`);\n\t\t\t\tparts.push(`${_.t(\"Quadkey\")}: ${quadkey}`);\n\t\t\t\tbreak;\n\t\t\tcase 'EASE':\n\t\t\t\tlet [dggs, components] = code.split('-');\n\t\t\t\tif (dggs === 'DGGS') {\n\t\t\t\t\tparts.push(_.t('EASE-DGGS'));\n\t\t\t\t\tlet [level, rowcol, ...fractions] = components.split('.');\n\t\t\t\t\tparts.push(`${_.t(\"Level\")}: ${level}`);\n\t\t\t\t\tif (rowcol.length === 6) {\n\t\t\t\t\t\tparts.push(`${_.t(\"Level 0 row cell\")}: ${rowcol.substring(0,3)}`);\n\t\t\t\t\t\tparts.push(`${_.t(\"Level 0 column cell\")}: ${rowcol.substring(3,6)}`);\n\t\t\t\t\t\tfor(let i in fractions) {\n\t\t\t\t\t\t\tlet value = fractions[i];\n\t\t\t\t\t\t\tif (value.length === 2) {\n\t\t\t\t\t\t\t\tparts.push(`${_.t(\"Fraction of level {i} row cell\", {i})}: ${value[0]}`);\n\t\t\t\t\t\t\t\tparts.push(`${_.t(\"Fraction of level {i} column cell\", {i})}: ${value[1]}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'CDEM':\n\t\t\t\tlet [, n, e] = code.match(/^([A-Z]\\d+)([A-Z]\\d+)$/);\n\t\t\t\tparts.push(_.t(\"Copernicus Digital Elevation Model Grid\"));\n\t\t\t\tparts.push(`${_.t(\"Easting\")}: ${e}`);\n\t\t\t\tparts.push(`${_.t(\"Northing\")}: ${n}`);\n\t\t\tdefault:\n\t\t\t\tparts.push(value);\n\t\t}\n\n\t\treturn parts.join('<br>');\n\t}\n\n};\n\nmodule.exports = Formatters;","const I18N = require('./I18N');\n\nconst _ = {\n\n\te(str) {\n\t\tif (typeof str !== 'string') {\n\t\t\tstr = String(str);\n\t\t}\n\t\treturn str.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, '&apos;');\n\t},\n\n\tt(value, vars = null) {\n\t\tif (typeof I18N.translate === 'function') {\n\t\t\treturn I18N.translate(value, vars);\n\t\t}\n\t\telse {\n\t\t\treturn I18N.format(value, vars);\n\t\t}\n\t},\n\t\n\ttoNothing(label = null) {\n\t\tif (label === null) {\n\t\t\tlabel = _.t('n/a');\n\t\t}\n\t\treturn `<i class=\"null\">${label}</i>`;\n\t},\n\n\ttoList(list, sort = false, formatter = null, ordered = null) {\n\t\tlet tag = ordered === true ? 'ol' : 'ul';\n\t\tif (!Array.isArray(list)) {\n\t\t\tlist = [list];\n\t\t}\n\t\tif (sort) {\n\t\t\tlist = list.slice(0);\n\t\t\tif (typeof sort === 'function') {\n\t\t\t\tlist.sort(sort);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlist.sort();\n\t\t\t}\n\t\t\tif (ordered === null) {\n\t\t\t\ttag = 'ol';\n\t\t\t}\n\t\t}\n\t\tif (typeof formatter === 'function') {\n\t\t\tlist = list.map(formatter);\n\t\t}\n\t\tif (list.length === 0) {\n\t\t\treturn _.toNothing();\n\t\t}\n\t\telse if (list.length === 1) {\n\t\t\treturn list[0];\n\t\t}\n\t\telse {\n\t\t\treturn `<${tag}><li>${list.join(\"</li><li>\")}</li></${tag}>`;\n\t\t}\n\t},\n\n\ttoLink(url, title = \"\", rel = \"\", target = \"_blank\") {\n\t\tif (!title) {\n\t\t\tif (url.length > 50) {\n\t\t\t\ttitle = url.replace(/^\\w+:\\/\\/([^\\/]+)((\\/[^\\/\\?]+)*\\/([^\\/\\?]+)(\\?.*)?)?$/i, function(...x) {\n\t\t\t\t\tif (x[4]) {\n\t\t\t\t\t\treturn x[1] + '​/[…]/​' + x[4]; // There are invisible zero-width whitespaces after and before the slashes. It allows breaking the link in the browser. Be careful when editing.\n\t\t\t\t\t}\n\t\t\t\t\treturn x[1];\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttitle = url.replace(/^\\w+:\\/\\//i, '');\n\t\t\t}\n\t\t}\n\t\treturn `<a href=\"${_.e(url)}\" rel=\"${_.e(rel)}\" target=\"${_.e(target)}\">${_.e(title)}</a>`;\n\t},\n\n\ttoObject(obj, formatter = null, keyFormatter = null, keyOrder = [], filter = null, path = []) {\n\t\tlet html = '<dl>';\n\t\tlet keys = Array.isArray(keyOrder) && keyOrder.length >= 2 ? keyOrder : Object.keys(obj);\n\t\tfor(let key of keys) {\n\t\t\tif (!(key in obj) || (typeof filter === 'function' && path.length > 0 && !filter(path[0], path.concat([key]))) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet label;\n\t\t\tif (typeof keyFormatter === 'function') {\n\t\t\t\tlabel = keyFormatter(key, obj);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlabel = _.formatKey(key, true);\n\t\t\t}\n\t\t\tlet value = obj[key];\n\t\t\tif (typeof formatter === 'function') {\n\t\t\t\tvalue = formatter(value, key, obj);\n\t\t\t}\n\t\t\thtml += `<dt>${label}</dt><dd>${value}</dd>`;\n\t\t}\n\t\thtml += `</dl>`;\n\t\treturn html;\n\t},\n\n\tabbrev(short, long) {\n\t\treturn `<abbr title=\"${_.e(long)}\">${_.e(short)}</abbr>`;\n\t},\n\n\tisObject(obj) {\n\t\treturn (typeof obj === 'object' && obj === Object(obj) && !Array.isArray(obj));\n\t},\n\n\tformatKey(key, prefix = false) {\n\t\tif (key.includes('/')) {\n\t\t\t// Slashes are strong indicators for URIs or media types, don't format\n\t\t\treturn _.e(_.t(key));\n\t\t}\n\t\tif (prefix === false) {\n\t\t\tkey = key.replace(/^[\\w-]+:/i, '');\n\t\t}\n\t\tlet formatted = key.split(/[:_\\-\\s]/g).map(part => part.substr(0, 1).toUpperCase() + part.substr(1)).join(' ');\n\t\treturn _.e(_.t(formatted));\n\t},\n\n\thexToUint8(hexString) {\n\t\tif(hexString.length === 0 || hexString.length % 2 !== 0){\n\t\t\tthrow new Error(`The string \"${hexString}\" is not valid hex.`);\n\t\t}\n\t\treturn new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n\t},\n\n\tuint8ToHex(bytes) {\n\t\treturn bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n\t},\n\n\tkeysFromListOfObjects(objectList) {\n\t\treturn objectList.reduce(\n\t\t\t(arr, o) => Object.keys(o).reduce(\n\t\t\t\t(a, k) => {\n\t\t\t\t\tif (a.indexOf(k) == -1) {\n\t\t\t\t\t\ta.push(k);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t},\n\t\t\t\tarr\n\t\t\t),\n\t\t\t[]\n\t\t);\n\t},\n\n\tunit(value, unit = '') {\n\t\tif (typeof unit === 'string' && unit.length > 0) {\n\t\t\tunit = _.t(unit);\n\t\t\treturn `${value}&nbsp;<span class=\"unit\">${unit}</unit>`;\n\t\t}\n\t\treturn value;\n\t}\n\n};\n\nmodule.exports = _;"],"names":["Defaults","collatorOptions","numberFormatterOptions","maximumFractionDigits","dateFormatterOptions","day","month","year","dateTimeFormatterOptions","hour","minute","second","timeZone","timeZoneName","I18N","locales","collator","Intl","Collator","dateFormatter","DateTimeFormat","dateTimeFormatter","numberFormatter","NumberFormat","translate","getDefaults","setLocales","this","Object","assign","setTranslator","fn","format","value","vars","key","replaceAll","module","exports","_","DataTypes","array","arr","sort","unit","toList","v","object","obj","toObject","label","t","toNothing","number","num","parseFloat","string","str","e","replace","boolean","bool","Array","isArray","isObject","null","Registry","Formatters","allowHtmlInCommonMark","formatUrl","field","spec","context","parent","title","toLink","rel","formatLink","href","formatMediaType","_formatMediaType","short","Boolean","shorten","mediaType","getDependency","media","parse","error","console","warn","type","parameters","application","profile","edition","trim","group","split","formatKey","formatTimestamp","Date","formatPercent0to1","formatDate","formatDuration","lib","isoDuration","en","fallbackLocale","formatted","humanize","length","formatLanguageCode","list","code","rest","name","join","formatLicense","match","licenses","links","filter","link","formatProviders","provider","roles","description","url","map","r","formatCommonMark","commonmark","html","reader","Parser","writer","HtmlRenderer","safe","smart","render","formatSoftware","software","version","push","formatDOI","formatCRS","formatCrsCode","authority","toUpperCase","toLowerCase","formatEPSG","formatExtent","formatHexColor","startsWith","substring","formatPROJJSON","id","formatTemporalExtent","d","start","end","base","formatRange","formatTemporalExtents","sortExtents","a","b","compare","formatWKT2","indent","keyword","tabs","repeat","fileSizeUnits","formatFileSize","i","Math","floor","log","pow","toFixed","formatChecksum","multihash","meta","decode","hexToUint8","hex","uint8ToHex","digest","fileDataTypes","formatFileDataType","abbrev","formatTransform","rows","chunk","slice","formatCSV","formatShape","x","numeric","undefined","find","formatImage","src","formatPhone","formatEmail","formatConcepts","concept","formatAddress","address","lines","deliveryPoint","postalCode","city","line","administrativeArea","country","formatGridCode","splitHalf","parts","labelA","labelB","len","mid","designator","utm","band","sq","coord","_abbrev","quad","substr","quarter","zone","quadkey","dggs","components","level","rowcol","fractions","n","String","formatter","ordered","tag","target","keyFormatter","keyOrder","path","keys","concat","long","prefix","includes","part","hexString","Error","Uint8Array","byte","parseInt","bytes","reduce","toString","padStart","keysFromListOfObjects","objectList","o","k","indexOf"],"sourceRoot":""}
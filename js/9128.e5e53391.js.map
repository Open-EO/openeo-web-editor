{"version":3,"file":"js/9128.e5e53391.js","mappings":"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","sources":["webpack://@openeo/web-editor/./src/components/modals/ImportProcessModal.vue","webpack://@openeo/web-editor/src/components/modals/ImportProcessModal.vue","webpack://@openeo/web-editor/./src/components/modals/ImportProcessModal.vue?a4d1","webpack://@openeo/web-editor/./src/components/modals/ImportProcessModal.vue?6dd4"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Modal',{attrs:{\"show\":_vm.show,\"title\":\"Import process from external source\",\"submitFunction\":_vm.submit},on:{\"closed\":function($event){return _vm.$emit('closed')}},scopedSlots:_vm._u([{key:\"default\",fn:function(){return [_c('div',{staticClass:\"content\"},[_vm._v(\" You can load an external process from multiple different sources: \"),_c('h3',[_vm._v(\"Upload JSON file from your computer\")]),_c('form',{on:{\"submit\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.uploadFile.apply(null, arguments)}}},[_c('input',{attrs:{\"type\":\"file\",\"name\":\"file\",\"accept\":\"application/json\"},on:{\"change\":_vm.setFile}}),_vm._v(\" \"),_c('button',{attrs:{\"disabled\":!_vm.hasFile}},[_vm._v(\"Upload\")])]),_c('h3',[_vm._v(\"Download JSON file from the internet\")]),_c('form',{on:{\"submit\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.loadUrl.apply(null, arguments)}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.url),expression:\"url\"}],attrs:{\"type\":\"url\",\"name\":\"url\"},domProps:{\"value\":(_vm.url)},on:{\"input\":function($event){if($event.target.composing)return;_vm.url=$event.target.value}}}),_vm._v(\" \"),_c('button',{attrs:{\"disabled\":!_vm.hasUrl}},[_vm._v(\"Load\")])]),(_vm.gh.length > 0)?[_c('h3',[_vm._v(\"Examples from openEO processes repository\")]),_c('ul',_vm._l((_vm.gh),function(file){return _c('li',{key:file.name},[_c('a',{on:{\"click\":function($event){return _vm.request(file.url)}}},[_vm._v(_vm._s(file.name))])])}),0)]:_vm._e(),_c('h3',[_vm._v(\"Import from client libraries (Python and R)\")]),_c('p',[_vm._v(\" You can also import processes generated by the Python and R client.\"),_c('br'),_vm._v(\" Please read the chapter \\\"\"),_c('a',{attrs:{\"href\":\"https://openeo.org/documentation/1.0/cookbook/#output-process-as-json\",\"target\":\"_blank\"}},[_vm._v(\"Output: Process as JSON\")]),_vm._v(\"\\\" in the openEO cookbook.\"),_c('br'),_vm._v(\" After storing the JSON file to your computer, you can upload the JSON file above. \")])],2)]},proxy:true},{key:\"footer\",fn:function(){return [_c('div',{staticClass:\"footer\"},[_c('button',{attrs:{\"type\":\"submit\",\"disabled\":!_vm.process}},[_vm._v(\" Import \"),(_vm.processId === null)?[_vm._v(\"unnamed process\")]:(_vm.processId)?_c('code',[_vm._v(_vm._s(_vm.processId))]):_vm._e()],2)])]},proxy:true}])})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<Modal :show=\"show\" title=\"Import process from external source\" @closed=\"$emit('closed')\" :submitFunction=\"submit\">\n\t\t<template #default>\n\t\t\t<div class=\"content\">\n\t\t\t\tYou can load an external process from multiple different sources:\n\t\t\t\t<h3>Upload JSON file from your computer</h3>\n\t\t\t\t<form @submit.prevent.stop=\"uploadFile\">\n\t\t\t\t\t<input type=\"file\" name=\"file\" @change=\"setFile\" accept=\"application/json\" /> <button :disabled=\"!hasFile\">Upload</button>\n\t\t\t\t</form>\n\t\t\t\t<h3>Download JSON file from the internet</h3>\n\t\t\t\t<form @submit.prevent.stop=\"loadUrl\">\n\t\t\t\t\t<input type=\"url\" name=\"url\" v-model=\"url\" /> <button :disabled=\"!hasUrl\">Load</button>\n\t\t\t\t</form>\n\t\t\t\t<template v-if=\"gh.length > 0\">\n\t\t\t\t\t<h3>Examples from openEO processes repository</h3>\n\t\t\t\t\t<!-- ToDo: Show multiselect component instead -->\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li v-for=\"file in gh\" :key=\"file.name\"><a @click=\"request(file.url)\">{{ file.name }}</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</template>\n\t\t\t\t<h3>Import from client libraries (Python and R)</h3>\n\t\t\t\t<p>\n\t\t\t\t\tYou can also import processes generated by the Python and R client.<br />\n\t\t\t\t\tPlease read the chapter \"<a href=\"https://openeo.org/documentation/1.0/cookbook/#output-process-as-json\" target=\"_blank\">Output: Process as JSON</a>\" in the openEO cookbook.<br />\n\t\t\t\t\tAfter storing the JSON file to your computer, you can upload the JSON file above.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</template>\n\t\t<template #footer>\n\t\t\t<div class=\"footer\">\n\t\t\t\t<button type=\"submit\" :disabled=\"!process\">\n\t\t\t\t\tImport\n\t\t\t\t\t<template v-if=\"processId === null\">unnamed process</template>\n\t\t\t\t\t<code v-else-if=\"processId\">{{ processId }}</code>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</template>\n\t</Modal>\n</template>\n\n<script>\nimport Utils from '../../utils';\nimport Modal from './Modal.vue';\n\nexport default {\n\tname: 'ImportProcessModal',\n\tcomponents: {\n\t\tModal\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tgh: [],\n\t\t\tprocess: null,\n\t\t\turl: null,\n\t\t\tfile: null,\n\t\t\tshow: true\n\t\t};\n\t},\n\tasync created() {\n\t\tif (this.$config.importCommunityExamples) {\n\t\t\ttry {\n\t\t\t\t// Get folders from repo and find the processes folder\n\t\t\t\tlet response = await axios('https://api.github.com/repos/Open-EO/openeo-community-examples/git/trees/main');\n\t\t\t\tlet folder = response.data.tree.find(file => file.path === 'processes');\n\t\t\t\tif (folder) {\n\t\t\t\t\t// Get files in the folder\n\t\t\t\t\tlet response2 = await axios(folder.url);\n\t\t\t\t\tthis.gh = response2.data.tree\n\t\t\t\t\t\t.filter(file => file.path.endsWith('.json'))\n\t\t\t\t\t\t.map(file => ({\n\t\t\t\t\t\t\tname: file.path.substring(0, file.path.length-5),\n\t\t\t\t\t\t\turl: `https://raw.githubusercontent.com/Open-EO/openeo-community-examples/main/processes/${file.path}`\n\t\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t} catch(error) {\n\t\t\t\tconsole.warn(error);\n\t\t\t}\n\t\t}\n\t},\n\tcomputed: {\n\t\tprocessId() {\n\t\t\tif (Utils.isObject(this.process)) {\n\t\t\t\tif (this.process.id) {\n\t\t\t\t\treturn this.process.id;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t},\n\t\thasUrl() {\n\t\t\treturn Utils.isUrl(this.url);\n\t\t},\n\t\thasFile() {\n\t\t\treturn !!this.file;\n\t\t}\n\t},\n\tmethods: {\n\t\tcheckProcess(data) {\n\t\t\tif (typeof data === 'string') {\n\t\t\t\ttry {\n\t\t\t\t\tdata = JSON.parse(data);\n\t\t\t\t} catch(error) {\n\t\t\t\t\tthrow new Error('Process is not valid JSON');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!Utils.isObject(data)) {\n\t\t\t\tthrow new Error('Process does not contain any data');\n\t\t\t}\n\t\t\tif (!Utils.isObject(data.process_graph)) {\n\t\t\t\tthrow new Error('Process does not contain a process graph');\n\t\t\t}\n\t\t\treturn data;\n\t\t},\n\t\tsetFile(event) {\n\t\t\tif (event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files.length > 0) {\n\t\t\t\tthis.file = event.dataTransfer.files[0];\n\t\t\t}\n\t\t\telse if (event.target && event.target.files && event.target.files.length > 0){\n\t\t\t\tthis.file = event.target.files[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.file = null;\n\t\t\t}\n\t\t},\n\t\tuploadFile() {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = async e => {\n\t\t\t\ttry {\n\t\t\t\t\tthis.process = this.checkProcess(e.target.result);\n\t\t\t\t} catch(error) {\n\t\t\t\t\tUtils.exception(this, error, \"Upload failed\");\n\t\t\t\t}\n\t\t\t};\n\t\t\treader.onerror = error => Utils.exception(this, error, \"Reading JSON file failed\");\n\t\t\treader.readAsText(this.file, \"UTF-8\");\n\t\t},\n\t\tloadUrl() {\n\t\t\tthis.request(this.url);\n\t\t},\n\t\tasync request(url) {\n\t\t\ttry {\n\t\t\t\tif (!Utils.isUrl(url)) {\n\t\t\t\t\tthrow new Error('Please provide a valid URL');\n\t\t\t\t}\n\t\t\t\tlet response = await axios(url);\n\t\t\t\tthis.process = this.checkProcess(response.data);\n\t\t\t} catch(error) {\n\t\t\t\tUtils.exception(this, error, \"Download failed\");\n\t\t\t}\n\t\t},\n\t\tsubmit() {\n\t\t\tif (!this.process) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.$emit('save', this.process);\n\t\t\tthis.show = false;\n\t\t},\n\t}\n}\n</script>\n\n<style scoped lang=\"scss\">\nh3 {\n\tmargin-top: 1.5em;\n\tmargin-bottom: 0.5em;\n}\nform {\n\tdisplay: flex;\n\tinput {\n\t\tflex-grow: 1;\n\t}\n\tbutton {\n\t\tmin-width: 8em;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ImportProcessModal.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ImportProcessModal.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ImportProcessModal.vue?vue&type=template&id=4df64026&scoped=true\"\nimport script from \"./ImportProcessModal.vue?vue&type=script&lang=js\"\nexport * from \"./ImportProcessModal.vue?vue&type=script&lang=js\"\nimport style0 from \"./ImportProcessModal.vue?vue&type=style&index=0&id=4df64026&prod&scoped=true&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4df64026\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","show","submit","on","$event","$emit","scopedSlots","_u","key","fn","staticClass","_v","preventDefault","stopPropagation","uploadFile","apply","arguments","setFile","hasFile","loadUrl","directives","name","rawName","value","url","expression","domProps","target","composing","hasUrl","gh","length","_l","file","request","_s","_e","proxy","process","processId","staticRenderFns","components","Modal","data","created","$config","importCommunityExamples","response","axios","folder","tree","find","path","response2","filter","endsWith","map","substring","error","console","warn","computed","Utils","isObject","id","isUrl","methods","checkProcess","JSON","parse","Error","process_graph","event","dataTransfer","files","reader","FileReader","onload","e","result","exception","onerror","readAsText","component"],"sourceRoot":""}
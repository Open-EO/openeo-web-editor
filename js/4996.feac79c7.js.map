{"version":3,"file":"js/4996.feac79c7.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/proj4/lib/global.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/values.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/units.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/match.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projString.js","webpack://@openeo/web-editor/./node_modules/wkt-parser/parser.js","webpack://@openeo/web-editor/./node_modules/wkt-parser/process.js","webpack://@openeo/web-editor/./node_modules/wkt-parser/index.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/defs.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/parseCode.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/extend.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/msfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/sign.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_lon.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/tsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/phi2z.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/merc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/longlat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/deriveConstants.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/Datum.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datum.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/nadgrid.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/Proj.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datumUtils.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datum_transform.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/adjust_axis.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/toPoint.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/checkSanity.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/transform.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/core.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/Point.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_enfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/tmerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/sinh.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/hypot.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/log1py.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/asinhy.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/gatg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/clens.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/cosh.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/etmerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_zone.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/utm.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/srat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/gauss.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/sterea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/stere.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/somerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/omerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/lcc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/krovak.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e0fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e1fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e2fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e3fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/gN.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_lat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/imlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/cass.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/qsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/laea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/asinz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/aea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/gnom.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/iqsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/cea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/poly.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/nzmg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/mill.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/sinu.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/moll.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqdc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/vandg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/aeqd.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/ortho.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/qsc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/robin.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/geocent.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/tpers.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/geos.js","webpack://@openeo/web-editor/./node_modules/proj4/projs.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/index.js","webpack://@openeo/web-editor/./src/components/maps/projManager.js"],"sourcesContent":["export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && wkt.projName === 'Polar_Stereographic') {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.militargeographische_institut = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Militar-Geographische Institut\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import proj4 from 'proj4';\nimport { get as getProjection, transformExtent } from 'ol/proj';\nimport Projection from 'ol/proj/Projection';\nimport { register } from 'ol/proj/proj4';\n\nimport Utils from '../../utils';\n\nexport default class ProjManager {\n\n\tstatic async get(data) {\n\t\tif (data instanceof Projection) {\n\t\t\treturn data;\n\t\t}\n\n\t\treturn await ProjManager._load(data);\n\t}\n\n\tstatic add(code, meta, extent) {\n\t\ttry {\n\t\t\tproj4.defs(code, meta);\n\t\t\tregister(proj4);\n\t\t\tlet projection = getProjection(code);\n\t\t\tif (Array.isArray(extent)) {\n\t\t\t\textent = transformExtent(extent, 'EPSG:4326', projection);\n\t\t\t\tprojection.setExtent(extent);\n\t\t\t}\n\t\t\tif (meta.includes('+datum=WGS84')) {\n\t\t\t\tprojection.basemap = true;\n\t\t\t}\n\t\t\treturn projection;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Get projection details from STAC (todo: add collection support)\n\tstatic async addFromStac(stac) {\n\t\tif (Utils.isObject(stac) && Utils.isObject(stac.properties)) {\n\t\t\tif (stac.properties['proj:epsg']) {\n\t\t\t\treturn await ProjManager.get(stac.properties['proj:epsg']);\n\t\t\t}\n\t\t\telse if (stac.properties['proj:wkt2']) {\n\t\t\t\treturn ProjManager.add(stac.id, stac.properties['proj:wkt2']);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tstatic async _load(crs) {\n\t\tlet code, id;\n\t\tif (typeof crs === 'string' && crs.match(/^EPSG:\\d+$/i)) {\n\t\t\tcode = crs.toUpperCase();\n\t\t\tid = crs.substr(5);\n\t\t}\n\t\telse if (Number.isInteger(crs)) {\n\t\t\tcode = `EPSG:${crs}`\n\t\t\tid = String(crs);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Get projection from cache\n\t\tlet projection = getProjection(code);\n\t\tif (projection) {\n\t\t\treturn projection;\n\t\t}\n\n\t\t// Get projection from database\n\t\tlet proj = await import('../../assets/epsg-proj.json');\n\t\tif (id in proj) {\n\t\t\treturn ProjManager.add(code, proj[id][0], proj[id][1]);\n\t\t}\n\n\t\t// No projection found\n\t\treturn null;\n\t}\n\n}"],"names":["defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","ft","to_meter","ignoredChar","match","obj","key","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","i","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","this","level","place","root","stack","currentObject","state","parseString","txt","parser","output","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","rename","outName","inName","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","AXIS","axisOrder","ii","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ratio","slice","sphere","ellps","TOWGS84","isFinite","renamer","list","forEach","lisp","that","arguments","def","charAt","apply","EPSG","ESRI","IAU2000","console","log","global","testObj","code","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","init","es","e","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","n","get","start","ellipseName","eccentricity","a2","b2","ep2","ellipse","datum_type","grids","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","militargeographische_institut","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","loadedNadgrids","nadgrid","data","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","getNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","nFields","getInt32","warn","nSubgridFields","nSubgrids","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","ll","del","lim","count","gridNodeCount","cvs","mapNodes","r","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","sphere_","ecc","datumObj","extend","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","Number","NaN","attemptedGrids","outer","j","jj","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","tol","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","checkNotWGS","transform","enforceAxis","toPoint","hasZ","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","Point","fromMGRS","mgrsStr","toMGRS","accuracy","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","hr","hr1","hr2","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hi1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","C","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","A","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","I","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","D","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","T","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e1","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","M","N1","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","mu","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","COEFS_X","COEFS_Y","FXC","FYC","C1","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","Proj","utm","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","defaultDatum","mgrs","version","ProjManager","_load","meta","extent","register","projection","getProjection","transformExtent","setExtent","includes","basemap","addFromStac","stac","Utils","isObject","properties","id","toUpperCase","isInteger"],"sourceRoot":""}
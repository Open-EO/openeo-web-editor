{"version":3,"file":"js/1323.601a8802.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/ol/expr/cpu.js","webpack://@openeo/web-editor/./node_modules/ol/events/Event.js","webpack://@openeo/web-editor/./node_modules/ol/events/EventType.js","webpack://@openeo/web-editor/./node_modules/ol/events.js","webpack://@openeo/web-editor/./node_modules/ol/control/Control.js","webpack://@openeo/web-editor/./node_modules/ol/expr/gpu.js","webpack://@openeo/web-editor/./node_modules/ol/featureloader.js","webpack://@openeo/web-editor/./node_modules/ol/css.js","webpack://@openeo/web-editor/./node_modules/ol/events/Key.js","webpack://@openeo/web-editor/./node_modules/ol/format/Feature.js","webpack://@openeo/web-editor/./node_modules/ol/format/JSONFeature.js","webpack://@openeo/web-editor/./node_modules/ol/format/GeoJSON.js","webpack://@openeo/web-editor/./node_modules/ol/control/ScaleLine.js","webpack://@openeo/web-editor/./node_modules/ol/expr/expression.js","webpack://@openeo/web-editor/./node_modules/ol/control/FullScreen.js","webpack://@openeo/web-editor/./node_modules/ol/events/condition.js","webpack://@openeo/web-editor/./node_modules/ol/array.js","webpack://@openeo/web-editor/./node_modules/ol/dom.js","webpack://@openeo/web-editor/./node_modules/ol/centerconstraint.js","webpack://@openeo/web-editor/./node_modules/ol/colorlike.js","webpack://@openeo/web-editor/./node_modules/ol/events/Target.js","webpack://@openeo/web-editor/./node_modules/ol/control/Attribution.js","webpack://@openeo/web-editor/./node_modules/ol/control/Rotate.js","webpack://@openeo/web-editor/./node_modules/ol/control/Zoom.js","webpack://@openeo/web-editor/./node_modules/ol/control/defaults.js","webpack://@openeo/web-editor/./node_modules/ol/color.js","webpack://@openeo/web-editor/./node_modules/ol/asserts.js","webpack://@openeo/web-editor/./node_modules/ol/easing.js"],"sourcesContent":["/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/expr/gpu\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {\n  BooleanType,\n  CallExpression,\n  ColorType,\n  NoneType,\n  NumberArrayType,\n  NumberType,\n  Ops,\n  SizeType,\n  StringType,\n  computeGeometryType,\n  isType,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {string} operator Operator\n * @param {CompilationContext} context Compilation context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.',\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/**\n * Normalizes and converts a number or array toa `vec2` array compatible with GLSL.\n * @param {number|import('../size.js').Size} size Size.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function sizeToGlsl(size) {\n  const array = toSize(size);\n  return arrayToGlsl(array);\n}\n\n/** @type {Object<string, number>} */\nconst stringToFloatMap = {};\nlet stringToFloatCounter = 0;\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(string) {\n  if (!(string in stringToFloatMap)) {\n    stringToFloatMap[string] = stringToFloatCounter++;\n  }\n  return stringToFloatMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * Note: with a float precision of `mediump`, the amount of unique strings supported is 16,777,216\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(string) {\n  return numberToGlsl(getStringNumberEquivalent(string));\n}\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\n/**\n * @typedef {import('./expression.js').ParsingContext} ParsingContext\n */\n/**\n *\n * @typedef {import(\"./expression.js\").Expression} Expression\n */\n/**\n *\n * @typedef {import(\"./expression.js\").LiteralExpression} LiteralExpression\n */\n\n/**\n * @typedef {Object} CompilationContextProperty\n * @property {string} name Name\n * @property {number} type Resolved property type\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [evaluator] Function used for evaluating the value;\n */\n\n/**\n * @typedef {Object} CompilationContextVariable\n * @property {string} name Name\n * @property {number} type Resolved variable type\n * @property {function(Object): *} [evaluator] Function used for evaluating the value; argument is the style variables object\n */\n\n/**\n * @typedef {Object} CompilationContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Object<string, CompilationContextProperty>} properties The values for properties used in 'get' expressions.\n * @property {Object<string, CompilationContextVariable>} variables The values for variables used in 'var' expressions.\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n */\n\n/**\n * @return {CompilationContext} A new compilation context.\n */\nexport function newCompilationContext() {\n  return {\n    inFragmentShader: false,\n    variables: {},\n    properties: {},\n    functions: {},\n    bandCount: 0,\n    style: {},\n  };\n}\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n/**\n * @typedef {string} CompiledExpression\n */\n\n/**\n * @typedef {function(CompilationContext, CallExpression, number): string} Compiler\n * Third argument is the expected value types\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} parsingContext The parsing context.\n * @param {CompilationContext} compilationContext An existing compilation context\n * @return {CompiledExpression} The compiled expression.\n */\nexport function buildExpression(\n  encoded,\n  type,\n  parsingContext,\n  compilationContext,\n) {\n  const expression = parse(encoded, parsingContext, type);\n  if (isType(expression.type, NoneType)) {\n    throw new Error(`No matching type was found`);\n  }\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compile(expression, type, compilationContext);\n}\n\n/**\n * @param {function(Array<CompiledExpression>, CompilationContext): string} output Function that takes in parsed arguments and returns a string\n * @return {function(CompilationContext, import(\"./expression.js\").CallExpression, number): string} Compiler for the call expression\n */\nfunction createCompiler(output) {\n  return (context, expression, type) => {\n    const length = expression.args.length;\n    const args = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      args[i] = compile(expression.args[i], type, context);\n    }\n    return output(args, context);\n  };\n}\n\n/**\n * @type {Object<string, Compiler>}\n */\nconst compilers = {\n  [Ops.Get]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const propName = /** @type {string} */ (firstArg.value);\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: expression.type,\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.GeometryType]: (context, expression, type) => {\n    const propName = 'geometryType';\n    const isExisting = propName in context.properties;\n    if (!isExisting) {\n      context.properties[propName] = {\n        name: propName,\n        type: StringType,\n        evaluator: (feature) => {\n          return computeGeometryType(feature.getGeometry());\n        },\n      };\n    }\n    const prefix = context.inFragmentShader ? 'v_prop_' : 'a_prop_';\n    return prefix + propName;\n  },\n  [Ops.Var]: (context, expression) => {\n    const firstArg = /** @type {LiteralExpression} */ (expression.args[0]);\n    const varName = /** @type {string} */ (firstArg.value);\n    const isExisting = varName in context.variables;\n    if (!isExisting) {\n      context.variables[varName] = {\n        name: varName,\n        type: expression.type,\n      };\n    }\n    return uniformNameForVariable(varName);\n  },\n  [Ops.Resolution]: () => 'u_resolution',\n  [Ops.Zoom]: () => 'u_zoom',\n  [Ops.Time]: () => 'u_time',\n  [Ops.Any]: createCompiler((compiledArgs) => `(${compiledArgs.join(` || `)})`),\n  [Ops.All]: createCompiler((compiledArgs) => `(${compiledArgs.join(` && `)})`),\n  [Ops.Not]: createCompiler(([value]) => `(!${value})`),\n  [Ops.Equal]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} == ${secondValue})`,\n  ),\n  [Ops.NotEqual]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} != ${secondValue})`,\n  ),\n  [Ops.GreaterThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} > ${secondValue})`,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} >= ${secondValue})`,\n  ),\n  [Ops.LessThan]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} < ${secondValue})`,\n  ),\n  [Ops.LessThanOrEqualTo]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} <= ${secondValue})`,\n  ),\n  [Ops.Multiply]: createCompiler(\n    (compiledArgs) => `(${compiledArgs.join(' * ')})`,\n  ),\n  [Ops.Divide]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} / ${secondValue})`,\n  ),\n  [Ops.Add]: createCompiler((compiledArgs) => `(${compiledArgs.join(' + ')})`),\n  [Ops.Subtract]: createCompiler(\n    ([firstValue, secondValue]) => `(${firstValue} - ${secondValue})`,\n  ),\n  [Ops.Clamp]: createCompiler(\n    ([value, min, max]) => `clamp(${value}, ${min}, ${max})`,\n  ),\n  [Ops.Mod]: createCompiler(([value, modulo]) => `mod(${value}, ${modulo})`),\n  [Ops.Pow]: createCompiler(([value, power]) => `pow(${value}, ${power})`),\n  [Ops.Abs]: createCompiler(([value]) => `abs(${value})`),\n  [Ops.Floor]: createCompiler(([value]) => `floor(${value})`),\n  [Ops.Ceil]: createCompiler(([value]) => `ceil(${value})`),\n  [Ops.Round]: createCompiler(([value]) => `floor(${value} + 0.5)`),\n  [Ops.Sin]: createCompiler(([value]) => `sin(${value})`),\n  [Ops.Cos]: createCompiler(([value]) => `cos(${value})`),\n  [Ops.Atan]: createCompiler(([firstValue, secondValue]) => {\n    return secondValue !== undefined\n      ? `atan(${firstValue}, ${secondValue})`\n      : `atan(${firstValue})`;\n  }),\n  [Ops.Sqrt]: createCompiler(([value]) => `sqrt(${value})`),\n  [Ops.Match]: createCompiler((compiledArgs) => {\n    const input = compiledArgs[0];\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 1; i -= 2) {\n      const match = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.Between]: createCompiler(\n    ([value, min, max]) => `(${value} >= ${min} && ${value} <= ${max})`,\n  ),\n  [Ops.Interpolate]: createCompiler(([exponent, input, ...compiledArgs]) => {\n    let result = '';\n    for (let i = 0; i < compiledArgs.length - 2; i += 2) {\n      const stop1 = compiledArgs[i];\n      const output1 = result || compiledArgs[i + 1];\n      const stop2 = compiledArgs[i + 2];\n      const output2 = compiledArgs[i + 3];\n      let ratio;\n      if (exponent === numberToGlsl(1)) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  }),\n  [Ops.Case]: createCompiler((compiledArgs) => {\n    const fallback = compiledArgs[compiledArgs.length - 1];\n    let result = null;\n    for (let i = compiledArgs.length - 3; i >= 0; i -= 2) {\n      const condition = compiledArgs[i];\n      const output = compiledArgs[i + 1];\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  }),\n  [Ops.In]: createCompiler(([needle, ...haystack], context) => {\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(`  if (inputValue == ${haystack[i]}) { return true; }`);\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${needle})`;\n  }),\n  [Ops.Array]: createCompiler(\n    (args) => `vec${args.length}(${args.join(', ')})`,\n  ),\n  [Ops.Color]: createCompiler((compiledArgs) => {\n    if (compiledArgs.length === 1) {\n      //grayscale\n      return `vec4(vec3(${compiledArgs[0]} / 255.0), 1.0)`;\n    }\n    if (compiledArgs.length === 2) {\n      //grayscale with alpha\n      return `(${compiledArgs[1]} * vec4(vec3(${compiledArgs[0]} / 255.0), 1.0))`;\n    }\n    const rgb = compiledArgs.slice(0, 3).map((color) => `${color} / 255.0`);\n    if (compiledArgs.length === 3) {\n      return `vec4(${rgb.join(', ')}, 1.0)`;\n    }\n    const alpha = compiledArgs[3];\n    return `(${alpha} * vec4(${rgb.join(', ')}, 1.0))`;\n  }),\n  [Ops.Band]: createCompiler(([band, xOffset, yOffset], context) => {\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `  if (band == ${i + 1}.0) {\n    return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n  }\n`;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] =\n        `float getBandValue(float band, float xOffset, float yOffset) {\n  float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n  float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n${ifBlocks}\n}`;\n    }\n\n    return `${GET_BAND_VALUE_FUNC}(${band}, ${xOffset ?? '0.0'}, ${\n      yOffset ?? '0.0'\n    })`;\n  }),\n  [Ops.Palette]: (context, expression) => {\n    const [index, ...colors] = expression.args;\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < colors.length; i++) {\n      const parsedValue = /** @type {string | Array<number>} */ (\n        /** @type {LiteralExpression} */ (colors[i]).value\n      );\n      const color = asArray(parsedValue);\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    const compiledIndex = compile(index, NumberType, context);\n    return `texture2D(${paletteName}, vec2((${compiledIndex} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n  // TODO: unimplemented\n  // Ops.Number\n  // Ops.String\n  // Ops.Coalesce\n  // Ops.Concat\n  // Ops.ToString\n};\n\n/**\n * @param {Expression} expression The expression.\n * @param {number} returnType The expected return type.\n * @param {CompilationContext} context The compilation context.\n * @return {CompiledExpression} The compiled expression\n */\nfunction compile(expression, returnType, context) {\n  // operator\n  if (expression instanceof CallExpression) {\n    const compiler = compilers[expression.operator];\n    if (compiler === undefined) {\n      throw new Error(\n        `No compiler defined for this operator: ${JSON.stringify(\n          expression.operator,\n        )}`,\n      );\n    }\n    return compiler(context, expression, returnType);\n  }\n\n  if ((expression.type & NumberType) > 0) {\n    return numberToGlsl(/** @type {number} */ (expression.value));\n  }\n\n  if ((expression.type & BooleanType) > 0) {\n    return expression.value.toString();\n  }\n\n  if ((expression.type & StringType) > 0) {\n    return stringToGlsl(expression.value.toString());\n  }\n\n  if ((expression.type & ColorType) > 0) {\n    return colorToGlsl(\n      /** @type {Array<number> | string} */ (expression.value),\n    );\n  }\n\n  if ((expression.type & NumberArrayType) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (expression.value));\n  }\n\n  if ((expression.type & SizeType) > 0) {\n    return sizeToGlsl(\n      /** @type {number|import('../size.js').Size} */ (expression.value),\n    );\n  }\n\n  throw new Error(\n    `Unexpected expression ${expression.value} (expected type ${typeName(\n      returnType,\n    )})`,\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {Feature|RenderFeature} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {T}\n     */\n    this.featureClass = /** @type {T} */ (Feature);\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import('../Feature.js').FeatureLike|FeatureClassToFeature<T>>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @extends {FeatureFormat<T>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import('./Feature.js').FeatureClassToFeature<T>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return /** @type {import('./Feature.js').FeatureClassToFeature<T>} */ (\n      this.readFeatureFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      this.readFeaturesFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {FeatureClassToFeature} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof Feature]\n * @extends {JSONFeature<T>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options,\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n * For cartesian measurements of the scaleline, you need to set the\n * `getPointResolution` method of your projection to simply return the input\n * value, e.g. `projection.setGetPointResolution(r => r);`\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n          ? 'ol-scale-bar'\n          : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits,\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 1e-6) {\n        suffix = 'nm';\n        pointResolution *= 1e9;\n      } else if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      throw new Error('Invalid units');\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>',\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm',\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(\n        typeHint === SizeType ? SizeType : NumberType,\n        encoded,\n      );\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 2) {\n    type |= SizeType;\n  } else if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 2\n        ? NumberArrayType | SizeType\n        : parsedArgs.length === 3 || parsedArgs.length === 4\n          ? NumberArrayType | ColorType\n          : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  inputType &= expectedInputType;\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context, typeHint);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context, typeHint);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this),\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n"],"names":["newEvaluationContext","variables","properties","resolution","NaN","featureId","geometryType","buildExpression","encoded","type","context","expression","expected","actual","Error","compileExpression","value","colorValue","operator","Number","String","Coalesce","compileAssertionExpression","Get","Var","compileAccessorExpression","Id","GeometryType","Concat","args","map","e","concat","arg","toString","Resolution","Any","All","Between","In","Not","compileLogicalExpression","Equal","NotEqual","LessThan","LessThanOrEqualTo","GreaterThan","GreaterThanOrEqualTo","compileComparisonExpression","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","compileNumericExpression","Case","compileCaseExpression","Match","compileMatchExpression","Interpolate","compileInterpolateExpression","ToString","compileConvertExpression","length","Array","i","nameExpression","name","op","left","right","min","max","Math","pow","abs","floor","ceil","round","sin","cos","atan2","atan","sqrt","condition","base","previousInput","previousOutput","input","output","isColor","isArray","interpolateColor","interpolateNumber","input1","output1","input2","output2","delta","along","factor","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","BaseEvent","constructor","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","listener","thisArg","once","bind","originalListener","removeEventListener","apply","arguments","eventsKey","addEventListener","listenOnce","unlistenByKey","key","Control","options","super","element","style","pointerEvents","target_","map_","listenerKeys","render","setTarget","disposeInternal","getMap","setMap","ii","getOverlayContainerStopEvent","appendChild","push","POSTRENDER","mapEvent","document","getElementById","computeOperatorFunctionName","Object","keys","functions","numberToGlsl","v","s","includes","arrayToGlsl","array","join","colorToGlsl","color","alpha","sizeToGlsl","size","stringToFloatMap","stringToFloatCounter","getStringNumberEquivalent","string","stringToGlsl","uniformNameForVariable","variableName","newCompilationContext","inFragmentShader","bandCount","GET_BAND_VALUE_FUNC","PALETTE_TEXTURE_ARRAY","parsingContext","compilationContext","compile","createCompiler","compilers","firstArg","propName","isExisting","prefix","evaluator","feature","getGeometry","varName","Zoom","Time","compiledArgs","firstValue","secondValue","modulo","power","undefined","fallback","result","match","exponent","stop1","stop2","ratio","needle","haystack","funcName","tests","Color","rgb","slice","Band","band","xOffset","yOffset","ifBlocks","colorIndex","bandIndex","textureName","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","Palette","index","colors","numColors","palette","Uint8Array","parsedValue","offset","paletteTextures","paletteName","paletteTexture","compiledIndex","returnType","compiler","JSON","stringify","withCredentials","loadFeaturesXhr","url","format","extent","projection","success","failure","xhr","XMLHttpRequest","open","getType","responseType","onload","event","status","source","responseText","responseXML","readFeatures","featureProjection","readProjection","onerror","send","features","dataProjection","addFeatures","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","split","LEFT","UP","RIGHT","DOWN","FeatureFormat","defaultFeatureProjection","featureClass","Feature","supportedMediaTypes","getReadOptions","get","getUnits","setWorldExtent","adaptOptions","assign","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","geometry","transformGeometryWithOptions","write","transformed","equivalent","clone","fromProjection","toProjection","transform","applyTransform","getTransform","decimals","coordinates","GeometryConstructor","Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","orientFlatCoordinates","flatCoordinates","ends","stride","orient","createRenderFeature","object","flat","layout","id","enableSimplifyTransformed","createGeometry","geometries","GeometryCollection","Geometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GeoJSON","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","readGeometryInternal","setGeometryName","setGeometry","setId","setProperties","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","featureObject","crs","getId","hasProperties","getProperties","getGeometryName","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geometryObject","deflate","endss","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","getGeometriesArray","getCoordinates","rightHanded","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","createElement","on","un","className","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedVisible_","renderedWidth_","renderedHTML_","addChangeListener","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","updateElement_","set","setDpi","viewState","display","center","pointResolutionUnits","pointResolution","getPointResolution","nominalCount","suffix","metersPerDegree","METERS_PER_UNIT","degrees","count","width","decimalCount","previousCount","previousWidth","previousDecimalCount","log","decimal","isNaN","html","createScaleBar","toFixed","innerHTML","scale","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","scaleBarText","position","top","isLast","lengthString","margin","inchesPerMeter","frameState","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","sort","typeName","names","namedType","includesType","broad","specific","overlapsType","oneType","otherType","isType","LiteralExpression","CallExpression","newParsingContext","Set","getTypeFromHint","typeHint","parseCallExpression","item","Ops","parsers","createParser","_","withArgsCount","withGetArgs","withVarArgs","withNoArgs","usesFeatureId","Infinity","parseArgsOfType","usesGeometryType","narrowArgsType","parsedArgs","outputType","withEvenArgs","parseMatchArgs","parseInterpolateArgs","withOddArgs","parseCaseArgs","parseInArgs","parsePaletteArgs","add","hint","initialValue","operation","minArgs","maxArgs","argCount","plural","range","argType","gotType","expectedType","sameType","argsCount","inputType","expectedInputType","interpolationType","interpolation","stop","needleType","parsedColors","argValidators","actualType","parser","computeGeometryType","substring","getGeometries","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","FullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","label","labelNode_","createTextNode","labelActive","labelActiveNode_","tipLabel","button_","title","setAttribute","handleClick_","setClassName_","handleFullScreen_","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullScreen","getTargetElement","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","wasInFullscreen","dispatchEvent","updateSize","fullscreen","classList","remove","oldMap","removeChangeListener","TARGET","listeners","body","requestFullscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","all","var_args","conditions","pass","altKeyOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","focus","targetElement","activeElement","contains","focusWithTabindex","hasAttribute","always","click","mouseActionButton","button","never","singleClick","SINGLECLICK","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerEvent","pointerType","primaryAction","isPrimary","binarySearch","comparator","mid","cmp","ascending","low","high","found","a","b","descending","linearFindNearest","arr","direction","n","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","createCanvasContext2D","height","canvasPool","settings","canvas","shift","OffscreenCanvas","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","x","y","none","asColorLike","asCanvasPattern","pattern","getPattern","src","cacheKey","canvasPattern","iconImage","getImageState","LOADED","patternCanvasContext","drawImage","getImage","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listenersForType","isString","evt","dispatching","pendingRemovals","propagate","handleEvent","call","pr","getListeners","hasListener","indexOf","splice","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","EventType","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","layer","getAttributions","some","getSource","getAttributionsCollapsible","setCollapsible","attributions","Promise","attribution","visible","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","rotation","getRotation","PI","animate","easing","setRotation","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","defaults","controls","Collection","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attributionOptions","asString","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","rgbaToLcha","lchuv","xyz","lchaToRgba","fromString","hasOwnProperty","c","normalize","asArray","r","g","isStringColor","assert","assertion","errorMessage","easeIn","t","easeOut","inAndOut","linear"],"sourceRoot":""}
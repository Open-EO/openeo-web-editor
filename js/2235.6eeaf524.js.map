{"version":3,"file":"js/2235.6eeaf524.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/ol/source/Source.js","webpack://@openeo/web-editor/./node_modules/ol/source/Tile.js","webpack://@openeo/web-editor/./node_modules/ol/source/TileEventType.js","webpack://@openeo/web-editor/./node_modules/ol/source/UrlTile.js","webpack://@openeo/web-editor/./node_modules/ol/source/TileImage.js","webpack://@openeo/web-editor/./node_modules/ol/source/Vector.js","webpack://@openeo/web-editor/./node_modules/ol/source/VectorEventType.js","webpack://@openeo/web-editor/./node_modules/ol/source/XYZ.js","webpack://@openeo/web-editor/./node_modules/ol/structs/LRUCache.js","webpack://@openeo/web-editor/./node_modules/ol/structs/PriorityQueue.js","webpack://@openeo/web-editor/./node_modules/ol/structs/RBush.js","webpack://@openeo/web-editor/./node_modules/ol/style/Circle.js","webpack://@openeo/web-editor/./node_modules/ol/style/Fill.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconOrigin.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconImage.js","webpack://@openeo/web-editor/./node_modules/ol/style/Icon.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconAnchorUnits.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconImageCache.js","webpack://@openeo/web-editor/./node_modules/ol/style/Image.js","webpack://@openeo/web-editor/./node_modules/ol/style/RegularShape.js","webpack://@openeo/web-editor/./node_modules/ol/style/Stroke.js","webpack://@openeo/web-editor/./node_modules/ol/style/Style.js","webpack://@openeo/web-editor/./node_modules/ol/style/TextPlacement.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|null}\n         */\n        _this.projection = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./Source.js\").State}\n         */\n        _this.state_ = options.state !== undefined ? options.state : 'ready';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.interpolate_ = !!options.interpolate;\n        /**\n         * @protected\n         * @type {function(import(\"../View.js\").ViewOptions):void}\n         */\n        _this.viewResolver = null;\n        /**\n         * @protected\n         * @type {function(Error):void}\n         */\n        _this.viewRejector = null;\n        var self = _this;\n        /**\n         * @private\n         * @type {Promise<import(\"../View.js\").ViewOptions>}\n         */\n        _this.viewPromise_ = new Promise(function (resolve, reject) {\n            self.viewResolver = resolve;\n            self.viewRejector = reject;\n        });\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     * @api\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     * @api\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default|null} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|null} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n     */\n    Source.prototype.getView = function () {\n        return this.viewPromise_;\n    };\n    /**\n     * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n     * @return {import(\"./Source.js\").State} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {boolean} Use linear interpolation when resampling.\n     */\n    Source.prototype.getInterpolate = function () {\n        return this.interpolate_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./Source.js\").State} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n            interpolate: options.interpolate,\n        }) || this;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {TileSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        if (_this.tileGrid) {\n            toSize(_this.tileGrid.getTileSize(_this.tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = {\n            transition: options.transition,\n            interpolate: options.interpolate,\n        };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number|import(\"../array.js\").NearestDirectionFunction}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>|null} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        if (!this.tileGrid) {\n            return null;\n        }\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var sourceProjection = this.getProjection();\n        assert(sourceProjection === null || equivalent(sourceProjection, projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: options.interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string} [key] Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileImage.prototype.getKey = function () {\n        var key = _super.prototype.getKey.call(this);\n        if (!this.getInterpolate()) {\n            key += ':disable-interpolation';\n        }\n        return key;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] =\n                    getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!ImageTile} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.getInterpolate());\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n        src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals, wrapAndSliceX } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            interpolate: true,\n            projection: undefined,\n            state: 'ready',\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features =\n                /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n        }\n        else if (options.features) {\n            collection =\n                /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        if (this.hasListener(VectorEventType.ADDFEATURE)) {\n            for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n                this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n            }\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                var removeAndIgnoreReturn = function (feature) {\n                    this.removeFeatureInternal(feature);\n                }.bind(this);\n                this.featuresRtree_.forEach(removeAndIgnoreReturn);\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection~Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Include features\n     * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent, opt_projection) {\n        var _this = this;\n        if (this.featuresRtree_) {\n            var multiWorld = opt_projection && opt_projection.canWrapX() && this.getWrapX();\n            if (!multiWorld) {\n                return this.featuresRtree_.getInExtent(extent);\n            }\n            var extents = wrapAndSliceX(extent, opt_projection);\n            return [].concat.apply([], extents.map(function (anExtent) { return _this.featuresRtree_.getInExtent(anExtent); }));\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        if (this.featuresRtree_) {\n            return (this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_));\n        }\n        if (this.featuresCollection_) {\n            return this.featuresCollection_.getLength() === 0;\n        }\n        return true;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution, projection);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        if (!feature) {\n            return;\n        }\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        var result = this.removeFeatureInternal(feature);\n        if (result) {\n            this.changed();\n        }\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n     *     (or undefined if the feature was not found).\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        var featureChangeKeys = this.featureChangeKeys_[featureKey];\n        if (!featureChangeKeys) {\n            return;\n        }\n        featureChangeKeys.forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n        return feature;\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        return _this;\n    }\n    /**\n     * @return {number} Gutter.\n     */\n    XYZ.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number} [opt_highWaterMark] High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * Expire the cache.\n     * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n     */\n    LRUCache.prototype.expireCache = function (keep) {\n        while (this.canExpireCache()) {\n            this.pop();\n        }\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*} [opt_options] Options (reserved for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * Return an entry without updating least recently used time.\n     * @param {string} key Key.\n     * @return {T} Value.\n     */\n    LRUCache.prototype.peek = function (key) {\n        if (!this.containsKey(key)) {\n            return undefined;\n        }\n        return this.entries_[key].value_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number} [opt_maxEntries] Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function CircleStyle(opt_options) {\n        var options = opt_options ? opt_options : {};\n        return _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            declutterMode: options.declutterMode,\n        }) || this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ ||\n            this.canvas_[pixelRatio] ||\n            this.imageState_ !== ImageState.LOADED) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n            declutterMode: options.declutterMode,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size|undefined}\n         */\n        _this.imgSize_ = options.imgSize;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && _this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            crossOrigin: this.crossOrigin_,\n            imgSize: this.imgSize_,\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            opacity: this.getOpacity(),\n            rotateWithView: this.getRotateWithView(),\n            rotation: this.getRotation(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            src: this.getSrc(),\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        var anchor = this.normalizedAnchor_;\n        if (!anchor) {\n            anchor = this.anchor_;\n            var size = this.getSize();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n                this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                if (!size) {\n                    return null;\n                }\n                anchor = this.anchor_.slice();\n                if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[0] *= size[0];\n                }\n                if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[1] *= size[1];\n                }\n            }\n            if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n                if (!size) {\n                    return null;\n                }\n                if (anchor === this.anchor_) {\n                    anchor = this.anchor_.slice();\n                }\n                if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[0] = -anchor[0] + size[0];\n                }\n                if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[1] = -anchor[1] + size[1];\n                }\n            }\n            this.normalizedAnchor_ = anchor;\n        }\n        var displacement = this.getDisplacement();\n        return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n        /**\n         * @private\n         * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n         */\n        this.declutterMode_ = options.declutterMode;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the declutter mode of the shape\n     * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n     * @api\n     */\n    ImageStyle.prototype.getDeclutterMode = function () {\n        return this.declutterMode_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the displacement.\n     *\n     * @param {Array<number>} displacement Displacement.\n     * @api\n     */\n    ImageStyle.prototype.setDisplacement = function (displacement) {\n        this.displacement_ = displacement;\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            declutterMode: options.declutterMode,\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = undefined;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {RenderOptions}\n         */\n        _this.renderOptions_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        var size = this.size_;\n        if (!size) {\n            return null;\n        }\n        var displacement = this.getDisplacement();\n        return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    RegularShape.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n        this.render();\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            this.createHitDetectionCanvas_(this.renderOptions_);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        var image = this.canvas_[pixelRatio];\n        if (!image) {\n            var renderOptions = this.renderOptions_;\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio, renderOptions.size * pixelRatio);\n            this.draw_(renderOptions, context, pixelRatio);\n            image = context.canvas;\n            this.canvas_[pixelRatio] = image;\n        }\n        return image;\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    RegularShape.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n        this.render();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * Calculate additional canvas size needed for the miter.\n     * @param {string} lineJoin Line join\n     * @param {number} strokeWidth Stroke width\n     * @param {number} miterLimit Miter limit\n     * @return {number} Additional canvas size needed\n     * @private\n     */\n    RegularShape.prototype.calculateLineJoinSize_ = function (lineJoin, strokeWidth, miterLimit) {\n        if (strokeWidth === 0 ||\n            this.points_ === Infinity ||\n            (lineJoin !== 'bevel' && lineJoin !== 'miter')) {\n            return strokeWidth;\n        }\n        // m  | ^\n        // i  | |\\                  .\n        // t >|  #\\\n        // e  | |\\ \\              .\n        // r      \\s\\\n        //      |  \\t\\          .                 .\n        //          \\r\\                      .   .\n        //      |    \\o\\      .          .  . . .\n        //          e \\k\\            .  .    . .\n        //      |      \\e\\  .    .  .       . .\n        //       d      \\ \\  .  .          . .\n        //      | _ _a_ _\\#  .            . .\n        //   r1          / `             . .\n        //      |                       . .\n        //       b     /               . .\n        //      |                     . .\n        //           / r2            . .\n        //      |                        .   .\n        //         /                           .   .\n        //      |α                                   .   .\n        //       /                                         .   .\n        //      ° center\n        var r1 = this.radius_;\n        var r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n        if (r1 < r2) {\n            var tmp = r1;\n            r1 = r2;\n            r2 = tmp;\n        }\n        var points = this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n        var alpha = (2 * Math.PI) / points;\n        var a = r2 * Math.sin(alpha);\n        var b = Math.sqrt(r2 * r2 - a * a);\n        var d = r1 - b;\n        var e = Math.sqrt(a * a + d * d);\n        var miterRatio = e / a;\n        if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n            return miterRatio * strokeWidth;\n        }\n        // Calculate the distnce from center to the stroke corner where\n        // it was cut short because of the miter limit.\n        //              l\n        //        ----+---- <= distance from center to here is maxr\n        //       /####|k ##\\\n        //      /#####^#####\\\n        //     /#### /+\\# s #\\\n        //    /### h/+++\\# t #\\\n        //   /### t/+++++\\# r #\\\n        //  /### a/+++++++\\# o #\\\n        // /### p/++ fill +\\# k #\\\n        ///#### /+++++^+++++\\# e #\\\n        //#####/+++++/+\\+++++\\#####\\\n        var k = strokeWidth / 2 / miterRatio;\n        var l = (strokeWidth / 2) * (d / e);\n        var maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n        var bevelAdd = maxr - r1;\n        if (this.radius2_ === undefined || lineJoin === 'bevel') {\n            return bevelAdd * 2;\n        }\n        // If outer miter is over the miter limit the inner miter may reach through the\n        // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n        var aa = r1 * Math.sin(alpha);\n        var bb = Math.sqrt(r1 * r1 - aa * aa);\n        var dd = r2 - bb;\n        var ee = Math.sqrt(aa * aa + dd * dd);\n        var innerMiterRatio = ee / aa;\n        if (innerMiterRatio <= miterLimit) {\n            var innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n            return 2 * Math.max(bevelAdd, innerLength);\n        }\n        return bevelAdd * 2;\n    };\n    /**\n     * @return {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n        var maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n        var size = Math.ceil(2 * maxRadius + add);\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        this.renderOptions_ = this.createRenderOptions();\n        var size = this.renderOptions_.size;\n        this.canvas_ = {};\n        this.size_ = [size, size];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, pixelRatio) {\n        context.scale(pixelRatio, pixelRatio);\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context);\n            }\n        }\n        if (!this.hitDetectionCanvas_) {\n            this.hitDetectionCanvas_ = this.getImage(1);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context The context to draw in.\n     */\n    RegularShape.prototype.createPath_ = function (context) {\n        var points = this.points_;\n        var radius = this.radius_;\n        if (points === Infinity) {\n            context.arc(0, 0, radius, 0, 2 * Math.PI);\n        }\n        else {\n            var radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n            if (this.radius2_ !== undefined) {\n                points *= 2;\n            }\n            var startAngle = this.angle_ - Math.PI / 2;\n            var step = (2 * Math.PI) / points;\n            for (var i = 0; i < points; i++) {\n                var angle0 = startAngle + i * step;\n                var radiusC = i % 2 === 0 ? radius : radius2;\n                context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n            }\n            context.closePath();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context) {\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.hitDetectionRenderer_ =\n            options.hitDetectionRenderer !== undefined\n                ? options.hitDetectionRenderer\n                : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            renderer: this.getRenderer(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Sets a custom renderer function for this style used\n     * in hit detection.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setHitDetectionRenderer = function (renderer) {\n        this.hitDetectionRenderer_ = renderer;\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getHitDetectionRenderer = function () {\n        return this.hitDetectionRenderer_;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>|null}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles['Polygon'] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles['MultiPolygon'] = styles['Polygon'];\n    styles['LineString'] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles['MultiLineString'] = styles['LineString'];\n    styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n    styles['Point'] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles['MultiPoint'] = styles['Point'];\n    styles['GeometryCollection'] = styles['Polygon'].concat(styles['LineString'], styles['Point']);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","Source","_super","options","_this","projection","attributions_","adaptAttributions","attributions","attributionsCollapsible_","undefined","attributionsCollapsible","loading","state_","state","wrapX_","wrapX","interpolate_","interpolate","viewResolver","viewRejector","self","viewPromise_","Promise","resolve","reject","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getState","getWrapX","getInterpolate","refresh","changed","setAttributions","setState","attributionLike","isArray","frameState","TileSource","on","once","un","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileGrid","tileSize","getTileSize","getMinZoom","tileCache","cacheSize","tmpSize","key_","key","tileOptions","transition","zDirection","canExpireCache","expireCache","usedTiles","getTileCacheForProjection","forEachLoadedTile","z","tileRange","callback","tile","tileCoordKey","loaded","covered","x","minX","maxX","y","minY","maxY","containsKey","get","getGutterForProjection","getKey","setKey","getOpaque","getTile","pixelRatio","getTileGrid","getTileGridForProjection","sourceProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","tileCoord","opt_projection","isGlobal","clear","updateCacheSize","tileCount","highWaterMark","useTile","TileSourceEvent","type","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile","generateTileUrlFunction_","tileUrlFunction","tileLoadFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","bind","getUrls","handleTileChange","event","uid","tileState","TileState","TileEventType","dispatchEvent","setTileLoadFunction","setTileUrlFunction","pruneExceptNewestZ","join","TileImage","imageSmoothing","defaultTileLoadFunction","crossOrigin","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","id","getGutter","thisProj","projKey","TileCache","createTile_","urlTileCoord","tileUrl","addEventListener","EventType","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","getTileInternal","interimTile","refreshInterimChain","replace","set","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","imageTile","src","getImage","VectorSourceEvent","opt_feature","opt_features","feature","features","VectorSource","opt_options","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","geometry","getGeometry","extent","getExtent","insert","remove","handleFeatureChange_","valid","getId","toString","addFeatures","extents","newFeatures","geometryFeatures","i","length_1","length","push","length_2","load","hasListener","length_3","modifyingCollection","evt","removeFeature","opt_fast","featureId","keys","forEach","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","result","getFeaturesCollection","getFeatures","slice","getAll","getFeaturesAtCoordinate","getFeaturesInExtent","multiWorld","canWrapX","getInExtent","concat","apply","map","anExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","filter","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","opt_extent","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","update","sid","removeFromIdIndex_","hasFeature","isEmpty","getLength","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","_loop_1","ii","extentToLoad","alreadyLoaded","object","this_1","removeLoadedExtent","obj","featureChangeKeys","removed","setLoader","ADDFEATURE","CHANGEFEATURE","CLEAR","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","XYZ","maxResolution","maxZoom","minZoom","gutter_","gutter","LRUCache","opt_highWaterMark","count_","entries_","oldest_","newest_","getCount","keep","pop","f","entry","value_","newer","older","getKeys","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","value","setSize","size","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","index","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","RBush","opt_maxEntries","rbush_","items_","item","items","l","bbox","all","search","forEach_","data","toJSON","rbush","CircleStyle","points","fill","radius","stroke","scale","rotation","rotateWithView","displacement","declutterMode","clone","getScale","style","getFill","getStroke","getRadius","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","setOpacity","getOpacity","setRadius","radius_","Fill","color_","color","getColor","setColor","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","taintedTestContext","IconImage","image","imageState","hitDetectionImage_","image_","Image","canvas_","unlisten_","imageState_","size_","src_","tainted_","isTainted_","ImageState","drawImage","getImageData","e","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","width","height","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","context","fillRect","canvas","getSize","getSrc","document","createElement","ceil","ctx","getContext","globalCompositeOperation","fillStyle","imgData","r","g","a","putImageData","iconImage","Icon","opacity","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize_","imgSize","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","origin_","getAnchor","setAnchor","getImageSize","getOrigin","iconImageSize","listenImageChange","listener","unlistenImageChange","removeEventListener","FRACTION","PIXELS","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","colorString","shared","ImageStyle","opacity_","rotateWithView_","rotation_","scale_","scaleArray_","displacement_","declutterMode_","getScaleArray","setDisplacement","setRotateWithView","setRotation","setScale","RegularShape","hitDetectionCanvas_","fill_","points_","radius1","radius2_","radius2","angle_","angle","stroke_","renderOptions_","getPoints","getRadius2","getAngle","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","tmp","alpha","PI","sin","miterRatio","k","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","max","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","add","maxRadius","translate","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","cos","closePath","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","text","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","setZIndex","toFunction","styleFunction","styles_1","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","POINT","LINE"],"sourceRoot":""}
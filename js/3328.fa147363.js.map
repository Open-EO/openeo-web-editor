{"version":3,"file":"js/3328.fa147363.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.8.2\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as drawPointLegend, aD as noop, aE as distanceBetweenPoints, aF as _setMinAndMaxByKey, aG as niceNum, aH as almostWhole, aI as almostEquals, aJ as _decimalPlaces, aK as _longestText, aL as _filterBetween, aM as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","d","animationOptions","Object","keys","_fallback","_indexable","_scriptable","name","properties","animation","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_","sort","a","computeMinSampleSize","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","T","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","call","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","startsWith","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","tickTextAlign","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","p","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","defineProperties","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","_args","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","m","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}
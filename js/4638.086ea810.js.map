{"version":3,"file":"js/4638.086ea810.js","mappings":"wKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,IAAI,MAAMC,MAAML,EAAIM,QAAQC,MAAOP,EAAS,MAAEQ,MAAM,CAAC,GAAKR,EAAIS,GAAG,SAAW,KAAKC,GAAG,CAAC,UAAYV,EAAIW,YAAY,UAAYX,EAAIY,YAAY,MAAQZ,EAAIa,aAAa,QAAUb,EAAIc,UAAU,MAAQ,SAASC,GAAQf,EAAIgB,UAAW,CAAI,EAAE,KAAO,SAASD,GAAQf,EAAIgB,UAAW,CAAK,IAAI,CAACd,EAAG,MAAM,CAACe,YAAY,SAAST,MAAM,CAAC,MAAQ,6BAA6B,QAAU,QAAQ,CAACR,EAAIkB,GAAIlB,EAAS,OAAE,SAASmB,GAAM,OAAOjB,EAAG,OAAO,CAACkB,IAAID,EAAKV,GAAGD,MAAM,CAAC,GAAKW,EAAKV,GAAG,WAAaU,EAAKE,WAAW,WAAaF,EAAKG,WAAW,SAAWH,EAAKI,SAAS,SAAWJ,EAAKK,SAAS,OAASL,EAAKM,OAAO,MAAQzB,EAAI0B,OAAOhB,GAAG,CAAC,QAAUiB,GAAQ3B,EAAI4B,MAAMT,EAAMQ,GAAM,UAAY,IAAM3B,EAAI4B,MAAMT,GAAM,SAAW,SAASJ,GAAQ,OAAOf,EAAI6B,cAAcV,EAAMW,UAAU,IAAI,IAAG9B,EAAIkB,GAAIlB,EAA2B,yBAAE,SAASmB,GAAM,OAAOjB,EAAG,OAAO,CAACkB,IAAID,EAAKV,GAAGD,MAAM,CAAC,GAAKW,EAAKV,GAAG,WAAaU,EAAKE,WAAW,WAAaF,EAAKG,WAAW,UAAW,EAAK,UAAY,CAAC,IAAI,IAAI,IAAI,GAAG,UAAY,EAAE,MAAQtB,EAAI0B,OAAOhB,GAAG,CAAC,QAAUiB,GAAQ3B,EAAI4B,MAAMT,EAAMQ,GAAM,UAAY,IAAM3B,EAAI4B,MAAMT,KAAQ,IAAInB,EAAe,YAAEE,EAAG,OAAOF,EAAI+B,GAAG,CAAC,EAAE,OAAO/B,EAAIgC,aAAY,IAAQhC,EAAIiC,KAAMjC,EAAc,WAAEE,EAAG,OAAOF,EAAI+B,GAAG,CAAC,EAAE,OAAO/B,EAAIkC,YAAW,IAAQlC,EAAIiC,MAAM,GAAG/B,EAAG,MAAM,CAACe,YAAY,UAAUjB,EAAIkB,GAAIlB,EAAU,QAAE,SAASmC,GAAO,OAAOjC,EAAG,QAAQ,CAACkB,IAAIe,EAAM1B,GAAGD,MAAM,CAAC,GAAK2B,EAAM1B,GAAG,KAAO0B,EAAMC,KAAK,KAAOD,EAAME,KAAK,MAAQrC,EAAI0B,MAAM,SAAWS,EAAMZ,SAAS,SAAWY,EAAMG,SAAS,OAASH,EAAMI,OAAO,WAAaJ,EAAMK,WAAW,UAAYL,EAAMM,UAAU,OAASN,EAAMO,OAAO,KAAOP,EAAML,UAAU,YAAcK,EAAMQ,aAAajC,GAAG,CAAC,OAAS,IAAIkC,IAAS5C,EAAI6C,YAAYV,KAAUS,GAAM,QAAUjB,GAAQ3B,EAAI4B,MAAMO,EAAOR,GAAM,UAAY,IAAM3B,EAAI4B,MAAMO,GAAO,KAAOnC,EAAI8C,iBAAiB,IAAG,GAAI9C,EAAI0B,MAAMqB,MAAQ,IAAO/C,EAAIgD,aAAc9C,EAAG,MAAM,CAACe,YAAY,YAAY,CAAEjB,EAAI0B,MAAMqB,MAAQ,GAAK7C,EAAG,MAAM,CAACF,EAAIiD,GAAG,iCAAiCjD,EAAIiC,KAAMjC,EAAgB,aAAEE,EAAG,MAAM,CAACF,EAAIiD,GAAG,eAAe/C,EAAG,MAAM,CAACF,EAAIiD,GAAG,UAAUjD,EAAIiD,GAAG,QAAQ/C,EAAG,MAAM,CAACF,EAAIiD,GAAG,UAAUjD,EAAIiD,GAAG,gCAAgCjD,EAAIiC,OAAOjC,EAAIiC,KAAMjC,EAAmB,gBAAEE,EAAG,kBAAkBF,EAAI+B,GAAG,CAACrB,GAAG,CAAC,MAAQ,SAASK,GAAQf,EAAIkD,gBAAkB,IAAI,IAAI,kBAAkBlD,EAAIkD,iBAAgB,IAAQlD,EAAIiC,MAAM,EAC50E,EACIkB,EAAkB,GCFlB,EAAS,WAAkB,IAAInD,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,IAAI,MAAMC,MAAML,EAAIoD,iBAAiB7C,MAAOP,EAAU,OAAEQ,MAAM,CAAC,GAAK,QAAUP,KAAKQ,IAAIC,GAAG,CAAC,UAAY,SAASK,GAAQ,OAAIA,EAAOqB,KAAKiB,QAAQ,QAAQrD,EAAIsD,GAAGvC,EAAOwC,QAAQ,OAAO,GAAGxC,EAAOK,IAAI,CAAC,OAAO,cAAqB,MAAKL,EAAOyC,iBAAiBzC,EAAO0C,kBAAqB,WAAY1C,GAA4B,IAAlBA,EAAO2C,OAAoB,KAAY1D,EAAIY,YAAY+C,MAAM,KAAM7B,WAAU,IAAI,CAAC5B,EAAG,MAAM,CAACe,YAAY,aAAaP,GAAG,CAAC,UAAY,SAASK,GAAQ,OAAIA,EAAOqB,KAAKiB,QAAQ,QAAQrD,EAAIsD,GAAGvC,EAAOwC,QAAQ,OAAO,GAAGxC,EAAOK,IAAI,CAAC,OAAO,cAAqB,MAAKL,EAAOyC,iBAAiBzC,EAAO0C,kBAAqB,WAAY1C,GAA4B,IAAlBA,EAAO2C,OAAoB,KAAY1D,EAAI4D,SAASD,MAAM,KAAM7B,WAAU,IAAI,CAAC5B,EAAG,OAAO,CAACe,YAAY,YAAYT,MAAM,CAAC,MAAQR,EAAI6D,aAAa,CAAC3D,EAAG,OAAO,CAAC4D,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOjE,EAAW,QAAEkE,WAAW,YAAYjD,YAAY,UAAUT,MAAM,CAAC,MAAQ,yCAAyC,CAACN,EAAG,IAAI,CAACe,YAAY,kCAAkCjB,EAAIiD,GAAG,IAAIjD,EAAImE,GAAGnE,EAAI+D,MAAM,KAAM/D,EAAU,OAAEE,EAAG,OAAO,CAACe,YAAY,WAAW,CAACjB,EAAIiD,GAAGjD,EAAImE,GAAGnE,EAAIS,OAAOT,EAAIiC,OAAO/B,EAAG,MAAM,CAACe,YAAY,YAAYP,GAAG,CAAC,UAAY,SAASK,GAAQ,OAAIA,EAAOqB,KAAKiB,QAAQ,QAAQrD,EAAIsD,GAAGvC,EAAOwC,QAAQ,OAAO,GAAGxC,EAAOK,IAAI,CAAC,OAAO,cAAqB,MAAKL,EAAOyC,iBAAiBzC,EAAO0C,kBAAqB,WAAY1C,GAA4B,IAAlBA,EAAO2C,OAAoB,KAAY1D,EAAIoE,QAAO,IAAI,CAAClE,EAAG,OAAO,CAAC4D,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOjE,EAAIqE,oBAAsBrE,EAAIsE,qBAAsBJ,WAAW,+CAA+CjD,YAAY,iBAAiBT,MAAM,CAAC,MAAQ,mBAAmBE,GAAG,CAAC,MAAQ,SAASK,GAAyD,OAAjDA,EAAO0C,kBAAkB1C,EAAOyC,iBAAwBxD,EAAIuE,gBAAgB,IAAI,CAACrE,EAAG,IAAI,CAACe,YAAY,6BAA6Bf,EAAG,OAAO,CAAC4D,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOjE,EAAmB,gBAAEkE,WAAW,oBAAoBjD,YAAY,YAAYT,MAAM,CAAC,MAAQ,aAAaE,GAAG,CAAC,MAAQ,SAASK,GAAyD,OAAjDA,EAAO0C,kBAAkB1C,EAAOyC,iBAAwBxD,EAAIwE,UAAUb,MAAM,KAAM7B,UAAU,IAAI,CAAC5B,EAAG,IAAI,CAACe,YAAY,mBAAmBf,EAAG,OAAO,CAAC4D,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOjE,EAAgB,aAAEkE,WAAW,iBAAiBjD,YAAY,SAAST,MAAM,CAAC,MAAQ,gBAAgBE,GAAG,CAAC,MAAQ,SAASK,GAAyD,OAAjDA,EAAO0C,kBAAkB1C,EAAOyC,iBAAwBxD,EAAIyE,QAAQ,IAAI,CAACvE,EAAG,IAAI,CAACe,YAAY,mBAAmBf,EAAG,OAAO,CAAC4D,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOjE,EAAc,WAAEkE,WAAW,eAAejD,YAAY,OAAOT,MAAM,CAAC,MAAQ,WAAWE,GAAG,CAAC,MAAQ,SAASK,GAAyD,OAAjDA,EAAO0C,kBAAkB1C,EAAOyC,iBAAwBxD,EAAI0E,UAAU,IAAI,CAACxE,EAAG,IAAI,CAACe,YAAY,kBAAkBf,EAAG,OAAO,CAAC4D,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOjE,EAAyB,sBAAEkE,WAAW,0BAA0BjD,YAAY,WAAWT,MAAM,CAAC,MAAQR,EAAI2E,YAAc,iBAAmB,2BAA2BjE,GAAG,CAAC,MAAQ,SAASK,GAAyD,OAAjDA,EAAO0C,kBAAkB1C,EAAOyC,iBAAwBxD,EAAI4E,KAAKjB,MAAM,KAAM7B,UAAU,IAAI,CAAC5B,EAAG,IAAI,CAACe,YAAY,sBAAsBf,EAAG,MAAM,CAACe,YAAY,SAAS,CAACf,EAAG,MAAM,CAACe,YAAY,UAAUjB,EAAIkB,GAAIlB,EAAc,YAAE,SAAS6E,EAAMC,GAAG,OAAO5E,EAAG,iBAAiB,CAACkB,IAAI0D,EAAE1E,IAAI,aAAa2E,UAAS,EAAKvE,MAAM,CAAC,MAAQR,EAAI0B,MAAM,MAAQ1B,EAAI4C,KAAKiC,EAAMd,MAAM,KAAOc,EAAMd,KAAK,YAAcc,EAAMlC,YAAY,SAAWkC,EAAMG,SAAS,WAAaH,EAAMI,WAAW,aAAeJ,EAAMK,aAAa,QAAUL,EAAMM,QAAQ,OAASN,EAAMO,QAAQ1E,GAAG,CAAC,MAAQuD,GAASjE,EAAIqF,eAAeR,EAAMd,KAAME,GAAO,aAAe,SAASlD,GAAQ,OAAOf,EAAIsF,aAAaT,EAAO9D,EAAO,IAAI,IAAG,GAAGb,EAAG,MAAM,CAACe,YAAY,WAAW,CAACf,EAAG,iBAAiBF,EAAI+B,GAAG,CAAC3B,IAAI,SAASI,MAAM,CAAC,MAAQR,EAAI0B,MAAM,MAAQ1B,EAAIuF,aAAa7E,GAAG,CAAC,MAAQV,EAAIwF,eAAe,iBAAiBxF,EAAIyF,QAAO,KAAS,KAAMzF,EAAwB,qBAAEE,EAAG,WAAW,CAACE,IAAI,mBAAmBa,YAAY,kBAAkBT,MAAM,CAAC,UAAYR,EAAI0B,MAAMgE,SAAS,YAAc,4BAA4BC,SAAS,CAAC,MAAQ3F,EAAI2C,aAAajC,GAAG,CAAC,MAAQV,EAAI4F,kBAAkB,KAAO5F,EAAI4F,kBAAkB,UAAY,SAAS7E,GAAQA,EAAO0C,iBAAkB,KAAKzD,EAAIiC,MACtsI,EACI,EAAkB,GCFlB,EAAS,WAAkB,IAAIjC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACG,MAAML,EAAIM,SAAS,CAAGN,EAAIyF,OAAqFzF,EAAIiC,KAAjF/B,EAAG,MAAMF,EAAI6F,GAAG,CAACzF,IAAI,SAASC,MAAML,EAAI8F,eAAe9F,EAAI+F,kBAA2B7F,EAAG,OAAOF,EAAI6F,GAAG,CAAC5E,YAAY,QAAQjB,EAAIgG,eAAe,CAAC9F,EAAG,OAAO,CAAC4D,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOjE,EAAe,YAAEkE,WAAW,gBAAgBjD,YAAY,cAAcT,MAAM,CAAC,MAAQ,qCAAqC,CAACN,EAAG,IAAI,CAACe,YAAY,kCAAkCf,EAAG,OAAO,CAACe,YAAY,SAAS,CAACjB,EAAIiD,GAAGjD,EAAImE,GAAGnE,EAAIiG,iBAAkBjG,EAAIkG,aAAmB,OAAE,CAAClG,EAAIiD,GAAG,OAAOjD,EAAIiC,KAAK/B,EAAG,OAAO,CAACe,YAAY,QAAQ0E,SAAS,CAAC,UAAY3F,EAAImE,GAAGnE,EAAIkG,kBAAkB,GAAIlG,EAAU,OAAEE,EAAG,MAAMF,EAAI6F,GAAG,CAACzF,IAAI,SAASC,MAAML,EAAI8F,cAActF,MAAM,CAAC,MAAQ,0BAA0BR,EAAI+F,kBAAkB/F,EAAIiC,MAC7zB,EACI,EAAkB,G,iCCiBtB,SACI8B,KAAM,iBACNoC,MAAO,CACHpC,KAAM,CACF3B,KAAMgE,OACNjB,QAAS,UAEbxC,YAAa,CACTP,KAAMgE,OACNjB,QAAS,IAEbH,SAAU,CACN5C,KAAMiE,QACNlB,SAAS,GAEbF,WAAY,CACR7C,KAAMiE,QACNlB,SAAS,GAEbD,aAAc,CACV9C,KAAMiE,QACNlB,SAAS,GAEbA,QAAS,CAAC,EACVlB,MAAO,CAAC,EACRmB,OAAQ,CACJhD,KAAM,CAACkE,OAAQC,OACfpB,QAAS,MAEbqB,MAAO,CACHpE,KAAMgE,QAEVX,OAAQ,CACJrD,KAAMiE,QACNlB,SAAS,GAEbzD,MAAO,CACHU,KAAMkE,OACNG,UAAU,IAGlB,IAAAC,GACI,MAAO,CAEHC,MAAO,GAEf,EACAC,SAAU,CACN,OAAAC,GACI,OAAI5G,KAAKmF,kBAAkB,EAAA0B,cAChB7G,KAAKmF,OAGL,IAAI,EAAA0B,cAAc7G,KAAKmF,OAEtC,EACA,QAAA2B,GACI,YAAuBC,IAAf/G,KAAKgE,KACjB,EACA,aAAA+B,GACI,OAAI/F,KAAKgH,qBACE,CACHC,MAAOjH,KAAKkH,wBAIT,CAAC,CAEhB,EACA,eAAApB,GACI,IAAIqB,EAAY,CAAC,EAuBjB,OAtBInH,KAAKyB,MAAMgE,WACX0B,EAAUC,UAAYC,IACC,GAAfA,EAAMC,QACNtH,KAAKyB,MAAM8F,KAAKC,KAAKxH,MACrBqH,EAAM9D,iBACN8D,EAAM7D,kBACV,EAGAxD,KAAKwF,SAEL2B,EAAUM,SAAWJ,IACE,GAAfA,EAAMC,OACNtH,KAAK0H,MAAM,SAAS,EACxB,GAKRP,EAAUQ,UAAY,IAAM3H,KAAKyB,MAAMmG,UAAY5H,KAAKyB,MAAM8F,KAAKC,KAAKxH,MACxEmH,EAAUU,SAAW,IAAM7H,KAAKyB,MAAMqG,QAAU9H,KAAKyB,MAAM8F,KAAKQ,OAAO/H,OAEpEmH,CACX,EACA,OAAA9G,GACI,IAAIA,EAAU,CACVL,KAAKwF,OAAS,SAAW,QACzB,YACA,SAAWxF,KAAK8D,KACf9D,KAAK8G,UAAY9G,KAAK+E,UAAY/E,KAAKwF,QAAUxF,KAAKgI,eAAiB,EAAK,WAAa,WAK9F,OAHIhI,KAAKgH,sBACL3G,EAAQ4H,KAAK,YAEV5H,CACX,EACA,WAAA6H,GACI,OAAQlI,KAAKmI,QAAQC,SAAWpI,KAAKyB,MAAM8F,KAAKc,cAAgBrI,KAAK4G,QAAQsB,WACjF,EACA,aAAArC,GACI,IAAIxF,EAAU,CAAC,UAKf,IAAK,IAAIa,KAJLlB,KAAKgI,eAAiB,GACtB3H,EAAQ4H,KAAK,aAGAjI,KAAK0G,OACdxF,EAAKI,SACLjB,EAAQ4H,KAAK,eAER/G,EAAKM,OAAO8G,OAAS,GAC1BjI,EAAQ4H,KAAK,aAOrB,OAHIjI,KAAKyB,MAAMmG,UAAY5H,MAAQA,KAAKyB,MAAMqG,QAAU9H,MACpDK,EAAQ4H,KAAK,eAEV5H,CACX,EACA,YAAA4F,GACI,IAAIsC,EAAY,GAAKvI,KAAKgG,aAAasC,OACnCE,EAAiB,KACrB,GAAIxI,KAAKyI,aAAezI,KAAKyB,MAAMiH,cAAgB,IAAMC,MAAM3I,KAAKgE,OAAQ,CACxE,IAAIA,EAA8B,qBAAfhE,KAAKgE,MAAwBhE,KAAKgE,MAAQhE,KAAKkF,QAC7C,qBAAVlB,IACPwE,EAAiBxI,KAAK4I,YAAY5E,EAAOuE,GAAW,GAE5D,CAUA,MAR8B,kBAAnBC,EACuB,IAA1BA,EAAeF,SACfE,EAAiB,kBAIrBA,EAAiB,GAEdA,CACX,EACA,YAAAxC,GACI,OAAIhG,KAAKwF,QAAUxF,KAAKyB,MAAMiH,YACnB,GAEoB,kBAAf1I,KAAKuG,QAAuBvG,KAAKuG,MAAM+B,OAAS,GAAKtI,KAAKwF,QAC/DxF,KAAKuG,MAGLvG,KAAK8D,IAEpB,EACA,WAAA+E,GACI,MAAyC,UAAlC7I,KAAK4G,QAAQkC,gBACxB,EACA,YAAAC,GACI,MAAyC,WAAlC/I,KAAK4G,QAAQkC,gBACxB,EACA,UAAAL,GACI,OAAQzI,KAAKwF,QAAUxF,KAAK4G,QAAQ6B,YACxC,EACA,oBAAAzB,GACI,OAAShH,KAAKwF,QAAUxF,KAAK4G,QAAQ6B,YACzC,EACA,oBAAAO,GAEI,OAAOhJ,KAAK6I,aAAe7I,KAAK+I,cAAkD,QAAlC/I,KAAK4G,QAAQkC,gBACjE,GAEJG,MAAO,CACH,KAAAvC,GACI1G,KAAKkJ,mBACLlJ,KAAK0H,MAAM,eAAgB1H,KAAK0G,MAAO1G,KAC3C,EACAgE,MAAO,CACHmF,WAAW,EACX,OAAAC,GACIpJ,KAAKkJ,kBACT,IAGRG,QAAS,CACL,gBAAAH,GACI,IAAKlJ,KAAKwF,OACN,IAAI,IAAItE,KAAQlB,KAAK0G,MACjBxF,EAAKK,UAAYvB,KAAKsJ,WAAWpI,EAG7C,EACA,iBAAAqI,GACI,IACI,IAAIC,EAAMxJ,KAAKyB,MAAM8F,KAAKkC,eAAezJ,KAAK0J,MAAMC,QAChDC,EAAY5J,KAAKyB,MAAM8F,KAAKsC,gBAC5BC,EAAKN,EAAIO,WAAaH,EAAUG,WAAcP,EAAIQ,MAAQ,EAC1DC,EAAKT,EAAIU,UAAYN,EAAUM,UAAaV,EAAIW,OAAS,EAC7D,MAAO,CAACL,EAAGG,EACf,CAAE,MAAOG,GAEL,OADAC,QAAQC,KAAKF,GACN,IACX,CACJ,EACA,sBAAAlD,GACQlH,KAAKgH,sBACLhH,KAAKmI,QAAQoC,cAAcvK,KAAK8D,KAExC,EACA,UAAA0G,GACI,OAAOxK,KAAK4G,QAAQ6D,QACxB,EACA,QAAAC,CAAS1G,GACgC,WAAjChE,KAAK4G,QAAQkC,kBAAkC,IAAMH,MAAM3E,KAC3DA,IAAUA,GAEdhE,KAAK0H,MAAM,QAAS1D,EACxB,EACA,UAAA2G,GACI,GAA4B,qBAAjB3K,KAAKkF,QAAhB,CAKA,IAAIlB,EACJ,GAAIhE,KAAK4G,QAAQgE,WACb5G,EAAQ,SAEP,CACD,IAAI6G,EAAW7K,KAAK4G,QAAQkC,iBAC5B,OAAO+B,GACH,IAAK,SACD7G,EAAQ,CAAC,EACT,MACJ,IAAK,QACDA,EAAQ,GACR,MACJ,IAAK,SACDA,EAAQ,GACR,MACJ,IAAK,UACL,IAAK,SACDA,EAAQ,EACR,MACJ,IAAK,UACDA,GAAQ,EACR,MACJ,QACIA,OAAQ+C,EAEpB,CACA/G,KAAK0K,SAAS1G,EA7Bd,MAFIhE,KAAK0K,SAAS1K,KAAKkF,QAgC3B,EACA,UAAA4F,CAAW5J,GACP,OAAIlB,KAAKwF,OACExF,KAAKgE,MAGL9C,EAAKE,WAAW4C,KAE/B,EACA,aAAA+G,CAAc7J,GACV,IAAIf,EAAMH,KAAK8K,WAAW5J,GAC1B,GAAKf,EAGA,GAAKH,KAAKgJ,qBAGV,GAAIhJ,KAAK6I,YACV,GAAI,IAAMF,MAAM3I,KAAKgE,OACjBhE,KAAK0K,SAAS,CAAC1K,KAAKgE,MAAO7D,SAE1B,GAAImG,MAAM0E,QAAQhL,KAAKgE,QAAUhE,KAAKgE,MAAMsE,OAAS,EAAG,CACzD,IAAItE,EAAQhE,KAAKgE,MACjBA,EAAMiE,KAAK9H,GACXH,KAAK0K,SAAS1G,EAClB,MAEIhE,KAAK0K,SAASvK,QAGjB,GAAIH,KAAK+I,aAAc,CACxB,IAAIkC,EAAgB,IAAMC,KAAKlL,KAAKgE,OACR,IAAxBhE,KAAKgI,gBAA0BhI,KAAK8G,UAAamE,EAG3CA,GACNjL,KAAK2K,aAHL3K,KAAK0K,SAASvK,EAQtB,MAGIH,KAAK0K,SAASvK,QA7BdH,KAAK0K,SAASvK,EA+BtB,EACA,kBAAAgL,CAAmBjK,GACf,IAAKlB,KAAKwF,OAAQ,CACd,IAAIrF,EAAMH,KAAK8K,WAAW5J,GACtB,IAAMkK,WAAWjL,EAAKH,KAAKgE,OAC3BhE,KAAK2K,cAEA3K,KAAK6I,aAAe7I,KAAK+I,eAC9B/I,KAAK0K,SAAS1K,KAAKqL,uBAAuBrL,KAAKgE,MAAO7D,GAE9D,CACJ,EACA,sBAAAkL,CAAuBrH,EAAO7D,GAC1B,GAAImG,MAAM0E,QAAQhH,GAAQ,CACtB,IAAIa,EAAIb,EAAMsE,OACd,QAAQzD,GAAK,EACQ,OAAbb,EAAMa,IAAmC,kBAAbb,EAAMa,KAG7B,IAAMuG,WAAWjL,EAAK6D,EAAMa,IACjCb,EAAMsH,OAAOzG,EAAG,GAGhBb,EAAMa,GAAK7E,KAAKqL,uBAAuBrH,EAAMa,GAAI1E,GAI7D,MACK,GAAI,IAAMoL,SAASvH,GACpB,IAAI,IAAI7C,KAAO6C,EACNA,EAAMwH,eAAerK,IAAuB,OAAf6C,EAAM7C,IAAuC,kBAAf6C,EAAM7C,KAG7D,IAAMiK,WAAWjL,EAAK6D,EAAM7C,WAC1B6C,EAAM7C,GAGb6C,EAAMa,GAAK7E,KAAKqL,uBAAuBrH,EAAM7C,GAAMhB,IAI/D,OAAO6D,CACX,EACA,OAAAyH,CAAQvK,GACJlB,KAAK0G,MAAMuB,KAAK/G,GACXlB,KAAKsJ,WAAWpI,IAAUlB,KAAKwF,QAChCxF,KAAK+K,cAAc7J,EAE3B,EACA,SAAAwK,CAAUxK,GACN,IAAK,IAAIyK,KAAK3L,KAAK0G,MACf,GAAI1G,KAAK0G,MAAMiF,IAAMzK,EAGjB,OAFAlB,KAAKmL,mBAAmBjK,GACxBlB,KAAK4L,QAAQ5L,KAAK0G,MAAOiF,IAClB,EAGf,OAAO,CACX,EACA,UAAArC,CAAWpI,GACP,IAAIf,EAAMH,KAAK8K,WAAW5J,GAC1B,QAAI,IAAMkK,WAAWjL,EAAKH,KAAKgE,QAGxBhE,KAAK6L,cAAc1L,EAAKH,KAAKgE,MACxC,EACA,aAAA6H,CAAc1L,EAAK6D,GACf,IAAKA,GAA0B,kBAAVA,EACjB,OAAO,EAEN,GAAI,IAAMoH,WAAWjL,EAAK6D,GAC3B,OAAO,EAEX,IAAI,IAAI7C,KAAO6C,EACX,GAAIhE,KAAK6L,cAAc1L,EAAK6D,EAAM7C,IAC9B,OAAO,EAGf,OAAO,CACX,EACA,YAAA6G,GACI,OAAOhI,KAAK0G,MAAM4B,MACtB,EACA,aAAAwD,CAAcC,EAAIxD,GACd,GAAIwD,aAAc,EAAAC,cAAsC,IAAtBD,EAAGE,eACjC,OAAOjM,KAAK4I,YAAYmD,EAAGG,gBAAgB3J,WAAYgG,GAE3D,IAAI4D,EAAQ9F,OAAO+F,OAAOL,EAAGM,eAC7B,OAAqB,IAAjBF,EAAM7D,OACCtI,KAAK4I,YAAYuD,EAAM,GAAG5J,WAAYgG,GAGtC,SAEf,EACA,WAAAK,CAAY5E,EAAOuE,EAAW+D,GAAO,GACjC,GAAqB,kBAAVtI,EACP,OAAc,OAAVA,EACO,MAEFsC,MAAM0E,QAAQhH,GACZhE,KAAKuM,YAAYvI,EAAOuE,EAAW+D,GAGnCtM,KAAKwM,aAAaxI,EAAOuE,EAAW+D,GAG9C,GAAqB,kBAAVtI,EAAoB,CAChC,GAAIA,EAAMsE,OAASC,EAAW,CAC1B,IAAIkE,EAAO,IAAMC,aAAa1I,EAAM2I,OAAO,EAAGpE,IAC9C,OAAO+D,EAAOG,EAAO,gBAAkB,IAAMC,aAAa1I,GAAS,aAAeyI,CACtF,CAEI,OAAO,IAAMC,aAAa1I,EAElC,CACK,MAAqB,mBAAVA,EACLA,EAAQ,KAAO,IAEA,kBAAVA,EACLA,EAAM4I,WAGN,IAAMF,aAAaG,KAAKC,UAAU9I,GAEjD,EACA,WAAAuI,CAAYH,EAAQ7D,EAAW+D,GAAO,GAClC,IAAIS,EAAQ,GACZ,IAAI,IAAIlI,KAAKuH,EAAQ,CACjB,IAAIpI,EAAQoI,EAAOvH,GACfmI,EAAYhN,KAAK4I,YAAY5E,EAAO,GAAIsI,GACxCW,EAAc,IAAMC,oBAAoBlN,KAAK4I,YAAY5E,EAAO,IAAI,IAExE,GAAIiJ,EAAY3E,OAASC,EAAW,CAChC,GAAqB,IAAjBwE,EAAMzE,OACN,OAAOtI,KAAKmN,kBAAkBf,EAAQ,QAAUA,EAAO9D,OAAS,KAGhEyE,EAAM9E,KAAKjI,KAAKmN,kBAAkBf,EAAQ,MAC1C,KAER,CAEAW,EAAM9E,KAAK+E,GACXzE,GAAa0E,EAAY3E,OAAS,CACtC,CAEA,OAAOyE,EAAMK,KAAK,KACtB,EACA,iBAAAD,CAAkBf,EAAQK,EAAMH,GAAO,GACnC,GAAIA,GAAQF,EAAO9D,OAAS,GAAI,CAC5B,IAAI+E,EAAQjB,EAAOkB,KAAIC,GAAKvN,KAAK4I,YAAY2E,EAAG,IAAI,KAAQH,KAAK,MACjE,MAAO,gBAAkBC,EAAQ,KAAOZ,EAAO,SACnD,CAEI,OAAOA,CAEf,EACA,YAAAD,CAAaxI,EAAOuE,EAAW+D,GAAO,GAClC,OAAkC,IAA9BjG,OAAOmH,KAAKxJ,GAAOsE,OACZ,OAEFtE,aAAiB,EAAAgI,cAAgB,IAAMT,SAASvH,EAAMqI,eACpDrM,KAAK8L,cAAc9H,EAAOuE,GAE5B,IAAMI,MAAM3E,GACVhE,KAAK4I,YAAY,IAAM6E,UAAUzJ,GAAQuE,GAErB,qBAAfvE,EAAM0J,MAA8C,qBAAf1J,EAAM2J,MAA+C,qBAAhB3J,EAAM4J,OAAgD,qBAAhB5J,EAAM6J,MAC3HtF,GAAa,GAAK,eAAiB,OAErC,IAAMuF,cAAc9J,GAClBhE,KAAK4I,YAAY5E,EAAM7B,KAAMoG,GAIjC+D,EAAO,gBAAkB,IAAMI,aAAaG,KAAKC,UAAU9I,IAAU,kBAAoB,QACpG,ICpf2H,I,eCQ/H+J,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,QAAeA,EAAiB,QCnBhC,GACCC,aAAc,IACdC,WAAY,CACXC,cAAe,IACfC,QAAS,GACTC,aAAc,IACdC,OAAQ,MCoDJC,EAAkB,GAExB,GACIxK,KAAM,QACNyK,WAAY,CACRC,eAAc,GAElBtI,MAAO,CACH1F,GAAI,CACA2B,KAAMgE,OACNK,UAAU,GAEdrE,KAAM,CACFA,KAAMgE,OACNK,UAAU,GAEdlF,SAAU,CACNa,KAAMiE,QACNlB,SAAS,GAEb7C,SAAU,CACNF,KAAMmE,MACNE,UAAU,GAEdjE,WAAY,CACRJ,KAAMgE,QAEV3D,UAAW,CACPL,KAAMgE,OACNjB,QAAS,MAEbxC,YAAa,CACTP,KAAMgE,OACNjB,QAAS,MAEbvC,KAAM,CACFR,KAAMkE,OACNnB,QAAS,KAAM,CAAG,IAEtBzC,OAAQ,CACJN,KAAMiE,QACNlB,SAAS,GAEb5C,OAAQ,CACJH,KAAMgE,OACNjB,QAAS,MAEb9C,KAAM,CACFD,KAAMkE,OACNnB,QAAS,IAAM,MAEnBzD,MAAO,CACHU,KAAMkE,OACNG,UAAU,IAGlB,IAAAC,GACI,MAAO,CACHpC,sBAAsB,EACtBoK,KAAM,KAEd,EACAxF,MAAO,CACH,sBACIjJ,KAAK0H,MAAM,QAAS1H,KAAKqC,SAC7B,EACAK,YAAa,CACTyG,WAAW,EACX,OAAAC,GACIpJ,KAAKqE,qBAA6C,OAArBrE,KAAK0C,WACtC,IAGRiE,SAAU,CAEN,KAAAqD,GACI,IAAIkB,EAAO,EAAO+C,WAClB,OAAIjO,KAAK0O,WAAWpG,OAAS,EAClBtI,KAAKyB,MAAMiH,YAAcwC,EAAKgD,cAAgBhD,EAAKkD,aAGnDpO,KAAKyB,MAAMiH,YAAcwC,EAAKiD,QAAUjD,EAAKmD,MAE5D,EACA,MAAAM,GACI,MAAO,CACHC,WAAYC,KAAKC,MAAM9O,KAAKyB,MAAMsN,OAAO,GAAK/O,KAAKqC,SAAS,GAAKrC,KAAKyB,MAAMqB,OAAS,KACrFkM,UAAWH,KAAKC,MAAM9O,KAAKyB,MAAMsN,OAAO,GAAK/O,KAAKqC,SAAS,GAAKrC,KAAKyB,MAAMqB,OAAS,KACpFmM,SAAUJ,KAAKC,MAAM9O,KAAKyB,MAAMqB,MAAQwL,GAAmB,KAC3DtE,MAAO6E,KAAKC,MAAM9O,KAAKyB,MAAMqB,MAAQ9C,KAAKgK,OAAS,KAE3D,EACA,UAAApG,GACI,IAAImJ,EAAQ,GAQZ,OAPAA,EAAM9E,KAAKjI,KAAK8D,MACZ9D,KAAKwC,WACLuK,EAAM9E,KAAK,IAAIjI,KAAKwC,aAEpBxC,KAAKkP,QACLnC,EAAM9E,KAAK,IAAIjI,KAAKQ,MAEjBuM,EAAMK,KAAK,GACtB,EACA,IAAAtJ,GACI,OAAO9D,KAAKmC,MACR,IAAK,UACD,OAAInC,KAAKmP,aACEnP,KAAKmP,aAGLnP,KAAKoP,UAEpB,IAAK,YACD,OAAOpP,KAAKoC,KAAK0B,KACrB,QACI,OAAO9D,KAAKQ,GAAGmM,OAAO,GAElC,EACA,WAAArH,GACI,OAAItF,KAAKyC,OACE,SAEFzC,KAAK0E,YACH,oBAGA,EAEf,EACA,gBAAAvB,GACI,IAAI9C,EAAU,CAAC,SAiBf,OAhBIL,KAAKmP,aACL9O,EAAQ4H,KAAK,oBAERjI,KAAK0E,aACVrE,EAAQ4H,KAAK,kBAEbjI,KAAKyC,QACLpC,EAAQ4H,KAAK,gBAEbjI,KAAKsB,UACLjB,EAAQ4H,KAAK,kBAEbjI,KAAKoI,SACL/H,EAAQ4H,KAAK,iBAGV5H,CACX,EACA,OAAA+H,GACI,GAAkB,YAAdpI,KAAKmC,OAAuBnC,KAAKmI,QAAQE,aAGzC,OAAO,EAEN,GAAIrI,KAAKwC,WAAa,IAAM6M,MAAMrP,KAAKwC,WAExC,OAAO,EAEN,IAAKxC,KAAKoP,UACX,OAAO,EAIX,IAAKpP,KAAKoC,KACN,OAAO,EAIX,GAAuB,oBAAnBpC,KAAKoP,YAAoC,IAAMzG,MAAM3I,KAAK2C,KAAKnC,IAAK,CACpE,IAAI,IAAI8O,KAActP,KAAKmI,QAAQoH,YAC/B,GAAIvP,KAAK2C,KAAKnC,KAAO8O,EAAW9O,GAC5B,OAAO,EAGf,OAAO,CACX,CAEA,OAAO,CACX,EACA,SAAA4O,GACI,GAAkB,YAAdpP,KAAKmC,KAAoB,CACzB,GAAInC,KAAKuC,WACL,OAAOvC,KAAKuC,WAEX,GAAI,IAAMgJ,SAASvL,KAAKoC,OAASpC,KAAKoC,KAAK5B,GAC5C,OAAOR,KAAKoC,KAAK5B,EAEzB,CACA,OAAO,IACX,EACA,YAAA2O,GACI,MAAkB,YAAdnP,KAAKmC,MAAyC,oBAAnBnC,KAAKoP,WAAoC,IAAMzG,MAAM3I,KAAK2C,KAAKnC,IAGvF,KAFIR,KAAK2C,KAAKnC,EAGzB,EACA,WAAAkE,GACI,MAAqB,cAAd1E,KAAKmC,IAChB,EACA,qBAAAqN,GACI,OAAIxP,KAAK0E,YACE1E,KAAKyB,MAAMgE,UAA4B,WAAhBzF,KAAKsC,UAAyBtC,KAAKmI,QAAQsH,SAAS,iBAG3EzP,KAAK0O,WAAWgB,QAAOC,GAAKA,EAAElH,eAAcH,OAAS,CAEpE,EACA,eAAAsH,GACI,OAAQ5P,KAAKyB,MAAMgE,UAA0B,YAAdzF,KAAKmC,MAAsC,WAAhBnC,KAAKsC,MACnE,EACA,YAAAuN,GACI,OAAQ7P,KAAKyB,MAAMgE,YAAczF,KAAKoC,MAAS,IAAMmJ,SAASvL,KAAKoC,OAAyB,WAAhBpC,KAAKsC,OACrF,EACA,UAAAwN,GACI,OAAI9P,KAAKmP,aACEnP,KAAKmI,QAAQsH,SAAS,kBAExBzP,KAAK0E,YACH,IAAM6G,SAASvL,KAAKoC,OAASpC,KAAKmI,QAAQsH,SAAS,iBAGnDzP,KAAKmI,QAAQsH,SAAS,cAErC,EACA,iBAAArL,GAEI,OAAQpE,KAAKyB,MAAMgE,UAA0B,YAAdzF,KAAKmC,IACxC,EACA,MAAA+M,GACI,MAAsB,cAAdlP,KAAKmC,IACjB,EAEA,oBAAA4N,GACI,OAAO3J,QAAQ,IAAMmF,SAASvL,KAAKoC,OAASkE,MAAM0E,QAAQhL,KAAKoC,KAAKsM,aAAe1O,KAAKoC,KAAKsM,WAAWpG,OAAS,EACrH,EACA,UAAAoG,GACI,IAAIsB,EAAQ,GACRtB,EAAa,GAKjB,GAJI1O,KAAK+P,uBACLrB,EAAa1O,KAAKoC,KAAKsM,WAAWpB,KAAIqC,GAAK,IAAI,EAAAM,iBAAiBN,KAChEK,EAAQtB,EAAWpB,KAAIqC,GAAKA,EAAE7L,QAE9B,IAAMoH,KAAKlL,KAAK2C,MAAQ,EACxB,IAAI,IAAIxB,KAAOnB,KAAK2C,KACXqN,EAAME,SAAS/O,IAChBuN,EAAWzG,KAAK,IAAI,EAAAgI,iBAAiB,CACjCnM,KAAM3C,EACNuB,YAAa,MAK7B,OAAOgM,CACX,EACA,MAAAyB,GACI,IAAIA,EAAS,CAAC,EACd,IAAI,IAAIR,KAAK3P,KAAK0O,WACdyB,EAAOR,EAAE7L,MAAQ6L,EAGrB,OADAQ,EAAO3K,OAASxF,KAAKwF,OACd2K,CACX,EACA,MAAA3K,GACI,IAAIpD,EAAO,CAAC,EACR,IAAMmJ,SAASvL,KAAKoC,QAChBpC,KAAK0E,YACLtC,EAAOpC,KAAKoC,KAEP,IAAMmJ,SAASvL,KAAKoC,KAAKgO,WAC9BhO,EAAOpC,KAAKoC,KAAKgO,UAGzB,IAAI5K,EAAS,CACT1B,KAAM,SACNqB,OAAQ/C,EAAK+C,QAAU,CAAC,EACxBzC,YAAaN,EAAKM,aAAe,GACjCqC,UAAU,EACVS,QAAQ,EACRxB,MAAO,CAAC,GAQZ,OANIhE,KAAK0E,YACLc,EAAOxB,MAAMqM,eAAiBrQ,KAAKQ,GAAGmM,OAAO,GAG7CnH,EAAOxB,MAAMsM,UAAYtQ,KAAKQ,GAAGmM,OAAO,GAErCnH,CACX,GAEJ,OAAA+K,GAEIvQ,KAAKwQ,WAAaxQ,KAAKyQ,SAASC,KAAK1Q,MACrC2Q,SAASC,iBAAiB,YAAa5Q,KAAKwQ,YAE5CxQ,KAAK6Q,WAAa7Q,KAAK8Q,SAASJ,KAAK1Q,MACrC2Q,SAASC,iBAAiB,UAAW5Q,KAAK6Q,YAE1C7Q,KAAK0H,MAAM,UAAW1H,KAC1B,EACA,aAAA+Q,GACIJ,SAASK,oBAAoB,YAAahR,KAAKwQ,YAC/CG,SAASK,oBAAoB,UAAWhR,KAAK6Q,YAE7C7Q,KAAK0H,MAAM,YAAa1H,KAC5B,EACAqJ,QAAS,CACL,IAAA1E,GACQ3E,KAAK0E,YACL1E,KAAKiR,gBAGLjR,KAAKuK,eAEb,EACA,SAAAhG,GACIvE,KAAKmI,QAAQT,MAAM,YAAa,CAC5BrF,SAAUrC,KAAKqC,SACfE,WAAYvC,KAAKuC,WACjBC,UAAWxC,KAAKwC,UAChBX,UAAW7B,KAAK2C,KAChBD,YAAa1C,KAAK0C,aAE1B,EACA,YAAAwO,CAAapN,GACT,OAAO9D,KAAK+P,wBAA0B/P,KAAKoC,KAAKsM,WAAWyC,MAAKxB,GAAKA,EAAE7L,OAASA,GACpF,EACA,iBAAA6B,CAAkB0B,GACvB,IACarD,EADToN,EAAO/J,EAAMgK,eAAe,GAGnBrN,EADAoN,GAA8B,kBAAfA,EAAKpN,QAAuBoN,EAAKpN,MAAMsE,OAAS,GAAoB,UAAfjB,EAAMlF,MAClEiP,EAAKpN,MAGL,KAEZhE,KAAKqE,qBAAkC,OAAVL,EACzBhE,KAAK0C,cAAgBsB,GACrBhE,KAAK0H,MAAM,SAAU,cAAe1D,EAE5C,EACA,cAAAsN,CAAeC,EAAKC,GAAc,GAC9BD,EAAM,IAAME,YAAYF,GACpBvR,KAAKqC,SAAS,KAAOkP,EAAI,IAAMvR,KAAKqC,SAAS,KAAOkP,EAAI,IACxDvR,KAAK0H,MAAM,SAAU,WAAY6J,EAAKC,EAE9C,EACA,eAAAE,CAAgB1N,GACZ,IAAI2N,EAAmBtL,OAAOmH,KAAKxN,KAAK2C,MAC/B+M,QAAOvO,GAA6B,qBAAf6C,EAAM7C,MAA0BnB,KAAK+P,sBAAwB/P,KAAKkR,aAAa/P,MAE7G,IAAI,IAAIwO,KAAK3P,KAAK0O,WACe,qBAAlB1K,EAAM2L,EAAE7L,OAAyB6L,EAAE5K,UAAiC,qBAAd4K,EAAEzK,SAA2B,IAAM0M,OAAOjC,EAAEzK,QAASlB,EAAM2L,EAAE7L,eACnHE,EAAM2L,EAAE7L,MAGvB9D,KAAK0H,MAAM,SAAU,YAAa1D,EAAO2N,EAC7C,EACA,cAAAvM,CAAejE,EAAK6C,GAChB,IAAIrB,EAAO,IAAMkP,UAAU7R,KAAK2C,MAChCA,EAAKxB,GAAO6C,EACZhE,KAAK0R,gBAAgB/O,EACzB,EACA,YAAA4C,CAAavB,GACLhE,KAAK8R,iBACL9R,KAAKyB,MAAM8F,KAAKG,MAAM,QAAS,4CAG/B1D,IAAUhE,KAAKyC,QACfzC,KAAK0H,MAAM,SAAU,SAAU1D,EAEvC,EACA,KAAAG,GACInE,KAAKmI,QAAQhE,OACjB,EACA,WAAAxD,CAAY0G,GACRrH,KAAK+R,QAAQ/R,KAAKsB,UAAW+F,EAAM2K,SACvC,EACA,MAAAD,CAAOzQ,GAAW,EAAM2Q,GAAiB,GACrCjS,KAAK0H,MAAM,SAAU,WAAYpG,EAAU2Q,GAC3CjS,KAAKmE,OACT,EACA,aAAA0F,GACI,IAAIL,EAAMxJ,KAAKmI,QAAQsB,eAAezJ,KAAK0J,MAAMwI,KACjD,IAAItI,EAAY5J,KAAKmI,QAAQ0B,gBAG7B,OAFAL,EAAIM,EAAIN,EAAIO,WAAaH,EAAUG,WACnCP,EAAIS,EAAIT,EAAIU,UAAYN,EAAUM,UAC3BV,CACX,EACA,YAAAnE,CAAa8M,EAAWzL,GACpByL,EAAUC,KAAO1L,EAAM4G,KAAIpM,GAAQA,EAAKE,WAAW4C,OACvD,EACA,aAAAiN,GACIjR,KAAKmI,QAAQT,MAAM,gBAAiB1H,KAAKoC,KAAM,mBAAqBpC,KAAK4D,YAAY6C,GAAQzG,KAAK0H,MAAM,SAAU,OAAQjB,IAC9H,EACA,aAAA8D,CAAc8H,EAAgB,MAC1BrS,KAAKmI,QAAQT,MAAM,gBAAiB1H,KAAK0O,WAAWgB,QAAOC,GAAKA,EAAElH,eAAezI,KAAK2C,KAAM3C,KAAK4D,WAAY5D,KAAKyB,MAAMgE,SAAU4M,GAAe5L,GAAQzG,KAAK0R,gBAAgBjL,IAAOzG,KACzL,EACA,QAAAyE,GACOzE,KAAKmP,aACJnP,KAAKmI,QAAQT,MAAM,iBAAkB1H,KAAKmP,cAErCnP,KAAK0E,YACV1E,KAAKmI,QAAQT,MAAM,gBAAiB1H,KAAKoC,KAAMpC,KAAKsC,QAGpDtC,KAAKmI,QAAQT,MAAM,cAAe1H,KAAKoP,UAAWpP,KAAKwC,UAE/D,EACA,oBAAM8B,GACFtE,KAAK+R,SACL/R,KAAKqE,sBAAuB,QACtBrE,KAAKsS,YACXtS,KAAK0J,MAAM6I,iBAAiBpO,OAChC,EACA,cAAMR,CAAS0D,GACXrH,KAAK+R,QAAO,GAAO1K,EAAM2K,UACzBhS,KAAKmE,cACCnE,KAAKsS,YACXtS,KAAK0H,MAAM,OAAQL,EACvB,EACA,UAAAmL,CAAWjB,EAAKkB,GACZ,MAAO,CAACA,EAAM,GAAGzS,KAAKyB,MAAMqB,MAAMyO,EAAI,GAAIkB,EAAM,GAAGzS,KAAKyB,MAAMqB,MAAMyO,EAAI,GAC5E,EACA,SAAAmB,CAAUrL,GACN,IAAKrH,KAAKsB,SACN,OAGJ,IAAIqR,EAAW3S,KAAKmI,QAAQyK,YAAYvL,GACxCrH,KAAKyO,KAAO,CACRnM,OAAQtC,KAAKqC,SACboQ,MAAOzS,KAAKwS,WAAWxS,KAAKqC,SAAUsQ,GAE9C,EACA,QAAA7B,GACI,GAAK9Q,KAAKyO,KAAV,CAIA,IAAIoE,EAAQ,EAAI7S,KAAKyB,MAAMqB,OACvB+L,KAAKiE,IAAI9S,KAAKyO,KAAKnM,OAAO,GAAKtC,KAAKqC,SAAS,IAAMwQ,GAAShE,KAAKiE,IAAI9S,KAAKyO,KAAKnM,OAAO,GAAKtC,KAAKqC,SAAS,IAAMwQ,IAC/G7S,KAAKsR,eAAetR,KAAKqC,UAE7BrC,KAAKyO,KAAO,IANZ,CAOJ,EACA,QAAAgC,CAASpJ,GACL,IAAKrH,KAAKyO,KACN,OAGJ,IAAIkE,EAAW3S,KAAKmI,QAAQyK,YAAYvL,GACpC0L,EAAU/S,KAAKwS,WAAWxS,KAAKyO,KAAKgE,MAAOE,GAE/C3S,KAAKsR,eAAeyB,GAAS,EACjC,EAEA,cAAAjB,GACI,OAAO9R,KAAK0J,MAAMlE,QAAUxF,KAAK0J,MAAMlE,OAAOwC,eAAiB,CACnE,EAEA,YAAMxD,SACIxE,KAAKmI,QAAQ6K,YAAYhT,KACnC,EAKA,iBAAAiT,CAAkBnP,GACd,GAAa,WAATA,GAAqB9D,KAAK0J,MAAMlE,OAChC,OAAOxF,KAAK0J,MAAMlE,OAEjB,GAAIc,MAAM0E,QAAQhL,KAAK0J,MAAMgF,YAAa,CAC3C,IAAIwE,EAASlT,KAAK0J,MAAMgF,WAAWgB,QAAO9K,GAASA,EAAMd,OAASA,IAClE,GAAIoP,EAAO5K,OAAS,EAChB,OAAO4K,EAAO,EAEtB,CACA,OAAO,IACX,EAEA,iBAAAC,CAAkBd,EAAee,GAC7B,IAAIC,EAAiBrT,KAAKiT,kBAAkBZ,GACxCiB,EAAW,EAAAC,aAAaC,sBAAsBH,GAAgB/F,KAAImG,GAAWA,EAAQ3P,OACzF,OAAOwP,EAASpD,SAASkD,EAC7B,EAEA,kBAAAM,CAAmBL,GACf,GAAkB,YAAdrT,KAAKmC,KACL,OAAO,KAEX,IAAIwR,EAAcN,EAAe7S,GAAGmM,OAAO,GAC3C,IAAK,IAAIiH,KAAW5T,KAAK2C,KAAM,CAC3B,IAAIqB,EAAQhE,KAAK2C,KAAKiR,GACtB,GAAI,IAAMrI,SAASvH,IAAU,IAAMuH,SAASvH,EAAMqI,eAAgB,CAC9D,IAAI+F,EAAO,QAAQyB,QAAQ7P,GAAO,GAAM,GACxC,GAAIoO,EAAKjB,MAAK2C,GAAKA,EAAEzD,iBAAmBsD,IAAgB3T,KAAKmT,kBAAkBS,EAASE,EAAEzD,kBACtF,OAAOuD,CAEf,CACJ,CACA,OAAO,IACX,IChjBkH,ICQ1H,IAAI,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,QAAe,EAAiB,QCnBhC,IAAI,EAAS,WAAkB,IAAI7T,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,IAAIF,EAAIkB,GAAIlB,EAAS,OAAE,SAASgU,EAAKlP,GAAG,OAAO5E,EAAG,OAAOF,EAAI+B,GAAG,CAACX,IAAI0D,GAAG,OAAOkP,GAAK,GAAO,IAAG,EACpK,EACI,EAAkB,GCFP,MAAMC,EAEjB,WAAAC,CAAYnK,EAAGG,EAAGiK,EAAIC,GAClBnU,KAAK8J,EAAIA,EACT9J,KAAKiK,EAAIA,EACTjK,KAAKkU,GAAKA,EACVlU,KAAKmU,GAAKA,CACd,CAKA,QAAAC,CAASC,EAAQC,GACb,OAAOzF,KAAK0F,KAAK1F,KAAK2F,IAAIF,EAAOxK,EAAEuK,EAAOvK,EAAE,GAAK+E,KAAK2F,IAAIF,EAAOrK,EAAEoK,EAAOpK,EAAE,GAChF,CAKA,SAAAwK,CAAUC,GACN,IAAIrG,EAASrO,KAAKqO,SAClBA,EAAOvE,EAAI4K,EAAM5K,EACjBuE,EAAOpE,EAAIyK,EAAMzK,EACjB,IAAI0K,EAAe3U,KAAK2U,aAAatG,GAErC,MAAO,CAACsG,EAAa,GAAI3U,KAAKoU,SAAS/F,EAAOuG,MAAMD,EAAa,IAAKD,GAC1E,CAKA,MAAArG,GACI,OAAO,IAAI2F,EAAQhU,KAAK8J,EAAG9J,KAAKiK,EAAGjK,KAAKmU,IAAKnU,KAAKkU,GACtD,CAKA,YAAAS,CAAaE,GACT,IAAIC,EAAI9U,KAAKkU,GACTa,GAAKF,EAAMX,GACXc,EAAIhV,KAAKmU,GACTc,GAAKJ,EAAMV,GACXe,EAAKL,EAAM/K,EAAE9J,KAAK8J,EAClBqL,EAAKN,EAAM5K,EAAEjK,KAAKiK,EAClBmL,EAAMN,EAAEG,EAAIF,EAAEC,EAElB,GAAW,GAAPI,EACA,OAAO,KAGX,IAAIC,GAAMJ,EAAEC,EAAKH,EAAEI,GAAIC,EACnBE,IAAON,EAAEE,EAAKJ,EAAEK,GAAIC,EAExB,MAAO,CAACC,EAAIC,EAChB,CAKA,KAAAV,CAAME,GACF,IAAIJ,EAAQ,CAAC,EAIb,OAHAA,EAAM5K,EAAI9J,KAAK8J,EAAE9J,KAAKkU,GAAGY,EACzBJ,EAAMzK,EAAIjK,KAAKiK,EAAEjK,KAAKmU,GAAGW,EAElBJ,CACX,ECzDJ,SACI5Q,KAAM,OACNoC,MAAO,CACH1F,GAAI,CAAC,EACLY,WAAY,CACRe,KAAMkE,OACNG,UAAU,GAEdnF,WAAY,CACRc,KAAMkE,OACNG,UAAU,GAEdlF,SAAU,CACNa,KAAMiE,QACNlB,SAAS,GAEb3D,SAAU,CACNY,KAAMiE,QACNlB,SAAS,GAEb1D,OAAQ,CACJW,KAAMmE,MACNpB,QAAS,IAAM,IAEnBqQ,UAAW,CACPpT,KAAMqT,OACNtQ,QAAS,GAEbuQ,UAAW,CACPtT,KAAMmE,MACNpB,QAAS,IAAM,CAAE,IAAK,IAAK,EAAG,IAElCzD,MAAO,CACHU,KAAMkE,OACNG,UAAU,IAGlB,IAAAC,GACI,MAAO,CACHiP,UAAW,KACXC,UAAW,KAEnB,EACAhP,SAAU,CACN,OAAAiP,GACI,OAAO,IAAI5B,EACPhU,KAAK0V,UAAU,GACf1V,KAAK0V,UAAU,GACf1V,KAAK2V,UAAU,GAAK3V,KAAK0V,UAAU,GACnC1V,KAAK2V,UAAU,GAAK3V,KAAK0V,UAAU,GAE3C,EACA,eAAAG,GACI,OAAO7V,KAAKuV,UAAYvV,KAAKyB,MAAMqB,KACvC,EACA,KAAAgT,GAEI,IAAIC,GAAO/V,KAAK0V,UAAU,GAAG1V,KAAK2V,UAAU,IAAI,EAC5CK,GAAOhW,KAAK0V,UAAU,GAAG1V,KAAK2V,UAAU,IAAI,EAE5Cf,EAAS,GAAG/F,KAAKoH,GAAG,IACpBC,EAAMrH,KAAKqH,IAAItB,GACfuB,EAAMtH,KAAKsH,IAAIvB,GACfwB,EAAOvH,KAAKqH,KAAKtB,GACjByB,EAAOxH,KAAKsH,KAAKvB,GAEjB0B,EAAOzH,KAAK0F,KAAK1F,KAAK2F,IAAIxU,KAAK0V,UAAU,GAAG1V,KAAK2V,UAAU,GAAG,GAAG9G,KAAK2F,IAAIxU,KAAK0V,UAAU,GAAG1V,KAAK2V,UAAU,GAAG,IAC9GY,EAA+B,GAAjBvW,KAAKyB,MAAMqB,OAAUwT,EAAK,KACxCE,GAAMxW,KAAK0V,UAAU,GAAGK,GAAIQ,EAC5BE,GAAMzW,KAAK0V,UAAU,GAAGM,GAAIO,EAE5BG,EAAY1W,KAAK2W,aAAa3W,KAAK6V,gBAAiB7V,KAAKsB,SAAUtB,KAAKuB,UACxEqV,EAAa5W,KAAK2W,aAAa3W,KAAK6V,gBAAkB,IAAK7V,KAAKsB,UAEhEuV,EAAW7W,KAAK8W,QAAQ9W,KAAK0V,UAAU,GAAI1V,KAAK0V,UAAU,GAAI1V,KAAK2V,UAAU,GAAI3V,KAAK2V,UAAU,GAAIe,GACxG,OAAI1W,KAAKuB,UAAY+U,EAAKtW,KAAKyB,MAAMqB,MAAQ,GAElC,CAAC+T,GAGD,CACHA,EACA7W,KAAK8W,QAAQf,EAAIC,EAAID,GAAIS,EAAGN,EAAIO,EAAGN,GAAMH,GAAIS,EAAGP,EAAIM,EAAGL,GAAMS,GAC7D5W,KAAK8W,QAAQf,EAAIC,EAAID,GAAIS,EAAGJ,EAAKK,EAAGJ,GAAOL,GAAIS,EAAGL,EAAKI,EAAGH,GAAOO,GAG7E,GAEJ3N,MAAO,CACH,iBACIjJ,KAAK+W,iBACT,EACA,gBACI/W,KAAK+W,iBACT,EACA,iBACI/W,KAAK+W,iBACT,GAEJ,OAAAC,GACIhX,KAAK+W,iBACT,EACA,OAAAxG,GACIvQ,KAAK0H,MAAM,UAAW1H,KAC1B,EACA,aAAA+Q,GACI/Q,KAAK0H,MAAM,YAAa1H,KAC5B,EACAqJ,QAAS,CACL,eAAA0N,GACI,IAAIE,EAAOjX,KAAKoB,WAAWmI,oBACvB2N,EAAOlX,KAAKqB,WAAWkI,oBACtB0N,GAASC,IAGTlX,KAAK0V,WAAc1V,KAAK2V,WAAasB,EAAK,KAAOjX,KAAK0V,UAAU,IAAMuB,EAAK,KAAOjX,KAAK0V,UAAU,IAAMwB,EAAK,KAAOlX,KAAK2V,UAAU,IAAMuB,EAAK,KAAOlX,KAAK2V,UAAU,KACpK3V,KAAK0V,UAAYrP,OAAO8Q,OAAOF,GAC/BjX,KAAK2V,UAAYtP,OAAO8Q,OAAOD,GAC/BlX,KAAK0H,MAAM,WAAY1H,KAAK0V,UAAW1V,KAAK2V,YAEpD,EACA,YAAAgB,CAAapB,EAAWjU,GAAW,EAAO8V,GAAS,GAC/C,IAAIC,EAAa,EAAIrX,KAAKyB,MAAMqB,MAC5BwU,EAAQtX,KAAKyV,UAOjB,OANInU,EACAgW,EAAQ,CAAC,EAAG,IAAK,EAAG,GAEftX,KAAKwB,OAAO8G,OAAS,IAC1BgP,EAAQ,CAAC,IAAK,EAAG,EAAG,IAEjB,CACH,OAAU,QAAQA,EAAMlK,KAAK,SAC7B,eAAgBmI,EAChB,mBAAoB6B,EAAsB,EAAbC,EAAiB,IAAmB,EAAbA,EAAiB,OAE7E,EAWA,OAAAP,CAAQS,EAAIC,EAAIC,EAAIC,EAAIC,EAAW,CAAC,GAChC,OAAOtR,OAAOuR,OAAO,CAACL,KAAIC,KAAIC,KAAIC,MAAKC,EAC3C,EAIA,OAAAE,CAAQ/N,EAAGG,GACP,IAAKjK,KAAK4V,QACN,OAAO,EAGX,IAAIkC,EAAK9X,KAAK4V,QAAQnB,UAAU,CAAC3K,EAAGA,EAAGG,EAAGA,IAE1C,OAAI6N,EAAG,IAAM,GAAKA,EAAG,IAAM,GACnBA,EAAG,GAAM9X,KAAKuV,UAAUvV,KAAKyB,MAAMqB,MAAO,GACnCgV,EAAG,EAKtB,EAIA,MAAAlG,CAAOiD,GACH,OAAI7U,KAAKoB,YAAcyT,EAAMzT,YAAcpB,KAAKqB,YAAcwT,EAAMxT,YAG3DrB,KAAKoB,YAAcyT,EAAMxT,YAAcrB,KAAKqB,YAAcwT,EAAMzT,UAK7E,IC5LiH,ICOzH,IAAI,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,QAAe,EAAiB,Q,uDCoChC,MAAM2W,EAAkB,SAASC,GAC7B,OAAO,KAAIC,WAAW,CAClB1Q,KAAMyQ,EACNvS,UAAU,EACViD,aAAa,EACbwP,OAAQ,KACRC,UAAW,KACXpJ,OAAQ,CAAC,EAAE,GACX0D,MAAO,CAAC,EAAE,GACV3P,MAAO,EAAOkL,aACdpG,SAAU,KACVE,OAAQ,MAEhB,EACMsQ,EAAS,GAETC,EAAyB,SAAUC,EAAQC,GACxCjS,MAAM0E,QAAQsN,IAAYhS,MAAM0E,QAAQuN,IAAWD,EAAOhQ,SAAWiQ,EAAOjQ,QAAWgQ,EAAOE,OAAM,CAACxU,EAAMa,IAAMb,EAAMxD,KAAO+X,EAAO1T,GAAGrE,MACzIR,KAAK0H,MAAM,mBAAoB1H,KAAKyY,eAAgBzY,KAAK0Y,cAEjE,EAEA,GACI5U,KAAM,eACNyK,WAAY,CACRoK,MAAK,EACLC,KAAI,EACJC,gBAAiB,IAAM,iCAE3B3S,MAAO,CACH1F,GAAI,CACA2B,KAAMgE,OACNK,UAAU,GAEdf,SAAU,CACNtD,KAAMiE,QACNlB,SAAS,GAEblB,MAAO,CACH7B,KAAMkE,OACNnB,QAAS,KAAM,CAAG,IAEtBqK,YAAa,CACTpN,KAAMmE,MACNpB,QAAS,IAAM,IAEnB4T,UAAW,CACP3W,KAAM,CAACmE,MAAOD,QACdnB,QAAS,IAAM,IAEzB6T,OAAQ,CACP5W,KAAMkE,OACNnB,QAAS,MAEV8T,aAAc,CACb7W,KAAMkE,OACNnB,QAAS,MAEJ+T,YAAa,CACT9W,KAAMqT,OACNtQ,QAAS,IAEbgU,aAAc,CACV/W,KAAMiE,QACNlB,SAAS,GAEbiF,OAAQ,CACJhI,KAAMgE,OACNjB,QAAS,OAGjB,IAAAuB,GACI,MAAO,CACH0S,WAAW,EACXC,YAAY,EAGZC,eAAgB,EAGhBC,QAAS,GACTC,eAAgB,KAEhBC,QAASnT,OAAO8Q,OAAOnX,KAAKgE,OAE5BgU,OAAQ,GAERtR,MAAO,GACP+S,wBAAyB,CAAC,EAE1BC,aAAc,KAGdC,YAAa,EAEbC,WAAY,EAEZC,UAAW,KAEXC,mBAAoB,EACpB/Y,UAAU,EACVgB,YAAa,KACbkB,gBAAiB,KAEjBF,aAAc/C,KAAKkZ,aAGnBzX,MAAOsW,EAAgB/X,MAE/B,EACA2G,SAAU,CACN,KAAArG,GACI,IAAIA,EAAQ,CAAC,EAIb,MAH2B,kBAAhBN,KAAKmK,SACZ7J,EAAM6J,OAASnK,KAAKmK,QAEjB7J,CACX,EACA,OAAAD,GACI,IAAIA,EAAU,CACV,gBACA,iBA6BJ,OA3BIL,KAAKe,UACLV,EAAQ4H,KAAK,SAEbjI,KAAKyF,UACLpF,EAAQ4H,KAAK,YAGbjI,KAAKyB,MAAMiH,aACXrI,EAAQ4H,KAAK,WAGbjI,KAAKyB,MAAMqB,MAAQ,GACnBzC,EAAQ4H,KAAK,YAERjI,KAAKyB,MAAMqB,MAAQ,GACxBzC,EAAQ4H,KAAK,WAERjI,KAAKyB,MAAMqB,MAAQ,GACxBzC,EAAQ4H,KAAK,WAERjI,KAAKyB,MAAMqB,MAAQ,IACxBzC,EAAQ4H,KAAK,WAGb5H,EAAQ4H,KAAK,YAGV5H,CACX,EACA,UAAA4B,GACI,OAAKjC,KAAKyB,MAAM0W,UAGT,CACHrO,EAAG+E,KAAKkL,IAAI/Z,KAAKyB,MAAM0W,UAAU6B,QAAQ,GAAIha,KAAKyB,MAAM0W,UAAU8B,MAAM,IACxEhQ,EAAG4E,KAAKkL,IAAI/Z,KAAKyB,MAAM0W,UAAU6B,QAAQ,GAAIha,KAAKyB,MAAM0W,UAAU8B,MAAM,IACxEjQ,MAAO6E,KAAKiE,IAAI9S,KAAKyB,MAAM0W,UAAU6B,QAAQ,GAAKha,KAAKyB,MAAM0W,UAAU8B,MAAM,IAC7E9P,OAAQ0E,KAAKiE,IAAI9S,KAAKyB,MAAM0W,UAAU6B,QAAQ,GAAKha,KAAKyB,MAAM0W,UAAU8B,MAAM,IAC9E,OAAU,kBACV,eAAgB,EAChB,KAAQ,oBATD,IAWf,EACA,eAAAC,GAGI,GAAIla,KAAK8Y,qBAAqB,EAAAqB,iBAAoD,oBAAzBna,KAAK8Y,UAAUsB,OAAsD,oBAAvBpa,KAAK8Y,UAAUuB,IAClH,OAAOra,KAAK8Y,UAEX,GAAIxS,MAAM0E,QAAQhL,KAAK8Y,WACxB,OAAO,IAAI,EAAAqB,gBAAgBna,KAAK8Y,WAGhC,MAAM,IAAIwB,MAAM,gEAExB,EACA,YAAAjS,GACI,OAAOrI,KAAKka,gBAAgBE,QAAU,CAC1C,EACA,aAAAG,GACI,OAAOva,KAAKgY,OAAOtI,QAAOqF,GAAgB,YAAXA,EAAE5S,MACrC,EACA,cAAAsW,GACI,OAAOzY,KAAKgY,OAAOtI,QAAOxN,GAASA,EAAMZ,UAC7C,EACA,aAAAoX,GACI,OAAO1Y,KAAK0G,MAAMgJ,QAAOxO,GAAQA,EAAKI,UAC1C,EACA,gBAAAkZ,GACI,OAAkC,IAA9Bxa,KAAK0Y,cAAcpQ,QAAgBtI,KAAK0Y,cAAc,GAAG+B,kBAClDza,KAAK0Y,cAAc,GAEvB,IACX,EACA,YAAAgC,GACI,OAAO1a,KAAKyY,eAAenQ,OAAS,GAAKtI,KAAK0Y,cAAcpQ,OAAS,CACzE,EACA,4BAAAqS,GAGL,IAAIC,EAAe,GACf5a,KAAK+Y,QAAU/Y,KAAK+Y,OAAO5Q,SAA0D,oBAAxCnI,KAAK+Y,OAAO5Q,QAAQ0S,kBACpED,EAAe5a,KAAK+Y,OAAO5Q,QAAQ0S,kBAAkBvN,KAAIpL,GAASA,EAAME,QAGhE,IAAI0Y,EAAiB,GAEjB9a,KAAKgZ,eACd8B,EAAiB9a,KAAKgZ,aAAaxF,yBAI9B,IAAIuH,EAAuBH,EAAalL,QAAOsL,IAAOF,EAAe3J,MAAK8J,GAAMD,EAAGlX,OAASmX,EAAGnX,SAE/F,OAAOgX,EAAeI,OAAOH,EACjC,GAEJ9R,MAAO,CACH,YAAA+P,GACIhZ,KAAKmb,mBAAmBnb,KAAK2a,6BAA8B,SAC/D,EACA,WAAM3W,CAAMA,GAEHhE,KAAKoZ,aAKJpV,aAAiBoX,IACnBpb,KAAKwZ,QAAUxV,QACThE,KAAKqb,OAAOrX,EAAO,CAAEsX,WAAW,EAAOC,aAAa,KAElE,EACA9V,SAAU,CACN0D,WAAW,EACX,OAAAC,CAAQ3D,GACJzF,KAAKyB,MAAMgE,SAAWA,CAC1B,GAEJiT,cAAeL,EACfI,eAAgBJ,EAChB,UAAAe,GACIpZ,KAAKwb,+BACT,EACA,SAAArC,GACInZ,KAAKyb,iBACT,GAEP,YAAAC,GACC,IAAMC,gBAAgB3b,KACvB,EACG,aAAMgX,GACGhX,KAAKyP,SAAS,UAEfzP,KAAK4b,IAAI,SAAS,CAACC,EAAKxO,EAAQ,OAAShD,QAAQD,MAAMyR,EAAKxO,KAE3DrN,KAAKyP,SAAS,kBACfzP,KAAK4b,IAAI,iBAAiB,IAAIjZ,IAAS3C,KAAK8b,uBAAuBnZ,KAEvE3C,KAAK4b,IAAI,YAAa5b,KAAKuE,UAAUmM,KAAK1Q,MAC9C,EACA,aAAMuQ,GACF,IAAMwL,gBAAgB/b,MAGtBA,KAAKgc,WAAW,EAAG,GAAG,GAGtBhc,KAAKic,oBAAsBjc,KAAKkc,kBAAkBxL,KAAK1Q,MACvD2Q,SAASC,iBAAiB,UAAW5Q,KAAKic,2BAEpCjc,KAAKmb,mBAAmBnb,KAAK2a,6BAA8B,gBACtD3a,KAAKqb,OAAOrb,KAAKgE,MAAO,CAAEsX,WAAW,EAAOC,aAAa,KAChEvb,KAAKmc,eAET9D,EAAuB3H,KAAK1Q,KAA5BqY,GAEArY,KAAKmZ,WAAY,CACrB,EACA,aAAApI,GACIJ,SAASK,oBAAoB,UAAWhR,KAAKic,oBACjD,EACA5S,QAAS,CACL,aAAAzH,CAAcV,EAAMqQ,GAChBrQ,EAAKwU,UAAYnE,EAAI,GACrBrQ,EAAKyU,UAAYpE,EAAI,EACzB,EACA,KAAA5P,CAAMyP,EAAM1P,EAAO,MACf0P,EAAKgL,IAAM1a,EACX1B,KAAKyb,iBACT,EACA,eAAAA,GACSzb,KAAKmZ,UAINnZ,KAAKoZ,YAAcpZ,KAAKgY,OAAO7G,MAAKjP,IAAUA,EAAMka,QAASpc,KAAK0G,MAAMyK,MAAKjQ,IAASA,EAAKkb,MAH3Fpc,KAAKoZ,YAAa,CAK1B,EACA,oBAAAiD,CAAqBna,EAAOS,EAAM2Z,GAC1BA,EAAchU,OAAS,GACvBtI,KAAKuc,iBAAiBra,EAAOoa,GAEjCtc,KAAKwc,KAAKta,EAAO,YAAaS,GAC9B3C,KAAKyc,SACFH,EAAchU,OAAS,GACtBtI,KAAKsS,WAAU,IAAMtS,KAAK0c,gBAElC,EACA,sBAAAC,CAAuBza,EAAOQ,GAC1B1C,KAAKwc,KAAKta,EAAO,cAAeQ,GAChC1C,KAAKyc,QACT,EACA,cAAAG,CAAe1a,EAAOqP,EAAKC,GAAc,GACrCxR,KAAKwc,KAAKta,EAAO,WAAYqP,GAC7BvR,KAAKyc,OAAO,KAAMjL,GAAa,EACnC,EACA,iBAAAqL,CAAkB3a,EAAOO,GACrBzC,KAAKwc,KAAKta,EAAO,SAAUO,GAC3BzC,KAAKyc,QACT,EACA,mBAAAK,CAAoB5a,EAAOZ,EAAU2Q,GAAiB,GAC9CA,GACAjS,KAAK+c,cAET/c,KAAKwc,KAAKta,EAAO,WAAYZ,GAC7BtB,KAAKyc,OAAO,MAAM,GAAO,EAC7B,EACA,eAAAO,CAAgB9a,EAAOuE,GACnB,IAAIwW,EAAkB,CAAC,OAAQ,SAAU,cAAe,WAAY,aAAc,eAAgB,WAC9FC,EAAW,IAAMC,eAAejb,EAAME,KAAM6a,GAChD5W,OAAOuR,OAAOsF,EAAUzW,GAEnByW,EAASnY,kBACHmY,EAASnY,gBACTmY,EAAShY,SAEfgY,EAASlY,mBACHkY,EAASlY,WAEfkY,EAASjY,qBACHiY,EAASjY,aAEpBjF,KAAKwc,KAAKta,EAAO,OAAQgb,GACzBld,KAAKyc,QACT,EACA,WAAA7Z,CAAYV,EAAOf,EAAK6C,EAAOoZ,GAC3B,OAAOjc,GACH,IAAK,YACDnB,KAAKqc,qBAAqBna,EAAO8B,EAAOoZ,GACxC,MACJ,IAAK,cACDpd,KAAK2c,uBAAuBza,EAAO8B,GACnC,MACJ,IAAK,WACDhE,KAAK4c,eAAe1a,EAAO8B,EAAOoZ,GAClC,MACJ,IAAK,SACDpd,KAAKqd,cAAcnb,EAAO8B,GAC1B,MACJ,IAAK,WACDhE,KAAK8c,oBAAoB5a,EAAO8B,EAAOoZ,GACvC,MACJ,IAAK,OACDpd,KAAKgd,gBAAgB9a,EAAO8B,GAC5B,MAEZ,EACA,6BAAAwX,GAII,IAAKxb,KAAKqI,eAAiBrI,KAAKoZ,aAAepZ,KAAKgY,OAAO7G,MAAKjP,GAAwB,cAAfA,EAAMC,OAE3E,YADAnC,KAAKyZ,wBAA0B,CAAC,GAIpC,IAAI6D,EAAa,CAAC,EAClB,IAAI,IAAI9D,KAAWxZ,KAAKua,cACpB,IAAK,IAAI3G,KAAW4F,EAAQ3X,UAAW,CACnC,IAAImC,EAAQwV,EAAQ3X,UAAU+R,GAC9B,IAAK,IAAMrI,SAASvH,KAAW,IAAMuH,SAASvH,EAAMqI,eAChD,SAGJ,IAAI+F,EAAO,QAAQyB,QAAQ7P,GAAO,GAAM,GAAM0L,QAAOvP,GAAqC,qBAAvBA,EAAIkQ,iBACvE,IAAI,IAAIlQ,KAAOiS,EACX,IACI,IAAIoH,EAAQ4C,IACR,SAEJ,GAAI5C,EAAQ4C,IAAIjJ,kBAAkBS,EAASzT,EAAIkQ,gBAC3C,SAEJ,IAAI8B,EAAYnS,KAAKud,mBAAmB,IAAMpd,EAAIkQ,gBAClD,IAAK8B,EACD,SAEJ,IAAI/Q,EAAa+Q,EAAUiK,IAAInJ,kBAAkB,UAC7C5R,EAAamY,EAAQ4C,IAAInJ,kBAAkBW,GAC3CpT,EAAK,GAAG2R,EAAU3R,OAAOgZ,EAAQhZ,MAAMoT,IACvCxS,GAAcC,IACVrB,KAAKyZ,wBAAwBjZ,GAC7B8c,EAAW9c,GAAMR,KAAKyZ,wBAAwBjZ,GAG9C8c,EAAW9c,GAAM,CACb4b,IAAK,KACL5b,KACAY,aACAC,cAIhB,CAAE,MAAM+I,GACHC,QAAQC,KAAKF,EAClB,CAER,CAGJpK,KAAKyZ,wBAA0B6D,CACnC,EACA,gBAAAf,CAAiBra,EAAOsb,GACpB,IAAI,IAAItc,KAAQlB,KAAK0G,MAAM+W,MAAM,GAC1Bvc,EAAKG,WAAW8G,QAAQ3H,KAAO0B,EAAM1B,IAAMgd,EAAetN,SAAShP,EAAKG,WAAWyC,OAClF9D,KAAK0d,WAAWxc,EAG5B,EACA,cAAA2B,CAAewE,GACX,IAAI,IAAInF,KAASlC,KAAKgY,OACd9V,EAAMka,KACNla,EAAMka,IAAI1J,UAAUrL,EAGhC,EACA,YAAAqV,GACI1c,KAAK2d,gBAAgB3d,KAAK0G,OAC1B1G,KAAK2d,gBAAgBtX,OAAO+F,OAAOpM,KAAKyZ,yBAC5C,EACA,eAAAkE,CAAgBjX,GACZ,IAAI,IAAIxF,KAAQwF,EACRxF,EAAKkb,KACLlb,EAAKkb,IAAIrF,iBAGrB,EACA,QAAAtH,CAASpI,GACL,OAAOjB,QAAQpG,KAAK4d,YAAc5d,KAAK4d,WAAWvW,GACtD,EACA,KAAAlD,GACInE,KAAK0J,MAAMwI,IAAI/N,OACnB,EACA,IAAAqD,CAAK2K,GACGnS,KAAKyB,MAAMmG,SACX5H,KAAKyB,MAAMqG,OAASqK,EAGpBnS,KAAKyB,MAAMmG,SAAWuK,CAE9B,EACA,MAAApK,CAAOoK,EAAY,MACXA,EACInS,KAAKyB,MAAMqG,QAAUqK,EACrBnS,KAAKyB,MAAMqG,OAAS,KAEf9H,KAAKyB,MAAMmG,UAAYuK,IAC5BnS,KAAKyB,MAAMmG,SAAW,KACtB5H,KAAK+B,YAAc,OAIvB/B,KAAKyB,MAAMqG,OAAS,KACpB9H,KAAKyB,MAAMmG,SAAW,KACtB5H,KAAK+B,YAAc,KAE3B,EACA,WAAA8b,GACI,IAAIC,EAAM9d,KAAKiC,WACfjC,KAAKgY,OACAtI,QAAOqF,IACJ,GAAIzO,MAAM0E,QAAQ+J,EAAE1S,WAAa0S,EAAEqH,IAAK,CACpC,IAAI7K,EAAMwD,EAAEqH,IAAIvS,gBAChB,OAAO,IAAiBiU,EAAIhU,EAAGgU,EAAI7T,EAAG6T,EAAI9T,MAAO8T,EAAI3T,OAAQoH,EAAIzH,EAAGyH,EAAItH,EAAGsH,EAAIvH,MAAOuH,EAAIpH,OAC9F,CACA,OAAO,CAAK,IAEfmD,KAAIyH,GAAKA,EAAEzT,UAAW,IAC3BtB,KAAK0G,MACAgJ,QAAOqO,GAAKzX,MAAM0E,QAAQ+S,EAAErI,YAAcpP,MAAM0E,QAAQ+S,EAAEpI,YAAc,IAAkBmI,EAAIhU,EAAGgU,EAAI7T,EAAG6T,EAAI9T,MAAO8T,EAAI3T,OAAQ4T,EAAErI,UAAU,GAAIqI,EAAErI,UAAU,GAAIqI,EAAEpI,UAAU,GAAIoI,EAAEpI,UAAU,MAC3LrI,KAAIyQ,GAAKA,EAAEzc,UAAW,GAC/B,EACA,MAAAmJ,GACI,IAAI+O,EAAUxZ,KAAKge,SACnB,OAAOnR,KAAKC,UAAU0M,EAAS,KAAM,EACzC,EACA,uBAAM0C,CAAkB7U,GACpB,IAAIrH,KAAKiD,kBAGLjD,KAAKwa,kBACLxa,KAAKie,WAAWje,KAAKwa,iBAAkB,MAEvCxa,KAAKyB,MAAM0W,YACXnY,KAAK6d,cACL7d,KAAKyB,MAAM0W,UAAY,MAEvBnY,KAAKyB,MAAMyW,SACXlY,KAAKyB,MAAMyW,OAAS,MAEpBlY,KAAKyB,MAAMgE,UAAYzF,KAAKyB,MAAMmG,UAAU,CAC5C,GAAmB,GAAfP,EAAMC,OAActH,KAAKyB,MAAMqG,OAC/B,UACU9H,KAAKyL,QAAQzL,KAAKyB,MAAMmG,SAAU5H,KAAKyB,MAAMqG,OACvD,CAAE,MAAOsC,GACLpK,KAAK0H,MAAM,QAAS0C,EACxB,CAEJpK,KAAK+H,QACT,CACJ,EACA,eAAMlH,CAAUwG,GACZ,GAAIrH,KAAKiD,gBACL,OAEJ,IAAIib,EAAYvN,SAASwN,iBAAiB,6CAC1C,IAAI,IAAIC,KAAMF,EACV,GAAIE,IAAOzN,SAAS0N,cAChB,OAIR,IAAIC,GAAW,EACf,GAAIte,KAAKyB,MAAMgE,SAEX,GAAmB,WAAf4B,EAAMkX,KACNve,KAAKwe,iBACLF,GAAW,OAEV,GAAIjX,EAAMoX,SAAWpX,EAAMqX,QAC5B,GAAmB,SAAfrX,EAAMkX,KAAiB,CACvB,IAAKI,YAAcA,UAAU9E,WAAqD,oBAAjC8E,UAAU9E,UAAU+E,SAEjE,YADA5e,KAAK0H,MAAM,QAAS,6CAGxB,GAAI1H,KAAK0a,cAAgB1a,KAAK6Z,UAAW,CACrC,GAAI7Z,KAAK6Z,UAAUnT,MAAM4B,OAAS,EAE9B,YADAtI,KAAK0H,MAAM,QAAS,uCAGpB1H,KAAK6Z,UAAU7B,OAAO1P,OAAS,GAC/BtI,KAAK6Z,UAAU7B,OAAO6G,SAAQ3c,IACP,YAAfA,EAAMC,MAAuC,WAAjBD,EAAMI,OAClCtC,KAAKuE,UAAU,IAAMua,eAAe5c,EAAO,CAAC,YAAa,cAAe,YAAa,WAAY,gBAGjGlC,KAAK0H,MAAM,QAAS,kBAAkBxF,EAAM1B,wBAChD,GAGZ,MAEI,IACI,MAAMiM,QAAakS,UAAU9E,UAAU+E,WACvC,IAAIpF,EAAU3M,KAAKkS,MAAMtS,SACnBzM,KAAKqb,OAAO7B,EACtB,CAAE,MAAMpP,GACJpK,KAAK0H,MAAM,QAAS0C,EAAO,cAC/B,CAEJkU,GAAW,CACf,MACK,GAAmB,SAAfjX,EAAMkX,KAAiB,CAC5B,IAAKI,YAAcA,UAAU9E,WAAsD,oBAAlC8E,UAAU9E,UAAUmF,UAEjE,YADAhf,KAAK0H,MAAM,QAAS,6CAGxB,GAAI1H,KAAK0a,aACL1a,KAAK6Z,UAAY,CACb7B,OAAQhY,KAAKyY,eAAegF,MAAM,GAClC/W,MAAO1G,KAAK0Y,cAAc+E,MAAM,SAIpC,IACI,IAAIwB,EAAOjf,KAAKyK,eACVkU,UAAU9E,UAAUmF,UAAUC,GACpCX,GAAW,CACf,CAAE,MAAMlU,GACJpK,KAAK0H,MAAM,QAAS0C,EAAO,aAC/B,CAEJkU,GAAW,CACf,CAIJA,IACAjX,EAAM9D,iBACN8D,EAAM7D,kBAEd,EACA,YAAA5C,CAAayG,GACT,IAAIrH,KAAKiD,mBAGJjD,KAAKkZ,cAAgBlZ,KAAKe,UAAYsG,EAAMoX,SAAWpX,EAAMqX,SAAS,CACvE,IAAIjM,EAAQzS,KAAK4S,YAAYvL,GAC7B,IAAI6X,EAAKzM,EAAM,GAAKzS,KAAKyB,MAAMsN,OAAO,GAClCoQ,EAAK1M,EAAM,GAAKzS,KAAKyB,MAAMsN,OAAO,GAClCqQ,EAAavQ,KAAK2F,IAAI,KAA8B,EAAzB3F,KAAKwQ,KAAKhY,EAAMiY,SAC/Ctf,KAAKgc,YAAYkD,GAAIE,EAAW,IAAKD,GAAIC,EAAW,IACpDpf,KAAKyB,MAAMqB,OAASsc,EACpB/X,EAAM9D,iBACNvD,KAAK+C,cAAe,CACxB,CACJ,EACA,cAAA0G,CAAe2U,GACX,IAAImB,EAAOnB,EAAGoB,wBAGd,OAFAD,EAAKrV,UAAYqV,EAAKE,IAAM5Q,KAAK6Q,IAAI/O,SAASgP,gBAAgBC,UAAWjP,SAASkP,KAAKD,WACvFL,EAAKxV,WAAawV,EAAKO,KAAOjR,KAAK6Q,IAAI/O,SAASgP,gBAAgBI,WAAYpP,SAASkP,KAAKE,YACnFR,CACX,EACA,WAAA3M,CAAYvL,GACR,IAAIE,EAAOvH,KAAK0J,MAAMwI,IAAIsN,wBAC1B,MAAO,CACHnY,EAAM2Y,QAAUzY,EAAKuY,KACrBzY,EAAM4Y,QAAU1Y,EAAKkY,IAE7B,EACA,WAAA/e,CAAY2G,GACR,IAAIrH,KAAKiD,gBAGT,IACI,IAAI0P,EAAW3S,KAAK4S,YAAYvL,GAEhC,GAAIrH,KAAKyB,MAAMgE,UAAYzF,KAAKwa,iBAAkB,CAC9C,IAAIlY,EAAStC,KAAKwa,iBAAiBC,kBAAkBlR,oBACrD,GAAIjH,EAAQ,CACR,IAAI8R,EAAWvF,KAAK0F,KAAK1F,KAAK2F,IAAI7B,EAAS,GAAGrQ,EAAO,GAAI,GAAGuM,KAAK2F,IAAI7B,EAAS,GAAGrQ,EAAO,GAAI,IACxF8R,EAAW,KACXpU,KAAKwH,KAAKxH,KAAKwa,iBAAiBC,mBAChCza,KAAK0d,WAAW1d,KAAKwa,kBACrBxa,KAAKyc,SAEb,CACJ,CAWA,GATIzc,KAAKyB,MAAM0W,YACXnY,KAAKyB,MAAM0W,UAAU6B,QAAUrH,GAG/B3S,KAAKyB,MAAMyW,SACXlY,KAAKgc,WAAYrJ,EAAS,GAAG3S,KAAKyB,MAAMyW,OAAO,GAAMvF,EAAS,GAAG3S,KAAKyB,MAAMyW,OAAO,IACnFlY,KAAKyB,MAAMyW,OAASvF,GAGpB3S,KAAKyB,MAAMmG,SAAU,CACrB,IAAIvF,EAAWrC,KAAKyB,MAAMmG,SAAS2B,oBAC/BlH,IACArC,KAAK+B,YAAc,CACfwV,GAAIlV,EAAS,GACbmV,GAAInV,EAAS,GACboV,GAAI9E,EAAS,GACb+E,GAAI/E,EAAS,GACb,OAAU,kBACV,eAAgB,EAAI3S,KAAKyB,MAAMqB,OAG3C,CACJ,CAAE,MAAOsH,GACLpK,KAAK0H,MAAM,QAAS0C,EACxB,CACJ,EACA,WAAAzJ,CAAY0G,GACR,GAAIrH,KAAKiD,gBACL,OAEJ,IAAIid,EAAe,KACfvN,EAAW3S,KAAK4S,YAAYvL,GAEhC,GAAmB,GAAfA,EAAMC,MAcN,IAAK,IAAIpG,KAbLmG,EAAM2K,SAENhS,KAAKyB,MAAM0W,UAAY,CACnB8B,MAAOtH,EACPqH,QAASrH,GAKb3S,KAAK+c,cAIQ/c,KAAK0G,OAClB,GAAKxF,EAAKkb,IAAV,CAGA,IAAIvE,EAAU3W,EAAKkb,IAAIvE,QAAQlF,EAAS,GAAIA,EAAS,IACrD,GAAe,GAAXkF,EAAkB,CAUlB,GATkC,IAA9B7X,KAAK0Y,cAAcpQ,QAAiBjB,EAAM2K,WACtC6F,EAAU,GACVqI,EAAehf,EAAKG,WAEfwW,EAAU,KACfqI,EAAehf,EAAKE,aAG5BpB,KAAKie,WAAW/c,GAAM,EAAMgf,GACxBhf,EAAKM,OAAO8G,OAAS,EACrB,IAAI,IAAI6X,KAASjf,EAAKM,OAClBxB,KAAK0H,MAAM,QAASyY,GAG5B9Y,EAAM9D,iBACN,KACJ,CAnBA,CAuBW,GAAf8D,EAAMC,QAA8B,GAAfD,EAAMC,OAAe4Y,GAAiB7Y,EAAM2K,YACjEhS,KAAKyB,MAAMyW,OAASvF,GAGxB3S,KAAKmE,OACT,EAEA,aAAA0F,GACI,OAAO7J,KAAKyJ,eAAezJ,KAAK0J,MAAMwI,IAC1C,EAEA,WAAMkO,GACF,aAAapgB,KAAKqgB,kBAAiBC,UAC/BtgB,KAAK0G,MAAQ,GAEb1G,KAAKgY,OAAShY,KAAKgY,OAAOtI,QAAOqF,GAAgB,cAAXA,EAAE5S,MAAwB,IAAMoJ,SAASwJ,EAAE3S,OAAsB,WAAb2S,EAAEzS,SAC5FtC,KAAK2Z,YAAc,EACnB3Z,KAAK4Z,WAAa,EAClB5Z,KAAKwZ,QAAU,CAAC,EAChBxZ,KAAKwb,iCACE,IAEf,EAEA,MAAAiB,CAAOhW,EAAO,KAAM6S,GAAU,EAAMgC,GAAY,GAExCtb,KAAK8Z,mBAAqB,KAId,IAAZR,GACAtZ,KAAKwR,eAES,IAAd8J,GACAtb,KAAK0H,MAAM,QAAkB,OAATjB,EAAgBzG,KAAKge,SAAWvX,GACpDzG,KAAKwb,iCAGLxb,KAAK0c,eAEb,EAKA,WAAAlL,GACI,IAAI/K,EAAOzG,KAAKge,QAAO,GACvBhe,KAAKsZ,QAAQhO,OAAOtL,KAAKuZ,eAAiB,EAAGvZ,KAAKiZ,YAAa5S,OAAO8Q,OAAO1Q,IACzEzG,KAAKsZ,QAAQhR,OAAStI,KAAKiZ,aAC3BjZ,KAAKsZ,QAAQiH,QAEjBvgB,KAAKuZ,eAAiBvZ,KAAKsZ,QAAQhR,OAAS,EAC5CtI,KAAK0H,MAAM,iBAAkB1H,KAAKsZ,QAAStZ,KAAKuZ,eACpD,EACA,UAAMiH,SACIxgB,KAAKygB,aAAa,EAC5B,EACA,UAAMC,SACI1gB,KAAKygB,YAAY,EAC3B,EACA,iBAAMA,CAAYE,GACd,IAAIC,EAAQ5gB,KAAKuZ,eAAiBoH,EAC9BE,EAAU7gB,KAAKsZ,QAAQsH,GACvBC,IACA7gB,KAAKuZ,eAAiBqH,EACtB5gB,KAAKqb,OAAOwF,EAAS,CAAErP,aAAa,EAAO+J,aAAa,EAAOY,cAAc,IAC7Enc,KAAK0H,MAAM,iBAAkB1H,KAAKsZ,QAAStZ,KAAKuZ,gBAExD,EAEA,aAAA8D,CAAcnb,EAAOO,GAAS,GAE1B,GADAP,EAAQlC,KAAK8gB,aAAa5e,EAAM1B,IAC3B0B,GAASA,EAAMO,SAAWA,EAA/B,CAIAzC,KAAK6c,kBAAkB3a,EAAOO,GAC9B,IAAIse,GAAqB,EACrBC,GAAiB,EACrB,IAAI,IAAInM,KAAS7U,KAAKua,cAClB,IAAIrY,GAAS2S,EAAMrU,KAAO0B,EAAM1B,GAMhC,GAFAwgB,GAAiB,EAEbve,EACAzC,KAAK6c,kBAAkBhI,GAAO,QAI9B,GAAIA,EAAMuH,MAAQvH,EAAMuH,IAAItK,iBAAkB,CAC1C9R,KAAK6c,kBAAkBhI,GAAO,GAC9BkM,GAAqB,EACrB,KACJ,EAIJC,GAAmBve,GAAWse,GAC9B/gB,KAAK0H,MAAM,QAAS,gDA1BxB,CA4BJ,EAEA,oBAAAuZ,CAAqBnX,EAAGG,GACpB,IAAIsV,EAAOvf,KAAK6J,gBAOhB,OANU,OAANC,IACAA,GAAKA,EAAIyV,EAAKxV,WAAa/J,KAAKyB,MAAMsN,OAAO,IAAM/O,KAAKyB,MAAMqB,OAExD,OAANmH,IACAA,GAAKA,EAAIsV,EAAKrV,UAAYlK,KAAKyB,MAAMsN,OAAO,IAAM/O,KAAKyB,MAAMqB,OAE1D,CAACgH,EAAGG,EACf,EAEA,SAAA1F,CAAUkC,GACNA,EAAO,IAAMoL,UAAUpL,GACnBA,EAAKpE,WACLoE,EAAKpE,SAAS,IAAM,KAExB,IAAIH,EAAQlC,KAAKkhB,SAASza,GAC1BzG,KAAKsS,WAAU,IAAMtS,KAAKmhB,wBAAwBjf,EAAM1B,GAAIiG,EAAK5E,YACrE,EAEA,UAAAuf,CAAW7e,EAAYI,EAAO,CAAC,EAAGN,EAAW,GAAIG,EAAY,MACzD,OAAOxC,KAAKkhB,SAAS,CACjB3e,aACAC,YACAX,UAAWc,EACXN,YAER,EAEA,QAAA6e,CAASxf,EAAMlB,EAAK,MAChB,IAAI6gB,EAAMlb,OAAOnG,KAAKshB,YAAY9gB,IACvB,OAAPA,GAAe,IAAM+gB,QAAQ7f,EAAKa,aAClC/B,EAAKkB,EAAKa,WAAWif,QAAQ,gBAAiB,MAAQH,EAClDrhB,KAAK8gB,aAAa,IAAMtgB,KACxBA,EAAK6gB,IAIT7gB,EAAK6gB,EAEkB,oBAAhB3f,EAAK+I,SACZ/I,EAAOA,EAAK+I,UAEhB,IAAIvI,EAAQ,CACR1B,GAAI,IAAMA,EACV2B,KAAM,UACNb,UAAU,EACVe,SAAUX,EAAKW,SACfE,WAAYb,EAAKa,WACjBC,UAAWd,EAAKc,UAChBX,UAAWH,EAAKG,UAChBa,YAAahB,EAAKgB,aAAe,KACjCD,OAAQf,EAAKe,SAAU,GAEvBzC,KAAKka,kBACLhY,EAAME,KAAOpC,KAAKka,gBAAgBG,IAAI3Y,EAAKa,WAAYb,EAAKc,YAGhE,IAAI0I,EAAOlL,KAAKyhB,aAAavf,GAc7B,OAbAA,EAAMG,SAAW,IAAMoP,YAAYvP,EAAMG,UAAU,IAAMrC,KAAK0hB,2BAA2BxW,KAGrFhJ,EAAMO,QAAUzC,KAAKgY,OAAOtI,QAAOqF,IAAkB,IAAbA,EAAEtS,SAAiB6F,cACpDpG,EAAMO,OAGsB,IAA9BzC,KAAKua,cAAcjS,SACxBpG,EAAMO,QAAS,GAGnBzC,KAAKgY,OAAO/P,KAAK,KAAIgQ,WAAW/V,IAChClC,KAAKyc,SACEva,CACX,EAEA,0BAAAwf,CAA2BC,GACvB,IAAIpC,EAAOvf,KAAK6J,gBACZxH,EAAW,GACTrC,KAAKyB,MAAMsN,OAAO,GAAKwQ,EAAKvV,MAAM,GAAGhK,KAAKyB,MAAMqB,MAAQ6e,EAAU,GAAG,EAAI3hB,KAAKqZ,iBAC9ErZ,KAAKyB,MAAMsN,OAAO,GAAKwQ,EAAKpV,OAAO,GAAGnK,KAAKyB,MAAMqB,MAAQ6e,EAAU,GAAG,EAAI3hB,KAAKqZ,gBAKrF,OAHIrZ,KAAKqZ,eAAiB,MACtBrZ,KAAKqZ,gBAAkB,IAEpBhX,CACX,EAEA,YAAAof,CAAavf,GACT,GAAIA,EAAMka,IAAK,CACX,IAAI5S,EAAMtH,EAAMka,IAAIvS,gBACpB,MAAO,CAACL,EAAIQ,MAAQhK,KAAKyB,MAAMqB,MAAO0G,EAAIW,OAASnK,KAAKyB,MAAMqB,MAClE,CAEA,IAMIkH,EANA4X,EAAS/S,KAAK6Q,IACd,IAAMxU,KAAKhJ,EAAML,WACjB,IAAM0J,SAASrJ,EAAME,MAAQ,IAAM8I,KAAKhJ,EAAME,KAAKsM,YAAc,GAGjExD,EAAO,EAAO+C,WAGdjE,EADA4X,EAAS,EACD5hB,KAAKyB,MAAMiH,YAAcwC,EAAKgD,cAAgBhD,EAAKkD,aAGnDpO,KAAKyB,MAAMiH,YAAcwC,EAAKiD,QAAUjD,EAAKmD,OAGzD,IAAIwT,EAA6C,kBAAtB3f,EAAMQ,YAA2B,GAAK,EAC7DyH,EAASiO,EAAkB,GAATwJ,EAAcC,EAEpC,MAAO,CAAC7X,EAAOG,EACnB,EAEA,UAAA6R,CAAWkD,EAAIC,EAAI2C,GAAQ,GACvB,IAAIvC,EAAOvf,KAAK6J,gBAChB7J,KAAKyB,MAAMsN,OAAS,EACf+S,EAAQvC,EAAKvV,MAAM,EAAIhK,KAAKyB,MAAMsN,OAAO,IAAMmQ,GAC/C4C,EAAQvC,EAAKpV,OAAO,EAAInK,KAAKyB,MAAMsN,OAAO,IAAMoQ,GAErDnf,KAAKqZ,eAAiB,CAC1B,EAEA,WAAA0D,GACI,IAAI,IAAI7a,KAASlC,KAAKgY,OAClBhY,KAAK8c,oBAAoB5a,GAAO,GAAO,GAE3C,IAAI,IAAIhB,KAAQlB,KAAK0G,MACjB1G,KAAKie,WAAW/c,GAAM,EAE9B,EAEA,UAAA+c,CAAW/c,EAAM6Q,GAAS,EAAMI,EAAY,MAIxC,OAHK,IAAM5G,SAASrK,KAChBA,EAAOlB,KAAK0G,MAAMxF,IAElBA,EAAKI,WAAayQ,IAGP,OAAXA,GACA/R,KAAKwc,KAAKtb,EAAM,WAAY6Q,GAEhC/R,KAAKwc,KAAKtb,EAAM,oBAAqBiR,IAC9B,EACX,EAKA,UAAAuL,CAAWxc,GACPA,EAAKE,WAAWsK,UAAUxK,GAC1BA,EAAKG,WAAWqK,UAAUxK,GAC1BlB,KAAK4L,QAAQ5L,KAAK0G,MAAO1G,KAAK0G,MAAMtD,QAAQlC,GAChD,EAKA,iBAAM8R,CAAY9Q,GAGd,GAAmB,cAAfA,EAAMC,KAAsB,CAC5B,IAAIyC,EAAQ,KACRmd,EAAgB/hB,KAAKgY,OAAO7G,MAAK6Q,IACjCpd,EAAQod,EAAW5F,IAAI1I,mBAAmBxR,GACxB,OAAV0C,KAEZ,GAAImd,EACA,MAAM,IAAIzH,MAAM,+BAA+ByH,EAAcvhB,mBAAmBoE,6CAExF,CAGA,aAAa5E,KAAKqgB,kBAAiBC,UAC/B,IAAIzb,EAAI7E,KAAKgY,OAAOiK,WAAUlN,GAAKA,EAAEvU,IAAM0B,EAAM1B,KACjD,GAAIqE,EAAI,EACJ,OAAO,EAGX,IAAK,IAAI3D,KAAQlB,KAAK0G,MAAM+W,MAAM,GAC1Bvc,EAAKE,WAAW+G,QAAQ3H,KAAO0B,EAAM1B,IAAMU,EAAKG,WAAW8G,QAAQ3H,KAAO0B,EAAM1B,IAChFR,KAAK0d,WAAWxc,GASxB,OALIgB,EAAMO,QACNzC,KAAKqd,cAAcnb,GAAO,GAG9BlC,KAAK4L,QAAQ5L,KAAKgY,OAAQnT,IACnB,CAAI,GAEnB,EAKA,YAAAic,CAAaoB,GACT,IAAIlK,EAAShY,KAAKgY,OAAOtI,QAAOxN,GAASA,EAAM1B,KAAO0hB,IACtD,OAAIlK,EAAO1P,OAAS,EACT0P,EAAO,GAEX,IACX,EAKA,oBAAMwG,GACF,QAAKxe,KAAK0a,oBAIG1a,KAAKqgB,kBAAiBC,UAE/B,IAAI,IAAIpe,KAASlC,KAAKyY,eAAegF,MAAM,GACnCvb,EAAMka,IAAIvM,oBACJ7P,KAAKgT,YAAY9Q,GAK/B,IAAI,IAAIhB,KAAQlB,KAAK0Y,cAAc+E,MAAM,GACrCzd,KAAK0d,WAAWxc,GAEpB,OAAO,CAAI,GAEnB,EAEA,oBAAMihB,CAAehN,EAAI6F,EAAIoH,EAAInH,GAC7B,IAAIjD,EAAS,GACb,IAAI,IAAIxX,IAAM,CAAC2U,EAAIiN,GAAK,CACpB,IAAIlgB,EAAQlC,KAAK8gB,aAAatgB,GAC9B,IAAK0B,EACD,KAAM,qBAAuB1B,EAE5B,IAAK0B,EAAMka,IACZ,KAAM,0BAA4B5b,EAEtCwX,EAAO/P,KAAK/F,EAAMka,IACtB,OACMpc,KAAKyL,QACPuM,EAAO,GAAG/E,kBAAkB+H,GAC5BhD,EAAO,GAAG/E,kBAAkBgI,GAEpC,EAEA,aAAMxP,CAAQuP,EAAIC,GACd,IAAKD,IAAOC,EACR,KAAM,oCAGV,GAAID,GAAMC,EAAV,CAIA,GAAID,EAAG7S,SAAW8S,EAAG9S,QACjB,KAAM,mCAGV,IAAI3H,EAAKR,KAAK4Z,aACV1Y,EAAO,CAACV,KAAIc,UAAU,EAAOC,UAAU,EAAOC,OAAQ,GAAI4a,IAAK,MAYnE,GAXIpB,EAAGxV,QACHtE,EAAKE,WAAa4Z,EAClB9Z,EAAKG,WAAa4Z,IAIlB/Z,EAAKE,WAAa6Z,EAClB/Z,EAAKG,WAAa2Z,GAIlB9Z,EAAKE,WAAWoE,SAAWtE,EAAKG,WAAWmE,OAC3C,KAAM,2CAGV,IAAyE,IAArExF,KAAKqiB,cAAcnhB,EAAKE,YAAYgC,QAAQlC,EAAKG,WAAWb,IAC5D,KAAM,4BAGV,GAAIU,EAAKG,WAAW2G,eAAiB,IAAM9G,EAAKG,WAAW2H,qBACvD,KAAM,mCAIV,IAAK,IAAI6L,KAAS7U,KAAK0G,MACnB,GAAImO,EAAMuH,KAAOvH,EAAMuH,IAAIxK,OAAO1Q,GAC9B,KAAM,iCAKd,IAAK,EAAAohB,oBAAoBC,mBAAmBrhB,EAAKG,WAAW8D,QAAU,CAAC,EAAGjE,EAAKE,WAAW+D,QAAU,CAAC,GAAG,GAAO,GAAO,CAClH,IAAIgb,EAAQ,uDAAyDjf,EAAKG,WAAWyC,KAAO,IAC5F5C,EAAKM,OAAOyG,KAAKkY,GACjBngB,KAAK0H,MAAM,QAASyY,EACxB,CAEA,aAAangB,KAAKqgB,kBAAiBC,UAC/BtgB,KAAK+H,SAGL/H,KAAK0G,MAAMuB,KAAK,KAAIgQ,WAAW/W,IAC/BA,EAAKE,WAAWqK,QAAQvK,GACxBA,EAAKG,WAAWoK,QAAQvK,GAGxBlB,KAAKqd,cAAcnc,EAAKE,WAAW+G,SAAS,IACrC,IAvDX,CAyDJ,EAKA,aAAAka,CAAcG,GACV,IAAItgB,EAAQsgB,EAAgBra,QAExBsa,EAAW,CAAC,EACZC,EAAc,CAACxgB,GACnBugB,EAASvgB,EAAM1B,KAAM,EAErB,MAAOkiB,EAAYpa,OAAS,EAAG,CAC3B,IAAIqa,EAAeD,EAAYE,MAC/B,IAAK,IAAIzhB,KAAOwhB,EAAajc,MACzB,IAAK,IAAI7B,KAAK8d,EAAajc,MAAMvF,GAAM,CACnC,IAAID,EAAOyhB,EAAajc,MAAMvF,GAAK0D,GACnC,GAAI3D,EAAK2hB,QAAUF,EAAc,CAC7B,IAAIG,EAAS5hB,EAAK6hB,OACZD,EAAOtiB,MAAMiiB,IACfA,EAASK,EAAOtiB,KAAM,EACtBkiB,EAAYza,KAAK6a,GAEzB,CACJ,CAER,CAEA,OAAOzc,OAAO+F,OAAOqW,EACzB,EAKA,mBAAMO,GACFhjB,KAAKyB,MAAMiH,aAAe1I,KAAKyB,MAAMiH,YACrC1I,KAAK0H,MAAM,cAAe1H,KAAKyB,MAAMiH,mBAC/B1I,KAAKsS,YACXtS,KAAK0c,cACT,EAEA,OAAOuG,GAAW,GACd,IAAIxc,EAAO,CACP4F,cAAe,CAAC,GAGpB,IAAI,IAAInK,KAASlC,KAAKua,cAAe,CACjC,IAAI/M,EAAO,CAAC,aAAc,YAAa,YAAa,cAAe,UAC/DyV,GAEAzV,EAAKvF,KAAK,YAEd,IAAIib,EAAO,IAAMpE,eAAe5c,EAAOsL,GAEd,OAArB0V,EAAKxgB,oBACEwgB,EAAKxgB,aAEI,IAAhBwgB,EAAKzgB,eACEygB,EAAKzgB,OAEXygB,EAAK1gB,kBACC0gB,EAAK1gB,UAEhB,IAAI2gB,EAASjhB,EAAM1B,GAAGmM,OAAO,GAC7BlG,EAAK4F,cAAc8W,GAAUD,CACjC,CAEA,IAAKljB,KAAK+Y,OAAQ,CACdtS,EAAKiI,WAAa,GAClB,IAAI0U,EAAkBpjB,KAAK6a,kBAC3B,IAAI,IAAIjW,KAASwe,EACb3c,EAAKiI,WAAWzG,KAAKrD,EAAMxC,KAEnC,CAIA,OAAO,IAAIgZ,EAAc/U,OAAOuR,OAAO,CAAC,EAAG5X,KAAKwZ,QAAS/S,GAC7D,EAMA,sBAAM4Z,CAAiBgD,EAAIC,EAAU,CAAC,KAAM3gB,GACxC,IAAI4gB,EACJvjB,KAAK8Z,qBAEL,IACIyJ,QAAgBF,EAAG1gB,EACvB,CAAE,MAAOyH,GAGL,GADApK,KAAK0H,MAAM,QAAS0C,EAAO,qBACC,IAAxBkZ,EAAQ/H,YACR,UACUvb,KAAKwgB,MACf,CAAE,MAAOgD,GACLxjB,KAAK0H,MAAM,QAAS0C,EAAO,gBAC/B,CAEJmZ,GAAU,CACd,CAKA,OAHAvjB,KAAK8Z,qBACL9Z,KAAKyc,OAAO,KAAM6G,EAAQ9R,YAAa8R,EAAQhI,WAExCiI,CACX,EAMA,YAAMlI,CAAO7B,EAAS8J,EAAU,CAAC,GAC7B,aAAatjB,KAAKqgB,kBAAiBC,UAO/B,IALsB,IAAlBgD,EAAQlD,cACFpgB,KAAKogB,QACXpgB,KAAKwZ,QAAUA,aAAmB,EAAAxN,aAAewN,EAAQ/O,SAAW+O,IAGnE,IAAMjO,SAASiO,GAChB,OAAO,EAIX,IAAIzN,EAuBJ,OAtBIyN,aAAmB,EAAAxN,cAEnBD,EAAK,IAAI,EAAAC,aAAawN,EAAQ/O,SAAUzK,KAAKka,iBAC7CnO,EAAG0X,UAAUjK,EAAQkK,gBAAiBlK,EAAQmK,sBAG9C5X,EAAK,IAAI,EAAAC,aAAawN,EAASxZ,KAAKka,iBAExCnO,EAAG6X,aACH7X,EAAGgT,QACH/e,KAAK0Z,aAAerT,OAAO8Q,OAAOpL,SAE5B/L,KAAKmb,mBAAmBnb,KAAK0Z,aAAamK,sBAAqB,GAAO,QAA0B,IAAlBP,EAAQlD,aACtFpgB,KAAK8jB,YAAY9jB,KAAK0Z,aAAaqK,uBACnC/jB,KAAKgkB,YAAYhkB,KAAK0Z,eAEC,IAAzB4J,EAAQnH,cACRnc,KAAKmc,eAGTnc,KAAKsS,WAAU,IAAMtS,KAAKwb,mCAEnB,CAAI,GACZ8H,EACP,EAEA,wBAAMnI,CAAmBjI,EAAQ5Q,EAAQ8d,GAAQ,GAC7C,IAAK9Z,MAAM0E,QAAQkI,GACf,OAGJ,IAAIoQ,EAAU,CACV/H,aAAa,EACb/J,aAAa,EACb8J,WAAW,GAEf,aAAatb,KAAKqgB,kBAAiBC,UAE3BF,IACApgB,KAAKgY,OAAShY,KAAKgY,OAAOtI,QAAOqF,GAAgB,cAAXA,EAAE5S,MAAwB4S,EAAEzS,SAAWA,KAGjF,IAAI4I,EAAOlL,KAAKyhB,aAAa,CAAC,GAC1Bpf,EAAW,CAAC,EAAE,GAClB,IAAI,IAAIwC,KAAKqO,EACT7Q,EAAW,EACN6I,EAAK,GAAKkN,EACXvT,GAAKqG,EAAK,GAAKkN,UAGbpY,KAAKikB,eAAe/Q,EAAOrO,GAAIvC,EAAQD,EACjD,GACDihB,EACP,EAEA,oBAAMW,CAAerf,EAAOtC,EAAS,OAAQD,EAAW,MACpD,aAAarC,KAAKqgB,kBAAiBC,UAC/B,IAAI9f,EAAK,IAAMoE,EAAMd,KAErB,QAAI9D,KAAKgY,OAAOiK,WAAUtS,GAAgB,cAAXA,EAAExN,MAAwBwN,EAAEnP,IAAMA,KAAO,KAGxEoE,EAAQ,IAAMiN,UAAUjN,GACI,qBAAjBA,EAAMO,SACbP,EAAMO,OAAS,CAAC,GAEpBnF,KAAKgY,OAAO/P,KAAK,KAAIgQ,WAAW,CAC5BzX,KACA2B,KAAM,YACNG,SACAD,SAAU,IAAMoP,YAAYpP,GAAU,IAAMrC,KAAK0hB,2BAA2B1hB,KAAKyhB,aAAa,CAAC,MAC/Frf,KAAMiE,OAAO8Q,OAAOvS,OAEjB,EAAI,GAEnB,EAEA,eAAAiW,GACI,OAAO7a,KAAKgY,OAAOtI,QAAOqF,GAAgB,cAAXA,EAAE5S,MACrC,EAEA,kBAAAob,CAAmB/c,GACf,OAAOR,KAAKgY,OAAO7G,MAAK4D,GAAgB,cAAXA,EAAE5S,MAAwB4S,EAAEvU,KAAOA,GACpE,EAEA,iBAAMwjB,CAAYjY,GACd,IAAII,EAAQJ,EAAGmY,WACf,OAAOC,QAAQC,IAAI/d,OAAO+F,OAAOD,GAAOmB,KAAI5L,GAAQ1B,KAAKqkB,mBAAmB3iB,KAChF,EAEA,wBAAM2iB,CAAmB3iB,GACrB,IAAIiB,EAAOjB,EAAK4iB,mBAChB,IAAI,IAAIzf,KAAKlC,EAAM,CACf,IAAI4hB,EAAM5hB,EAAKkC,GACX2f,EAAM9iB,EAAK+iB,eAAeF,GAC1BpkB,EAAM,IAAMuB,EAAKlB,GACrB,OAAOkB,EAAKgjB,gBAAgBH,IACxB,IAAK,eACKvkB,KAAKmiB,eAAe,IAAMqC,EAAIlU,UAAW,SAAUnQ,EAAKokB,GAAK,GACnE,MACJ,IAAK,kBACKvkB,KAAKmiB,eAAe,IAAMqC,EAAInU,eAAgB,SAAUlQ,EAAKokB,GAAK,GACxE,MACJ,IAAK,SACL,IAAK,cACKvkB,KAAK2kB,eAAeH,EAAKrkB,EAAKokB,GACpC,MAEZ,CACJ,EAEA,oBAAMI,CAAeH,EAAKrB,EAAQoB,GAC9B,IAAI,IAAI5Y,KAAK6Y,EAET,GAAGA,EAAI7Y,IAAwB,kBAAX6Y,EAAI7Y,IAAyB,kBAANA,QACjC3L,KAAK2kB,eAAeH,EAAI7Y,GAAIwX,EAAQoB,OAEzC,KAAK,IAAM5b,MAAM6b,GAClB,SAEKA,EAAIlU,gBACHtQ,KAAKmiB,eAAe,IAAMqC,EAAIlU,UAAW,SAAU6S,EAAQoB,GAAK,GAEjEC,EAAInU,sBACHrQ,KAAKmiB,eAAe,IAAMqC,EAAInU,eAAgB,SAAU8S,EAAQoB,GAAK,EAC/E,CAER,EAEA,6BAAMpD,CAAwBgC,EAAQxgB,GAClC,IAAI,IAAI4hB,KAAO5hB,QACL3C,KAAK2kB,eAAehiB,EAAK4hB,GAAMpB,EAAQoB,EAErD,EAEA,iBAAMT,CAAY3X,EAAOrC,EAAI,EAAGG,EAAI,EAAG2a,EAAW,IAC9C,IAAIC,EAAY,GACZC,EAAO,EACX,IAAI,IAAIpjB,KAAQyK,EAAO,CAMnB,GAAIyY,EAAS1U,SAASxO,EAAKlB,UAA6EuG,IAAtErF,EAAKqjB,mBAAmB5T,MAAK6T,IAASJ,EAAS1U,SAAS8U,EAAKxkB,MAAoB,CAC/GyJ,GAAKmO,EAAS,EACd,QACJ,CAEA,IAAI3R,EAA8B,oBAAhB/E,EAAK+I,OAAwB/I,EAAK+I,SAAW/I,EAC/D+E,EAAKpE,SAAW,IAAMoP,YAAYhL,EAAKpE,UAAU,IAAM,CAACyH,EAAEG,KAE1D,IAAI/H,EAAQlC,KAAKkhB,SAASza,EAAM/E,EAAKlB,IACrCokB,EAAS3c,KAAKvG,EAAKlB,IAEnB,IAAI0K,EAAOlL,KAAKyhB,aAAavf,GAC7B4iB,EAAOjW,KAAK6Q,IAAIoF,EAAMre,EAAKpE,SAAS,GAAK6I,EAAK,IAC9CjB,EAAIxD,EAAKpE,SAAS,GAAK6I,EAAK,GAAKkN,EAEjCyM,EAAYA,EAAU3J,OAAOxZ,EAAKujB,eACtC,CACIJ,EAAUvc,cACJtI,KAAK8jB,YAAYe,EAAWC,EAAO1M,EAAQ,EAAGwM,EAE5D,EAEA,WAAAtD,CAAY9gB,EAAK,MACK,kBAAPA,GAAkC,kBAAPA,GAAiC,IAAdA,EAAG8H,SACxD9H,EAAKR,KAAK2Z,YACV3Z,KAAK2Z,eAET,IAAIuL,EAAM1P,OAAO2P,SAAS3kB,EAAI,IAI9B,OAHKgV,OAAO4P,MAAMF,KACdllB,KAAK2Z,YAAc9K,KAAK6Q,IAAI1f,KAAK2Z,YAAauL,EAAI,IAE/C1kB,CACX,EAKA,YAAA2b,GACI,GAAKnc,KAAK0J,MAAMwI,KAA8B,IAAvBlS,KAAKgY,OAAO1P,OAAnC,CAIA,IAAI+c,EAAO,KAAMC,EAAO,KACpBC,EAAO,KAAMC,EAAO,KAExB,IAAK,IAAItjB,KAASlC,KAAKgY,OAAQ,CAC3B,IAAI9M,EAAOlL,KAAKyhB,aAAavf,GACzBqP,EAAM,IAAME,YAAYvP,EAAMG,UACtB,MAARgjB,GACAA,EAAO9T,EAAI,GAAG,GACd+T,EAAO/T,EAAI,GAAGrG,EAAK,GAAG,GACtBqa,EAAOhU,EAAI,GAAG,GACdiU,EAAOjU,EAAI,GAAGrG,EAAK,GAAG,KAEtBma,EAAOxW,KAAKkL,IAAIsL,EAAM9T,EAAI,GAAG,IAC7B+T,EAAOzW,KAAK6Q,IAAI4F,EAAM/T,EAAI,GAAGrG,EAAK,GAAG,IACrCqa,EAAO1W,KAAKkL,IAAIwL,EAAMhU,EAAI,GAAG,IAC7BiU,EAAO3W,KAAK6Q,IAAI8F,EAAMjU,EAAI,GAAGrG,EAAK,GAAG,IAE7C,CAEA,IAAIqU,EAAOvf,KAAK0J,MAAMwI,IAAIsN,wBACtBiG,EAASlG,EAAKvV,OAAOsb,EAAKD,GAC1BK,EAASnG,EAAKpV,QAAQqb,EAAKD,GAC/BvlB,KAAKyB,MAAMqB,MAAQ+L,KAAKkL,IAAI0L,EAAQC,EAAQ,KAC5C1lB,KAAKyB,MAAMsN,OAAS,CAChBwQ,EAAKvV,MAAM,EAAIhK,KAAKyB,MAAMqB,OAAOuiB,EAAKC,GAAM,EAC5C/F,EAAKpV,OAAO,EAAInK,KAAKyB,MAAMqB,OAAOyiB,EAAKC,GAAM,GAEjDxlB,KAAKqZ,eAAiB,CA7BtB,CA8BJ,EAEA,mBAAAyC,CAAoBpN,EAAYtC,EAAQiB,EAAO5E,EAAYkd,EAAqBC,EAAc7M,GAC1F/Y,KAAKiD,gBAAkB,CACnByL,aACAtC,SACAiB,QACAsY,sBACA5M,SAER,IAIR,MAAMqC,EACF,WAAAnH,CAAYuF,GACRnT,OAAOuR,OAAO5X,KAAMwZ,EACxB,EChhD0H,UCQ9H,IAAI,GAAY,OACd,EACA1Z,EACAoD,GACA,EACA,KACA,KACA,MAIF,QAAe,EAAiB,O,yBCNhC2iB,EAAOC,QAAU,SAAgBvO,EAAIC,EAAIuO,EAAIC,EAAIvO,EAAIC,EAAIuO,EAAIC,GAEzD,OAAO3O,EAAKE,EAAKwO,GAAM1O,EAAKwO,EAAKtO,GAAMD,EAAKE,EAAKwO,GAAM1O,EAAKwO,EAAKtO,CACrE,C,+BCdA,IAAIyO,EAAU,EAAQ,OAatBN,EAAOC,QAAU,SAAiBM,EAAIC,EAAIC,EAAIC,EAAIhP,EAAIC,EAAIC,EAAIC,GAE1D,OAAOyO,EAAQ5O,EAAIC,EAAIC,EAAIC,EAAI0O,EAAIC,EAAIC,EAAIC,EAC/C,C,yBCNAV,EAAOC,QAAU,SAAkBvO,EAAIC,EAAIuO,EAAIC,EAAIvO,EAAIC,GAEnD,OAAOD,GAAMF,GAAME,GAAMF,EAAKwO,GAAMrO,GAAMF,GAAME,GAAMF,EAAKwO,CAC/D,C,+BCbA,IAAIQ,EAAW,EAAQ,OACnBC,EAAW,EAAQ,OAavBZ,EAAOC,QAAU,SAAiBvO,EAAIC,EAAIC,EAAIC,EAAI0O,EAAIC,EAAIC,EAAIC,GAE1D,SAAIC,EAASJ,EAAIC,EAAIC,EAAIC,EAAIhP,EAAIC,KAAOgP,EAASJ,EAAIC,EAAIC,EAAIC,EAAI9O,EAAIC,MAI9D+O,EAASlP,EAAIC,EAAIC,EAAIC,EAAI0O,EAAIC,EAAID,EAAKE,EAAID,IAC7CI,EAASlP,EAAIC,EAAIC,EAAIC,EAAI0O,EAAKE,EAAID,EAAID,EAAKE,EAAID,EAAKE,IACpDE,EAASlP,EAAIC,EAAIC,EAAIC,EAAI0O,EAAIC,EAAKE,EAAIH,EAAKE,EAAID,EAAKE,IACpDE,EAASlP,EAAIC,EAAIC,EAAIC,EAAI0O,EAAIC,EAAID,EAAIC,EAAKE,GAClD,C,+BCxBA,MAAMG,EAAgB,EAAQ,OACxBC,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,OACtBC,EAAa,EAAQ,OA6B3B,SAASC,EAAkBvP,EAAIC,EAAIC,EAAIC,EAAIqP,EAAIC,EAAIC,EAAIC,EAAIC,EAAYC,GAEnE,OAAID,GAAcC,EAEPT,EAAeD,EAAcnP,EAAIC,EAAIC,EAAIC,EAAIyP,GAAaT,EAAcK,EAAIC,EAAIC,EAAIC,EAAIE,IAE1FD,EAEEP,EAAYG,EAAIC,EAAIC,EAAIC,EAAIR,EAAcnP,EAAIC,EAAIC,EAAIC,EAAIyP,IAE5DC,EAEER,EAAYrP,EAAIC,EAAIC,EAAIC,EAAIgP,EAAcK,EAAIC,EAAIC,EAAIC,EAAIC,SAFhE,CAIT,CA1BAtB,EAAOC,QAAU,SAAkBvO,EAAIC,EAAIC,EAAIC,EAAIqP,EAAIC,EAAIC,EAAIC,EAAIC,EAAYC,GAE3E,OAAID,GAAcC,EAEPN,EAAkBvP,EAAIC,EAAIC,EAAIC,EAAIqP,EAAIC,EAAIC,EAAIC,EAAIC,EAAYC,GAI9DP,EAAWtP,EAAIC,EAAIC,EAAIC,EAAIqP,EAAIC,EAAIC,EAAIC,EAEtD,C,wBC9BA,SAASG,EAAgB9P,EAAIC,EAAIC,EAAIC,GAEjC,OAAO7I,KAAK0F,KAAK1F,KAAK2F,IAAI+C,EAAKE,EAAI,GAAK5I,KAAK2F,IAAIgD,EAAKE,EAAI,GAC9D,CAcAmO,EAAOC,QAAU,SAAmBvO,EAAIC,EAAIC,EAAIC,EAAI4P,EAAIC,EAAIC,GAGxD,OADAA,EAAYA,GAAa,EAClB3Y,KAAKiE,IAAIuU,EAAgB9P,EAAIC,EAAIC,EAAIC,IAAO2P,EAAgB9P,EAAIC,EAAI8P,EAAIC,GAAMF,EAAgB5P,EAAIC,EAAI4P,EAAIC,MAASC,CAC9H,C,kBCvBA,IAAIC,EAAe,EAAQ,OACvBhB,EAAW,EAAQ,OAWvBZ,EAAOC,QAAU,SAAqBvO,EAAIC,EAAIC,EAAIC,EAAIgQ,EAAQF,GAE1D,IAAIlf,EAASof,EAAOpf,OAGpB,GAAImf,EAAaC,EAAQnQ,EAAIC,EAAIgQ,GAE7B,OAAO,EAIX,IAAK,IAAI3iB,EAAI,EAAGA,EAAIyD,EAAQzD,GAAK,EACjC,CACI,IAAI8iB,GAAK9iB,EAAI,GAAKyD,EAClB,GAAIme,EAASlP,EAAIC,EAAIC,EAAIC,EAAIgQ,EAAO7iB,GAAI6iB,EAAO7iB,EAAI,GAAI6iB,EAAOC,GAAID,EAAOC,EAAI,IAEzE,OAAO,CAEf,CACA,OAAO,CACX,C,yBCjBA9B,EAAOC,QAAU,SAAoBvO,EAAIC,EAAIC,EAAIC,EAAIqP,EAAIC,EAAIC,EAAIC,GAE7D,IAAIU,EAAOnQ,EAAKF,EACZsQ,EAAOnQ,EAAKF,EACZsQ,EAAOb,EAAKF,EACZgB,EAAOb,EAAKF,EACZgB,IAAMH,GAAQtQ,EAAKwP,GAAMa,GAAQpQ,EAAKwP,MAASc,EAAOD,EAAOD,EAAOG,GACpEE,GAAKH,GAAQtQ,EAAKwP,GAAMe,GAAQxQ,EAAKwP,MAASe,EAAOD,EAAOD,EAAOG,GACvE,OAAOC,GAAK,GAAKA,GAAK,GAAKC,GAAK,GAAKA,GAAK,CAC9C,C,yBCdApC,EAAOC,QAAU,SAAuBvO,EAAIC,EAAIC,EAAIC,EAAIwQ,GAEpD,MAAMC,EAAQtZ,KAAKuZ,MAAM1Q,EAAKF,EAAIC,EAAKF,GAAM1I,KAAKoH,GAAK,EACjDoS,EAAOH,EAAY,EACnBhS,EAAMrH,KAAKqH,IAAIiS,GAASE,EACxBlS,EAAMtH,KAAKsH,IAAIgS,GAASE,EAC9B,MAAO,CACH9Q,EAAKrB,EAAKsB,EAAKrB,EACfsB,EAAKvB,EAAKwB,EAAKvB,EACfsB,EAAKvB,EAAKwB,EAAKvB,EACfoB,EAAKrB,EAAKsB,EAAKrB,EAEvB,C,+BCpBA,MAAMmS,EAAY,EAAQ,MAU1BzC,EAAOC,QAAU,SAAsB4B,EAAQ5d,EAAGG,EAAGud,GAEjD,IAEI3iB,EAAG8iB,EAFHrf,EAASof,EAAOpf,OAChB0M,GAAI,EAER,IAAKnQ,EAAI,EAAG8iB,EAAIrf,EAAS,EAAGzD,EAAIyD,EAAQzD,GAAK,EAEnC6iB,EAAO7iB,EAAI,GAAKoF,IAAQyd,EAAOC,EAAI,GAAK1d,GAAQH,GAAK4d,EAAOC,GAAKD,EAAO7iB,KAAOoF,EAAIyd,EAAO7iB,EAAI,KAAO6iB,EAAOC,EAAI,GAAKD,EAAO7iB,EAAI,IAAM6iB,EAAO7iB,KAE/ImQ,GAAKA,GAET2S,EAAI9iB,EAER,GAAImQ,EAEA,OAAO,EAEX,IAAKnQ,EAAI,EAAGA,EAAIyD,EAAQzD,GAAK,EAC7B,CACI,IAEI0jB,EAAKC,EAFLC,EAAMf,EAAO7iB,GACb6jB,EAAMhB,EAAO7iB,EAAI,GAYrB,GAVIA,IAAMyD,EAAS,GAEfigB,EAAMb,EAAO,GACbc,EAAMd,EAAO,KAIba,EAAMb,EAAO7iB,EAAI,GACjB2jB,EAAMd,EAAO7iB,EAAI,IAEjByjB,EAAUG,EAAKC,EAAKH,EAAKC,EAAK1e,EAAGG,EAAGud,GAEpC,OAAO,CAEf,CACA,OAAO,CACX,C,yBCzCA3B,EAAOC,QAAU,SAAwB6C,EAASC,GAM9C,IAJA,IAGIC,EAAMC,EAAMC,EAAWC,EAAMC,EAAMtB,EAHnC7S,EAAI6T,EACJ5T,EAAI6T,EACJM,EAAW,CAACpU,EAAGC,GAEVlQ,EAAI,EAAGA,EAAIqkB,EAAS5gB,OAAQzD,IAGjC,IADA,IAAIskB,EAAUD,EAASrkB,GACdukB,EAAK,EAAGA,EAAKD,EAAQ7gB,OAAQ8gB,GAAM,EAC5C,CACI,IAAIC,GAAMD,EAAK,GAAKD,EAAQ7gB,OACxB+F,EAAS,CAAEvE,EAAGqf,EAAQE,EAAK,GAAKF,EAAQC,EAAK,GAAInf,EAAGkf,EAAQC,GAAMD,EAAQE,IAE9E,IADAR,EAAOC,EAAO,KACTnB,EAAI,EAAGA,EAAI7S,EAAExM,OAAQqf,GAAK,EAE3BoB,EAAY1a,EAAOvE,EAAIgL,EAAE6S,GAAKtZ,EAAOpE,EAAI6K,EAAE6S,EAAI,IAClC,OAATkB,GAAiBE,EAAYF,KAE7BA,EAAOE,IAEE,OAATD,GAAiBC,EAAYD,KAE7BA,EAAOC,GAIf,IADAC,EAAOC,EAAO,KACTtB,EAAI,EAAGA,EAAI5S,EAAEzM,OAAQqf,GAAK,EAE3BoB,EAAY1a,EAAOvE,EAAIiL,EAAE4S,GAAKtZ,EAAOpE,EAAI8K,EAAE4S,EAAI,IAClC,OAATqB,GAAiBD,EAAYC,KAE7BA,EAAOD,IAEE,OAATE,GAAiBF,EAAYE,KAE7BA,EAAOF,GAGf,GAAID,EAAOE,GAAQC,EAAOJ,EAEtB,OAAO,CAEf,CAEJ,OAAO,CACX,C","sources":["webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/ModelBuilder.vue?56f5","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Block.vue?ce7d","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/BlockParameter.vue?1a0b","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/model-builder/BlockParameter.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/BlockParameter.vue?9f10","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/BlockParameter.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/config.js","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/model-builder/Block.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Block.vue?f742","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Block.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Edge.vue?498b","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/segment.js","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/model-builder/Edge.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Edge.vue?4231","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Edge.vue","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/ModelBuilder.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/ModelBuilder.vue?9890","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/ModelBuilder.vue","webpack://@openeo/web-editor/./node_modules/intersects/box-box.js","webpack://@openeo/web-editor/./node_modules/intersects/box-line.js","webpack://@openeo/web-editor/./node_modules/intersects/box-point.js","webpack://@openeo/web-editor/./node_modules/intersects/line-box.js","webpack://@openeo/web-editor/./node_modules/intersects/line-line.js","webpack://@openeo/web-editor/./node_modules/intersects/line-point.js","webpack://@openeo/web-editor/./node_modules/intersects/line-polygon.js","webpack://@openeo/web-editor/./node_modules/intersects/lineToLine.js","webpack://@openeo/web-editor/./node_modules/intersects/lineToPolygon.js","webpack://@openeo/web-editor/./node_modules/intersects/polygon-point.js","webpack://@openeo/web-editor/./node_modules/intersects/polygon-polygon.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"div\",class:_vm.classes,style:(_vm.style),attrs:{\"id\":_vm.id,\"tabindex\":\"0\"},on:{\"mousemove\":_vm.onMouseMove,\"mousedown\":_vm.onMouseDown,\"wheel\":_vm.onMouseWheel,\"keydown\":_vm.onKeyDown,\"focus\":function($event){_vm.hasFocus = true},\"blur\":function($event){_vm.hasFocus = false}}},[_c('svg',{staticClass:\"canvas\",attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"version\":\"1.1\"}},[_vm._l((_vm.edges),function(edge){return _c('Edge',{key:edge.id,attrs:{\"id\":edge.id,\"parameter1\":edge.parameter1,\"parameter2\":edge.parameter2,\"selected\":edge.selected,\"inactive\":edge.inactive,\"issues\":edge.issues,\"state\":_vm.state},on:{\"mounted\":node => _vm.mount(edge, node),\"unmounted\":() => _vm.mount(edge),\"position\":function($event){return _vm.updateEdgePos(edge, arguments)}}})}),_vm._l((_vm.hiddenParameterRefEdges),function(edge){return _c('Edge',{key:edge.id,attrs:{\"id\":edge.id,\"parameter1\":edge.parameter1,\"parameter2\":edge.parameter2,\"inactive\":true,\"lineColor\":[200,200,200,1],\"lineWidth\":2,\"state\":_vm.state},on:{\"mounted\":node => _vm.mount(edge, node),\"unmounted\":() => _vm.mount(edge)}})}),(_vm.linkingLine)?_c('line',_vm._b({},'line',_vm.linkingLine,false)):_vm._e(),(_vm.selectRect)?_c('rect',_vm._b({},'rect',_vm.selectRect,false)):_vm._e()],2),_c('div',{staticClass:\"blocks\"},_vm._l((_vm.blocks),function(block){return _c('Block',{key:block.id,attrs:{\"id\":block.id,\"type\":block.type,\"spec\":block.spec,\"state\":_vm.state,\"selected\":block.selected,\"position\":block.position,\"origin\":block.origin,\"process_id\":block.process_id,\"namespace\":block.namespace,\"result\":block.result,\"args\":block.arguments,\"description\":block.description},on:{\"update\":(...args) => _vm.updateBlock(block, ...args),\"mounted\":node => _vm.mount(block, node),\"unmounted\":() => _vm.mount(block),\"move\":_vm.startDragBlock}})}),1),(_vm.state.scale < 0.7 || _vm.showZoomInfo)?_c('div',{staticClass:\"zoomInfo\"},[(_vm.state.scale < 0.7)?_c('div',[_vm._v(\" Zoom in for more details. \")]):_vm._e(),(_vm.showZoomInfo)?_c('div',[_vm._v(\" Zoom with \"),_c('kbd',[_vm._v(\"STRG\")]),_vm._v(\" or \"),_c('kbd',[_vm._v(\"Meta\")]),_vm._v(\" key and the mouse wheel. \")]):_vm._e()]):_vm._e(),(_vm.parameterViewer)?_c('ParameterViewer',_vm._b({on:{\"close\":function($event){_vm.parameterViewer = null}}},'ParameterViewer',_vm.parameterViewer,false)):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"div\",class:_vm.containerClasses,style:(_vm.styles),attrs:{\"id\":'block' + this.id},on:{\"mousedown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"]))return null;$event.preventDefault();$event.stopPropagation();if('button' in $event && $event.button !== 0)return null;return _vm.onMouseDown.apply(null, arguments)}}},[_c('div',{staticClass:\"blockTitle\",on:{\"mousedown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"]))return null;$event.preventDefault();$event.stopPropagation();if('button' in $event && $event.button !== 0)return null;return _vm.emitDrag.apply(null, arguments)}}},[_c('span',{staticClass:\"titleText\",attrs:{\"title\":_vm.plainTitle}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.invalid),expression:\"invalid\"}],staticClass:\"invalid\",attrs:{\"title\":\"Process or Collection not supported!\"}},[_c('i',{staticClass:\"fas fa-exclamation-triangle\"})]),_vm._v(\" \"+_vm._s(_vm.name)+\" \"),(_vm.showId)?_c('span',{staticClass:\"blockId\"},[_vm._v(_vm._s(_vm.id))]):_vm._e()]),_c('div',{staticClass:\"blockicon\",on:{\"mousedown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"]))return null;$event.preventDefault();$event.stopPropagation();if('button' in $event && $event.button !== 0)return null;return _vm.focus()}}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsDescription && !_vm.showDescriptionField),expression:\"allowsDescription && !showDescriptionField\"}],staticClass:\"addDescription\",attrs:{\"title\":\"Add description\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.addDescription()}}},[_c('i',{staticClass:\"fas fa-comment-medical\"})]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsDuplicate),expression:\"allowsDuplicate\"}],staticClass:\"duplicate\",attrs:{\"title\":\"Duplicate\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.duplicate.apply(null, arguments)}}},[_c('i',{staticClass:\"fas fa-clone\"})]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsDelete),expression:\"allowsDelete\"}],staticClass:\"delete\",attrs:{\"title\":\"Remove (DEL)\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.remove()}}},[_c('i',{staticClass:\"fas fa-trash\"})]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsInfo),expression:\"allowsInfo\"}],staticClass:\"info\",attrs:{\"title\":\"Details\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.showInfo()}}},[_c('i',{staticClass:\"fas fa-info\"})]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsParameterChange),expression:\"allowsParameterChange\"}],staticClass:\"settings\",attrs:{\"title\":_vm.isParameter ? 'Edit parameter' : 'Change parameter values'},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.edit.apply(null, arguments)}}},[_c('i',{staticClass:\"fas fa-edit\"})])])]),_c('div',{staticClass:\"inout\"},[_c('div',{staticClass:\"inputs\"},_vm._l((_vm.parameters),function(param,i){return _c('BlockParameter',{key:i,ref:\"parameters\",refInFor:true,attrs:{\"state\":_vm.state,\"value\":_vm.args[param.name],\"name\":param.name,\"description\":param.description,\"optional\":param.optional,\"deprecated\":param.deprecated,\"experimental\":param.experimental,\"default\":param.default,\"schema\":param.schema},on:{\"input\":value => _vm.updateArgument(param.name, value),\"edgesChanged\":function($event){return _vm.edgesChanged(param, $event)}}})}),1),_c('div',{staticClass:\"outputs\"},[_c('BlockParameter',_vm._b({ref:\"output\",attrs:{\"state\":_vm.state,\"label\":_vm.outputLabel},on:{\"input\":_vm.updateResult}},'BlockParameter',_vm.output,false))],1)]),(_vm.showDescriptionField)?_c('textarea',{ref:\"descriptionField\",staticClass:\"editDescription\",attrs:{\"readonly\":!_vm.state.editable,\"placeholder\":\"Type description here...\"},domProps:{\"value\":_vm.description},on:{\"input\":_vm.updateDescription,\"blur\":_vm.updateDescription,\"mousedown\":function($event){$event.stopPropagation();}}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{class:_vm.classes},[(!_vm.output)?_c('div',_vm._g({ref:\"circle\",class:_vm.circleClasses},_vm.circleListeners)):_vm._e(),_c('span',_vm._g({staticClass:\"text\"},_vm.textListeners),[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.unspecified),expression:\"unspecified\"}],staticClass:\"unspecified\",attrs:{\"title\":\"Parameter is likely unsupported!\"}},[_c('i',{staticClass:\"fas fa-exclamation-triangle\"})]),_c('span',{staticClass:\"label\"},[_vm._v(_vm._s(_vm.displayLabel))]),(_vm.displayValue.length)?[_vm._v(\": \")]:_vm._e(),_c('span',{staticClass:\"value\",domProps:{\"innerHTML\":_vm._s(_vm.displayValue)}})],2),(_vm.output)?_c('div',_vm._g({ref:\"circle\",class:_vm.circleClasses,attrs:{\"title\":\"Output of the process\"}},_vm.circleListeners)):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div :class=\"classes\">\n        <div v-if=\"!output\" ref=\"circle\" :class=\"circleClasses\" v-on=\"circleListeners\"></div>\n        <span class=\"text\" v-on=\"textListeners\">\n            <span v-show=\"unspecified\" class=\"unspecified\" title=\"Parameter is likely unsupported!\">\n                <i class=\"fas fa-exclamation-triangle\"></i>\n            </span>\n            <span class=\"label\">{{ displayLabel }}</span><template v-if=\"displayValue.length\">: </template>\n            <span class=\"value\" v-html=\"displayValue\"></span>\n        </span>\n        <div v-if=\"output\" ref=\"circle\" :class=\"circleClasses\" v-on=\"circleListeners\" title=\"Output of the process\"></div>\n    </div>\n</template>\n\n<script>\nimport { ProcessSchema } from '@openeo/js-commons';\nimport { ProcessGraph } from '@openeo/js-processgraphs';\nimport Utils from '../../utils.js';\n\nexport default {\n    name: 'BlockParameter',\n    props: {\n        name: {\n            type: String,\n            default: 'output'\n        },\n        description: {\n            type: String,\n            default: ''\n        },\n        optional: {\n            type: Boolean,\n            default: false\n        },\n        deprecated: {\n            type: Boolean,\n            default: false\n        },\n        experimental: {\n            type: Boolean,\n            default: false\n        },\n        default: {},\n        value: {},\n        schema: {\n            type: [Object, Array],\n            default: null\n        },\n        label: {\n            type: String\n        },\n        output: {\n            type: Boolean,\n            default: false\n        },\n        state: {\n            type: Object,\n            required: true\n        }\n    },\n    data() {\n        return {\n            // The attached edges\n            edges: []\n        };\n    },\n    computed: {\n        schemas() {\n            if (this.schema instanceof ProcessSchema) {\n                return this.schema;\n            }\n            else {\n                return new ProcessSchema(this.schema);\n            }\n        },\n        hasValue() {\n            return (this.value !== undefined);\n        },\n        textListeners() {\n            if (this.allowsArgumentChange) {\n                return {\n                    click: this.openEditorForArguments\n                };\n            }\n            else {\n                return {};\n            }\n        },\n        circleListeners() {\n            var listeners = {};\n            if (this.state.editable) {\n                listeners.mousedown = event => {\n                    if (event.which == 1) {\n                        this.state.root.link(this);\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                };\n\n                if (this.output) {\n                    // Allow specifying the result node\n                    listeners.dblclick = event => {\n                        if (event.which == 1) {\n                            this.$emit('input', true);\n                        }\n                    };\n                }\n\n                // Handle focus on the I/Os\n                listeners.mouseover = () => this.state.linkFrom && this.state.root.link(this);\n                listeners.mouseout = () => this.state.linkTo && this.state.root.unlink(this);\n            }\n            return listeners;\n        },\n        classes() {\n            let classes = [\n                this.output ? 'output' : 'input',\n                'connector',\n                'field_' + this.name,\n                (this.hasValue || this.optional || this.output || this.getEdgeCount() > 0) ? 'hasValue' : 'noValue',\n            ];\n            if (this.allowsArgumentChange) {\n                classes.push(\"editable\");\n            }\n            return classes;\n        },\n        unspecified() {\n            return !this.$parent.invalid && this.state.root.hasProcesses && this.schemas.unspecified;\n        },\n        circleClasses() {\n            var classes = ['circle'];\n            if (this.getEdgeCount() > 0) {\n                classes.push('io_active');\n            }\n\n            for (var edge of this.edges) {\n                if (edge.selected) {\n                    classes.push('io_selected');\n                }\n                else if (edge.issues.length > 0) {\n                    classes.push('io_issues');\n                }\n            }\n\n            if (this.state.linkFrom == this || this.state.linkTo == this) {\n                classes.push('io_selected');\n            }\n            return classes;\n        },\n        displayValue() {\n            var maxLength = 38 - this.displayLabel.length;\n            var formattedValue = null;\n            if (this.isEditable && !this.state.compactMode && !Utils.isRef(this.value)) {\n                let value = typeof this.value !== 'undefined' ? this.value : this.default;\n                if (typeof value !== 'undefined') {\n                    formattedValue = this.formatValue(value, maxLength, true);\n                }\n            }\n\n            if (typeof formattedValue === 'string') {\n                if (formattedValue.length === 0) {\n                    formattedValue = '<em>Empty</em>';\n                }\n            }\n            else {\n                formattedValue = '';\n            }\n            return formattedValue;\n        },\n        displayLabel() {\n            if (this.output && this.state.compactMode) {\n                return '';\n            }\n            else if (typeof this.label === 'string' && (this.label.length > 0 || this.output)) {\n                return this.label;\n            }\n            else {\n                return this.name;\n            }\n        },\n        isArrayType() {\n            return this.schemas.nativeDataType() === 'array';\n        },\n        isObjectType() {\n            return this.schemas.nativeDataType() === 'object';\n        },\n        isEditable() {\n            return !this.output && this.schemas.isEditable();\n        },\n        allowsArgumentChange() {\n            return (!this.output && this.schemas.isEditable());\n        },\n        allowsMultipleInputs() {\n            // Is there any type that potentially allows multiple inputs?\n            return this.isArrayType || this.isObjectType || this.schemas.nativeDataType() === 'any';\n        },\n    },\n    watch: {\n        edges() {\n            this.updateEdgeStatus();\n            this.$emit('edgesChanged', this.edges, this);\n        },\n        value: {\n            immediate: true,\n            handler() {\n                this.updateEdgeStatus();\n            }\n        }\n    },\n    methods: {\n        updateEdgeStatus() {\n            if (!this.output) {\n                for(var edge of this.edges) {\n                    edge.inactive = !this.isEdgeUsed(edge);\n                }\n            }\n        },\n        getCirclePosition() {\n            try {\n                var dim = this.state.root.domBoundingBox(this.$refs.circle);\n                var blocksDim = this.state.root.getDimensions();\n                var x = (dim.offsetLeft - blocksDim.offsetLeft) + dim.width / 2;\n                var y = (dim.offsetTop - blocksDim.offsetTop) + dim.height / 2;\n                return [x, y];\n            } catch (error) {\n                console.warn(error);\n                return null;\n            }\n        },\n        openEditorForArguments() {\n            if (this.allowsArgumentChange) {\n                this.$parent.showArguments(this.name);\n            }\n        },\n        jsonSchema() {\n            return this.schemas.toJSON();\n        },\n        setValue(value) {\n            if (this.schemas.nativeDataType() == 'boolean' && !Utils.isRef(value)) {\n                value = !!value;\n            }\n            this.$emit('input', value);\n        },\n        resetValue() {\n            if (typeof this.default !== 'undefined') {\n                this.setValue(this.default);\n                return;\n            }\n            \n            var value;\n            if (this.schemas.nullable()) {\n                value = null;\n            }\n            else {\n                var dataType = this.schemas.nativeDataType();\n                switch(dataType) {\n                    case 'object':\n                        value = {};\n                        break;\n                    case 'array':\n                        value = [];\n                        break;\n                    case 'string':\n                        value = '';\n                        break;\n                    case 'integer':\n                    case 'number':\n                        value = 0;\n                        break;\n                    case 'boolean':\n                        value = false;\n                        break;\n                    default:\n                        value = undefined;\n                }\n            }\n            this.setValue(value);\n        },\n        getEdgeRef(edge) {\n            if (this.output) {\n                return this.value;\n            }\n            else {\n                return edge.parameter1.value;\n            }\n        },\n        addRefToValue(edge) {\n            var ref = this.getEdgeRef(edge);\n            if (!ref) {\n                return;\n            }\n            else if (!this.allowsMultipleInputs) {\n                this.setValue(ref);\n            }\n            else if (this.isArrayType) {\n                if (Utils.isRef(this.value)) {\n                    this.setValue([this.value, ref]);\n                }\n                else if (Array.isArray(this.value) && this.value.length > 0) {\n                    var value = this.value;\n                    value.push(ref);\n                    this.setValue(value);\n                }\n                else {\n                    this.setValue(ref);\n                }\n            }\n            else if (this.isObjectType) {\n                var propertyCount = Utils.size(this.value);\n                if (this.getEdgeCount() === 1 && (!this.hasValue || !propertyCount)) {\n                    this.setValue(ref);\n                }\n                else if (!propertyCount) {\n                    this.resetValue();\n                }\n                else {\n                    // Don't change value\n                }\n            }\n            else {\n                // ToDo: This is probably of data type mixed or any, how to handle?\n                this.setValue(ref);\n            }\n        },\n        removeRefFromValue(edge) {\n            if (!this.output) {\n                var ref = this.getEdgeRef(edge);\n                if (Utils.isRefEqual(ref, this.value)) {\n                    this.resetValue();\n                }\n                else if (this.isArrayType || this.isObjectType) {\n                    this.setValue(this.removeRefFromValueDeep(this.value, ref));\n                }\n            }\n        },\n        removeRefFromValueDeep(value, ref) {\n            if (Array.isArray(value)) {\n                var i = value.length;\n                while(--i >= 0) {\n                    if (value[i] === null || typeof value[i] !== 'object') {\n                        continue;\n                    }\n                    else if (Utils.isRefEqual(ref, value[i])) {\n                        value.splice(i, 1);\n                    }\n                    else {\n                        value[i] = this.removeRefFromValueDeep(value[i], ref);\n                    }\n                }\n\n            }\n            else if (Utils.isObject(value)) {\n                for(var key in value) {\n                    if (!value.hasOwnProperty(key) || value[key] === null || typeof value[key] !== 'object') {\n                        continue;\n                    }\n                    else if (Utils.isRefEqual(ref, value[key])) {\n                        delete value[key];\n                    }\n                    else {\n                        value[i] = this.removeRefFromValueDeep(value[key], ref);\n                    }\n                }\n            }\n            return value;\n        },\n        addEdge(edge) {\n            this.edges.push(edge);\n            if (!this.isEdgeUsed(edge) && !this.output) {\n                this.addRefToValue(edge);\n            }\n        },\n        eraseEdge(edge) {\n            for (var k in this.edges) {\n                if (this.edges[k] == edge) {\n                    this.removeRefFromValue(edge);\n                    this.$delete(this.edges, k);\n                    return true;\n                }\n            }\n            return false;\n        },\n        isEdgeUsed(edge) {\n            var ref = this.getEdgeRef(edge);\n            if (Utils.isRefEqual(ref, this.value)) {\n                return true;\n            }\n            return this.hasRefInValue(ref, this.value);\n        },\n        hasRefInValue(ref, value) {\n            if (!value || typeof value !== 'object') {\n                return false;\n            }\n            else if (Utils.isRefEqual(ref, value)) {\n                return true;\n            }\n            for(let key in value) {\n                if (this.hasRefInValue(ref, value[key])) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getEdgeCount() {\n            return this.edges.length;\n        },\n        formatProcess(pg, maxLength) {\n            if (pg instanceof ProcessGraph && pg.getNodeCount() === 1) {\n                return this.formatValue(pg.getResultNode().process_id, maxLength);\n            }\n            var nodes = Object.values(pg.process_graph);\n            if (nodes.length === 1) {\n                return this.formatValue(nodes[0].process_id, maxLength);\n            }\n            else {\n                return 'Process';\n            }\n        },\n        formatValue(value, maxLength, html = true) {\n            if (typeof value === 'object') {\n                if (value === null) {\n                    return 'n/a';\n                }\n                else if (Array.isArray(value)) {\n                    return this.formatArray(value, maxLength, html);\n                }\n                else {\n                    return this.formatObject(value, maxLength, html);\n                }\n            }\n            else if (typeof value === 'string') {\n                if (value.length > maxLength) {\n                    var text = Utils.htmlentities(value.substr(0, maxLength));\n                    return html ? text + '<span title=\"' + Utils.htmlentities(value) + '\">…</span>' : text;\n                }\n                else {\n                    return Utils.htmlentities(value);\n                }\n            }\n            else if (typeof value === 'boolean') {\n                return value ? '✔️' : '❌';\n            }\n            else if (typeof value === 'number') {\n                return value.toString();\n            }\n            else {\n                return Utils.htmlentities(JSON.stringify(value));\n            }\n        },\n        formatArray(values, maxLength, html = true) {\n            let parts = [];\n            for(let i in values) {\n                let value = values[i];\n                let formatted = this.formatValue(value, 10, html);\n                let unformatted = Utils.htmlentities_decode(this.formatValue(value, 10, false));\n\n                if (unformatted.length > maxLength) {\n                    if (parts.length === 0) {\n                        return this.formatArraySimple(values, 'List(' + values.length + ')');\n                    }\n                    else {\n                        parts.push(this.formatArraySimple(values, '…'));\n                        break;\n                    }\n                }\n\n                parts.push(formatted);\n                maxLength -= unformatted.length + 2;\n            }\n            \n            return parts.join(\", \");\n        },\n        formatArraySimple(values, text, html = true) {\n            if (html && values.length < 10) {\n                let title = values.map(v => this.formatValue(v, 25, false)).join(', ');\n                return '<span title=\"' + title + '\">' + text + '</span>';\n            }\n            else {\n                return text;\n            }\n        },\n        formatObject(value, maxLength, html = true) {\n            if (Object.keys(value).length === 0) {\n                return 'None';\n            }\n            else if (value instanceof ProcessGraph || Utils.isObject(value.process_graph)) {\n                return this.formatProcess(value, maxLength);\n            }\n            else if (Utils.isRef(value)) {\n                return this.formatValue(Utils.formatRef(value), maxLength);\n            }\n            else if (typeof value.west !== 'undefined' && typeof value.east !== 'undefined' && typeof value.south !== 'undefined' && typeof value.north !== 'undefined') {\n                return maxLength >= 12 ? 'Bounding Box' : 'BBox';\n            }\n            else if (Utils.detectGeoJson(value)) {\n                return this.formatValue(value.type, maxLength);\n            }\n\n            // Fallback to default\n            return html ? '<span title=\"' + Utils.htmlentities(JSON.stringify(value)) + '\">Object</span>' : 'Object';\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.vue-component.model-builder {\n    .block .connector {\n        font-size: 0.9em;\n        margin: 0.2em 0;\n        white-space: nowrap;\n        \n        &.noValue {\n            color: red;\n        }\n        &.editable .label,\n        &.editable .value {\n            cursor: pointer;\n        }\n        span[title] {\n            cursor: help;\n        }\n        .input {\n            max-width: 100%;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n        .output {\n            text-align: right;\n        }\n        .unspecified {\n            color: red;\n            margin-right: 0.3em;\n        }\n        .circle {\n            width: 0.8em;\n            height: 0.8em;\n            margin: 0 0.2em;\n            border: 1px solid #888;\n            background-color: transparent;\n            display: inline-block;\n\n            &.io_active {\n                background-color: #FFC800;\n            }\n            &.io_selected {\n                background-color: #00C800 !important;\n            }\n            &.io_issues {\n                background-color: #FF0000;\n            }\n        }\n    }\n\n    &.editable .circle {\n        cursor: pointer;\n    }\n}\n</style>","import mod from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BlockParameter.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BlockParameter.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./BlockParameter.vue?vue&type=template&id=70b6715c\"\nimport script from \"./BlockParameter.vue?vue&type=script&lang=js\"\nexport * from \"./BlockParameter.vue?vue&type=script&lang=js\"\nimport style0 from \"./BlockParameter.vue?vue&type=style&index=0&id=70b6715c&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\n\tdefaultScale: 1.3,\n\tblockWidth: {\n\t\tcompactParams: 110,\n\t\tcompact: 60,\n\t\tnormalParams: 220,\n\t\tnormal: 110\n\t}\n};","<template>\n    <div :id=\"'block' + this.id\" ref=\"div\" :class=\"containerClasses\" @mousedown.prevent.stop.left=\"onMouseDown\" :style=\"styles\">\n        <div class=\"blockTitle\" @mousedown.prevent.stop.left=\"emitDrag\">\n            <span class=\"titleText\" :title=\"plainTitle\">\n                <span v-show=\"invalid\" class=\"invalid\" title=\"Process or Collection not supported!\">\n                    <i class=\"fas fa-exclamation-triangle\"></i>\n                </span>\n                {{ name }}\n                <span v-if=\"showId\" class=\"blockId\">{{ id }}</span>\n            </span>\n            <div class=\"blockicon\" @mousedown.prevent.stop.left=\"focus()\">\n                <span v-show=\"allowsDescription && !showDescriptionField\" class=\"addDescription\" title=\"Add description\" @click.stop.prevent=\"addDescription()\">\n                    <i class=\"fas fa-comment-medical\"></i>\n                </span>\n                <span v-show=\"allowsDuplicate\" class=\"duplicate\" title=\"Duplicate\" @click.stop.prevent=\"duplicate\">\n                    <i class=\"fas fa-clone\"></i>\n                </span>\n                <span v-show=\"allowsDelete\" class=\"delete\" title=\"Remove (DEL)\" @click.stop.prevent=\"remove()\">\n                    <i class=\"fas fa-trash\"></i>\n                </span>\n                <span v-show=\"allowsInfo\" class=\"info\" title=\"Details\" @click.stop.prevent=\"showInfo()\">\n                    <i class=\"fas fa-info\"></i>\n                </span>\n                <span v-show=\"allowsParameterChange\" class=\"settings\" :title=\"isParameter ? 'Edit parameter' : 'Change parameter values'\" @click.stop.prevent=\"edit\">\n                    <i class=\"fas fa-edit\"></i>\n                </span>\n            </div>\n        </div>\n        <div class=\"inout\">\n            <div class=\"inputs\">\n                <BlockParameter v-for=\"(param, i) in parameters\" :key=\"i\" ref=\"parameters\" :state=\"state\" :value=\"args[param.name]\" @input=\"value => updateArgument(param.name, value)\" @edgesChanged=\"edgesChanged(param, $event)\" :name=\"param.name\" :description=\"param.description\" :optional=\"param.optional\" :deprecated=\"param.deprecated\" :experimental=\"param.experimental\" :default=\"param.default\" :schema=\"param.schema\" />\n            </div>\n            <div class=\"outputs\">\n                <BlockParameter ref=\"output\" :state=\"state\" :label=\"outputLabel\" v-bind=\"output\" @input=\"updateResult\" />\n            </div>\n        </div>\n        <textarea ref=\"descriptionField\" v-if=\"showDescriptionField\" :value=\"description\" :readonly=\"!state.editable\" class=\"editDescription\" placeholder=\"Type description here...\" @input=\"updateDescription\" @blur=\"updateDescription\" @mousedown.stop=\"\"></textarea>\n    </div>\n</template>\n\n<script>\nimport BlockParameter from './BlockParameter.vue';\nimport Utils from '../../utils.js';\nimport { ProcessParameter, ProcessUtils } from '@openeo/js-commons';\nimport { Utils as PgUtils } from '@openeo/js-processgraphs';\nimport Config from './config.js';\n\n/*\nEvents:\n\nEmits locally:\n- moved(x, y) - The block has been moved\n- input(value) - The value has been updated\n- move() - A block is now being moved\n- mounted(node) - The block is now part of the DOM.\n- unmounted(node) - The block not not part of the DOM anylonger.\n*/\n\nconst defaultFontSize = 10;\n\nexport default {\n    name: 'Block',\n    components: {\n        BlockParameter\n    },\n    props: {\n        id: {\n            type: String,\n            required: true\n        },\n        type: {\n            type: String,\n            required: true\n        },\n        selected: {\n            type: Boolean,\n            default: false\n        },\n        position: {\n            type: Array,\n            required: true\n        },\n        process_id: {\n            type: String\n        },\n        namespace: {\n            type: String,\n            default: null\n        },\n        description: {\n            type: String,\n            default: null\n        },\n        args: {\n            type: Object,\n            default: () => ({})\n        },\n        result: {\n            type: Boolean,\n            default: false\n        },\n        origin: {\n            type: String,\n            default: null\n        },\n        spec: {\n            type: Object,\n            default: () => null\n        },\n        state: {\n            type: Object,\n            required: true\n        }\n    },\n    data() {\n        return {\n            showDescriptionField: false,\n            drag: null // Is the user dragging ?\n        };\n    },\n    watch: {\n        'state.compactMode'() {\n            this.$emit('moved', this.position);\n        },\n        description: {\n            immediate: true,\n            handler() {\n                this.showDescriptionField = (this.description !== null);\n            }\n        }\n    },\n    computed: {\n        // Visualizations\n        width() {\n            let size = Config.blockWidth;\n            if (this.parameters.length > 0) {\n                return this.state.compactMode ? size.compactParams : size.normalParams;\n            }\n            else {\n                return this.state.compactMode ? size.compact : size.normal;\n            }\n        },\n        styles() {\n            return {\n                marginLeft: Math.round(this.state.center[0] + this.position[0] * this.state.scale) + 'px',\n                marginTop: Math.round(this.state.center[1] + this.position[1] * this.state.scale) + 'px',\n                fontSize: Math.round(this.state.scale * defaultFontSize) + 'px',\n                width: Math.round(this.state.scale * this.width) + 'px',\n            };\n        },\n        plainTitle() {\n            let parts = [];\n            parts.push(this.name);\n            if (this.namespace) {\n                parts.push(`@${this.namespace}`);\n            }\n            if (this.showId) {\n                parts.push(` ${this.id}`);\n            }\n            return parts.join('');\n        },\n        name() {\n            switch(this.type) {\n                case 'process':\n                    if (this.collectionId) {\n                        return this.collectionId;\n                    }\n                    else {\n                        return this.processId;\n                    }\n                case 'parameter':\n                    return this.spec.name;\n                default:\n                    return this.id.substr(1);\n            }\n        },\n        outputLabel() {\n            if (this.result) {\n                return \"Result\";\n            }\n            else if (this.isParameter) {\n                return \"Process Parameter\";\n            }\n            else {\n                return \"\";\n            }\n        },\n        containerClasses() {\n            var classes = ['block'];\n            if (this.collectionId) {\n                classes.push('block_collection');\n            }\n            else if (this.isParameter) {\n                classes.push('block_argument');\n            }\n            if (this.result) {\n                classes.push('block_result');\n            }\n            if (this.selected) {\n                classes.push('block_selected');\n            }\n            if (this.invalid) {\n                classes.push('block_invalid');\n            }\n\n            return classes;\n        },\n        invalid() {\n            if (this.type !== 'process' || !this.$parent.hasProcesses) {\n                // We can only check processes for validity\n                // Also, don't check for validity if no processes to validate against are given\n                return false;\n            }\n            else if (this.namespace && Utils.isUrl(this.namespace)) {\n                // If the namespace is a URL, then don't complain about a missing process\n                return false;\n            }\n            else if (!this.processId) {\n                return true;\n            }\n\n            // Check that the process exists\n            if (!this.spec) {\n                return true;\n            }\n\n            // Check that the collection exists\n            if (this.processId === 'load_collection' && !Utils.isRef(this.args.id)) {\n                for(let collection of this.$parent.collections) {\n                    if (this.args.id === collection.id) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n\n            return false;\n        },\n        processId() {\n            if (this.type === 'process') {\n                if (this.process_id) {\n                    return this.process_id;\n                }\n                else if (Utils.isObject(this.spec) && this.spec.id) {\n                    return this.spec.id;\n                }\n            }\n            return null;\n        },\n        collectionId() {\n            if (this.type === 'process' && this.processId === 'load_collection' && !Utils.isRef(this.args.id)) {\n                return this.args.id;\n            }\n            return null;\n        },\n        isParameter() {\n            return this.type === 'parameter';\n        },\n        allowsParameterChange() {\n            if (this.isParameter) {\n                return this.state.editable && this.origin !== 'schema' && !!this.$parent.supports('editParameter');\n            }\n            else {\n                return this.parameters.filter(p => p.isEditable()).length > 0;\n            }\n        },\n        allowsDuplicate() {\n            return (this.state.editable && this.type === 'process' && this.origin !== 'schema');\n        },\n        allowsDelete() {\n            return (this.state.editable && (!this.spec || (Utils.isObject(this.spec) && this.origin !== 'schema')));\n        },\n        allowsInfo() {\n            if (this.collectionId) {\n                return this.$parent.supports('showCollection');\n            }\n            else if (this.isParameter) {\n                return Utils.isObject(this.spec) && this.$parent.supports('showParameter');\n            }\n            else {\n                return this.$parent.supports('showProcess');\n            }\n        },\n        allowsDescription() {\n            // ToDo: Remove type restriction and store description for parameters.\n            return (this.state.editable && this.type === 'process');\n        },\n        showId() {\n            return (this.type !== 'parameter');\n        },\n        // Parameters and related\n        hasParametersDefined() {\n            return Boolean(Utils.isObject(this.spec) && Array.isArray(this.spec.parameters) && this.spec.parameters.length > 0);\n        },\n        parameters() {\n            let names = [];\n            let parameters = [];\n            if (this.hasParametersDefined) {\n                parameters = this.spec.parameters.map(p => new ProcessParameter(p));\n                names = parameters.map(p => p.name);\n            }\n            if (Utils.size(this.args) > 0) {\n                for(var key in this.args) {\n                    if (!names.includes(key)) {\n                        parameters.push(new ProcessParameter({\n                            name: key,\n                            description: ''\n                        }));\n                    }\n                }\n            }\n            return parameters;\n        },\n        fields() {\n            var fields = {};\n            for(var p of this.parameters) {\n                fields[p.name] = p;\n            }\n            fields.output = this.output;\n            return fields;\n        },\n        output() {\n            var spec = {};\n            if (Utils.isObject(this.spec)) {\n                if (this.isParameter) {\n                    spec = this.spec;\n                }\n                else if (Utils.isObject(this.spec.returns)) {\n                    spec = this.spec.returns;\n                }\n            }\n            var output = {\n                name: \"output\",\n                schema: spec.schema || {},\n                description: spec.description || '',\n                optional: true,\n                output: true,\n                value: {}\n            };\n            if (this.isParameter) {\n                output.value.from_parameter = this.id.substr(1);\n            }\n            else {\n                output.value.from_node = this.id.substr(1);\n            }\n            return output;\n        }\n    },\n    mounted() {\n        // ToDo: Move mousemove listener for dragging to Blocks?\n        this.draggingFn = this.dragging.bind(this);\n        document.addEventListener('mousemove', this.draggingFn);\n        // ToDO: Replace with mouseleave?\n        this.stopDragFn = this.stopDrag.bind(this);\n        document.addEventListener('mouseup', this.stopDragFn);\n\n        this.$emit('mounted', this);\n    },\n    beforeDestroy() {\n        document.removeEventListener('mousemove', this.draggingFn);\n        document.removeEventListener('mouseup', this.stopDragFn);\n\n        this.$emit('unmounted', this);\n    },\n    methods: {\n        edit() {\n            if (this.isParameter) {\n                this.editParameter();\n            }\n            else {\n                this.showArguments();\n            }\n        },\n        duplicate() {\n            this.$parent.$emit('duplicate', {\n                position: this.position,\n                process_id: this.process_id,\n                namespace: this.namespace,\n                arguments: this.args,\n                description: this.description\n            });\n        },\n        hasParameter(name) {\n            return this.hasParametersDefined && !!this.spec.parameters.find(p => p.name === name);\n        },\n        updateDescription(event) {\n\t\t\tlet elem = event.composedPath()[0]; // event.target doesn't work in web components\n            let value;\n            if (elem && typeof elem.value === 'string' && (elem.value.length > 0 || event.type === 'input')) {\n                value = elem.value;\n            }\n            else {\n                value = null;\n            }\n            this.showDescriptionField = (value !== null);\n            if (this.description !== value) {\n                this.$emit('update', 'description', value);\n            }\n        },\n        updatePosition(pos, saveHistory = true) {\n            pos = Utils.ensurePoint(pos);\n            if (this.position[0] !== pos[0] || this.position[1] !== pos[1]) {\n                this.$emit('update', 'position', pos, saveHistory);\n            }\n        },\n        updateArguments(value) {\n            let removeParameters = Object.keys(this.args)\n                    .filter(key => typeof value[key] === 'undefined' && (!this.hasParametersDefined || this.hasParameter(key)));\n            // Remove default values\n            for(let p of this.parameters) {\n                if (typeof value[p.name] !== 'undefined' && p.optional && typeof p.default !== 'undefined' && Utils.equals(p.default, value[p.name]))  {\n                    delete value[p.name];\n                }\n            }\n            this.$emit('update', 'arguments', value, removeParameters);\n        },\n        updateArgument(key, value) {\n            let args = Utils.deepClone(this.args);\n            args[key] = value;\n            this.updateArguments(args);\n        },\n        updateResult(value) {\n            if (this.hasOutputEdges()) {\n                this.state.root.$emit(\"error\", \"A result node can't have outgoing edges.\");\n                return;\n            }\n            if (value !== this.result) {\n                this.$emit('update', 'result', value);\n            }\n        },\n        focus() {\n            this.$parent.focus();\n        },\n        onMouseDown(event) {\n            this.select(!this.selected, !event.shiftKey);\n        },\n        select(selected = true, unselectOthers = true) {\n            this.$emit('update', 'selected', selected, unselectOthers);\n            this.focus();\n        },\n        getDimensions() {\n            let dim = this.$parent.domBoundingBox(this.$refs.div);\n            var blocksDim = this.$parent.getDimensions();\n            dim.x = dim.offsetLeft - blocksDim.offsetLeft;\n            dim.y = dim.offsetTop - blocksDim.offsetTop;\n            return dim;\n        },\n        edgesChanged(parameter, edges) {\n            parameter.refs = edges.map(edge => edge.parameter1.value);\n        },\n        editParameter() {\n            this.$parent.$emit('editParameter', this.spec, \"Edit Parameter: \" + this.plainTitle, data => this.$emit('update', 'spec', data));\n        },\n        showArguments(parameterName = null) {\n            this.$parent.$emit('editArguments', this.parameters.filter(p => p.isEditable()), this.args, this.plainTitle, this.state.editable, parameterName, data => this.updateArguments(data), this);\n        },\n        showInfo() {\n            if(this.collectionId) {\n                this.$parent.$emit('showCollection', this.collectionId);\n            }\n            else if (this.isParameter) {\n                this.$parent.$emit('showParameter', this.spec, this.origin);\n            }\n            else {\n                this.$parent.$emit('showProcess', this.processId, this.namespace);\n            }\n        },\n        async addDescription() {\n            this.select();\n            this.showDescriptionField = true;\n            await this.$nextTick();\n            this.$refs.descriptionField.focus();\n        },\n        async emitDrag(event) {\n            this.select(true, !event.shiftKey);\n            this.focus();\n            await this.$nextTick();\n            this.$emit('move', event);\n        },\n        getDragPos(pos, mouse) {\n            return [mouse[0]/this.state.scale-pos[0], mouse[1]/this.state.scale-pos[1]];\n        },\n        startDrag(event) {\n            if (!this.selected) {\n                return;\n            }\n\n            let mousePos = this.$parent.getMousePos(event);\n            this.drag = {\n                origin: this.position,\n                mouse: this.getDragPos(this.position, mousePos)\n            };\n        },\n        stopDrag() {\n            if (!this.drag) {\n                return;\n            }\n\n            var delta = 5 / this.state.scale; // Only store History if block was moved enough\n            if (Math.abs(this.drag.origin[0] - this.position[0]) > delta || Math.abs(this.drag.origin[1] - this.position[1]) > delta) {\n                this.updatePosition(this.position);\n            }\n            this.drag = null;\n        },\n        dragging(event) {\n            if (!this.drag) {\n                return;\n            }\n            \n            let mousePos = this.$parent.getMousePos(event);\n            let drapPos = this.getDragPos(this.drag.mouse, mousePos);\n            // Don't store for each run a history step...\n            this.updatePosition(drapPos, false);\n        },\n\n        hasOutputEdges() {\n            return this.$refs.output && this.$refs.output.getEdgeCount() > 0;\n        },\n\n        async remove() {\n            await this.$parent.removeBlock(this);\n        },\n\n        /**\n         * Getting a field by name\n         */\n        getBlockParameter(name) {\n            if (name === 'output' && this.$refs.output) {\n                return this.$refs.output;\n            }\n            else if (Array.isArray(this.$refs.parameters)) {\n                var params = this.$refs.parameters.filter(param => param.name === name);\n                if (params.length > 0) {\n                    return params[0];\n                }\n            }\n            return null;\n        },\n\n        isParameterScoped(parameterName, referenceName) {\n            let parameterBlock = this.getBlockParameter(parameterName);\n            let cbParams = ProcessUtils.getCallbackParameters(parameterBlock).map(cbParam => cbParam.name);\n            return cbParams.includes(referenceName);\n        },\n\n        hiddenParameterRef(parameterBlock) {\n            if (this.type !== 'process') {\n                return null;\n            }\n            let globalParam = parameterBlock.id.substr(1);\n            for (let argName in this.args) {\n                let value = this.args[argName];\n                if (Utils.isObject(value) && Utils.isObject(value.process_graph)) {\n                    let refs = PgUtils.getRefs(value, true, true);\n                    if (refs.find(r => r.from_parameter === globalParam && !this.isParameterScoped(argName, r.from_parameter))) {\n                        return argName;\n                    }\n                }\n            }\n            return null;\n        }\n    }\n\n}\n</script>\n\n<style lang=\"scss\">\n.vue-component.model-builder {\n    .block {\n        position:absolute;\n        border:2px solid #ccc;\n        margin-left:0px;\n        margin-top:0px;\n        background-color:#fafafa;\n        opacity:0.8;\n        font-size:14px;\n        user-select:none;\n        -moz-user-select:none;\n        -khtml-user-select:none;\n        -webkit-user-select:none;\n        -o-user-select:none;\n        color: #000;\n\n        .description {\n            display:none;\n            width:200px;\n            padding:3px;\n            border:1px solid #083776;\n            border-radius:5px;\n            color:#001531;\n            background-color:#91bcf6;\n            margin-top:15px;\n            position:absolute;\n            font-weight:normal;\n        }\n\n        .blockTitle {\n            display: flex;\n            padding: 0.3em 0.1em;\n            font-weight:bold;\n            background-color:#ddd;\n            margin-bottom: 0.1em;\n            cursor: move;\n            font-size: 0.9em;\n            \n            .blockId {\n                opacity: 0.4;\n                margin-left: 0.25em;\n                font-weight: normal;\n            }\n            \n            .namespace {\n                font-weight: normal;\n            }\n\n            .titleText {\n                flex-grow: 1;\n                white-space: nowrap;\n                overflow: hidden;\n                text-overflow: ellipsis;\n            }\n            \n            .blockicon {\n                white-space: nowrap;\n                text-align: center;\n\n                i.fas {\n                    min-width: 1.4em;\n                    cursor: pointer;\n                    opacity: 0.5;\n                    margin-left: 0.1em;\n\n                    &:hover {\n                        opacity:1.0;\n                    }\n                }\n            }\n        }\n\n        .invalid {\n            color: red;\n            cursor: help;\n        }\n\n        .inout {\n            display: flex;\n        }\n\n        .inputs {\n            flex-grow: 1;\n            max-width: 100%;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n\n        .editDescription {\n            padding: 0.3em 0.2em;\n            box-sizing: border-box;\n            font-size: 0.9em;\n            line-height: 1em;\n            overflow: auto;\n            border: 0;\n            border-top: 1px dotted #ccc;\n            background-color: transparent;\n            width: 100%;\n            max-width: 100%;\n            height: 3.7em;\n            min-height: 2.5em;\n            resize: none;\n\n            &:focus {\n                outline: 0;\n            }\n        }\n    }\n\n    .block_collection {\n        border:2px solid #6B8DAF;\n\n        .blockTitle {\n            background-color:#A3B7CC;\n        }\n        .field_id { /* Hide collection ID as it's shown in the title */\n            display: none;\n        }\n    }\n\n    .block_result {\n        border:2px solid #888;\n\n        .field_output .circle {\n            background-color: #888;\n            cursor: auto;\n        }\n    }\n\n    .block_argument {\n        border:2px solid #B28C6B;\n\n        .blockTitle {\n            background-color:#CCB7A3;\n        }\n    }\n\n    .block_selected {\n        border:2px solid #0a0 !important; /* important is used to override the styles for block_collection and block_argument above */\n\n        .blockTitle {\n            background-color:#0c0 !important;\n        }\n    }\n\n    .block_invalid {\n        border:2px solid #ff0000 !important; /* important is used to override the styles for block_selected above */\n    }\n}\n</style>","import mod from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Block.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Block.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Block.vue?vue&type=template&id=ec7ff252\"\nimport script from \"./Block.vue?vue&type=script&lang=js\"\nexport * from \"./Block.vue?vue&type=script&lang=js\"\nimport style0 from \"./Block.vue?vue&type=style&index=0&id=ec7ff252&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('g',_vm._l((_vm.lines),function(line,i){return _c('line',_vm._b({key:i},'line',line,false))}),0)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class Segment {\n\n    constructor(x, y, dx, dy) {\n        this.x = x;\n        this.y = y;\n        this.dx = dx;\n        this.dy = dy;\n    }\n\n    /**\n     * Distance\n     */\n    distance(point1, point2) {\n        return Math.sqrt(Math.pow(point2.x-point1.x,2) + Math.pow(point2.y-point1.y,2));\n    }\n\n    /**\n     * Distance with a point\n     */\n    distanceP(point) {\n        var normal = this.normal();\n        normal.x = point.x;\n        normal.y = point.y;\n        var intersection = this.intersection(normal);\n\n        return [intersection[0], this.distance(normal.alpha(intersection[1]), point)];\n    }\n\n    /**\n     * Normal\n     */\n    normal() {\n        return new Segment(this.x, this.y, this.dy, -this.dx);\n    }\n\n    /**\n     * Gets the intersection alpha with another \n     */\n    intersection(other) {\n        var a = this.dx;\n        var b = -other.dx;\n        var c = this.dy;\n        var d = -other.dy;\n        var b0 = other.x-this.x;\n        var b1 = other.y-this.y;\n        var det = a*d - b*c;\n\n        if (det == 0) {\n            return null;\n        }\n\n        var r1 = (d*b0 - b*b1)/det;\n        var r2 = (-c*b0 + a*b1)/det;\n\n        return [r1, r2];\n    }\n\n    /**\n     * Gets the alpha point\n     */\n    alpha(a) {\n        var point = {};\n        point.x = this.x+this.dx*a;\n        point.y = this.y+this.dy*a;\n\n        return point;\n    }\n\n}","<template>\n    <g>\n        <line v-for=\"(line, i) in lines\" :key=\"i\" v-bind=\"line\" />\n    </g>\n</template>\n\n<script>\nimport Segment from './segment.js';\n\nexport default {\n    name: 'Edge',\n    props: {\n        id: {},\n        parameter1: {\n            type: Object,\n            required: true\n        },\n        parameter2: {\n            type: Object,\n            required: true\n        },\n        selected: {\n            type: Boolean,\n            default: false\n        },\n        inactive: {\n            type: Boolean,\n            default: false\n        },\n        issues: {\n            type: Array,\n            default: () => ([])\n        },\n        lineWidth: {\n            type: Number,\n            default: 3\n        },\n        lineColor: {\n            type: Array,\n            default: () => ([255, 200, 0, 1])\n        },\n        state: {\n            type: Object,\n            required: true\n        }\n    },\n    data() {\n        return {\n            position1: null,\n            position2: null\n        }\n    },\n    computed: {\n        segment() {\n            return new Segment(\n                this.position1[0],\n                this.position1[1], \n                this.position2[0] - this.position1[0],\n                this.position2[1] - this.position1[1]\n            );\n        },\n        scaledLineWidth() {\n            return this.lineWidth * this.state.scale;\n        },\n        lines() {\n            // Drawing the arrow\n            var xM = ((this.position1[0]+this.position2[0])/2.0);\n            var yM = ((this.position1[1]+this.position2[1])/2.0);\n\n            var alpha = (35*Math.PI/180.0);\n            var cos = Math.cos(alpha);\n            var sin = Math.sin(alpha);\n            var cosB = Math.cos(-alpha);\n            var sinB = Math.sin(-alpha);\n\n            var norm = Math.sqrt(Math.pow(this.position1[0]-this.position2[0],2)+Math.pow(this.position1[1]-this.position2[1],2));\n            var arrowLength = this.state.scale*10/(norm/1.5);\n            var xA = (this.position1[0]-xM)*arrowLength;\n            var yA = (this.position1[1]-yM)*arrowLength;\n\n            var lineStyle = this.getLineStyle(this.scaledLineWidth, this.selected, this.inactive);\n            var arrowStyle = this.getLineStyle(this.scaledLineWidth / 1.5, this.selected);\n\n            var mainLine = this.getLine(this.position1[0], this.position1[1], this.position2[0], this.position2[1], lineStyle);\n            if (this.inactive || norm/this.state.scale < 25) {\n                // Hide arrow\n                return [mainLine];\n            }\n            else {\n                return [\n                    mainLine,\n                    this.getLine(xM, yM, xM+(xA*cos-yA*sin), yM+(yA*cos+xA*sin), arrowStyle),\n                    this.getLine(xM, yM, xM+(xA*cosB-yA*sinB), yM+(yA*cosB+xA*sinB), arrowStyle)\n                ];\n            }\n        }\n    },\n    watch: {\n        'state.center'() {\n            this.updatePositions();\n        },\n        'state.scale'() {\n            this.updatePositions();\n        },\n        'state.moving'() {\n            this.updatePositions();\n        }\n    },\n    created() {\n        this.updatePositions();\n    },\n    mounted() {\n        this.$emit('mounted', this);\n    },\n    beforeDestroy() {\n        this.$emit('unmounted', this);\n    },\n    methods: {\n        updatePositions() {\n            let pos1 = this.parameter1.getCirclePosition();\n            let pos2 = this.parameter2.getCirclePosition();\n            if (!pos1 || !pos2) {\n                return;\n            }\n            if (!this.position1 || !this.position2 || pos1[0] !== this.position1[0] || pos1[1] !== this.position1[1] || pos2[0] !== this.position2[0] || pos2[1] !== this.position2[1]) {\n                this.position1 = Object.freeze(pos1);\n                this.position2 = Object.freeze(pos2);\n                this.$emit('position', this.position1, this.position2);\n            }\n        },\n        getLineStyle(lineWidth, selected = false, dashed = false) {\n            let dashLength = 2 * this.state.scale;\n            let color = this.lineColor;\n            if (selected) {\n                color = [0, 200, 0, 1];\n            }\n            else if (this.issues.length > 0) {\n                color = [255, 0, 0, 1];\n            }\n            return {\n                'stroke': `rgba(${color.join(', ')})`,\n                'stroke-width': lineWidth,\n                'stroke-dasharray': dashed ? dashLength * 3 + ' ' + dashLength * 2 : 'none'\n            }\n        },\n        /**\n         * Get line options.\n         * \n         * @param x1 {number} The x-coordinate for the start of the line.\n         * @param y1 {number} The y-coordinate for the start of the line.\n         * @param x2 {number} The x-coordinate for the end of the line.\n         * @param y2 {number} The y-coordinate for the end of the line.\n         * @param [settings] {object} Additional settings for this node.\n         * @return {object} Options for SVG Line\n         */\n        getLine(x1, y1, x2, y2, settings = {}) {\n            return Object.assign({x1, y1, x2, y2}, settings);\n        },\n        /**\n         * Does the position collide the line ?\n         */\n        collide(x, y) {\n            if (!this.segment) {\n                return false;\n            }\n\n            var dp = this.segment.distanceP({x: x, y: y});\n\n            if (dp[0] >= 0 && dp[0] <= 1) {\n                if (dp[1] < (this.lineWidth*this.state.scale)*2) {\n                    return dp[0];\n                }\n            }\n\n            return false;\n        },\n        /**\n         * Test if this edge is the same than another\n         */\n        equals(other) {\n            if (this.parameter1 == other.parameter1 && this.parameter2 == other.parameter2) {\n                return true;\n            }\n            else if (this.parameter1 == other.parameter2 && this.parameter2 == other.parameter1) {\n                return true;\n            }\n\n            return false;\n        }\n    }\n\n}\n</script>","import mod from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Edge.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Edge.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Edge.vue?vue&type=template&id=83b3fc4e\"\nimport script from \"./Edge.vue?vue&type=script&lang=js\"\nexport * from \"./Edge.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div ref=\"div\" :id=\"id\" :class=\"classes\" tabindex=\"0\" :style=\"style\"\n        @mousemove=\"onMouseMove\"\n        @mousedown=\"onMouseDown\"\n        @wheel=\"onMouseWheel\"\n        @keydown=\"onKeyDown\"\n        @focus=\"hasFocus = true\"\n        @blur=\"hasFocus = false\">\n        <!-- tabindex is to allow focus for delete keystroke etc -->\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"canvas\">\n            <Edge v-for=\"edge in edges\" :key=\"edge.id\" :id=\"edge.id\"\n                :parameter1=\"edge.parameter1\" :parameter2=\"edge.parameter2\"\n                :selected=\"edge.selected\" :inactive=\"edge.inactive\" :issues=\"edge.issues\" :state=\"state\"\n                @mounted=\"node => mount(edge, node)\" @unmounted=\"() => mount(edge)\"\n                @position=\"updateEdgePos(edge, arguments)\" />\n            <Edge v-for=\"edge in hiddenParameterRefEdges\" :key=\"edge.id\" :id=\"edge.id\"\n                :parameter1=\"edge.parameter1\" :parameter2=\"edge.parameter2\"\n                @mounted=\"node => mount(edge, node)\" @unmounted=\"() => mount(edge)\"\n                :inactive=\"true\" :lineColor=\"[200,200,200,1]\" :lineWidth=\"2\" :state=\"state\" />\n            <line v-if=\"linkingLine\" v-bind=\"linkingLine\" />\n            <rect v-if=\"selectRect\" v-bind=\"selectRect\" />\n        </svg>\n        <div class=\"blocks\">\n            <Block v-for=\"(block) in blocks\" :key=\"block.id\"\n                :id=\"block.id\" :type=\"block.type\" :spec=\"block.spec\" :state=\"state\"\n                :selected=\"block.selected\" :position=\"block.position\" :origin=\"block.origin\"\n                :process_id=\"block.process_id\" :namespace=\"block.namespace\" :result=\"block.result\" :args=\"block.arguments\" :description=\"block.description\" \n                @update=\"(...args) => updateBlock(block, ...args)\"\n                @mounted=\"node => mount(block, node)\" @unmounted=\"() => mount(block)\"\n                @move=\"startDragBlock\" />\n        </div>\n        <div v-if=\"state.scale < 0.7 || showZoomInfo\" class=\"zoomInfo\">\n            <div v-if=\"state.scale < 0.7\">\n                Zoom in for more details.\n            </div>\n            <div v-if=\"showZoomInfo\">\n                Zoom with <kbd>STRG</kbd> or <kbd>Meta</kbd> key and the mouse wheel.\n            </div>\n        </div>\n        <ParameterViewer v-if=\"parameterViewer\" v-bind=\"parameterViewer\" @close=\"parameterViewer = null\" />\n    </div>\n</template>\n\n<script>\nimport Block from './model-builder/Block.vue';\nimport Edge from './model-builder/Edge.vue';\nimport Utils from '../utils.js';\nimport { ProcessRegistry } from '@openeo/js-commons';\nimport { JsonSchemaValidator, ProcessGraph, Utils as PgUtils } from '@openeo/js-processgraphs';\nimport Vue from 'vue';\nimport boxIntersectsBox from 'intersects/box-box';\nimport boxIntersectsLine from 'intersects/box-line';\nimport Config from './model-builder/config.js';\n\nconst getDefaultState = function(blocks) {\n    return Vue.observable({\n        root: blocks,\n        editable: false,\n        compactMode: false,\n        moving: null, // Is the user dragging the view?\n        selecting: null, // Is the user multi-selecting?\n        center: [0,0],\n        mouse: [0,0],\n        scale: Config.defaultScale,\n        linkFrom: null, // Array\n        linkTo: null // Array\n    });\n};\nconst MARGIN = 20;\n\nconst selectionChangeWatcher = function (newVal, oldVal) {\n    if (!Array.isArray(newVal) || !Array.isArray(oldVal) || newVal.length !== oldVal.length || !newVal.every((value,i) => value.id === oldVal[i].id)) {\n        this.$emit('selectionChanged', this.selectedBlocks, this.selectedEdges);\n    }\n};\n\nexport default {\n    name: 'ModelBuilder',\n    components: {\n        Block,\n        Edge,\n        ParameterViewer: () => import('./model-builder/ParameterViewer.vue')\n    },\n    props: {\n        id: {\n            type: String,\n            required: true\n        },\n        editable: {\n            type: Boolean,\n            default: false\n        },\n        value: {\n            type: Object,\n            default: () => ({})\n        },\n        collections: {\n            type: Array,\n            default: () => []\n        },\n        processes: {\n            type: [Array, Object],\n            default: () => []\n        },\n\t\tparent: {\n\t\t\ttype: Object,\n\t\t\tdefault: null\n\t\t},\n\t\tparentSchema: {\n\t\t\ttype: Object,\n\t\t\tdefault: null\n\t\t},\n        historySize: {\n            type: Number,\n            default: 30\n        },\n        explicitZoom: {\n            type: Boolean,\n            default: false\n        },\n        height: {\n            type: String,\n            default: null\n        }\n    },\n    data() {\n        return {\n            isMounted: false,\n            allMounted: false,\n\n            // Current offset for block that are generated without specific coordinates so that not all block occur on the same position\n            newBlockOffset: 0,\n\n            // History\n            history: [],\n            historyPointer: null,\n\n            process: Object.freeze(this.value),\n            // Metadata for blocks to show\n            blocks: [],\n            // Metadata for edges to show\n            edges: [],\n            hiddenParameterRefEdges: {},\n\n            processGraph: null,\n\n            // Next block id\n            nextBlockId: 1,\n            // Next edge id\n            nextEdgeId: 1,\n            // Copy&Paste\n            clipboard: null,\n\n            activeTransactions: 0,\n            hasFocus: false,\n            linkingLine: null,\n            parameterViewer: null,\n\n            showZoomInfo: this.explicitZoom,\n            \n            // State specific to this blocks instance including all children\n            state: getDefaultState(this)\n        };\n    },\n    computed: {\n        style() {\n            let style = {};\n            if (typeof this.height === 'string') {\n                style.height = this.height;\n            }\n            return style;\n        },\n        classes() {\n            let classes = [\n                'vue-component',\n                'model-builder'\n            ];\n            if (this.hasFocus) {\n                classes.push('focus');\n            }\n            if (this.editable) {\n                classes.push('editable');\n            }\n\n            if (this.state.compactMode) {\n                classes.push('compact');\n            }\n\n            if (this.state.scale < 0.5) {\n                classes.push('scale_xs');\n            }\n            else if (this.state.scale < 0.7) {\n                classes.push('scale_s');\n            }\n            else if (this.state.scale < 0.9) {\n                classes.push('scale_m');\n            }\n            else if (this.state.scale < 1.1) {\n                classes.push('scale_l');\n            }\n            else {\n                classes.push('scale_xl');\n            }\n\n            return classes;\n        },\n        selectRect() {\n            if (!this.state.selecting) {\n                return null;\n            }\n            return {\n                x: Math.min(this.state.selecting.current[0], this.state.selecting.start[0]),\n                y: Math.min(this.state.selecting.current[1], this.state.selecting.start[1]),\n                width: Math.abs(this.state.selecting.current[0] - this.state.selecting.start[0]),\n                height: Math.abs(this.state.selecting.current[1] - this.state.selecting.start[1]),\n                'stroke': 'rgba(0,0,0,0.8)',\n                'stroke-width': 1,\n                'fill': 'rgba(0,0,0,0.05)'\n            };\n        },\n        processRegistry() {\n            // If I link between openeo-web-editor and openeo-vue-components, instanceof ProcessRegistry fails.\n            // Webpack seems to mangle names and thus I need to check for specific processes alternatively to detect whether this could be a ProcessRegistry.\n            if (this.processes instanceof ProcessRegistry || (typeof this.processes.count === 'function' && typeof this.processes.get === 'function')) {\n                return this.processes;\n            }\n            else if (Array.isArray(this.processes)) {\n                return new ProcessRegistry(this.processes);\n            }\n            else {\n                throw new Error('Invalid processes specified, must be ProcessRegistry or Array');\n            }\n        },\n        hasProcesses() {\n            return this.processRegistry.count() > 0;\n        },\n        processBlocks() {\n            return this.blocks.filter(b => b.type === 'process');\n        },\n        selectedBlocks() {\n            return this.blocks.filter(block => block.selected);\n        },\n        selectedEdges() {\n            return this.edges.filter(edge => edge.selected);\n        },\n        selectedSideEdge() {\n            if (this.selectedEdges.length === 1 && this.selectedEdges[0].selectedParameter) {\n                return this.selectedEdges[0];\n            }\n            return null;\n        },\n        hasSelection() {\n            return this.selectedBlocks.length > 0 || this.selectedEdges.length > 0;\n        },\n        processParametersFromSchemas() {\n            // Get all process parameters from the parent process\n            // this.parent.$parent => ModelBuilder instance\n\t\t\tlet parentParams = [];\n\t\t\tif (this.parent && this.parent.$parent && typeof this.parent.$parent.getPgParameters === 'function') {\n\t\t\t\tparentParams = this.parent.$parent.getPgParameters().map(block => block.spec);\n\t\t\t}\n\n            let callbackParams = [];\n            // If we have a parameter schema given, go through the parameter schema and get the available process parameters from there.\n            if (this.parentSchema) {\n\t\t\t    callbackParams = this.parentSchema.getCallbackParameters();\n            }\n\n            // Remove all parameters from the parent that are overridden by the more specific parameters.\n            let filteredParentParams = parentParams.filter(p1 => !callbackParams.find(p2 => p1.name === p2.name));\n            // Add the filtered parameters from the parent to the more specific parameters\n            return callbackParams.concat(filteredParentParams);\n        }\n    },\n    watch: {\n        parentSchema() {\n            this.importPgParameters(this.processParametersFromSchemas, 'schema');\n        },\n        async value(value) {\n            // Only run if component has been mounted\n            if (!this.allMounted) {\n                return;\n            }\n\n            // Only import when user changes data (i.e. not a BlocksProcess exported from export())\n            if (!(value instanceof BlocksProcess)) {\n                this.process = value;\n                await this.import(value, { propagate: false, undoOnError: false }); // don't propagate, otherwise results in an infinite loop\n            }\n        },\n        editable: {\n            immediate: true,\n            handler(editable) {\n                this.state.editable = editable;\n            }\n        },\n        selectedEdges: selectionChangeWatcher,\n        selectedBlocks: selectionChangeWatcher,\n        allMounted() {\n            this.updateHiddenParameterRefEdges();\n        },\n        isMounted() {\n            this.checkAllMounted();\n        }\n    },\n\tbeforeCreate() {\n\t\tUtils.enableHtmlProps(this);\n\t},\n    async created() {\n        if (!this.supports('error')) {\n            // Print error to console if event is not supported by implementing context\n            this.$on('error', (msg, title = null) => console.error(msg, title));\n        }\n        if (!this.supports('editArguments')) {\n            this.$on('editArguments', (...args) => this.showParameterViewer(...args));\n        }\n        this.$on('duplicate', this.duplicate.bind(this));\n    },\n    async mounted() {\n        Utils.loadFontAwesome(this);\n\n        // Setting up default viewer center\n        this.moveCenter(0, 0, true);\n\n        // ToDo: Replace with mouseleave?\n        this.onDocumentMouseUpFn = this.onDocumentMouseUp.bind(this)\n        document.addEventListener('mouseup', this.onDocumentMouseUpFn);\n\n        await this.importPgParameters(this.processParametersFromSchemas, 'schema');\n        if (!await this.import(this.value, { propagate: false, undoOnError: false })) {\n            this.perfectScale();\n        }\n        selectionChangeWatcher.bind(this)();\n\n        this.isMounted = true;\n    },\n    beforeDestroy() {\n        document.removeEventListener('mouseup', this.onDocumentMouseUpFn);\n    },\n    methods: {\n        updateEdgePos(edge, pos) {\n            edge.position1 = pos[0];\n            edge.position2 = pos[1];\n        },\n        mount(elem, node = null) {\n            elem.$el = node;\n            this.checkAllMounted();\n        },\n        checkAllMounted() {\n            if (!this.isMounted) {\n                this.allMounted = false;\n            }\n            else {\n                this.allMounted = !this.blocks.find(block => !block.$el) || !this.edges.find(edge => !edge.$el);\n            }\n        },\n        updateBlockArguments(block, args, removedParams) {\n            if (removedParams.length > 0) {\n                this.parameterRemoved(block, removedParams);\n            }\n            this.$set(block, 'arguments', args);\n            this.commit();\n            if(removedParams.length > 0) {\n                this.$nextTick(() => this.refreshEdges());\n            }\n        },\n        updateBlockDescription(block, description) {\n            this.$set(block, 'description', description);\n            this.commit();\n        },\n        updateBlockPos(block, pos, saveHistory = true) {\n            this.$set(block, 'position', pos);\n            this.commit(null, saveHistory, false);\n        },\n        updateBlockResult(block, result) {\n            this.$set(block, 'result', result);\n            this.commit();\n        },\n        updateBlockSelected(block, selected, unselectOthers = true) {\n            if (unselectOthers) {\n                this.unselectAll();\n            }\n            this.$set(block, 'selected', selected);\n            this.commit(null, false, false);\n        },\n        updateBlockSpec(block, data) {\n            let parameterFields = ['name', 'schema', 'description', 'optional', 'deprecated', 'experimental', 'default'];\n            let newBlock = Utils.omitFromObject(block.spec, parameterFields);\n            Object.assign(newBlock, data);\n            // Remove default values (and unset default value if parameter is required)\n            if (!newBlock.optional) {\n                delete newBlock.optional;\n                delete newBlock.default;\n            }\n            if (!newBlock.deprecated) {\n                delete newBlock.deprecated;\n            }\n            if (!newBlock.experimental) {\n                delete newBlock.experimental;\n            }\n            this.$set(block, 'spec', newBlock);\n            this.commit();\n        },\n        updateBlock(block, key, value, extra) {\n            switch(key) {\n                case 'arguments':\n                    this.updateBlockArguments(block, value, extra);\n                    break;\n                case 'description':\n                    this.updateBlockDescription(block, value);\n                    break;\n                case 'position':\n                    this.updateBlockPos(block, value, extra);\n                    break;\n                case 'result':\n                    this.setResultNode(block, value);\n                    break;\n                case 'selected':\n                    this.updateBlockSelected(block, value, extra);\n                    break;\n                case 'spec':\n                    this.updateBlockSpec(block, value);\n                    break;\n            }\n        },\n        updateHiddenParameterRefEdges() {\n            // We can only reliably detect parameter refs if we know which parameters a process makes available to the child process\n            // So if we don't have process schemas, don't offer this functionality.\n            // Also don't execute (yet) if no parameters are given or not all elements are mounted yet.\n            if (!this.hasProcesses || !this.allMounted || !this.blocks.find(block => block.type === 'parameter')) {\n                this.hiddenParameterRefEdges = {};\n                return;\n            }\n\n            let hiddenRefs = {};\n            for(let process of this.processBlocks) {\n                for (let argName in process.arguments) {\n                    let value = process.arguments[argName];\n                    if (!Utils.isObject(value) || !Utils.isObject(value.process_graph)) {\n                        continue; // Process can only have hidden refs it it contains a process graph\n                    }\n                    \n                    let refs = PgUtils.getRefs(value, true, true).filter(ref => typeof ref.from_parameter !== 'undefined');\n                    for(let ref of refs) {\n                        try {\n                            if(!process.$el) {\n                                continue;\n                            }\n                            if (process.$el.isParameterScoped(argName, ref.from_parameter)) {\n                                continue; // Skip if the parameter usage is scoped (i.e. defined as process parameetr for the children)\n                            }\n                            let parameter = this.getPgParameterById('$' + ref.from_parameter);\n                            if (!parameter) {\n                                continue; // Skip if parameter can't be found\n                            }\n                            let parameter1 = parameter.$el.getBlockParameter('output');\n                            let parameter2 = process.$el.getBlockParameter(argName);\n                            let id = `${parameter.id}->${process.id}:${argName}`;\n                            if (parameter1 && parameter2) {\n                                if (this.hiddenParameterRefEdges[id]) {\n                                    hiddenRefs[id] = this.hiddenParameterRefEdges[id];\n                                }\n                                else {\n                                    hiddenRefs[id] = {\n                                        $el: null,\n                                        id,\n                                        parameter1,\n                                        parameter2\n                                    };\n                                }\n                            }\n                        } catch(error) {\n                             console.warn(error);\n                        }\n                    }\n                }\n\n            }\n            this.hiddenParameterRefEdges = hiddenRefs;\n        },\n        parameterRemoved(block, parameterNames) {\n            for(let edge of this.edges.slice(0)) {\n                if(edge.parameter2.$parent.id === block.id && parameterNames.includes(edge.parameter2.name)) {\n                    this.removeEdge(edge);\n                }\n            }\n        },\n        startDragBlock(event) {\n            for(let block of this.blocks) {\n                if (block.$el) {\n                    block.$el.startDrag(event);\n                }\n            }\n        },\n        refreshEdges() {\n            this.refreshEdgesFor(this.edges);\n            this.refreshEdgesFor(Object.values(this.hiddenParameterRefEdges));\n        },\n        refreshEdgesFor(edges) {\n            for(let edge of edges) {\n                if (edge.$el) {\n                    edge.$el.updatePositions();\n                }\n            }\n        },\n        supports(event) {\n            return Boolean(this.$listeners && this.$listeners[event]);\n        },\n        focus() {\n            this.$refs.div.focus();\n        },\n        link(parameter) {\n            if (this.state.linkFrom) {\n                this.state.linkTo = parameter;\n            }\n            else {\n                this.state.linkFrom = parameter;\n            }\n        },\n        unlink(parameter = null) {\n            if (parameter) {\n                if (this.state.linkTo == parameter) {\n                    this.state.linkTo = null;\n                }\n                else if (this.state.linkFrom == parameter) {\n                    this.state.linkFrom = null;\n                    this.linkingLine = null;\n                }\n            }\n            else {\n                this.state.linkTo = null;\n                this.state.linkFrom = null;\n                this.linkingLine = null;\n            }\n        },\n        multiSelect() {\n            let box = this.selectRect;\n            this.blocks\n                .filter(b => {\n                    if (Array.isArray(b.position) && b.$el) {\n                        let pos = b.$el.getDimensions();\n                        return boxIntersectsBox(box.x, box.y, box.width, box.height, pos.x, pos.y, pos.width, pos.height);\n                    }\n                    return false;\n                })\n                .map(b => b.selected = true);\n            this.edges\n                .filter(e => Array.isArray(e.position1) && Array.isArray(e.position2) && boxIntersectsLine(box.x, box.y, box.width, box.height, e.position1[0], e.position1[1], e.position2[0], e.position2[1]))\n                .map(e => e.selected = true);\n        },\n        toJSON() {\n            let process = this.export();\n            return JSON.stringify(process, null, 2);\n        },\n        async onDocumentMouseUp(event) {\n            if (this.parameterViewer) {\n                return;\n            }\n            if (this.selectedSideEdge) {\n                this.selectEdge(this.selectedSideEdge, null); // Reset selectedParameter, but don't change selected state.\n            }\n            if (this.state.selecting) {\n                this.multiSelect();\n                this.state.selecting = null;\n            }\n            if (this.state.moving) {\n                this.state.moving = null;\n            }\n            if (this.state.editable && this.state.linkFrom) {\n                if (event.which == 1 && this.state.linkTo) {\n                    try {\n                        await this.addEdge(this.state.linkFrom, this.state.linkTo);\n                    } catch (error) {\n                        this.$emit(\"error\", error);\n                    }\n                }\n                this.unlink();\n            }\n        },\n        async onKeyDown(event) {\n            if (this.parameterViewer) {\n                return;\n            }\n            var allInputs = document.querySelectorAll('input, textarea, button, select, datalist');\n            for(let el of allInputs) {\n                if (el === document.activeElement) {\n                    return;\n                }\n            }\n\n            let captured = false;\n            if (this.state.editable) {\n                // delete selected blocks/edges\n                if (event.code === 'Delete') {\n                    this.deleteSelected();\n                    captured = true;\n                }\n                else if (event.ctrlKey || event.metaKey) { // STRG for Win/Linux, meta/cmd from Mac\n                    if (event.code === 'KeyV') {\n                        if (!navigator || !navigator.clipboard || typeof navigator.clipboard.readText !== 'function') {\n                            this.$emit('error', 'Pasting is not supported by your browser.');\n                            return;\n                        }\n                        if (this.hasSelection && this.clipboard) {\n                            if (this.clipboard.edges.length > 0) {\n                                this.$emit('error', 'Pasting edges is not supported yet.');\n                                return;\n                            }\n                            if (this.clipboard.blocks.length > 0) {\n                                this.clipboard.blocks.forEach(block => {\n                                    if (block.type === 'process' && block.origin !== 'schema') {\n                                        this.duplicate(Utils.pickFromObject(block, [\"arguments\", \"description\", \"namespace\", \"position\", \"process_id\"]));\n                                    }\n                                    else {\n                                        this.$emit('error', `Pasting block '${block.id}' is not supported.`);\n                                    }\n                                });\n                            }\n                        }\n                        else {\n                            try {\n                                const text = await navigator.clipboard.readText();\n                                let process = JSON.parse(text);\n                                await this.import(process);\n                            } catch(error) {\n                                this.$emit('error', error, 'Paste Error');\n                            }\n                        }\n                        captured = true;\n                    }\n                    else if (event.code === 'KeyC') {\n                        if (!navigator || !navigator.clipboard || typeof navigator.clipboard.writeText !== 'function') {\n                            this.$emit('error', 'Copying is not supported by your browser.');\n                            return;\n                        }\n                        if (this.hasSelection) {\n                            this.clipboard = {\n                                blocks: this.selectedBlocks.slice(0),\n                                edges: this.selectedEdges.slice(0)\n                            };\n                        }\n                        else {\n                            try {\n                                let json = this.toJSON();\n                                await navigator.clipboard.writeText(json);\n                                captured = true;\n                            } catch(error) {\n                                this.$emit('error', error, 'Copy Error');\n                            }\n                        }\n                        captured = true;\n                    }\n                }\n            }\n\n            if (captured) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        },\n        onMouseWheel(event) {\n            if (this.parameterViewer) {\n                return;\n            }\n            if (!this.explicitZoom || this.hasFocus || event.ctrlKey || event.metaKey) { // STRG for Win/Linux, meta/cmd for Mac\n                let mouse = this.getMousePos(event);\n                var dX = mouse[0] - this.state.center[0];\n                var dY = mouse[1] - this.state.center[1];\n                var deltaScale = Math.pow(1.1, Math.sign(event.deltaY)*-1);\n                this.moveCenter(-dX*(deltaScale-1), -dY*(deltaScale-1));\n                this.state.scale *= deltaScale;\n                event.preventDefault();\n                this.showZoomInfo = false;\n            }\n        },\n        domBoundingBox(el) {\n            var rect = el.getBoundingClientRect();\n            rect.offsetTop = rect.top + Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n            rect.offsetLeft = rect.left + Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);\n            return rect;\n        },\n        getMousePos(event) {\n            let root = this.$refs.div.getBoundingClientRect();\n            return [\n                event.clientX - root.left,\n                event.clientY - root.top\n            ];\n        },\n        onMouseMove(event) {\n            if (this.parameterViewer) {\n                return;\n            }\n            try {\n                let mousePos = this.getMousePos(event);\n\n                if (this.state.editable && this.selectedSideEdge) {\n                    var origin = this.selectedSideEdge.selectedParameter.getCirclePosition();\n                    if (origin) {\n                        var distance = Math.sqrt(Math.pow(mousePos[0]-origin[0], 2)+Math.pow(mousePos[1]-origin[1], 2));\n                        if (distance > 10) {\n                            this.link(this.selectedSideEdge.selectedParameter);\n                            this.removeEdge(this.selectedSideEdge);\n                            this.commit();\n                        }\n                    }\n                }\n\n                if (this.state.selecting) {\n                    this.state.selecting.current = mousePos;\n                }\n\n                if (this.state.moving) {\n                    this.moveCenter((mousePos[0]-this.state.moving[0]), (mousePos[1]-this.state.moving[1]));\n                    this.state.moving = mousePos;\n                }\n\n                if (this.state.linkFrom) {\n                    var position = this.state.linkFrom.getCirclePosition();\n                    if (position) {\n                        this.linkingLine = {\n                            x1: position[0],\n                            y1: position[1],\n                            x2: mousePos[0],\n                            y2: mousePos[1],\n                            'stroke': 'rgba(0,0,0,0.4)',\n                            'stroke-width': 3 * this.state.scale\n                        };\n                    }\n                }\n            } catch (error) {\n                this.$emit(\"error\", error);\n            }\n        },\n        onMouseDown(event) {\n            if (this.parameterViewer) {\n                return;\n            }\n            let sideSelected = null;\n            let mousePos = this.getMousePos(event);\n\n            if (event.which == 1) {\n                if (event.shiftKey) {\n                    // Start multi select via box\n                    this.state.selecting = {\n                        start: mousePos,\n                        current: mousePos\n                    }\n                }\n                else {\n                    // No multiselect: unselect all\n                    this.unselectAll();\n                }\n\n                // Select edges\n                for (var edge of this.edges) {\n                    if (!edge.$el) {\n                        continue;\n                    }\n                    var collide = edge.$el.collide(mousePos[0], mousePos[1]);\n                    if (collide != false) {\n                        if (this.selectedEdges.length === 0 && !event.shiftKey) {\n                            if (collide < 0.3) {\n                                sideSelected = edge.parameter2;\n                            }\n                            else if (collide > 0.7) {\n                                sideSelected = edge.parameter1;\n                            }\n                        }\n                        this.selectEdge(edge, true, sideSelected);\n                        if (edge.issues.length > 0) {\n                            for(let issue of edge.issues) {\n                                this.$emit('error', issue);\n                            }\n                        }\n                        event.preventDefault();\n                        break;\n                    }\n                }\n            }\n\n            if (event.which == 2 || (event.which == 1 && !sideSelected && !event.shiftKey)) {\n                this.state.moving = mousePos;\n            }\n\n            this.focus();\n        },\n\n        getDimensions() {\n            return this.domBoundingBox(this.$refs.div);\n        },\n\n        async clear() {\n            return await this.startTransaction(async () => {\n                this.edges = [];\n                // Don't remove parameters injected by props (fixed callback parameters)\n                this.blocks = this.blocks.filter(b => b.type === 'parameter' && Utils.isObject(b.spec) && b.origin === 'schema');\n                this.nextBlockId = 1;\n                this.nextEdgeId = 1;\n                this.process = {};\n                this.updateHiddenParameterRefEdges();\n                return true;\n            });\n        },\n\n        commit(data = null, history = true, propagate = true) {\n            // Don't commit when in a transaction\n            if (this.activeTransactions > 0) {\n                return;\n            }\n\n            if (history !== false) {\n                this.saveHistory();\n            }\n            if (propagate !== false) {\n                this.$emit('input', data === null ? this.export() : data);\n                this.updateHiddenParameterRefEdges();\n            }\n            else {\n                this.refreshEdges();\n            }\n        },\n    \n        /**\n         * Save the current situation to the history\n         */\n        saveHistory() {\n            var data = this.export(true);\n            this.history.splice(this.historyPointer + 1, this.historySize, Object.freeze(data));\n            if (this.history.length > this.historySize) {\n                this.history.shift();\n            }\n            this.historyPointer = this.history.length - 1;\n            this.$emit('historyChanged', this.history, this.historyPointer);\n        },\n        async undo() {\n            await this.historyStep(-1);\n        },\n        async redo() {\n            await this.historyStep(1);\n        },\n        async historyStep(step) {\n            var index = this.historyPointer + step;\n            var element = this.history[index];\n            if (element) {\n                this.historyPointer = index;\n                this.import(element, { saveHistory: false, undoOnError: false, perfectScale: false });\n                this.$emit('historyChanged', this.history, this.historyPointer);\n            }\n        },\n\n        setResultNode(block, result = true) {\n            block = this.getBlockById(block.id);\n            if (!block || block.result === result) {\n                return; // Nothing to change\n            }\n\n            this.updateBlockResult(block, result);\n            var foundNewResultNode = false;\n            var hasOtherBlocks = false;\n            for(var other of this.processBlocks) {\n                if (block && other.id === block.id) {\n                    continue;\n                }\n                \n                hasOtherBlocks = true;\n                // If we set a new result node, ensure that only that node is a result node and no other.\n                if (result) {\n                    this.updateBlockResult(other, false);\n                }\n                // Find a potential result node if we don't want this to be the result node\n                else {\n                    if (other.$el && !other.$el.hasOutputEdges()) {\n                        this.updateBlockResult(other, true);\n                        foundNewResultNode = true;\n                        break;\n                    }\n                }\n            }\n            // If we have no new potential result node, communicate to the user.\n            if (hasOtherBlocks && !result && !foundNewResultNode) {\n                this.$emit(\"error\", \"No result node available, please specify one.\");\n            }\n        },\n\n        getPositionForPageXY(x, y) {\n            var rect = this.getDimensions();\n            if (x !== null) {\n                x = (x - rect.offsetLeft - this.state.center[0]) / this.state.scale;\n            }\n            if (y !== null) {\n                y = (y - rect.offsetTop - this.state.center[1]) / this.state.scale;\n            }\n            return [x, y];\n        },\n\n        duplicate(data) {\n            data = Utils.deepClone(data);\n            if (data.position) {\n                data.position[1] += 100;\n            }\n            let block = this.addBlock(data);\n            this.$nextTick(() => this.createEdgesForArguments(block.id, data.arguments));\n        },\n\n        addProcess(process_id, args = {}, position = [], namespace = null) {\n            return this.addBlock({\n                process_id,\n                namespace,\n                arguments: args,\n                position\n            });\n        },\n\n        addBlock(node, id = null) {\n            let num = String(this.incrementId(id));\n            if (id === null && Utils.hasText(node.process_id)) {\n                id = node.process_id.replace(/^([a-z]*).*$/i, \"$1\") + num;\n                if (this.getBlockById('#' + id)) {\n                    id = num;\n                }\n            }\n            else {\n                id = num;\n            }\n            if (typeof node.toJSON === 'function') {\n                node = node.toJSON();\n            }\n            var block = {\n                id: '#' + id,\n                type: 'process',\n                selected: false,\n                position: node.position,\n                process_id: node.process_id,\n                namespace: node.namespace,\n                arguments: node.arguments,\n                description: node.description || null,\n                result: node.result || false\n            };\n            if (this.processRegistry) {\n                block.spec = this.processRegistry.get(node.process_id, node.namespace);\n            }\n\n            var size = this.getBlockSize(block);\n            block.position = Utils.ensurePoint(block.position, () => this.getNewBlockDefaultPosition(size));\n\n            // If there's already a result node, remove the flag here\n            if (block.result && this.blocks.filter(b => b.result === true).length) {\n                delete block.result;\n            }\n            // Make this the result node if there's no node yet\n            else if (this.processBlocks.length === 0) {\n                block.result = true;\n            }\n            \n            this.blocks.push(Vue.observable(block));\n            this.commit();\n            return block;\n        },\n\n        getNewBlockDefaultPosition(blockSize) {\n            var rect = this.getDimensions();\n            var position = [\n                (-this.state.center[0] + rect.width/2)/this.state.scale - blockSize[0]/2 + this.newBlockOffset,\n                (-this.state.center[1] + rect.height/2)/this.state.scale - blockSize[1]/2 + this.newBlockOffset\n            ];\n            if (this.newBlockOffset < 150) {\n                this.newBlockOffset += 10;\n            }\n            return position;\n        },\n\n        getBlockSize(block) {\n            if (block.$el) {\n                let dim = block.$el.getDimensions();\n                return [dim.width / this.state.scale, dim.height / this.state.scale];\n            }\n\n            let inputs = Math.max(\n                Utils.size(block.arguments),\n                Utils.isObject(block.spec) ? Utils.size(block.spec.parameters) : 0\n            );\n\n            let size = Config.blockWidth;\n            let width;\n            if (inputs > 0) {\n                width = this.state.compactMode ? size.compactParams : size.normalParams;\n            }\n            else {\n                width = this.state.compactMode ? size.compact : size.normal;\n            }\n\n            let commentHeight = typeof block.description === 'string' ? 40 : 0;\n            let height = MARGIN + inputs * 15 + commentHeight;\n\n            return [width, height];\n        },\n\n        moveCenter(dX, dY, reset = false) {\n            var rect = this.getDimensions();\n            this.state.center = [\n                (reset ? rect.width/2 : this.state.center[0]) + dX,\n                (reset ? rect.height/2 : this.state.center[1]) + dY\n            ];\n            this.newBlockOffset = 0;\n        },\n\n        unselectAll() {\n            for(var block of this.blocks) {\n                this.updateBlockSelected(block, false, false);\n            }\n            for(var edge of this.edges) {\n                this.selectEdge(edge, false);\n            }\n        },\n\n        selectEdge(edge, select = true, parameter = null) {\n            if (!Utils.isObject(edge)) {\n                edge = this.edges[edge];\n            }\n            if (edge.selected === select) {\n                return false; // Nothing to change\n            }\n            if (select !== null) {\n                this.$set(edge, \"selected\", select);\n            }\n            this.$set(edge, \"selectedParameter\", parameter);\n            return true;\n        },\n\n        /**\n         * Edge to remove\n         */\n        removeEdge(edge) {\n            edge.parameter1.eraseEdge(edge);\n            edge.parameter2.eraseEdge(edge);\n            this.$delete(this.edges, this.edges.indexOf(edge));\n        },\n            \n        /**\n         * Remove a block\n         */\n        async removeBlock(block) {\n            // Check if the parameter for this block is used in child processes (callbacks).\n            // Then don't delete, but give error instead.\n            if (block.type === 'parameter') {\n                let param = null;\n                let conflictBlock = this.blocks.find(otherBlock => {\n                    param = otherBlock.$el.hiddenParameterRef(block);\n                    return (param !== null);\n                });\n                if (conflictBlock) {\n                    throw new Error(`Parameter is still used in '${conflictBlock.id}', parameter '${param}'. Only unused parameters can be deleted.`);\n                }\n            }\n\n            // now start deleting the block\n            return await this.startTransaction(async () => {\n                var i = this.blocks.findIndex(b => b.id == block.id);\n                if (i < 0) {\n                    return false;\n                }\n\n                for (var edge of this.edges.slice(0)) {\n                    if (edge.parameter1.$parent.id === block.id || edge.parameter2.$parent.id === block.id) {\n                        this.removeEdge(edge);\n                    }\n                }\n\n                if (block.result) {\n                    this.setResultNode(block, false);\n                }\n\n                this.$delete(this.blocks, i);\n                return true;\n            });\n        },\n\n        /**\n         * Retreive a block by ID\n         */\n        getBlockById(blockId) {\n            var blocks = this.blocks.filter(block => block.id === blockId);\n            if (blocks.length > 0) {\n                return blocks[0];\n            }\n            return null;\n        },\n\n        /**\n         * Delete the current link\n         */\n        async deleteSelected() {\n            if (!this.hasSelection) {\n                return false;\n            }\n\n            return await this.startTransaction(async () => {\n                // Remove the selected blocks and its edges\n                for(var block of this.selectedBlocks.slice(0)) { // copy to avoid race condition\n                    if (block.$el.allowsDelete) {\n                        await this.removeBlock(block);\n                    }\n                }\n\n                // Removes the selected edges\n                for(var edge of this.selectedEdges.slice(0)) { // copy to avoid race condition\n                    this.removeEdge(edge);\n                }\n                return true;\n            });\n        },\n\n        async addEdgeByNames(b1, p1, b2, p2) {\n            var blocks = [];\n            for(var id of [b1, b2]) {\n                var block = this.getBlockById(id);\n                if (!block) {\n                    throw \"Can't find block: \" + id;\n                }\n                else if (!block.$el) {\n                    throw \"Block not mounted yet: \" + id;\n                }\n                blocks.push(block.$el);\n            }\n            await this.addEdge(\n                blocks[0].getBlockParameter(p1),\n                blocks[1].getBlockParameter(p2)\n            );\n        },\n \n        async addEdge(p1, p2) {\n            if (!p1 || !p2) {\n                throw 'One of the parameters is invalid.';\n            }\n            // Check whether you want to connect the same parameters\n            if (p1 == p2) {\n                return; // Probably by mistake, don't show an error to not annoy people\n            }\n            // Check whether you want to connect the block to itself\n            if (p1.$parent == p2.$parent) {\n                throw 'You can\\'t link a block to itself';\n            }\n\n            var id = this.nextEdgeId++;\n            var edge = {id, selected: false, inactive: false, issues: [], $el: null};\n            if (p1.output) {\n                edge.parameter1 = p1;\n                edge.parameter2 = p2;\n            }\n            else {\n                // Reverse the order of in and out\n                edge.parameter1 = p2;\n                edge.parameter2 = p1;\n            }\n\n            // You have to link an input with an output\n            if (edge.parameter1.output === edge.parameter2.output) {\n                throw 'You have to link an input with an output';\n            }\n            // Check for non-recursiveness\n            if (this.allSuccessors(edge.parameter1).indexOf(edge.parameter2.id) !== -1) {\n                throw 'You can not create a loop';\n            }\n            // Check whether the data type allows multiple input edges\n            if (edge.parameter2.getEdgeCount() > 0 && !edge.parameter2.allowsMultipleInputs) {\n                throw 'Parameter accepts only one input';\n            }\n\n            // Check whether the edge exists\n            for (var other of this.edges) {\n                if (other.$el && other.$el.equals(edge)) {\n                    throw 'This connection exists already';\n                }\n            }\n\n            // Check type compatibility\n            if (!JsonSchemaValidator.isSchemaCompatible(edge.parameter2.schema || {}, edge.parameter1.schema || {}, false, true)) {\n                let issue = 'Incoming data type is not compatible for parameter \"' + edge.parameter2.name + '\"';\n                edge.issues.push(issue);\n                this.$emit('error', issue);\n            }\n\n            return await this.startTransaction(async () => {\n                this.unlink();\n\n                // Create edge\n                this.edges.push(Vue.observable(edge));\n                edge.parameter1.addEdge(edge);\n                edge.parameter2.addEdge(edge);\n\n                // Update result node\n                this.setResultNode(edge.parameter1.$parent, false);\n                return true;\n            });\n        },\n\n        /**\n         * Find all successors of a block, and their successors\n         */\n        allSuccessors(outputParameter) {\n            var block = outputParameter.$parent;\n            // Blocks already explored\n            var explored = {};\n            var exploreList = [block];\n            explored[block.id] = true;\n        \n            while (exploreList.length > 0) {\n                var currentBlock = exploreList.pop();\n                for (var key in currentBlock.edges) {\n                    for (var i in currentBlock.edges[key]) {\n                        var edge = currentBlock.edges[key][i];\n                        if (edge.block1 == currentBlock) {\n                            var target = edge.block2;\n                            if (!(target.id in explored)) {\n                                explored[target.id] = true;\n                                exploreList.push(target);\n                            }\n                        }\n                    }\n                }\n            }\n\n            return Object.values(explored);\n        },\n\n        /**\n         * Changing the compact mode\n         */\n        async toggleCompact() {\n            this.state.compactMode = !this.state.compactMode;\n            this.$emit('compactMode', this.state.compactMode);\n            await this.$nextTick();\n            this.refreshEdges();\n        },\n\n        export(internal = false) {\n            let data = {\n                process_graph: {}\n            };\n\n            for(let block of this.processBlocks) {\n                let keys = ['process_id', 'namespace', 'arguments', 'description', 'result'];\n                if (internal) {\n                    // Keep internal state for history\n                    keys.push('position');\n                }\n                let copy = Utils.pickFromObject(block, keys);\n                // Remove default values for simplicity\n                if (copy.description === null) {\n                    delete copy.description;\n                }\n                if (copy.result !== true) {\n                    delete copy.result;\n                }\n                if (!copy.namespace) {\n                    delete copy.namespace;\n                }\n                let nodeId = block.id.substr(1);\n                data.process_graph[nodeId] = copy;\n            }\n\n            if (!this.parent) {\n                data.parameters = [];\n                let parameterBlocks = this.getPgParameters();\n                for(let param of parameterBlocks) {\n                    data.parameters.push(param.spec);\n                }\n            }\n\n            // ToDo: Currently, we just use the id, categories, result value etc from the original process.\n            // Implement to allow custom settings from users.\n            return new BlocksProcess(Object.assign({}, this.process, data));\n        },\n\n        // Options may contain:\n        // - undoOnError: don't undo changes when an error occured (default: true)\n        // - saveHistory: commit the changes to the history (default: true)\n        // - propagate: emit the changes to the parent v-model (default: true)\n        async startTransaction(fn, options = {}, ...args) {\n            let success;\n            this.activeTransactions++;\n\n            try {\n                success = await fn(args);\n            } catch (error) {\n                // If an error occured: show it and restore the last working state from history.\n                this.$emit('error', error, \"Model is invalid\");\n                if (options.undoOnError !== false) {\n                    try {\n                        await this.undo();\n                    } catch (error2) {\n                        this.$emit('error', error, \"Revert failed\");\n                    }\n                }\n                success = false;\n            }\n\n            this.activeTransactions--;\n            this.commit(null, options.saveHistory, options.propagate);\n\n            return success;\n        },\n\n        // Options may contain:\n        // - all from startTransaction()\n        // - clear: Clear the model builder before import (default: true)\n        // - perfectScale: Apply perfect scale after import (default: true)\n        async import(process, options = {}) {\n            return await this.startTransaction(async () => {\n                // clear screen...\n                if (options.clear !== false) {\n                    await this.clear();\n                    this.process = process instanceof ProcessGraph ? process.toJSON() : process;\n                }\n\n                if (!Utils.isObject(process)) {\n                    return false;\n                }\n\n                // Parse process\n                let pg;\n                if (process instanceof ProcessGraph) {\n                    // Make a copy\n                    pg = new ProcessGraph(process.toJSON(), this.processRegistry);\n                    pg.setParent(process.parentProcessId, process.parentParameterName);\n                }\n                else {\n                    pg = new ProcessGraph(process, this.processRegistry);\n                }\n                pg.allowEmpty();\n                pg.parse();\n                this.processGraph = Object.freeze(pg);\n\n                await this.importPgParameters(this.processGraph.getProcessParameters(true), 'user', options.clear !== false);\n                await this.importNodes(this.processGraph.getStartNodes());\n                await this.importEdges(this.processGraph);\n\n                if (options.perfectScale !== false) {\n                    this.perfectScale();\n                }\n\n                this.$nextTick(() => this.updateHiddenParameterRefEdges());\n\n                return true;\n            }, options);\n        },\n\n        async importPgParameters(params, origin, clear = true) {\n            if (!Array.isArray(params)) {\n                return;\n            }\n\n            let options = {\n                undoOnError: false,\n                saveHistory: false,\n                propagate: false\n            };\n            return await this.startTransaction(async () => {\n                // Remove existing parameters from the given origin\n                if (clear) {\n                    this.blocks = this.blocks.filter(b => b.type !== 'parameter' || b.origin !== origin);\n                }\n\n                let size = this.getBlockSize({}); // Estimate base size for an empty block\n                let position = [0,0];\n                for(var i in params) {\n                    position = [\n                        -size[0] - MARGIN,\n                        i * (size[1] + MARGIN)\n                    ];\n\n                    await this.addPgParameter(params[i], origin, position);\n                }\n            }, options);\n        },\n\n        async addPgParameter(param, origin = 'user', position = null) {\n            return await this.startTransaction(async () => {\n                let id = '$' + param.name;\n                // Check a parameter with the same name exists\n                if (this.blocks.findIndex(p => p.type === 'parameter' && p.id == id) >= 0) {\n                    return false;\n                }\n                param = Utils.deepClone(param);\n                if (typeof param.schema === 'undefined') {\n                    param.schema = {};\n                }\n                this.blocks.push(Vue.observable({\n                    id,\n                    type: 'parameter',\n                    origin,\n                    position: Utils.ensurePoint(position, () => this.getNewBlockDefaultPosition(this.getBlockSize({}))),\n                    spec: Object.freeze(param)\n                }));\n                return true;\n            });\n        },\n\n        getPgParameters() {\n            return this.blocks.filter(b => b.type === 'parameter');\n        },\n\n        getPgParameterById(id) {\n            return this.blocks.find(b => b.type === 'parameter' && b.id === id);\n        },\n\n        async importEdges(pg) {\n            var nodes = pg.getNodes();\n            return Promise.all(Object.values(nodes).map(node => this.importEdgesForNode(node)));\n        },\n\n        async importEdgesForNode(node) {\n            var args = node.getArgumentNames();\n            for(let i in args) {\n                let arg = args[i];\n                let val = node.getRawArgument(arg);\n                let ref = '#' + node.id;\n                switch(node.getArgumentType(arg)) {\n                    case 'result':\n                        await this.addEdgeByNames('#' + val.from_node, \"output\", ref, arg, false);\n                        break;\n                    case 'parameter':\n                        await this.addEdgeByNames('$' + val.from_parameter, \"output\", ref, arg, false);\n                        break;\n                    case 'object':\n                    case 'array':\n                        await this.importEdgeDeep(val, ref, arg);\n                        break;\n                }\n            }\n        },\n\n        async importEdgeDeep(val, nodeId, arg) {\n            for(let k in val) {\n                // k !== 'process_graph' prevents importing sub process graphs like in load_collection, see #118\n                if(val[k] && typeof val[k] === \"object\" && k !== 'process_graph') {\n                    await this.importEdgeDeep(val[k], nodeId, arg);\n                }\n                else if (!Utils.isRef(val)) {\n                    continue;\n                }\n                else if (val.from_node) {\n                    await this.addEdgeByNames('#' + val.from_node, \"output\", nodeId, arg, false);\n                }\n                else if (val.from_parameter) {\n                    await this.addEdgeByNames('$' + val.from_parameter, \"output\", nodeId, arg, false);\n                }\n            }\n        },\n\n        async createEdgesForArguments(nodeId, args) {\n            for(let arg in args) {\n                await this.importEdgeDeep(args[arg], nodeId, arg);\n            }\n        },\n\n        async importNodes(nodes, x = 0, y = 0, imported = []) {\n            let nextNodes = [];\n            let maxX = 0;\n            for(let node of nodes) {\n                // `node` is a Node class instance as defined by the js-processgraphs library\n                // `data` is the simple object that is defined by JSON process graphs\n                // `block` is the representation used by the Block component to render the block\n\n                // To get a better layout, only add the block once all previous nodes are added\n                if (imported.includes(node.id) || node.getPreviousNodes().find(prev => !imported.includes(prev.id)) !== undefined) {\n                    y += MARGIN / 2; // add a small offset so that lines going through a box are easier to see\n                    continue;\n                }\n\n                let data = typeof node.toJSON === 'function' ? node.toJSON() : node;\n                data.position = Utils.ensurePoint(data.position, () => [x,y]);\n\n                let block = this.addBlock(data, node.id);\n                imported.push(node.id);\n\n                let size = this.getBlockSize(block);\n                maxX = Math.max(maxX, data.position[0] + size[0]);\n                y = data.position[1] + size[1] + MARGIN;\n\n                nextNodes = nextNodes.concat(node.getNextNodes());\n            }\n            if (nextNodes.length) {\n                await this.importNodes(nextNodes, maxX + MARGIN, 0, imported);\n            }\n        },\n\n        incrementId(id = null) {\n            if (typeof id !== 'number' && (typeof id !== 'string' || id.length === 0)) {\n                id = this.nextBlockId;\n                this.nextBlockId++;\n            }\n            let int = Number.parseInt(id, 10);\n            if (!Number.isNaN(int)) {\n                this.nextBlockId = Math.max(this.nextBlockId, int+1);\n            }\n            return id;\n        },\n\n        /**\n         * Go to the perfect scale\n         */\n        perfectScale() {\n            if (!this.$refs.div || this.blocks.length === 0) {\n                return;\n            }\n\n            var xMin = null, xMax = null;\n            var yMin = null, yMax = null;\n\n            for (let block of this.blocks) {\n                let size = this.getBlockSize(block);\n                let pos = Utils.ensurePoint(block.position);\n                if (xMin == null) {\n                    xMin = pos[0]-15\n                    xMax = pos[0]+size[0]+15;\n                    yMin = pos[1]-15\n                    yMax = pos[1]+size[1]+15;\n                } else {\n                    xMin = Math.min(xMin, pos[0]-15);\n                    xMax = Math.max(xMax, pos[0]+size[0]+15);\n                    yMin = Math.min(yMin, pos[1]-15);\n                    yMax = Math.max(yMax, pos[1]+size[1]+15);\n                }\n            }\n\n            var rect = this.$refs.div.getBoundingClientRect();\n            var scaleA = rect.width/(xMax-xMin);\n            var scaleB = rect.height/(yMax-yMin);\n            this.state.scale = Math.min(scaleA, scaleB, 1.5); // Don't scale higher than 1.5\n            this.state.center = [\n                rect.width/2 - this.state.scale*(xMin+xMax)/2.0,\n                rect.height/2 - this.state.scale*(yMin+yMax)/2.0\n            ];\n            this.newBlockOffset = 0;\n        },\n\n        showParameterViewer(parameters, values, title, isEditable, selectParameterName, saveCallback, parent) {\n            this.parameterViewer = {\n                parameters,\n                values,\n                title,\n                selectParameterName,\n                parent\n            };\n        }\n    }\n};\n\nclass BlocksProcess {\n    constructor(process) {\n        Object.assign(this, process);\n    }\n}\n</script>\n\n<style lang=\"scss\">\n.vue-component.model-builder {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\n    &.editable.focus .blocks {\n        border-color: rgba(22, 102, 182, 0.3);\n    }\n\n    &:focus,\n    .blocks:focus,\n    .canvas:focus {\n        outline: 0;\n    }\n    \n    .canvas {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        z-index: 1;\n    }\n    \n    .blocks {\n        box-sizing: border-box;\n        border: 1px solid transparent;\n        overflow: hidden;\n        position: absolute;\n        z-index: 3;\n        width: 100%;\n        height: 100%;\n    }\n\n    &.compact .blockicon .delete,\n    &.compact .blockicon .info,\n    &.compact .blockicon .addDescription,\n    &.compact .blockId,\n    &.compact .editDescription, \n    &.scale_xs .blockicon,\n    &.scale_s .blockicon,\n    &.scale_xs .connector .text {\n        display: none;\n    }\n    .zoomInfo {\n        position: absolute;\n        top: 0;\n        right: 0;\n        display: inline-block;\n        padding: 0.3em;\n        background-color: #f9f9f9;\n        color: #000;\n        border-radius: 0 0 0 0.3em;\n        z-index: 5;\n    }\n    &.scale_xs .editDescription {\n        visibility: hidden;\n    }\n}\n</style>","import mod from \"-!../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ModelBuilder.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ModelBuilder.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ModelBuilder.vue?vue&type=template&id=3477c0e2\"\nimport script from \"./ModelBuilder.vue?vue&type=script&lang=js\"\nexport * from \"./ModelBuilder.vue?vue&type=script&lang=js\"\nimport style0 from \"./ModelBuilder.vue?vue&type=style&index=0&id=3477c0e2&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict'\n\n/**\n * box-box collision\n * @param {number} x1 top-left corner of first box\n * @param {number} y1 top-left corner of first box\n * @param {number} w1 width of first box\n * @param {number} h1 height of first box\n * @param {number} x2 top-left corner of second box\n * @param {number} y2 top-left corner of second box\n * @param {number} w2 width of second box\n * @param {number} h2 height of second box\n */\nmodule.exports = function boxBox(x1, y1, w1, h1, x2, y2, w2, h2)\n{\n    return x1 < x2 + w2 && x1 + w1 > x2 && y1 < y2 + h2 && y1 + h1 > y2\n}\n","'use strict'\n\nvar lineBox = require('./line-box')\n\n/**\n * box-line collision\n * @param {number} xb top-left corner of box\n * @param {number} yb top-left corner of box\n * @param {number} wb width of box\n * @param {number} hb height of box\n * @param {number} x1 first point of line\n * @param {number} y1 first point of line\n * @param {number} x2 second point of line\n * @param {number} y2 second point of line\n */\nmodule.exports = function boxLine(xb, yb, wb, hb, x1, y1, x2, y2)\n{\n    return lineBox(x1, y1, x2, y2, xb, yb, wb, hb)\n}\n","'use strict'\n\n/**\n * box-point collision\n * @param {number} x1 top-left corner of box\n * @param {number} y1 top-left corner of box\n * @param {number} w1 width of box\n * @param {number} h1 height of box\n * @param {number} x2 of point\n * @param {number} y2 of point\n * @return {boolean}\n */\nmodule.exports = function boxPoint(x1, y1, w1, h1, x2, y2)\n{\n    return x2 >= x1 && x2 <= x1 + w1 && y2 >= y1 && y2 <= y1 + h1\n}\n","'use strict'\n\nvar boxPoint = require('./box-point')\nvar lineLine = require('./line-line')\n\n/**\n * line-box collision\n number @param {number} x1 point 1 of line\n number @param {number} y1 point 1 of line\n number @param {number} x2 point 2 of line\n number @param {number} y2 point 2 of line\n number @param {number} xb top-left of box\n number @param {number} yb top-left of box\n number @param {number} wb width of box\n number @param {number} hb height of box\n */\nmodule.exports = function lineBox(x1, y1, x2, y2, xb, yb, wb, hb)\n{\n    if (boxPoint(xb, yb, wb, hb, x1, y1) || boxPoint(xb, yb, wb, hb, x2, y2))\n    {\n        return true\n    }\n    return lineLine(x1, y1, x2, y2, xb, yb, xb + wb, yb) ||\n        lineLine(x1, y1, x2, y2, xb + wb, yb, xb + wb, yb + hb) ||\n        lineLine(x1, y1, x2, y2, xb, yb + hb, xb + wb, yb + hb) ||\n        lineLine(x1, y1, x2, y2, xb, yb, xb, yb + hb)\n}\n","'use strict'\n\nconst lineToPolygon = require('./lineToPolygon')\nconst polygonPolygon = require('./polygon-polygon')\nconst linePolygon = require('./line-polygon')\nconst lineToLine = require('./lineToLine')\n\n/**\n * line-line collision\n * from http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect\n * @param {number} x1 first point in line 1\n * @param {number} y1 first point in line 1\n * @param {number} x2 second point in line 1\n * @param {number} y2 second point in line 1\n * @param {number} x3 first point in line 2\n * @param {number} y3 first point in line 2\n * @param {number} x4 second point in line 2\n * @param {number} y4 second point in line 2\n * @param {number} [thickness1] of line 1 (the line is centered in its thickness--see demo)\n * @param {number} [thickness2] of line 2 (the line is centered in its thickness--see demo)\n * @return {boolean}\n */\nmodule.exports = function lineLine(x1, y1, x2, y2, x3, y3, x4, y4, thickness1, thickness2)\n{\n    if (thickness1 || thickness2)\n    {\n        return lineLineThickness(x1, y1, x2, y2, x3, y3, x4, y4, thickness1, thickness2)\n    }\n    else\n    {\n        return lineToLine(x1, y1, x2, y2, x3, y3, x4, y4)\n    }\n}\n\nfunction lineLineThickness(x1, y1, x2, y2, x3, y3, x4, y4, thickness1, thickness2)\n{\n    if (thickness1 && thickness2)\n    {\n        return polygonPolygon(lineToPolygon(x1, y1, x2, y2, thickness1), lineToPolygon(x3, y3, x4, y4, thickness2))\n    }\n    else if (thickness1)\n    {\n        return linePolygon(x3, y3, x4, y4, lineToPolygon(x1, y1, x2, y2, thickness1))\n    }\n    else if (thickness2)\n    {\n        return linePolygon(x1, y1, x2, y2, lineToPolygon(x3, y3, x4, y4, thickness1))\n    }\n}","'use strict'\n\nfunction distanceSquared(x1, y1, x2, y2)\n{\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n}\n\n/**\n * line-point collision\n * from https://stackoverflow.com/a/17693146/1955997\n * @param {number} x1 first point in line\n * @param {number} y1 first point in line\n * @param {number} x2 second point in line\n * @param {number} y2 second point in line\n * @param {number} xp point\n * @param {number} yp point\n * @param {number} [tolerance=1]\n * @return {boolean}\n */\nmodule.exports = function linePoint(x1, y1, x2, y2, xp, yp, tolerance)\n{\n    tolerance = tolerance || 1\n    return Math.abs(distanceSquared(x1, y1, x2, y2) - (distanceSquared(x1, y1, xp, yp) + distanceSquared(x2, y2, xp, yp))) <= tolerance\n}","var polygonPoint = require('./polygon-point')\nvar lineLine = require('./lineToLine')\n\n/**\n * line-polygon collision\n @param {number} x1 point 1 of line\n @param {number} y1 point 1 of line\n @param {number} x2 point 2 of line\n @param {number} y2 point 2 of line\n @param {number[]} points of polygon\n @param {tolerance=1} maximum distance of point to polygon's edges that triggers collision (see pointLine)\n */\nmodule.exports = function linePolygon(x1, y1, x2, y2, points, tolerance)\n{\n    var length = points.length\n\n    // check if first point is inside the shape (this covers if the line is completely enclosed by the shape)\n    if (polygonPoint(points, x1, y1, tolerance))\n    {\n        return true\n    }\n\n    // check for intersections for all of the sides\n    for (var i = 0; i < length; i += 2)\n    {\n        var j = (i + 2) % length\n        if (lineLine(x1, y1, x2, y2, points[i], points[i + 1], points[j], points[j + 1]))\n        {\n            return true\n        }\n    }\n    return false\n}\n","'use strict'\n\n/**\n * lineToLine helper function (to avoid circular dependencies)\n * from http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect\n * @param {number} x1 first point in line 1\n * @param {number} y1 first point in line 1\n * @param {number} x2 second point in line 1\n * @param {number} y2 second point in line 1\n * @param {number} x3 first point in line 2\n * @param {number} y3 first point in line 2\n * @param {number} x4 second point in line 2\n * @param {number} y4 second point in line 2\n * @return {boolean}\n */\nmodule.exports = function lineToLine(x1, y1, x2, y2, x3, y3, x4, y4)\n{\n    var s1_x = x2 - x1\n    var s1_y = y2 - y1\n    var s2_x = x4 - x3\n    var s2_y = y4 - y3\n    var s = (-s1_y * (x1 - x3) + s1_x * (y1 - y3)) / (-s2_x * s1_y + s1_x * s2_y)\n    var t = (s2_x * (y1 - y3) - s2_y * (x1 - x3)) / (-s2_x * s1_y + s1_x * s2_y)\n    return s >= 0 && s <= 1 && t >= 0 && t <= 1\n}","'use strict'\n\n/**\n * turns a line into a polygon using thickness\n * @param {number} x1 first point of line\n * @param {number} y1 first point of line\n * @param {number} x2 second point of line\n * @param {number} y2 second point of line\n * @param {number} thickness of line\n */\nmodule.exports = function lineToPolygon(x1, y1, x2, y2, thickness)\n{\n    const angle = Math.atan2(y2 - y1, x2 - x1) - Math.PI / 2\n    const half = thickness / 2\n    const cos = Math.cos(angle) * half\n    const sin = Math.sin(angle) * half\n    return [\n        x1 - cos, y1 - sin,\n        x2 - cos, y2 - sin,\n        x2 + cos, y2 + sin,\n        x1 + cos, y1 + sin\n    ]\n}","'use strict'\n\nconst linePoint = require('./line-point')\n\n/**\n * polygon-point collision\n * based on https://stackoverflow.com/a/17490923/1955997\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n * @param {number} x of point\n * @param {number} y of point\n * @param {number} [tolerance=1] maximum distance of point to polygon's edges that triggers collision (see pointLine)\n */\nmodule.exports = function polygonPoint(points, x, y, tolerance)\n{\n    var length = points.length\n    var c = false\n    var i, j\n    for (i = 0, j = length - 2; i < length; i += 2)\n    {\n        if (((points[i + 1] > y) !== (points[j + 1] > y)) && (x < (points[j] - points[i]) * (y - points[i + 1]) / (points[j + 1] - points[i + 1]) + points[i]))\n        {\n            c = !c\n        }\n        j = i\n    }\n    if (c)\n    {\n        return true\n    }\n    for (i = 0; i < length; i += 2)\n    {\n        var p1x = points[i]\n        var p1y = points[i + 1]\n        var p2x, p2y\n        if (i === length - 2)\n        {\n            p2x = points[0]\n            p2y = points[1]\n        }\n        else\n        {\n            p2x = points[i + 2]\n            p2y = points[i + 3]\n        }\n        if (linePoint(p1x, p1y, p2x, p2y, x, y, tolerance))\n        {\n            return true\n        }\n    }\n    return false\n}\n","'use strict'\n\n/**\n * polygon-polygon collision\n * based on http://stackoverflow.com/questions/10962379/how-to-check-intersection-between-2-rotated-rectangles\n * @param {number[]} points1 [x1, y1, x2, y2, ... xn, yn] of first polygon\n * @param {number[]} points2 [x1, y1, x2, y2, ... xn, yn] of second polygon\n * @return {boolean}\n */\nmodule.exports = function polygonPolygon(points1, points2)\n{\n    var a = points1\n    var b = points2\n    var polygons = [a, b]\n    var minA, maxA, projected, minB, maxB, j\n    for (var i = 0; i < polygons.length; i++)\n    {\n        var polygon = polygons[i]\n        for (var i1 = 0; i1 < polygon.length; i1 += 2)\n        {\n            var i2 = (i1 + 2) % polygon.length\n            var normal = { x: polygon[i2 + 1] - polygon[i1 + 1], y: polygon[i1] - polygon[i2] }\n            minA = maxA = null\n            for (j = 0; j < a.length; j += 2)\n            {\n                projected = normal.x * a[j] + normal.y * a[j + 1]\n                if (minA === null || projected < minA)\n                {\n                    minA = projected\n                }\n                if (maxA === null || projected > maxA)\n                {\n                    maxA = projected\n                }\n            }\n            minB = maxB = null\n            for (j = 0; j < b.length; j += 2)\n            {\n                projected = normal.x * b[j] + normal.y * b[j + 1]\n                if (minB === null || projected < minB)\n                {\n                    minB = projected\n                }\n                if (maxB === null || projected > maxB)\n                {\n                    maxB = projected\n                }\n            }\n            if (maxA < minB || maxB < minA)\n            {\n                return false\n            }\n        }\n    }\n    return true\n}\n"],"names":["render","_vm","this","_c","_self","ref","class","classes","style","attrs","id","on","onMouseMove","onMouseDown","onMouseWheel","onKeyDown","$event","hasFocus","staticClass","_l","edge","key","parameter1","parameter2","selected","inactive","issues","state","node","mount","updateEdgePos","arguments","_b","linkingLine","_e","selectRect","block","type","spec","position","origin","process_id","namespace","result","description","args","updateBlock","startDragBlock","scale","showZoomInfo","_v","parameterViewer","staticRenderFns","containerClasses","indexOf","_k","keyCode","preventDefault","stopPropagation","button","apply","emitDrag","plainTitle","directives","name","rawName","value","expression","_s","focus","allowsDescription","showDescriptionField","addDescription","duplicate","remove","showInfo","isParameter","edit","param","i","refInFor","optional","deprecated","experimental","default","schema","updateArgument","edgesChanged","outputLabel","updateResult","output","editable","domProps","updateDescription","_g","circleClasses","circleListeners","textListeners","displayLabel","displayValue","props","String","Boolean","Object","Array","label","required","data","edges","computed","schemas","ProcessSchema","hasValue","undefined","allowsArgumentChange","click","openEditorForArguments","listeners","mousedown","event","which","root","link","dblclick","$emit","mouseover","linkFrom","mouseout","linkTo","unlink","getEdgeCount","push","unspecified","$parent","invalid","hasProcesses","length","maxLength","formattedValue","isEditable","compactMode","isRef","formatValue","isArrayType","nativeDataType","isObjectType","allowsMultipleInputs","watch","updateEdgeStatus","immediate","handler","methods","isEdgeUsed","getCirclePosition","dim","domBoundingBox","$refs","circle","blocksDim","getDimensions","x","offsetLeft","width","y","offsetTop","height","error","console","warn","showArguments","jsonSchema","toJSON","setValue","resetValue","nullable","dataType","getEdgeRef","addRefToValue","isArray","propertyCount","size","removeRefFromValue","isRefEqual","removeRefFromValueDeep","splice","isObject","hasOwnProperty","addEdge","eraseEdge","k","$delete","hasRefInValue","formatProcess","pg","ProcessGraph","getNodeCount","getResultNode","nodes","values","process_graph","html","formatArray","formatObject","text","htmlentities","substr","toString","JSON","stringify","parts","formatted","unformatted","htmlentities_decode","formatArraySimple","join","title","map","v","keys","formatRef","west","east","south","north","detectGeoJson","component","defaultScale","blockWidth","compactParams","compact","normalParams","normal","defaultFontSize","components","BlockParameter","drag","parameters","styles","marginLeft","Math","round","center","marginTop","fontSize","showId","collectionId","processId","isUrl","collection","collections","allowsParameterChange","supports","filter","p","allowsDuplicate","allowsDelete","allowsInfo","hasParametersDefined","names","ProcessParameter","includes","fields","returns","from_parameter","from_node","mounted","draggingFn","dragging","bind","document","addEventListener","stopDragFn","stopDrag","beforeDestroy","removeEventListener","editParameter","hasParameter","find","elem","composedPath","updatePosition","pos","saveHistory","ensurePoint","updateArguments","removeParameters","equals","deepClone","hasOutputEdges","select","shiftKey","unselectOthers","div","parameter","refs","parameterName","$nextTick","descriptionField","getDragPos","mouse","startDrag","mousePos","getMousePos","delta","abs","drapPos","removeBlock","getBlockParameter","params","isParameterScoped","referenceName","parameterBlock","cbParams","ProcessUtils","getCallbackParameters","cbParam","hiddenParameterRef","globalParam","argName","getRefs","r","line","Segment","constructor","dx","dy","distance","point1","point2","sqrt","pow","distanceP","point","intersection","alpha","other","a","b","c","d","b0","b1","det","r1","r2","lineWidth","Number","lineColor","position1","position2","segment","scaledLineWidth","lines","xM","yM","PI","cos","sin","cosB","sinB","norm","arrowLength","xA","yA","lineStyle","getLineStyle","arrowStyle","mainLine","getLine","updatePositions","created","pos1","pos2","freeze","dashed","dashLength","color","x1","y1","x2","y2","settings","assign","collide","dp","getDefaultState","blocks","observable","moving","selecting","MARGIN","selectionChangeWatcher","newVal","oldVal","every","selectedBlocks","selectedEdges","Block","Edge","ParameterViewer","processes","parent","parentSchema","historySize","explicitZoom","isMounted","allMounted","newBlockOffset","history","historyPointer","process","hiddenParameterRefEdges","processGraph","nextBlockId","nextEdgeId","clipboard","activeTransactions","min","current","start","processRegistry","ProcessRegistry","count","get","Error","processBlocks","selectedSideEdge","selectedParameter","hasSelection","processParametersFromSchemas","parentParams","getPgParameters","callbackParams","filteredParentParams","p1","p2","concat","importPgParameters","BlocksProcess","import","propagate","undoOnError","updateHiddenParameterRefEdges","checkAllMounted","beforeCreate","enableHtmlProps","$on","msg","showParameterViewer","loadFontAwesome","moveCenter","onDocumentMouseUpFn","onDocumentMouseUp","perfectScale","$el","updateBlockArguments","removedParams","parameterRemoved","$set","commit","refreshEdges","updateBlockDescription","updateBlockPos","updateBlockResult","updateBlockSelected","unselectAll","updateBlockSpec","parameterFields","newBlock","omitFromObject","extra","setResultNode","hiddenRefs","getPgParameterById","parameterNames","slice","removeEdge","refreshEdgesFor","$listeners","multiSelect","box","e","export","selectEdge","allInputs","querySelectorAll","el","activeElement","captured","code","deleteSelected","ctrlKey","metaKey","navigator","readText","forEach","pickFromObject","parse","writeText","json","dX","dY","deltaScale","sign","deltaY","rect","getBoundingClientRect","top","max","documentElement","scrollTop","body","left","scrollLeft","clientX","clientY","sideSelected","issue","clear","startTransaction","async","shift","undo","historyStep","redo","step","index","element","getBlockById","foundNewResultNode","hasOtherBlocks","getPositionForPageXY","addBlock","createEdgesForArguments","addProcess","num","incrementId","hasText","replace","getBlockSize","getNewBlockDefaultPosition","blockSize","inputs","commentHeight","reset","conflictBlock","otherBlock","findIndex","blockId","addEdgeByNames","b2","allSuccessors","JsonSchemaValidator","isSchemaCompatible","outputParameter","explored","exploreList","currentBlock","pop","block1","target","block2","toggleCompact","internal","copy","nodeId","parameterBlocks","fn","options","success","error2","setParent","parentProcessId","parentParameterName","allowEmpty","getProcessParameters","importNodes","getStartNodes","importEdges","addPgParameter","getNodes","Promise","all","importEdgesForNode","getArgumentNames","arg","val","getRawArgument","getArgumentType","importEdgeDeep","imported","nextNodes","maxX","getPreviousNodes","prev","getNextNodes","int","parseInt","isNaN","xMin","xMax","yMin","yMax","scaleA","scaleB","selectParameterName","saveCallback","module","exports","w1","h1","w2","h2","lineBox","xb","yb","wb","hb","boxPoint","lineLine","lineToPolygon","polygonPolygon","linePolygon","lineToLine","lineLineThickness","x3","y3","x4","y4","thickness1","thickness2","distanceSquared","xp","yp","tolerance","polygonPoint","points","j","s1_x","s1_y","s2_x","s2_y","s","t","thickness","angle","atan2","half","linePoint","p2x","p2y","p1x","p1y","points1","points2","minA","maxA","projected","minB","maxB","polygons","polygon","i1","i2"],"sourceRoot":""}
{"version":3,"file":"js/7868.bd5129ff.js","mappings":"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","sources":["webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?a520","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?8dc4"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"select-container\"},[(_vm.loaded)?[_c('MultiSelect',{key:_vm.type,ref:\"htmlElement\",attrs:{\"label\":\"label\",\"track-by\":\"id\",\"multiple\":_vm.multiple,\"options\":_vm.selectOptions,\"allowEmpty\":false,\"preselectFirst\":_vm.preselect,\"disabled\":!_vm.editable,\"deselectLabel\":_vm.deselectLabel,\"taggable\":_vm.taggable,\"tagPlaceholder\":_vm.tagPlaceholder},on:{\"tag\":_vm.addValue},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),(_vm.showDetails)?_c('button',{attrs:{\"type\":\"button\",\"title\":\"Details\"},on:{\"click\":function($event){return _vm.$emit('onDetails')}}},[_c('i',{staticClass:\"fas fa-info\"})]):_vm._e()]:_c('div',{staticClass:\"loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_vm._v(\" Loading options...\")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"select-container\">\n\t\t<template v-if=\"loaded\">\n\t\t\t<MultiSelect v-model=\"selected\" :key=\"type\" ref=\"htmlElement\" label=\"label\" track-by=\"id\" :multiple=\"multiple\" :options=\"selectOptions\" :allowEmpty=\"false\" :preselectFirst=\"preselect\" :disabled=\"!editable\" :deselectLabel=\"deselectLabel\" :taggable=\"taggable\" :tagPlaceholder=\"tagPlaceholder\" @tag=\"addValue\"></MultiSelect>\n\t\t\t<button v-if=\"showDetails\" type=\"button\" title=\"Details\" @click=\"$emit('onDetails')\"><i class=\"fas fa-info\"></i></button>\n\t\t</template>\n\t\t<div class=\"loading\" v-else><i class=\"fas fa-spinner fa-spin\"></i> Loading options...</div>\n\t</div>\n</template>\n\n<script>\nimport MultiSelect from 'vue-multiselect'\nimport Utils from '../../utils';\n\nexport default {\n\tname: 'SelectBox',\n\tcomponents: {\n\t\tMultiSelect\n\t},\n\tprops: {\n\t\tvalue: {},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: \"\"\n\t\t},\n\t\teditable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\toptions: {\n\t\t\ttype: [Array, Object]\n\t\t},\n\t\tschema: {\n\t\t\ttype: Object\n\t\t},\n\t\tcontext: {},\n\t\toptionFilter: {\n\t\t\ttype: Function,\n\t\t\tdefault: null\n\t\t}\n\t},\n\tcomputed: {\n\t\t...Utils.mapGetters(['collectionDefaults']),\n\t\tselectOptions() {\n\t\t\tlet state = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tlet collection = this.$store.state.collections.find(c => c.id == this.context);\n\t\t\t\t\tif (Utils.isObject(collection)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstate = collection.summaries['eo:bands'].map(band => band.name);\n\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\tif (state.length === 0 && Utils.isObject(collection['cube:dimensions'])) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlet bandDimension = Object.values(collection['cube:dimensions']).find(d => d.type === 'bands');\n\t\t\t\t\t\t\t\tif (bandDimension && Array.isArray(bandDimension.values)) {\n\t\t\t\t\t\t\t\t\tstate = bandDimension.values;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\tstate = this.$store.state.collections;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'job-id':\n\t\t\t\t\tstate = this.$store.state.jobs.jobs;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\tstate = this.$store.state.files.files;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tstate = this.$store.state.editor.epsgCodes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'input-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getInputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tlet t = require('./api');\n\t\t\t\t\tlet types = {};\n\t\t\t\t\tfor(let native of t.NATIVE_TYPES) {\n\t\t\t\t\t\ttypes[native] = {type: native}\n\t\t\t\t\t}\n\t\t\t\t\tstate = Object.assign(types, t.API_TYPES);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'output-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getOutputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tstate = this.$store.state.serviceTypes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\tstate = this.$store.state.connection.capabilities().listPlans();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\t\tstate = Object.keys(this.$store.state.udfRuntimes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tstate = this.context in this.$store.state.udfRuntimes ? Object.keys(this.$store.state.udfRuntimes[this.context].versions) : [];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (typeof this.optionFilter === 'function' && state && typeof state === 'object') {\n\t\t\t\tif (Utils.isObject(state)) {\n\t\t\t\t\tstate = Object.fromEntries(Object.entries(state).filter(([key, value]) => this.optionFilter(value, key)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstate = state.filter((value, key) => this.optionFilter(value, key));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet data = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\treturn state.map(c => this.e(c.id)).sort(this.sortByLabel);\n\t\t\t\tcase 'job-id':\n\t\t\t\t\treturn state.map(j => ({\n\t\t\t\t\t\tid: j.id,\n\t\t\t\t\t\tlabel: Utils.getResourceTitle(j)\n\t\t\t\t\t})).sort(this.sortByLabel);\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tfor(let type in state) {\n\t\t\t\t\t\tlet schema = state[type];\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: type,\n\t\t\t\t\t\t\tlabel: schema.title || Utils.prettifyString(type),\n\t\t\t\t\t\t\tvalue: schema\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\treturn state.map(f => this.e(f.path)).sort((a, b) => Utils.sortByPath(a.id, b.id));\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: Number.parseInt(key, 10),\n\t\t\t\t\t\t\tlabel: key + \": \" + state[key]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'input-format':\n\t\t\t\tcase 'output-format':\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tlet id = key.toUpperCase(); // uppercase mostly for services\n\t\t\t\t\t\t// show title if available...\n\t\t\t\t\t\tlet label = state[key].title;\n\t\t\t\t\t\t// otherwise upper-cased key...\n\t\t\t\t\t\tif (!label) {\n\t\t\t\t\t\t\tlabel = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// and if title is different from key, also show key\n\t\t\t\t\t\telse if (id !== label.toUpperCase()) {\n\t\t\t\t\t\t\tlabel = `${label} - ${id}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.push({id, label});\n\t\t\t\t\t}\n\t\t\t\t\treturn data.sort(this.sortByLabel);\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\treturn state.map(p => ({\n\t\t\t\t\t\tid: p.name,\n\t\t\t\t\t\tlabel: p.name + (p.paid ? ' (paid)' : ' (free)')\n\t\t\t\t\t}));\n\t\t\t\tcase 'year':\n\t\t\t\t\tlet thisYear = new Date().getFullYear();\n\t\t\t\t\tlet years = Array.from({length: 100}, (x,i) => this.e(String(thisYear - i)));\n\t\t\t\t\t// Add custom years to select box\n\t\t\t\t\tif (typeof this.value === 'string' && this.value.length > 0 && years.findIndex(y => y.id === this.value) === -1) {\n\t\t\t\t\t\tvar customYear = this.e(this.value);\n\t\t\t\t\t\tif (this.value > thisYear) {\n\t\t\t\t\t\t\tyears.unshift(customYear);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tyears.push(this.e(this.value));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn years;\n\t\t\t\tcase 'band-name':\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\treturn state.map(val => this.e(val));\n\t\t\t\tdefault:\n\t\t\t\t\tif (Utils.isObject(this.schema) && this.schema.isEnum()) {\n\t\t\t\t\t\treturn this.schema.getEnumChoices().map(val => this.e(val));\n\t\t\t\t\t}\n\t\t\t\t\telse if (Array.isArray(this.options)) {\n\t\t\t\t\t\treturn this.options.map(val => {\n\t\t\t\t\t\t\tif (Utils.isObject(val)) {\n\t\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn this.e(val)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowDetails() {\n\t\t\treturn (this.type === 'collection-id');\n\t\t},\n\t\tdeselectLabel() {\n\t\t\treturn this.multiple ? 'Press enter to remove' : '';\n\t\t},\n\t\ttagPlaceholder() {\n\t\t\treturn this.type === 'year' ? 'Press enter to select' : 'Press enter to create a tag';\n\t\t},\n\t\tmultiple() {\n\t\t\treturn (this.type === 'file-paths');\n\t\t},\n\t\ttaggable() {\n\t\t\treturn (this.type === 'year');\n\t\t},\n\t\tpreselect() {\n\t\t\tif (this.multiple) {\n\t\t\t\treturn (!Array.isArray(this.selected) || this.selected.length === 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn (this.selected === null);\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tselected: null,\n\t\t\tloaded: false\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.loadData();\n\t},\n\twatch: {\n\t\ttype() {\n\t\t\tthis.loadData();\n\t\t},\n\t\tselected(newValue) {\n\t\t\tlet value;\n\t\t\tif (newValue === null) {\n\t\t\t\tvalue = null;\n\t\t\t}\n\t\t\telse if (this.multiple) {\n\t\t\t\tif (!Array.isArray(newValue)) {\n\t\t\t\t\tnewValue = [newValue];\n\t\t\t\t}\n\t\t\t\tvalue = newValue.map(v => v.id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'epsg-code':\n\t\t\t\t\t\tvar num = Number.parseInt(newValue.id);\n\t\t\t\t\t\tvalue = Number.isNaN(num) ? null : num;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\t\tvalue = newValue.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tvalue = String(newValue.id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalue = newValue.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$emit('input', value);\n\t\t},\n\t\tcontext() {\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.preselectFirst();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.loadData();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\t...Utils.mapActions(['describeCollection']),\n\t\t...Utils.mapActions('editor', ['loadEpsgCodes']),\n\t\t// Convert a value to a option object for MultiSelect\n\t\te(val) {\n\t\t\treturn {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t},\n\t\tasync loadData() {\n\t\t\tthis.loaded = false;\n\t\t\tif (this.type === 'epsg-code') {\n\t\t\t\tawait this.loadEpsgCodes();\n\t\t\t}\n\t\t\telse if (this.type === 'band-name') {\n\t\t\t\tawait this.describeCollection(this.context);\n\t\t\t}\n\t\t\tthis.initSelection();\n\t\t\tthis.loaded = true;\n\t\t},\n\t\tasync preselectFirst() {\n\t\t\tawait this.$nextTick();\n\t\t\t// Preselect first element if nothing else is set.\n\t\t\tlet elem = this.$refs.htmlElement;\n\t\t\t// Code inspired from mounted() method in vue-multiselect's multiselectMixin.js\n\t\t\tif (elem.preselectFirst && Array.isArray(elem.filteredOptions) && elem.filteredOptions.length) {\n\t\t\t\telem.select(elem.filteredOptions[0]);\n\t\t\t}\n\t\t},\n\t\tinitSelection() {\n\t\t\tlet value = this.value;\n\t\t\tif (this.multiple && Array.isArray(value)) {\n\t\t\t\tthis.selected = this.selectOptions.filter(o => value.includes(o.id));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'input-format':\n\t\t\t\t\tcase 'output-format':\n\t\t\t\t\tcase 'service-type':\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tvalue = value.toUpperCase();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet selectedOption = this.selectOptions.find(o => o.id === value);\n\t\t\t\tif (selectedOption !== undefined) {\n\t\t\t\t\tthis.selected = selectedOption;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsortByLabel(a,b) {\n\t\t\treturn Utils.compareStringCaseInsensitive(a.label, b.label);\n\t\t},\n\t\taddValue(value) {\n\t\t\tthis.selected = this.e(value);\n\t\t}\n\t}\n}\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style lang=\"scss\">\n@import '../../../theme.scss';\n\n.select-container {\n\tdisplay: flex;\n\tflex-grow: 1;\n\n\t> div {\n\t\tflex-grow: 1;\n\t}\n\n\t> button {\n\t\tmargin-left: 10px;\n\t}\n\n\t.multiselect__option--selected.multiselect__option--highlight {\n\t\tbackground: $mainColor;\n\t}\n\t.multiselect__option--highlight, .multiselect__option--highlight:after {\n\t\tbackground: $mainColor;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SelectBox.vue?vue&type=template&id=6ec76e35&\"\nimport script from \"./SelectBox.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectBox.vue?vue&type=script&lang=js&\"\nimport style0 from \"vue-multiselect/dist/vue-multiselect.min.css?vue&type=style&index=0&prod&lang=css&\"\nimport style1 from \"./SelectBox.vue?vue&type=style&index=1&id=6ec76e35&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","loaded","key","type","ref","attrs","multiple","selectOptions","preselect","editable","deselectLabel","taggable","tagPlaceholder","on","addValue","model","value","selected","callback","$$v","expression","showDetails","$event","$emit","_e","_v","staticRenderFns","name","components","MultiSelect","props","String","default","Boolean","options","Array","Object","schema","context","optionFilter","Function","computed","Utils","mapGetters","state","collection","$store","collections","find","c","id","isObject","summaries","map","band","error","length","bandDimension","values","d","isArray","jobs","files","editor","epsgCodes","fileFormats","getInputTypes","t","require","types","native","NATIVE_TYPES","assign","API_TYPES","getOutputTypes","serviceTypes","connection","capabilities","listPlans","keys","udfRuntimes","versions","fromEntries","entries","filter","data","e","sort","sortByLabel","j","label","getResourceTitle","push","title","prettifyString","f","path","a","b","sortByPath","Number","parseInt","toUpperCase","p","paid","thisYear","Date","getFullYear","years","from","x","i","findIndex","y","customYear","unshift","val","isEnum","getEnumChoices","created","loadData","watch","newValue","v","num","isNaN","preselectFirst","methods","mapActions","loadEpsgCodes","describeCollection","initSelection","$nextTick","elem","$refs","htmlElement","filteredOptions","select","o","includes","selectedOption","undefined","compareStringCaseInsensitive","component"],"sourceRoot":""}
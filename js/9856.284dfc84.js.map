{"version":3,"file":"js/9856.284dfc84.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/Description.vue?c045","webpack://@openeo/web-editor/./node_modules/commonmark/lib/node.js","webpack://@openeo/web-editor/./node_modules/commonmark/lib/from-code-point.js","webpack://@openeo/web-editor/./node_modules/commonmark/lib/common.js","webpack://@openeo/web-editor/./node_modules/commonmark/lib/inlines.js","webpack://@openeo/web-editor/./node_modules/commonmark/lib/blocks.js","webpack://@openeo/web-editor/./node_modules/commonmark/lib/render/renderer.js","webpack://@openeo/web-editor/./node_modules/commonmark/lib/render/html.js","webpack://@openeo/web-editor/./node_modules/commonmark/lib/render/xml.js","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/Description.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/Description.vue?b0e5","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/Description.vue","webpack://@openeo/web-editor/./node_modules/entities/lib/decode.js","webpack://@openeo/web-editor/./node_modules/entities/lib/decode_codepoint.js","webpack://@openeo/web-editor/./node_modules/entities/lib/encode.js","webpack://@openeo/web-editor/./node_modules/entities/lib/index.js","webpack://@openeo/web-editor/./node_modules/mdurl/encode.js","webpack://@openeo/web-editor/./node_modules/string.prototype.repeat/repeat.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"vue-component styled-description\",class:{compact: _vm.compact},domProps:{\"innerHTML\":_vm._s(_vm.markup(_vm.description))}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\"use strict\";\n\nfunction isContainer(node) {\n    switch (node._type) {\n        case \"document\":\n        case \"block_quote\":\n        case \"list\":\n        case \"item\":\n        case \"paragraph\":\n        case \"heading\":\n        case \"emph\":\n        case \"strong\":\n        case \"link\":\n        case \"image\":\n        case \"custom_inline\":\n        case \"custom_block\":\n            return true;\n        default:\n            return false;\n    }\n}\n\nvar resumeAt = function(node, entering) {\n    this.current = node;\n    this.entering = entering === true;\n};\n\nvar next = function() {\n    var cur = this.current;\n    var entering = this.entering;\n\n    if (cur === null) {\n        return null;\n    }\n\n    var container = isContainer(cur);\n\n    if (entering && container) {\n        if (cur._firstChild) {\n            this.current = cur._firstChild;\n            this.entering = true;\n        } else {\n            // stay on node but exit\n            this.entering = false;\n        }\n    } else if (cur === this.root) {\n        this.current = null;\n    } else if (cur._next === null) {\n        this.current = cur._parent;\n        this.entering = false;\n    } else {\n        this.current = cur._next;\n        this.entering = true;\n    }\n\n    return { entering: entering, node: cur };\n};\n\nvar NodeWalker = function(root) {\n    return {\n        current: root,\n        root: root,\n        entering: true,\n        next: next,\n        resumeAt: resumeAt\n    };\n};\n\nvar Node = function(nodeType, sourcepos) {\n    this._type = nodeType;\n    this._parent = null;\n    this._firstChild = null;\n    this._lastChild = null;\n    this._prev = null;\n    this._next = null;\n    this._sourcepos = sourcepos;\n    this._lastLineBlank = false;\n    this._lastLineChecked = false;\n    this._open = true;\n    this._string_content = null;\n    this._literal = null;\n    this._listData = {};\n    this._info = null;\n    this._destination = null;\n    this._title = null;\n    this._isFenced = false;\n    this._fenceChar = null;\n    this._fenceLength = 0;\n    this._fenceOffset = null;\n    this._level = null;\n    this._onEnter = null;\n    this._onExit = null;\n};\n\nvar proto = Node.prototype;\n\nObject.defineProperty(proto, \"isContainer\", {\n    get: function() {\n        return isContainer(this);\n    }\n});\n\nObject.defineProperty(proto, \"type\", {\n    get: function() {\n        return this._type;\n    }\n});\n\nObject.defineProperty(proto, \"firstChild\", {\n    get: function() {\n        return this._firstChild;\n    }\n});\n\nObject.defineProperty(proto, \"lastChild\", {\n    get: function() {\n        return this._lastChild;\n    }\n});\n\nObject.defineProperty(proto, \"next\", {\n    get: function() {\n        return this._next;\n    }\n});\n\nObject.defineProperty(proto, \"prev\", {\n    get: function() {\n        return this._prev;\n    }\n});\n\nObject.defineProperty(proto, \"parent\", {\n    get: function() {\n        return this._parent;\n    }\n});\n\nObject.defineProperty(proto, \"sourcepos\", {\n    get: function() {\n        return this._sourcepos;\n    }\n});\n\nObject.defineProperty(proto, \"literal\", {\n    get: function() {\n        return this._literal;\n    },\n    set: function(s) {\n        this._literal = s;\n    }\n});\n\nObject.defineProperty(proto, \"destination\", {\n    get: function() {\n        return this._destination;\n    },\n    set: function(s) {\n        this._destination = s;\n    }\n});\n\nObject.defineProperty(proto, \"title\", {\n    get: function() {\n        return this._title;\n    },\n    set: function(s) {\n        this._title = s;\n    }\n});\n\nObject.defineProperty(proto, \"info\", {\n    get: function() {\n        return this._info;\n    },\n    set: function(s) {\n        this._info = s;\n    }\n});\n\nObject.defineProperty(proto, \"level\", {\n    get: function() {\n        return this._level;\n    },\n    set: function(s) {\n        this._level = s;\n    }\n});\n\nObject.defineProperty(proto, \"listType\", {\n    get: function() {\n        return this._listData.type;\n    },\n    set: function(t) {\n        this._listData.type = t;\n    }\n});\n\nObject.defineProperty(proto, \"listTight\", {\n    get: function() {\n        return this._listData.tight;\n    },\n    set: function(t) {\n        this._listData.tight = t;\n    }\n});\n\nObject.defineProperty(proto, \"listStart\", {\n    get: function() {\n        return this._listData.start;\n    },\n    set: function(n) {\n        this._listData.start = n;\n    }\n});\n\nObject.defineProperty(proto, \"listDelimiter\", {\n    get: function() {\n        return this._listData.delimiter;\n    },\n    set: function(delim) {\n        this._listData.delimiter = delim;\n    }\n});\n\nObject.defineProperty(proto, \"onEnter\", {\n    get: function() {\n        return this._onEnter;\n    },\n    set: function(s) {\n        this._onEnter = s;\n    }\n});\n\nObject.defineProperty(proto, \"onExit\", {\n    get: function() {\n        return this._onExit;\n    },\n    set: function(s) {\n        this._onExit = s;\n    }\n});\n\nNode.prototype.appendChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._lastChild) {\n        this._lastChild._next = child;\n        child._prev = this._lastChild;\n        this._lastChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.prependChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._firstChild) {\n        this._firstChild._prev = child;\n        child._next = this._firstChild;\n        this._firstChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.unlink = function() {\n    if (this._prev) {\n        this._prev._next = this._next;\n    } else if (this._parent) {\n        this._parent._firstChild = this._next;\n    }\n    if (this._next) {\n        this._next._prev = this._prev;\n    } else if (this._parent) {\n        this._parent._lastChild = this._prev;\n    }\n    this._parent = null;\n    this._next = null;\n    this._prev = null;\n};\n\nNode.prototype.insertAfter = function(sibling) {\n    sibling.unlink();\n    sibling._next = this._next;\n    if (sibling._next) {\n        sibling._next._prev = sibling;\n    }\n    sibling._prev = this;\n    this._next = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._next) {\n        sibling._parent._lastChild = sibling;\n    }\n};\n\nNode.prototype.insertBefore = function(sibling) {\n    sibling.unlink();\n    sibling._prev = this._prev;\n    if (sibling._prev) {\n        sibling._prev._next = sibling;\n    }\n    sibling._next = this;\n    this._prev = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._prev) {\n        sibling._parent._firstChild = sibling;\n    }\n};\n\nNode.prototype.walker = function() {\n    var walker = new NodeWalker(this);\n    return walker;\n};\n\nexport default Node;\n\n/* Example of use of walker:\n\n var walker = w.walker();\n var event;\n\n while (event = walker.next()) {\n console.log(event.entering, event.node.type);\n }\n\n */\n","\"use strict\";\n\n// derived from https://github.com/mathiasbynens/String.fromCodePoint\n/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\n\nvar _fromCodePoint;\n\nexport default function fromCodePoint(_) {\n    return _fromCodePoint(_);\n}\n\nif (String.fromCodePoint) {\n    _fromCodePoint = function(_) {\n        try {\n            return String.fromCodePoint(_);\n        } catch (e) {\n            if (e instanceof RangeError) {\n                return String.fromCharCode(0xfffd);\n            }\n            throw e;\n        }\n    };\n} else {\n    var stringFromCharCode = String.fromCharCode;\n    var floor = Math.floor;\n    _fromCodePoint = function() {\n        var MAX_SIZE = 0x4000;\n        var codeUnits = [];\n        var highSurrogate;\n        var lowSurrogate;\n        var index = -1;\n        var length = arguments.length;\n        if (!length) {\n            return \"\";\n        }\n        var result = \"\";\n        while (++index < length) {\n            var codePoint = Number(arguments[index]);\n            if (\n                !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                codePoint < 0 || // not a valid Unicode code point\n                codePoint > 0x10ffff || // not a valid Unicode code point\n                floor(codePoint) !== codePoint // not an integer\n            ) {\n                return String.fromCharCode(0xfffd);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            } else {\n                // Astral code point; split in surrogate halves\n                // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                highSurrogate = (codePoint >> 10) + 0xd800;\n                lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += stringFromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n}\n","\"use strict\";\n\nimport encode from \"mdurl/encode.js\";\nimport { decodeHTML } from \"entities\";\n\nvar C_BACKSLASH = 92;\n\nvar ENTITY = \"&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});\";\n\nvar TAGNAME = \"[A-Za-z][A-Za-z0-9-]*\";\nvar ATTRIBUTENAME = \"[a-zA-Z_:][a-zA-Z0-9:._-]*\";\nvar UNQUOTEDVALUE = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\nvar SINGLEQUOTEDVALUE = \"'[^']*'\";\nvar DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\nvar ATTRIBUTEVALUE =\n    \"(?:\" +\n    UNQUOTEDVALUE +\n    \"|\" +\n    SINGLEQUOTEDVALUE +\n    \"|\" +\n    DOUBLEQUOTEDVALUE +\n    \")\";\nvar ATTRIBUTEVALUESPEC = \"(?:\" + \"\\\\s*=\" + \"\\\\s*\" + ATTRIBUTEVALUE + \")\";\nvar ATTRIBUTE = \"(?:\" + \"\\\\s+\" + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\nvar OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\" + \"\\\\s*/?>\";\nvar CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\nvar HTMLCOMMENT = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\nvar PROCESSINGINSTRUCTION = \"[<][?][\\\\s\\\\S]*?[?][>]\";\nvar DECLARATION = \"<![A-Z]+\" + \"\\\\s+[^>]*>\";\nvar CDATA = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\nvar HTMLTAG =\n    \"(?:\" +\n    OPENTAG +\n    \"|\" +\n    CLOSETAG +\n    \"|\" +\n    HTMLCOMMENT +\n    \"|\" +\n    PROCESSINGINSTRUCTION +\n    \"|\" +\n    DECLARATION +\n    \"|\" +\n    CDATA +\n    \")\";\nvar reHtmlTag = new RegExp(\"^\" + HTMLTAG);\n\nvar reBackslashOrAmp = /[\\\\&]/;\n\nvar ESCAPABLE = \"[!\\\"#$%&'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]\";\n\nvar reEntityOrEscapedChar = new RegExp(\"\\\\\\\\\" + ESCAPABLE + \"|\" + ENTITY, \"gi\");\n\nvar XMLSPECIAL = '[&<>\"]';\n\nvar reXmlSpecial = new RegExp(XMLSPECIAL, \"g\");\n\nvar unescapeChar = function(s) {\n    if (s.charCodeAt(0) === C_BACKSLASH) {\n        return s.charAt(1);\n    } else {\n        return decodeHTML(s);\n    }\n};\n\n// Replace entities and backslash escapes with literal characters.\nvar unescapeString = function(s) {\n    if (reBackslashOrAmp.test(s)) {\n        return s.replace(reEntityOrEscapedChar, unescapeChar);\n    } else {\n        return s;\n    }\n};\n\nvar normalizeURI = function(uri) {\n    try {\n        return encode(uri);\n    } catch (err) {\n        return uri;\n    }\n};\n\nvar replaceUnsafeChar = function(s) {\n    switch (s) {\n        case \"&\":\n            return \"&amp;\";\n        case \"<\":\n            return \"&lt;\";\n        case \">\":\n            return \"&gt;\";\n        case '\"':\n            return \"&quot;\";\n        default:\n            return s;\n    }\n};\n\nvar escapeXml = function(s) {\n    if (reXmlSpecial.test(s)) {\n        return s.replace(reXmlSpecial, replaceUnsafeChar);\n    } else {\n        return s;\n    }\n};\n\nexport {\n    unescapeString,\n    normalizeURI,\n    escapeXml,\n    reHtmlTag,\n    OPENTAG,\n    CLOSETAG,\n    ENTITY,\n    ESCAPABLE\n};\n","\"use strict\";\n\nimport Node from \"./node.js\";\nimport * as common from \"./common.js\";\nimport fromCodePoint from \"./from-code-point.js\";\nimport { decodeHTML } from \"entities\";\nimport \"string.prototype.repeat\"; // Polyfill for String.prototype.repeat\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString;\n\n// Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\n\n// Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = \"\\\\\\\\\" + ESCAPABLE;\n\nvar ENTITY = common.ENTITY;\nvar reHtmlTag = common.reHtmlTag;\n\nvar rePunctuation = new RegExp(\n    /[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n);\n\nvar reLinkTitle = new RegExp(\n    '^(?:\"(' +\n        ESCAPED_CHAR +\n        '|[^\"\\\\x00])*\"' +\n        \"|\" +\n        \"'(\" +\n        ESCAPED_CHAR +\n        \"|[^'\\\\x00])*'\" +\n        \"|\" +\n        \"\\\\((\" +\n        ESCAPED_CHAR +\n        \"|[^()\\\\x00])*\\\\))\"\n);\n\nvar reLinkDestinationBraces = /^(?:<(?:[^<>\\n\\\\\\x00]|\\\\.)*>)/;\n\nvar reEscapable = new RegExp(\"^\" + ESCAPABLE);\n\nvar reEntityHere = new RegExp(\"^\" + ENTITY, \"i\");\n\nvar reTicks = /`+/;\n\nvar reTicksHere = /^`+/;\n\nvar reEllipses = /\\.\\.\\./g;\n\nvar reDash = /--+/g;\n\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\n\nvar reSpnl = /^ *(?:\\n *)?/;\n\nvar reWhitespaceChar = /^[ \\t\\n\\x0b\\x0c\\x0d]/;\n\nvar reUnicodeWhitespaceChar = /^\\s/;\n\nvar reFinalSpace = / *$/;\n\nvar reInitialSpace = /^ */;\n\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\nvar reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\.){0,1000}\\]/;\n\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function(s) {\n    var node = new Node(\"text\");\n    node._literal = s;\n    return node;\n};\n\n// normalize a reference in reference link (remove []s, trim,\n// collapse internal space, unicode case fold.\n// See commonmark/commonmark.js#168.\nvar normalizeReference = function(string) {\n    return string\n        .slice(1, string.length - 1)\n        .trim()\n        .replace(/[ \\t\\r\\n]+/, \" \")\n        .toLowerCase()\n        .toUpperCase();\n};\n\n// INLINE PARSER\n\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\nvar match = function(re) {\n    var m = re.exec(this.subject.slice(this.pos));\n    if (m === null) {\n        return null;\n    } else {\n        this.pos += m.index + m[0].length;\n        return m[0];\n    }\n};\n\n// Returns the code for the character at the current subject position, or -1\n// there are no more characters.\nvar peek = function() {\n    if (this.pos < this.subject.length) {\n        return this.subject.charCodeAt(this.pos);\n    } else {\n        return -1;\n    }\n};\n\n// Parse zero or more space characters, including at most one newline\nvar spnl = function() {\n    this.match(reSpnl);\n    return true;\n};\n\n// All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\nvar parseBackticks = function(block) {\n    var ticks = this.match(reTicksHere);\n    if (ticks === null) {\n        return false;\n    }\n    var afterOpenTicks = this.pos;\n    var matched;\n    var node;\n    var contents;\n    while ((matched = this.match(reTicks)) !== null) {\n        if (matched === ticks) {\n            node = new Node(\"code\");\n            contents = this.subject\n                .slice(afterOpenTicks, this.pos - ticks.length)\n                .replace(/\\n/gm, \" \");\n            if (\n                contents.length > 0 &&\n                contents.match(/[^ ]/) !== null &&\n                contents[0] == \" \" &&\n                contents[contents.length - 1] == \" \"\n            ) {\n                node._literal = contents.slice(1, contents.length - 1);\n            } else {\n                node._literal = contents;\n            }\n            block.appendChild(node);\n            return true;\n        }\n    }\n    // If we got here, we didn't match a closing backtick sequence.\n    this.pos = afterOpenTicks;\n    block.appendChild(text(ticks));\n    return true;\n};\n\n// Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\nvar parseBackslash = function(block) {\n    var subj = this.subject;\n    var node;\n    this.pos += 1;\n    if (this.peek() === C_NEWLINE) {\n        this.pos += 1;\n        node = new Node(\"linebreak\");\n        block.appendChild(node);\n    } else if (reEscapable.test(subj.charAt(this.pos))) {\n        block.appendChild(text(subj.charAt(this.pos)));\n        this.pos += 1;\n    } else {\n        block.appendChild(text(\"\\\\\"));\n    }\n    return true;\n};\n\n// Attempt to parse an autolink (URL or email in pointy brackets).\nvar parseAutolink = function(block) {\n    var m;\n    var dest;\n    var node;\n    if ((m = this.match(reEmailAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node(\"link\");\n        node._destination = normalizeURI(\"mailto:\" + dest);\n        node._title = \"\";\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else if ((m = this.match(reAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node(\"link\");\n        node._destination = normalizeURI(dest);\n        node._title = \"\";\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Attempt to parse a raw HTML tag.\nvar parseHtmlTag = function(block) {\n    var m = this.match(reHtmlTag);\n    if (m === null) {\n        return false;\n    } else {\n        var node = new Node(\"html_inline\");\n        node._literal = m;\n        block.appendChild(node);\n        return true;\n    }\n};\n\n// Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\nvar scanDelims = function(cc) {\n    var numdelims = 0;\n    var char_before, char_after, cc_after;\n    var startpos = this.pos;\n    var left_flanking, right_flanking, can_open, can_close;\n    var after_is_whitespace,\n        after_is_punctuation,\n        before_is_whitespace,\n        before_is_punctuation;\n\n    if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        numdelims++;\n        this.pos++;\n    } else {\n        while (this.peek() === cc) {\n            numdelims++;\n            this.pos++;\n        }\n    }\n\n    if (numdelims === 0) {\n        return null;\n    }\n\n    char_before = startpos === 0 ? \"\\n\" : this.subject.charAt(startpos - 1);\n\n    cc_after = this.peek();\n    if (cc_after === -1) {\n        char_after = \"\\n\";\n    } else {\n        char_after = fromCodePoint(cc_after);\n    }\n\n    after_is_whitespace = reUnicodeWhitespaceChar.test(char_after);\n    after_is_punctuation = rePunctuation.test(char_after);\n    before_is_whitespace = reUnicodeWhitespaceChar.test(char_before);\n    before_is_punctuation = rePunctuation.test(char_before);\n\n    left_flanking =\n        !after_is_whitespace &&\n        (!after_is_punctuation ||\n            before_is_whitespace ||\n            before_is_punctuation);\n    right_flanking =\n        !before_is_whitespace &&\n        (!before_is_punctuation || after_is_whitespace || after_is_punctuation);\n    if (cc === C_UNDERSCORE) {\n        can_open = left_flanking && (!right_flanking || before_is_punctuation);\n        can_close = right_flanking && (!left_flanking || after_is_punctuation);\n    } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        can_open = left_flanking && !right_flanking;\n        can_close = right_flanking;\n    } else {\n        can_open = left_flanking;\n        can_close = right_flanking;\n    }\n    this.pos = startpos;\n    return { numdelims: numdelims, can_open: can_open, can_close: can_close };\n};\n\n// Handle a delimiter marker for emphasis or a quote.\nvar handleDelim = function(cc, block) {\n    var res = this.scanDelims(cc);\n    if (!res) {\n        return false;\n    }\n    var numdelims = res.numdelims;\n    var startpos = this.pos;\n    var contents;\n\n    this.pos += numdelims;\n    if (cc === C_SINGLEQUOTE) {\n        contents = \"\\u2019\";\n    } else if (cc === C_DOUBLEQUOTE) {\n        contents = \"\\u201C\";\n    } else {\n        contents = this.subject.slice(startpos, this.pos);\n    }\n    var node = text(contents);\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    if (\n        (res.can_open || res.can_close) &&\n        (this.options.smart || (cc !== C_SINGLEQUOTE && cc !== C_DOUBLEQUOTE))\n    ) {\n        this.delimiters = {\n            cc: cc,\n            numdelims: numdelims,\n            origdelims: numdelims,\n            node: node,\n            previous: this.delimiters,\n            next: null,\n            can_open: res.can_open,\n            can_close: res.can_close\n        };\n        if (this.delimiters.previous !== null) {\n            this.delimiters.previous.next = this.delimiters;\n        }\n    }\n\n    return true;\n};\n\nvar removeDelimiter = function(delim) {\n    if (delim.previous !== null) {\n        delim.previous.next = delim.next;\n    }\n    if (delim.next === null) {\n        // top of stack\n        this.delimiters = delim.previous;\n    } else {\n        delim.next.previous = delim.previous;\n    }\n};\n\nvar removeDelimitersBetween = function(bottom, top) {\n    if (bottom.next !== top) {\n        bottom.next = top;\n        top.previous = bottom;\n    }\n};\n\nvar processEmphasis = function(stack_bottom) {\n    var opener, closer, old_closer;\n    var opener_inl, closer_inl;\n    var tempstack;\n    var use_delims;\n    var tmp, next;\n    var opener_found;\n    var openers_bottom = [[], [], []];\n    var odd_match = false;\n\n    for (var i = 0; i < 3; i++) {\n        openers_bottom[i][C_UNDERSCORE] = stack_bottom;\n        openers_bottom[i][C_ASTERISK] = stack_bottom;\n        openers_bottom[i][C_SINGLEQUOTE] = stack_bottom;\n        openers_bottom[i][C_DOUBLEQUOTE] = stack_bottom;\n    }\n    // find first closer above stack_bottom:\n    closer = this.delimiters;\n    while (closer !== null && closer.previous !== stack_bottom) {\n        closer = closer.previous;\n    }\n    // move forward, looking for closers, and handling each\n    while (closer !== null) {\n        var closercc = closer.cc;\n        if (!closer.can_close) {\n            closer = closer.next;\n        } else {\n            // found emphasis closer. now look back for first matching opener:\n            opener = closer.previous;\n            opener_found = false;\n            while (\n                opener !== null &&\n                opener !== stack_bottom &&\n                opener !== openers_bottom[closer.origdelims % 3][closercc]\n            ) {\n                odd_match =\n                    (closer.can_open || opener.can_close) &&\n                    closer.origdelims % 3 !== 0 &&\n                    (opener.origdelims + closer.origdelims) % 3 === 0;\n                if (opener.cc === closer.cc && opener.can_open && !odd_match) {\n                    opener_found = true;\n                    break;\n                }\n                opener = opener.previous;\n            }\n            old_closer = closer;\n\n            if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                if (!opener_found) {\n                    closer = closer.next;\n                } else {\n                    // calculate actual number of delimiters used from closer\n                    use_delims =\n                        closer.numdelims >= 2 && opener.numdelims >= 2 ? 2 : 1;\n\n                    opener_inl = opener.node;\n                    closer_inl = closer.node;\n\n                    // remove used delimiters from stack elts and inlines\n                    opener.numdelims -= use_delims;\n                    closer.numdelims -= use_delims;\n                    opener_inl._literal = opener_inl._literal.slice(\n                        0,\n                        opener_inl._literal.length - use_delims\n                    );\n                    closer_inl._literal = closer_inl._literal.slice(\n                        0,\n                        closer_inl._literal.length - use_delims\n                    );\n\n                    // build contents for new emph element\n                    var emph = new Node(use_delims === 1 ? \"emph\" : \"strong\");\n\n                    tmp = opener_inl._next;\n                    while (tmp && tmp !== closer_inl) {\n                        next = tmp._next;\n                        tmp.unlink();\n                        emph.appendChild(tmp);\n                        tmp = next;\n                    }\n\n                    opener_inl.insertAfter(emph);\n\n                    // remove elts between opener and closer in delimiters stack\n                    removeDelimitersBetween(opener, closer);\n\n                    // if opener has 0 delims, remove it and the inline\n                    if (opener.numdelims === 0) {\n                        opener_inl.unlink();\n                        this.removeDelimiter(opener);\n                    }\n\n                    if (closer.numdelims === 0) {\n                        closer_inl.unlink();\n                        tempstack = closer.next;\n                        this.removeDelimiter(closer);\n                        closer = tempstack;\n                    }\n                }\n            } else if (closercc === C_SINGLEQUOTE) {\n                closer.node._literal = \"\\u2019\";\n                if (opener_found) {\n                    opener.node._literal = \"\\u2018\";\n                }\n                closer = closer.next;\n            } else if (closercc === C_DOUBLEQUOTE) {\n                closer.node._literal = \"\\u201D\";\n                if (opener_found) {\n                    opener.node.literal = \"\\u201C\";\n                }\n                closer = closer.next;\n            }\n            if (!opener_found) {\n                // Set lower bound for future searches for openers:\n                openers_bottom[old_closer.origdelims % 3][closercc] =\n                    old_closer.previous;\n                if (!old_closer.can_open) {\n                    // We can remove a closer that can't be an opener,\n                    // once we've seen there's no matching opener:\n                    this.removeDelimiter(old_closer);\n                }\n            }\n        }\n    }\n\n    // remove all delimiters\n    while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n        this.removeDelimiter(this.delimiters);\n    }\n};\n\n// Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\nvar parseLinkTitle = function() {\n    var title = this.match(reLinkTitle);\n    if (title === null) {\n        return null;\n    } else {\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    }\n};\n\n// Attempt to parse link destination, returning the string or\n// null if no match.\nvar parseLinkDestination = function() {\n    var res = this.match(reLinkDestinationBraces);\n    if (res === null) {\n        if (this.peek() === C_LESSTHAN) {\n            return null;\n        }\n        // TODO handrolled parser; res should be null or the string\n        var savepos = this.pos;\n        var openparens = 0;\n        var c;\n        while ((c = this.peek()) !== -1) {\n            if (\n                c === C_BACKSLASH &&\n                reEscapable.test(this.subject.charAt(this.pos + 1))\n            ) {\n                this.pos += 1;\n                if (this.peek() !== -1) {\n                    this.pos += 1;\n                }\n            } else if (c === C_OPEN_PAREN) {\n                this.pos += 1;\n                openparens += 1;\n            } else if (c === C_CLOSE_PAREN) {\n                if (openparens < 1) {\n                    break;\n                } else {\n                    this.pos += 1;\n                    openparens -= 1;\n                }\n            } else if (reWhitespaceChar.exec(fromCodePoint(c)) !== null) {\n                break;\n            } else {\n                this.pos += 1;\n            }\n        }\n        if (this.pos === savepos && c !== C_CLOSE_PAREN) {\n            return null;\n        }\n        if (openparens !== 0) {\n            return null;\n        }\n        res = this.subject.substr(savepos, this.pos - savepos);\n        return normalizeURI(unescapeString(res));\n    } else {\n        // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    }\n};\n\n// Attempt to parse a link label, returning number of characters parsed.\nvar parseLinkLabel = function() {\n    var m = this.match(reLinkLabel);\n    if (m === null || m.length > 1001) {\n        return 0;\n    } else {\n        return m.length;\n    }\n};\n\n// Add open bracket to delimiter stack and add a text node to block's children.\nvar parseOpenBracket = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n\n    var node = text(\"[\");\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.addBracket(node, startpos, false);\n    return true;\n};\n\n// IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\nvar parseBang = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n    if (this.peek() === C_OPEN_BRACKET) {\n        this.pos += 1;\n\n        var node = text(\"![\");\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.addBracket(node, startpos + 1, true);\n    } else {\n        block.appendChild(text(\"!\"));\n    }\n    return true;\n};\n\n// Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\nvar parseCloseBracket = function(block) {\n    var startpos;\n    var is_image;\n    var dest;\n    var title;\n    var matched = false;\n    var reflabel;\n    var opener;\n\n    this.pos += 1;\n    startpos = this.pos;\n\n    // get last [ or ![\n    opener = this.brackets;\n\n    if (opener === null) {\n        // no matched opener, just return a literal\n        block.appendChild(text(\"]\"));\n        return true;\n    }\n\n    if (!opener.active) {\n        // no matched opener, just return a literal\n        block.appendChild(text(\"]\"));\n        // take opener off brackets stack\n        this.removeBracket();\n        return true;\n    }\n\n    // If we got here, open is a potential opener\n    is_image = opener.image;\n\n    // Check to see if we have a link/image\n\n    var savepos = this.pos;\n\n    // Inline link?\n    if (this.peek() === C_OPEN_PAREN) {\n        this.pos++;\n        if (\n            this.spnl() &&\n            (dest = this.parseLinkDestination()) !== null &&\n            this.spnl() &&\n            // make sure there's a space before the title:\n            ((reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n                (title = this.parseLinkTitle())) ||\n                true) &&\n            this.spnl() &&\n            this.peek() === C_CLOSE_PAREN\n        ) {\n            this.pos += 1;\n            matched = true;\n        } else {\n            this.pos = savepos;\n        }\n    }\n\n    if (!matched) {\n        // Next, see if there's a link label\n        var beforelabel = this.pos;\n        var n = this.parseLinkLabel();\n        if (n > 2) {\n            reflabel = this.subject.slice(beforelabel, beforelabel + n);\n        } else if (!opener.bracketAfter) {\n            // Empty or missing second label means to use the first label as the reference.\n            // The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\n            reflabel = this.subject.slice(opener.index, startpos);\n        }\n        if (n === 0) {\n            // If shortcut reference link, rewind before spaces we skipped.\n            this.pos = savepos;\n        }\n\n        if (reflabel) {\n            // lookup rawlabel in refmap\n            var link = this.refmap[normalizeReference(reflabel)];\n            if (link) {\n                dest = link.destination;\n                title = link.title;\n                matched = true;\n            }\n        }\n    }\n\n    if (matched) {\n        var node = new Node(is_image ? \"image\" : \"link\");\n        node._destination = dest;\n        node._title = title || \"\";\n\n        var tmp, next;\n        tmp = opener.node._next;\n        while (tmp) {\n            next = tmp._next;\n            tmp.unlink();\n            node.appendChild(tmp);\n            tmp = next;\n        }\n        block.appendChild(node);\n        this.processEmphasis(opener.previousDelimiter);\n        this.removeBracket();\n        opener.node.unlink();\n\n        // We remove this bracket and processEmphasis will remove later delimiters.\n        // Now, for a link, we also deactivate earlier link openers.\n        // (no links in links)\n        if (!is_image) {\n            opener = this.brackets;\n            while (opener !== null) {\n                if (!opener.image) {\n                    opener.active = false; // deactivate this opener\n                }\n                opener = opener.previous;\n            }\n        }\n\n        return true;\n    } else {\n        // no match\n\n        this.removeBracket(); // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text(\"]\"));\n        return true;\n    }\n};\n\nvar addBracket = function(node, index, image) {\n    if (this.brackets !== null) {\n        this.brackets.bracketAfter = true;\n    }\n    this.brackets = {\n        node: node,\n        previous: this.brackets,\n        previousDelimiter: this.delimiters,\n        index: index,\n        image: image,\n        active: true\n    };\n};\n\nvar removeBracket = function() {\n    this.brackets = this.brackets.previous;\n};\n\n// Attempt to parse an entity.\nvar parseEntity = function(block) {\n    var m;\n    if ((m = this.match(reEntityHere))) {\n        block.appendChild(text(decodeHTML(m)));\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\nvar parseString = function(block) {\n    var m;\n    if ((m = this.match(reMain))) {\n        if (this.options.smart) {\n            block.appendChild(\n                text(\n                    m\n                        .replace(reEllipses, \"\\u2026\")\n                        .replace(reDash, function(chars) {\n                            var enCount = 0;\n                            var emCount = 0;\n                            if (chars.length % 3 === 0) {\n                                // If divisible by 3, use all em dashes\n                                emCount = chars.length / 3;\n                            } else if (chars.length % 2 === 0) {\n                                // If divisible by 2, use all en dashes\n                                enCount = chars.length / 2;\n                            } else if (chars.length % 3 === 2) {\n                                // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                                enCount = 1;\n                                emCount = (chars.length - 2) / 3;\n                            } else {\n                                // Use en dashes for last 4 hyphens; em dashes for rest\n                                enCount = 2;\n                                emCount = (chars.length - 4) / 3;\n                            }\n                            return (\n                                \"\\u2014\".repeat(emCount) +\n                                \"\\u2013\".repeat(enCount)\n                            );\n                        })\n                )\n            );\n        } else {\n            block.appendChild(text(m));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\nvar parseNewline = function(block) {\n    this.pos += 1; // assume we're at a \\n\n    // check previous node for trailing spaces\n    var lastc = block._lastChild;\n    if (\n        lastc &&\n        lastc.type === \"text\" &&\n        lastc._literal[lastc._literal.length - 1] === \" \"\n    ) {\n        var hardbreak = lastc._literal[lastc._literal.length - 2] === \" \";\n        lastc._literal = lastc._literal.replace(reFinalSpace, \"\");\n        block.appendChild(new Node(hardbreak ? \"linebreak\" : \"softbreak\"));\n    } else {\n        block.appendChild(new Node(\"softbreak\"));\n    }\n    this.match(reInitialSpace); // gobble leading spaces in next line\n    return true;\n};\n\n// Attempt to parse a link reference, modifying refmap.\nvar parseReference = function(s, refmap) {\n    this.subject = s;\n    this.pos = 0;\n    var rawlabel;\n    var dest;\n    var title;\n    var matchChars;\n    var startpos = this.pos;\n\n    // label:\n    matchChars = this.parseLinkLabel();\n    if (matchChars === 0) {\n        return 0;\n    } else {\n        rawlabel = this.subject.substr(0, matchChars);\n    }\n\n    // colon:\n    if (this.peek() === C_COLON) {\n        this.pos++;\n    } else {\n        this.pos = startpos;\n        return 0;\n    }\n\n    //  link url\n    this.spnl();\n\n    dest = this.parseLinkDestination();\n    if (dest === null) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var beforetitle = this.pos;\n    this.spnl();\n    if (this.pos !== beforetitle) {\n        title = this.parseLinkTitle();\n    }\n    if (title === null) {\n        title = \"\";\n        // rewind before spaces\n        this.pos = beforetitle;\n    }\n\n    // make sure we're at line end:\n    var atLineEnd = true;\n    if (this.match(reSpaceAtEndOfLine) === null) {\n        if (title === \"\") {\n            atLineEnd = false;\n        } else {\n            // the potential title we found is not at the line end,\n            // but it could still be a legal link reference if we\n            // discard the title\n            title = \"\";\n            // rewind before spaces\n            this.pos = beforetitle;\n            // and instead check if the link URL is at the line end\n            atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n        }\n    }\n\n    if (!atLineEnd) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var normlabel = normalizeReference(rawlabel);\n    if (normlabel === \"\") {\n        // label must contain non-whitespace characters\n        this.pos = startpos;\n        return 0;\n    }\n\n    if (!refmap[normlabel]) {\n        refmap[normlabel] = { destination: dest, title: title };\n    }\n    return this.pos - startpos;\n};\n\n// Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\nvar parseInline = function(block) {\n    var res = false;\n    var c = this.peek();\n    if (c === -1) {\n        return false;\n    }\n    switch (c) {\n        case C_NEWLINE:\n            res = this.parseNewline(block);\n            break;\n        case C_BACKSLASH:\n            res = this.parseBackslash(block);\n            break;\n        case C_BACKTICK:\n            res = this.parseBackticks(block);\n            break;\n        case C_ASTERISK:\n        case C_UNDERSCORE:\n            res = this.handleDelim(c, block);\n            break;\n        case C_SINGLEQUOTE:\n        case C_DOUBLEQUOTE:\n            res = this.options.smart && this.handleDelim(c, block);\n            break;\n        case C_OPEN_BRACKET:\n            res = this.parseOpenBracket(block);\n            break;\n        case C_BANG:\n            res = this.parseBang(block);\n            break;\n        case C_CLOSE_BRACKET:\n            res = this.parseCloseBracket(block);\n            break;\n        case C_LESSTHAN:\n            res = this.parseAutolink(block) || this.parseHtmlTag(block);\n            break;\n        case C_AMPERSAND:\n            res = this.parseEntity(block);\n            break;\n        default:\n            res = this.parseString(block);\n            break;\n    }\n    if (!res) {\n        this.pos += 1;\n        block.appendChild(text(fromCodePoint(c)));\n    }\n\n    return true;\n};\n\n// Parse string content in block into inline children,\n// using refmap to resolve references.\nvar parseInlines = function(block) {\n    this.subject = block._string_content.trim();\n    this.pos = 0;\n    this.delimiters = null;\n    this.brackets = null;\n    while (this.parseInline(block)) {}\n    block._string_content = null; // allow raw string to be garbage collected\n    this.processEmphasis(null);\n};\n\n// The InlineParser object.\nfunction InlineParser(options) {\n    return {\n        subject: \"\",\n        delimiters: null, // used by handleDelim method\n        brackets: null,\n        pos: 0,\n        refmap: {},\n        match: match,\n        peek: peek,\n        spnl: spnl,\n        parseBackticks: parseBackticks,\n        parseBackslash: parseBackslash,\n        parseAutolink: parseAutolink,\n        parseHtmlTag: parseHtmlTag,\n        scanDelims: scanDelims,\n        handleDelim: handleDelim,\n        parseLinkTitle: parseLinkTitle,\n        parseLinkDestination: parseLinkDestination,\n        parseLinkLabel: parseLinkLabel,\n        parseOpenBracket: parseOpenBracket,\n        parseBang: parseBang,\n        parseCloseBracket: parseCloseBracket,\n        addBracket: addBracket,\n        removeBracket: removeBracket,\n        parseEntity: parseEntity,\n        parseString: parseString,\n        parseNewline: parseNewline,\n        parseReference: parseReference,\n        parseInline: parseInline,\n        processEmphasis: processEmphasis,\n        removeDelimiter: removeDelimiter,\n        options: options || {},\n        parse: parseInlines\n    };\n}\n\nexport default InlineParser;\n","\"use strict\";\n\nimport Node from \"./node.js\";\nimport { unescapeString, OPENTAG, CLOSETAG } from \"./common.js\";\nimport InlineParser from \"./inlines.js\";\n\nvar CODE_INDENT = 4;\n\nvar C_TAB = 9;\nvar C_NEWLINE = 10;\nvar C_GREATERTHAN = 62;\nvar C_LESSTHAN = 60;\nvar C_SPACE = 32;\nvar C_OPEN_BRACKET = 91;\n\nvar reHtmlBlockOpen = [\n    /./, // dummy for 0\n    /^<(?:script|pre|textarea|style)(?:\\s|>|$)/i,\n    /^<!--/,\n    /^<[?]/,\n    /^<![A-Z]/,\n    /^<!\\[CDATA\\[/,\n    /^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|[/]?[>]|$)/i,\n    new RegExp(\"^(?:\" + OPENTAG + \"|\" + CLOSETAG + \")\\\\s*$\", \"i\")\n];\n\nvar reHtmlBlockClose = [\n    /./, // dummy for 0\n    /<\\/(?:script|pre|textarea|style)>/i,\n    /-->/,\n    /\\?>/,\n    />/,\n    /\\]\\]>/\n];\n\nvar reThematicBreak = /^(?:(?:\\*[ \\t]*){3,}|(?:_[ \\t]*){3,}|(?:-[ \\t]*){3,})[ \\t]*$/;\n\nvar reMaybeSpecial = /^[#`~*+_=<>0-9-]/;\n\nvar reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\n\nvar reBulletListMarker = /^[*+-]/;\n\nvar reOrderedListMarker = /^(\\d{1,9})([.)])/;\n\nvar reATXHeadingMarker = /^#{1,6}(?:[ \\t]+|$)/;\n\nvar reCodeFence = /^`{3,}(?!.*`)|^~{3,}/;\n\nvar reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\n\nvar reSetextHeadingLine = /^(?:=+|-+)[ \\t]*$/;\n\nvar reLineEnding = /\\r\\n|\\n|\\r/;\n\n// Returns true if string contains only space characters.\nvar isBlank = function(s) {\n    return !reNonSpace.test(s);\n};\n\nvar isSpaceOrTab = function(c) {\n    return c === C_SPACE || c === C_TAB;\n};\n\nvar peek = function(ln, pos) {\n    if (pos < ln.length) {\n        return ln.charCodeAt(pos);\n    } else {\n        return -1;\n    }\n};\n\n// DOC PARSER\n\n// These are methods of a Parser object, defined below.\n\n// Returns true if block ends with a blank line, descending if needed\n// into lists and sublists.\nvar endsWithBlankLine = function(block) {\n    while (block) {\n        if (block._lastLineBlank) {\n            return true;\n        }\n        var t = block.type;\n        if (!block._lastLineChecked && (t === \"list\" || t === \"item\")) {\n            block._lastLineChecked = true;\n            block = block._lastChild;\n        } else {\n            block._lastLineChecked = true;\n            break;\n        }\n    }\n    return false;\n};\n\n// Add a line to the block at the tip.  We assume the tip\n// can accept lines -- that check should be done before calling this.\nvar addLine = function() {\n    if (this.partiallyConsumedTab) {\n        this.offset += 1; // skip over tab\n        // add space characters:\n        var charsToTab = 4 - (this.column % 4);\n        this.tip._string_content += \" \".repeat(charsToTab);\n    }\n    this.tip._string_content += this.currentLine.slice(this.offset) + \"\\n\";\n};\n\n// Add block of type tag as a child of the tip.  If the tip can't\n// accept children, close and finalize it and try its parent,\n// and so on til we find a block that can accept children.\nvar addChild = function(tag, offset) {\n    while (!this.blocks[this.tip.type].canContain(tag)) {\n        this.finalize(this.tip, this.lineNumber - 1);\n    }\n\n    var column_number = offset + 1; // offset 0 = column 1\n    var newBlock = new Node(tag, [\n        [this.lineNumber, column_number],\n        [0, 0]\n    ]);\n    newBlock._string_content = \"\";\n    this.tip.appendChild(newBlock);\n    this.tip = newBlock;\n    return newBlock;\n};\n\n// Parse a list marker and return data on the marker (type,\n// start, delimiter, bullet character, padding) or null.\nvar parseListMarker = function(parser, container) {\n    var rest = parser.currentLine.slice(parser.nextNonspace);\n    var match;\n    var nextc;\n    var spacesStartCol;\n    var spacesStartOffset;\n    var data = {\n        type: null,\n        tight: true, // lists are tight by default\n        bulletChar: null,\n        start: null,\n        delimiter: null,\n        padding: null,\n        markerOffset: parser.indent\n    };\n    if (parser.indent >= 4) {\n        return null;\n    }\n    if ((match = rest.match(reBulletListMarker))) {\n        data.type = \"bullet\";\n        data.bulletChar = match[0][0];\n    } else if (\n        (match = rest.match(reOrderedListMarker)) &&\n        (container.type !== \"paragraph\" || match[1] === \"1\")\n    ) {\n        data.type = \"ordered\";\n        data.start = parseInt(match[1]);\n        data.delimiter = match[2];\n    } else {\n        return null;\n    }\n    // make sure we have spaces after\n    nextc = peek(parser.currentLine, parser.nextNonspace + match[0].length);\n    if (!(nextc === -1 || nextc === C_TAB || nextc === C_SPACE)) {\n        return null;\n    }\n\n    // if it interrupts paragraph, make sure first line isn't blank\n    if (\n        container.type === \"paragraph\" &&\n        !parser.currentLine\n            .slice(parser.nextNonspace + match[0].length)\n            .match(reNonSpace)\n    ) {\n        return null;\n    }\n\n    // we've got a match! advance offset and calculate padding\n    parser.advanceNextNonspace(); // to start of marker\n    parser.advanceOffset(match[0].length, true); // to end of marker\n    spacesStartCol = parser.column;\n    spacesStartOffset = parser.offset;\n    do {\n        parser.advanceOffset(1, true);\n        nextc = peek(parser.currentLine, parser.offset);\n    } while (parser.column - spacesStartCol < 5 && isSpaceOrTab(nextc));\n    var blank_item = peek(parser.currentLine, parser.offset) === -1;\n    var spaces_after_marker = parser.column - spacesStartCol;\n    if (spaces_after_marker >= 5 || spaces_after_marker < 1 || blank_item) {\n        data.padding = match[0].length + 1;\n        parser.column = spacesStartCol;\n        parser.offset = spacesStartOffset;\n        if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n            parser.advanceOffset(1, true);\n        }\n    } else {\n        data.padding = match[0].length + spaces_after_marker;\n    }\n    return data;\n};\n\n// Returns true if the two list items are of the same type,\n// with the same delimiter and bullet character.  This is used\n// in agglomerating list items into lists.\nvar listsMatch = function(list_data, item_data) {\n    return (\n        list_data.type === item_data.type &&\n        list_data.delimiter === item_data.delimiter &&\n        list_data.bulletChar === item_data.bulletChar\n    );\n};\n\n// Finalize and close any unmatched blocks.\nvar closeUnmatchedBlocks = function() {\n    if (!this.allClosed) {\n        // finalize any blocks not matched\n        while (this.oldtip !== this.lastMatchedContainer) {\n            var parent = this.oldtip._parent;\n            this.finalize(this.oldtip, this.lineNumber - 1);\n            this.oldtip = parent;\n        }\n        this.allClosed = true;\n    }\n};\n\n// 'finalize' is run when the block is closed.\n// 'continue' is run to check whether the block is continuing\n// at a certain line and offset (e.g. whether a block quote\n// contains a `>`.  It returns 0 for matched, 1 for not matched,\n// and 2 for \"we've dealt with this line completely, go to next.\"\nvar blocks = {\n    document: {\n        continue: function() {\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    list: {\n        continue: function() {\n            return 0;\n        },\n        finalize: function(parser, block) {\n            var item = block._firstChild;\n            while (item) {\n                // check for non-final list item ending with blank line:\n                if (endsWithBlankLine(item) && item._next) {\n                    block._listData.tight = false;\n                    break;\n                }\n                // recurse into children of list item, to see if there are\n                // spaces between any of them:\n                var subitem = item._firstChild;\n                while (subitem) {\n                    if (\n                        endsWithBlankLine(subitem) &&\n                        (item._next || subitem._next)\n                    ) {\n                        block._listData.tight = false;\n                        break;\n                    }\n                    subitem = subitem._next;\n                }\n                item = item._next;\n            }\n        },\n        canContain: function(t) {\n            return t === \"item\";\n        },\n        acceptsLines: false\n    },\n    block_quote: {\n        continue: function(parser) {\n            var ln = parser.currentLine;\n            if (\n                !parser.indented &&\n                peek(ln, parser.nextNonspace) === C_GREATERTHAN\n            ) {\n                parser.advanceNextNonspace();\n                parser.advanceOffset(1, false);\n                if (isSpaceOrTab(peek(ln, parser.offset))) {\n                    parser.advanceOffset(1, true);\n                }\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    item: {\n        continue: function(parser, container) {\n            if (parser.blank) {\n                if (container._firstChild == null) {\n                    // Blank line after empty list item\n                    return 1;\n                } else {\n                    parser.advanceNextNonspace();\n                }\n            } else if (\n                parser.indent >=\n                container._listData.markerOffset + container._listData.padding\n            ) {\n                parser.advanceOffset(\n                    container._listData.markerOffset +\n                        container._listData.padding,\n                    true\n                );\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    heading: {\n        continue: function() {\n            // a heading can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: false\n    },\n    thematic_break: {\n        continue: function() {\n            // a thematic break can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: false\n    },\n    code_block: {\n        continue: function(parser, container) {\n            var ln = parser.currentLine;\n            var indent = parser.indent;\n            if (container._isFenced) {\n                // fenced\n                var match =\n                    indent <= 3 &&\n                    ln.charAt(parser.nextNonspace) === container._fenceChar &&\n                    ln.slice(parser.nextNonspace).match(reClosingCodeFence);\n                if (match && match[0].length >= container._fenceLength) {\n                    // closing fence - we're at end of line, so we can return\n                    parser.lastLineLength =\n                        parser.offset + indent + match[0].length;\n                    parser.finalize(container, parser.lineNumber);\n                    return 2;\n                } else {\n                    // skip optional spaces of fence offset\n                    var i = container._fenceOffset;\n                    while (i > 0 && isSpaceOrTab(peek(ln, parser.offset))) {\n                        parser.advanceOffset(1, true);\n                        i--;\n                    }\n                }\n            } else {\n                // indented\n                if (indent >= CODE_INDENT) {\n                    parser.advanceOffset(CODE_INDENT, true);\n                } else if (parser.blank) {\n                    parser.advanceNextNonspace();\n                } else {\n                    return 1;\n                }\n            }\n            return 0;\n        },\n        finalize: function(parser, block) {\n            if (block._isFenced) {\n                // fenced\n                // first line becomes info string\n                var content = block._string_content;\n                var newlinePos = content.indexOf(\"\\n\");\n                var firstLine = content.slice(0, newlinePos);\n                var rest = content.slice(newlinePos + 1);\n                block.info = unescapeString(firstLine.trim());\n                block._literal = rest;\n            } else {\n                // indented\n                block._literal = block._string_content.replace(\n                    /(\\n *)+$/,\n                    \"\\n\"\n                );\n            }\n            block._string_content = null; // allow GC\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    },\n    html_block: {\n        continue: function(parser, container) {\n            return parser.blank &&\n                (container._htmlBlockType === 6 ||\n                    container._htmlBlockType === 7)\n                ? 1\n                : 0;\n        },\n        finalize: function(parser, block) {\n            block._literal = block._string_content.replace(/(\\n *)+$/, \"\");\n            block._string_content = null; // allow GC\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    },\n    paragraph: {\n        continue: function(parser) {\n            return parser.blank ? 1 : 0;\n        },\n        finalize: function(parser, block) {\n            var pos;\n            var hasReferenceDefs = false;\n\n            // try parsing the beginning as link reference definitions:\n            while (\n                peek(block._string_content, 0) === C_OPEN_BRACKET &&\n                (pos = parser.inlineParser.parseReference(\n                    block._string_content,\n                    parser.refmap\n                ))\n            ) {\n                block._string_content = block._string_content.slice(pos);\n                hasReferenceDefs = true;\n            }\n            if (hasReferenceDefs && isBlank(block._string_content)) {\n                block.unlink();\n            }\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    }\n};\n\n// block start functions.  Return values:\n// 0 = no match\n// 1 = matched container, keep going\n// 2 = matched leaf, no more block starts\nvar blockStarts = [\n    // block quote\n    function(parser) {\n        if (\n            !parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN\n        ) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(1, false);\n            // optional following space\n            if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n                parser.advanceOffset(1, true);\n            }\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"block_quote\", parser.nextNonspace);\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // ATX heading\n    function(parser) {\n        var match;\n        if (\n            !parser.indented &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reATXHeadingMarker))\n        ) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(match[0].length, false);\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild(\"heading\", parser.nextNonspace);\n            container.level = match[0].trim().length; // number of #s\n            // remove trailing ###s:\n            container._string_content = parser.currentLine\n                .slice(parser.offset)\n                .replace(/^[ \\t]*#+[ \\t]*$/, \"\")\n                .replace(/[ \\t]+#+[ \\t]*$/, \"\");\n            parser.advanceOffset(parser.currentLine.length - parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // Fenced code block\n    function(parser) {\n        var match;\n        if (\n            !parser.indented &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reCodeFence))\n        ) {\n            var fenceLength = match[0].length;\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild(\"code_block\", parser.nextNonspace);\n            container._isFenced = true;\n            container._fenceLength = fenceLength;\n            container._fenceChar = match[0][0];\n            container._fenceOffset = parser.indent;\n            parser.advanceNextNonspace();\n            parser.advanceOffset(fenceLength, false);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // HTML block\n    function(parser, container) {\n        if (\n            !parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_LESSTHAN\n        ) {\n            var s = parser.currentLine.slice(parser.nextNonspace);\n            var blockType;\n\n            for (blockType = 1; blockType <= 7; blockType++) {\n                if (\n                    reHtmlBlockOpen[blockType].test(s) &&\n                    (blockType < 7 || container.type !== \"paragraph\")\n                ) {\n                    parser.closeUnmatchedBlocks();\n                    // We don't adjust parser.offset;\n                    // spaces are part of the HTML block:\n                    var b = parser.addChild(\"html_block\", parser.offset);\n                    b._htmlBlockType = blockType;\n                    return 2;\n                }\n            }\n        }\n\n        return 0;\n    },\n\n    // Setext heading\n    function(parser, container) {\n        var match;\n        if (\n            !parser.indented &&\n            container.type === \"paragraph\" &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reSetextHeadingLine))\n        ) {\n            parser.closeUnmatchedBlocks();\n            // resolve reference link definitiosn\n            var pos;\n            while (\n                peek(container._string_content, 0) === C_OPEN_BRACKET &&\n                (pos = parser.inlineParser.parseReference(\n                    container._string_content,\n                    parser.refmap\n                ))\n            ) {\n                container._string_content = container._string_content.slice(\n                    pos\n                );\n            }\n            if (container._string_content.length > 0) {\n                var heading = new Node(\"heading\", container.sourcepos);\n                heading.level = match[0][0] === \"=\" ? 1 : 2;\n                heading._string_content = container._string_content;\n                container.insertAfter(heading);\n                container.unlink();\n                parser.tip = heading;\n                parser.advanceOffset(\n                    parser.currentLine.length - parser.offset,\n                    false\n                );\n                return 2;\n            } else {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n    },\n\n    // thematic break\n    function(parser) {\n        if (\n            !parser.indented &&\n            reThematicBreak.test(parser.currentLine.slice(parser.nextNonspace))\n        ) {\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"thematic_break\", parser.nextNonspace);\n            parser.advanceOffset(\n                parser.currentLine.length - parser.offset,\n                false\n            );\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // list item\n    function(parser, container) {\n        var data;\n\n        if (\n            (!parser.indented || container.type === \"list\") &&\n            (data = parseListMarker(parser, container))\n        ) {\n            parser.closeUnmatchedBlocks();\n\n            // add the list if needed\n            if (\n                parser.tip.type !== \"list\" ||\n                !listsMatch(container._listData, data)\n            ) {\n                container = parser.addChild(\"list\", parser.nextNonspace);\n                container._listData = data;\n            }\n\n            // add the list item\n            container = parser.addChild(\"item\", parser.nextNonspace);\n            container._listData = data;\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // indented code block\n    function(parser) {\n        if (\n            parser.indented &&\n            parser.tip.type !== \"paragraph\" &&\n            !parser.blank\n        ) {\n            // indented code\n            parser.advanceOffset(CODE_INDENT, true);\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"code_block\", parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n];\n\nvar advanceOffset = function(count, columns) {\n    var currentLine = this.currentLine;\n    var charsToTab, charsToAdvance;\n    var c;\n    while (count > 0 && (c = currentLine[this.offset])) {\n        if (c === \"\\t\") {\n            charsToTab = 4 - (this.column % 4);\n            if (columns) {\n                this.partiallyConsumedTab = charsToTab > count;\n                charsToAdvance = charsToTab > count ? count : charsToTab;\n                this.column += charsToAdvance;\n                this.offset += this.partiallyConsumedTab ? 0 : 1;\n                count -= charsToAdvance;\n            } else {\n                this.partiallyConsumedTab = false;\n                this.column += charsToTab;\n                this.offset += 1;\n                count -= 1;\n            }\n        } else {\n            this.partiallyConsumedTab = false;\n            this.offset += 1;\n            this.column += 1; // assume ascii; block starts are ascii\n            count -= 1;\n        }\n    }\n};\n\nvar advanceNextNonspace = function() {\n    this.offset = this.nextNonspace;\n    this.column = this.nextNonspaceColumn;\n    this.partiallyConsumedTab = false;\n};\n\nvar findNextNonspace = function() {\n    var currentLine = this.currentLine;\n    var i = this.offset;\n    var cols = this.column;\n    var c;\n\n    while ((c = currentLine.charAt(i)) !== \"\") {\n        if (c === \" \") {\n            i++;\n            cols++;\n        } else if (c === \"\\t\") {\n            i++;\n            cols += 4 - (cols % 4);\n        } else {\n            break;\n        }\n    }\n    this.blank = c === \"\\n\" || c === \"\\r\" || c === \"\";\n    this.nextNonspace = i;\n    this.nextNonspaceColumn = cols;\n    this.indent = this.nextNonspaceColumn - this.column;\n    this.indented = this.indent >= CODE_INDENT;\n};\n\n// Analyze a line of text and update the document appropriately.\n// We parse markdown text by calling this on each line of input,\n// then finalizing the document.\nvar incorporateLine = function(ln) {\n    var all_matched = true;\n    var t;\n\n    var container = this.doc;\n    this.oldtip = this.tip;\n    this.offset = 0;\n    this.column = 0;\n    this.blank = false;\n    this.partiallyConsumedTab = false;\n    this.lineNumber += 1;\n\n    // replace NUL characters for security\n    if (ln.indexOf(\"\\u0000\") !== -1) {\n        ln = ln.replace(/\\0/g, \"\\uFFFD\");\n    }\n\n    this.currentLine = ln;\n\n    // For each containing block, try to parse the associated line start.\n    // Bail out on failure: container will point to the last matching block.\n    // Set all_matched to false if not all containers match.\n    var lastChild;\n    while ((lastChild = container._lastChild) && lastChild._open) {\n        container = lastChild;\n\n        this.findNextNonspace();\n\n        switch (this.blocks[container.type].continue(this, container)) {\n            case 0: // we've matched, keep going\n                break;\n            case 1: // we've failed to match a block\n                all_matched = false;\n                break;\n            case 2: // we've hit end of line for fenced code close and can return\n                return;\n            default:\n                throw \"continue returned illegal value, must be 0, 1, or 2\";\n        }\n        if (!all_matched) {\n            container = container._parent; // back up to last matching block\n            break;\n        }\n    }\n\n    this.allClosed = container === this.oldtip;\n    this.lastMatchedContainer = container;\n\n    var matchedLeaf =\n        container.type !== \"paragraph\" && blocks[container.type].acceptsLines;\n    var starts = this.blockStarts;\n    var startsLen = starts.length;\n    // Unless last matched container is a code block, try new container starts,\n    // adding children to the last matched container:\n    while (!matchedLeaf) {\n        this.findNextNonspace();\n\n        // this is a little performance optimization:\n        if (\n            !this.indented &&\n            !reMaybeSpecial.test(ln.slice(this.nextNonspace))\n        ) {\n            this.advanceNextNonspace();\n            break;\n        }\n\n        var i = 0;\n        while (i < startsLen) {\n            var res = starts[i](this, container);\n            if (res === 1) {\n                container = this.tip;\n                break;\n            } else if (res === 2) {\n                container = this.tip;\n                matchedLeaf = true;\n                break;\n            } else {\n                i++;\n            }\n        }\n\n        if (i === startsLen) {\n            // nothing matched\n            this.advanceNextNonspace();\n            break;\n        }\n    }\n\n    // What remains at the offset is a text line.  Add the text to the\n    // appropriate container.\n\n    // First check for a lazy paragraph continuation:\n    if (!this.allClosed && !this.blank && this.tip.type === \"paragraph\") {\n        // lazy paragraph continuation\n        this.addLine();\n    } else {\n        // not a lazy continuation\n\n        // finalize any blocks not matched\n        this.closeUnmatchedBlocks();\n        if (this.blank && container.lastChild) {\n            container.lastChild._lastLineBlank = true;\n        }\n\n        t = container.type;\n\n        // Block quote lines are never blank as they start with >\n        // and we don't count blanks in fenced code for purposes of tight/loose\n        // lists or breaking out of lists.  We also don't set _lastLineBlank\n        // on an empty list item, or if we just closed a fenced block.\n        var lastLineBlank =\n            this.blank &&\n            !(\n                t === \"block_quote\" ||\n                (t === \"code_block\" && container._isFenced) ||\n                (t === \"item\" &&\n                    !container._firstChild &&\n                    container.sourcepos[0][0] === this.lineNumber)\n            );\n\n        // propagate lastLineBlank up through parents:\n        var cont = container;\n        while (cont) {\n            cont._lastLineBlank = lastLineBlank;\n            cont = cont._parent;\n        }\n\n        if (this.blocks[t].acceptsLines) {\n            this.addLine();\n            // if HtmlBlock, check for end condition\n            if (\n                t === \"html_block\" &&\n                container._htmlBlockType >= 1 &&\n                container._htmlBlockType <= 5 &&\n                reHtmlBlockClose[container._htmlBlockType].test(\n                    this.currentLine.slice(this.offset)\n                )\n            ) {\n                this.lastLineLength = ln.length;\n                this.finalize(container, this.lineNumber);\n            }\n        } else if (this.offset < ln.length && !this.blank) {\n            // create paragraph container for line\n            container = this.addChild(\"paragraph\", this.offset);\n            this.advanceNextNonspace();\n            this.addLine();\n        }\n    }\n    this.lastLineLength = ln.length;\n};\n\n// Finalize a block.  Close it and do any necessary postprocessing,\n// e.g. creating string_content from strings, setting the 'tight'\n// or 'loose' status of a list, and parsing the beginnings\n// of paragraphs for reference definitions.  Reset the tip to the\n// parent of the closed block.\nvar finalize = function(block, lineNumber) {\n    var above = block._parent;\n    block._open = false;\n    block.sourcepos[1] = [lineNumber, this.lastLineLength];\n\n    this.blocks[block.type].finalize(this, block);\n\n    this.tip = above;\n};\n\n// Walk through a block & children recursively, parsing string content\n// into inline content where appropriate.\nvar processInlines = function(block) {\n    var node, event, t;\n    var walker = block.walker();\n    this.inlineParser.refmap = this.refmap;\n    this.inlineParser.options = this.options;\n    while ((event = walker.next())) {\n        node = event.node;\n        t = node.type;\n        if (!event.entering && (t === \"paragraph\" || t === \"heading\")) {\n            this.inlineParser.parse(node);\n        }\n    }\n};\n\nvar Document = function() {\n    var doc = new Node(\"document\", [\n        [1, 1],\n        [0, 0]\n    ]);\n    return doc;\n};\n\n// The main parsing function.  Returns a parsed document AST.\nvar parse = function(input) {\n    this.doc = new Document();\n    this.tip = this.doc;\n    this.refmap = {};\n    this.lineNumber = 0;\n    this.lastLineLength = 0;\n    this.offset = 0;\n    this.column = 0;\n    this.lastMatchedContainer = this.doc;\n    this.currentLine = \"\";\n    if (this.options.time) {\n        console.time(\"preparing input\");\n    }\n    var lines = input.split(reLineEnding);\n    var len = lines.length;\n    if (input.charCodeAt(input.length - 1) === C_NEWLINE) {\n        // ignore last blank line created by final newline\n        len -= 1;\n    }\n    if (this.options.time) {\n        console.timeEnd(\"preparing input\");\n    }\n    if (this.options.time) {\n        console.time(\"block parsing\");\n    }\n    for (var i = 0; i < len; i++) {\n        this.incorporateLine(lines[i]);\n    }\n    while (this.tip) {\n        this.finalize(this.tip, len);\n    }\n    if (this.options.time) {\n        console.timeEnd(\"block parsing\");\n    }\n    if (this.options.time) {\n        console.time(\"inline parsing\");\n    }\n    this.processInlines(this.doc);\n    if (this.options.time) {\n        console.timeEnd(\"inline parsing\");\n    }\n    return this.doc;\n};\n\n// The Parser object.\nfunction Parser(options) {\n    return {\n        doc: new Document(),\n        blocks: blocks,\n        blockStarts: blockStarts,\n        tip: this.doc,\n        oldtip: this.doc,\n        currentLine: \"\",\n        lineNumber: 0,\n        offset: 0,\n        column: 0,\n        nextNonspace: 0,\n        nextNonspaceColumn: 0,\n        indent: 0,\n        indented: false,\n        blank: false,\n        partiallyConsumedTab: false,\n        allClosed: true,\n        lastMatchedContainer: this.doc,\n        refmap: {},\n        lastLineLength: 0,\n        inlineParser: new InlineParser(options),\n        findNextNonspace: findNextNonspace,\n        advanceOffset: advanceOffset,\n        advanceNextNonspace: advanceNextNonspace,\n        addLine: addLine,\n        addChild: addChild,\n        incorporateLine: incorporateLine,\n        finalize: finalize,\n        processInlines: processInlines,\n        closeUnmatchedBlocks: closeUnmatchedBlocks,\n        parse: parse,\n        options: options || {}\n    };\n}\n\nexport default Parser;\n","\"use strict\";\n\nfunction Renderer() {}\n\n/**\n *  Walks the AST and calls member methods for each Node type.\n *\n *  @param ast {Node} The root of the abstract syntax tree.\n */\nfunction render(ast) {\n    var walker = ast.walker(),\n        event,\n        type;\n\n    this.buffer = \"\";\n    this.lastOut = \"\\n\";\n\n    while ((event = walker.next())) {\n        type = event.node.type;\n        if (this[type]) {\n            this[type](event.node, event.entering);\n        }\n    }\n    return this.buffer;\n}\n\n/**\n *  Concatenate a literal string to the buffer.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction lit(str) {\n    this.buffer += str;\n    this.lastOut = str;\n}\n\n/**\n *  Output a newline to the buffer.\n */\nfunction cr() {\n    if (this.lastOut !== \"\\n\") {\n        this.lit(\"\\n\");\n    }\n}\n\n/**\n *  Concatenate a string to the buffer possibly escaping the content.\n *\n *  Concrete renderer implementations should override this method.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction out(str) {\n    this.lit(str);\n}\n\n/**\n *  Escape a string for the target renderer.\n *\n *  Abstract function that should be implemented by concrete\n *  renderer implementations.\n *\n *  @param str {String} The string to escape.\n */\nfunction esc(str) {\n    return str;\n}\n\nRenderer.prototype.render = render;\nRenderer.prototype.out = out;\nRenderer.prototype.lit = lit;\nRenderer.prototype.cr = cr;\nRenderer.prototype.esc = esc;\n\nexport default Renderer;\n","\"use strict\";\n\nimport { escapeXml } from \"../common.js\";\nimport Renderer from \"./renderer.js\";\n\nvar reUnsafeProtocol = /^javascript:|vbscript:|file:|data:/i;\nvar reSafeDataProtocol = /^data:image\\/(?:png|gif|jpeg|webp)/i;\n\nvar potentiallyUnsafe = function(url) {\n    return reUnsafeProtocol.test(url) && !reSafeDataProtocol.test(url);\n};\n\n// Helper function to produce an HTML tag.\nfunction tag(name, attrs, selfclosing) {\n    if (this.disableTags > 0) {\n        return;\n    }\n    this.buffer += \"<\" + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            this.buffer += \" \" + attrib[0] + '=\"' + attrib[1] + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        this.buffer += \" /\";\n    }\n    this.buffer += \">\";\n    this.lastOut = \">\";\n}\n\nfunction HtmlRenderer(options) {\n    options = options || {};\n    // by default, soft breaks are rendered as newlines in HTML\n    options.softbreak = options.softbreak || \"\\n\";\n    // set to \"<br />\" to make them hard breaks\n    // set to \" \" if you want to ignore line wrapping in source\n\n    this.disableTags = 0;\n    this.lastOut = \"\\n\";\n    this.options = options;\n}\n\n/* Node methods */\n\nfunction text(node) {\n    this.out(node.literal);\n}\n\nfunction softbreak() {\n    this.lit(this.options.softbreak);\n}\n\nfunction linebreak() {\n    this.tag(\"br\", [], true);\n    this.cr();\n}\n\nfunction link(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        if (!(this.options.safe && potentiallyUnsafe(node.destination))) {\n            attrs.push([\"href\", this.esc(node.destination)]);\n        }\n        if (node.title) {\n            attrs.push([\"title\", this.esc(node.title)]);\n        }\n        this.tag(\"a\", attrs);\n    } else {\n        this.tag(\"/a\");\n    }\n}\n\nfunction image(node, entering) {\n    if (entering) {\n        if (this.disableTags === 0) {\n            if (this.options.safe && potentiallyUnsafe(node.destination)) {\n                this.lit('<img src=\"\" alt=\"');\n            } else {\n                this.lit('<img src=\"' + this.esc(node.destination) + '\" alt=\"');\n            }\n        }\n        this.disableTags += 1;\n    } else {\n        this.disableTags -= 1;\n        if (this.disableTags === 0) {\n            if (node.title) {\n                this.lit('\" title=\"' + this.esc(node.title));\n            }\n            this.lit('\" />');\n        }\n    }\n}\n\nfunction emph(node, entering) {\n    this.tag(entering ? \"em\" : \"/em\");\n}\n\nfunction strong(node, entering) {\n    this.tag(entering ? \"strong\" : \"/strong\");\n}\n\nfunction paragraph(node, entering) {\n    var grandparent = node.parent.parent,\n        attrs = this.attrs(node);\n    if (grandparent !== null && grandparent.type === \"list\") {\n        if (grandparent.listTight) {\n            return;\n        }\n    }\n    if (entering) {\n        this.cr();\n        this.tag(\"p\", attrs);\n    } else {\n        this.tag(\"/p\");\n        this.cr();\n    }\n}\n\nfunction heading(node, entering) {\n    var tagname = \"h\" + node.level,\n        attrs = this.attrs(node);\n    if (entering) {\n        this.cr();\n        this.tag(tagname, attrs);\n    } else {\n        this.tag(\"/\" + tagname);\n        this.cr();\n    }\n}\n\nfunction code(node) {\n    this.tag(\"code\");\n    this.out(node.literal);\n    this.tag(\"/code\");\n}\n\nfunction code_block(node) {\n    var info_words = node.info ? node.info.split(/\\s+/) : [],\n        attrs = this.attrs(node);\n    if (info_words.length > 0 && info_words[0].length > 0) {\n        attrs.push([\"class\", \"language-\" + this.esc(info_words[0])]);\n    }\n    this.cr();\n    this.tag(\"pre\");\n    this.tag(\"code\", attrs);\n    this.out(node.literal);\n    this.tag(\"/code\");\n    this.tag(\"/pre\");\n    this.cr();\n}\n\nfunction thematic_break(node) {\n    var attrs = this.attrs(node);\n    this.cr();\n    this.tag(\"hr\", attrs, true);\n    this.cr();\n}\n\nfunction block_quote(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        this.cr();\n        this.tag(\"blockquote\", attrs);\n        this.cr();\n    } else {\n        this.cr();\n        this.tag(\"/blockquote\");\n        this.cr();\n    }\n}\n\nfunction list(node, entering) {\n    var tagname = node.listType === \"bullet\" ? \"ul\" : \"ol\",\n        attrs = this.attrs(node);\n\n    if (entering) {\n        var start = node.listStart;\n        if (start !== null && start !== 1) {\n            attrs.push([\"start\", start.toString()]);\n        }\n        this.cr();\n        this.tag(tagname, attrs);\n        this.cr();\n    } else {\n        this.cr();\n        this.tag(\"/\" + tagname);\n        this.cr();\n    }\n}\n\nfunction item(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        this.tag(\"li\", attrs);\n    } else {\n        this.tag(\"/li\");\n        this.cr();\n    }\n}\n\nfunction html_inline(node) {\n    if (this.options.safe) {\n        this.lit(\"<!-- raw HTML omitted -->\");\n    } else {\n        this.lit(node.literal);\n    }\n}\n\nfunction html_block(node) {\n    this.cr();\n    if (this.options.safe) {\n        this.lit(\"<!-- raw HTML omitted -->\");\n    } else {\n        this.lit(node.literal);\n    }\n    this.cr();\n}\n\nfunction custom_inline(node, entering) {\n    if (entering && node.onEnter) {\n        this.lit(node.onEnter);\n    } else if (!entering && node.onExit) {\n        this.lit(node.onExit);\n    }\n}\n\nfunction custom_block(node, entering) {\n    this.cr();\n    if (entering && node.onEnter) {\n        this.lit(node.onEnter);\n    } else if (!entering && node.onExit) {\n        this.lit(node.onExit);\n    }\n    this.cr();\n}\n\n/* Helper methods */\n\nfunction out(s) {\n    this.lit(this.esc(s));\n}\n\nfunction attrs(node) {\n    var att = [];\n    if (this.options.sourcepos) {\n        var pos = node.sourcepos;\n        if (pos) {\n            att.push([\n                \"data-sourcepos\",\n                String(pos[0][0]) +\n                    \":\" +\n                    String(pos[0][1]) +\n                    \"-\" +\n                    String(pos[1][0]) +\n                    \":\" +\n                    String(pos[1][1])\n            ]);\n        }\n    }\n    return att;\n}\n\n// quick browser-compatible inheritance\nHtmlRenderer.prototype = Object.create(Renderer.prototype);\n\nHtmlRenderer.prototype.text = text;\nHtmlRenderer.prototype.html_inline = html_inline;\nHtmlRenderer.prototype.html_block = html_block;\nHtmlRenderer.prototype.softbreak = softbreak;\nHtmlRenderer.prototype.linebreak = linebreak;\nHtmlRenderer.prototype.link = link;\nHtmlRenderer.prototype.image = image;\nHtmlRenderer.prototype.emph = emph;\nHtmlRenderer.prototype.strong = strong;\nHtmlRenderer.prototype.paragraph = paragraph;\nHtmlRenderer.prototype.heading = heading;\nHtmlRenderer.prototype.code = code;\nHtmlRenderer.prototype.code_block = code_block;\nHtmlRenderer.prototype.thematic_break = thematic_break;\nHtmlRenderer.prototype.block_quote = block_quote;\nHtmlRenderer.prototype.list = list;\nHtmlRenderer.prototype.item = item;\nHtmlRenderer.prototype.custom_inline = custom_inline;\nHtmlRenderer.prototype.custom_block = custom_block;\n\nHtmlRenderer.prototype.esc = escapeXml;\n\nHtmlRenderer.prototype.out = out;\nHtmlRenderer.prototype.tag = tag;\nHtmlRenderer.prototype.attrs = attrs;\n\nexport default HtmlRenderer;\n","\"use strict\";\n\nimport Renderer from \"./renderer.js\";\nimport { escapeXml } from \"../common.js\";\n\nvar reXMLTag = /\\<[^>]*\\>/;\n\nfunction toTagName(s) {\n    return s.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n}\n\nfunction XmlRenderer(options) {\n    options = options || {};\n\n    this.disableTags = 0;\n    this.lastOut = \"\\n\";\n\n    this.indentLevel = 0;\n    this.indent = \"  \";\n\n    this.options = options;\n}\n\nfunction render(ast) {\n    this.buffer = \"\";\n\n    var attrs;\n    var tagname;\n    var walker = ast.walker();\n    var event, node, entering;\n    var container;\n    var selfClosing;\n    var nodetype;\n\n    var options = this.options;\n\n    if (options.time) {\n        console.time(\"rendering\");\n    }\n\n    this.buffer += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n    this.buffer += '<!DOCTYPE document SYSTEM \"CommonMark.dtd\">\\n';\n\n    while ((event = walker.next())) {\n        entering = event.entering;\n        node = event.node;\n        nodetype = node.type;\n\n        container = node.isContainer;\n\n        selfClosing =\n            nodetype === \"thematic_break\" ||\n            nodetype === \"linebreak\" ||\n            nodetype === \"softbreak\";\n\n        tagname = toTagName(nodetype);\n\n        if (entering) {\n            attrs = [];\n\n            switch (nodetype) {\n                case \"document\":\n                    attrs.push([\"xmlns\", \"http://commonmark.org/xml/1.0\"]);\n                    break;\n                case \"list\":\n                    if (node.listType !== null) {\n                        attrs.push([\"type\", node.listType.toLowerCase()]);\n                    }\n                    if (node.listStart !== null) {\n                        attrs.push([\"start\", String(node.listStart)]);\n                    }\n                    if (node.listTight !== null) {\n                        attrs.push([\n                            \"tight\",\n                            node.listTight ? \"true\" : \"false\"\n                        ]);\n                    }\n                    var delim = node.listDelimiter;\n                    if (delim !== null) {\n                        var delimword = \"\";\n                        if (delim === \".\") {\n                            delimword = \"period\";\n                        } else {\n                            delimword = \"paren\";\n                        }\n                        attrs.push([\"delimiter\", delimword]);\n                    }\n                    break;\n                case \"code_block\":\n                    if (node.info) {\n                        attrs.push([\"info\", node.info]);\n                    }\n                    break;\n                case \"heading\":\n                    attrs.push([\"level\", String(node.level)]);\n                    break;\n                case \"link\":\n                case \"image\":\n                    attrs.push([\"destination\", node.destination]);\n                    attrs.push([\"title\", node.title]);\n                    break;\n                case \"custom_inline\":\n                case \"custom_block\":\n                    attrs.push([\"on_enter\", node.onEnter]);\n                    attrs.push([\"on_exit\", node.onExit]);\n                    break;\n                default:\n                    break;\n            }\n            if (options.sourcepos) {\n                var pos = node.sourcepos;\n                if (pos) {\n                    attrs.push([\n                        \"sourcepos\",\n                        String(pos[0][0]) +\n                            \":\" +\n                            String(pos[0][1]) +\n                            \"-\" +\n                            String(pos[1][0]) +\n                            \":\" +\n                            String(pos[1][1])\n                    ]);\n                }\n            }\n\n            this.cr();\n            this.out(this.tag(tagname, attrs, selfClosing));\n            if (container) {\n                this.indentLevel += 1;\n            } else if (!container && !selfClosing) {\n                var lit = node.literal;\n                if (lit) {\n                    this.out(this.esc(lit));\n                }\n                this.out(this.tag(\"/\" + tagname));\n            }\n        } else {\n            this.indentLevel -= 1;\n            this.cr();\n            this.out(this.tag(\"/\" + tagname));\n        }\n    }\n    if (options.time) {\n        console.timeEnd(\"rendering\");\n    }\n    this.buffer += \"\\n\";\n    return this.buffer;\n}\n\nfunction out(s) {\n    if (this.disableTags > 0) {\n        this.buffer += s.replace(reXMLTag, \"\");\n    } else {\n        this.buffer += s;\n    }\n    this.lastOut = s;\n}\n\nfunction cr() {\n    if (this.lastOut !== \"\\n\") {\n        this.buffer += \"\\n\";\n        this.lastOut = \"\\n\";\n        for (var i = this.indentLevel; i > 0; i--) {\n            this.buffer += this.indent;\n        }\n    }\n}\n\n// Helper function to produce an XML tag.\nfunction tag(name, attrs, selfclosing) {\n    var result = \"<\" + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            result += \" \" + attrib[0] + '=\"' + this.esc(attrib[1]) + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        result += \" /\";\n    }\n    result += \">\";\n    return result;\n}\n\n// quick browser-compatible inheritance\nXmlRenderer.prototype = Object.create(Renderer.prototype);\n\nXmlRenderer.prototype.render = render;\nXmlRenderer.prototype.out = out;\nXmlRenderer.prototype.cr = cr;\nXmlRenderer.prototype.tag = tag;\nXmlRenderer.prototype.esc = escapeXml;\n\nexport default XmlRenderer;\n","<template>\r\n\t<div class=\"vue-component styled-description\" :class=\"{compact: compact}\" v-html=\"markup(description)\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as commonmark from 'commonmark';\r\nimport Utils from '../utils';\r\n\r\nexport default {\r\n\tname: 'Description',\r\n\tprops: {\r\n\t\tdescription: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: ''\r\n\t\t},\r\n\t\tpreprocessor: {\r\n\t\t\ttype: Function,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tprocessor: {\r\n\t\t\ttype: Function,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tprocessUrl: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tcompact: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t},\r\n\t\tallowHTML: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false\r\n\t\t}\r\n\t},\r\n\tbeforeCreate() {\r\n\t\tUtils.enableHtmlProps(this);\r\n\t},\r\n\tmethods: {\r\n\t\tmarkup(text) {\r\n\t\t\tif (typeof text !== 'string') {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\r\n\t\t\t// Parse our extension to CommonMark, which allows linking to other processes with ``process()``\r\n\t\t\t// Temporarily replace with a non-commonmark and non-html string to avoid parsing/removal\r\n\t\t\tif (typeof this.processUrl === 'string') {\r\n\t\t\t\ttext = text.replace(/(^|[^\\w`])``(\\w+)\\(\\)``(?![\\w`])/g, (_, prefix, pid) => {\r\n\t\t\t\t\treturn `${prefix}@pid:${pid}@@`;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Parse CommonMark\r\n\t\t\tvar reader = new commonmark.Parser();\r\n\t\t\tvar writer = new commonmark.HtmlRenderer({safe: !this.allowHTML, smart: true});\r\n\t\t\tif (typeof this.preprocessor === 'function') {\r\n\t\t\t\ttext = this.preprocessor(text);\r\n\t\t\t}\r\n\t\t\tvar parsed = reader.parse(text);\r\n\t\t\tvar rendered = writer.render(parsed);\r\n\t\t\tif (typeof this.processor === 'function') {\r\n\t\t\t\trendered = this.processor(rendered);\r\n\t\t\t}\r\n\t\r\n\t\t\t// Replace temporary replacement code with process link\r\n\t\t\tif (typeof this.processUrl === 'string') {\r\n\t\t\t\trendered = rendered.replace(/@pid:(\\w+)@@/g, (_, pid) => this.linkToProcess(pid));\r\n\t\t\t}\r\n\r\n\t\t\treturn rendered;\r\n\t\t},\r\n\t\tlinkToProcess(processId) {\r\n\t\t\tlet url = this.processUrl.replace('${}', encodeURIComponent(processId));\r\n\t\t\tlet target = this.processUrl.startsWith('#') ? '_self' : '_blank';\r\n\t\t\treturn `<code><a href=\"${url}\" target=\"${target}\" class=\"process-link\">${processId}</a></code>`;\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import './base.scss';\r\n\r\n.vue-component.styled-description {\r\n\tline-height: 1.25em;\r\n\r\n\tcode {\r\n\t\tcolor: maroon;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding: 0 0.1em;\r\n\t}\r\n\tpre {\r\n\t\tbackground-color: #eee;\r\n\t\twidth: 100%;\r\n\t\tborder: 1px solid #ccc;\r\n\t\tmax-height: 15em;\r\n\t\toverflow-y: auto;\r\n\t\t\r\n\t\tcode {\r\n\t\t\tbackground-color: transparent; \r\n\t\t\tdisplay: block;\r\n\t\t\tmargin: 0.5em;\r\n\t\t}\r\n\t}\r\n\t&.compact {\r\n\t\tpre {\r\n\t\t\tmax-height: 7em;\r\n\t\t\twidth: auto;\r\n\t\t\tmax-width: 100%;\r\n\t\t}\r\n\t\tp {\r\n\t\t\tmargin: 0.5em 0;\r\n\r\n\t\t\t&:first-child {\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\t\t\t&:last-child {\r\n\t\t\t\tmargin-bottom: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</style>\r\n","import mod from \"-!../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Description.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Description.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Description.vue?vue&type=template&id=06d88d67&\"\nimport script from \"./Description.vue?vue&type=script&lang=js&\"\nexport * from \"./Description.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Description.vue?vue&type=style&index=0&id=06d88d67&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var keys = Object.keys(map).join(\"|\");\n    var replace = getReplacer(map);\n    keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n    var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n    return function (str) { return String(str).replace(re, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    //TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        return map[str.slice(1, -1)];\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    var output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n}\nexports.default = decodeCodePoint;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nfunction singleCharReplacer(c) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n    return data\n        .replace(reXmlChars, singleCharReplacer)\n        .replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\n// Legacy aliases\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/*! http://mths.be/repeat v0.2.0 by @mathias */\nif (!String.prototype.repeat) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar repeat = function(count) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\t// `ToInteger`\n\t\t\tvar n = count ? Number(count) : 0;\n\t\t\tif (n != n) { // better `isNaN`\n\t\t\t\tn = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices\n\t\t\tif (n < 0 || n == Infinity) {\n\t\t\t\tthrow RangeError();\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (n) {\n\t\t\t\tif (n % 2 == 1) {\n\t\t\t\t\tresult += string;\n\t\t\t\t}\n\t\t\t\tif (n > 1) {\n\t\t\t\t\tstring += string;\n\t\t\t\t}\n\t\t\t\tn >>= 1;\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'repeat', {\n\t\t\t\t'value': repeat,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.repeat = repeat;\n\t\t}\n\t}());\n}\n"],"names":["render","_vm","this","_c","_self","staticClass","class","compact","domProps","_s","markup","description","staticRenderFns","isContainer","node","_type","resumeAt","entering","current","next","cur","container","_firstChild","root","_next","_parent","NodeWalker","Node","nodeType","sourcepos","_lastChild","_prev","_sourcepos","_lastLineBlank","_lastLineChecked","_open","_string_content","_literal","_listData","_info","_destination","_title","_isFenced","_fenceChar","_fenceLength","_fenceOffset","_level","_onEnter","_onExit","proto","prototype","Object","defineProperty","get","set","s","type","t","tight","start","n","delimiter","delim","appendChild","child","unlink","prependChild","insertAfter","sibling","insertBefore","walker","_fromCodePoint","C_BACKSLASH","ENTITY","TAGNAME","ATTRIBUTENAME","UNQUOTEDVALUE","SINGLEQUOTEDVALUE","DOUBLEQUOTEDVALUE","ATTRIBUTEVALUE","ATTRIBUTEVALUESPEC","ATTRIBUTE","OPENTAG","CLOSETAG","HTMLCOMMENT","PROCESSINGINSTRUCTION","DECLARATION","CDATA","HTMLTAG","reHtmlTag","RegExp","reBackslashOrAmp","ESCAPABLE","reEntityOrEscapedChar","XMLSPECIAL","reXmlSpecial","unescapeChar","charCodeAt","charAt","unescapeString","test","replace","normalizeURI","uri","encode","err","replaceUnsafeChar","escapeXml","fromCodePoint","_","String","e","RangeError","fromCharCode","stringFromCharCode","floor","Math","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","length","arguments","result","codePoint","Number","isFinite","push","apply","C_NEWLINE","C_ASTERISK","C_UNDERSCORE","C_BACKTICK","C_OPEN_BRACKET","C_CLOSE_BRACKET","C_LESSTHAN","C_BANG","C_AMPERSAND","C_OPEN_PAREN","C_CLOSE_PAREN","C_COLON","C_SINGLEQUOTE","C_DOUBLEQUOTE","ESCAPED_CHAR","rePunctuation","reLinkTitle","reLinkDestinationBraces","reEscapable","reEntityHere","reTicks","reTicksHere","reEllipses","reDash","reEmailAutolink","reAutolink","reSpnl","reWhitespaceChar","reUnicodeWhitespaceChar","reFinalSpace","reInitialSpace","reSpaceAtEndOfLine","reLinkLabel","reMain","normalizeReference","string","slice","trim","toLowerCase","toUpperCase","match","re","m","exec","subject","pos","peek","spnl","parseBackticks","block","ticks","matched","contents","afterOpenTicks","parseBackslash","subj","parseAutolink","dest","parseHtmlTag","scanDelims","cc","char_before","char_after","cc_after","left_flanking","right_flanking","can_open","can_close","after_is_whitespace","after_is_punctuation","before_is_whitespace","before_is_punctuation","numdelims","startpos","handleDelim","res","options","smart","delimiters","origdelims","previous","removeDelimiter","removeDelimitersBetween","bottom","top","processEmphasis","stack_bottom","opener","closer","old_closer","opener_inl","closer_inl","tempstack","use_delims","tmp","opener_found","openers_bottom","odd_match","i","closercc","emph","literal","parseLinkTitle","title","substr","parseLinkDestination","c","savepos","openparens","parseLinkLabel","parseOpenBracket","addBracket","parseBang","parseCloseBracket","is_image","reflabel","brackets","active","removeBracket","image","beforelabel","bracketAfter","link","refmap","destination","previousDelimiter","parseEntity","parseString","chars","enCount","emCount","repeat","parseNewline","lastc","hardbreak","parseReference","rawlabel","matchChars","beforetitle","atLineEnd","normlabel","parseInline","parseInlines","InlineParser","parse","CODE_INDENT","C_TAB","C_GREATERTHAN","C_SPACE","reHtmlBlockOpen","reHtmlBlockClose","reThematicBreak","reMaybeSpecial","reNonSpace","reBulletListMarker","reOrderedListMarker","reATXHeadingMarker","reCodeFence","reClosingCodeFence","reSetextHeadingLine","reLineEnding","isBlank","isSpaceOrTab","ln","endsWithBlankLine","addLine","partiallyConsumedTab","offset","charsToTab","column","tip","currentLine","addChild","tag","blocks","canContain","finalize","lineNumber","column_number","newBlock","parseListMarker","parser","nextc","spacesStartCol","spacesStartOffset","rest","nextNonspace","data","bulletChar","padding","markerOffset","indent","parseInt","advanceNextNonspace","advanceOffset","blank_item","spaces_after_marker","listsMatch","list_data","item_data","closeUnmatchedBlocks","allClosed","oldtip","lastMatchedContainer","parent","document","continue","acceptsLines","list","item","subitem","block_quote","indented","blank","heading","thematic_break","code_block","lastLineLength","content","newlinePos","indexOf","firstLine","info","html_block","_htmlBlockType","paragraph","hasReferenceDefs","inlineParser","blockStarts","level","fenceLength","blockType","b","count","columns","charsToAdvance","nextNonspaceColumn","findNextNonspace","cols","incorporateLine","lastChild","all_matched","doc","matchedLeaf","starts","startsLen","lastLineBlank","cont","above","processInlines","event","Document","input","time","console","lines","split","len","timeEnd","Parser","Renderer","ast","buffer","lastOut","lit","str","cr","out","esc","reUnsafeProtocol","reSafeDataProtocol","potentiallyUnsafe","url","name","attrs","selfclosing","disableTags","attrib","undefined","HtmlRenderer","softbreak","linebreak","safe","strong","grandparent","listTight","tagname","code","info_words","listType","listStart","toString","html_inline","custom_inline","onEnter","onExit","custom_block","att","create","text","reXMLTag","toTagName","XmlRenderer","indentLevel","selfClosing","nodetype","listDelimiter","delimword","props","default","preprocessor","Function","processor","processUrl","Boolean","allowHTML","beforeCreate","methods","prefix","pid","reader","writer","parsed","rendered","linkToProcess","processId","encodeURIComponent","target","startsWith","component","__importDefault","mod","__esModule","exports","value","decodeHTML","decodeHTMLStrict","decodeXML","entities_json_1","legacy_json_1","xml_json_1","decode_codepoint_1","getStrictDecoder","map","keys","join","getReplacer","sorter","a","secondChar","legacy","sort","j","replacer","decode_json_1","decodeCodePoint","output","escape","encodeHTML","encodeXML","inverseXML","getInverseObj","xmlReplacer","getInverseReplacer","getInverse","inverseHTML","htmlReplacer","obj","reduce","inverse","single","multiple","_i","_a","k","end","splice","unshift","reNonASCII","singleCharReplacer","codePointAt","reXmlChars","decode_1","encode_1","decode","decodeStrict","encode_2","decode_2","enumerable","encodeCache","getEncodeCache","exclude","ch","cache","keepEscaped","l","nextCode","defaultChars","componentChars","module","object","$defineProperty","error","TypeError","Infinity"],"sourceRoot":""}
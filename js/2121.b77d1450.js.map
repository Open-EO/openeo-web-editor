{"version":3,"file":"js/2121.b77d1450.js","mappings":"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","sources":["webpack://@openeo/web-editor/src/components/maps/ControlMixin.vue","webpack://@openeo/web-editor/./src/components/maps/ControlMixin.vue?2120","webpack://@openeo/web-editor/./src/components/maps/ControlMixin.vue","webpack://@openeo/web-editor/src/components/maps/GeoJsonMixin.vue","webpack://@openeo/web-editor/./src/components/maps/GeoJsonMixin.vue?c6d3","webpack://@openeo/web-editor/./src/components/maps/GeoJsonMixin.vue","webpack://@openeo/web-editor/./src/components/maps/ProgressControl.vue","webpack://@openeo/web-editor/src/components/maps/ProgressControl.vue","webpack://@openeo/web-editor/./src/components/maps/ProgressControl.vue?c057","webpack://@openeo/web-editor/./src/components/maps/ProgressControl.vue?33a4","webpack://@openeo/web-editor/src/components/maps/MapMixin.vue","webpack://@openeo/web-editor/./src/components/maps/MapMixin.vue?e588","webpack://@openeo/web-editor/./src/components/maps/MapMixin.vue","webpack://@openeo/web-editor/./node_modules/rbush/rbush.min.js","webpack://@openeo/web-editor/./node_modules/ol/tilecoord.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/TileGrid.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/common.js","webpack://@openeo/web-editor/./node_modules/ol/tileurlfunction.js","webpack://@openeo/web-editor/./node_modules/ol/transform.js","webpack://@openeo/web-editor/./node_modules/ol/vec/mat4.js","webpack://@openeo/web-editor/./node_modules/ol/webgl.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/Buffer.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/ContextEventType.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/PostProcessingPass.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/Helper.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/RenderTarget.js","webpack://@openeo/web-editor/./node_modules/ol/worker/webgl.js"],"sourcesContent":["<script>\nimport { Control } from 'ol/control.js';\n\nexport default {\n\tprops: {\n\t\tmap: {\n\t\t\ttype: Object\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tcontrol: null\n\t\t};\n\t},\n\tmounted() {\n\t\tthis.control = new Control({\n\t\t\telement: this.$el\n\t\t});\n\t},\n\twatch: {\n\t\tmap(newMap) {\n\t\t\tif (newMap) {\n\t\t\t\tthis.map.addControl(this.control);\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tgetControl() {\n\t\t\treturn this.control;\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ControlMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ControlMixin.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./ControlMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./ControlMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\nimport Utils from '../../utils.js';\nimport EventBusMixin from '../EventBusMixin.vue';\n\nimport { isEmpty as extentIsEmpty } from 'ol/extent';\nimport { singleClick } from 'ol/events/condition';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Select from 'ol/interaction/Select';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\n// Requires the MapMixin to be included, too.\nexport default {\n\tmixins: [\n\t\tEventBusMixin\n\t],\n\tmethods: {\n\t\taddGeoJson(geojson, selectable = false, title = \"GeoJSON\", fill = true) {\n\t\t\tlet source;\n\t\t\tif (geojson instanceof VectorSource) {\n\t\t\t\tsource = geojson;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsource = this.createGeoJsonSource(geojson, this.map.getView().getProjection());\n\t\t\t}\n\n\t\t\tlet layer = new VectorLayer({title, source});\n\t\t\tif(!fill && this.removeLayerFill) {\n\t\t\t\tthis.removeLayerFill(layer);\n\t\t\t}\n\t\t\tthis.map.addLayer(layer);\n\t\t\tlet extent = source.getExtent();\n\t\t\tif (!extentIsEmpty(extent)) {\n\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions());\n\t\t\t}\n\n\t\t\tif (selectable) {\n\t\t\t\tvar select = new Select({\n\t\t\t\t\thitTolerance: 5,\n\t\t\t\t\tmulti: false,\n\t\t\t\t\tcondition: singleClick,\n\t\t\t\t\tlayers: [\n\t\t\t\t\t\tlayer\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tselect.on('select', this.onSelect);\n\t\t\t\tthis.map.addInteraction(select);\n\t\t\t}\n\n\t\t\treturn layer;\n\t\t},\n\t\tonSelect(event) {\n\t\t\tif (event.selected.length > 0) {\n\t\t\t\tlet feature = event.selected[0];\n\t\t\t\tlet props = Utils.omitFromObject(feature.getProperties(), ['geometry']);\n\t\t\t\tlet title = feature.getId() || \"Feature Properties\";\n\t\t\t\tthis.emit('showDataModal', props, title);\n\t\t\t}\n\t\t},\n\t\tcreateGeoJsonSource(geojson, projection) {\n\t\t\tlet features = [];\n\t\t\tif (Utils.detectGeoJson(geojson)) {\n\t\t\t\tfeatures = (new GeoJSON()).readFeatures(geojson, { featureProjection: projection })\n\t\t\t}\n\t\t\treturn new VectorSource({\n\t\t\t\tfeatures,\n\t\t\t\twrapX: false\n\t\t\t});\n\t\t}\n\t}\n};\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeoJsonMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeoJsonMixin.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./GeoJsonMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./GeoJsonMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show),expression:\"show\"}],staticClass:\"ol-unselectable ol-progress-control\"},[_c('div',{staticClass:\"progress-bar\"},[_c('div',{staticClass:\"progress-bar-inner\",style:({width: _vm.percent})})]),_c('div',{staticClass:\"progress-label\"},[_vm._v(_vm._s(_vm.label))])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div v-show=\"show\" class=\"ol-unselectable ol-progress-control\">\n\t\t<div class=\"progress-bar\">\n\t\t\t<div class=\"progress-bar-inner\" :style=\"{width: percent}\" />\n\t\t</div>\n\t\t<div class=\"progress-label\">{{ label }}</div>\n\t</div>\n</template>\n\n<script>\nimport ControlMixin from './ControlMixin.vue';\n\nexport default {\n\tname: 'ProgressControl',\n\tmixins: [\n\t\tControlMixin\n\t],\n\tdata() {\n\t\treturn {\n\t\t\tloading: 0,\n\t\t\tloaded: 0\n\t\t};\n\t},\n\tcomputed: {\n\t\tshow() {\n\t\t\treturn (this.loading > 0 && this.loaded <= this.loading);\n\t\t},\n\t\tpercent() {\n\t\t\treturn (this.loaded / this.loading * 100).toFixed(1) + '%';\n\t\t},\n\t\tlabel() {\n\t\t\treturn \"Loading Tiles (\" + this.percent + \")\";\n\t\t}\n\t},\n\tmethods: {\n\t\taddLoading() {\n\t\t\tthis.loading++;\n\t\t\tthis.update();\n\t\t},\n\t\taddLoaded() {\n\t\t\tthis.loaded++;\n\t\t\tthis.update();\n\t\t},\n\t\tupdate() {\n\t\t\tif (this.loading === this.loaded) {\n\t\t\t\tthis.loading = 0;\n\t\t\t\tthis.loaded = 0;\n\t\t\t}\n\n\t\t\tif (this.loading === this.loaded) {\n\t\t\t\tthis.loading = 0;\n\t\t\t\tthis.loaded = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.ol-progress-control {\n\topacity: 1;\n\ttransition: opacity 0.4s;\n\tbottom: calc(22px + 1em);\n    left: 8px;\n\tposition: absolute;\n\tbackground-color: rgba(0,60,136,.5);\n\tborder-radius: 4px;\n\tpadding: 2px;\n\twidth: 150px;\n\ttext-align: center;\n}\n.ol-progress-control .progress-label {\n\tfont-size: 10px;\n\tcolor: #fff;\n\tmargin-top: 2px;\n}\n.ol-progress-control .progress-bar {\n\tborder-radius: 4px;\n\tborder: 1px solid #fff;\n\theight: 10px;\n}\n.ol-progress-control .progress-bar-inner {\n\tbackground-color: #fff;\n\theight: 10px;\n\twidth: 0;\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ProgressControl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ProgressControl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ProgressControl.vue?vue&type=template&id=1da4d958&scoped=true&\"\nimport script from \"./ProgressControl.vue?vue&type=script&lang=js&\"\nexport * from \"./ProgressControl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ProgressControl.vue?vue&type=style&index=0&id=1da4d958&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1da4d958\",\n  null\n  \n)\n\nexport default component.exports","<script>\nimport EventBusMixin from '../EventBusMixin.vue';\nimport Utils from '../../utils.js';\n\nimport 'ol/ol.css';\nimport { defaults as defaultControls, FullScreen, ScaleLine } from 'ol/control';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { fromLonLat } from 'ol/proj';\nimport Projection from 'ol/proj/Projection';\nimport ProjManager from './projManager';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\n\nimport 'ol-ext/control/LayerSwitcher.css';\nimport LayerSwitcher from 'ol-ext/control/LayerSwitcher';\n\nimport ProgressControl from './ProgressControl.vue';\n\nlet idCounter = 1;\n\nexport default {\n\tcomponents: {\n\t\tProgressControl\n\t},\n\tmixins: [EventBusMixin],\n\tprops: {\n\t\tshow: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\teditable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tremovableLayers: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tmap: null,\n\t\t\tid: `map_` + idCounter++\n\t\t};\n\t},\n\twatch: {\n\t\tasync show() {\n\t\t\tawait this.showMap();\n\t\t}\n\t},\n\tcomputed: {\n\t\t...Utils.mapState(['userLocation', 'locationZoom']),\n\t},\n\tasync mounted() {\n\t\tawait this.showMap();\n\t},\n\tmethods: {\n\t\tasync showMap() {\n\t\t\tif (this.show) {\n\t\t\t\tawait this.$nextTick();\n\t\t\t\tawait this.renderMap();\n\t\t\t}\n\t\t},\n\t\tasync createMap(opts = 'EPSG:3857') {\n\t\t\tlet view;\n\t\t\tlet viewOpts = {\n\t\t\t\tshowFullExtent: true\n\t\t\t};\n\t\t\tif (typeof opts === 'string') { // A projection code\n\t\t\t\tviewOpts.projection = await ProjManager.get(opts);\n\t\t\t}\n\t\t\telse if (opts instanceof Projection) {\n\t\t\t\tviewOpts.projection = opts;\n\t\t\t}\n\t\t\telse if (opts instanceof View) {\n\t\t\t\tview = opts;\n\t\t\t}\n\t\t\telse if (Utils.isObject(opts)) {\n\t\t\t\tviewOpts = opts;\n\t\t\t}\n\n\t\t\tif (!view) {\n\t\t\t\tview = new View(viewOpts);\n\t\t\t\tif (!view.getCenter()) {\n\t\t\t\t\tview.setCenter(fromLonLat([this.userLocation[1], this.userLocation[0]], view.getProjection()));\n\t\t\t\t}\n\t\t\t\tif (!view.getZoom()) {\n\t\t\t\t\tview.setZoom(this.locationZoom);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.map !== null) {\n\t\t\t\tthis.map.updateSize();\n\t\t\t\tthis.map.render();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar customControls = [\n\t\t\t\tnew FullScreen(),\n\t\t\t\tnew ScaleLine()\n\t\t\t];\n\t\t\tvar mapOptions = {\n\t\t\t\ttarget: this.id,\n\t\t\t\tview\n\t\t\t};\n\t\t\tif (!this.editable) {\n\t\t\t\tmapOptions.interactions = [];\n\t\t\t\tmapOptions.controls = customControls;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmapOptions.controls = defaultControls().extend(customControls);\n\t\t\t}\n\t\t\tthis.map = new Map(mapOptions);\n\n\t\t\tthis.listen('windowResized', this.updateMapSize);\n\t\t\t\n\t\t\tlet layers = this.map.getLayers();\n\t\t\tlayers.on('add', evt => {\n\t\t\t\tlet layer = evt.element;\n\n\t\t\t\tlet events = layer.get('events');\n\t\t\t\tfor(let event in events) {\n\t\t\t\t\tthis.map.on(event, events[event]);\n\t\t\t\t}\n\t\t\t});\n\t\t\tlayers.on('remove', evt => {\n\t\t\t\tlet layer = evt.element;\n\n\t\t\t\tlet events = layer.get('events');\n\t\t\t\tfor(let event in events) {\n\t\t\t\t\tthis.map.un(event, events[event]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\taddLayerSwitcher() {\n\t\t\tthis.map.addControl(new LayerSwitcher({trash: this.removableLayers}));\n\t\t},\n\n\t\taddBasemaps() {\n\t\t\tlet basemapOptions = {\n\t\t\t\topaque: true,\n\t\t\t\tattributionsCollapsible: false,\n\t\t\t\twrapX: false\n\t\t\t};\n\t\t\tlet baselayers = [];\n\t\t\tif (Array.isArray(this.$config.basemaps)) {\n\t\t\t\tlet hasDefault = false;\n\t\t\t\tfor(let opts of this.$config.basemaps) {\n\t\t\t\t\tlet basemap = new XYZ(Object.assign({}, basemapOptions, opts));\n\t\t\t\t\tlet baselayer = new TileLayer({\n\t\t\t\t\t\tsource: this.trackTileProgress(basemap),\n\t\t\t\t\t\tbaseLayer: true,\n\t\t\t\t\t\ttitle: opts.title,\n\t\t\t\t\t\tnoSwitcherDelete: true,\n\t\t\t\t\t\tvisible: !hasDefault\n\t\t\t\t\t});\n\t\t\t\t\tbaselayers.push(baselayer);\n\t\t\t\t\tthis.map.addLayer(baselayer);\n\t\t\t\t\thasDefault = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn baselayers;\n\t\t},\n\n\t\tonShow() {\n\t\t\tthis.listen('windowResized', this.updateMapSize);\n\t\t},\n\t\tonHide() {\n\t\t\tthis.unlisten('windowResized');\n\t\t},\n\n\t\t// To be overridden by implementing components.\n\t\tasync renderMap() {\n\t\t\tawait this.createMap();\n\t\t\tthis.addBasemaps();\n\t\t},\n\n\t\tasync updateMapSize() {\n\t\t\tif (this.map) {\n\t\t\t\tawait this.$nextTick();\n\t\t\t\tthis.map.updateSize();\n\t\t\t}\n\t\t},\n\n\t\taddLayerToMap(layer) {\n\t\t\tlayer.set('userLayer', true);\n\t\t\tthis.map.addLayer(layer);\n\t\t},\n\t\tremoveLayerFromMap(id) {\n\t\t\tlet layer = this.getLayerFromMap(id);\n\t\t\tif (layer) {\n\t\t\t\tthis.map.removeLayer(layer);\n\t\t\t}\n\t\t},\n\t\tgetLayerFromMap(id) {\n\t\t\tlet layers = this.map.getLayers().getArray();\n\t\t\tfor(let layer of layers) {\n\t\t\t\tif (layer.get('id') === id) {\n\t\t\t\t\treturn layer;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tgetVisibleLayers() {\n\t\t\tlet shownLayers = [];\n\t\t\tlet layers = this.map.getLayers().getArray();\n\t\t\tfor(let layer of layers) {\n\t\t\t\tif (layer.get('userLayer') && layer.getVisible()) {\n\t\t\t\t\tshownLayers.push(layer);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn shownLayers;\n\t\t},\n\n\t\tgetFitOptions(paddingPc = 25) {\n\t\t\tlet fitOptions = {};\n\t\t\t// Make a bigger extent visible so that user can get a better overview\n\t\t\tvar size = this.map.getSize();\n\t\t\tif (size && paddingPc > 0) {\n\t\t\t\tfitOptions.padding = [size[0]*paddingPc/100, size[1]*paddingPc/100, size[0]*paddingPc/100, size[1]*paddingPc/100];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfitOptions.padding = [30,30,30,30];\n\t\t\t}\n\t\t\treturn fitOptions;\n\t\t},\n\n\t\ttrackTileProgress(source) {\n\t\t\tif (this.$refs.progress) {\n\t\t\t\tsource.on('tileloadstart', () => {\n\t\t\t\t\tthis.$refs.progress.addLoading();\n\t\t\t\t});\n\t\t\t\tsource.on('tileloadend', () => {\n\t\t\t\t\tthis.$refs.progress.addLoaded();\n\t\t\t\t});\n\t\t\t\tsource.on('tileloaderror', () => {\n\t\t\t\t\tthis.$refs.progress.addLoaded();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn source;\n\t\t},\n\n\t\tfromLonLat(coords) {\n\t\t\treturn fromLonLat(coords, this.map.getView().getProjection());\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapMixin.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./MapMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./MapMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n    var _a = tileKey\n        .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n        .split(',')\n        .map(Number), z = _a[0], x = _a[1], y = _a[2];\n    return getKeyZXY(z, x, y);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : 'top-left';\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { ceil, clamp, floor } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { intersectsLinearRing } from '../geom/flat/intersectsextent.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nvar DECIMALS = 5;\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate|null}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.tmpExtent_ = [0, 0, 0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default|null} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent || this.tmpExtent_);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n     * @return {import(\"../TileRange.js\").default|null} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForTileCoordAndZ = function (tileCoord, z, opt_tileRange) {\n        if (z > this.maxZoom || z < this.minZoom) {\n            return null;\n        }\n        var tileCoordZ = tileCoord[0];\n        var tileCoordX = tileCoord[1];\n        var tileCoordY = tileCoord[2];\n        if (z === tileCoordZ) {\n            return createOrUpdateTileRange(tileCoordX, tileCoordY, tileCoordX, tileCoordY, opt_tileRange);\n        }\n        if (this.zoomFactor_) {\n            var factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n            var minX = Math.floor(tileCoordX * factor);\n            var minY = Math.floor(tileCoordY * factor);\n            if (z < tileCoordZ) {\n                return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n            }\n            var maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n            var maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n            return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n        }\n        var tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n        var tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n            tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n        }\n        else {\n            tileCoordX = floor(tileCoordX, DECIMALS);\n            tileCoordY = floor(tileCoordY, DECIMALS);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n        var tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n            tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n        }\n        else {\n            tileCoordX = floor(tileCoordX, DECIMALS);\n            tileCoordY = floor(tileCoordY, DECIMALS);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n     *     If 0, the nearest resolution will be used.\n     *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n     *     nearest lower resolution (higher Z) will be used. Default is 0.\n     *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n     *\n     * For example to change tile Z at the midpoint of zoom levels\n     * ```js\n     * function(value, high, low) {\n     *   return value - low * Math.sqrt(high / low);\n     * }\n     * ```\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * The tile with the provided tile coordinate intersects the given viewport.\n     * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n     * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n     * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n     */\n    TileGrid.prototype.tileCoordIntersectsViewport = function (tileCoord, viewport) {\n        return intersectsLinearRing(viewport, 0, viewport.length, 2, this.getTileCoordExtent(tileCoord));\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/transform\n */\nimport { WORKER_OFFSCREEN_CANVAS } from './has.js';\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * @type {HTMLElement}\n * @private\n */\nvar transformStringDiv;\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    var transformString = 'matrix(' + mat.join(', ') + ')';\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return transformString;\n    }\n    var node = transformStringDiv || (transformStringDiv = document.createElement('div'));\n    node.style.transform = transformString;\n    return node.style.transform;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/webgl\n */\nimport { SAFARI_BUG_237906 } from './has.js';\nimport { assign } from './obj.js';\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var attributes = assign({\n        preserveDrawingBuffer: true,\n        antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    }, opt_attributes);\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n    if (!supportedExtensions) {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            supportedExtensions = gl.getSupportedExtensions();\n        }\n    }\n    return supportedExtensions;\n}\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER, STATIC_DRAW, STREAM_DRAW, } from '../webgl.js';\nimport { assert } from '../asserts.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n     * Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(type, opt_usage) {\n        /**\n         * @private\n         * @type {Float32Array|Uint32Array}\n         */\n        this.array = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.type = type;\n        assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {number} size Array size\n     */\n    WebGLArrayBuffer.prototype.ofSize = function (size) {\n        this.array = new (getArrayClassForType(this.type))(size);\n    };\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {Array<number>} array Numerical array\n     */\n    WebGLArrayBuffer.prototype.fromArray = function (array) {\n        var arrayClass = getArrayClassForType(this.type);\n        this.array = arrayClass.from\n            ? arrayClass.from(array)\n            : new arrayClass(array);\n    };\n    /**\n     * Populates the buffer with a raw binary array buffer.\n     * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n     * initialized for the same typed array class.\n     */\n    WebGLArrayBuffer.prototype.fromArrayBuffer = function (buffer) {\n        this.array = new (getArrayClassForType(this.type))(buffer);\n    };\n    /**\n     * @return {number} Buffer type.\n     */\n    WebGLArrayBuffer.prototype.getType = function () {\n        return this.type;\n    };\n    /**\n     * Will return null if the buffer was not initialized\n     * @return {Float32Array|Uint32Array} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.array;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage;\n    };\n    /**\n     * Will return 0 if the buffer is not initialized\n     * @return {number} Array size\n     */\n    WebGLArrayBuffer.prototype.getSize = function () {\n        return this.array ? this.array.length : 0;\n    };\n    return WebGLArrayBuffer;\n}());\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n    switch (type) {\n        case ARRAY_BUFFER:\n            return Float32Array;\n        case ELEMENT_ARRAY_BUFFER:\n            return Uint32Array;\n        default:\n            return Float32Array;\n    }\n}\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored',\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nimport { getUid } from '../util.js';\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n  uniform float u_opacity;\\n   \\n  varying vec2 v_texCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetOpacityLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_opacity');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms &&\n            Object.keys(options.uniforms).forEach(function (name) {\n                this.uniforms_.push({\n                    value: options.uniforms[name],\n                    location: gl.getUniformLocation(this.renderTargetProgram_, name),\n                });\n            }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var textureSize = [\n            gl.drawingBufferWidth * this.scaleRatio_,\n            gl.drawingBufferHeight * this.scaleRatio_,\n        ];\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, textureSize[0], textureSize[1]);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== textureSize[0] ||\n            this.renderTargetTextureSize_[1] !== textureSize[1]) {\n            this.renderTargetTextureSize_ = textureSize;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, textureSize[0], textureSize[1], border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [preCompose] Called before composing.\n     * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [postCompose] Called before composing.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass, preCompose, postCompose) {\n        var gl = this.getGL();\n        var size = frameState.size;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        if (!nextPass) {\n            // clear the canvas if we are the first to render to it\n            // and preserveDrawingBuffer is true\n            var canvasId = getUid(gl.canvas);\n            if (!frameState.renderTargets[canvasId]) {\n                var attributes = gl.getContextAttributes();\n                if (attributes && attributes.preserveDrawingBuffer) {\n                    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n                    gl.clear(gl.COLOR_BUFFER_BIT);\n                }\n                frameState.renderTargets[canvasId] = true;\n            }\n        }\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        var opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n        gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n        this.applyUniforms(frameState);\n        if (preCompose) {\n            preCompose(gl, frameState);\n        }\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        if (postCompose) {\n            postCompose(gl, frameState);\n        }\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\".concat(textureSlot)]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { FLOAT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, getContext, } from '../webgl.js';\nimport { clear } from '../obj.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8b30,\n    VERTEX_SHADER: 0x8b31,\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n    TIME: 'u_time',\n    ZOOM: 'u_zoom',\n    RESOLUTION: 'u_resolution',\n};\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport var AttributeType = {\n    UNSIGNED_BYTE: UNSIGNED_BYTE,\n    UNSIGNED_SHORT: UNSIGNED_SHORT,\n    UNSIGNED_INT: UNSIGNED_INT,\n    FLOAT: FLOAT,\n};\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nvar canvasCache = {};\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n    return 'shared/' + key;\n}\nvar uniqueCanvasCacheKeyCount = 0;\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n    var key = 'unique/' + uniqueCanvasCacheKeyCount;\n    uniqueCanvasCacheKeyCount += 1;\n    return key;\n}\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n    var cacheItem = canvasCache[key];\n    if (!cacheItem) {\n        var canvas = document.createElement('canvas');\n        canvas.style.position = 'absolute';\n        canvas.style.left = '0';\n        cacheItem = { users: 0, canvas: canvas };\n        canvasCache[key] = cacheItem;\n    }\n    cacheItem.users += 1;\n    return cacheItem.canvas;\n}\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n    var cacheItem = canvasCache[key];\n    if (!cacheItem) {\n        return;\n    }\n    cacheItem.users -= 1;\n    if (cacheItem.users > 0) {\n        return;\n    }\n    var canvas = cacheItem.canvas;\n    var gl = getContext(canvas);\n    var extension = gl.getExtension('WEBGL_lose_context');\n    if (extension) {\n        extension.loseContext();\n    }\n    delete canvasCache[key];\n}\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes enableAttributes()} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /** @private */\n        _this.boundHandleWebGLContextLost_ = _this.handleWebGLContextLost.bind(_this);\n        /** @private */\n        _this.boundHandleWebGLContextRestored_ =\n            _this.handleWebGLContextRestored.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.canvasCacheKey_ = options.canvasCacheKey\n            ? getSharedCanvasCacheKey(options.canvasCacheKey)\n            : getUniqueCanvasCacheKey();\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = getCanvas(_this.canvasCacheKey_);\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {Object<string, Object>}\n         */\n        _this.extensionCache_ = {};\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        _this.canvas_.addEventListener(ContextEventType.LOST, _this.boundHandleWebGLContextLost_);\n        _this.canvas_.addEventListener(ContextEventType.RESTORED, _this.boundHandleWebGLContextRestored_);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            _this.setUniforms(options.uniforms);\n        }\n        var gl = _this.getGL();\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses\n            ? options.postProcesses.map(function (options) {\n                return new WebGLPostProcessingPass({\n                    webGlContext: gl,\n                    scaleRatio: options.scaleRatio,\n                    vertexShader: options.vertexShader,\n                    fragmentShader: options.fragmentShader,\n                    uniforms: options.uniforms,\n                });\n            })\n            : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.startTime_ = Date.now();\n        return _this;\n    }\n    /**\n     * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n     */\n    WebGLHelper.prototype.setUniforms = function (uniforms) {\n        this.uniforms_ = [];\n        for (var name_1 in uniforms) {\n            this.uniforms_.push({\n                name: name_1,\n                value: uniforms[name_1],\n            });\n        }\n        this.uniformLocations_ = {};\n    };\n    /**\n     * @param {string} canvasCacheKey The canvas cache key.\n     * @return {boolean} The provided key matches the one this helper was constructed with.\n     */\n    WebGLHelper.prototype.canvasCacheKeyMatches = function (canvasCacheKey) {\n        return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n    };\n    /**\n     * Get a WebGL extension.  If the extension is not supported, null is returned.\n     * Extensions are cached after they are enabled for the first time.\n     * @param {string} name The extension name.\n     * @return {Object|null} The extension or null if not supported.\n     */\n    WebGLHelper.prototype.getExtension = function (name) {\n        if (name in this.extensionCache_) {\n            return this.extensionCache_[name];\n        }\n        var extension = this.gl_.getExtension(name);\n        this.extensionCache_[name] = extension;\n        return extension;\n    };\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer,\n            };\n            this.bufferCache_[bufferKey] = bufferCache;\n        }\n        gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (buffer) {\n        var gl = this.getGL();\n        this.bindBuffer(buffer);\n        gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (bufferCacheEntry && !gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * Clean up.\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        this.canvas_.removeEventListener(ContextEventType.LOST, this.boundHandleWebGLContextLost_);\n        this.canvas_.removeEventListener(ContextEventType.RESTORED, this.boundHandleWebGLContextRestored_);\n        releaseCanvas(this.canvasCacheKey_);\n        delete this.gl_;\n        delete this.canvas_;\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Clear the render target & bind it for future draw operations.\n     * This is similar to `prepareDraw`, only post processes will not be applied.\n     * Note: the whole viewport will be drawn to the render target, regardless of its size.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     */\n    WebGLHelper.prototype.prepareDrawToRenderTarget = function (frameState, renderTarget, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var size = renderTarget.getSize();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        this.getExtension('OES_element_index_uint');\n        var elementType = gl.UNSIGNED_INT;\n        var elementSize = 4;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [preCompose] Called before composing.\n     * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [postCompose] Called before composing.\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState, preCompose, postCompose) {\n        // apply post processes using the next one as target\n        for (var i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n            if (i === ii - 1) {\n                this.postProcessPasses_[i].apply(frameState, null, preCompose, postCompose);\n            }\n            else {\n                this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1]);\n            }\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n        this.setUniformFloatValue(DefaultUniform.TIME, (Date.now() - this.startTime_) * 0.001);\n        this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n        this.setUniformFloatValue(DefaultUniform.RESOLUTION, frameState.viewState.resolution);\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement ||\n                value instanceof HTMLImageElement ||\n                value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.prevValue = undefined;\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\".concat(textureSlot)]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                var imageReady = !(value instanceof HTMLImageElement) ||\n                    /** @type {HTMLImageElement} */ (value).complete;\n                if (imageReady && uniform.prevValue !== value) {\n                    uniform.prevValue = value;\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            var message = \"Fragment shader compliation failed: \".concat(gl.getShaderInfoLog(fragmentShader));\n            throw new Error(message);\n        }\n        gl.deleteShader(fragmentShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            var message = \"Vertex shader compilation failed: \".concat(gl.getShaderInfoLog(vertexShader));\n            throw new Error(message);\n        }\n        gl.deleteShader(vertexShader);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            var message = \"GL program linking failed: \".concat(gl.getShaderInfoLog(vertexShader));\n            throw new Error(message);\n        }\n        return program;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a vec4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Array of length 4.\n     */\n    WebGLHelper.prototype.setUniformFloatVec4 = function (uniform, value) {\n        this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n     * internally.\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @private\n     */\n    WebGLHelper.prototype.enableAttributeArray_ = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * Will enable the following attributes to be read from the currently bound buffer,\n     * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n     * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n     * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributes = function (attributes) {\n        var stride = computeAttributesStride(attributes);\n        var offset = 0;\n        for (var i = 0; i < attributes.length; i++) {\n            var attr = attributes[i];\n            this.enableAttributeArray_(attr.name, attr.size, attr.type || FLOAT, stride, offset);\n            offset += attr.size * getByteSizeFromType(attr.type);\n        }\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () { };\n    /**\n     * Will create or reuse a given webgl texture and apply the given size. If no image data\n     * specified, the texture will be empty, otherwise image data will be used and the `size`\n     * parameter will be ignored.\n     * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n     * @param {Array<number>} size Expected size of the texture\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n     * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n     * @return {WebGLTexture} The generated texture\n     * @api\n     */\n    WebGLHelper.prototype.createTexture = function (size, opt_data, opt_texture) {\n        var gl = this.getGL();\n        var texture = opt_texture || gl.createTexture();\n        // set params & size\n        var level = 0;\n        var internalFormat = gl.RGBA;\n        var border = 0;\n        var format = gl.RGBA;\n        var type = gl.UNSIGNED_BYTE;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        if (opt_data) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, opt_data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, size[0], size[1], border, format, type, null);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n    var stride = 0;\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i];\n        stride += attr.size * getByteSizeFromType(attr.type);\n    }\n    return stride;\n}\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n    switch (type) {\n        case AttributeType.UNSIGNED_BYTE:\n            return Uint8Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_SHORT:\n            return Uint16Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_INT:\n            return Uint32Array.BYTES_PER_ELEMENT;\n        case AttributeType.FLOAT:\n        default:\n            return Float32Array.BYTES_PER_ELEMENT;\n    }\n}\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport { equals } from '../array.js';\n// for pixel color reading\nvar tmpArray4 = new Uint8Array(4);\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nvar WebGLRenderTarget = /** @class */ (function () {\n    /**\n     * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n     * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n     */\n    function WebGLRenderTarget(helper, opt_size) {\n        /**\n         * @private\n         * @type {import(\"./Helper.js\").default}\n         */\n        this.helper_ = helper;\n        var gl = helper.getGL();\n        /**\n         * @private\n         * @type {WebGLTexture}\n         */\n        this.texture_ = gl.createTexture();\n        /**\n         * @private\n         * @type {WebGLFramebuffer}\n         */\n        this.framebuffer_ = gl.createFramebuffer();\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.size_ = opt_size || [1, 1];\n        /**\n         * @type {Uint8Array}\n         * @private\n         */\n        this.data_ = new Uint8Array(0);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.dataCacheDirty_ = true;\n        this.updateSize_();\n    }\n    /**\n     * Changes the size of the render target texture. Note: will do nothing if the size\n     * is already the same.\n     * @param {Array<number>} size Expected size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.setSize = function (size) {\n        if (equals(size, this.size_)) {\n            return;\n        }\n        this.size_[0] = size[0];\n        this.size_[1] = size[1];\n        this.updateSize_();\n    };\n    /**\n     * Returns the size of the render target texture\n     * @return {Array<number>} Size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n     * render target into memory, which is an expensive operation.\n     * This content will be kept in cache but should be cleared after each new render.\n     * @api\n     */\n    WebGLRenderTarget.prototype.clearCachedData = function () {\n        this.dataCacheDirty_ = true;\n    };\n    /**\n     * Returns the full content of the frame buffer as a series of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * @return {Uint8Array} Integer array of color values\n     * @api\n     */\n    WebGLRenderTarget.prototype.readAll = function () {\n        if (this.dataCacheDirty_) {\n            var size = this.size_;\n            var gl = this.helper_.getGL();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n            gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.UNSIGNED_BYTE, this.data_);\n            this.dataCacheDirty_ = false;\n        }\n        return this.data_;\n    };\n    /**\n     * Reads one pixel of the frame buffer as an array of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * If x and/or y are outside of existing data, an array filled with 0 is returned.\n     * @param {number} x Pixel coordinate\n     * @param {number} y Pixel coordinate\n     * @return {Uint8Array} Integer array with one color value (4 components)\n     * @api\n     */\n    WebGLRenderTarget.prototype.readPixel = function (x, y) {\n        if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n            tmpArray4[0] = 0;\n            tmpArray4[1] = 0;\n            tmpArray4[2] = 0;\n            tmpArray4[3] = 0;\n            return tmpArray4;\n        }\n        this.readAll();\n        var index = Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n        tmpArray4[0] = this.data_[index * 4];\n        tmpArray4[1] = this.data_[index * 4 + 1];\n        tmpArray4[2] = this.data_[index * 4 + 2];\n        tmpArray4[3] = this.data_[index * 4 + 3];\n        return tmpArray4;\n    };\n    /**\n     * @return {WebGLTexture} Texture to render to\n     */\n    WebGLRenderTarget.prototype.getTexture = function () {\n        return this.texture_;\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer of the render target\n     */\n    WebGLRenderTarget.prototype.getFramebuffer = function () {\n        return this.framebuffer_;\n    };\n    /**\n     * @private\n     */\n    WebGLRenderTarget.prototype.updateSize_ = function () {\n        var size = this.size_;\n        var gl = this.helper_.getGL();\n        this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture_, 0);\n        this.data_ = new Uint8Array(size[0] * size[1] * 4);\n    };\n    return WebGLRenderTarget;\n}());\nexport default WebGLRenderTarget;\n//# sourceMappingURL=RenderTarget.js.map","export function create() {\n    var source = \"const e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");const t=Object(e);for(let e=1,n=arguments.length;e<n;++e){const n=arguments[e];if(null!=n)for(const e in n)n.hasOwnProperty(e)&&(t[e]=n[e])}return t},n=\\\"undefined\\\"!=typeof navigator&&void 0!==navigator.userAgent?navigator.userAgent.toLowerCase():\\\"\\\";n.indexOf(\\\"firefox\\\");-1!==n.indexOf(\\\"safari\\\")&&-1==n.indexOf(\\\"chrom\\\")&&(n.indexOf(\\\"version/15.4\\\")>=0||n.match(/cpu (os|iphone os) 15_4 like mac os x/)),-1!==n.indexOf(\\\"webkit\\\")&&n.indexOf(\\\"edge\\\"),n.indexOf(\\\"macintosh\\\"),\\\"undefined\\\"!=typeof WorkerGlobalScope&&\\\"undefined\\\"!=typeof OffscreenCanvas&&(self,WorkerGlobalScope),function(){let e=!1;try{const n=Object.defineProperty({},\\\"passive\\\",{get:function(){e=!0}});window.addEventListener(\\\"_\\\",null,n),window.removeEventListener(\\\"_\\\",null,n)}catch(e){}}(),new Array(6);const t=\\\"GENERATE_BUFFERS\\\",o=[],r={vertexPosition:0,indexPosition:0};function i(e,n,t,o,r){e[n+0]=t,e[n+1]=o,e[n+2]=r}function s(e,n,t,s,f,c){const l=3+f,a=e[n+0],u=e[n+1],d=o;d.length=f;for(let t=0;t<d.length;t++)d[t]=e[n+2+t];let g=c?c.vertexPosition:0,x=c?c.indexPosition:0;const h=g/l;return i(t,g,a,u,0),d.length&&t.set(d,g+3),g+=l,i(t,g,a,u,1),d.length&&t.set(d,g+3),g+=l,i(t,g,a,u,2),d.length&&t.set(d,g+3),g+=l,i(t,g,a,u,3),d.length&&t.set(d,g+3),g+=l,s[x++]=h,s[x++]=h+1,s[x++]=h+3,s[x++]=h+1,s[x++]=h+2,s[x++]=h+3,r.vertexPosition=g,r.indexPosition=x,r}const f=self;f.onmessage=n=>{const o=n.data;if(o.type===t){const n=3,t=2,r=o.customAttributesCount,i=t+r,c=new Float32Array(o.renderInstructions),l=c.length/i,a=4*l*(r+n),u=new Uint32Array(6*l),d=new Float32Array(a);let g;for(let e=0;e<c.length;e+=i)g=s(c,e,d,u,r,g);const x=e({vertexBuffer:d.buffer,indexBuffer:u.buffer,renderInstructions:c.buffer},o);f.postMessage(x,[d.buffer,u.buffer,c.buffer])}};\";\n    return new Worker(typeof Blob === 'undefined'\n        ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n        : URL.createObjectURL(new Blob([source], { type: 'application/javascript' })));\n}\n//# sourceMappingURL=webgl.js.map"],"names":["props","map","type","data","control","mounted","element","watch","methods","getControl","render","staticRenderFns","component","mixins","EventBusMixin","addGeoJson","source","title","hitTolerance","multi","condition","layers","layer","select","onSelect","createGeoJsonSource","features","featureProjection","wrapX","_vm","this","_c","_self","directives","name","rawName","value","show","expression","staticClass","style","width","percent","_v","_s","label","ControlMixin","loading","loaded","computed","addLoading","addLoaded","update","idCounter","components","ProgressControl","default","editable","removableLayers","id","showFullExtent","viewOpts","view","target","mapOptions","addLayerSwitcher","trash","addBasemaps","opaque","attributionsCollapsible","baseLayer","noSwitcherDelete","visible","baselayers","hasDefault","onShow","onHide","addLayerToMap","removeLayerFromMap","getLayerFromMap","getVisibleLayers","shownLayers","getFitOptions","fitOptions","trackTileProgress","fromLonLat","t","i","module","exports","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","m","max","floor","c","min","p","d","x","length","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","prototype","all","_all","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","createOrUpdate","z","y","opt_tileCoord","undefined","getKeyZXY","getKey","tileCoord","fromKey","key","split","Number","hash","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","getForProjection","projection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","center","getTileCoordCenter","projectionExtent","extentFromProjection","worldWidth","worldsAway","getTileCoordForCoordAndZ","createForExtent","extent","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutions","resolutionsFromExtent","origin","tileSize","createXYZ","opt_options","xyzOptions","getExtent","gridOptions","minZoom","maxZoom","maxResolution","opt_maxResolution","Array","half","getMetersPerUnit","tmpTileCoord","DECIMALS","TileGrid","options","zoomFactor","resolutions_","b","origins","ii","zoomFactor_","origin_","origins_","tileSizes_","tileSizes","tileSize_","extent_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","size","restrictedTileRange","getTileRangeForExtentAndZ","calculateTileRanges_","forEachTileCoord","zoom","callback","j","jj","forEachTileCoordParentTileRange","opt_tileRange","opt_extent","tileCoordExtent","getTileCoordExtent","getOrigin","getResolution","getResolutions","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileRangeExtent","resolution","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","coordinate","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","scale","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","pixelRatio","replace","toString","range","getHeight","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","index","expandUrl","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","String","fromCharCode","stop_1","parseInt","transformStringDiv","tmp_","create","reset","transform","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","setFromArray","rotate","angle","cos","sin","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","determinant","mat","transformString","join","node","document","createElement","fromTransform","mat4","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","CONTEXT_IDS","getContext","canvas","opt_attributes","attributes","preserveDrawingBuffer","antialias","context","BufferUsage","WebGLArrayBuffer","opt_usage","array","usage","ofSize","getArrayClassForType","fromArray","arrayClass","from","fromArrayBuffer","buffer","getType","getArray","getUsage","getSize","Float32Array","Uint32Array","LOST","RESTORED","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","verticesArray","bindBuffer","bufferData","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","Object","keys","forEach","location","bind","getGL","init","frameState","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","level","internalFormat","RGBA","border","format","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","renderTargets","getContextAttributes","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2f","uniform1i","opacity","layerStatesArray","layerIndex","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","ImageData","texture","concat","Uint8Array","isArray","uniform3f","uniform4f","__extends","extendStatics","setPrototypeOf","__proto__","hasOwnProperty","call","TypeError","__","constructor","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","AttributeType","canvasCache","getSharedCanvasCacheKey","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getCanvas","cacheItem","position","left","users","releaseCanvas","extension","getExtension","loseContext","WebGLHelper","_super","_this","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","canvas_","bufferCache_","extensionCache_","currentProgram_","addEventListener","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","setUniforms","postProcessPasses_","postProcesses","shaderCompileErrors_","startTime_","Date","now","name_1","canvasCacheKeyMatches","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","disposeInternal","removeEventListener","prepareDraw","opt_disableAlphaBlend","ZERO","applyFrameState","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getTexture","drawElements","start","end","elementType","elementSize","numItems","offsetInBytes","finalizeDraw","rotation","viewState","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","imageReady","complete","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","message","getShaderInfoLog","Error","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","stride","offset","enableAttributes","computeAttributesStride","attr","getByteSizeFromType","opt_data","opt_texture","Disposable","BYTES_PER_ELEMENT","Uint16Array","tmpArray4","WebGLRenderTarget","helper","opt_size","helper_","texture_","framebuffer_","size_","data_","dataCacheDirty_","updateSize_","setSize","clearCachedData","readAll","readPixels","readPixel","Worker","Blob","Buffer","URL","createObjectURL"],"sourceRoot":""}
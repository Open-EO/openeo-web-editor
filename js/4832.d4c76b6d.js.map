{"version":3,"file":"js/4832.d4c76b6d.js","mappings":"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","sources":["webpack://@openeo/web-editor/src/components/maps/GeoJsonMixin.vue","webpack://@openeo/web-editor/./src/components/maps/GeoJsonMixin.vue?c6d3","webpack://@openeo/web-editor/./src/components/maps/GeoJsonMixin.vue","webpack://@openeo/web-editor/./node_modules/ol/geom/GeometryCollection.js","webpack://@openeo/web-editor/./node_modules/ol/format/Feature.js","webpack://@openeo/web-editor/./node_modules/ol/format/JSONFeature.js","webpack://@openeo/web-editor/./node_modules/ol/format/GeoJSON.js","webpack://@openeo/web-editor/./node_modules/ol/geom/LineString.js","webpack://@openeo/web-editor/./node_modules/ol/geom/MultiLineString.js","webpack://@openeo/web-editor/./node_modules/ol/geom/MultiPoint.js","webpack://@openeo/web-editor/./node_modules/ol/geom/flat/center.js","webpack://@openeo/web-editor/./node_modules/ol/geom/MultiPolygon.js","webpack://@openeo/web-editor/./node_modules/ol/geom/flat/interpolate.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/Select.js"],"sourcesContent":["<script>\nimport Utils from '../../utils.js';\nimport EventBusMixin from '../EventBusMixin.js';\n\nimport { isEmpty as extentIsEmpty } from 'ol/extent';\nimport { singleClick } from 'ol/events/condition';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Select from 'ol/interaction/Select';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\n// Requires the MapMixin to be included, too.\nexport default {\n\tmixins: [\n\t\tEventBusMixin\n\t],\n\tmethods: {\n\t\taddGeoJson(geojson, selectable = false, title = \"GeoJSON\", fill = true) {\n\t\t\tlet source;\n\t\t\tif (geojson instanceof VectorSource) {\n\t\t\t\tsource = geojson;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsource = this.createGeoJsonSource(geojson, this.map.getView().getProjection());\n\t\t\t}\n\n\t\t\tlet layer = new VectorLayer({title, source});\n\t\t\tif(!fill && this.removeLayerFill) {\n\t\t\t\tthis.removeLayerFill(layer);\n\t\t\t}\n\t\t\tthis.map.addLayer(layer);\n\t\t\tlet extent = source.getExtent();\n\t\t\tif (!extentIsEmpty(extent)) {\n\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions());\n\t\t\t}\n\n\t\t\tif (selectable) {\n\t\t\t\tvar select = new Select({\n\t\t\t\t\thitTolerance: 5,\n\t\t\t\t\tmulti: false,\n\t\t\t\t\tcondition: singleClick,\n\t\t\t\t\tlayers: [\n\t\t\t\t\t\tlayer\n\t\t\t\t\t]\n\t\t\t\t});\n\t\t\t\tselect.on('select', this.onSelect);\n\t\t\t\tthis.map.addInteraction(select);\n\t\t\t}\n\n\t\t\treturn layer;\n\t\t},\n\t\tonSelect(event) {\n\t\t\tif (event.selected.length > 0) {\n\t\t\t\tlet feature = event.selected[0];\n\t\t\t\tlet props = Utils.omitFromObject(feature.getProperties(), ['geometry']);\n\t\t\t\tlet title = feature.getId() || \"Feature Properties\";\n\t\t\t\tthis.broadcast('showDataModal', props, title);\n\t\t\t}\n\t\t},\n\t\tcreateGeoJsonSource(geojson, projection) {\n\t\t\tlet features = [];\n\t\t\tif (Utils.detectGeoJson(geojson)) {\n\t\t\t\tfeatures = (new GeoJSON()).readFeatures(geojson, { featureProjection: projection })\n\t\t\t}\n\t\t\treturn new VectorSource({\n\t\t\t\tfeatures,\n\t\t\t\twrapX: false\n\t\t\t});\n\t\t}\n\t}\n};\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeoJsonMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeoJsonMixin.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./GeoJsonMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./GeoJsonMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>} [opt_geometries] Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return 'GeometryCollection';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.dataProjection = undefined;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.defaultFeatureProjection = undefined;\n        /**\n         * A list media types supported by the format in descending order of preference.\n         * @type {Array<string>}\n         */\n        this.supportedMediaTypes = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {Type} The format type.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./Feature.js\").Type} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return 'json';\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            /**\n             * @type {import(\"../proj/Projection.js\").default}\n             */\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        _this.supportedMediaTypes = [\n            'application/geo+json',\n            'application/vnd.geo+json',\n        ];\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case 'Point': {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case 'LineString': {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case 'Polygon': {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case 'MultiPoint': {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case 'MultiLineString': {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case 'MultiPolygon': {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case 'GeometryCollection': {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object['type']);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case 'Point': {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case 'LineString': {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case 'Polygon': {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case 'MultiPoint': {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case 'MultiLineString': {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case 'MultiPolygon': {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case 'GeometryCollection': {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case 'Circle': {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return 'LineString';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return 'MultiLineString';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout} [opt_layout] Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return 'MultiPoint';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return 'MultiPolygon';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select',\n};\n/**\n * A function that takes an {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {SelectOnSignature<void>}\n         */\n        _this.un;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         */\n        _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n        /**\n         * @private\n         */\n        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition\n            ? options.removeCondition\n            : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition\n            ? options.toggleCondition\n            : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ =\n            options.style !== undefined ? options.style : getDefaultStyleFunction();\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @return {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n     * a selected feature.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return /** @type {import('../layer/Vector.js').default} */ (this.featureLayerAssociation_[getUid(feature)]);\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.restorePreviousStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n            if (this.style_) {\n                this.features_.forEach(this.applySelectedStyle_.bind(this));\n            }\n        }\n        else {\n            this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.applySelectedStyle_(feature);\n        }\n        if (!this.getLayer(feature)) {\n            var layer = /** @type {VectorLayer} */ (this.getMap()\n                .getAllLayers()\n                .find(function (layer) {\n                if (layer instanceof VectorLayer &&\n                    layer.getSource() &&\n                    layer.getSource().hasFeature(feature)) {\n                    return layer;\n                }\n            }));\n            if (layer) {\n                this.addFeatureLayerAssociation_(feature, layer);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.restorePreviousStyle_(feature);\n        }\n    };\n    /**\n     * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n     */\n    Select.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.applySelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        if (!(key in originalFeatureStyles)) {\n            originalFeatureStyles[key] = feature.getStyle();\n        }\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.restorePreviousStyle_ = function (feature) {\n        var interactions = this.getMap().getInteractions().getArray();\n        for (var i = interactions.length - 1; i >= 0; --i) {\n            var interaction = interactions[i];\n            if (interaction !== this &&\n                interaction instanceof Select &&\n                interaction.getStyle() &&\n                interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n                feature.setStyle(interaction.getStyle());\n                return;\n            }\n        }\n        var key = getUid(feature);\n        feature.setStyle(originalFeatureStyles[key]);\n        delete originalFeatureStyles[key];\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n     * selected state of features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {Select}\n     */\n    Select.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var add = this.addCondition_(mapBrowserEvent);\n        var remove = this.removeCondition_(mapBrowserEvent);\n        var toggle = this.toggleCondition_(mapBrowserEvent);\n        var set = !add && !remove && !toggle;\n        var map = mapBrowserEvent.map;\n        var features = this.getFeatures();\n        var deselected = [];\n        var selected = [];\n        if (set) {\n            // Replace the currently selected feature(s) with the feature(s) at the\n            // pixel, or clear the selected feature(s) if there is no feature at\n            // the pixel.\n            clear(this.featureLayerAssociation_);\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    this.addFeatureLayerAssociation_(feature, layer);\n                    selected.push(feature);\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var i = features.getLength() - 1; i >= 0; --i) {\n                var feature = features.item(i);\n                var index = selected.indexOf(feature);\n                if (index > -1) {\n                    // feature is already selected\n                    selected.splice(index, 1);\n                }\n                else {\n                    features.remove(feature);\n                    deselected.push(feature);\n                }\n            }\n            if (selected.length !== 0) {\n                features.extend(selected);\n            }\n        }\n        else {\n            // Modify the currently selected feature(s).\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    if ((add || toggle) && !includes(features.getArray(), feature)) {\n                        this.addFeatureLayerAssociation_(feature, layer);\n                        selected.push(feature);\n                    }\n                    else if ((remove || toggle) &&\n                        includes(features.getArray(), feature)) {\n                        deselected.push(feature);\n                        this.removeFeatureLayerAssociation_(feature);\n                    }\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var j = deselected.length - 1; j >= 0; --j) {\n                features.remove(deselected[j]);\n            }\n            features.extend(selected);\n        }\n        if (selected.length > 0 || deselected.length > 0) {\n            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n        }\n        return true;\n    };\n    return Select;\n}(Interaction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles['Polygon'], styles['LineString']);\n    extend(styles['GeometryCollection'], styles['LineString']);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map"],"names":["mixins","EventBusMixin","methods","addGeoJson","source","title","hitTolerance","multi","condition","layers","layer","select","onSelect","createGeoJsonSource","features","featureProjection","wrapX","render","staticRenderFns","component","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","GeometryCollection","_super","opt_geometries","_this","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","forEach","length","i","ii","push","EventType","changed","clone","geometryCollection","setGeometries","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","geometries","containsXY","computeExtent","extent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","getType","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","geometry","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","isEmpty","rotate","angle","anchor","scale","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","Geometry","clonedGeometries","FeatureFormat","dataProjection","undefined","defaultFeatureProjection","supportedMediaTypes","getReadOptions","opt_options","options","readProjection","getUnits","Units","setWorldExtent","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","transform","decimals","power_1","Math","pow","coordinates","round","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GeoJSON","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","Feature","setGeometryName","setGeometry","setId","setProperties","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","projection","crs","properties","id","getId","hasProperties","getProperties","getGeometry","getGeometryName","objects","type","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","Error","map","Point","LineString","MultiLineString","MultiPoint","MultiPolygon","Polygon","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","getCoordinates","right","rightHanded","opt_layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","isArray","setCoordinates","setFlatCoordinates","appendCoordinate","coordinate","flatCoordinates","slice","lineString","layout","sqrt","stride","forEachSegment","callback","getCoordinateAtM","m","opt_extrapolate","extrapolate","getCoordinateAt","fraction","opt_dest","getLength","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","opt_ends","ends_","getLayout","lineStrings","ends","getFlatCoordinates","appendLineString","multiLineString","opt_interpolate","interpolate","getEnds","getLineString","index","getLineStrings","offset","end","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","point","multiPoint","squaredDistance","j","getPoint","n","getPoints","points","linearRingss","endss","flatCenters","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","polygons","polygon","jj","appendPolygon","len","newEndss","multiPolygon","getOrientedFlatCoordinates","getArea","opt_right","orient","inflate","getEndss","getFlatInteriorPoints","getInteriorPoints","GeometryLayout","simplifiedEndss","getPolygon","prevEnds","getPolygons","deflate","lastEnds","SimpleGeometry","interpolatePoint","opt_dimension","o","t","x1","y1","length_1","cumulativeLengths","x2","y2","target","dimension","dest","NaN","lineStringCoordinateAtM","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","SelectEventType","SELECT","SelectEvent","selected","deselected","mapBrowserEvent","originalFeatureStyles","Select","on","once","un","layerFilter","boundAddFeature_","addFeature_","bind","boundRemoveFeature_","removeFeature_","condition_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","filter_","filter","hitTolerance_","style_","style","getDefaultStyleFunction","features_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getFeatures","getHitTolerance","getLayer","setHitTolerance","setMap","currentMap","getMap","restorePreviousStyle_","addEventListener","applySelectedStyle_","removeEventListener","evt","element","getAllLayers","find","getSource","hasFeature","getStyle","key","setStyle","interactions","getInteractions","getArray","interaction","lastIndexOf","removeFeatureLayerAssociation_","handleEvent","add","remove","toggle","set","forEachFeatureAtPixel","pixel","item","indexOf","splice","extend","dispatchEvent","styles"],"sourceRoot":""}
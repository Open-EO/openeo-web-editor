{"version":3,"file":"js/chunk-vendors-dcad33aa.d323c593.js","mappings":";;;;;;;AAUA,IAAIA,EAAS,EAAQ,OACjBC,EAAU,EAAQ,KAClBC,EACiB,oBAAXC,QAAkD,oBAAlBA,OAAO,OAC3CA,OAAO,OAAO,8BACd,KAENC,EAAQC,OAASA,EACjBD,EAAQE,WAAaA,EACrBF,EAAQG,kBAAoB,GAE5B,IAAIC,EAAe,WA2BnB,SAASC,IAEP,IACE,IAAIC,EAAM,IAAIC,WAAW,GACrBC,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAG,GAG3C,OAFAC,OAAOC,eAAeH,EAAOD,WAAWK,WACxCF,OAAOC,eAAeL,EAAKE,GACN,KAAdF,EAAIG,KACb,CAAE,MAAOI,GACP,OAAO,CACT,CACF,CAkBA,SAASC,EAAcC,GACrB,GAAIA,EAASX,EACX,MAAM,IAAIY,WAAW,cAAgBD,EAAS,kCAGhD,IAAIE,EAAM,IAAIV,WAAWQ,GAEzB,OADAL,OAAOC,eAAeM,EAAKhB,EAAOW,WAC3BK,CACT,CAYA,SAAShB,EAAQiB,EAAKC,EAAkBJ,GAEtC,GAAmB,kBAARG,EAAkB,CAC3B,GAAgC,kBAArBC,EACT,MAAM,IAAIC,UACR,sEAGJ,OAAOC,EAAYH,EACrB,CACA,OAAOI,EAAKJ,EAAKC,EAAkBJ,EACrC,CAIA,SAASO,EAAMC,EAAOJ,EAAkBJ,GACtC,GAAqB,kBAAVQ,EACT,OAAOC,EAAWD,EAAOJ,GAG3B,GAAIM,YAAYC,OAAOH,GACrB,OAAOI,EAAcJ,GAGvB,GAAa,MAATA,EACF,MAAM,IAAIH,UACR,yHACiDG,GAIrD,GAAIK,EAAWL,EAAOE,cACjBF,GAASK,EAAWL,EAAMM,OAAQJ,aACrC,OAAOK,EAAgBP,EAAOJ,EAAkBJ,GAGlD,GAAiC,qBAAtBgB,oBACNH,EAAWL,EAAOQ,oBAClBR,GAASK,EAAWL,EAAMM,OAAQE,oBACrC,OAAOD,EAAgBP,EAAOJ,EAAkBJ,GAGlD,GAAqB,kBAAVQ,EACT,MAAM,IAAIH,UACR,yEAIJ,IAAIY,EAAUT,EAAMS,SAAWT,EAAMS,UACrC,GAAe,MAAXA,GAAmBA,IAAYT,EACjC,OAAOtB,EAAOqB,KAAKU,EAASb,EAAkBJ,GAGhD,IAAIkB,EAAIC,EAAWX,GACnB,GAAIU,EAAG,OAAOA,EAEd,GAAsB,qBAAXlC,QAAgD,MAAtBA,OAAOoC,aACH,oBAA9BZ,EAAMxB,OAAOoC,aACtB,OAAOlC,EAAOqB,KACZC,EAAMxB,OAAOoC,aAAa,UAAWhB,EAAkBJ,GAI3D,MAAM,IAAIK,UACR,yHACiDG,EAErD,CAmBA,SAASa,EAAYC,GACnB,GAAoB,kBAATA,EACT,MAAM,IAAIjB,UAAU,0CACf,GAAIiB,EAAO,EAChB,MAAM,IAAIrB,WAAW,cAAgBqB,EAAO,iCAEhD,CAEA,SAASC,EAAOD,EAAME,EAAMC,GAE1B,OADAJ,EAAWC,GACPA,GAAQ,EACHvB,EAAauB,QAETI,IAATF,EAIyB,kBAAbC,EACV1B,EAAauB,GAAME,KAAKA,EAAMC,GAC9B1B,EAAauB,GAAME,KAAKA,GAEvBzB,EAAauB,EACtB,CAUA,SAAShB,EAAagB,GAEpB,OADAD,EAAWC,GACJvB,EAAauB,EAAO,EAAI,EAAoB,EAAhBK,EAAQL,GAC7C,CAeA,SAASb,EAAYmB,EAAQH,GAK3B,GAJwB,kBAAbA,GAAsC,KAAbA,IAClCA,EAAW,SAGRvC,EAAO2C,WAAWJ,GACrB,MAAM,IAAIpB,UAAU,qBAAuBoB,GAG7C,IAAIzB,EAAwC,EAA/B8B,EAAWF,EAAQH,GAC5BvB,EAAMH,EAAaC,GAEnB+B,EAAS7B,EAAI8B,MAAMJ,EAAQH,GAS/B,OAPIM,IAAW/B,IAIbE,EAAMA,EAAI+B,MAAM,EAAGF,IAGd7B,CACT,CAEA,SAASgC,EAAeC,GAGtB,IAFA,IAAInC,EAASmC,EAAMnC,OAAS,EAAI,EAA4B,EAAxB2B,EAAQQ,EAAMnC,QAC9CE,EAAMH,EAAaC,GACdoC,EAAI,EAAGA,EAAIpC,EAAQoC,GAAK,EAC/BlC,EAAIkC,GAAgB,IAAXD,EAAMC,GAEjB,OAAOlC,CACT,CAEA,SAASU,EAAeyB,GACtB,GAAIxB,EAAWwB,EAAW7C,YAAa,CACrC,IAAI8C,EAAO,IAAI9C,WAAW6C,GAC1B,OAAOtB,EAAgBuB,EAAKxB,OAAQwB,EAAKC,WAAYD,EAAKR,WAC5D,CACA,OAAOI,EAAcG,EACvB,CAEA,SAAStB,EAAiBoB,EAAOI,EAAYvC,GAC3C,GAAIuC,EAAa,GAAKJ,EAAML,WAAaS,EACvC,MAAM,IAAItC,WAAW,wCAGvB,GAAIkC,EAAML,WAAaS,GAAcvC,GAAU,GAC7C,MAAM,IAAIC,WAAW,wCAGvB,IAAIC,EAYJ,OAVEA,OADiBwB,IAAfa,QAAuCb,IAAX1B,EACxB,IAAIR,WAAW2C,QACDT,IAAX1B,EACH,IAAIR,WAAW2C,EAAOI,GAEtB,IAAI/C,WAAW2C,EAAOI,EAAYvC,GAI1CL,OAAOC,eAAeM,EAAKhB,EAAOW,WAE3BK,CACT,CAEA,SAASiB,EAAYqB,GACnB,GAAItD,EAAOuD,SAASD,GAAM,CACxB,IAAIE,EAA4B,EAAtBf,EAAQa,EAAIxC,QAClBE,EAAMH,EAAa2C,GAEvB,OAAmB,IAAfxC,EAAIF,QAIRwC,EAAIF,KAAKpC,EAAK,EAAG,EAAGwC,GAHXxC,CAKX,CAEA,YAAmBwB,IAAfc,EAAIxC,OACoB,kBAAfwC,EAAIxC,QAAuB2C,EAAYH,EAAIxC,QAC7CD,EAAa,GAEfmC,EAAcM,GAGN,WAAbA,EAAII,MAAqBC,MAAMC,QAAQN,EAAIO,MACtCb,EAAcM,EAAIO,WAD3B,CAGF,CAEA,SAASpB,EAAS3B,GAGhB,GAAIA,GAAUX,EACZ,MAAM,IAAIY,WAAW,0DACaZ,EAAa2D,SAAS,IAAM,UAEhE,OAAgB,EAAThD,CACT,CAEA,SAASb,EAAYa,GAInB,OAHKA,GAAUA,IACbA,EAAS,GAEJd,EAAOqC,OAAOvB,EACvB,CA8FA,SAAS8B,EAAYF,EAAQH,GAC3B,GAAIvC,EAAOuD,SAASb,GAClB,OAAOA,EAAO5B,OAEhB,GAAIU,YAAYC,OAAOiB,IAAWf,EAAWe,EAAQlB,aACnD,OAAOkB,EAAOE,WAEhB,GAAsB,kBAAXF,EACT,MAAM,IAAIvB,UACR,kGAC0BuB,GAI9B,IAAIc,EAAMd,EAAO5B,OACbiD,EAAaC,UAAUlD,OAAS,IAAsB,IAAjBkD,UAAU,GACnD,IAAKD,GAAqB,IAARP,EAAW,OAAO,EAIpC,IADA,IAAIS,GAAc,IAEhB,OAAQ1B,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOiB,EACT,IAAK,OACL,IAAK,QACH,OAAOU,EAAYxB,GAAQ5B,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAAN0C,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOW,EAAczB,GAAQ5B,OAC/B,QACE,GAAImD,EACF,OAAOF,GAAa,EAAIG,EAAYxB,GAAQ5B,OAE9CyB,GAAY,GAAKA,GAAU6B,cAC3BH,GAAc,EAGtB,CAGA,SAASI,EAAc9B,EAAU+B,EAAOC,GACtC,IAAIN,GAAc,EAclB,SALczB,IAAV8B,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQE,KAAK1D,OACf,MAAO,GAOT,SAJY0B,IAAR+B,GAAqBA,EAAMC,KAAK1D,UAClCyD,EAAMC,KAAK1D,QAGTyD,GAAO,EACT,MAAO,GAOT,GAHAA,KAAS,EACTD,KAAW,EAEPC,GAAOD,EACT,MAAO,GAGJ/B,IAAUA,EAAW,QAE1B,MAAO,EACL,OAAQA,GACN,IAAK,MACH,OAAOkC,EAASD,KAAMF,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOG,EAAUF,KAAMF,EAAOC,GAEhC,IAAK,QACH,OAAOI,EAAWH,KAAMF,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOK,EAAYJ,KAAMF,EAAOC,GAElC,IAAK,SACH,OAAOM,EAAYL,KAAMF,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOO,EAAaN,KAAMF,EAAOC,GAEnC,QACE,GAAIN,EAAa,MAAM,IAAI9C,UAAU,qBAAuBoB,GAC5DA,GAAYA,EAAW,IAAI6B,cAC3BH,GAAc,EAGtB,CAUA,SAASc,EAAM/C,EAAGgD,EAAGC,GACnB,IAAI/B,EAAIlB,EAAEgD,GACVhD,EAAEgD,GAAKhD,EAAEiD,GACTjD,EAAEiD,GAAK/B,CACT,CA2IA,SAASgC,EAAsBtD,EAAQuD,EAAK9B,EAAYd,EAAU6C,GAEhE,GAAsB,IAAlBxD,EAAOd,OAAc,OAAQ,EAmBjC,GAhB0B,kBAAfuC,GACTd,EAAWc,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACVI,EAAYJ,KAEdA,EAAa+B,EAAM,EAAKxD,EAAOd,OAAS,GAItCuC,EAAa,IAAGA,EAAazB,EAAOd,OAASuC,GAC7CA,GAAczB,EAAOd,OAAQ,CAC/B,GAAIsE,EAAK,OAAQ,EACZ/B,EAAazB,EAAOd,OAAS,CACpC,MAAO,GAAIuC,EAAa,EAAG,CACzB,IAAI+B,EACC,OAAQ,EADJ/B,EAAa,CAExB,CAQA,GALmB,kBAAR8B,IACTA,EAAMnF,EAAOqB,KAAK8D,EAAK5C,IAIrBvC,EAAOuD,SAAS4B,GAElB,OAAmB,IAAfA,EAAIrE,QACE,EAEHuE,EAAazD,EAAQuD,EAAK9B,EAAYd,EAAU6C,GAClD,GAAmB,kBAARD,EAEhB,OADAA,GAAY,IACgC,oBAAjC7E,WAAWK,UAAU2E,QAC1BF,EACK9E,WAAWK,UAAU2E,QAAQC,KAAK3D,EAAQuD,EAAK9B,GAE/C/C,WAAWK,UAAU6E,YAAYD,KAAK3D,EAAQuD,EAAK9B,GAGvDgC,EAAazD,EAAQ,CAACuD,GAAM9B,EAAYd,EAAU6C,GAG3D,MAAM,IAAIjE,UAAU,uCACtB,CAEA,SAASkE,EAAchF,EAAK8E,EAAK9B,EAAYd,EAAU6C,GACrD,IA0BIlC,EA1BAuC,EAAY,EACZC,EAAYrF,EAAIS,OAChB6E,EAAYR,EAAIrE,OAEpB,QAAiB0B,IAAbD,IACFA,EAAWqD,OAAOrD,GAAU6B,cACX,SAAb7B,GAAoC,UAAbA,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIlC,EAAIS,OAAS,GAAKqE,EAAIrE,OAAS,EACjC,OAAQ,EAEV2E,EAAY,EACZC,GAAa,EACbC,GAAa,EACbtC,GAAc,CAChB,CAGF,SAASwC,EAAM7E,EAAKkC,GAClB,OAAkB,IAAduC,EACKzE,EAAIkC,GAEJlC,EAAI8E,aAAa5C,EAAIuC,EAEhC,CAGA,GAAIL,EAAK,CACP,IAAIW,GAAc,EAClB,IAAK7C,EAAIG,EAAYH,EAAIwC,EAAWxC,IAClC,GAAI2C,EAAKxF,EAAK6C,KAAO2C,EAAKV,GAAqB,IAAhBY,EAAoB,EAAI7C,EAAI6C,IAEzD,IADoB,IAAhBA,IAAmBA,EAAa7C,GAChCA,EAAI6C,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmB7C,GAAKA,EAAI6C,GAChCA,GAAc,CAGpB,MAEE,IADI1C,EAAasC,EAAYD,IAAWrC,EAAaqC,EAAYC,GAC5DzC,EAAIG,EAAYH,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAI8C,GAAQ,EACHC,EAAI,EAAGA,EAAIN,EAAWM,IAC7B,GAAIJ,EAAKxF,EAAK6C,EAAI+C,KAAOJ,EAAKV,EAAKc,GAAI,CACrCD,GAAQ,EACR,KACF,CAEF,GAAIA,EAAO,OAAO9C,CACpB,CAGF,OAAQ,CACV,CAcA,SAASgD,EAAUlF,EAAK0B,EAAQyD,EAAQrF,GACtCqF,EAASC,OAAOD,IAAW,EAC3B,IAAIE,EAAYrF,EAAIF,OAASqF,EACxBrF,GAGHA,EAASsF,OAAOtF,GACZA,EAASuF,IACXvF,EAASuF,IAJXvF,EAASuF,EAQX,IAAIC,EAAS5D,EAAO5B,OAEhBA,EAASwF,EAAS,IACpBxF,EAASwF,EAAS,GAEpB,IAAK,IAAIpD,EAAI,EAAGA,EAAIpC,IAAUoC,EAAG,CAC/B,IAAIqD,EAASC,SAAS9D,EAAO+D,OAAW,EAAJvD,EAAO,GAAI,IAC/C,GAAIO,EAAY8C,GAAS,OAAOrD,EAChClC,EAAImF,EAASjD,GAAKqD,CACpB,CACA,OAAOrD,CACT,CAEA,SAASwD,EAAW1F,EAAK0B,EAAQyD,EAAQrF,GACvC,OAAO6F,EAAWzC,EAAYxB,EAAQ1B,EAAIF,OAASqF,GAASnF,EAAKmF,EAAQrF,EAC3E,CAEA,SAAS8F,EAAY5F,EAAK0B,EAAQyD,EAAQrF,GACxC,OAAO6F,EAAWE,EAAanE,GAAS1B,EAAKmF,EAAQrF,EACvD,CAEA,SAASgG,EAAa9F,EAAK0B,EAAQyD,EAAQrF,GACzC,OAAO6F,EAAWxC,EAAczB,GAAS1B,EAAKmF,EAAQrF,EACxD,CAEA,SAASiG,EAAW/F,EAAK0B,EAAQyD,EAAQrF,GACvC,OAAO6F,EAAWK,EAAetE,EAAQ1B,EAAIF,OAASqF,GAASnF,EAAKmF,EAAQrF,EAC9E,CA8EA,SAAS+D,EAAa7D,EAAKsD,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQvD,EAAIF,OACtBnB,EAAOsH,cAAcjG,GAErBrB,EAAOsH,cAAcjG,EAAI+B,MAAMuB,EAAOC,GAEjD,CAEA,SAASG,EAAW1D,EAAKsD,EAAOC,GAC9BA,EAAM2C,KAAKC,IAAInG,EAAIF,OAAQyD,GAC3B,IAAI6C,EAAM,GAENlE,EAAIoB,EACR,MAAOpB,EAAIqB,EAAK,CACd,IAWM8C,EAAYC,EAAWC,EAAYC,EAXrCC,EAAYzG,EAAIkC,GAChBwE,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAIvE,EAAIyE,GAAoBpD,EAG1B,OAAQoD,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EACHJ,EAAarG,EAAIkC,EAAI,GACO,OAAV,IAAbmE,KACHG,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,EACzCG,EAAgB,MAClBE,EAAYF,IAGhB,MACF,KAAK,EACHH,EAAarG,EAAIkC,EAAI,GACrBoE,EAAYtG,EAAIkC,EAAI,GACQ,OAAV,IAAbmE,IAAsD,OAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,EACrEE,EAAgB,OAAUA,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,IAGhB,MACF,KAAK,EACHH,EAAarG,EAAIkC,EAAI,GACrBoE,EAAYtG,EAAIkC,EAAI,GACpBqE,EAAavG,EAAIkC,EAAI,GACO,OAAV,IAAbmE,IAAsD,OAAV,IAAZC,IAAsD,OAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,EAClGC,EAAgB,OAAUA,EAAgB,UAC5CE,EAAYF,IAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAIQ,KAAKF,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAIQ,KAAKF,GACTxE,GAAKyE,CACP,CAEA,OAAOE,EAAsBT,EAC/B,CA3+BArH,EAAQ+H,WAAa3H,EAgBrBH,EAAO+H,oBAAsB3H,IAExBJ,EAAO+H,qBAA0C,qBAAZC,SACb,oBAAlBA,QAAQC,OACjBD,QAAQC,MACN,iJAkBJxH,OAAOyH,eAAelI,EAAOW,UAAW,SAAU,CAChDwH,YAAY,EACZC,IAAK,WACH,GAAKpI,EAAOuD,SAASiB,MACrB,OAAOA,KAAK5C,MACd,IAGFnB,OAAOyH,eAAelI,EAAOW,UAAW,SAAU,CAChDwH,YAAY,EACZC,IAAK,WACH,GAAKpI,EAAOuD,SAASiB,MACrB,OAAOA,KAAKnB,UACd,IAoCFrD,EAAOqI,SAAW,KAgElBrI,EAAOqB,KAAO,SAAUC,EAAOJ,EAAkBJ,GAC/C,OAAOO,EAAKC,EAAOJ,EAAkBJ,EACvC,EAIAL,OAAOC,eAAeV,EAAOW,UAAWL,WAAWK,WACnDF,OAAOC,eAAeV,EAAQM,YA8B9BN,EAAOqC,MAAQ,SAAUD,EAAME,EAAMC,GACnC,OAAOF,EAAMD,EAAME,EAAMC,EAC3B,EAUAvC,EAAOoB,YAAc,SAAUgB,GAC7B,OAAOhB,EAAYgB,EACrB,EAIApC,EAAOsI,gBAAkB,SAAUlG,GACjC,OAAOhB,EAAYgB,EACrB,EA6GApC,EAAOuD,SAAW,SAAmBvB,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAEuG,WACpBvG,IAAMhC,EAAOW,SACjB,EAEAX,EAAOwI,QAAU,SAAkBC,EAAGzG,GAGpC,GAFIL,EAAW8G,EAAGnI,cAAamI,EAAIzI,EAAOqB,KAAKoH,EAAGA,EAAEtC,OAAQsC,EAAE7F,aAC1DjB,EAAWK,EAAG1B,cAAa0B,EAAIhC,EAAOqB,KAAKW,EAAGA,EAAEmE,OAAQnE,EAAEY,cACzD5C,EAAOuD,SAASkF,KAAOzI,EAAOuD,SAASvB,GAC1C,MAAM,IAAIb,UACR,yEAIJ,GAAIsH,IAAMzG,EAAG,OAAO,EAKpB,IAHA,IAAI0G,EAAID,EAAE3H,OACN6H,EAAI3G,EAAElB,OAEDoC,EAAI,EAAGM,EAAM0D,KAAKC,IAAIuB,EAAGC,GAAIzF,EAAIM,IAAON,EAC/C,GAAIuF,EAAEvF,KAAOlB,EAAEkB,GAAI,CACjBwF,EAAID,EAAEvF,GACNyF,EAAI3G,EAAEkB,GACN,KACF,CAGF,OAAIwF,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EAEA1I,EAAO2C,WAAa,SAAqBJ,GACvC,OAAQqD,OAAOrD,GAAU6B,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEb,EAEApE,EAAO4I,OAAS,SAAiBC,EAAM/H,GACrC,IAAK6C,MAAMC,QAAQiF,GACjB,MAAM,IAAI1H,UAAU,+CAGtB,GAAoB,IAAhB0H,EAAK/H,OACP,OAAOd,EAAOqC,MAAM,GAGtB,IAAIa,EACJ,QAAeV,IAAX1B,EAEF,IADAA,EAAS,EACJoC,EAAI,EAAGA,EAAI2F,EAAK/H,SAAUoC,EAC7BpC,GAAU+H,EAAK3F,GAAGpC,OAItB,IAAIc,EAAS5B,EAAOoB,YAAYN,GAC5BgI,EAAM,EACV,IAAK5F,EAAI,EAAGA,EAAI2F,EAAK/H,SAAUoC,EAAG,CAChC,IAAIlC,EAAM6H,EAAK3F,GACf,GAAIvB,EAAWX,EAAKV,YACdwI,EAAM9H,EAAIF,OAASc,EAAOd,OAC5Bd,EAAOqB,KAAKL,GAAKoC,KAAKxB,EAAQkH,GAE9BxI,WAAWK,UAAUoI,IAAIxD,KACvB3D,EACAZ,EACA8H,OAGC,KAAK9I,EAAOuD,SAASvC,GAC1B,MAAM,IAAIG,UAAU,+CAEpBH,EAAIoC,KAAKxB,EAAQkH,EACnB,CACAA,GAAO9H,EAAIF,MACb,CACA,OAAOc,CACT,EAiDA5B,EAAO4C,WAAaA,EA8EpB5C,EAAOW,UAAU4H,WAAY,EAQ7BvI,EAAOW,UAAUqI,OAAS,WACxB,IAAIxF,EAAMgB,KAAK1D,OACf,GAAI0C,EAAM,IAAM,EACd,MAAM,IAAIzC,WAAW,6CAEvB,IAAK,IAAImC,EAAI,EAAGA,EAAIM,EAAKN,GAAK,EAC5B6B,EAAKP,KAAMtB,EAAGA,EAAI,GAEpB,OAAOsB,IACT,EAEAxE,EAAOW,UAAUsI,OAAS,WACxB,IAAIzF,EAAMgB,KAAK1D,OACf,GAAI0C,EAAM,IAAM,EACd,MAAM,IAAIzC,WAAW,6CAEvB,IAAK,IAAImC,EAAI,EAAGA,EAAIM,EAAKN,GAAK,EAC5B6B,EAAKP,KAAMtB,EAAGA,EAAI,GAClB6B,EAAKP,KAAMtB,EAAI,EAAGA,EAAI,GAExB,OAAOsB,IACT,EAEAxE,EAAOW,UAAUuI,OAAS,WACxB,IAAI1F,EAAMgB,KAAK1D,OACf,GAAI0C,EAAM,IAAM,EACd,MAAM,IAAIzC,WAAW,6CAEvB,IAAK,IAAImC,EAAI,EAAGA,EAAIM,EAAKN,GAAK,EAC5B6B,EAAKP,KAAMtB,EAAGA,EAAI,GAClB6B,EAAKP,KAAMtB,EAAI,EAAGA,EAAI,GACtB6B,EAAKP,KAAMtB,EAAI,EAAGA,EAAI,GACtB6B,EAAKP,KAAMtB,EAAI,EAAGA,EAAI,GAExB,OAAOsB,IACT,EAEAxE,EAAOW,UAAUmD,SAAW,WAC1B,IAAIhD,EAAS0D,KAAK1D,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArBkD,UAAUlD,OAAqB4D,EAAUF,KAAM,EAAG1D,GAC/CuD,EAAa8E,MAAM3E,KAAMR,UAClC,EAEAhE,EAAOW,UAAUyI,eAAiBpJ,EAAOW,UAAUmD,SAEnD9D,EAAOW,UAAU0I,OAAS,SAAiBrH,GACzC,IAAKhC,EAAOuD,SAASvB,GAAI,MAAM,IAAIb,UAAU,6BAC7C,OAAIqD,OAASxC,GACsB,IAA5BhC,EAAOwI,QAAQhE,KAAMxC,EAC9B,EAEAhC,EAAOW,UAAU2I,QAAU,WACzB,IAAIC,EAAM,GACNC,EAAMzJ,EAAQG,kBAGlB,OAFAqJ,EAAM/E,KAAKV,SAAS,MAAO,EAAG0F,GAAKC,QAAQ,UAAW,OAAOC,OACzDlF,KAAK1D,OAAS0I,IAAKD,GAAO,SACvB,WAAaA,EAAM,GAC5B,EACI1J,IACFG,EAAOW,UAAUd,GAAuBG,EAAOW,UAAU2I,SAG3DtJ,EAAOW,UAAU6H,QAAU,SAAkBmB,EAAQrF,EAAOC,EAAKqF,EAAWC,GAI1E,GAHIlI,EAAWgI,EAAQrJ,cACrBqJ,EAAS3J,EAAOqB,KAAKsI,EAAQA,EAAOxD,OAAQwD,EAAO/G,cAEhD5C,EAAOuD,SAASoG,GACnB,MAAM,IAAIxI,UACR,wFAC2BwI,GAiB/B,QAbcnH,IAAV8B,IACFA,EAAQ,QAEE9B,IAAR+B,IACFA,EAAMoF,EAASA,EAAO7I,OAAS,QAEf0B,IAAdoH,IACFA,EAAY,QAEEpH,IAAZqH,IACFA,EAAUrF,KAAK1D,QAGbwD,EAAQ,GAAKC,EAAMoF,EAAO7I,QAAU8I,EAAY,GAAKC,EAAUrF,KAAK1D,OACtE,MAAM,IAAIC,WAAW,sBAGvB,GAAI6I,GAAaC,GAAWvF,GAASC,EACnC,OAAO,EAET,GAAIqF,GAAaC,EACf,OAAQ,EAEV,GAAIvF,GAASC,EACX,OAAO,EAQT,GALAD,KAAW,EACXC,KAAS,EACTqF,KAAe,EACfC,KAAa,EAETrF,OAASmF,EAAQ,OAAO,EAS5B,IAPA,IAAIjB,EAAImB,EAAUD,EACdjB,EAAIpE,EAAMD,EACVd,EAAM0D,KAAKC,IAAIuB,EAAGC,GAElBmB,EAAWtF,KAAKzB,MAAM6G,EAAWC,GACjCE,EAAaJ,EAAO5G,MAAMuB,EAAOC,GAE5BrB,EAAI,EAAGA,EAAIM,IAAON,EACzB,GAAI4G,EAAS5G,KAAO6G,EAAW7G,GAAI,CACjCwF,EAAIoB,EAAS5G,GACbyF,EAAIoB,EAAW7G,GACf,KACF,CAGF,OAAIwF,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACT,EA2HA1I,EAAOW,UAAUqJ,SAAW,SAAmB7E,EAAK9B,EAAYd,GAC9D,OAAoD,IAA7CiC,KAAKc,QAAQH,EAAK9B,EAAYd,EACvC,EAEAvC,EAAOW,UAAU2E,QAAU,SAAkBH,EAAK9B,EAAYd,GAC5D,OAAO2C,EAAqBV,KAAMW,EAAK9B,EAAYd,GAAU,EAC/D,EAEAvC,EAAOW,UAAU6E,YAAc,SAAsBL,EAAK9B,EAAYd,GACpE,OAAO2C,EAAqBV,KAAMW,EAAK9B,EAAYd,GAAU,EAC/D,EA2CAvC,EAAOW,UAAUmC,MAAQ,SAAgBJ,EAAQyD,EAAQrF,EAAQyB,GAE/D,QAAeC,IAAX2D,EACF5D,EAAW,OACXzB,EAAS0D,KAAK1D,OACdqF,EAAS,OAEJ,QAAe3D,IAAX1B,GAA0C,kBAAXqF,EACxC5D,EAAW4D,EACXrF,EAAS0D,KAAK1D,OACdqF,EAAS,MAEJ,KAAI8D,SAAS9D,GAUlB,MAAM,IAAI+D,MACR,2EAVF/D,KAAoB,EAChB8D,SAASnJ,IACXA,KAAoB,OACH0B,IAAbD,IAAwBA,EAAW,UAEvCA,EAAWzB,EACXA,OAAS0B,EAMb,CAEA,IAAI6D,EAAY7B,KAAK1D,OAASqF,EAG9B,SAFe3D,IAAX1B,GAAwBA,EAASuF,KAAWvF,EAASuF,GAEpD3D,EAAO5B,OAAS,IAAMA,EAAS,GAAKqF,EAAS,IAAOA,EAAS3B,KAAK1D,OACrE,MAAM,IAAIC,WAAW,0CAGlBwB,IAAUA,EAAW,QAG1B,IADA,IAAI0B,GAAc,IAEhB,OAAQ1B,GACN,IAAK,MACH,OAAO2D,EAAS1B,KAAM9B,EAAQyD,EAAQrF,GAExC,IAAK,OACL,IAAK,QACH,OAAO4F,EAAUlC,KAAM9B,EAAQyD,EAAQrF,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO8F,EAAWpC,KAAM9B,EAAQyD,EAAQrF,GAE1C,IAAK,SAEH,OAAOgG,EAAYtC,KAAM9B,EAAQyD,EAAQrF,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOiG,EAAUvC,KAAM9B,EAAQyD,EAAQrF,GAEzC,QACE,GAAImD,EAAa,MAAM,IAAI9C,UAAU,qBAAuBoB,GAC5DA,GAAY,GAAKA,GAAU6B,cAC3BH,GAAc,EAGtB,EAEAjE,EAAOW,UAAUwJ,OAAS,WACxB,MAAO,CACLzG,KAAM,SACNG,KAAMF,MAAMhD,UAAUoC,MAAMwC,KAAKf,KAAK4F,MAAQ5F,KAAM,GAExD,EAyFA,IAAI6F,EAAuB,KAE3B,SAASxC,EAAuByC,GAC9B,IAAI9G,EAAM8G,EAAWxJ,OACrB,GAAI0C,GAAO6G,EACT,OAAOzE,OAAO2E,aAAapB,MAAMvD,OAAQ0E,GAI3C,IAAIlD,EAAM,GACNlE,EAAI,EACR,MAAOA,EAAIM,EACT4D,GAAOxB,OAAO2E,aAAapB,MACzBvD,OACA0E,EAAWvH,MAAMG,EAAGA,GAAKmH,IAG7B,OAAOjD,CACT,CAEA,SAASzC,EAAY3D,EAAKsD,EAAOC,GAC/B,IAAIiG,EAAM,GACVjG,EAAM2C,KAAKC,IAAInG,EAAIF,OAAQyD,GAE3B,IAAK,IAAIrB,EAAIoB,EAAOpB,EAAIqB,IAAOrB,EAC7BsH,GAAO5E,OAAO2E,aAAsB,IAATvJ,EAAIkC,IAEjC,OAAOsH,CACT,CAEA,SAAS5F,EAAa5D,EAAKsD,EAAOC,GAChC,IAAIiG,EAAM,GACVjG,EAAM2C,KAAKC,IAAInG,EAAIF,OAAQyD,GAE3B,IAAK,IAAIrB,EAAIoB,EAAOpB,EAAIqB,IAAOrB,EAC7BsH,GAAO5E,OAAO2E,aAAavJ,EAAIkC,IAEjC,OAAOsH,CACT,CAEA,SAAS/F,EAAUzD,EAAKsD,EAAOC,GAC7B,IAAIf,EAAMxC,EAAIF,SAETwD,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMf,KAAKe,EAAMf,GAGxC,IADA,IAAIiH,EAAM,GACDvH,EAAIoB,EAAOpB,EAAIqB,IAAOrB,EAC7BuH,GAAOC,EAAoB1J,EAAIkC,IAEjC,OAAOuH,CACT,CAEA,SAAS3F,EAAc9D,EAAKsD,EAAOC,GAIjC,IAHA,IAAIoG,EAAQ3J,EAAI+B,MAAMuB,EAAOC,GACzB6C,EAAM,GAEDlE,EAAI,EAAGA,EAAIyH,EAAM7J,OAAS,EAAGoC,GAAK,EACzCkE,GAAOxB,OAAO2E,aAAaI,EAAMzH,GAAqB,IAAfyH,EAAMzH,EAAI,IAEnD,OAAOkE,CACT,CAiCA,SAASwD,EAAazE,EAAQ0E,EAAK/J,GACjC,GAAKqF,EAAS,IAAO,GAAKA,EAAS,EAAG,MAAM,IAAIpF,WAAW,sBAC3D,GAAIoF,EAAS0E,EAAM/J,EAAQ,MAAM,IAAIC,WAAW,wCAClD,CAmLA,SAAS+J,EAAU9J,EAAKM,EAAO6E,EAAQ0E,EAAKrB,EAAKrC,GAC/C,IAAKnH,EAAOuD,SAASvC,GAAM,MAAM,IAAIG,UAAU,+CAC/C,GAAIG,EAAQkI,GAAOlI,EAAQ6F,EAAK,MAAM,IAAIpG,WAAW,qCACrD,GAAIoF,EAAS0E,EAAM7J,EAAIF,OAAQ,MAAM,IAAIC,WAAW,qBACtD,CA+LA,SAASgK,EAAc/J,EAAKM,EAAO6E,EAAQ0E,EAAKrB,EAAKrC,GACnD,GAAIhB,EAAS0E,EAAM7J,EAAIF,OAAQ,MAAM,IAAIC,WAAW,sBACpD,GAAIoF,EAAS,EAAG,MAAM,IAAIpF,WAAW,qBACvC,CAEA,SAASiK,EAAYhK,EAAKM,EAAO6E,EAAQ8E,EAAcC,GAOrD,OANA5J,GAASA,EACT6E,KAAoB,EACf+E,GACHH,EAAa/J,EAAKM,EAAO6E,EAAQ,EAAG,sBAAyB,sBAE/DvG,EAAQkD,MAAM9B,EAAKM,EAAO6E,EAAQ8E,EAAc,GAAI,GAC7C9E,EAAS,CAClB,CAUA,SAASgF,EAAanK,EAAKM,EAAO6E,EAAQ8E,EAAcC,GAOtD,OANA5J,GAASA,EACT6E,KAAoB,EACf+E,GACHH,EAAa/J,EAAKM,EAAO6E,EAAQ,EAAG,uBAA0B,uBAEhEvG,EAAQkD,MAAM9B,EAAKM,EAAO6E,EAAQ8E,EAAc,GAAI,GAC7C9E,EAAS,CAClB,CAvbAnG,EAAOW,UAAUoC,MAAQ,SAAgBuB,EAAOC,GAC9C,IAAIf,EAAMgB,KAAK1D,OACfwD,IAAUA,EACVC,OAAc/B,IAAR+B,EAAoBf,IAAQe,EAE9BD,EAAQ,GACVA,GAASd,EACLc,EAAQ,IAAGA,EAAQ,IACdA,EAAQd,IACjBc,EAAQd,GAGNe,EAAM,GACRA,GAAOf,EACHe,EAAM,IAAGA,EAAM,IACVA,EAAMf,IACfe,EAAMf,GAGJe,EAAMD,IAAOC,EAAMD,GAEvB,IAAI8G,EAAS5G,KAAK6G,SAAS/G,EAAOC,GAIlC,OAFA9D,OAAOC,eAAe0K,EAAQpL,EAAOW,WAE9ByK,CACT,EAUApL,EAAOW,UAAU2K,WACjBtL,EAAOW,UAAU4K,WAAa,SAAqBpF,EAAQvD,EAAYsI,GACrE/E,KAAoB,EACpBvD,KAA4B,EACvBsI,GAAUN,EAAYzE,EAAQvD,EAAY4B,KAAK1D,QAEpD,IAAIqE,EAAMX,KAAK2B,GACXqF,EAAM,EACNtI,EAAI,EACR,QAASA,EAAIN,IAAe4I,GAAO,KACjCrG,GAAOX,KAAK2B,EAASjD,GAAKsI,EAG5B,OAAOrG,CACT,EAEAnF,EAAOW,UAAU8K,WACjBzL,EAAOW,UAAU+K,WAAa,SAAqBvF,EAAQvD,EAAYsI,GACrE/E,KAAoB,EACpBvD,KAA4B,EACvBsI,GACHN,EAAYzE,EAAQvD,EAAY4B,KAAK1D,QAGvC,IAAIqE,EAAMX,KAAK2B,IAAWvD,GACtB4I,EAAM,EACV,MAAO5I,EAAa,IAAM4I,GAAO,KAC/BrG,GAAOX,KAAK2B,IAAWvD,GAAc4I,EAGvC,OAAOrG,CACT,EAEAnF,EAAOW,UAAUgL,UACjB3L,EAAOW,UAAUiL,UAAY,SAAoBzF,EAAQ+E,GAGvD,OAFA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QACpC0D,KAAK2B,EACd,EAEAnG,EAAOW,UAAUkL,aACjB7L,EAAOW,UAAUmL,aAAe,SAAuB3F,EAAQ+E,GAG7D,OAFA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QACpC0D,KAAK2B,GAAW3B,KAAK2B,EAAS,IAAM,CAC7C,EAEAnG,EAAOW,UAAUoL,aACjB/L,EAAOW,UAAUmF,aAAe,SAAuBK,EAAQ+E,GAG7D,OAFA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QACnC0D,KAAK2B,IAAW,EAAK3B,KAAK2B,EAAS,EAC7C,EAEAnG,EAAOW,UAAUqL,aACjBhM,EAAOW,UAAUsL,aAAe,SAAuB9F,EAAQ+E,GAI7D,OAHA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,SAElC0D,KAAK2B,GACT3B,KAAK2B,EAAS,IAAM,EACpB3B,KAAK2B,EAAS,IAAM,IACD,SAAnB3B,KAAK2B,EAAS,EACrB,EAEAnG,EAAOW,UAAUuL,aACjBlM,EAAOW,UAAUwL,aAAe,SAAuBhG,EAAQ+E,GAI7D,OAHA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QAEpB,SAAf0D,KAAK2B,IACT3B,KAAK2B,EAAS,IAAM,GACrB3B,KAAK2B,EAAS,IAAM,EACrB3B,KAAK2B,EAAS,GAClB,EAEAnG,EAAOW,UAAUyL,UAAY,SAAoBjG,EAAQvD,EAAYsI,GACnE/E,KAAoB,EACpBvD,KAA4B,EACvBsI,GAAUN,EAAYzE,EAAQvD,EAAY4B,KAAK1D,QAEpD,IAAIqE,EAAMX,KAAK2B,GACXqF,EAAM,EACNtI,EAAI,EACR,QAASA,EAAIN,IAAe4I,GAAO,KACjCrG,GAAOX,KAAK2B,EAASjD,GAAKsI,EAM5B,OAJAA,GAAO,IAEHrG,GAAOqG,IAAKrG,GAAO+B,KAAKmF,IAAI,EAAG,EAAIzJ,IAEhCuC,CACT,EAEAnF,EAAOW,UAAU2L,UAAY,SAAoBnG,EAAQvD,EAAYsI,GACnE/E,KAAoB,EACpBvD,KAA4B,EACvBsI,GAAUN,EAAYzE,EAAQvD,EAAY4B,KAAK1D,QAEpD,IAAIoC,EAAIN,EACJ4I,EAAM,EACNrG,EAAMX,KAAK2B,IAAWjD,GAC1B,MAAOA,EAAI,IAAMsI,GAAO,KACtBrG,GAAOX,KAAK2B,IAAWjD,GAAKsI,EAM9B,OAJAA,GAAO,IAEHrG,GAAOqG,IAAKrG,GAAO+B,KAAKmF,IAAI,EAAG,EAAIzJ,IAEhCuC,CACT,EAEAnF,EAAOW,UAAU4L,SAAW,SAAmBpG,EAAQ+E,GAGrD,OAFA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QACtB,IAAf0D,KAAK2B,IAC0B,GAA5B,IAAO3B,KAAK2B,GAAU,GADK3B,KAAK2B,EAE3C,EAEAnG,EAAOW,UAAU6L,YAAc,SAAsBrG,EAAQ+E,GAC3D/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QAC3C,IAAIqE,EAAMX,KAAK2B,GAAW3B,KAAK2B,EAAS,IAAM,EAC9C,OAAc,MAANhB,EAAsB,WAANA,EAAmBA,CAC7C,EAEAnF,EAAOW,UAAU8L,YAAc,SAAsBtG,EAAQ+E,GAC3D/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QAC3C,IAAIqE,EAAMX,KAAK2B,EAAS,GAAM3B,KAAK2B,IAAW,EAC9C,OAAc,MAANhB,EAAsB,WAANA,EAAmBA,CAC7C,EAEAnF,EAAOW,UAAU+L,YAAc,SAAsBvG,EAAQ+E,GAI3D,OAHA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QAEnC0D,KAAK2B,GACV3B,KAAK2B,EAAS,IAAM,EACpB3B,KAAK2B,EAAS,IAAM,GACpB3B,KAAK2B,EAAS,IAAM,EACzB,EAEAnG,EAAOW,UAAUgM,YAAc,SAAsBxG,EAAQ+E,GAI3D,OAHA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QAEnC0D,KAAK2B,IAAW,GACrB3B,KAAK2B,EAAS,IAAM,GACpB3B,KAAK2B,EAAS,IAAM,EACpB3B,KAAK2B,EAAS,EACnB,EAEAnG,EAAOW,UAAUiM,YAAc,SAAsBzG,EAAQ+E,GAG3D,OAFA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QACpClB,EAAQiG,KAAKrB,KAAM2B,GAAQ,EAAM,GAAI,EAC9C,EAEAnG,EAAOW,UAAUkM,YAAc,SAAsB1G,EAAQ+E,GAG3D,OAFA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QACpClB,EAAQiG,KAAKrB,KAAM2B,GAAQ,EAAO,GAAI,EAC/C,EAEAnG,EAAOW,UAAUmM,aAAe,SAAuB3G,EAAQ+E,GAG7D,OAFA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QACpClB,EAAQiG,KAAKrB,KAAM2B,GAAQ,EAAM,GAAI,EAC9C,EAEAnG,EAAOW,UAAUoM,aAAe,SAAuB5G,EAAQ+E,GAG7D,OAFA/E,KAAoB,EACf+E,GAAUN,EAAYzE,EAAQ,EAAG3B,KAAK1D,QACpClB,EAAQiG,KAAKrB,KAAM2B,GAAQ,EAAO,GAAI,EAC/C,EAQAnG,EAAOW,UAAUqM,YACjBhN,EAAOW,UAAUsM,YAAc,SAAsB3L,EAAO6E,EAAQvD,EAAYsI,GAI9E,GAHA5J,GAASA,EACT6E,KAAoB,EACpBvD,KAA4B,GACvBsI,EAAU,CACb,IAAIgC,EAAWhG,KAAKmF,IAAI,EAAG,EAAIzJ,GAAc,EAC7CkI,EAAStG,KAAMlD,EAAO6E,EAAQvD,EAAYsK,EAAU,EACtD,CAEA,IAAI1B,EAAM,EACNtI,EAAI,EACRsB,KAAK2B,GAAkB,IAAR7E,EACf,QAAS4B,EAAIN,IAAe4I,GAAO,KACjChH,KAAK2B,EAASjD,GAAM5B,EAAQkK,EAAO,IAGrC,OAAOrF,EAASvD,CAClB,EAEA5C,EAAOW,UAAUwM,YACjBnN,EAAOW,UAAUyM,YAAc,SAAsB9L,EAAO6E,EAAQvD,EAAYsI,GAI9E,GAHA5J,GAASA,EACT6E,KAAoB,EACpBvD,KAA4B,GACvBsI,EAAU,CACb,IAAIgC,EAAWhG,KAAKmF,IAAI,EAAG,EAAIzJ,GAAc,EAC7CkI,EAAStG,KAAMlD,EAAO6E,EAAQvD,EAAYsK,EAAU,EACtD,CAEA,IAAIhK,EAAIN,EAAa,EACjB4I,EAAM,EACVhH,KAAK2B,EAASjD,GAAa,IAAR5B,EACnB,QAAS4B,GAAK,IAAMsI,GAAO,KACzBhH,KAAK2B,EAASjD,GAAM5B,EAAQkK,EAAO,IAGrC,OAAOrF,EAASvD,CAClB,EAEA5C,EAAOW,UAAU0M,WACjBrN,EAAOW,UAAU2M,WAAa,SAAqBhM,EAAO6E,EAAQ+E,GAKhE,OAJA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,IAAM,GACtD3B,KAAK2B,GAAmB,IAAR7E,EACT6E,EAAS,CAClB,EAEAnG,EAAOW,UAAU4M,cACjBvN,EAAOW,UAAU6M,cAAgB,SAAwBlM,EAAO6E,EAAQ+E,GAMtE,OALA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,MAAQ,GACxD3B,KAAK2B,GAAmB,IAAR7E,EAChBkD,KAAK2B,EAAS,GAAM7E,IAAU,EACvB6E,EAAS,CAClB,EAEAnG,EAAOW,UAAU8M,cACjBzN,EAAOW,UAAU+M,cAAgB,SAAwBpM,EAAO6E,EAAQ+E,GAMtE,OALA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,MAAQ,GACxD3B,KAAK2B,GAAW7E,IAAU,EAC1BkD,KAAK2B,EAAS,GAAc,IAAR7E,EACb6E,EAAS,CAClB,EAEAnG,EAAOW,UAAUgN,cACjB3N,EAAOW,UAAUiN,cAAgB,SAAwBtM,EAAO6E,EAAQ+E,GAQtE,OAPA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,WAAY,GAC5D3B,KAAK2B,EAAS,GAAM7E,IAAU,GAC9BkD,KAAK2B,EAAS,GAAM7E,IAAU,GAC9BkD,KAAK2B,EAAS,GAAM7E,IAAU,EAC9BkD,KAAK2B,GAAmB,IAAR7E,EACT6E,EAAS,CAClB,EAEAnG,EAAOW,UAAUkN,cACjB7N,EAAOW,UAAUmN,cAAgB,SAAwBxM,EAAO6E,EAAQ+E,GAQtE,OAPA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,WAAY,GAC5D3B,KAAK2B,GAAW7E,IAAU,GAC1BkD,KAAK2B,EAAS,GAAM7E,IAAU,GAC9BkD,KAAK2B,EAAS,GAAM7E,IAAU,EAC9BkD,KAAK2B,EAAS,GAAc,IAAR7E,EACb6E,EAAS,CAClB,EAEAnG,EAAOW,UAAUoN,WAAa,SAAqBzM,EAAO6E,EAAQvD,EAAYsI,GAG5E,GAFA5J,GAASA,EACT6E,KAAoB,GACf+E,EAAU,CACb,IAAI8C,EAAQ9G,KAAKmF,IAAI,EAAI,EAAIzJ,EAAc,GAE3CkI,EAAStG,KAAMlD,EAAO6E,EAAQvD,EAAYoL,EAAQ,GAAIA,EACxD,CAEA,IAAI9K,EAAI,EACJsI,EAAM,EACNyC,EAAM,EACVzJ,KAAK2B,GAAkB,IAAR7E,EACf,QAAS4B,EAAIN,IAAe4I,GAAO,KAC7BlK,EAAQ,GAAa,IAAR2M,GAAsC,IAAzBzJ,KAAK2B,EAASjD,EAAI,KAC9C+K,EAAM,GAERzJ,KAAK2B,EAASjD,IAAO5B,EAAQkK,EAAQ,GAAKyC,EAAM,IAGlD,OAAO9H,EAASvD,CAClB,EAEA5C,EAAOW,UAAUuN,WAAa,SAAqB5M,EAAO6E,EAAQvD,EAAYsI,GAG5E,GAFA5J,GAASA,EACT6E,KAAoB,GACf+E,EAAU,CACb,IAAI8C,EAAQ9G,KAAKmF,IAAI,EAAI,EAAIzJ,EAAc,GAE3CkI,EAAStG,KAAMlD,EAAO6E,EAAQvD,EAAYoL,EAAQ,GAAIA,EACxD,CAEA,IAAI9K,EAAIN,EAAa,EACjB4I,EAAM,EACNyC,EAAM,EACVzJ,KAAK2B,EAASjD,GAAa,IAAR5B,EACnB,QAAS4B,GAAK,IAAMsI,GAAO,KACrBlK,EAAQ,GAAa,IAAR2M,GAAsC,IAAzBzJ,KAAK2B,EAASjD,EAAI,KAC9C+K,EAAM,GAERzJ,KAAK2B,EAASjD,IAAO5B,EAAQkK,EAAQ,GAAKyC,EAAM,IAGlD,OAAO9H,EAASvD,CAClB,EAEA5C,EAAOW,UAAUwN,UAAY,SAAoB7M,EAAO6E,EAAQ+E,GAM9D,OALA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,KAAO,KACnD7E,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCkD,KAAK2B,GAAmB,IAAR7E,EACT6E,EAAS,CAClB,EAEAnG,EAAOW,UAAUyN,aAAe,SAAuB9M,EAAO6E,EAAQ+E,GAMpE,OALA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,OAAS,OACzD3B,KAAK2B,GAAmB,IAAR7E,EAChBkD,KAAK2B,EAAS,GAAM7E,IAAU,EACvB6E,EAAS,CAClB,EAEAnG,EAAOW,UAAU0N,aAAe,SAAuB/M,EAAO6E,EAAQ+E,GAMpE,OALA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,OAAS,OACzD3B,KAAK2B,GAAW7E,IAAU,EAC1BkD,KAAK2B,EAAS,GAAc,IAAR7E,EACb6E,EAAS,CAClB,EAEAnG,EAAOW,UAAU2N,aAAe,SAAuBhN,EAAO6E,EAAQ+E,GAQpE,OAPA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,YAAa,YAC7D3B,KAAK2B,GAAmB,IAAR7E,EAChBkD,KAAK2B,EAAS,GAAM7E,IAAU,EAC9BkD,KAAK2B,EAAS,GAAM7E,IAAU,GAC9BkD,KAAK2B,EAAS,GAAM7E,IAAU,GACvB6E,EAAS,CAClB,EAEAnG,EAAOW,UAAU4N,aAAe,SAAuBjN,EAAO6E,EAAQ+E,GASpE,OARA5J,GAASA,EACT6E,KAAoB,EACf+E,GAAUJ,EAAStG,KAAMlD,EAAO6E,EAAQ,EAAG,YAAa,YACzD7E,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5CkD,KAAK2B,GAAW7E,IAAU,GAC1BkD,KAAK2B,EAAS,GAAM7E,IAAU,GAC9BkD,KAAK2B,EAAS,GAAM7E,IAAU,EAC9BkD,KAAK2B,EAAS,GAAc,IAAR7E,EACb6E,EAAS,CAClB,EAiBAnG,EAAOW,UAAU6N,aAAe,SAAuBlN,EAAO6E,EAAQ+E,GACpE,OAAOF,EAAWxG,KAAMlD,EAAO6E,GAAQ,EAAM+E,EAC/C,EAEAlL,EAAOW,UAAU8N,aAAe,SAAuBnN,EAAO6E,EAAQ+E,GACpE,OAAOF,EAAWxG,KAAMlD,EAAO6E,GAAQ,EAAO+E,EAChD,EAYAlL,EAAOW,UAAU+N,cAAgB,SAAwBpN,EAAO6E,EAAQ+E,GACtE,OAAOC,EAAY3G,KAAMlD,EAAO6E,GAAQ,EAAM+E,EAChD,EAEAlL,EAAOW,UAAUgO,cAAgB,SAAwBrN,EAAO6E,EAAQ+E,GACtE,OAAOC,EAAY3G,KAAMlD,EAAO6E,GAAQ,EAAO+E,EACjD,EAGAlL,EAAOW,UAAUyC,KAAO,SAAeuG,EAAQiF,EAAatK,EAAOC,GACjE,IAAKvE,EAAOuD,SAASoG,GAAS,MAAM,IAAIxI,UAAU,+BAQlD,GAPKmD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMC,KAAK1D,QAC9B8N,GAAejF,EAAO7I,SAAQ8N,EAAcjF,EAAO7I,QAClD8N,IAAaA,EAAc,GAC5BrK,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBqF,EAAO7I,QAAgC,IAAhB0D,KAAK1D,OAAc,OAAO,EAGrD,GAAI8N,EAAc,EAChB,MAAM,IAAI7N,WAAW,6BAEvB,GAAIuD,EAAQ,GAAKA,GAASE,KAAK1D,OAAQ,MAAM,IAAIC,WAAW,sBAC5D,GAAIwD,EAAM,EAAG,MAAM,IAAIxD,WAAW,2BAG9BwD,EAAMC,KAAK1D,SAAQyD,EAAMC,KAAK1D,QAC9B6I,EAAO7I,OAAS8N,EAAcrK,EAAMD,IACtCC,EAAMoF,EAAO7I,OAAS8N,EAActK,GAGtC,IAAId,EAAMe,EAAMD,EAahB,OAXIE,OAASmF,GAAqD,oBAApCrJ,WAAWK,UAAUkO,WAEjDrK,KAAKqK,WAAWD,EAAatK,EAAOC,GAEpCjE,WAAWK,UAAUoI,IAAIxD,KACvBoE,EACAnF,KAAK6G,SAAS/G,EAAOC,GACrBqK,GAIGpL,CACT,EAMAxD,EAAOW,UAAU2B,KAAO,SAAe6C,EAAKb,EAAOC,EAAKhC,GAEtD,GAAmB,kBAAR4C,EAAkB,CAS3B,GARqB,kBAAVb,GACT/B,EAAW+B,EACXA,EAAQ,EACRC,EAAMC,KAAK1D,QACa,kBAARyD,IAChBhC,EAAWgC,EACXA,EAAMC,KAAK1D,aAEI0B,IAAbD,GAA8C,kBAAbA,EACnC,MAAM,IAAIpB,UAAU,6BAEtB,GAAwB,kBAAboB,IAA0BvC,EAAO2C,WAAWJ,GACrD,MAAM,IAAIpB,UAAU,qBAAuBoB,GAE7C,GAAmB,IAAf4C,EAAIrE,OAAc,CACpB,IAAIgO,EAAO3J,EAAI4J,WAAW,IACR,SAAbxM,GAAuBuM,EAAO,KAClB,WAAbvM,KAEF4C,EAAM2J,EAEV,CACF,KAA0B,kBAAR3J,EAChBA,GAAY,IACY,mBAARA,IAChBA,EAAMiB,OAAOjB,IAIf,GAAIb,EAAQ,GAAKE,KAAK1D,OAASwD,GAASE,KAAK1D,OAASyD,EACpD,MAAM,IAAIxD,WAAW,sBAGvB,GAAIwD,GAAOD,EACT,OAAOE,KAQT,IAAItB,EACJ,GANAoB,KAAkB,EAClBC,OAAc/B,IAAR+B,EAAoBC,KAAK1D,OAASyD,IAAQ,EAE3CY,IAAKA,EAAM,GAGG,kBAARA,EACT,IAAKjC,EAAIoB,EAAOpB,EAAIqB,IAAOrB,EACzBsB,KAAKtB,GAAKiC,MAEP,CACL,IAAIwF,EAAQ3K,EAAOuD,SAAS4B,GACxBA,EACAnF,EAAOqB,KAAK8D,EAAK5C,GACjBiB,EAAMmH,EAAM7J,OAChB,GAAY,IAAR0C,EACF,MAAM,IAAIrC,UAAU,cAAgBgE,EAClC,qCAEJ,IAAKjC,EAAI,EAAGA,EAAIqB,EAAMD,IAASpB,EAC7BsB,KAAKtB,EAAIoB,GAASqG,EAAMzH,EAAIM,EAEhC,CAEA,OAAOgB,IACT,EAKA,IAAIwK,EAAoB,oBAExB,SAASC,EAAa1F,GAMpB,GAJAA,EAAMA,EAAI2F,MAAM,KAAK,GAErB3F,EAAMA,EAAIG,OAAOD,QAAQuF,EAAmB,IAExCzF,EAAIzI,OAAS,EAAG,MAAO,GAE3B,MAAOyI,EAAIzI,OAAS,IAAM,EACxByI,GAAY,IAEd,OAAOA,CACT,CAEA,SAASrF,EAAaxB,EAAQyM,GAE5B,IAAIzH,EADJyH,EAAQA,GAASC,IAMjB,IAJA,IAAItO,EAAS4B,EAAO5B,OAChBuO,EAAgB,KAChB1E,EAAQ,GAEHzH,EAAI,EAAGA,EAAIpC,IAAUoC,EAAG,CAI/B,GAHAwE,EAAYhF,EAAOqM,WAAW7L,GAG1BwE,EAAY,OAAUA,EAAY,MAAQ,CAE5C,IAAK2H,EAAe,CAElB,GAAI3H,EAAY,MAAQ,EAEjByH,GAAS,IAAM,GAAGxE,EAAM/C,KAAK,IAAM,IAAM,KAC9C,QACF,CAAO,GAAI1E,EAAI,IAAMpC,EAAQ,EAEtBqO,GAAS,IAAM,GAAGxE,EAAM/C,KAAK,IAAM,IAAM,KAC9C,QACF,CAGAyH,EAAgB3H,EAEhB,QACF,CAGA,GAAIA,EAAY,MAAQ,EACjByH,GAAS,IAAM,GAAGxE,EAAM/C,KAAK,IAAM,IAAM,KAC9CyH,EAAgB3H,EAChB,QACF,CAGAA,EAAkE,OAArD2H,EAAgB,OAAU,GAAK3H,EAAY,MAC1D,MAAW2H,IAEJF,GAAS,IAAM,GAAGxE,EAAM/C,KAAK,IAAM,IAAM,KAMhD,GAHAyH,EAAgB,KAGZ3H,EAAY,IAAM,CACpB,IAAKyH,GAAS,GAAK,EAAG,MACtBxE,EAAM/C,KAAKF,EACb,MAAO,GAAIA,EAAY,KAAO,CAC5B,IAAKyH,GAAS,GAAK,EAAG,MACtBxE,EAAM/C,KACJF,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEvB,MAAO,GAAIA,EAAY,MAAS,CAC9B,IAAKyH,GAAS,GAAK,EAAG,MACtBxE,EAAM/C,KACJF,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEvB,KAAO,MAAIA,EAAY,SASrB,MAAM,IAAIwC,MAAM,sBARhB,IAAKiF,GAAS,GAAK,EAAG,MACtBxE,EAAM/C,KACJF,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAIvB,CACF,CAEA,OAAOiD,CACT,CAEA,SAAS9D,EAAc0C,GAErB,IADA,IAAI+F,EAAY,GACPpM,EAAI,EAAGA,EAAIqG,EAAIzI,SAAUoC,EAEhCoM,EAAU1H,KAAyB,IAApB2B,EAAIwF,WAAW7L,IAEhC,OAAOoM,CACT,CAEA,SAAStI,EAAgBuC,EAAK4F,GAG5B,IAFA,IAAII,EAAGC,EAAIC,EACPH,EAAY,GACPpM,EAAI,EAAGA,EAAIqG,EAAIzI,SAAUoC,EAAG,CACnC,IAAKiM,GAAS,GAAK,EAAG,MAEtBI,EAAIhG,EAAIwF,WAAW7L,GACnBsM,EAAKD,GAAK,EACVE,EAAKF,EAAI,IACTD,EAAU1H,KAAK6H,GACfH,EAAU1H,KAAK4H,EACjB,CAEA,OAAOF,CACT,CAEA,SAASnL,EAAeoF,GACtB,OAAO5J,EAAO+P,YAAYT,EAAY1F,GACxC,CAEA,SAAS5C,EAAYgJ,EAAKC,EAAKzJ,EAAQrF,GACrC,IAAK,IAAIoC,EAAI,EAAGA,EAAIpC,IAAUoC,EAAG,CAC/B,GAAKA,EAAIiD,GAAUyJ,EAAI9O,QAAYoC,GAAKyM,EAAI7O,OAAS,MACrD8O,EAAI1M,EAAIiD,GAAUwJ,EAAIzM,EACxB,CACA,OAAOA,CACT,CAKA,SAASvB,EAAY2B,EAAKI,GACxB,OAAOJ,aAAeI,GACZ,MAAPJ,GAAkC,MAAnBA,EAAIuM,aAA+C,MAAxBvM,EAAIuM,YAAYC,MACzDxM,EAAIuM,YAAYC,OAASpM,EAAKoM,IACpC,CACA,SAASrM,EAAaH,GAEpB,OAAOA,IAAQA,CACjB,CAIA,IAAIoH,EAAsB,WAGxB,IAFA,IAAIqF,EAAW,mBACXC,EAAQ,IAAIrM,MAAM,KACbT,EAAI,EAAGA,EAAI,KAAMA,EAExB,IADA,IAAI+M,EAAU,GAAJ/M,EACD+C,EAAI,EAAGA,EAAI,KAAMA,EACxB+J,EAAMC,EAAMhK,GAAK8J,EAAS7M,GAAK6M,EAAS9J,GAG5C,OAAO+J,CACR,CAVyB,E","sources":["webpack://@openeo/web-editor/./node_modules/buffer/index.js"],"sourcesContent":["/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n"],"names":["base64","ieee754","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","typedArraySupport","arr","Uint8Array","proto","foo","Object","setPrototypeOf","prototype","e","createBuffer","length","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","fromString","ArrayBuffer","isView","fromArrayView","isInstance","buffer","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","byteLength","actual","write","slice","fromArrayLike","array","i","arrayView","copy","byteOffset","obj","isBuffer","len","numberIsNaN","type","Array","isArray","data","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","push","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","console","error","defineProperty","enumerable","get","poolSize","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","apply","toLocaleString","equals","inspect","str","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","Error","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","charCodeAt","INVALID_BASE64_RE","base64clean","split","units","Infinity","leadSurrogate","byteArray","c","hi","lo","toByteArray","src","dst","constructor","name","alphabet","table","i16"],"sourceRoot":""}
{"version":3,"file":"js/3328.2fe12efe.js","mappings":";;;;;;;AASA,MAAMA,EACJC,cACEC,KAAKC,SAAW,KAChBD,KAAKE,QAAU,IAAIC,IACnBH,KAAKI,UAAW,EAChBJ,KAAKK,eAAYC,CACnB,CACAC,QAAQC,EAAOC,EAAOC,EAAMC,GAC1B,MAAMC,EAAYH,EAAMI,UAAUF,GAC5BG,EAAWL,EAAMM,SACvBH,EAAUI,SAAQC,GAAMA,EAAG,CACzBT,QACAU,QAAST,EAAMS,QACfJ,WACAK,YAAaC,KAAKC,IAAIX,EAAOD,EAAMa,MAAOR,MAE9C,CACAS,WACMvB,KAAKC,WAGTD,KAAKI,UAAW,EAChBJ,KAAKC,SAAW,EAAAuB,EAAA,KAAsBC,QAAQ,KAC5CzB,KAAK0B,UACL1B,KAAKC,SAAW,KACZD,KAAKI,UACPJ,KAAKuB,UACP,IAEJ,CACAG,QAAQhB,EAAOiB,KAAKC,OAClB,IAAIC,EAAY,EAChB7B,KAAKE,QAAQc,SAAQ,CAACP,EAAOD,KAC3B,IAAKC,EAAMqB,UAAYrB,EAAMsB,MAAMC,OACjC,OAEF,MAAMD,EAAQtB,EAAMsB,MACpB,IAEIE,EAFAC,EAAIH,EAAMC,OAAS,EACnBG,GAAO,EAEX,KAAOD,GAAK,IAAKA,EACfD,EAAOF,EAAMG,GACTD,EAAKG,SACHH,EAAKI,OAAS5B,EAAMM,WACtBN,EAAMM,SAAWkB,EAAKI,QAExBJ,EAAKK,KAAK5B,GACVyB,GAAO,IAEPJ,EAAMG,GAAKH,EAAMA,EAAMC,OAAS,GAChCD,EAAMQ,OAGNJ,IACF3B,EAAM2B,OACNnC,KAAKO,QAAQC,EAAOC,EAAOC,EAAM,aAE9BqB,EAAMC,SACTvB,EAAMqB,SAAU,EAChB9B,KAAKO,QAAQC,EAAOC,EAAOC,EAAM,YACjCD,EAAMS,SAAU,GAElBW,GAAaE,EAAMC,MAAM,IAE3BhC,KAAKK,UAAYK,EACC,IAAdmB,IACF7B,KAAKI,UAAW,EAEpB,CACAoC,UAAUhC,GACR,MAAMiC,EAASzC,KAAKE,QACpB,IAAIO,EAAQgC,EAAOC,IAAIlC,GAavB,OAZKC,IACHA,EAAQ,CACNqB,SAAS,EACTZ,SAAS,EACTa,MAAO,GACPlB,UAAW,CACT8B,SAAU,GACVC,SAAU,KAGdH,EAAOI,IAAIrC,EAAOC,IAEbA,CACT,CACAqC,OAAOtC,EAAOuC,EAAOC,GACnBhD,KAAKwC,UAAUhC,GAAOK,UAAUkC,GAAOE,KAAKD,EAC9C,CACAE,IAAI1C,EAAOuB,GACJA,GAAUA,EAAMC,QAGrBhC,KAAKwC,UAAUhC,GAAOuB,MAAMkB,QAAQlB,EACtC,CACAoB,IAAI3C,GACF,OAAOR,KAAKwC,UAAUhC,GAAOuB,MAAMC,OAAS,CAC9C,CACAV,MAAMd,GACJ,MAAMC,EAAQT,KAAKE,QAAQwC,IAAIlC,GAC1BC,IAGLA,EAAMqB,SAAU,EAChBrB,EAAMa,MAAQK,KAAKC,MACnBnB,EAAMM,SAAWN,EAAMsB,MAAMqB,QAAO,CAACC,EAAKC,IAAQlC,KAAKmC,IAAIF,EAAKC,EAAIE,YAAY,GAChFxD,KAAKuB,WACP,CACAO,QAAQtB,GACN,IAAKR,KAAKI,SACR,OAAO,EAET,MAAMK,EAAQT,KAAKE,QAAQwC,IAAIlC,GAC/B,SAAKC,GAAUA,EAAMqB,SAAYrB,EAAMsB,MAAMC,OAI/C,CACAyB,KAAKjD,GACH,MAAMC,EAAQT,KAAKE,QAAQwC,IAAIlC,GAC/B,IAAKC,IAAUA,EAAMsB,MAAMC,OACzB,OAEF,MAAMD,EAAQtB,EAAMsB,MACpB,IAAIG,EAAIH,EAAMC,OAAS,EACvB,KAAOE,GAAK,IAAKA,EACfH,EAAMG,GAAGwB,SAEXjD,EAAMsB,MAAQ,GACd/B,KAAKO,QAAQC,EAAOC,EAAOkB,KAAKC,MAAO,WACzC,CACA+B,OAAOnD,GACL,OAAOR,KAAKE,QAAQ0D,OAAOpD,EAC7B,EAEF,IAAIqD,EAAW,IAAI/D,EAEnB,MAAMgE,EAAc,cACdC,EAAgB,CACpBC,QAAQC,EAAMC,EAAIC,GAChB,OAAOA,EAAS,GAAMD,EAAKD,CAC7B,EACAG,MAAMH,EAAMC,EAAIC,GACd,MAAME,GAAK,IAAAC,GAAML,GAAQH,GACnBS,EAAKF,EAAGG,QAAS,IAAAF,GAAMJ,GAAMJ,GACnC,OAAOS,GAAMA,EAAGC,MACZD,EAAGE,IAAIJ,EAAIF,GAAQO,YACnBR,CACN,EACAS,OAAOV,EAAMC,EAAIC,GACf,OAAOF,GAAQC,EAAKD,GAAQE,CAC9B,GAEF,MAAMS,EACJ7E,YAAY8E,EAAKC,EAAQC,EAAMb,GAC7B,MAAMc,EAAeF,EAAOC,GAC5Bb,GAAK,OAAQ,CAACW,EAAIX,GAAIA,EAAIc,EAAcH,EAAIZ,OAC5C,MAAMA,GAAO,OAAQ,CAACY,EAAIZ,KAAMe,EAAcd,IAC9ClE,KAAKoC,SAAU,EACfpC,KAAKiF,IAAMJ,EAAI5D,IAAM8C,EAAcc,EAAIlE,aAAesD,GACtDjE,KAAKkF,QAAU,EAAAC,EAAQN,EAAIO,SAAW,EAAAD,EAAA,OACtCnF,KAAKqF,OAASjE,KAAKkE,MAAM3D,KAAKC,OAASiD,EAAIU,OAAS,IACpDvF,KAAKwD,UAAYxD,KAAKqC,OAASjB,KAAKkE,MAAMT,EAAI9D,UAC9Cf,KAAKwF,QAAUX,EAAIY,KACnBzF,KAAK0F,QAAUZ,EACf9E,KAAK2F,MAAQZ,EACb/E,KAAK4F,MAAQ3B,EACbjE,KAAK6F,IAAM3B,EACXlE,KAAK8F,eAAYxF,CACnB,CACAyF,SACE,OAAO/F,KAAKoC,OACd,CACA4D,OAAOnB,EAAKX,EAAIxD,GACd,GAAIV,KAAKoC,QAAS,CAChBpC,KAAKO,SAAQ,GACb,MAAMyE,EAAehF,KAAK0F,QAAQ1F,KAAK2F,OACjCM,EAAUvF,EAAOV,KAAKqF,OACtBa,EAASlG,KAAKwD,UAAYyC,EAChCjG,KAAKqF,OAAS3E,EACdV,KAAKwD,UAAYpC,KAAKkE,MAAMlE,KAAKmC,IAAI2C,EAAQrB,EAAI9D,WACjDf,KAAKqC,QAAU4D,EACfjG,KAAKwF,QAAUX,EAAIY,KACnBzF,KAAK6F,KAAM,OAAQ,CAAChB,EAAIX,GAAIA,EAAIc,EAAcH,EAAIZ,OAClDjE,KAAK4F,OAAQ,OAAQ,CAACf,EAAIZ,KAAMe,EAAcd,GAChD,CACF,CACAR,SACM1D,KAAKoC,UACPpC,KAAKsC,KAAKX,KAAKC,OACf5B,KAAKoC,SAAU,EACfpC,KAAKO,SAAQ,GAEjB,CACA+B,KAAK5B,GACH,MAAMuF,EAAUvF,EAAOV,KAAKqF,OACtBtE,EAAWf,KAAKwD,UAChBuB,EAAO/E,KAAK2F,MACZ1B,EAAOjE,KAAK4F,MACZH,EAAOzF,KAAKwF,MACZtB,EAAKlE,KAAK6F,IAChB,IAAI1B,EAEJ,GADAnE,KAAKoC,QAAU6B,IAASC,IAAOuB,GAASQ,EAAUlF,IAC7Cf,KAAKoC,QAGR,OAFApC,KAAK0F,QAAQX,GAAQb,OACrBlE,KAAKO,SAAQ,GAGX0F,EAAU,EACZjG,KAAK0F,QAAQX,GAAQd,GAGvBE,EAAU8B,EAAUlF,EAAY,EAChCoD,EAASsB,GAAQtB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASnE,KAAKkF,QAAQ9D,KAAKC,IAAI,EAAGD,KAAKmC,IAAI,EAAGY,KAC9CnE,KAAK0F,QAAQX,GAAQ/E,KAAKiF,IAAIhB,EAAMC,EAAIC,GAC1C,CACAgC,OACE,MAAMC,EAAWpG,KAAK8F,YAAc9F,KAAK8F,UAAY,IACrD,OAAO,IAAIO,SAAQ,CAACC,EAAKC,KACvBH,EAASnD,KAAK,CAACqD,MAAKC,OAAK,GAE7B,CACAhG,QAAQiG,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWpG,KAAK8F,WAAa,GACnC,IAAK,IAAI5D,EAAI,EAAGA,EAAIkE,EAASpE,OAAQE,IACnCkE,EAASlE,GAAGuE,IAEhB,EAGF,MAAMC,EAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CC,EAAS,CAAC,QAAS,cAAe,mBACxC,EAAAC,EAAA,IAAa,YAAa,CACxBrB,WAAOjF,EACPS,SAAU,IACVqE,OAAQ,eACRnE,QAAIX,EACJ2D,UAAM3D,EACNmF,UAAMnF,EACN4D,QAAI5D,EACJK,UAAML,IAER,MAAMuG,EAAmBC,OAAOC,KAAK,EAAAH,EAAA,WACrC,EAAAA,EAAA,SAAkB,YAAa,CAC7BI,WAAW,EACXC,YAAY,EACZC,YAAcC,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3E,EAAAP,EAAA,IAAa,aAAc,CACzBD,OAAQ,CACNhG,KAAM,QACNyG,WAAYT,GAEdD,QAAS,CACP/F,KAAM,SACNyG,WAAYV,KAGhB,EAAAE,EAAA,SAAkB,aAAc,CAC9BI,UAAW,cAEb,EAAAJ,EAAA,IAAa,cAAe,CAC1Bb,OAAQ,CACNsB,UAAW,CACTtG,SAAU,MAGduG,OAAQ,CACND,UAAW,CACTtG,SAAU,IAGdwG,KAAM,CACJC,WAAY,CACVb,OAAQ,CACN1C,KAAM,eAERwD,QAAS,CACP9G,KAAM,UACNI,SAAU,KAIhB2G,KAAM,CACJF,WAAY,CACVb,OAAQ,CACNzC,GAAI,eAENuD,QAAS,CACP9G,KAAM,UACNyE,OAAQ,SACRnE,GAAI0G,GAAS,EAAJA,OAKjB,MAAMC,EACJ7H,YAAYS,EAAOqH,GACjB7H,KAAK8H,OAAStH,EACdR,KAAK+H,YAAc,IAAI5H,IACvBH,KAAKgI,UAAUH,EACjB,CACAG,UAAUH,GACR,KAAK,IAAA3F,GAAS2F,GACZ,OAEF,MAAMI,EAAgBjI,KAAK+H,YAC3BjB,OAAOoB,oBAAoBL,GAAQ7G,SAAQmH,IACzC,MAAMtD,EAAMgD,EAAOM,GACnB,KAAK,IAAAjG,GAAS2C,GACZ,OAEF,MAAM2B,EAAW,CAAC,EAClB,IAAK,MAAM4B,KAAUvB,EACnBL,EAAS4B,GAAUvD,EAAIuD,KAExB,OAAQvD,EAAIuC,aAAevC,EAAIuC,YAAc,CAACe,IAAMnH,SAAS+D,IACxDA,IAASoD,GAAQF,EAAc9E,IAAI4B,IACrCkD,EAAcpF,IAAIkC,EAAMyB,EAC1B,GACA,GAEN,CACA6B,gBAAgBvD,EAAQwD,GACtB,MAAMC,EAAaD,EAAOE,QACpBA,EAAUC,EAAqB3D,EAAQyD,GAC7C,IAAKC,EACH,MAAO,GAET,MAAMhB,EAAaxH,KAAK0I,kBAAkBF,EAASD,GAOnD,OANIA,EAAWI,SACbC,EAAS9D,EAAO0D,QAAQK,YAAaN,GAAYO,MAAK,KACpDhE,EAAO0D,QAAUD,CAAU,IAC1B,SAGEf,CACT,CACAkB,kBAAkB5D,EAAQwD,GACxB,MAAML,EAAgBjI,KAAK+H,YACrBP,EAAa,GACb1F,EAAUgD,EAAO+D,cAAgB/D,EAAO+D,YAAc,CAAC,GACvDE,EAAQjC,OAAOC,KAAKuB,GACpB5H,EAAOiB,KAAKC,MAClB,IAAIM,EACJ,IAAKA,EAAI6G,EAAM/G,OAAS,EAAGE,GAAK,IAAKA,EAAG,CACtC,MAAM6C,EAAOgE,EAAM7G,GACnB,GAAuB,MAAnB6C,EAAKiE,OAAO,GACd,SAEF,GAAa,YAATjE,EAAoB,CACtByC,EAAWvE,QAAQjD,KAAKqI,gBAAgBvD,EAAQwD,IAChD,QACF,CACA,MAAMW,EAAQX,EAAOvD,GACrB,IAAIsC,EAAYvF,EAAQiD,GACxB,MAAMF,EAAMoD,EAAcvF,IAAIqC,GAC9B,GAAIsC,EAAW,CACb,GAAIxC,GAAOwC,EAAUtB,SAAU,CAC7BsB,EAAUrB,OAAOnB,EAAKoE,EAAOvI,GAC7B,QACF,CACE2G,EAAU3D,QAEd,CACKmB,GAAQA,EAAI9D,UAIjBe,EAAQiD,GAAQsC,EAAY,IAAIzC,EAAUC,EAAKC,EAAQC,EAAMkE,GAC7DzB,EAAWvE,KAAKoE,IAJdvC,EAAOC,GAAQkE,CAKnB,CACA,OAAOzB,CACT,CACAxB,OAAOlB,EAAQwD,GACb,GAA8B,IAA1BtI,KAAK+H,YAAYmB,KAEnB,YADApC,OAAOqC,OAAOrE,EAAQwD,GAGxB,MAAMd,EAAaxH,KAAK0I,kBAAkB5D,EAAQwD,GAClD,OAAId,EAAWxF,QACb6B,EAASX,IAAIlD,KAAK8H,OAAQN,IACnB,QAFT,CAIF,EAEF,SAASoB,EAASpB,EAAYJ,GAC5B,MAAMtF,EAAU,GACViF,EAAOD,OAAOC,KAAKK,GACzB,IAAK,IAAIlF,EAAI,EAAGA,EAAI6E,EAAK/E,OAAQE,IAAK,CACpC,MAAMkH,EAAO5B,EAAWT,EAAK7E,IACzBkH,GAAQA,EAAKrD,UACfjE,EAAQmB,KAAKmG,EAAKjD,OAEtB,CACA,OAAOE,QAAQgD,IAAIvH,EACrB,CACA,SAAS2G,EAAqB3D,EAAQyD,GACpC,IAAKA,EACH,OAEF,IAAIC,EAAU1D,EAAO0D,QACrB,GAAKA,EAOL,OAHIA,EAAQG,UACV7D,EAAO0D,QAAUA,EAAU1B,OAAOqC,OAAO,CAAC,EAAGX,EAAS,CAACG,SAAS,EAAOE,YAAa,CAAC,KAEhFL,EANL1D,EAAO0D,QAAUD,CAOrB,CAEA,SAASe,EAAUC,EAAOC,GACxB,MAAMC,EAAOF,GAASA,EAAMf,SAAW,CAAC,EAClCkB,EAAUD,EAAKC,QACfrI,OAAmBf,IAAbmJ,EAAKpI,IAAoBmI,EAAkB,EACjDjG,OAAmBjD,IAAbmJ,EAAKlG,IAAoBiG,EAAkB,EACvD,MAAO,CACLlI,MAAOoI,EAAUnG,EAAMlC,EACvBsI,IAAKD,EAAUrI,EAAMkC,EAEzB,CACA,SAASqG,EAAYC,EAAQC,EAAQN,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMO,EAAIT,EAAUO,EAAQL,GACtBQ,EAAIV,EAAUQ,EAAQN,GAC5B,MAAO,CACLS,IAAKD,EAAEL,IACPO,MAAOH,EAAEJ,IACTQ,OAAQH,EAAE1I,MACV8I,KAAML,EAAEzI,MAEZ,CACA,SAAS+I,EAAOpB,GACd,IAAIqB,EAAG9I,EAAG+I,EAAGC,EASb,OARI,IAAAtI,GAAS+G,IACXqB,EAAIrB,EAAMgB,IACVzI,EAAIyH,EAAMiB,MACVK,EAAItB,EAAMkB,OACVK,EAAIvB,EAAMmB,MAEVE,EAAI9I,EAAI+I,EAAIC,EAAIvB,EAEX,CACLgB,IAAKK,EACLJ,MAAO1I,EACP2I,OAAQI,EACRH,KAAMI,EACNC,UAAoB,IAAVxB,EAEd,CACA,SAASyB,EAAwBlK,EAAOmK,GACtC,MAAM5D,EAAO,GACP6D,EAAWpK,EAAMqK,uBAAuBF,GAC9C,IAAIzI,EAAG4I,EACP,IAAK5I,EAAI,EAAG4I,EAAOF,EAAS5I,OAAQE,EAAI4I,IAAQ5I,EAC9C6E,EAAK9D,KAAK2H,EAAS1I,GAAG6I,OAExB,OAAOhE,CACT,CACA,SAASiE,EAAWC,EAAOhC,EAAOiC,EAAS1C,EAAU,CAAC,GACpD,MAAMzB,EAAOkE,EAAMlE,KACboE,EAA8B,WAAjB3C,EAAQ4C,KAC3B,IAAIlJ,EAAG4I,EAAMO,EAAcC,EAC3B,GAAc,OAAVrC,EAAJ,CAGA,IAAK/G,EAAI,EAAG4I,EAAO/D,EAAK/E,OAAQE,EAAI4I,IAAQ5I,EAAG,CAE7C,GADAmJ,GAAgBtE,EAAK7E,GACjBmJ,IAAiBH,EAAS,CAC5B,GAAI1C,EAAQa,IACV,SAEF,KACF,CACAiC,EAAaL,EAAM3C,OAAO+C,IACtB,OAAeC,KAAgBH,GAAyB,IAAVlC,IAAe,IAAAsC,GAAKtC,MAAW,IAAAsC,GAAKD,MACpFrC,GAASqC,EAEb,CACA,OAAOrC,CAdP,CAeF,CACA,SAASuC,EAAyBC,GAChC,MAAM1E,EAAOD,OAAOC,KAAK0E,GACnBC,EAAQ,IAAIC,MAAM5E,EAAK/E,QAC7B,IAAIE,EAAG4I,EAAM3C,EACb,IAAKjG,EAAI,EAAG4I,EAAO/D,EAAK/E,OAAQE,EAAI4I,IAAQ5I,EAC1CiG,EAAMpB,EAAK7E,GACXwJ,EAAMxJ,GAAK,CACT6H,EAAG5B,EACH6B,EAAGyB,EAAKtD,IAGZ,OAAOuD,CACT,CACA,SAASE,EAAUrC,EAAOsC,GACxB,MAAMC,EAAUvC,GAASA,EAAMf,QAAQsD,QACvC,OAAOA,QAAwBxL,IAAZwL,QAAwCxL,IAAfuL,EAAKZ,KACnD,CACA,SAASc,EAAYC,EAAYC,EAAYJ,GAC3C,MAAO,GAAGG,EAAWE,MAAMD,EAAWC,MAAML,EAAKZ,OAASY,EAAKlL,MACjE,CACA,SAASwL,EAAc5C,GACrB,MAAM,IAAClI,EAAG,IAAEkC,EAAG,WAAE6I,EAAU,WAAEC,GAAc9C,EAAM4C,gBACjD,MAAO,CACL9K,IAAK+K,EAAa/K,EAAMiL,OAAOC,kBAC/BhJ,IAAK8I,EAAa9I,EAAM+I,OAAOE,kBAEnC,CACA,SAASC,EAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC1D,CACA,SAASE,EAAoB7B,EAAO8B,EAAQC,EAAUrM,GACpD,IAAK,MAAMkL,KAAQkB,EAAOE,wBAAwBtM,GAAM+I,UAAW,CACjE,MAAMT,EAAQgC,EAAMY,EAAKd,OACzB,GAAKiC,GAAY/D,EAAQ,IAAQ+D,GAAY/D,EAAQ,EACnD,OAAO4C,EAAKd,KAEhB,CACA,OAAO,IACT,CACA,SAASmC,EAAaC,EAAYC,GAChC,MAAM,MAAC5M,EAAO6M,YAAaxB,GAAQsB,EAC7BT,EAASlM,EAAM8M,UAAY9M,EAAM8M,QAAU,CAAC,IAC5C,OAACC,EAAM,OAAER,EAAQhC,MAAOM,GAAgBQ,EACxC2B,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACftF,EAAM4D,EAAYwB,EAAQR,EAAQlB,GAClCf,EAAOsC,EAAOpL,OACpB,IAAIiJ,EACJ,IAAK,IAAI/I,EAAI,EAAGA,EAAI4I,IAAQ5I,EAAG,CAC7B,MAAMD,EAAOmL,EAAOlL,IACb,CAACsL,GAAQzC,EAAO,CAAC2C,GAAQzE,GAAShH,EACnC0L,EAAa1L,EAAKqL,UAAYrL,EAAKqL,QAAU,CAAC,GACpDrC,EAAQ0C,EAAWD,GAASjB,EAAiBC,EAAQvE,EAAK4C,GAC1DE,EAAMI,GAAgBpC,EACtBgC,EAAM2C,KAAOd,EAAoB7B,EAAO8B,GAAQ,EAAMlB,EAAKlL,MAC3DsK,EAAM4C,QAAUf,EAAoB7B,EAAO8B,GAAQ,EAAOlB,EAAKlL,KACjE,CACF,CACA,SAASmN,EAAgBtN,EAAOiN,GAC9B,MAAMM,EAASvN,EAAMuN,OACrB,OAAOjH,OAAOC,KAAKgH,GAAQC,QAAO7F,GAAO4F,EAAO5F,GAAKsF,OAASA,IAAMQ,OACtE,CACA,SAASC,EAAqBC,EAAQpD,GACpC,OAAO,OAAcoD,EACnB,CACEpI,QAAQ,EACRqI,aAAS9N,EACT+K,aAAcN,EACdA,QACAK,KAAM,UACNzK,KAAM,WAGZ,CACA,SAAS0N,EAAkBF,EAAQpD,EAAOuD,GACxC,OAAO,OAAcH,EAAQ,CAC3BpI,QAAQ,EACRwI,UAAWxD,EACXqC,YAAQ9M,EACRkO,SAAKlO,EACLgO,UACAvD,QACAK,KAAM,UACNzK,KAAM,QAEV,CACA,SAAS8N,EAAY5C,EAAM9J,GACzB,MAAMsJ,EAAeQ,EAAKsB,WAAWpC,MAC/B0C,EAAO5B,EAAKkB,QAAUlB,EAAKkB,OAAOU,KACxC,GAAKA,EAAL,CAGA1L,EAAQA,GAAS8J,EAAK6C,QACtB,IAAK,MAAMtB,KAAUrL,EAAO,CAC1B,MAAM2K,EAASU,EAAOE,QACtB,IAAKZ,QAA2BpM,IAAjBoM,EAAOe,SAAsDnN,IAA/BoM,EAAOe,GAAMpC,GACxD,cAEKqB,EAAOe,GAAMpC,EACtB,CARA,CASF,CACA,MAAMsD,EAAsBvD,GAAkB,UAATA,GAA6B,SAATA,EACnDwD,EAAmB,CAACC,EAAQC,IAAWA,EAASD,EAAS/H,OAAOqC,OAAO,CAAC,EAAG0F,GAC3EE,EAAc,CAACC,EAAUnD,EAAMrL,IAAUwO,IAAanD,EAAKoD,QAAUpD,EAAKqD,UAC3E,CAACnI,KAAM2D,EAAwBlK,GAAO,GAAO8H,OAAQ,MAC1D,MAAM6G,EACJpP,YAAYS,EAAO6K,GACjBrL,KAAKQ,MAAQA,EACbR,KAAKoP,KAAO5O,EAAM6O,IAClBrP,KAAK+K,MAAQM,EACbrL,KAAKsP,gBAAkB,CAAC,EACxBtP,KAAKqN,YAAcrN,KAAKuP,UACxBvP,KAAKwP,MAAQxP,KAAKqN,YAAY1M,KAC9BX,KAAKwI,aAAUlI,EACfN,KAAKyP,UAAW,EAChBzP,KAAK0P,WAAQpP,EACbN,KAAK2P,iBAAcrP,EACnBN,KAAK4P,oBAAiBtP,EACtBN,KAAK6P,gBAAavP,EAClBN,KAAK8P,gBAAaxP,EAClBN,KAAK+P,qBAAsB,EAC3B/P,KAAKgQ,oBAAqB,EAC1BhQ,KAAKiQ,cAAW3P,EAChBN,KAAKkQ,UAAY,GACjBlQ,KAAKmQ,YACP,CACAA,aACE,MAAMtE,EAAO7L,KAAKqN,YAClBrN,KAAKgI,YACLhI,KAAKoQ,aACLvE,EAAKqD,SAAWtD,EAAUC,EAAKkB,OAAQlB,GACvC7L,KAAKqQ,aACP,CACAC,YAAYjF,GACNrL,KAAK+K,QAAUM,GACjBoD,EAAYzO,KAAKqN,aAEnBrN,KAAK+K,MAAQM,CACf,CACA+E,aACE,MAAM5P,EAAQR,KAAKQ,MACbqL,EAAO7L,KAAKqN,YACZe,EAAUpO,KAAKuQ,aACfC,EAAW,CAAC/C,EAAM1D,EAAGC,EAAGxI,IAAe,MAATiM,EAAe1D,EAAa,MAAT0D,EAAejM,EAAIwI,EACpEyG,EAAM5E,EAAK6E,SAAU,IAAA/I,GAAeyG,EAAQsC,QAAS5C,EAAgBtN,EAAO,MAC5EmQ,EAAM9E,EAAK+E,SAAU,IAAAjJ,GAAeyG,EAAQwC,QAAS9C,EAAgBtN,EAAO,MAC5EqQ,EAAMhF,EAAKiF,SAAU,IAAAnJ,GAAeyG,EAAQ0C,QAAShD,EAAgBtN,EAAO,MAC5EuQ,EAAYlF,EAAKkF,UACjBC,EAAMnF,EAAKoF,QAAUT,EAASO,EAAWN,EAAKE,EAAKE,GACnDK,EAAMrF,EAAKsF,QAAUX,EAASO,EAAWJ,EAAKF,EAAKI,GACzDhF,EAAKhC,OAAS7J,KAAKoR,cAAcX,GACjC5E,EAAK/B,OAAS9J,KAAKoR,cAAcT,GACjC9E,EAAKwF,OAASrR,KAAKoR,cAAcP,GACjChF,EAAK0B,OAASvN,KAAKoR,cAAcJ,GACjCnF,EAAKkB,OAAS/M,KAAKoR,cAAcF,EACnC,CACAX,aACE,OAAOvQ,KAAKQ,MAAMiL,KAAK6F,SAAStR,KAAK+K,MACvC,CACAwE,UACE,OAAOvP,KAAKQ,MAAM+Q,eAAevR,KAAK+K,MACxC,CACAqG,cAAcI,GACZ,OAAOxR,KAAKQ,MAAMuN,OAAOyD,EAC3B,CACAC,eAAelI,GACb,MAAMsC,EAAO7L,KAAKqN,YAClB,OAAO9D,IAAUsC,EAAK0B,OAClB1B,EAAKkB,OACLlB,EAAK0B,MACX,CACAmE,QACE1R,KAAK0B,QAAQ,QACf,CACAiQ,WACE,MAAM9F,EAAO7L,KAAKqN,YACdrN,KAAK0P,QACP,IAAAkC,GAAoB5R,KAAK0P,MAAO1P,MAE9B6L,EAAKqD,UACPT,EAAY5C,EAEhB,CACAgG,aACE,MAAMzD,EAAUpO,KAAKuQ,aACf9E,EAAO2C,EAAQ3C,OAAS2C,EAAQ3C,KAAO,IACvCiE,EAAQ1P,KAAK0P,MACnB,IAAI,IAAAxN,GAASuJ,GACXzL,KAAK0P,MAAQlE,EAAyBC,QACjC,GAAIiE,IAAUjE,EAAM,CACzB,GAAIiE,EAAO,EACT,IAAAkC,GAAoBlC,EAAO1P,MAC3B,MAAM6L,EAAO7L,KAAKqN,YAClBoB,EAAY5C,GACZA,EAAK6C,QAAU,EACjB,CACIjD,GAAQ3E,OAAOgL,aAAarG,KAC9B,IAAAjB,GAAkBiB,EAAMzL,MAE1BA,KAAKkQ,UAAY,GACjBlQ,KAAK0P,MAAQjE,CACf,CACF,CACA4E,cACE,MAAMxE,EAAO7L,KAAKqN,YAClBrN,KAAK6R,aACD7R,KAAK+R,qBACPlG,EAAKuC,QAAU,IAAIpO,KAAK+R,mBAE5B,CACAC,sBAAsBC,GACpB,MAAMpG,EAAO7L,KAAKqN,YACZe,EAAUpO,KAAKuQ,aACrB,IAAI2B,GAAe,EACnBlS,KAAK6R,aACL,MAAMM,EAAatG,EAAKqD,SACxBrD,EAAKqD,SAAWtD,EAAUC,EAAKkB,OAAQlB,GACnCA,EAAKZ,QAAUmD,EAAQnD,QACzBiH,GAAe,EACfzD,EAAY5C,GACZA,EAAKZ,MAAQmD,EAAQnD,OAEvBjL,KAAKoS,gBAAgBH,IACjBC,GAAgBC,IAAetG,EAAKqD,WACtChC,EAAalN,KAAM6L,EAAK6C,QAE5B,CACA1G,YACE,MAAMH,EAAS7H,KAAKQ,MAAMqH,OACpBwK,EAAYxK,EAAOyK,iBAAiBtS,KAAKwP,OACzC+C,EAAS1K,EAAO2K,gBAAgBxS,KAAKuQ,aAAc8B,GAAW,GACpErS,KAAKwI,QAAUX,EAAO4K,eAAeF,EAAQvS,KAAK0S,cAClD1S,KAAKyP,SAAWzP,KAAKwI,QAAQmK,QAC7B3S,KAAKsP,gBAAkB,CAAC,CAC1B,CACAsD,MAAMtR,EAAOuR,GACX,MAAOxF,YAAaxB,EAAM6D,MAAOjE,GAAQzL,MACnC,OAACuN,EAAM,SAAE2B,GAAYrD,EACrB2B,EAAQD,EAAOE,KACrB,IAEIvL,EAAGoB,EAAK8J,EAFR0F,EAAmB,IAAVxR,GAAeuR,IAAUpH,EAAKzJ,QAAgB6J,EAAKkH,QAC5DC,EAAO1R,EAAQ,GAAKuK,EAAK6C,QAAQpN,EAAQ,GAE7C,IAAsB,IAAlBtB,KAAKyP,SACP5D,EAAK6C,QAAUjD,EACfI,EAAKkH,SAAU,EACf3F,EAAS3B,MACJ,CAEH2B,GADE,OAAQ3B,EAAKnK,IACNtB,KAAKiT,eAAepH,EAAMJ,EAAMnK,EAAOuR,IACvC,IAAA3Q,GAASuJ,EAAKnK,IACdtB,KAAKkT,gBAAgBrH,EAAMJ,EAAMnK,EAAOuR,GAExC7S,KAAKmT,mBAAmBtH,EAAMJ,EAAMnK,EAAOuR,GAEtD,MAAMO,EAA6B,IAAqB,OAAf9P,EAAIkK,IAAoBwF,GAAQ1P,EAAIkK,GAASwF,EAAKxF,GAC3F,IAAKtL,EAAI,EAAGA,EAAI2Q,IAAS3Q,EACvB2J,EAAK6C,QAAQxM,EAAIZ,GAASgC,EAAM8J,EAAOlL,GACnC4Q,IACEM,MACFN,GAAS,GAEXE,EAAO1P,GAGXuI,EAAKkH,QAAUD,CACjB,CACI5D,GACFhC,EAAalN,KAAMoN,EAEvB,CACA+F,mBAAmBtH,EAAMJ,EAAMnK,EAAOuR,GACpC,MAAM,OAACtF,EAAM,OAAER,GAAUlB,EACnB2B,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf4F,EAAS9F,EAAO+F,YAChBC,EAAchG,IAAWR,EACzBK,EAAS,IAAIzB,MAAMkH,GACzB,IAAI3Q,EAAG4I,EAAMC,EACb,IAAK7I,EAAI,EAAG4I,EAAO+H,EAAO3Q,EAAI4I,IAAQ5I,EACpC6I,EAAQ7I,EAAIZ,EACZ8L,EAAOlL,GAAK,CACV,CAACsL,GAAQ+F,GAAehG,EAAOqF,MAAMS,EAAOtI,GAAQA,GACpD,CAAC2C,GAAQX,EAAO6F,MAAMnH,EAAKV,GAAQA,IAGvC,OAAOqC,CACT,CACA6F,eAAepH,EAAMJ,EAAMnK,EAAOuR,GAChC,MAAM,OAAChJ,EAAM,OAAEC,GAAU+B,EACnBuB,EAAS,IAAIzB,MAAMkH,GACzB,IAAI3Q,EAAG4I,EAAMC,EAAO9I,EACpB,IAAKC,EAAI,EAAG4I,EAAO+H,EAAO3Q,EAAI4I,IAAQ5I,EACpC6I,EAAQ7I,EAAIZ,EACZW,EAAOwJ,EAAKV,GACZqC,EAAOlL,GAAK,CACV6H,EAAGF,EAAO+I,MAAM3Q,EAAK,GAAI8I,GACzBf,EAAGF,EAAO8I,MAAM3Q,EAAK,GAAI8I,IAG7B,OAAOqC,CACT,CACA8F,gBAAgBrH,EAAMJ,EAAMnK,EAAOuR,GACjC,MAAM,OAAChJ,EAAM,OAAEC,GAAU+B,GACnB,SAAC2H,EAAW,IAAG,SAAEC,EAAW,KAAOzT,KAAKyP,SACxCrC,EAAS,IAAIzB,MAAMkH,GACzB,IAAI3Q,EAAG4I,EAAMC,EAAO9I,EACpB,IAAKC,EAAI,EAAG4I,EAAO+H,EAAO3Q,EAAI4I,IAAQ5I,EACpC6I,EAAQ7I,EAAIZ,EACZW,EAAOwJ,EAAKV,GACZqC,EAAOlL,GAAK,CACV6H,EAAGF,EAAO+I,OAAM,OAAiB3Q,EAAMuR,GAAWzI,GAClDf,EAAGF,EAAO8I,OAAM,OAAiB3Q,EAAMwR,GAAW1I,IAGtD,OAAOqC,CACT,CACAsG,UAAU3I,GACR,OAAO/K,KAAKqN,YAAYqB,QAAQ3D,EAClC,CACA4I,eAAe5I,GACb,OAAO/K,KAAKqN,YAAY5B,KAAKV,EAC/B,CACAC,WAAWzB,EAAO6D,EAAQhC,GACxB,MAAM5K,EAAQR,KAAKQ,MACbqL,EAAO7L,KAAKqN,YACZpE,EAAQmE,EAAO7D,EAAMkE,MACrBxC,EAAQ,CACZlE,KAAM2D,EAAwBlK,GAAO,GACrC8H,OAAQ8E,EAAOE,QAAQ/D,EAAMkE,OAE/B,OAAOzC,EAAWC,EAAOhC,EAAO4C,EAAKd,MAAO,CAACK,QAC/C,CACAwI,sBAAsBC,EAAOtK,EAAO6D,EAAQnC,GAC1C,MAAM6I,EAAc1G,EAAO7D,EAAMkE,MACjC,IAAIxE,EAAwB,OAAhB6K,EAAuBC,IAAMD,EACzC,MAAMxL,EAAS2C,GAASmC,EAAOE,QAAQ/D,EAAMkE,MACzCxC,GAAS3C,IACX2C,EAAM3C,OAASA,EACfW,EAAQ+B,EAAWC,EAAO6I,EAAa9T,KAAKqN,YAAYtC,QAE1D8I,EAAMxS,IAAMD,KAAKC,IAAIwS,EAAMxS,IAAK4H,GAChC4K,EAAMtQ,IAAMnC,KAAKmC,IAAIsQ,EAAMtQ,IAAK0F,EAClC,CACA+K,UAAUzK,EAAOyF,GACf,MAAMnD,EAAO7L,KAAKqN,YACZqB,EAAU7C,EAAK6C,QACfoE,EAASjH,EAAKkH,SAAWxJ,IAAUsC,EAAK0B,OACxCzC,EAAO4D,EAAQ1M,OACfiS,EAAajU,KAAKyR,eAAelI,GACjC0B,EAAQ8D,EAAYC,EAAUnD,EAAM7L,KAAKQ,OACzCqT,EAAQ,CAACxS,IAAKiL,OAAOE,kBAAmBjJ,IAAK+I,OAAOC,oBACnDlL,IAAK6S,EAAU3Q,IAAK4Q,GAAYhI,EAAc8H,GACrD,IAAI/R,EAAGkL,EACP,SAASgH,IACPhH,EAASsB,EAAQxM,GACjB,MAAMoJ,EAAa8B,EAAO6G,EAAWxG,MACrC,QAAQ,OAAeL,EAAO7D,EAAMkE,QAAUyG,EAAW5I,GAAc6I,EAAW7I,CACpF,CACA,IAAKpJ,EAAI,EAAGA,EAAI4I,IAAQ5I,EACtB,IAAIkS,MAGJpU,KAAK4T,sBAAsBC,EAAOtK,EAAO6D,EAAQnC,GAC7C6H,GACF,MAGJ,GAAIA,EACF,IAAK5Q,EAAI4I,EAAO,EAAG5I,GAAK,IAAKA,EAC3B,IAAIkS,IAAJ,CAGApU,KAAK4T,sBAAsBC,EAAOtK,EAAO6D,EAAQnC,GACjD,KAFA,CAKJ,OAAO4I,CACT,CACAQ,mBAAmB9K,GACjB,MAAM6D,EAASpN,KAAKqN,YAAYqB,QAC1BpG,EAAS,GACf,IAAIpG,EAAG4I,EAAM7B,EACb,IAAK/G,EAAI,EAAG4I,EAAOsC,EAAOpL,OAAQE,EAAI4I,IAAQ5I,EAC5C+G,EAAQmE,EAAOlL,GAAGqH,EAAMkE,OACpB,OAAexE,IACjBX,EAAOrF,KAAKgG,GAGhB,OAAOX,CACT,CACAgM,iBACE,OAAO,CACT,CACAC,iBAAiBxJ,GACf,MAAMc,EAAO7L,KAAKqN,YACZE,EAAS1B,EAAK0B,OACdR,EAASlB,EAAKkB,OACdK,EAASpN,KAAK0T,UAAU3I,GAC9B,MAAO,CACLyJ,MAAOjH,EAAS,GAAKA,EAAOkH,iBAAiBrH,EAAOG,EAAOE,OAAS,GACpExE,MAAO8D,EAAS,GAAKA,EAAO0H,iBAAiBrH,EAAOL,EAAOU,OAAS,GAExE,CACA/L,QAAQ0J,GACN,MAAMS,EAAO7L,KAAKqN,YAClBrN,KAAKgG,OAAOoF,GAAQ,WACpBS,EAAK6I,MAAQrK,GAAO,IAAA1C,GAAe3H,KAAKwI,QAAQmM,KAAM/K,EAAYiC,EAAKhC,OAAQgC,EAAK/B,OAAQ9J,KAAKsU,mBACnG,CACAtO,OAAOoF,GAAO,CACdjJ,OACE,MAAMkN,EAAMrP,KAAKoP,KACX5O,EAAQR,KAAKQ,MACbqL,EAAO7L,KAAKqN,YACZuH,EAAW/I,EAAKJ,MAAQ,GACxBoJ,EAAOrU,EAAMsU,UACb/O,EAAS,GACTzE,EAAQtB,KAAK6P,YAAc,EAC3BgD,EAAQ7S,KAAK8P,YAAe8E,EAAS5S,OAASV,EAC9CyT,EAA0B/U,KAAKwI,QAAQuM,wBAC7C,IAAI7S,EAIJ,IAHI2J,EAAKuC,SACPvC,EAAKuC,QAAQjM,KAAKkN,EAAKwF,EAAMvT,EAAOuR,GAEjC3Q,EAAIZ,EAAOY,EAAIZ,EAAQuR,IAAS3Q,EAAG,CACtC,MAAMoM,EAAUsG,EAAS1S,GACrBoM,EAAQW,SAGRX,EAAQvI,QAAUgP,EACpBhP,EAAO9C,KAAKqL,GAEZA,EAAQnM,KAAKkN,EAAKwF,GAEtB,CACA,IAAK3S,EAAI,EAAGA,EAAI6D,EAAO/D,SAAUE,EAC/B6D,EAAO7D,GAAGC,KAAKkN,EAAKwF,EAExB,CACAG,SAASjK,EAAOhF,GACd,MAAMqF,EAAOrF,EAAS,SAAW,UACjC,YAAiBzF,IAAVyK,GAAuB/K,KAAKqN,YAAYe,QAC3CpO,KAAKiV,6BAA6B7J,GAClCpL,KAAKkV,0BAA0BnK,GAAS,EAAGK,EACjD,CACAsH,WAAW3H,EAAOhF,EAAQqF,GACxB,MAAMgD,EAAUpO,KAAKuQ,aACrB,IAAI4E,EACJ,GAAIpK,GAAS,GAAKA,EAAQ/K,KAAKqN,YAAY5B,KAAKzJ,OAAQ,CACtD,MAAMsM,EAAUtO,KAAKqN,YAAY5B,KAAKV,GACtCoK,EAAU7G,EAAQ2B,WACf3B,EAAQ2B,SAAW5B,EAAkBrO,KAAK0S,aAAc3H,EAAOuD,IAClE6G,EAAQ/H,OAASpN,KAAK0T,UAAU3I,GAChCoK,EAAQ3G,IAAMJ,EAAQ3C,KAAKV,GAC3BoK,EAAQpK,MAAQoK,EAAQ5G,UAAYxD,CACtC,MACEoK,EAAUnV,KAAKiQ,WACZjQ,KAAKiQ,SAAW/B,EAAqBlO,KAAKQ,MAAMkS,aAAc1S,KAAK+K,QACtEoK,EAAQ/G,QAAUA,EAClB+G,EAAQpK,MAAQoK,EAAQ9J,aAAerL,KAAK+K,MAI9C,OAFAoK,EAAQpP,SAAWA,EACnBoP,EAAQ/J,KAAOA,EACR+J,CACT,CACAF,6BAA6B7J,GAC3B,OAAOpL,KAAKoV,uBAAuBpV,KAAK+R,mBAAmB7F,GAAId,EACjE,CACA8J,0BAA0BnK,EAAOK,GAC/B,OAAOpL,KAAKoV,uBAAuBpV,KAAKqV,gBAAgBnJ,GAAId,EAAML,EACpE,CACAqK,uBAAuBE,EAAalK,EAAO,UAAWL,GACpD,MAAMhF,EAAkB,WAATqF,EACTmK,EAAQvV,KAAKsP,gBACbkG,EAAWF,EAAc,IAAMlK,EAC/ByD,EAAS0G,EAAMC,GACfC,EAAUzV,KAAK+P,sBAAuB,OAAQhF,GACpD,GAAI8D,EACF,OAAOD,EAAiBC,EAAQ4G,GAElC,MAAM5N,EAAS7H,KAAKQ,MAAMqH,OACpBwK,EAAYxK,EAAO6N,wBAAwB1V,KAAKwP,MAAO8F,GACvDK,EAAW5P,EAAS,CAAC,GAAGuP,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtF/C,EAAS1K,EAAO2K,gBAAgBxS,KAAKuQ,aAAc8B,GACnDuD,EAAQ9O,OAAOC,KAAK,EAAAH,EAAA,SAAkB0O,IACtCH,EAAU,IAAMnV,KAAK0S,WAAW3H,EAAOhF,GACvCuC,EAAST,EAAOgO,oBAAoBtD,EAAQqD,EAAOT,EAASQ,GAKlE,OAJIrN,EAAOK,UACTL,EAAOK,QAAU8M,EACjBF,EAAMC,GAAY1O,OAAOgP,OAAOlH,EAAiBtG,EAAQmN,KAEpDnN,CACT,CACAyN,mBAAmBhL,EAAOiL,EAAYjQ,GACpC,MAAMvF,EAAQR,KAAKQ,MACb+U,EAAQvV,KAAKsP,gBACbkG,EAAW,aAAaQ,IACxBnH,EAAS0G,EAAMC,GACrB,GAAI3G,EACF,OAAOA,EAET,IAAIrG,EACJ,IAAgC,IAA5BhI,EAAMgI,QAAQnB,UAAqB,CACrC,MAAMQ,EAAS7H,KAAKQ,MAAMqH,OACpBwK,EAAYxK,EAAOoO,0BAA0BjW,KAAKwP,MAAOwG,GACzDzD,EAAS1K,EAAO2K,gBAAgBxS,KAAKuQ,aAAc8B,GACzD7J,EAAUX,EAAO4K,eAAeF,EAAQvS,KAAK0S,WAAW3H,EAAOhF,EAAQiQ,GACzE,CACA,MAAMxO,EAAa,IAAII,EAAWpH,EAAOgI,GAAWA,EAAQhB,YAI5D,OAHIgB,GAAWA,EAAQ0N,aACrBX,EAAMC,GAAY1O,OAAOgP,OAAOtO,IAE3BA,CACT,CACA2O,iBAAiB3N,GACf,GAAKA,EAAQG,QAGb,OAAO3I,KAAK4P,iBAAmB5P,KAAK4P,eAAiB9I,OAAOqC,OAAO,CAAC,EAAGX,GACzE,CACA4N,eAAehL,EAAMiL,GACnB,OAAQA,GAAiB1H,EAAmBvD,IAASpL,KAAKQ,MAAM8V,mBAClE,CACAC,cAAcjI,EAASvD,EAAO3D,EAAYgE,GACpCuD,EAAmBvD,GACrBtE,OAAOqC,OAAOmF,EAASlH,GAEvBpH,KAAK+V,mBAAmBhL,EAAOK,GAAMpF,OAAOsI,EAASlH,EAEzD,CACAoP,oBAAoBH,EAAejL,EAAM7C,GACnC8N,IAAkB1H,EAAmBvD,IACvCpL,KAAK+V,wBAAmBzV,EAAW8K,GAAMpF,OAAOqQ,EAAe9N,EAEnE,CACAkO,UAAUnI,EAASvD,EAAOK,EAAMrF,GAC9BuI,EAAQvI,OAASA,EACjB,MAAMyC,EAAUxI,KAAKgV,SAASjK,EAAOhF,GACrC/F,KAAK+V,mBAAmBhL,EAAOK,EAAMrF,GAAQC,OAAOsI,EAAS,CAC3D9F,SAAWzC,GAAU/F,KAAKmW,iBAAiB3N,IAAaA,GAE5D,CACAkO,iBAAiBpI,EAASjD,EAAcN,GACtC/K,KAAKyW,UAAUnI,EAASvD,EAAO,UAAU,EAC3C,CACA4L,cAAcrI,EAASjD,EAAcN,GACnC/K,KAAKyW,UAAUnI,EAASvD,EAAO,UAAU,EAC3C,CACA6L,2BACE,MAAMtI,EAAUtO,KAAKqN,YAAYe,QAC7BE,GACFtO,KAAKyW,UAAUnI,OAAShO,EAAW,UAAU,EAEjD,CACAuW,wBACE,MAAMvI,EAAUtO,KAAKqN,YAAYe,QAC7BE,GACFtO,KAAKyW,UAAUnI,OAAShO,EAAW,UAAU,EAEjD,CACA8R,gBAAgBH,GACd,MAAMxG,EAAOzL,KAAK0P,MACZkF,EAAW5U,KAAKqN,YAAY5B,KAClC,IAAK,MAAOhF,EAAQqQ,EAAMC,KAAS/W,KAAKkQ,UACtClQ,KAAKyG,GAAQqQ,EAAMC,GAErB/W,KAAKkQ,UAAY,GACjB,MAAM8G,EAAUpC,EAAS5S,OACnBiV,EAAUxL,EAAKzJ,OACf6Q,EAAQzR,KAAKC,IAAI4V,EAASD,GAC5BnE,GACF7S,KAAK4S,MAAM,EAAGC,GAEZoE,EAAUD,EACZhX,KAAKkX,gBAAgBF,EAASC,EAAUD,EAAS/E,GACxCgF,EAAUD,GACnBhX,KAAKmX,gBAAgBF,EAASD,EAAUC,EAE5C,CACAC,gBAAgB5V,EAAOuR,EAAOZ,GAAmB,GAC/C,MAAMpG,EAAO7L,KAAKqN,YACZ5B,EAAOI,EAAKJ,KACZ9B,EAAMrI,EAAQuR,EACpB,IAAI3Q,EACJ,MAAMkV,EAAQC,IAEZ,IADAA,EAAIrV,QAAU6Q,EACT3Q,EAAImV,EAAIrV,OAAS,EAAGE,GAAKyH,EAAKzH,IACjCmV,EAAInV,GAAKmV,EAAInV,EAAI2Q,EACnB,EAGF,IADAuE,EAAK3L,GACAvJ,EAAIZ,EAAOY,EAAIyH,IAAOzH,EACzBuJ,EAAKvJ,GAAK,IAAIlC,KAAKqV,gBAEjBrV,KAAKyP,UACP2H,EAAKvL,EAAK6C,SAEZ1O,KAAK4S,MAAMtR,EAAOuR,GACdZ,GACFjS,KAAKsX,eAAe7L,EAAMnK,EAAOuR,EAAO,QAE5C,CACAyE,eAAehJ,EAAShN,EAAOuR,EAAOzH,GAAO,CAC7C+L,gBAAgB7V,EAAOuR,GACrB,MAAMhH,EAAO7L,KAAKqN,YAClB,GAAIrN,KAAKyP,SAAU,CACjB,MAAM8H,EAAU1L,EAAK6C,QAAQ8I,OAAOlW,EAAOuR,GACvChH,EAAKqD,UACPT,EAAY5C,EAAM0L,EAEtB,CACA1L,EAAKJ,KAAK+L,OAAOlW,EAAOuR,EAC1B,CACA4E,MAAMC,GACJ,GAAI1X,KAAKyP,SACPzP,KAAKkQ,UAAUjN,KAAKyU,OACf,CACL,MAAOjR,EAAQqQ,EAAMC,GAAQW,EAC7B1X,KAAKyG,GAAQqQ,EAAMC,EACrB,CACA/W,KAAKQ,MAAMmX,aAAa1U,KAAK,CAACjD,KAAK+K,SAAU2M,GAC/C,CACAE,cACE,MAAM/E,EAAQgF,UAAU7V,OACxBhC,KAAKyX,MAAM,CAAC,kBAAmBzX,KAAKuQ,aAAa9E,KAAKzJ,OAAS6Q,EAAOA,GACxE,CACAiF,aACE9X,KAAKyX,MAAM,CAAC,kBAAmBzX,KAAKqN,YAAY5B,KAAKzJ,OAAS,EAAG,GACnE,CACA+V,eACE/X,KAAKyX,MAAM,CAAC,kBAAmB,EAAG,GACpC,CACAO,cAAc1W,EAAOuR,GACfA,GACF7S,KAAKyX,MAAM,CAAC,kBAAmBnW,EAAOuR,IAExC,MAAMoF,EAAWJ,UAAU7V,OAAS,EAChCiW,GACFjY,KAAKyX,MAAM,CAAC,kBAAmBnW,EAAO2W,GAE1C,CACAC,iBACElY,KAAKyX,MAAM,CAAC,kBAAmB,EAAGI,UAAU7V,QAC9C,EAMF,SAASmW,EAAkB5O,EAAO5I,GAChC,IAAK4I,EAAM6O,OAAOC,KAAM,CACtB,MAAMC,EAAe/O,EAAM0D,wBAAwBtM,GACnD,IAAI2H,EAAS,GACb,IAAK,IAAIpG,EAAI,EAAG4I,EAAOwN,EAAatW,OAAQE,EAAI4I,EAAM5I,IACpDoG,EAASA,EAAOiQ,OAAOD,EAAapW,GAAGiL,WAAWkH,mBAAmB9K,IAEvEA,EAAM6O,OAAOC,MAAO,IAAAG,GAAalQ,EAAOmQ,MAAK,CAACC,EAAGnO,IAAMmO,EAAInO,IAC7D,CACA,OAAOhB,EAAM6O,OAAOC,IACtB,CACA,SAASM,EAAqB9M,GAC5B,MAAMtC,EAAQsC,EAAK0B,OACbjF,EAAS6P,EAAkB5O,EAAOsC,EAAKlL,MAC7C,IACIuB,EAAG4I,EAAM8N,EAAM5F,EADf3R,EAAMkI,EAAMsP,QAEhB,MAAMC,EAAmB,KACV,QAATF,IAA4B,QAAVA,KAGlB,OAAQ5F,KACV3R,EAAMD,KAAKC,IAAIA,EAAKD,KAAK2X,IAAIH,EAAO5F,IAAS3R,IAE/C2R,EAAO4F,EAAI,EAEb,IAAK1W,EAAI,EAAG4I,EAAOxC,EAAOtG,OAAQE,EAAI4I,IAAQ5I,EAC5C0W,EAAOrP,EAAMyP,iBAAiB1Q,EAAOpG,IACrC4W,IAGF,IADA9F,OAAO1S,EACF4B,EAAI,EAAG4I,EAAOvB,EAAM0P,MAAMjX,OAAQE,EAAI4I,IAAQ5I,EACjD0W,EAAOrP,EAAM2P,gBAAgBhX,GAC7B4W,IAEF,OAAOzX,CACT,CACA,SAAS8X,EAAyBpO,EAAOqO,EAAO5Q,EAAS6Q,GACvD,MAAMC,EAAY9Q,EAAQ+Q,aAC1B,IAAIrQ,EAAMsQ,EAQV,OAPI,OAAcF,IAChBpQ,EAAOkQ,EAAM/X,IAAMmH,EAAQiR,mBAC3BD,EAAQhR,EAAQkR,gBAEhBxQ,EAAOoQ,EAAYD,EACnBG,EAAQ,GAEH,CACLG,MAAOzQ,EAAOmQ,EACdG,QACAlY,MAAO8X,EAAMQ,OAAO7O,GAAU7B,EAAO,EAEzC,CACA,SAAS2Q,EAA0B9O,EAAOqO,EAAO5Q,EAAS6Q,GACxD,MAAMO,EAASR,EAAMQ,OACfhB,EAAOgB,EAAO7O,GACpB,IAAIiI,EAAOjI,EAAQ,EAAI6O,EAAO7O,EAAQ,GAAK,KACvC+O,EAAO/O,EAAQ6O,EAAO5X,OAAS,EAAI4X,EAAO7O,EAAQ,GAAK,KAC3D,MAAMgP,EAAUvR,EAAQiR,mBACX,OAATzG,IACFA,EAAO4F,GAAiB,OAATkB,EAAgBV,EAAMzP,IAAMyP,EAAM9X,MAAQwY,EAAOlB,IAErD,OAATkB,IACFA,EAAOlB,EAAOA,EAAO5F,GAEvB,MAAM1R,EAAQsX,GAAQA,EAAOxX,KAAKC,IAAI2R,EAAM8G,IAAS,EAAIC,EACnD7Q,EAAO9H,KAAK2X,IAAIe,EAAO9G,GAAQ,EAAI+G,EACzC,MAAO,CACLJ,MAAOzQ,EAAOmQ,EACdG,MAAOhR,EAAQkR,cACfpY,QAEJ,CACA,SAAS0Y,EAAcC,EAAOhY,EAAM8K,EAAQ7K,GAC1C,MAAMgY,EAAanN,EAAO6F,MAAMqH,EAAM,GAAI/X,GACpCiY,EAAWpN,EAAO6F,MAAMqH,EAAM,GAAI/X,GAClCb,EAAMD,KAAKC,IAAI6Y,EAAYC,GAC3B5W,EAAMnC,KAAKmC,IAAI2W,EAAYC,GACjC,IAAIC,EAAW/Y,EACXgZ,EAAS9W,EACTnC,KAAK2X,IAAI1X,GAAOD,KAAK2X,IAAIxV,KAC3B6W,EAAW7W,EACX8W,EAAShZ,GAEXY,EAAK8K,EAAOU,MAAQ4M,EACpBpY,EAAKqY,QAAU,CACbF,WACAC,SACA/Y,MAAO4Y,EACPvQ,IAAKwQ,EACL9Y,MACAkC,MAEJ,CACA,SAASgX,EAAWN,EAAOhY,EAAM8K,EAAQ7K,GAMvC,OALI,OAAQ+X,GACVD,EAAcC,EAAOhY,EAAM8K,EAAQ7K,GAEnCD,EAAK8K,EAAOU,MAAQV,EAAO6F,MAAMqH,EAAO/X,GAEnCD,CACT,CACA,SAASuY,EAAsB3O,EAAMJ,EAAMnK,EAAOuR,GAChD,MAAMtF,EAAS1B,EAAK0B,OACdR,EAASlB,EAAKkB,OACdsG,EAAS9F,EAAO+F,YAChBC,EAAchG,IAAWR,EACzBK,EAAS,GACf,IAAIlL,EAAG4I,EAAM7I,EAAMgY,EACnB,IAAK/X,EAAIZ,EAAOwJ,EAAOxJ,EAAQuR,EAAO3Q,EAAI4I,IAAQ5I,EAChD+X,EAAQxO,EAAKvJ,GACbD,EAAO,CAAC,EACRA,EAAKsL,EAAOE,MAAQ8F,GAAehG,EAAOqF,MAAMS,EAAOnR,GAAIA,GAC3DkL,EAAOnK,KAAKsX,EAAWN,EAAOhY,EAAM8K,EAAQ7K,IAE9C,OAAOkL,CACT,CACA,SAASqN,EAAWC,GAClB,OAAOA,QAA8Bpa,IAApBoa,EAAON,eAA4C9Z,IAAlBoa,EAAOL,MAC3D,CACA,SAASM,EAAQzR,EAAM6D,EAAQ6N,GAC7B,OAAa,IAAT1R,GACK,IAAAqC,GAAKrC,IAEN6D,EAAO8N,eAAiB,GAAK,IAAM9N,EAAO1L,KAAOuZ,EAAa,GAAK,EAC7E,CACA,SAASE,EAAY1T,GACnB,IAAIsC,EAASpI,EAAOqI,EAAKM,EAAKE,EAiB9B,OAhBI/C,EAAW2T,YACbrR,EAAUtC,EAAW4T,KAAO5T,EAAW2C,EACvCzI,EAAQ,OACRqI,EAAM,UAEND,EAAUtC,EAAW4T,KAAO5T,EAAW4C,EACvC1I,EAAQ,SACRqI,EAAM,OAEJD,GACFO,EAAM,MACNE,EAAS,UAETF,EAAM,QACNE,EAAS,OAEJ,CAAC7I,QAAOqI,MAAKD,UAASO,MAAKE,SACpC,CACA,SAAS8Q,EAAiB7T,EAAYoB,EAASyC,EAAOF,GACpD,IAAImQ,EAAO1S,EAAQ2S,cACnB,MAAM7U,EAAM,CAAC,EACb,IAAK4U,EAEH,YADA9T,EAAW+T,cAAgB7U,GAG7B,MAAM,MAAChF,EAAK,IAAEqI,EAAG,QAAED,EAAO,IAAEO,EAAG,OAAEE,GAAU2Q,EAAY1T,GAC1C,WAAT8T,GAAqBjQ,IACvB7D,EAAWgU,oBAAqB,GAC3BnQ,EAAM2C,MAAQ,KAAO7C,EACxBmQ,EAAOjR,GACGgB,EAAM4C,SAAW,KAAO9C,EAClCmQ,EAAO/Q,GAEP7D,EAAI+U,EAAUlR,EAAQ7I,EAAOqI,EAAKD,KAAY,EAC9CwR,EAAOjR,IAGX3D,EAAI+U,EAAUH,EAAM5Z,EAAOqI,EAAKD,KAAY,EAC5CtC,EAAW+T,cAAgB7U,CAC7B,CACA,SAAS+U,EAAUH,EAAMxC,EAAGnO,EAAGb,GAO7B,OANIA,GACFwR,EAAOI,EAAKJ,EAAMxC,EAAGnO,GACrB2Q,EAAOK,EAASL,EAAM3Q,EAAGmO,IAEzBwC,EAAOK,EAASL,EAAMxC,EAAGnO,GAEpB2Q,CACT,CACA,SAASI,EAAKE,EAAMC,EAAIC,GACtB,OAAOF,IAASC,EAAKC,EAAKF,IAASE,EAAKD,EAAKD,CAC/C,CACA,SAASD,EAAS5T,EAAGrG,EAAOqI,GAC1B,MAAa,UAANhC,EAAgBrG,EAAc,QAANqG,EAAcgC,EAAMhC,CACrD,CACA,SAASgU,EAAiBvU,GAAY,cAACwU,GAAgBpC,GACrDpS,EAAWwU,cAAkC,SAAlBA,EACb,IAAVpC,EAAc,IAAO,EACrBoC,CACN,CA9LAzM,EAAkB0M,SAAW,CAAC,EAC9B1M,EAAkB2M,UAAU/J,mBAAqB,KACjD5C,EAAkB2M,UAAUzG,gBAAkB,KA6L9C,MAAM0G,UAAsB5M,EAC1BgE,mBAAmBtH,EAAMJ,EAAMnK,EAAOuR,GACpC,OAAO2H,EAAsB3O,EAAMJ,EAAMnK,EAAOuR,EAClD,CACAI,eAAepH,EAAMJ,EAAMnK,EAAOuR,GAChC,OAAO2H,EAAsB3O,EAAMJ,EAAMnK,EAAOuR,EAClD,CACAK,gBAAgBrH,EAAMJ,EAAMnK,EAAOuR,GACjC,MAAM,OAACtF,EAAM,OAAER,GAAUlB,GACnB,SAAC2H,EAAW,IAAG,SAAEC,EAAW,KAAOzT,KAAKyP,SACxCuM,EAA2B,MAAhBzO,EAAOE,KAAe+F,EAAWC,EAC5CwI,EAA2B,MAAhBlP,EAAOU,KAAe+F,EAAWC,EAC5CrG,EAAS,GACf,IAAIlL,EAAG4I,EAAM7I,EAAMia,EACnB,IAAKha,EAAIZ,EAAOwJ,EAAOxJ,EAAQuR,EAAO3Q,EAAI4I,IAAQ5I,EAChDga,EAAMzQ,EAAKvJ,GACXD,EAAO,CAAC,EACRA,EAAKsL,EAAOE,MAAQF,EAAOqF,OAAM,OAAiBsJ,EAAKF,GAAW9Z,GAClEkL,EAAOnK,KAAKsX,GAAW,OAAiB2B,EAAKD,GAAWha,EAAM8K,EAAQ7K,IAExE,OAAOkL,CACT,CACAwG,sBAAsBC,EAAOtK,EAAO6D,EAAQnC,GAC1CkR,MAAMvI,sBAAsBC,EAAOtK,EAAO6D,EAAQnC,GAClD,MAAMyP,EAAStN,EAAOkN,QAClBI,GAAUnR,IAAUvJ,KAAKqN,YAAYN,SACvC8G,EAAMxS,IAAMD,KAAKC,IAAIwS,EAAMxS,IAAKqZ,EAAOrZ,KACvCwS,EAAMtQ,IAAMnC,KAAKmC,IAAIsQ,EAAMtQ,IAAKmX,EAAOnX,KAE3C,CACA+Q,iBACE,OAAO,CACT,CACAC,iBAAiBxJ,GACf,MAAMc,EAAO7L,KAAKqN,aACZ,OAACE,EAAM,OAAER,GAAUlB,EACnBuB,EAASpN,KAAK0T,UAAU3I,GACxB2P,EAAStN,EAAOkN,QAChBrR,EAAQwR,EAAWC,GACrB,IAAMA,EAAOpZ,MAAQ,KAAOoZ,EAAO/Q,IAAM,IACzC,GAAKoD,EAAO0H,iBAAiBrH,EAAOL,EAAOU,OAC/C,MAAO,CACL+G,MAAO,GAAKjH,EAAOkH,iBAAiBrH,EAAOG,EAAOE,OAClDxE,QAEJ,CACAkH,aACEnQ,KAAK+P,qBAAsB,EAC3BoM,MAAMhM,aACN,MAAMtE,EAAO7L,KAAKqN,YAClBxB,EAAKZ,MAAQjL,KAAKuQ,aAAatF,KACjC,CACAjF,OAAOoF,GACL,MAAMS,EAAO7L,KAAKqN,YAClBrN,KAAKsX,eAAezL,EAAKJ,KAAM,EAAGI,EAAKJ,KAAKzJ,OAAQoJ,EACtD,CACAkM,eAAe8E,EAAM9a,EAAOuR,EAAOzH,GACjC,MAAMsG,EAAiB,UAATtG,GACR,MAACL,EAAOsC,aAAa,OAACN,IAAW/M,KACjCgb,EAAOjO,EAAOsP,eACdtB,EAAahO,EAAO8N,eACpBzB,EAAQpZ,KAAKsc,YACbC,EAAYvc,KAAKkV,0BAA0B5T,EAAO8J,GAClDiL,EAAgBrW,KAAKmW,iBAAiBoG,GACtCnG,EAAiBpW,KAAKoW,eAAehL,EAAMiL,GACjDrW,KAAKwW,oBAAoBH,EAAejL,EAAMmR,GAC9C,IAAK,IAAIra,EAAIZ,EAAOY,EAAIZ,EAAQuR,EAAO3Q,IAAK,CAC1C,MAAMkL,EAASpN,KAAK0T,UAAUxR,GACxBsa,EAAU9K,IAAS,OAActE,EAAOL,EAAOU,OAAS,CAACuN,OAAMyB,KAAMzB,GAAQhb,KAAK0c,yBAAyBxa,GAC3Gya,EAAU3c,KAAK4c,yBAAyB1a,EAAGkX,GAC3CnO,GAASmC,EAAOE,SAAW,CAAC,GAAGP,EAAOU,MACtCrG,EAAa,CACjB2T,aACAC,KAAMwB,EAAQxB,KACdI,oBAAqBnQ,GAASwP,EAAWrN,EAAOkN,UAAavP,IAAUE,EAAM2C,MAAQ7C,IAAUE,EAAM4C,QACrG9D,EAAGgR,EAAayB,EAAQC,KAAOE,EAAQE,OACvC7S,EAAG+Q,EAAa4B,EAAQE,OAASL,EAAQC,KACzCK,OAAQ/B,EAAa4B,EAAQzT,KAAO9H,KAAK2X,IAAIyD,EAAQtT,MACrD6T,MAAOhC,EAAa3Z,KAAK2X,IAAIyD,EAAQtT,MAAQyT,EAAQzT,MAEnDkN,IACFhP,EAAWoB,QAAU6N,GAAiBrW,KAAKkV,0BAA0BhT,EAAGka,EAAKla,GAAG6D,OAAS,SAAWqF,IAEtG,MAAM5C,EAAUpB,EAAWoB,SAAW4T,EAAKla,GAAGsG,QAC9CyS,EAAiB7T,EAAYoB,EAASyC,EAAOF,GAC7C4Q,EAAiBvU,EAAYoB,EAAS4Q,EAAMI,OAC5CxZ,KAAKuW,cAAc6F,EAAKla,GAAIA,EAAGkF,EAAYgE,EAC7C,CACF,CACA4R,WAAWC,EAAM1O,GACf,MAAM1C,EAAO7L,KAAKqN,YACZE,EAAS1B,EAAK0B,OACd3C,EAAW2C,EAAON,wBAAwBjN,KAAKwP,OAC/C1D,EAAUyB,EAAO/E,QAAQsD,QACzBhB,EAAOF,EAAS5I,OAChB0K,EAAS,GACf,IAAIxK,EAAGD,EACP,IAAKC,EAAI,EAAGA,EAAI4I,IAAQ5I,EAEtB,GADAD,EAAO2I,EAAS1I,GACXD,EAAKkL,WAAW3E,QAAQ0U,QAA7B,CAGA,GAAyB,qBAAd3O,EAA2B,CACpC,MAAM4O,EAAMlb,EAAKkL,WAAWuG,UAAUnF,GACpCtM,EAAKkL,WAAWE,YAAYN,OAAOU,MAErC,IAAI,OAAc0P,IAAQC,MAAMD,GAC9B,QAEJ,CAKA,KAJgB,IAAZrR,IAAqD,IAAhCY,EAAO2Q,QAAQpb,EAAKgJ,aAClC3K,IAAZwL,QAAwCxL,IAAf2B,EAAKgJ,QAC3ByB,EAAOzJ,KAAKhB,EAAKgJ,OAEfhJ,EAAK8I,QAAUkS,EACjB,KAdF,CAoBF,OAHKvQ,EAAO1K,QACV0K,EAAOzJ,UAAK3C,GAEPoM,CACT,CACA4Q,eAAevS,GACb,OAAO/K,KAAKgd,gBAAW1c,EAAWyK,GAAO/I,MAC3C,CACAub,eAAelS,EAAclE,EAAMoH,GACjC,MAAM7B,EAAS1M,KAAKgd,WAAW3R,EAAckD,GACvCxD,OAAkBzK,IAAT6G,EACXuF,EAAO2Q,QAAQlW,IACd,EACL,OAAmB,IAAX4D,EACJ2B,EAAO1K,OAAS,EAChB+I,CACN,CACAuR,YACE,MAAM7S,EAAOzJ,KAAKwI,QACZqD,EAAO7L,KAAKqN,YACZE,EAAS1B,EAAK0B,OACdqM,EAAS,GACf,IAAI1X,EAAG4I,EACP,IAAK5I,EAAI,EAAG4I,EAAOe,EAAKJ,KAAKzJ,OAAQE,EAAI4I,IAAQ5I,EAC/C0X,EAAO3W,KAAKsK,EAAOyL,iBAAiBhZ,KAAK0T,UAAUxR,GAAGqL,EAAOE,MAAOvL,IAEtE,MAAMqX,EAAe9P,EAAK8P,aACpBlY,EAAMkY,GAAgBZ,EAAqB9M,GACjD,MAAO,CACLxK,MACAuY,SACAtY,MAAOiM,EAAOiQ,YACd7T,IAAK4D,EAAOkQ,UACZpE,WAAYrZ,KAAKsd,iBACjB/T,MAAOgE,EACP2P,QAASzT,EAAKyT,QACd1D,MAAOD,EAAe,EAAI9P,EAAKgQ,mBAAqBhQ,EAAKiQ,cAE7D,CACAgD,yBAAyB3R,GACvB,MAAOsC,aAAa,OAACN,EAAM,SAAEmC,GAAW1G,SAAUwS,KAAM0C,EAAS,aAAEC,IAAiB3d,KAC9E4a,EAAa8C,GAAa,EAC1BtQ,EAASpN,KAAK0T,UAAU3I,GACxB2P,EAAStN,EAAOkN,QAChBsD,EAAWnD,EAAWC,GAC5B,IAGI+B,EAAMvT,EAHND,EAAQmE,EAAOL,EAAOU,MACtBnM,EAAQ,EACRU,EAASkN,EAAWlP,KAAKgL,WAAW+B,EAAQK,EAAQ8B,GAAYjG,EAEhEjH,IAAWiH,IACb3H,EAAQU,EAASiH,EACjBjH,EAASiH,GAEP2U,IACF3U,EAAQyR,EAAON,SACfpY,EAAS0Y,EAAOL,OAASK,EAAON,SAClB,IAAVnR,IAAe,IAAAsC,GAAKtC,MAAW,IAAAsC,GAAKmP,EAAOL,UAC7C/Y,EAAQ,GAEVA,GAAS2H,GAEX,MAAMiR,GAAc,OAAcwD,IAAeE,EAAuBtc,EAAZoc,EAC5D,IAAI1C,EAAOjO,EAAOiM,iBAAiBkB,GAOnC,GALEuC,EADEzc,KAAKQ,MAAMqd,kBAAkB9S,GACxBgC,EAAOiM,iBAAiB1X,EAAQU,GAEhCgZ,EAET9R,EAAOuT,EAAOzB,EACV5Z,KAAK2X,IAAI7P,GAAQyU,EAAc,CACjCzU,EAAOyR,EAAQzR,EAAM6D,EAAQ6N,GAAc+C,EACvC1U,IAAU2R,IACZI,GAAQ9R,EAAO,GAEjB,MAAM4U,EAAa/Q,EAAOgR,mBAAmB,GACvCC,EAAWjR,EAAOgR,mBAAmB,GACrC1c,EAAMD,KAAKC,IAAIyc,EAAYE,GAC3Bza,EAAMnC,KAAKmC,IAAIua,EAAYE,GACjChD,EAAO5Z,KAAKmC,IAAInC,KAAKC,IAAI2Z,EAAMzX,GAAMlC,GACrCob,EAAOzB,EAAO9R,CAChB,CACA,GAAI8R,IAASjO,EAAOiM,iBAAiB4B,GAAa,CAChD,MAAMqD,GAAW,IAAA1S,GAAKrC,GAAQ6D,EAAOmR,qBAAqBtD,GAAc,EACxEI,GAAQiD,EACR/U,GAAQ+U,CACV,CACA,MAAO,CACL/U,OACA8R,OACAyB,OACAI,OAAQJ,EAAOvT,EAAO,EAE1B,CACA0T,yBAAyB7R,EAAOqO,GAC9B,MAAM7P,EAAQ6P,EAAM7P,MACdf,EAAUxI,KAAKwI,QACf2V,EAAW3V,EAAQ2V,SACnBC,GAAkB,IAAAzW,GAAea,EAAQ4V,gBAAiBC,KAChE,IAAIxB,EAAQ3T,EACZ,GAAIkQ,EAAM8D,QAAS,CACjB,MAAM7D,EAAa8E,EAAWne,KAAKsd,eAAevS,GAASqO,EAAMC,WAC3DxF,EAAiC,SAAzBrL,EAAQ+Q,aAClBM,EAA0B9O,EAAOqO,EAAO5Q,EAAS6Q,GACjDF,EAAyBpO,EAAOqO,EAAO5Q,EAAS6Q,GAC9CiF,EAAate,KAAKud,eAAevd,KAAK+K,MAAO/K,KAAKqN,YAAYpC,MAAOkT,EAAWpT,OAAQzK,GAC9Fuc,EAAShJ,EAAMvS,MAASuS,EAAM8F,MAAQ2E,EAAezK,EAAM8F,MAAQ,EACnEzQ,EAAO9H,KAAKC,IAAI+c,EAAiBvK,EAAM8F,MAAQ9F,EAAM2F,MACvD,MACEqD,EAAStT,EAAMyP,iBAAiBhZ,KAAK0T,UAAU3I,GAAOxB,EAAMkE,MAAO1C,GACnE7B,EAAO9H,KAAKC,IAAI+c,EAAiBhF,EAAM/X,IAAM+X,EAAMI,OAErD,MAAO,CACLwB,KAAM6B,EAAS3T,EAAO,EACtBuT,KAAMI,EAAS3T,EAAO,EACtB2T,SACA3T,OAEJ,CACA/G,OACE,MAAM0J,EAAO7L,KAAKqN,YACZN,EAASlB,EAAKkB,OACdwR,EAAQ1S,EAAKJ,KACbX,EAAOyT,EAAMvc,OACnB,IAAIE,EAAI,EACR,KAAOA,EAAI4I,IAAQ5I,EACsB,OAAnClC,KAAK0T,UAAUxR,GAAG6K,EAAOU,OAC3B8Q,EAAMrc,GAAGC,KAAKnC,KAAKoP,KAGzB,EAEF2M,EAAc7P,GAAK,MACnB6P,EAAcF,SAAW,CACvB9J,oBAAoB,EACpBsD,gBAAiB,MACjBoE,mBAAoB,GACpBC,cAAe,GACfwD,SAAS,EACT1V,WAAY,CACVd,QAAS,CACP/F,KAAM,SACNyG,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAI9C2U,EAAcyC,UAAY,CACxBzQ,OAAQ,CACN0Q,QAAS,CACP9d,KAAM,WACN+d,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACPje,KAAM,SACNke,aAAa,KAKnB,MAAMC,UAAyB3P,EAC7BgB,aACEnQ,KAAK+P,qBAAsB,EAC3BoM,MAAMhM,YACR,CACAgD,mBAAmBtH,EAAMJ,EAAMnK,EAAOuR,GACpC,MAAMzF,EAAS+O,MAAMhJ,mBAAmBtH,EAAMJ,EAAMnK,EAAOuR,GAC3D,IAAK,IAAI3Q,EAAI,EAAGA,EAAIkL,EAAOpL,OAAQE,IACjCkL,EAAOlL,GAAGoY,QAAUta,KAAKkV,0BAA0BhT,EAAIZ,GAAOyd,OAEhE,OAAO3R,CACT,CACA6F,eAAepH,EAAMJ,EAAMnK,EAAOuR,GAChC,MAAMzF,EAAS+O,MAAMlJ,eAAepH,EAAMJ,EAAMnK,EAAOuR,GACvD,IAAK,IAAI3Q,EAAI,EAAGA,EAAIkL,EAAOpL,OAAQE,IAAK,CACtC,MAAMD,EAAOwJ,EAAKnK,EAAQY,GAC1BkL,EAAOlL,GAAGoY,SAAU,IAAA3S,GAAe1F,EAAK,GAAIjC,KAAKkV,0BAA0BhT,EAAIZ,GAAOyd,OACxF,CACA,OAAO3R,CACT,CACA8F,gBAAgBrH,EAAMJ,EAAMnK,EAAOuR,GACjC,MAAMzF,EAAS+O,MAAMjJ,gBAAgBrH,EAAMJ,EAAMnK,EAAOuR,GACxD,IAAK,IAAI3Q,EAAI,EAAGA,EAAIkL,EAAOpL,OAAQE,IAAK,CACtC,MAAMD,EAAOwJ,EAAKnK,EAAQY,GAC1BkL,EAAOlL,GAAGoY,SAAU,IAAA3S,GAAe1F,GAAQA,EAAKT,IAAMS,EAAKT,EAAGxB,KAAKkV,0BAA0BhT,EAAIZ,GAAOyd,OAC1G,CACA,OAAO3R,CACT,CACAkH,iBACE,MAAM7I,EAAOzL,KAAKqN,YAAY5B,KAC9B,IAAIlI,EAAM,EACV,IAAK,IAAIrB,EAAIuJ,EAAKzJ,OAAS,EAAGE,GAAK,IAAKA,EACtCqB,EAAMnC,KAAKmC,IAAIA,EAAKkI,EAAKvJ,GAAGgH,KAAKlJ,KAAKkV,0BAA0BhT,IAAM,GAExE,OAAOqB,EAAM,GAAKA,CACpB,CACAgR,iBAAiBxJ,GACf,MAAMc,EAAO7L,KAAKqN,aACZ,OAACxD,EAAM,OAAEC,GAAU+B,EACnBuB,EAASpN,KAAK0T,UAAU3I,GACxBhB,EAAIF,EAAO4K,iBAAiBrH,EAAOrD,GACnCC,EAAIF,EAAO2K,iBAAiBrH,EAAOpD,GACnCxI,EAAI4L,EAAOkN,QACjB,MAAO,CACL9F,MAAO3I,EAAK2I,MACZvL,MAAO,IAAMc,EAAI,KAAOC,GAAKxI,EAAI,KAAOA,EAAI,IAAM,IAEtD,CACAwE,OAAOoF,GACL,MAAM4T,EAAShf,KAAKqN,YAAY5B,KAChCzL,KAAKsX,eAAe0H,EAAQ,EAAGA,EAAOhd,OAAQoJ,EAChD,CACAkM,eAAe0H,EAAQ1d,EAAOuR,EAAOzH,GACnC,MAAMsG,EAAiB,UAATtG,GACR,OAACmC,EAAM,OAAER,GAAU/M,KAAKqN,YACxBkP,EAAYvc,KAAKkV,0BAA0B5T,EAAO8J,GAClDiL,EAAgBrW,KAAKmW,iBAAiBoG,GACtCnG,EAAiBpW,KAAKoW,eAAehL,EAAMiL,GAC3C7I,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACrB,IAAK,IAAIvL,EAAIZ,EAAOY,EAAIZ,EAAQuR,EAAO3Q,IAAK,CAC1C,MAAM+c,EAAQD,EAAO9c,GACfkL,GAAUsE,GAAS1R,KAAK0T,UAAUxR,GAClCkF,EAAa,CAAC,EACd8X,EAAS9X,EAAWoG,GAASkE,EAAQnE,EAAOwQ,mBAAmB,IAAOxQ,EAAOyL,iBAAiB5L,EAAOI,IACrG2R,EAAS/X,EAAWsG,GAASgE,EAAQ3E,EAAOsP,eAAiBtP,EAAOiM,iBAAiB5L,EAAOM,IAClGtG,EAAWgY,KAAOhC,MAAM8B,IAAW9B,MAAM+B,GACrC/I,IACFhP,EAAWoB,QAAUxI,KAAKkV,0BAA0BhT,EAAG+c,EAAMlZ,OAAS,SAAWqF,GAC7EsG,IACFtK,EAAWoB,QAAQuW,OAAS,IAGhC/e,KAAKuW,cAAc0I,EAAO/c,EAAGkF,EAAYgE,EAC3C,CACApL,KAAKwW,oBAAoBH,EAAejL,EAAMmR,EAChD,CACArH,0BAA0BnK,EAAOK,GAC/B,MAAMgC,EAASpN,KAAK0T,UAAU3I,GAC9B,IAAIzC,EAAS6T,MAAMjH,0BAA0BnK,EAAOK,GAChD9C,EAAOK,UACTL,EAASxB,OAAOqC,OAAO,CAAC,EAAGb,EAAQ,CAACK,SAAS,KAE/C,MAAMoW,EAASzW,EAAOyW,OAKtB,MAJa,WAAT3T,IACF9C,EAAOyW,OAAS,GAElBzW,EAAOyW,SAAU,IAAApX,GAAeyF,GAAUA,EAAOkN,QAASyE,GACnDzW,CACT,EAiCF,SAAS+W,EAAkBC,EAAUC,EAAeC,GAClD,IAAIC,EAAS,EACTC,EAAS,EACTC,EAAU,EACVC,EAAU,EACd,GAAIL,EAAgB,EAAAM,EAAK,CACvB,MAAMC,EAAaR,EACbS,EAAWD,EAAaP,EACxBS,EAAS5e,KAAK6e,IAAIH,GAClBI,EAAS9e,KAAK+e,IAAIL,GAClBM,EAAOhf,KAAK6e,IAAIF,GAChBM,EAAOjf,KAAK+e,IAAIJ,GAChBO,EAAU,CAACC,EAAO7H,EAAGnO,KAAM,OAAcgW,EAAOT,EAAYC,GAAU,GAAQ,EAAI3e,KAAKmC,IAAImV,EAAGA,EAAI8G,EAAQjV,EAAGA,EAAIiV,GACjHgB,EAAU,CAACD,EAAO7H,EAAGnO,KAAM,OAAcgW,EAAOT,EAAYC,GAAU,IAAS,EAAI3e,KAAKC,IAAIqX,EAAGA,EAAI8G,EAAQjV,EAAGA,EAAIiV,GAClHiB,EAAOH,EAAQ,EAAGN,EAAQI,GAC1BM,EAAOJ,EAAQ,EAAAK,EAAST,EAAQG,GAChCO,EAAOJ,EAAQ,EAAAK,EAAIb,EAAQI,GAC3BU,EAAON,EAAQ,EAAAK,EAAK,EAAAF,EAAST,EAAQG,GAC3CZ,GAAUgB,EAAOG,GAAQ,EACzBlB,GAAUgB,EAAOI,GAAQ,EACzBnB,IAAYc,EAAOG,GAAQ,EAC3BhB,IAAYc,EAAOI,GAAQ,CAC7B,CACA,MAAO,CAACrB,SAAQC,SAAQC,UAASC,UACnC,CAvDAd,EAAiB5S,GAAK,SACtB4S,EAAiBjD,SAAW,CAC1B9J,oBAAoB,EACpBsD,gBAAiB,QACjB7N,WAAY,CACVd,QAAS,CACP/F,KAAM,SACNyG,WAAY,CAAC,IAAK,IAAK,cAAe,aAI5C0X,EAAiBN,UAAY,CAC3BzQ,OAAQ,CACNhE,EAAG,CACDpJ,KAAM,UAERqJ,EAAG,CACDrJ,KAAM,WAGVogB,QAAS,CACPC,QAAS,CACPpgB,UAAW,CACTqgB,QACE,MAAO,EACT,MA+BR,MAAMC,WAA2B/R,EAC/BpP,YAAYS,EAAO6K,GACjB8Q,MAAM3b,EAAO6K,GACbrL,KAAK+P,qBAAsB,EAC3B/P,KAAKmhB,iBAAc7gB,EACnBN,KAAKohB,iBAAc9gB,EACnBN,KAAK2f,aAAUrf,EACfN,KAAK4f,aAAUtf,CACjB,CACA8P,aAAc,CACdwC,MAAMtR,EAAOuR,GACX,MAAMpH,EAAOzL,KAAKuQ,aAAa9E,KACzBI,EAAO7L,KAAKqN,YAClB,IAAsB,IAAlBrN,KAAKyP,SACP5D,EAAK6C,QAAUjD,MACV,CACL,IAKIvJ,EAAG4I,EALHuW,EAAUnf,IAAOuJ,EAAKvJ,GAC1B,IAAI,IAAAA,GAASuJ,EAAKnK,IAAS,CACzB,MAAM,IAAC6G,EAAM,SAAWnI,KAAKyP,SAC7B4R,EAAUnf,KAAO,OAAiBuJ,EAAKvJ,GAAIiG,EAC7C,CAEA,IAAKjG,EAAIZ,EAAOwJ,EAAOxJ,EAAQuR,EAAO3Q,EAAI4I,IAAQ5I,EAChD2J,EAAK6C,QAAQxM,GAAKmf,EAAOnf,EAE7B,CACF,CACAof,eACE,OAAO,IAAAhX,GAAUtK,KAAKwI,QAAQ8W,SAAW,GAC3C,CACAiC,oBACE,OAAO,IAAAjX,GAAUtK,KAAKwI,QAAQ+W,cAChC,CACAiC,sBACE,IAAIngB,EAAM,EAAAwe,EACNtc,GAAO,EAAAsc,EACX,IAAK,IAAI3d,EAAI,EAAGA,EAAIlC,KAAKQ,MAAMiL,KAAK6F,SAAStP,SAAUE,EACrD,GAAIlC,KAAKQ,MAAMihB,iBAAiBvf,GAAI,CAClC,MAAMiL,EAAanN,KAAKQ,MAAM+Q,eAAerP,GAAGiL,WAC1CmS,EAAWnS,EAAWmU,eACtB/B,EAAgBpS,EAAWoU,oBACjClgB,EAAMD,KAAKC,IAAIA,EAAKie,GACpB/b,EAAMnC,KAAKmC,IAAIA,EAAK+b,EAAWC,EACjC,CAEF,MAAO,CACLD,SAAUje,EACVke,cAAehc,EAAMlC,EAEzB,CACA2E,OAAOoF,GACL,MAAM5K,EAAQR,KAAKQ,OACb,UAACsU,GAAatU,EACdqL,EAAO7L,KAAKqN,YACZqU,EAAO7V,EAAKJ,KACZkW,EAAU3hB,KAAK4hB,oBAAsB5hB,KAAK6hB,aAAaH,GAAQ1hB,KAAKwI,QAAQmZ,QAC5EG,EAAU1gB,KAAKmC,KAAKnC,KAAKC,IAAIyT,EAAUiI,MAAOjI,EAAUgI,QAAU6E,GAAW,EAAG,GAChFnC,EAASpe,KAAKC,KAAI,OAAarB,KAAKwI,QAAQgX,OAAQsC,GAAU,GAC9DC,EAAc/hB,KAAKgiB,eAAehiB,KAAK+K,QACvC,cAACwU,EAAa,SAAED,GAAYtf,KAAKwhB,uBACjC,OAAC/B,EAAM,OAAEC,EAAM,QAAEC,EAAO,QAAEC,GAAWP,EAAkBC,EAAUC,EAAeC,GAChFyC,GAAYnN,EAAUiI,MAAQ4E,GAAWlC,EACzCyC,GAAapN,EAAUgI,OAAS6E,GAAWjC,EAC3CyC,EAAY/gB,KAAKmC,IAAInC,KAAKC,IAAI4gB,EAAUC,GAAa,EAAG,GACxDd,GAAc,OAAYphB,KAAKwI,QAAQuW,OAAQoD,GAC/ChB,EAAc/f,KAAKmC,IAAI6d,EAAc5B,EAAQ,GAC7C4C,GAAgBhB,EAAcD,GAAenhB,KAAKqiB,gCACxDriB,KAAK2f,QAAUA,EAAUyB,EACzBphB,KAAK4f,QAAUA,EAAUwB,EACzBvV,EAAKyW,MAAQtiB,KAAKuiB,iBAClBviB,KAAKohB,YAAcA,EAAcgB,EAAepiB,KAAKwiB,qBAAqBxiB,KAAK+K,OAC/E/K,KAAKmhB,YAAc/f,KAAKmC,IAAIvD,KAAKohB,YAAcgB,EAAeL,EAAa,GAC3E/hB,KAAKsX,eAAeoK,EAAM,EAAGA,EAAK1f,OAAQoJ,EAC5C,CACAqX,eAAevgB,EAAGwP,GAChB,MAAMjI,EAAOzJ,KAAKwI,QACZqD,EAAO7L,KAAKqN,YACZkS,EAAgBvf,KAAKuhB,oBAC3B,OAAK7P,GAASjI,EAAKpC,UAAUqb,gBAAmB1iB,KAAKQ,MAAMqd,kBAAkB3b,IAA0B,OAApB2J,EAAK6C,QAAQxM,IAAe2J,EAAKJ,KAAKvJ,GAAG+M,OACnH,EAEFjP,KAAK2iB,uBAAuB9W,EAAK6C,QAAQxM,GAAKqd,EAAgB,EAAAM,EACvE,CACAvI,eAAeoK,EAAMpgB,EAAOuR,EAAOzH,GACjC,MAAMsG,EAAiB,UAATtG,EACR5K,EAAQR,KAAKQ,MACbsU,EAAYtU,EAAMsU,UAClBrL,EAAOjJ,EAAMgI,QACboa,EAAgBnZ,EAAKpC,UACrBwb,GAAW/N,EAAU1K,KAAO0K,EAAU5K,OAAS,EAC/C4Y,GAAWhO,EAAU7K,IAAM6K,EAAU3K,QAAU,EAC/C4Y,EAAerR,GAASkR,EAAcG,aACtC5B,EAAc4B,EAAe,EAAI/iB,KAAKmhB,YACtCC,EAAc2B,EAAe,EAAI/iB,KAAKohB,YACtC7E,EAAYvc,KAAKkV,0BAA0B5T,EAAO8J,GAClDiL,EAAgBrW,KAAKmW,iBAAiBoG,GACtCnG,EAAiBpW,KAAKoW,eAAehL,EAAMiL,GACjD,IACInU,EADA4d,EAAa9f,KAAKshB,eAEtB,IAAKpf,EAAI,EAAGA,EAAIZ,IAASY,EACvB4d,GAAc9f,KAAKyiB,eAAevgB,EAAGwP,GAEvC,IAAKxP,EAAIZ,EAAOY,EAAIZ,EAAQuR,IAAS3Q,EAAG,CACtC,MAAMqd,EAAgBvf,KAAKyiB,eAAevgB,EAAGwP,GACvCsR,EAAMtB,EAAKxf,GACXkF,EAAa,CACjB2C,EAAG8Y,EAAU7iB,KAAK2f,QAClB3V,EAAG8Y,EAAU9iB,KAAK4f,QAClBE,aACAC,SAAUD,EAAaP,EACvBA,gBACA6B,cACAD,eAEE/K,IACFhP,EAAWoB,QAAU6N,GAAiBrW,KAAKkV,0BAA0BhT,EAAG8gB,EAAIjd,OAAS,SAAWqF,IAElG0U,GAAcP,EACdvf,KAAKuW,cAAcyM,EAAK9gB,EAAGkF,EAAYgE,EACzC,CACApL,KAAKwW,oBAAoBH,EAAejL,EAAMmR,EAChD,CACAgG,iBACE,MAAM1W,EAAO7L,KAAKqN,YACZ4V,EAAWpX,EAAKJ,KACtB,IACIvJ,EADAogB,EAAQ,EAEZ,IAAKpgB,EAAI,EAAGA,EAAI+gB,EAASjhB,OAAQE,IAAK,CACpC,MAAM+G,EAAQ4C,EAAK6C,QAAQxM,GACb,OAAV+G,GAAmBmU,MAAMnU,KAAUjJ,KAAKQ,MAAMqd,kBAAkB3b,IAAO+gB,EAAS/gB,GAAG+M,SACrFqT,GAASlhB,KAAK2X,IAAI9P,GAEtB,CACA,OAAOqZ,CACT,CACAK,uBAAuB1Z,GACrB,MAAMqZ,EAAQtiB,KAAKqN,YAAYiV,MAC/B,OAAIA,EAAQ,IAAMlF,MAAMnU,GACf,EAAA4W,GAAOze,KAAK2X,IAAI9P,GAASqZ,GAE3B,CACT,CACA/N,iBAAiBxJ,GACf,MAAMc,EAAO7L,KAAKqN,YACZ7M,EAAQR,KAAKQ,MACb6S,EAAS7S,EAAMiL,KAAK4H,QAAU,GAC9BpK,GAAQ,OAAa4C,EAAK6C,QAAQ3D,GAAQvK,EAAMgI,QAAQ0a,QAC9D,MAAO,CACL1O,MAAOnB,EAAOtI,IAAU,GACxB9B,QAEJ,CACA2Y,kBAAkBF,GAChB,IAAIne,EAAM,EACV,MAAM/C,EAAQR,KAAKQ,MACnB,IAAI0B,EAAG4I,EAAMe,EAAMsB,EAAY3E,EAC/B,IAAKkZ,EACH,IAAKxf,EAAI,EAAG4I,EAAOtK,EAAMiL,KAAK6F,SAAStP,OAAQE,EAAI4I,IAAQ5I,EACzD,GAAI1B,EAAMihB,iBAAiBvf,GAAI,CAC7B2J,EAAOrL,EAAM+Q,eAAerP,GAC5Bwf,EAAO7V,EAAKJ,KACZ0B,EAAatB,EAAKsB,WAClB,KACF,CAGJ,IAAKuU,EACH,OAAO,EAET,IAAKxf,EAAI,EAAG4I,EAAO4W,EAAK1f,OAAQE,EAAI4I,IAAQ5I,EAC1CsG,EAAU2E,EAAW+H,0BAA0BhT,GACnB,UAAxBsG,EAAQ2a,cACV5f,EAAMnC,KAAKmC,IAAIA,EAAKiF,EAAQ4a,aAAe,EAAG5a,EAAQ6a,kBAAoB,IAG9E,OAAO9f,CACT,CACAse,aAAaH,GACX,IAAIne,EAAM,EACV,IAAK,IAAIrB,EAAI,EAAG4I,EAAO4W,EAAK1f,OAAQE,EAAI4I,IAAQ5I,EAAG,CACjD,MAAMsG,EAAUxI,KAAKkV,0BAA0BhT,GAC/CqB,EAAMnC,KAAKmC,IAAIA,EAAKiF,EAAQkW,QAAU,EAAGlW,EAAQ8a,aAAe,EAClE,CACA,OAAO/f,CACT,CACAif,qBAAqBnX,GACnB,IAAIkY,EAAmB,EACvB,IAAK,IAAIrhB,EAAI,EAAGA,EAAImJ,IAAgBnJ,EAC9BlC,KAAKQ,MAAMihB,iBAAiBvf,KAC9BqhB,GAAoBvjB,KAAKgiB,eAAe9f,IAG5C,OAAOqhB,CACT,CACAvB,eAAe3W,GACb,OAAOjK,KAAKmC,KAAI,IAAAoE,GAAe3H,KAAKQ,MAAMiL,KAAK6F,SAASjG,GAAcmY,OAAQ,GAAI,EACpF,CACAnB,gCACE,OAAOriB,KAAKwiB,qBAAqBxiB,KAAKQ,MAAMiL,KAAK6F,SAAStP,SAAW,CACvE,EAEFkf,GAAmBhV,GAAK,WACxBgV,GAAmBrF,SAAW,CAC5B9J,oBAAoB,EACpBsD,gBAAiB,MACjBhO,UAAW,CACTqb,eAAe,EACfK,cAAc,GAEhBvb,WAAY,CACVd,QAAS,CACP/F,KAAM,SACNyG,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAG7HoY,OAAQ,MACRF,SAAU,EACVC,cAAe,IACfR,OAAQ,OACR4C,QAAS,EACT5Q,UAAW,KAEbmQ,GAAmBuC,YAAc,CAC/Bvc,YAAcC,GAAkB,YAATA,EACvBF,WAAaE,GAAkB,YAATA,GAExB+Z,GAAmB1C,UAAY,CAC7BkF,YAAa,EACb3C,QAAS,CACP4C,OAAQ,CACNtQ,OAAQ,CACNuQ,eAAepjB,GACb,MAAMiL,EAAOjL,EAAMiL,KACnB,GAAIA,EAAK4H,OAAOrR,QAAUyJ,EAAK6F,SAAStP,OAAQ,CAC9C,MAAOqR,QAAQ,WAACwQ,IAAerjB,EAAMmjB,OAAOnb,QAC5C,OAAOiD,EAAK4H,OAAOyQ,KAAI,CAACtP,EAAOtS,KAC7B,MAAM2J,EAAOrL,EAAM+Q,eAAe,GAC5BwS,EAAQlY,EAAKsB,WAAW6H,SAAS9S,GACvC,MAAO,CACL8hB,KAAMxP,EACNyP,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWN,EAAMX,YACjBS,WAAYA,EACZ5U,QAASzO,EAAMqd,kBAAkB3b,GACjC6I,MAAO7I,EACR,GAEL,CACA,MAAO,EACT,GAEFoiB,QAAQnf,EAAGof,EAAYZ,GACrBA,EAAOnjB,MAAMgkB,qBAAqBD,EAAWxZ,OAC7C4Y,EAAOnjB,MAAMwF,QACf,GAEFgb,QAAS,CACPpgB,UAAW,CACTqgB,QACE,MAAO,EACT,EACAzM,MAAMiQ,GACJ,IAAIC,EAAYD,EAAYjQ,MAC5B,MAAMvL,EAAQ,KAAOwb,EAAYE,eAOjC,OANI,OAAQD,IACVA,EAAYA,EAAUE,QACtBF,EAAU,IAAMzb,GAEhByb,GAAazb,EAERyb,CACT,MAMR,MAAMG,WAAuB1V,EAC3BgB,aACEnQ,KAAK+P,qBAAsB,EAC3B/P,KAAKgQ,oBAAqB,EAC1BmM,MAAMhM,YACR,CACAnK,OAAOoF,GACL,MAAMS,EAAO7L,KAAKqN,aACXe,QAAS0W,EAAMrZ,KAAMuT,EAAS,GAAE,SAAE+F,GAAYlZ,EAC/CmZ,EAAqBhlB,KAAKQ,MAAM8V,oBACtC,IAAI,MAAChV,EAAK,MAAEuR,GAASoS,GAAgCpZ,EAAMmT,EAAQgG,GACnEhlB,KAAK6P,WAAavO,EAClBtB,KAAK8P,WAAa+C,EACdqS,GAAmBrZ,KACrBvK,EAAQ,EACRuR,EAAQmM,EAAOhd,QAEjB8iB,EAAKhd,OAAS9H,KAAKQ,MACnBskB,EAAKK,cAAgBnlB,KAAK+K,MAC1B+Z,EAAKM,aAAeL,EAASK,WAC7BN,EAAK9F,OAASA,EACd,MAAMxW,EAAUxI,KAAKiV,6BAA6B7J,GAC7CpL,KAAKwI,QAAQ6c,WAChB7c,EAAQ4a,YAAc,GAExB5a,EAAQ8c,QAAUtlB,KAAKwI,QAAQ8c,QAC/BtlB,KAAKuW,cAAcuO,OAAMxkB,EAAW,CAClCilB,UAAWP,EACXxc,WACC4C,GACHpL,KAAKsX,eAAe0H,EAAQ1d,EAAOuR,EAAOzH,EAC5C,CACAkM,eAAe0H,EAAQ1d,EAAOuR,EAAOzH,GACnC,MAAMsG,EAAiB,UAATtG,GACR,OAACmC,EAAM,OAAER,EAAM,SAAEmC,EAAQ,SAAE6V,GAAY/kB,KAAKqN,YAC5CkP,EAAYvc,KAAKkV,0BAA0B5T,EAAO8J,GAClDiL,EAAgBrW,KAAKmW,iBAAiBoG,GACtCnG,EAAiBpW,KAAKoW,eAAehL,EAAMiL,GAC3C7I,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAC+X,EAAQ,QAAEF,GAAWtlB,KAAKwI,QAC3Bid,GAAe,OAASD,GAAYA,EAAWlZ,OAAOE,kBACtDkZ,EAAe1lB,KAAKQ,MAAM8V,qBAAuB5E,GAAkB,SAATtG,EAChE,IAAIua,EAAarkB,EAAQ,GAAKtB,KAAK0T,UAAUpS,EAAQ,GACrD,IAAK,IAAIY,EAAIZ,EAAOY,EAAIZ,EAAQuR,IAAS3Q,EAAG,CAC1C,MAAM+c,EAAQD,EAAO9c,GACfkL,EAASpN,KAAK0T,UAAUxR,GACxBkF,EAAase,EAAezG,EAAQ,CAAC,EACrC2G,GAAW,OAAcxY,EAAOM,IAChCwR,EAAS9X,EAAWoG,GAASD,EAAOyL,iBAAiB5L,EAAOI,GAAQtL,GACpEid,EAAS/X,EAAWsG,GAASgE,GAASkU,EAAW7Y,EAAOsP,eAAiBtP,EAAOiM,iBAAiB9J,EAAWlP,KAAKgL,WAAW+B,EAAQK,EAAQ8B,GAAY9B,EAAOM,GAAQxL,GAC7KkF,EAAWgY,KAAOhC,MAAM8B,IAAW9B,MAAM+B,IAAWyG,EACpDxe,EAAW3D,KAAOvB,EAAI,GAAMd,KAAK2X,IAAI3L,EAAOI,GAASmY,EAAWnY,IAAWiY,EACvEH,IACFle,EAAWgG,OAASA,EACpBhG,EAAWoH,IAAMuW,EAAStZ,KAAKvJ,IAE7BkU,IACFhP,EAAWoB,QAAU6N,GAAiBrW,KAAKkV,0BAA0BhT,EAAG+c,EAAMlZ,OAAS,SAAWqF,IAE/Fsa,GACH1lB,KAAKuW,cAAc0I,EAAO/c,EAAGkF,EAAYgE,GAE3Cua,EAAavY,CACf,CACApN,KAAKwW,oBAAoBH,EAAejL,EAAMmR,EAChD,CACAjI,iBACE,MAAMzI,EAAO7L,KAAKqN,YACZe,EAAUvC,EAAKuC,QACfyX,EAASzX,EAAQ5F,SAAW4F,EAAQ5F,QAAQ4a,aAAe,EAC3D3X,EAAOI,EAAKJ,MAAQ,GAC1B,IAAKA,EAAKzJ,OACR,OAAO6jB,EAET,MAAMC,EAAara,EAAK,GAAGvC,KAAKlJ,KAAKkV,0BAA0B,IACzD6Q,EAAYta,EAAKA,EAAKzJ,OAAS,GAAGkH,KAAKlJ,KAAKkV,0BAA0BzJ,EAAKzJ,OAAS,IAC1F,OAAOZ,KAAKmC,IAAIsiB,EAAQC,EAAYC,GAAa,CACnD,CACA5jB,OACE,MAAM0J,EAAO7L,KAAKqN,YAClBxB,EAAKuC,QAAQ4X,oBAAoBhmB,KAAKQ,MAAMsU,UAAWjJ,EAAK0B,OAAOE,MACnE0O,MAAMha,MACR,EAmBF,SAAS8iB,GAAgCpZ,EAAMmT,EAAQgG,GACrD,MAAMiB,EAAajH,EAAOhd,OAC1B,IAAIV,EAAQ,EACRuR,EAAQoT,EACZ,GAAIpa,EAAKkH,QAAS,CAChB,MAAM,OAACxF,EAAM,QAAEmB,GAAW7C,EACpB4B,EAAOF,EAAOE,MACd,IAACpM,EAAG,IAAEkC,EAAG,WAAE6I,EAAU,WAAEC,GAAckB,EAAOpB,gBAC9CC,IACF9K,GAAQ,OAAYF,KAAKC,KACvB,OAAaqN,EAASnB,EAAOE,KAAMpM,GAAK6kB,GACxClB,EAAqBiB,GAAa,OAAajH,EAAQvR,EAAMF,EAAOyL,iBAAiB3X,IAAM6kB,IAC7F,EAAGD,EAAa,IAGhBpT,EADExG,GACM,OAAYjL,KAAKmC,KACvB,OAAamL,EAASnB,EAAOE,KAAMlK,GAAK4iB,GAAK,EAC7CnB,EAAqB,GAAI,OAAahG,EAAQvR,EAAMF,EAAOyL,iBAAiBzV,IAAM4iB,GAAK,GACzF7kB,EAAO2kB,GAAc3kB,EAEb2kB,EAAa3kB,CAEzB,CACA,MAAO,CAACA,QAAOuR,QACjB,CACA,SAASqS,GAAmBrZ,GAC1B,MAAM,OAAChC,EAAM,OAAEC,EAAM,aAAEsc,GAAgBva,EACjCwa,EAAY,CAChBC,KAAMzc,EAAOxI,IACbklB,KAAM1c,EAAOtG,IACbijB,KAAM1c,EAAOzI,IACbolB,KAAM3c,EAAOvG,KAEf,IAAK6iB,EAEH,OADAva,EAAKua,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAASzc,EAAOxI,KAC1C+kB,EAAaG,OAAS1c,EAAOtG,KAC7B6iB,EAAaI,OAAS1c,EAAOzI,KAC7B+kB,EAAaK,OAAS3c,EAAOvG,IAEhC,OADAuD,OAAOqC,OAAOid,EAAcC,GACrBK,CACT,CA5DA7B,GAAe3Y,GAAK,OACpB2Y,GAAehJ,SAAW,CACxB9J,mBAAoB,OACpBsD,gBAAiB,QACjBgQ,UAAU,EACVG,UAAU,GAEZX,GAAerG,UAAY,CACzBzQ,OAAQ,CACN0Q,QAAS,CACP9d,KAAM,YAERie,QAAS,CACPje,KAAM,YAiDZ,MAAMgmB,WAA4BxX,EAChCpP,YAAYS,EAAO6K,GACjB8Q,MAAM3b,EAAO6K,GACbrL,KAAKmhB,iBAAc7gB,EACnBN,KAAKohB,iBAAc9gB,CACrB,CACAiU,iBAAiBxJ,GACf,MAAMc,EAAO7L,KAAKqN,YACZ7M,EAAQR,KAAKQ,MACb6S,EAAS7S,EAAMiL,KAAK4H,QAAU,GAC9BpK,GAAQ,OAAa4C,EAAK6C,QAAQ3D,GAAOvJ,EAAGhB,EAAMgI,QAAQ0a,QAChE,MAAO,CACL1O,MAAOnB,EAAOtI,IAAU,GACxB9B,QAEJ,CACAiK,gBAAgBrH,EAAMJ,EAAMnK,EAAOuR,GACjC,OAAO,SAAiC7S,KAAjC,CAAuC6L,EAAMJ,EAAMnK,EAAOuR,EACnE,CACA7M,OAAOoF,GACL,MAAMsW,EAAO1hB,KAAKqN,YAAY5B,KAC9BzL,KAAK4mB,gBACL5mB,KAAKsX,eAAeoK,EAAM,EAAGA,EAAK1f,OAAQoJ,EAC5C,CACA4I,YACE,MAAMnI,EAAO7L,KAAKqN,YACZwG,EAAQ,CAACxS,IAAKiL,OAAOE,kBAAmBjJ,IAAK+I,OAAOC,mBAY1D,OAXAV,EAAKJ,KAAKzK,SAAQ,CAACsN,EAASvD,KAC1B,MAAMqC,EAASpN,KAAK0T,UAAU3I,GAAOvJ,GAChC4b,MAAMhQ,IAAWpN,KAAKQ,MAAMqd,kBAAkB9S,KAC7CqC,EAASyG,EAAMxS,MACjBwS,EAAMxS,IAAM+L,GAEVA,EAASyG,EAAMtQ,MACjBsQ,EAAMtQ,IAAM6J,GAEhB,IAEKyG,CACT,CACA+S,gBACE,MAAMpmB,EAAQR,KAAKQ,MACbsU,EAAYtU,EAAMsU,UAClBrL,EAAOjJ,EAAMgI,QACbqe,EAAUzlB,KAAKC,IAAIyT,EAAU5K,MAAQ4K,EAAU1K,KAAM0K,EAAU3K,OAAS2K,EAAU7K,KAClFmX,EAAchgB,KAAKmC,IAAIsjB,EAAU,EAAG,GACpC1F,EAAc/f,KAAKmC,IAAIkG,EAAKqd,iBAAoB1F,EAAc,IAAQ3X,EAAqB,iBAAI,EAAG,GAClG2Y,GAAgBhB,EAAcD,GAAe3gB,EAAMumB,yBACzD/mB,KAAKohB,YAAcA,EAAegB,EAAepiB,KAAK+K,MACtD/K,KAAKmhB,YAAcnhB,KAAKohB,YAAcgB,CACxC,CACA9K,eAAeoK,EAAMpgB,EAAOuR,EAAOzH,GACjC,MAAMsG,EAAiB,UAATtG,EACR5K,EAAQR,KAAKQ,MACbiJ,EAAOjJ,EAAMgI,QACboa,EAAgBnZ,EAAKpC,UACrBkC,EAAQvJ,KAAKqN,YAAYgE,OACzBwR,EAAUtZ,EAAMyd,QAChBlE,EAAUvZ,EAAM0d,QAChBC,EAAoB3d,EAAM4d,cAAc,GAAK,GAAM,EAAAtG,EACzD,IACI3e,EADAqe,EAAQ2G,EAEZ,MAAME,EAAe,IAAMpnB,KAAKqnB,uBAChC,IAAKnlB,EAAI,EAAGA,EAAIZ,IAASY,EACvBqe,GAASvgB,KAAKsnB,cAAcplB,EAAGkJ,EAAMgc,GAEvC,IAAKllB,EAAIZ,EAAOY,EAAIZ,EAAQuR,EAAO3Q,IAAK,CACtC,MAAM8gB,EAAMtB,EAAKxf,GACjB,IAAI4d,EAAaS,EACbR,EAAWQ,EAAQvgB,KAAKsnB,cAAcplB,EAAGkJ,EAAMgc,GAC/ChG,EAAc5gB,EAAMqd,kBAAkB3b,GAAKqH,EAAMge,8BAA8BvnB,KAAK0T,UAAUxR,GAAGV,GAAK,EAC1G+e,EAAQR,EACJrO,IACEkR,EAAcG,eAChB3B,EAAc,GAEZwB,EAAcF,gBAChB5C,EAAaC,EAAWmH,IAG5B,MAAM9f,EAAa,CACjB2C,EAAG8Y,EACH7Y,EAAG8Y,EACH3B,YAAa,EACbC,cACAtB,aACAC,WACAvX,QAASxI,KAAKkV,0BAA0BhT,EAAG8gB,EAAIjd,OAAS,SAAWqF,IAErEpL,KAAKuW,cAAcyM,EAAK9gB,EAAGkF,EAAYgE,EACzC,CACF,CACAic,uBACE,MAAMxb,EAAO7L,KAAKqN,YAClB,IAAIwF,EAAQ,EAMZ,OALAhH,EAAKJ,KAAKzK,SAAQ,CAACsN,EAASvD,MACrBqS,MAAMpd,KAAK0T,UAAU3I,GAAOvJ,IAAMxB,KAAKQ,MAAMqd,kBAAkB9S,IAClE8H,GACF,IAEKA,CACT,CACAyU,cAAcvc,EAAOK,EAAMgc,GACzB,OAAOpnB,KAAKQ,MAAMqd,kBAAkB9S,IAChC,IAAAT,GAAUtK,KAAKkV,0BAA0BnK,EAAOK,GAAMmV,OAAS6G,GAC/D,CACN,EAEFT,GAAoBza,GAAK,YACzBya,GAAoB9K,SAAW,CAC7BxG,gBAAiB,MACjBhO,UAAW,CACTqb,eAAe,EACfK,cAAc,GAEhBvb,WAAY,CACVd,QAAS,CACP/F,KAAM,SACNyG,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpE2J,UAAW,IACX+O,WAAY,GAEd6G,GAAoBnI,UAAY,CAC9BkF,YAAa,EACb3C,QAAS,CACP4C,OAAQ,CACNtQ,OAAQ,CACNuQ,eAAepjB,GACb,MAAMiL,EAAOjL,EAAMiL,KACnB,GAAIA,EAAK4H,OAAOrR,QAAUyJ,EAAK6F,SAAStP,OAAQ,CAC9C,MAAOqR,QAAQ,WAACwQ,IAAerjB,EAAMmjB,OAAOnb,QAC5C,OAAOiD,EAAK4H,OAAOyQ,KAAI,CAACtP,EAAOtS,KAC7B,MAAM2J,EAAOrL,EAAM+Q,eAAe,GAC5BwS,EAAQlY,EAAKsB,WAAW6H,SAAS9S,GACvC,MAAO,CACL8hB,KAAMxP,EACNyP,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWN,EAAMX,YACjBS,WAAYA,EACZ5U,QAASzO,EAAMqd,kBAAkB3b,GACjC6I,MAAO7I,EACR,GAEL,CACA,MAAO,EACT,GAEFoiB,QAAQnf,EAAGof,EAAYZ,GACrBA,EAAOnjB,MAAMgkB,qBAAqBD,EAAWxZ,OAC7C4Y,EAAOnjB,MAAMwF,QACf,GAEFgb,QAAS,CACPpgB,UAAW,CACTqgB,QACE,MAAO,EACT,EACAzM,MAAMW,GACJ,OAAOA,EAAQ3U,MAAMiL,KAAK4H,OAAO8B,EAAQ5G,WAAa,KAAO4G,EAAQwP,cACvE,KAIN5W,OAAQ,CACNvM,EAAG,CACDb,KAAM,eACN6mB,WAAY,CACVC,SAAS,GAEX5I,aAAa,EACbF,KAAM,CACJ+I,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEX3H,WAAY,KAKlB,MAAM8H,WAAsB1G,IAE5B0G,GAAc1b,GAAK,MACnB0b,GAAc/L,SAAW,CACvB2D,OAAQ,EACRF,SAAU,EACVC,cAAe,IACfR,OAAQ,QAGV,MAAM8I,WAAwB1Y,EAC5BoF,iBAAiBxJ,GACf,MAAMgC,EAAS/M,KAAKqN,YAAYN,OAC1BK,EAASpN,KAAK0T,UAAU3I,GAC9B,MAAO,CACLyJ,MAAOzH,EAAOuG,YAAYvI,GAC1B9B,MAAO,GAAK8D,EAAO0H,iBAAiBrH,EAAOL,EAAOU,OAEtD,CACAyF,gBAAgBrH,EAAMJ,EAAMnK,EAAOuR,GACjC,OAAO,SAAiC7S,KAAjC,CAAuC6L,EAAMJ,EAAMnK,EAAOuR,EACnE,CACA7M,OAAOoF,GACL,MAAMS,EAAO7L,KAAKqN,YACZyX,EAAOjZ,EAAKuC,QACZ4Q,EAASnT,EAAKJ,MAAQ,GACtB4H,EAASxH,EAAK0B,OAAO+F,YAE3B,GADAwR,EAAK9F,OAASA,EACD,WAAT5T,EAAmB,CACrB,MAAM5C,EAAUxI,KAAKiV,6BAA6B7J,GAC7CpL,KAAKwI,QAAQ6c,WAChB7c,EAAQ4a,YAAc,GAExB,MAAMhc,EAAa,CACjB5B,OAAO,EACPsiB,UAAWzU,EAAOrR,SAAWgd,EAAOhd,OACpCwG,WAEFxI,KAAKuW,cAAcuO,OAAMxkB,EAAW8G,EAAYgE,EAClD,CACApL,KAAKsX,eAAe0H,EAAQ,EAAGA,EAAOhd,OAAQoJ,EAChD,CACAkM,eAAe0H,EAAQ1d,EAAOuR,EAAOzH,GACnC,MAAM7B,EAAQvJ,KAAKqN,YAAYgE,OACzBK,EAAiB,UAATtG,EACd,IAAK,IAAIlJ,EAAIZ,EAAOY,EAAIZ,EAAQuR,EAAO3Q,IAAK,CAC1C,MAAM+c,EAAQD,EAAO9c,GACfsG,EAAUxI,KAAKkV,0BAA0BhT,EAAG+c,EAAMlZ,OAAS,SAAWqF,GACtE2c,EAAgBxe,EAAMye,yBAAyB9lB,EAAGlC,KAAK0T,UAAUxR,GAAGV,GACpEuI,EAAI2H,EAAQnI,EAAMyd,QAAUe,EAAche,EAC1CC,EAAI0H,EAAQnI,EAAM0d,QAAUc,EAAc/d,EAC1C5C,EAAa,CACjB2C,IACAC,IACAuW,MAAOwH,EAAcxH,MACrBnB,KAAMhC,MAAMrT,IAAMqT,MAAMpT,GACxBxB,WAEFxI,KAAKuW,cAAc0I,EAAO/c,EAAGkF,EAAYgE,EAC3C,CACF,EAEFyc,GAAgB3b,GAAK,QACrB2b,GAAgBhM,SAAW,CACzB9J,mBAAoB,OACpBsD,gBAAiB,QACjBtE,UAAW,IACXsU,UAAU,EACVzQ,SAAU,CACRkQ,KAAM,CACJmD,KAAM,WAIZJ,GAAgBrJ,UAAY,CAC1BkF,YAAa,EACb3V,OAAQ,CACNvM,EAAG,CACDb,KAAM,kBAKZ,MAAMunB,WAA0BrD,IAEhCqD,GAAkBhc,GAAK,UACvBgc,GAAkBrM,SAAW,CAC3BwJ,UAAU,EACV4C,MAAM,GAERC,GAAkB1J,UAAY,CAC5B2J,YAAa,CACX/c,KAAM,SAER2V,QAAS,CACPC,QAAS,CACPpgB,UAAW,CACTqgB,QACE,MAAO,EACT,EACAzM,MAAMvS,GACJ,MAAO,IAAMA,EAAKuS,MAAQ,KAAOvS,EAAK0iB,eAAiB,GACzD,KAIN5W,OAAQ,CACNhE,EAAG,CACDpJ,KAAM,UAERqJ,EAAG,CACDrJ,KAAM,YAiBZ,SAASynB,KACP,MAAM,IAAIC,MAAM,kFAClB,CACA,MAAMC,GACJvoB,YAAYyI,GACVxI,KAAKwI,QAAUA,GAAW,CAAC,CAC7B,CACA+f,UACE,OAAOH,IACT,CACAxV,MAAM3J,EAAOuf,GACX,OAAOJ,IACT,CACAI,OAAOC,EAAWD,GAChB,OAAOJ,IACT,CACAllB,IAAIulB,EAAWC,EAAQC,GACrB,OAAOP,IACT,CACAQ,KAAKlQ,EAAGnO,EAAGoe,GACT,OAAOP,IACT,CACAS,QAAQJ,EAAWE,EAAMG,GACvB,OAAOV,IACT,CACAW,MAAMN,EAAWE,GACf,OAAOP,IACT,EAEFE,GAAYU,SAAW,SAASC,GAC9BniB,OAAOqC,OAAOmf,GAAYxM,UAAWmN,EACvC,EACA,IAAIC,GAAW,CACbC,MAAOb,IAGT,SAASc,GAAaC,EAAS5b,EAAMxE,EAAOqgB,GAC1C,MAAM,WAACnc,EAAU,KAAE1B,EAAI,QAAEsH,GAAWsW,EAC9B9b,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBsF,GAAWtH,EAAKzJ,OAAQ,CAC5E,MAAMunB,EAAehc,EAAOic,eAAiB,IAAgB,IAC7D,IAAKF,EACH,OAAOC,EAAa9d,EAAMgC,EAAMxE,GAC3B,GAAIkE,EAAWyC,eAAgB,CACpC,MAAM6Z,EAAKhe,EAAK,GACVoI,EAA+B,oBAAhB4V,EAAGC,UAA2BD,EAAGC,SAASjc,GAC/D,GAAIoG,EAAO,CACT,MAAMvS,EAAQioB,EAAa9d,EAAMgC,EAAMxE,EAAQ4K,GACzClK,EAAM4f,EAAa9d,EAAMgC,EAAMxE,EAAQ4K,GAC7C,MAAO,CAACqS,GAAI5kB,EAAM4kB,GAAIC,GAAIxc,EAAIwc,GAChC,CACF,CACF,CACA,MAAO,CAACD,GAAI,EAAGC,GAAI1a,EAAKzJ,OAAS,EACnC,CACA,SAAS2nB,GAAyBnpB,EAAOiN,EAAMmc,EAAUC,EAASP,GAChE,MAAM1e,EAAWpK,EAAMspB,+BACjB7gB,EAAQ2gB,EAASnc,GACvB,IAAK,IAAIvL,EAAI,EAAG4I,EAAOF,EAAS5I,OAAQE,EAAI4I,IAAQ5I,EAAG,CACrD,MAAM,MAAC6I,EAAK,KAAEU,GAAQb,EAAS1I,IACzB,GAACgkB,EAAE,GAAEC,GAAMiD,GAAaxe,EAAS1I,GAAIuL,EAAMxE,EAAOqgB,GACxD,IAAK,IAAIS,EAAI7D,EAAI6D,GAAK5D,IAAM4D,EAAG,CAC7B,MAAMzb,EAAU7C,EAAKse,GAChBzb,EAAQ8Q,MACXyK,EAAQvb,EAASvD,EAAOgf,EAE5B,CACF,CACF,CACA,SAASC,GAAyBvc,GAChC,MAAMwc,GAA8B,IAAvBxc,EAAK4P,QAAQ,KACpB6M,GAA8B,IAAvBzc,EAAK4P,QAAQ,KAC1B,OAAO,SAAS8M,EAAKC,GACnB,MAAMC,EAASJ,EAAO7oB,KAAK2X,IAAIoR,EAAIpgB,EAAIqgB,EAAIrgB,GAAK,EAC1CugB,EAASJ,EAAO9oB,KAAK2X,IAAIoR,EAAIngB,EAAIogB,EAAIpgB,GAAK,EAChD,OAAO5I,KAAKmpB,KAAKnpB,KAAKopB,IAAIH,EAAQ,GAAKjpB,KAAKopB,IAAIF,EAAQ,GAC1D,CACF,CACA,SAASG,GAAkBjqB,EAAOopB,EAAUnc,EAAMid,EAAkBC,GAClE,MAAM5oB,EAAQ,GACd,IAAK4oB,IAAqBnqB,EAAMoqB,cAAchB,GAC5C,OAAO7nB,EAET,MAAM8oB,EAAiB,SAASvc,EAASjD,EAAcN,IAChD4f,IAAqB,OAAerc,EAAS9N,EAAMsU,UAAW,KAG/DxG,EAAQwc,QAAQlB,EAAS7f,EAAG6f,EAAS5f,EAAG0gB,IAC1C3oB,EAAMkB,KAAK,CAACqL,UAASjD,eAAcN,SAEvC,EAEA,OADA4e,GAAyBnpB,EAAOiN,EAAMmc,EAAUiB,GAAgB,GACzD9oB,CACT,CACA,SAASgpB,GAAsBvqB,EAAOopB,EAAUnc,EAAMid,GACpD,IAAI3oB,EAAQ,GACZ,SAAS8oB,EAAevc,EAASjD,EAAcN,GAC7C,MAAM,WAAC+U,EAAU,SAAEC,GAAYzR,EAAQ0c,SAAS,CAAC,aAAc,YAAaN,IACtE,MAACnK,IAAS,OAAkBjS,EAAS,CAACvE,EAAG6f,EAAS7f,EAAGC,EAAG4f,EAAS5f,KACnE,OAAcuW,EAAOT,EAAYC,IACnChe,EAAMkB,KAAK,CAACqL,UAASjD,eAAcN,SAEvC,CAEA,OADA4e,GAAyBnpB,EAAOiN,EAAMmc,EAAUiB,GACzC9oB,CACT,CACA,SAASkpB,GAAyBzqB,EAAOopB,EAAUnc,EAAM6b,EAAWoB,EAAkBC,GACpF,IAAI5oB,EAAQ,GACZ,MAAMmpB,EAAiBlB,GAAyBvc,GAChD,IAAI0d,EAAc7e,OAAOE,kBACzB,SAASqe,EAAevc,EAASjD,EAAcN,GAC7C,MAAM+f,EAAUxc,EAAQwc,QAAQlB,EAAS7f,EAAG6f,EAAS5f,EAAG0gB,GACxD,GAAIpB,IAAcwB,EAChB,OAEF,MAAMjO,EAASvO,EAAQ8c,eAAeV,GAChCW,IAAgBV,GAAoBnqB,EAAMoqB,cAAc/N,GAC9D,IAAKwO,IAAgBP,EACnB,OAEF,MAAMQ,EAAWJ,EAAetB,EAAU/M,GACtCyO,EAAWH,GACbppB,EAAQ,CAAC,CAACuM,UAASjD,eAAcN,UACjCogB,EAAcG,GACLA,IAAaH,GACtBppB,EAAMkB,KAAK,CAACqL,UAASjD,eAAcN,SAEvC,CAEA,OADA4e,GAAyBnpB,EAAOiN,EAAMmc,EAAUiB,GACzC9oB,CACT,CACA,SAASwpB,GAAgB/qB,EAAOopB,EAAUnc,EAAM6b,EAAWoB,EAAkBC,GAC3E,OAAKA,GAAqBnqB,EAAMoqB,cAAchB,GAG9B,MAATnc,GAAiB6b,EAEpB2B,GAAyBzqB,EAAOopB,EAAUnc,EAAM6b,EAAWoB,EAAkBC,GAD7EI,GAAsBvqB,EAAOopB,EAAUnc,EAAMid,GAHxC,EAKX,CACA,SAASc,GAAahrB,EAAOopB,EAAUnc,EAAM6b,EAAWoB,GACtD,MAAM3oB,EAAQ,GACR0pB,EAAuB,MAAThe,EAAe,WAAa,WAChD,IAAIie,GAAiB,EAOrB,OANA/B,GAAyBnpB,EAAOiN,EAAMmc,GAAU,CAACtb,EAASjD,EAAcN,KAClEuD,EAAQmd,GAAa7B,EAASnc,GAAOid,KACvC3oB,EAAMkB,KAAK,CAACqL,UAASjD,eAAcN,UACnC2gB,EAAiBA,GAAkBpd,EAAQwc,QAAQlB,EAAS7f,EAAG6f,EAAS5f,EAAG0gB,GAC7E,IAEEpB,IAAcoC,EACT,GAEF3pB,CACT,CACA,IAAI4pB,GAAc,CAChBhC,4BACAiC,MAAO,CACL7gB,MAAMvK,EAAO2E,EAAGqD,EAASkiB,GACvB,MAAMd,GAAW,OAAoBzkB,EAAG3E,GAClCiN,EAAOjF,EAAQiF,MAAQ,IACvBkd,EAAmBniB,EAAQmiB,mBAAoB,EAC/C5oB,EAAQyG,EAAQ8gB,UAClBmB,GAAkBjqB,EAAOopB,EAAUnc,EAAMid,EAAkBC,GAC3DY,GAAgB/qB,EAAOopB,EAAUnc,GAAM,EAAOid,EAAkBC,GAC9D/V,EAAW,GACjB,OAAK7S,EAAMC,QAGXxB,EAAMspB,+BAA+B9oB,SAAS6K,IAC5C,MAAMd,EAAQhJ,EAAM,GAAGgJ,MACjBuD,EAAUzC,EAAKJ,KAAKV,GACtBuD,IAAYA,EAAQ8Q,MACtBxK,EAAS3R,KAAK,CAACqL,UAASjD,aAAcQ,EAAKd,MAAOA,SACpD,IAEK6J,GATE,EAUX,EACAxG,QAAQ5N,EAAO2E,EAAGqD,EAASkiB,GACzB,MAAMd,GAAW,OAAoBzkB,EAAG3E,GAClCiN,EAAOjF,EAAQiF,MAAQ,KACvBkd,EAAmBniB,EAAQmiB,mBAAoB,EACrD,IAAI5oB,EAAQyG,EAAQ8gB,UAChBmB,GAAkBjqB,EAAOopB,EAAUnc,EAAMid,EAAkBC,GAC7DY,GAAgB/qB,EAAOopB,EAAUnc,GAAM,EAAOid,EAAkBC,GAClE,GAAI5oB,EAAMC,OAAS,EAAG,CACpB,MAAMqJ,EAAetJ,EAAM,GAAGsJ,aACxBI,EAAOjL,EAAM+Q,eAAelG,GAAcI,KAChD1J,EAAQ,GACR,IAAK,IAAIG,EAAI,EAAGA,EAAIuJ,EAAKzJ,SAAUE,EACjCH,EAAMkB,KAAK,CAACqL,QAAS7C,EAAKvJ,GAAImJ,eAAcN,MAAO7I,GAEvD,CACA,OAAOH,CACT,EACAkd,MAAMze,EAAO2E,EAAGqD,EAASkiB,GACvB,MAAMd,GAAW,OAAoBzkB,EAAG3E,GAClCiN,EAAOjF,EAAQiF,MAAQ,KACvBkd,EAAmBniB,EAAQmiB,mBAAoB,EACrD,OAAOF,GAAkBjqB,EAAOopB,EAAUnc,EAAMid,EAAkBC,EACpE,EACAkB,QAAQrrB,EAAO2E,EAAGqD,EAASkiB,GACzB,MAAMd,GAAW,OAAoBzkB,EAAG3E,GAClCiN,EAAOjF,EAAQiF,MAAQ,KACvBkd,EAAmBniB,EAAQmiB,mBAAoB,EACrD,OAAOY,GAAgB/qB,EAAOopB,EAAUnc,EAAMjF,EAAQ8gB,UAAWoB,EAAkBC,EACrF,EACA5gB,EAAEvJ,EAAO2E,EAAGqD,EAASkiB,GACnB,MAAMd,GAAW,OAAoBzkB,EAAG3E,GACxC,OAAOgrB,GAAahrB,EAAOopB,EAAU,IAAKphB,EAAQ8gB,UAAWoB,EAC/D,EACA1gB,EAAExJ,EAAO2E,EAAGqD,EAASkiB,GACnB,MAAMd,GAAW,OAAoBzkB,EAAG3E,GACxC,OAAOgrB,GAAahrB,EAAOopB,EAAU,IAAKphB,EAAQ8gB,UAAWoB,EAC/D,IAIJ,MAAMoB,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAClD,SAASC,GAAiBC,EAAOpC,GAC/B,OAAOoC,EAAMhe,QAAOrG,GAAKA,EAAEskB,MAAQrC,GACrC,CACA,SAASsC,GAA4BF,EAAOve,GAC1C,OAAOue,EAAMhe,QAAOrG,IAA0C,IAArCmkB,GAAiBzO,QAAQ1V,EAAEskB,MAAetkB,EAAEwkB,IAAI1e,OAASA,GACpF,CACA,SAAS2e,GAAaJ,EAAOtiB,GAC3B,OAAOsiB,EAAMvT,MAAK,CAACC,EAAGnO,KACpB,MAAM8hB,EAAK3iB,EAAUa,EAAImO,EACnB+C,EAAK/R,EAAUgP,EAAInO,EACzB,OAAO8hB,EAAG7I,SAAW/H,EAAG+H,OACtB6I,EAAGthB,MAAQ0Q,EAAG1Q,MACdshB,EAAG7I,OAAS/H,EAAG+H,MAAM,GAE3B,CACA,SAAS8I,GAAUC,GACjB,MAAMC,EAAc,GACpB,IAAItqB,EAAG4I,EAAMqhB,EAAKF,EAAKhhB,EAAOwhB,EAC9B,IAAKvqB,EAAI,EAAG4I,GAAQyhB,GAAS,IAAIvqB,OAAQE,EAAI4I,IAAQ5I,EACnDiqB,EAAMI,EAAMrqB,KACV0nB,SAAUqC,EAAKzjB,SAAUyC,QAAOwhB,cAAc,IAAMN,GACtDK,EAAYvpB,KAAK,CACf8H,MAAO7I,EACPiqB,MACAF,MACAlR,WAAYoR,EAAItR,eAChB2I,OAAQ2I,EAAI3I,OACZvY,MAAOA,GAAUghB,EAAMhhB,EACvBwhB,gBAGJ,OAAOD,CACT,CACA,SAASE,GAAYC,GACnB,MAAMjgB,EAAS,CAAC,EAChB,IAAK,MAAMkgB,KAAQD,EAAS,CAC1B,MAAM,MAAC1hB,EAAK,IAAEghB,EAAG,YAAEQ,GAAeG,EAClC,IAAK3hB,IAAU6gB,GAAiBe,SAASZ,GACvC,SAEF,MAAMa,EAASpgB,EAAOzB,KAAWyB,EAAOzB,GAAS,CAAC4H,MAAO,EAAGka,OAAQ,EAAGvJ,OAAQ,EAAGta,KAAM,IACxF4jB,EAAOja,QACPia,EAAOtJ,QAAUiJ,CACnB,CACA,OAAO/f,CACT,CACA,SAASsgB,GAAcL,EAASM,GAC9B,MAAMvgB,EAASggB,GAAYC,IACrB,aAACO,EAAY,cAAEC,GAAiBF,EACtC,IAAI/qB,EAAG4I,EAAMsiB,EACb,IAAKlrB,EAAI,EAAG4I,EAAO6hB,EAAQ3qB,OAAQE,EAAI4I,IAAQ5I,EAAG,CAChDkrB,EAAST,EAAQzqB,GACjB,MAAM,SAACmrB,GAAYD,EAAOjB,IACpBlhB,EAAQyB,EAAO0gB,EAAOniB,OACtB9G,EAAS8G,GAASmiB,EAAOX,YAAcxhB,EAAMuY,OAC/C4J,EAAOrS,YACTqS,EAAOrQ,MAAQ5Y,EAASA,EAAS+oB,EAAeG,GAAYJ,EAAOK,eACnEF,EAAOtQ,OAASqQ,IAEhBC,EAAOrQ,MAAQmQ,EACfE,EAAOtQ,OAAS3Y,EAASA,EAASgpB,EAAgBE,GAAYJ,EAAOM,gBAEzE,CACA,OAAO7gB,CACT,CACA,SAAS8gB,GAAiBjB,GACxB,MAAMC,EAAcF,GAAUC,GACxBc,EAAWjB,GAAaI,EAAYxe,QAAO4e,GAAQA,EAAKT,IAAIkB,YAAW,GACvEjjB,EAAOgiB,GAAaL,GAAiBS,EAAa,SAAS,GAC3DtiB,EAAQkiB,GAAaL,GAAiBS,EAAa,UACnDviB,EAAMmiB,GAAaL,GAAiBS,EAAa,QAAQ,GACzDriB,EAASiiB,GAAaL,GAAiBS,EAAa,WACpDiB,EAAmBvB,GAA4BM,EAAa,KAC5DkB,EAAiBxB,GAA4BM,EAAa,KAChE,MAAO,CACLa,WACAM,WAAYvjB,EAAKmO,OAAOtO,GACxB2jB,eAAgB1jB,EAAMqO,OAAOmV,GAAgBnV,OAAOpO,GAAQoO,OAAOkV,GACnE3Y,UAAWiX,GAAiBS,EAAa,aACzCqB,SAAUzjB,EAAKmO,OAAOrO,GAAOqO,OAAOmV,GACpC3S,WAAY9Q,EAAIsO,OAAOpO,GAAQoO,OAAOkV,GAE1C,CACA,SAASK,GAAeC,EAAYjZ,EAAW4D,EAAGnO,GAChD,OAAOnJ,KAAKmC,IAAIwqB,EAAWrV,GAAI5D,EAAU4D,IAAMtX,KAAKmC,IAAIwqB,EAAWxjB,GAAIuK,EAAUvK,GACnF,CACA,SAASyjB,GAAiBD,EAAYE,GACpCF,EAAW9jB,IAAM7I,KAAKmC,IAAIwqB,EAAW9jB,IAAKgkB,EAAWhkB,KACrD8jB,EAAW3jB,KAAOhJ,KAAKmC,IAAIwqB,EAAW3jB,KAAM6jB,EAAW7jB,MACvD2jB,EAAW5jB,OAAS/I,KAAKmC,IAAIwqB,EAAW5jB,OAAQ8jB,EAAW9jB,QAC3D4jB,EAAW7jB,MAAQ9I,KAAKmC,IAAIwqB,EAAW7jB,MAAO+jB,EAAW/jB,MAC3D,CACA,SAASgkB,GAAWpZ,EAAWmY,EAAQG,EAAQ1gB,GAC7C,MAAM,IAACuf,EAAG,IAAEE,GAAOiB,EACbW,EAAajZ,EAAUiZ,WAC7B,KAAK,IAAA7rB,GAAS+pB,GAAM,CACdmB,EAAOlkB,OACT4L,EAAUmX,IAAQmB,EAAOlkB,MAE3B,MAAM+B,EAAQyB,EAAO0gB,EAAOniB,QAAU,CAAC/B,KAAM,EAAG2J,MAAO,GACvD5H,EAAM/B,KAAO9H,KAAKmC,IAAI0H,EAAM/B,KAAMkkB,EAAOrS,WAAaoR,EAAIrP,OAASqP,EAAIpP,OACvEqQ,EAAOlkB,KAAO+B,EAAM/B,KAAO+B,EAAM4H,MACjCiC,EAAUmX,IAAQmB,EAAOlkB,IAC3B,CACIijB,EAAIgC,YACNH,GAAiBD,EAAY5B,EAAIgC,cAEnC,MAAMC,EAAWhtB,KAAKmC,IAAI,EAAG0pB,EAAOoB,WAAaP,GAAeC,EAAYjZ,EAAW,OAAQ,UACzFwZ,EAAYltB,KAAKmC,IAAI,EAAG0pB,EAAOsB,YAAcT,GAAeC,EAAYjZ,EAAW,MAAO,WAC1F0Z,EAAeJ,IAAatZ,EAAU2Z,EACtCC,EAAgBJ,IAAcxZ,EAAU6Z,EAG9C,OAFA7Z,EAAU2Z,EAAIL,EACdtZ,EAAU6Z,EAAIL,EACPlB,EAAOrS,WACV,CAAC6T,KAAMJ,EAAcK,MAAOH,GAC5B,CAACE,KAAMF,EAAeG,MAAOL,EACnC,CACA,SAASM,GAAiBha,GACxB,MAAMiZ,EAAajZ,EAAUiZ,WAC7B,SAASgB,EAAU9C,GACjB,MAAM+C,EAAS5tB,KAAKmC,IAAIwqB,EAAW9B,GAAOnX,EAAUmX,GAAM,GAE1D,OADAnX,EAAUmX,IAAQ+C,EACXA,CACT,CACAla,EAAU9K,GAAK+kB,EAAU,OACzBja,EAAU/K,GAAKglB,EAAU,QACzBA,EAAU,SACVA,EAAU,SACZ,CACA,SAASE,GAAWlU,EAAYjG,GAC9B,MAAMiZ,EAAajZ,EAAUiZ,WAC7B,SAASmB,EAAmBC,GAC1B,MAAMC,EAAS,CAAChlB,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHAglB,EAAUnuB,SAASirB,IACjBmD,EAAOnD,GAAO7qB,KAAKmC,IAAIuR,EAAUmX,GAAM8B,EAAW9B,GAAK,IAElDmD,CACT,CACA,OACIF,EADGnU,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UACjC,CACA,SAASsU,GAAS9C,EAAOzX,EAAWmY,EAAQvgB,GAC1C,MAAM4iB,EAAa,GACnB,IAAIptB,EAAG4I,EAAMsiB,EAAQjB,EAAKoD,EAAO7I,EACjC,IAAKxkB,EAAI,EAAG4I,EAAOyhB,EAAMvqB,OAAQutB,EAAQ,EAAGrtB,EAAI4I,IAAQ5I,EAAG,CACzDkrB,EAASb,EAAMrqB,GACfiqB,EAAMiB,EAAOjB,IACbA,EAAInmB,OACFonB,EAAOrQ,OAASjI,EAAU2Z,EAC1BrB,EAAOtQ,QAAUhI,EAAU6Z,EAC3BM,GAAW7B,EAAOrS,WAAYjG,IAEhC,MAAM,KAAC8Z,EAAI,MAAEC,GAASX,GAAWpZ,EAAWmY,EAAQG,EAAQ1gB,GAC5D6iB,GAASX,GAAQU,EAAWttB,OAC5B0kB,EAAUA,GAAWmI,EAChB1C,EAAIkB,UACPiC,EAAWrsB,KAAKmqB,EAEpB,CACA,OAAOmC,GAASF,GAASC,EAAYxa,EAAWmY,EAAQvgB,IAAWga,CACrE,CACA,SAAS8I,GAAWrD,EAAK/hB,EAAMH,EAAK8S,EAAOD,GACzCqP,EAAIliB,IAAMA,EACVkiB,EAAI/hB,KAAOA,EACX+hB,EAAIjiB,MAAQE,EAAO2S,EACnBoP,EAAIhiB,OAASF,EAAM6S,EACnBqP,EAAIpP,MAAQA,EACZoP,EAAIrP,OAASA,CACf,CACA,SAAS2S,GAAWlD,EAAOzX,EAAWmY,EAAQvgB,GAC5C,MAAMgjB,EAAczC,EAAO0C,QAC3B,IAAI,EAAC5lB,EAAC,EAAEC,GAAK8K,EACb,IAAK,MAAMsY,KAAUb,EAAO,CAC1B,MAAMJ,EAAMiB,EAAOjB,IACblhB,EAAQyB,EAAO0gB,EAAOniB,QAAU,CAAC4H,MAAO,EAAGka,OAAQ,EAAGvJ,OAAQ,GAC9DA,EAAU4J,EAAOX,YAAcxhB,EAAMuY,QAAW,EACtD,GAAI4J,EAAOrS,WAAY,CACrB,MAAMgC,EAAQjI,EAAU2Z,EAAIjL,EACtB1G,EAAS7R,EAAM/B,MAAQijB,EAAIrP,QAC7B,OAAQ7R,EAAM3J,SAChB0I,EAAIiB,EAAM3J,OAER6qB,EAAIkB,SACNmC,GAAWrD,EAAKuD,EAAYtlB,KAAMJ,EAAGijB,EAAOoB,WAAaqB,EAAYxlB,MAAQwlB,EAAYtlB,KAAM0S,GAE/F0S,GAAWrD,EAAKrX,EAAU1K,KAAOa,EAAM8hB,OAAQ/iB,EAAG+S,EAAOD,GAE3D7R,EAAM3J,MAAQ0I,EACdiB,EAAM8hB,QAAUhQ,EAChB/S,EAAImiB,EAAIhiB,MACV,KAAO,CACL,MAAM2S,EAAShI,EAAU6Z,EAAInL,EACvBzG,EAAQ9R,EAAM/B,MAAQijB,EAAIpP,OAC5B,OAAQ9R,EAAM3J,SAChByI,EAAIkB,EAAM3J,OAER6qB,EAAIkB,SACNmC,GAAWrD,EAAKpiB,EAAG2lB,EAAYzlB,IAAK8S,EAAOkQ,EAAOsB,YAAcmB,EAAYvlB,OAASulB,EAAYzlB,KAEjGulB,GAAWrD,EAAKpiB,EAAG+K,EAAU7K,IAAMgB,EAAM8hB,OAAQhQ,EAAOD,GAE1D7R,EAAM3J,MAAQyI,EACdkB,EAAM8hB,QAAUjQ,EAChB/S,EAAIoiB,EAAIjiB,KACV,CACF,CACA4K,EAAU/K,EAAIA,EACd+K,EAAU9K,EAAIA,CAChB,CACA,EAAApD,EAAA,IAAa,SAAU,CACrBgpB,aAAa,EACbD,QAAS,CACP1lB,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,KAGV,IAAIuiB,GAAU,CACZkD,OAAOrvB,EAAOyB,GACPzB,EAAM+rB,QACT/rB,EAAM+rB,MAAQ,IAEhBtqB,EAAKorB,SAAWprB,EAAKorB,WAAY,EACjCprB,EAAK2nB,SAAW3nB,EAAK2nB,UAAY,MACjC3nB,EAAKuhB,OAASvhB,EAAKuhB,QAAU,EAC7BvhB,EAAK6tB,QAAU7tB,EAAK6tB,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACH5tB,KAAK2S,GACH7S,EAAKE,KAAK2S,EACZ,GAEJ,EACAtU,EAAM+rB,MAAMtpB,KAAKhB,EACnB,EACA+tB,UAAUxvB,EAAOyvB,GACf,MAAMllB,EAAQvK,EAAM+rB,MAAQ/rB,EAAM+rB,MAAMlP,QAAQ4S,IAAe,GAChD,IAAXllB,GACFvK,EAAM+rB,MAAM/U,OAAOzM,EAAO,EAE9B,EACA/C,UAAUxH,EAAOyB,EAAMuG,GACrBvG,EAAKorB,SAAW7kB,EAAQ6kB,SACxBprB,EAAK2nB,SAAWphB,EAAQohB,SACxB3nB,EAAKuhB,OAAShb,EAAQgb,MACxB,EACAxd,OAAOxF,EAAOuc,EAAOD,EAAQoT,GAC3B,IAAK1vB,EACH,OAEF,MAAMmvB,GAAU,OAAUnvB,EAAMgI,QAAQ4kB,OAAOuC,SACzCrC,EAAiBlsB,KAAKmC,IAAIwZ,EAAQ4S,EAAQ5S,MAAO,GACjDwQ,EAAkBnsB,KAAKmC,IAAIuZ,EAAS6S,EAAQ7S,OAAQ,GACpDyP,EAAQiB,GAAiBhtB,EAAM+rB,OAC/B4D,EAAgB5D,EAAMsB,SACtBuC,EAAkB7D,EAAMxR,YAC9B,OAAKva,EAAM+rB,OAAOJ,IACgB,oBAArBA,EAAIkE,cACblE,EAAIkE,cACN,IAEF,MAAMC,EAA0BH,EAAc/sB,QAAO,CAACkf,EAAOsK,IAC3DA,EAAKT,IAAI3jB,UAAwC,IAA7BokB,EAAKT,IAAI3jB,QAAQif,QAAoBnF,EAAQA,EAAQ,GAAG,IAAM,EAC9E2K,EAASnmB,OAAOgP,OAAO,CAC3BuY,WAAYtR,EACZwR,YAAazR,EACb6S,UACArC,iBACAC,kBACAL,aAAcI,EAAiB,EAAIgD,EACnCnD,cAAeI,EAAkB,IAE7BQ,EAAajnB,OAAOqC,OAAO,CAAC,EAAGwmB,GACrC3B,GAAiBD,GAAY,OAAUmC,IACvC,MAAMpb,EAAYhO,OAAOqC,OAAO,CAC9B4kB,aACAU,EAAGnB,EACHqB,EAAGpB,EACHxjB,EAAG4lB,EAAQvlB,KACXJ,EAAG2lB,EAAQ1lB,KACV0lB,GACGjjB,EAASsgB,GAAcmD,EAAc5X,OAAO6X,GAAkBnD,GACpEoC,GAAS9C,EAAMc,SAAUvY,EAAWmY,EAAQvgB,GAC5C2iB,GAASc,EAAerb,EAAWmY,EAAQvgB,GACvC2iB,GAASe,EAAiBtb,EAAWmY,EAAQvgB,IAC/C2iB,GAASc,EAAerb,EAAWmY,EAAQvgB,GAE7CoiB,GAAiBha,GACjB2a,GAAWlD,EAAMoB,WAAY7Y,EAAWmY,EAAQvgB,GAChDoI,EAAU/K,GAAK+K,EAAU2Z,EACzB3Z,EAAU9K,GAAK8K,EAAU6Z,EACzBc,GAAWlD,EAAMqB,eAAgB9Y,EAAWmY,EAAQvgB,GACpDlM,EAAMsU,UAAY,CAChB1K,KAAM0K,EAAU1K,KAChBH,IAAK6K,EAAU7K,IACfC,MAAO4K,EAAU1K,KAAO0K,EAAU2Z,EAClCtkB,OAAQ2K,EAAU7K,IAAM6K,EAAU6Z,EAClC7R,OAAQhI,EAAU6Z,EAClB5R,MAAOjI,EAAU2Z,IAEnB,OAAKlC,EAAMzX,WAAYsY,IACrB,MAAMjB,EAAMiB,EAAOjB,IACnBrlB,OAAOqC,OAAOgjB,EAAK3rB,EAAMsU,WACzBqX,EAAInmB,OAAO8O,EAAU2Z,EAAG3Z,EAAU6Z,EAAG,CAACvkB,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAG,GAEhF,GAGF,MAAMomB,GACJC,eAAeC,EAAQ/M,GAAc,CACrCgN,eAAevb,GACb,OAAO,CACT,CACAwb,iBAAiBnwB,EAAOG,EAAMiwB,GAAW,CACzCC,oBAAoBrwB,EAAOG,EAAMiwB,GAAW,CAC5CE,sBACE,OAAO,CACT,CACAC,eAAeziB,EAASyO,EAAOD,EAAQ4G,GAGrC,OAFA3G,EAAQ3b,KAAKmC,IAAI,EAAGwZ,GAASzO,EAAQyO,OACrCD,EAASA,GAAUxO,EAAQwO,OACpB,CACLC,QACAD,OAAQ1b,KAAKmC,IAAI,EAAGmgB,EAActiB,KAAKkE,MAAMyX,EAAQ2G,GAAe5G,GAExE,CACAkU,WAAWP,GACT,OAAO,CACT,CACAQ,aAAappB,GACb,EAGF,MAAMqpB,WAAsBX,GAC1BC,eAAevuB,GACb,OAAOA,GAAQA,EAAKyQ,YAAczQ,EAAKyQ,WAAW,OAAS,IAC7D,CACAue,aAAappB,GACXA,EAAOW,QAAQnB,WAAY,CAC7B,EAGF,MAAM8pB,GAAc,WACdC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAERC,GAAgB7oB,GAAmB,OAAVA,GAA4B,KAAVA,EACjD,SAAS8oB,GAAWtB,EAAQ/M,GAC1B,MAAMK,EAAQ0M,EAAO1M,MACfiO,EAAevB,EAAOwB,aAAa,UACnCC,EAAczB,EAAOwB,aAAa,SAcxC,GAbAxB,EAAOU,IAAe,CACpBjwB,QAAS,CACP4b,OAAQkV,EACRjV,MAAOmV,EACPnO,MAAO,CACL0D,QAAS1D,EAAM0D,QACf3K,OAAQiH,EAAMjH,OACdC,MAAOgH,EAAMhH,SAInBgH,EAAM0D,QAAU1D,EAAM0D,SAAW,QACjC1D,EAAMoO,UAAYpO,EAAMoO,WAAa,aACjCL,GAAcI,GAAc,CAC9B,MAAME,GAAe,OAAa3B,EAAQ,cACrBnwB,IAAjB8xB,IACF3B,EAAO1T,MAAQqV,EAEnB,CACA,GAAIN,GAAcE,GAChB,GAA4B,KAAxBvB,EAAO1M,MAAMjH,OACf2T,EAAO3T,OAAS2T,EAAO1T,OAAS2G,GAAe,OAC1C,CACL,MAAM2O,GAAgB,OAAa5B,EAAQ,eACrBnwB,IAAlB+xB,IACF5B,EAAO3T,OAASuV,EAEpB,CAEF,OAAO5B,CACT,CACA,MAAM6B,KAAuB,KAA+B,CAACC,SAAS,GACtE,SAASC,GAAYC,EAAM9xB,EAAMiwB,GAC/B6B,EAAK9B,iBAAiBhwB,EAAMiwB,EAAU0B,GACxC,CACA,SAASI,GAAelyB,EAAOG,EAAMiwB,GACnCpwB,EAAMiwB,OAAOI,oBAAoBlwB,EAAMiwB,EAAU0B,GACnD,CACA,SAASK,GAAgB5vB,EAAOvC,GAC9B,MAAMG,EAAOywB,GAAYruB,EAAMpC,OAASoC,EAAMpC,MACxC,EAACoJ,EAAC,EAAEC,IAAK,OAAoBjH,EAAOvC,GAC1C,MAAO,CACLG,OACAH,QACAoyB,OAAQ7vB,EACRgH,OAASzJ,IAANyJ,EAAkBA,EAAI,KACzBC,OAAS1J,IAAN0J,EAAkBA,EAAI,KAE7B,CACA,SAAS6oB,GAAiBC,EAAUrC,GAClC,IAAK,MAAMgC,KAAQK,EACjB,GAAIL,IAAShC,GAAUgC,EAAKM,SAAStC,GACnC,OAAO,CAGb,CACA,SAASuC,GAAqBxyB,EAAOG,EAAMiwB,GACzC,MAAMH,EAASjwB,EAAMiwB,OACfwC,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMnZ,KAASkZ,EAClBC,EAAUA,GAAWP,GAAiB5Y,EAAMoZ,WAAY5C,GACxD2C,EAAUA,IAAYP,GAAiB5Y,EAAMqZ,aAAc7C,GAEzD2C,GACFxC,GACF,IAGF,OADAqC,EAASM,QAAQC,SAAU,CAACC,WAAW,EAAMC,SAAS,IAC/CT,CACT,CACA,SAASU,GAAqBnzB,EAAOG,EAAMiwB,GACzC,MAAMH,EAASjwB,EAAMiwB,OACfwC,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMnZ,KAASkZ,EAClBC,EAAUA,GAAWP,GAAiB5Y,EAAMqZ,aAAc7C,GAC1D2C,EAAUA,IAAYP,GAAiB5Y,EAAMoZ,WAAY5C,GAEvD2C,GACFxC,GACF,IAGF,OADAqC,EAASM,QAAQC,SAAU,CAACC,WAAW,EAAMC,SAAS,IAC/CT,CACT,CACA,MAAMW,GAAqB,IAAIzzB,IAC/B,IAAI0zB,GAAsB,EAC1B,SAASC,KACP,MAAMC,EAAMtyB,OAAOuyB,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB5yB,SAAQ,CAACsG,EAAQ9G,KAC9BA,EAAMyzB,0BAA4BF,GACpCzsB,GACF,IAEJ,CACA,SAAS4sB,GAA8B1zB,EAAO8G,GACvCssB,GAAmB1qB,MACtBzH,OAAOkvB,iBAAiB,SAAUmD,IAEpCF,GAAmB/wB,IAAIrC,EAAO8G,EAChC,CACA,SAAS6sB,GAAgC3zB,GACvCozB,GAAmBhwB,OAAOpD,GACrBozB,GAAmB1qB,MACtBzH,OAAOovB,oBAAoB,SAAUiD,GAEzC,CACA,SAASM,GAAqB5zB,EAAOG,EAAMiwB,GACzC,MAAMH,EAASjwB,EAAMiwB,OACf4D,EAAY5D,IAAU,OAAeA,GAC3C,IAAK4D,EACH,OAEF,MAAM/sB,GAAS,QAAU,CAACyV,EAAOD,KAC/B,MAAM2R,EAAI4F,EAAUC,YACpB1D,EAAS7T,EAAOD,GACZ2R,EAAI4F,EAAUC,aAChB1D,GACF,GACCnvB,QACGwxB,EAAW,IAAIsB,gBAAepB,IAClC,MAAMlZ,EAAQkZ,EAAQ,GAChBpW,EAAQ9C,EAAMua,YAAYzX,MAC1BD,EAAS7C,EAAMua,YAAY1X,OACnB,IAAVC,GAA0B,IAAXD,GAGnBxV,EAAOyV,EAAOD,EAAO,IAIvB,OAFAmW,EAASM,QAAQc,GACjBH,GAA8B1zB,EAAO8G,GAC9B2rB,CACT,CACA,SAASwB,GAAgBj0B,EAAOG,EAAMsyB,GAChCA,GACFA,EAASyB,aAEE,WAAT/zB,GACFwzB,GAAgC3zB,EAEpC,CACA,SAASm0B,GAAqBn0B,EAAOG,EAAMiwB,GACzC,MAAMH,EAASjwB,EAAMiwB,OACfmE,GAAQ,QAAW7xB,IACL,OAAdvC,EAAM6O,KACRuhB,EAAS+B,GAAgB5vB,EAAOvC,GAClC,GACCA,GAAQkX,IACT,MAAM3U,EAAQ2U,EAAK,GACnB,MAAO,CAAC3U,EAAOA,EAAM4c,QAAS5c,EAAM6c,QAAQ,IAG9C,OADA4S,GAAY/B,EAAQ9vB,EAAMi0B,GACnBA,CACT,CACA,MAAMC,WAAoBtE,GACxBC,eAAeC,EAAQ/M,GACrB,MAAMvO,EAAUsb,GAAUA,EAAO/d,YAAc+d,EAAO/d,WAAW,MACjE,OAAIyC,GAAWA,EAAQsb,SAAWA,GAChCsB,GAAWtB,EAAQ/M,GACZvO,GAEF,IACT,CACAub,eAAevb,GACb,MAAMsb,EAAStb,EAAQsb,OACvB,IAAKA,EAAOU,IACV,OAAO,EAET,MAAMjwB,EAAUuvB,EAAOU,IAAajwB,QACpC,CAAC,SAAU,SAASF,SAAS+D,IAC3B,MAAMkE,EAAQ/H,EAAQ6D,IAClB,OAAckE,GAChBwnB,EAAOqE,gBAAgB/vB,GAEvB0rB,EAAOsE,aAAahwB,EAAMkE,EAC5B,IAEF,MAAM8a,EAAQ7iB,EAAQ6iB,OAAS,CAAC,EAMhC,OALAjd,OAAOC,KAAKgd,GAAO/iB,SAASmH,IAC1BsoB,EAAO1M,MAAM5b,GAAO4b,EAAM5b,EAAI,IAEhCsoB,EAAO1T,MAAQ0T,EAAO1T,aACf0T,EAAOU,KACP,CACT,CACAR,iBAAiBnwB,EAAOG,EAAMiwB,GAC5B5wB,KAAK6wB,oBAAoBrwB,EAAOG,GAChC,MAAMq0B,EAAUx0B,EAAMy0B,WAAaz0B,EAAMy0B,SAAW,CAAC,GAC/CC,EAAW,CACfC,OAAQnC,GACRoC,OAAQzB,GACRrsB,OAAQ8sB,IAEJvK,EAAUqL,EAASv0B,IAASg0B,GAClCK,EAAQr0B,GAAQkpB,EAAQrpB,EAAOG,EAAMiwB,EACvC,CACAC,oBAAoBrwB,EAAOG,GACzB,MAAMq0B,EAAUx0B,EAAMy0B,WAAaz0B,EAAMy0B,SAAW,CAAC,GAC/CL,EAAQI,EAAQr0B,GACtB,IAAKi0B,EACH,OAEF,MAAMM,EAAW,CACfC,OAAQV,GACRW,OAAQX,GACRntB,OAAQmtB,IAEJ5K,EAAUqL,EAASv0B,IAAS+xB,GAClC7I,EAAQrpB,EAAOG,EAAMi0B,GACrBI,EAAQr0B,QAAQL,CAClB,CACAwwB,sBACE,OAAOrvB,OAAOuyB,gBAChB,CACAjD,eAAeN,EAAQ1T,EAAOD,EAAQ4G,GACpC,OAAO,OAAe+M,EAAQ1T,EAAOD,EAAQ4G,EAC/C,CACAsN,WAAWP,GACT,MAAM4D,GAAY,OAAe5D,GACjC,SAAU4D,IAAaA,EAAUgB,YACnC,EAGF,SAASC,GAAgB7E,GACvB,QAAK,UAAiD,qBAApB8E,iBAAmC9E,aAAkB8E,gBAC9ErE,GAEF2D,EACT,CAEA,MAAMW,GACJz1B,cACEC,KAAK+J,OAAIzJ,EACTN,KAAKgK,OAAI1J,EACTN,KAAK+F,QAAS,EACd/F,KAAKwI,aAAUlI,EACfN,KAAK6I,iBAAcvI,CACrB,CACAm1B,gBAAgB/K,GACd,MAAM,EAAC3gB,EAAC,EAAEC,GAAKhK,KAAKgrB,SAAS,CAAC,IAAK,KAAMN,GACzC,MAAO,CAAC3gB,IAAGC,IACb,CACA0rB,WACE,OAAO,OAAS11B,KAAK+J,KAAM,OAAS/J,KAAKgK,EAC3C,CACAghB,SAASjiB,EAAO4sB,GACd,MAAMl1B,EAAQT,KAAK6I,YACnB,IAAK8sB,IAAUl1B,EACb,OAAOT,KAET,MAAM41B,EAAM,CAAC,EAIb,OAHA7sB,EAAM/H,SAAQ+D,IACZ6wB,EAAI7wB,GAAQtE,EAAMsE,IAAStE,EAAMsE,GAAMgB,SAAWtF,EAAMsE,GAAMc,IAAM7F,KAAK+E,EAAK,IAEzE6wB,CACT,EAEFJ,GAAQ3Z,SAAW,CAAC,EACpB2Z,GAAQK,mBAAgBv1B,EAExB,MAAMw1B,GAAa,CACjBxtB,OAAOW,GACL,OAAO,OAAQA,GAASA,EAAQ,GAAKA,CACvC,EACA8sB,QAAQC,EAAWjrB,EAAOkO,GACxB,GAAkB,IAAd+c,EACF,MAAO,IAET,MAAM9S,EAASljB,KAAKQ,MAAMgI,QAAQ0a,OAClC,IAAI+S,EACAC,EAAQF,EACZ,GAAI/c,EAAMjX,OAAS,EAAG,CACpB,MAAMm0B,EAAU/0B,KAAKmC,IAAInC,KAAK2X,IAAIE,EAAM,GAAGhQ,OAAQ7H,KAAK2X,IAAIE,EAAMA,EAAMjX,OAAS,GAAGiH,SAChFktB,EAAU,MAAQA,EAAU,QAC9BF,EAAW,cAEbC,EAAQE,GAAeJ,EAAW/c,EACpC,CACA,MAAMod,GAAW,OAAMj1B,KAAK2X,IAAImd,IAC1BI,EAAal1B,KAAKmC,IAAInC,KAAKC,KAAK,EAAID,KAAKkE,MAAM+wB,GAAW,IAAK,GAC/D7tB,EAAU,CAACytB,WAAUM,sBAAuBD,EAAYE,sBAAuBF,GAErF,OADAxvB,OAAOqC,OAAOX,EAASxI,KAAKwI,QAAQyQ,MAAMuP,SACnC,OAAawN,EAAW9S,EAAQ1a,EACzC,EACAiuB,YAAYT,EAAWjrB,EAAOkO,GAC5B,GAAkB,IAAd+c,EACF,MAAO,IAET,MAAM9vB,EAAS8vB,EAAa50B,KAAKopB,IAAI,GAAIppB,KAAKkE,OAAM,OAAM0wB,KAC1D,OAAe,IAAX9vB,GAA2B,IAAXA,GAA2B,IAAXA,EAC3B4vB,GAAWC,QAAQW,KAAK12B,KAAMg2B,EAAWjrB,EAAOkO,GAElD,EACT,GAEF,SAASmd,GAAeJ,EAAW/c,GACjC,IAAIid,EAAQjd,EAAMjX,OAAS,EAAIiX,EAAM,GAAGhQ,MAAQgQ,EAAM,GAAGhQ,MAAQgQ,EAAM,GAAGhQ,MAAQgQ,EAAM,GAAGhQ,MAI3F,OAHI7H,KAAK2X,IAAImd,IAAU,GAAKF,IAAc50B,KAAKkE,MAAM0wB,KACnDE,EAAQF,EAAY50B,KAAKkE,MAAM0wB,IAE1BE,CACT,CACA,IAAIS,GAAQ,CAACb,eAqEb,SAASc,GAASrtB,EAAO0P,GACvB,MAAM4d,EAAWttB,EAAMf,QAAQyQ,MACzB6d,EAAaD,EAASE,eAAiBC,GAAkBztB,GACzD0tB,EAAeJ,EAASK,MAAMC,QAAUC,GAAgBne,GAAS,GACjEoe,EAAkBJ,EAAaj1B,OAC/Bs1B,EAAQL,EAAa,GACrBha,EAAOga,EAAaI,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBP,EAEpB,OADAU,GAAWve,EAAOse,EAAUN,EAAcI,EAAkBP,GACrDS,EAET,MAAM5V,EAAU8V,GAAiBR,EAAche,EAAO6d,GACtD,GAAIO,EAAkB,EAAG,CACvB,IAAIn1B,EAAG4I,EACP,MAAM4sB,EAAkBL,EAAkB,EAAIj2B,KAAKu2B,OAAO1a,EAAOqa,IAAUD,EAAkB,IAAM,KAEnG,IADAjY,GAAKnG,EAAOse,EAAU5V,GAAS,OAAc+V,GAAmB,EAAIJ,EAAQI,EAAiBJ,GACxFp1B,EAAI,EAAG4I,EAAOusB,EAAkB,EAAGn1B,EAAI4I,EAAM5I,IAChDkd,GAAKnG,EAAOse,EAAU5V,EAASsV,EAAa/0B,GAAI+0B,EAAa/0B,EAAI,IAGnE,OADAkd,GAAKnG,EAAOse,EAAU5V,EAAS1E,GAAM,OAAcya,GAAmBze,EAAMjX,OAASib,EAAOya,GACrFH,CACT,CAEA,OADAnY,GAAKnG,EAAOse,EAAU5V,GACf4V,CACT,CACA,SAASP,GAAkBztB,GACzB,MAAMmV,EAASnV,EAAMf,QAAQkW,OACvBkZ,EAAaruB,EAAMsuB,YACnBC,EAAWvuB,EAAMsP,QAAU+e,GAAclZ,EAAS,EAAI,GACtDqZ,EAAWxuB,EAAMyuB,WAAaJ,EACpC,OAAOx2B,KAAKkE,MAAMlE,KAAKC,IAAIy2B,EAAUC,GACvC,CACA,SAASN,GAAiBR,EAAche,EAAO6d,GAC7C,MAAMmB,EAAmBC,GAAejB,GAClCtV,EAAU1I,EAAMjX,OAAS80B,EAC/B,IAAKmB,EACH,OAAO72B,KAAKmC,IAAIoe,EAAS,GAE3B,MAAMwW,GAAU,OAAWF,GAC3B,IAAK,IAAI/1B,EAAI,EAAG4I,EAAOqtB,EAAQn2B,OAAS,EAAGE,EAAI4I,EAAM5I,IAAK,CACxD,MAAMiC,EAASg0B,EAAQj2B,GACvB,GAAIiC,EAASwd,EACX,OAAOxd,CAEX,CACA,OAAO/C,KAAKmC,IAAIoe,EAAS,EAC3B,CACA,SAASyV,GAAgBne,GACvB,MAAMmf,EAAS,GACf,IAAIl2B,EAAG4I,EACP,IAAK5I,EAAI,EAAG4I,EAAOmO,EAAMjX,OAAQE,EAAI4I,EAAM5I,IACrC+W,EAAM/W,GAAGg1B,OACXkB,EAAOn1B,KAAKf,GAGhB,OAAOk2B,CACT,CACA,SAASZ,GAAWve,EAAOse,EAAUN,EAActV,GACjD,IAEIzf,EAFA2Q,EAAQ,EACRiH,EAAOmd,EAAa,GAGxB,IADAtV,EAAUvgB,KAAKi3B,KAAK1W,GACfzf,EAAI,EAAGA,EAAI+W,EAAMjX,OAAQE,IACxBA,IAAM4X,IACRyd,EAASt0B,KAAKgW,EAAM/W,IACpB2Q,IACAiH,EAAOmd,EAAapkB,EAAQ8O,GAGlC,CACA,SAASvC,GAAKnG,EAAOse,EAAU5V,EAAS2W,EAAYC,GAClD,MAAMj3B,GAAQ,IAAAqG,GAAe2wB,EAAY,GACnC3uB,EAAMvI,KAAKC,KAAI,IAAAsG,GAAe4wB,EAAUtf,EAAMjX,QAASiX,EAAMjX,QACnE,IACIA,EAAQE,EAAG4X,EADXjH,EAAQ,EAEZ8O,EAAUvgB,KAAKi3B,KAAK1W,GAChB4W,IACFv2B,EAASu2B,EAAWD,EACpB3W,EAAU3f,EAASZ,KAAKkE,MAAMtD,EAAS2f,IAEzC7H,EAAOxY,EACP,MAAOwY,EAAO,EACZjH,IACAiH,EAAO1Y,KAAKu2B,MAAMr2B,EAAQuR,EAAQ8O,GAEpC,IAAKzf,EAAId,KAAKmC,IAAIjC,EAAO,GAAIY,EAAIyH,EAAKzH,IAChCA,IAAM4X,IACRyd,EAASt0B,KAAKgW,EAAM/W,IACpB2Q,IACAiH,EAAO1Y,KAAKu2B,MAAMr2B,EAAQuR,EAAQ8O,GAGxC,CACA,SAASuW,GAAe7gB,GACtB,MAAMmhB,EAAMnhB,EAAIrV,OAChB,IAAIE,EAAG0mB,EACP,GAAI4P,EAAM,EACR,OAAO,EAET,IAAK5P,EAAOvR,EAAI,GAAInV,EAAI,EAAGA,EAAIs2B,IAAOt2B,EACpC,GAAImV,EAAInV,GAAKmV,EAAInV,EAAI,KAAO0mB,EAC1B,OAAO,EAGX,OAAOA,CACT,CA7KA,EAAAhiB,EAAA,IAAa,QAAS,CACpB6gB,SAAS,EACT/I,QAAQ,EACRhV,SAAS,EACTmV,aAAa,EACb4Z,OAAQ,QACRC,MAAO,EACP/Z,KAAM,CACJ8I,SAAS,EACTpD,UAAW,EACXsU,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACXjB,WAAY,EACZkB,UAAW,CAAC1pB,EAAM5G,IAAYA,EAAQ6b,UACtC0U,UAAW,CAAC3pB,EAAM5G,IAAYA,EAAQpE,MACtCsa,QAAQ,EACRsa,WAAY,GACZC,iBAAkB,EAClB7V,YAAa,GAEfnC,MAAO,CACLwG,SAAS,EACTzD,KAAM,GACN2L,QAAS,CACP1lB,IAAK,EACLE,OAAQ,IAGZ8O,MAAO,CACLigB,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjB3J,QAAS,EACTlI,SAAS,EACTmP,UAAU,EACV2C,gBAAiB,EACjBC,YAAa,EACbC,SAAU9C,GAAMb,WAAWxtB,OAC3BoxB,MAAO,CAAC,EACRxC,MAAO,CAAC,EACRyC,MAAO,SACPC,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGrB,EAAAnzB,EAAA,MAAe,cAAe,QAAS,GAAI,SAC3C,EAAAA,EAAA,MAAe,aAAc,QAAS,GAAI,eAC1C,EAAAA,EAAA,MAAe,aAAc,cAAe,GAAI,eAChD,EAAAA,EAAA,MAAe,cAAe,QAAS,GAAI,SAC3C,EAAAA,EAAA,SAAkB,QAAS,CACzBI,WAAW,EACXE,YAAcC,IAAUA,EAAK6yB,WAAW,YAAc7yB,EAAK6yB,WAAW,UAAqB,aAAT7yB,GAAgC,WAATA,EACzGF,WAAaE,GAAkB,eAATA,GAAkC,mBAATA,IAEjD,EAAAP,EAAA,SAAkB,SAAU,CAC1BI,UAAW,UAEb,EAAAJ,EAAA,SAAkB,cAAe,CAC/BM,YAAcC,GAAkB,oBAATA,GAAuC,aAATA,EACrDF,WAAaE,GAAkB,oBAATA,IA+GxB,MAAM8yB,GAAgBN,GAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EACpFO,GAAiB,CAAC3wB,EAAO2R,EAAMwD,IAAoB,QAATxD,GAA2B,SAATA,EAAkB3R,EAAM2R,GAAQwD,EAASnV,EAAM2R,GAAQwD,EACzH,SAASyb,GAAO9iB,EAAK+iB,GACnB,MAAMhC,EAAS,GACTiC,EAAYhjB,EAAIrV,OAASo4B,EACzB5B,EAAMnhB,EAAIrV,OAChB,IAAIE,EAAI,EACR,KAAOA,EAAIs2B,EAAKt2B,GAAKm4B,EACnBjC,EAAOn1B,KAAKoU,EAAIjW,KAAKkE,MAAMpD,KAE7B,OAAOk2B,CACT,CACA,SAASkC,GAAoB/wB,EAAOwB,EAAOwvB,GACzC,MAAMv4B,EAASuH,EAAM0P,MAAMjX,OACrBw4B,EAAap5B,KAAKC,IAAI0J,EAAO/I,EAAS,GACtCV,EAAQiI,EAAMiU,YACd7T,EAAMJ,EAAMkU,UACZgd,EAAU,KAChB,IACI/b,EADAgc,EAAYnxB,EAAM2P,gBAAgBshB,GAEtC,KAAID,IAEA7b,EADa,IAAX1c,EACOZ,KAAKmC,IAAIm3B,EAAYp5B,EAAOqI,EAAM+wB,GACxB,IAAV3vB,GACCxB,EAAM2P,gBAAgB,GAAKwhB,GAAa,GAExCA,EAAYnxB,EAAM2P,gBAAgBshB,EAAa,IAAM,EAEjEE,GAAaF,EAAazvB,EAAQ2T,GAAUA,EACxCgc,EAAYp5B,EAAQm5B,GAAWC,EAAY/wB,EAAM8wB,IAIvD,OAAOC,CACT,CACA,SAASC,GAAeC,EAAQ54B,IAC9B,OAAK44B,GAASrlB,IACZ,MAAMslB,EAAKtlB,EAAMslB,GACXC,EAAQD,EAAG74B,OAAS,EAC1B,IAAIE,EACJ,GAAI44B,EAAQ94B,EAAQ,CAClB,IAAKE,EAAI,EAAGA,EAAI44B,IAAS54B,SAChBqT,EAAM9J,KAAKovB,EAAG34B,IAEvB24B,EAAGrjB,OAAO,EAAGsjB,EACf,IAEJ,CACA,SAASC,GAAkBvyB,GACzB,OAAOA,EAAQqwB,UAAYrwB,EAAQovB,WAAa,CAClD,CACA,SAASoD,GAAexyB,EAASyyB,GAC/B,IAAKzyB,EAAQif,QACX,OAAO,EAET,MAAMyT,GAAO,OAAO1yB,EAAQ0yB,KAAMD,GAC5BtL,GAAU,OAAUnnB,EAAQmnB,SAC5BwL,GAAQ,OAAQ3yB,EAAQwb,MAAQxb,EAAQwb,KAAKhiB,OAAS,EAC5D,OAAQm5B,EAAQD,EAAKE,WAAczL,EAAQ7S,MAC7C,CACA,SAASue,GAAmBltB,EAAQ5E,GAClC,OAAO,OAAc4E,EAAQ,CAC3B5E,QACA5I,KAAM,SAEV,CACA,SAAS26B,GAAkBntB,EAAQpD,EAAOzI,GACxC,OAAO,OAAc6L,EAAQ,CAC3B7L,OACAyI,QACApK,KAAM,QAEV,CACA,SAAS46B,GAAW5B,EAAO/P,EAAUlgB,GACnC,IAAIksB,GAAM,QAAmB+D,GAI7B,OAHKjwB,GAAwB,UAAbkgB,IAA2BlgB,GAAwB,UAAbkgB,KACpDgM,EAAMqE,GAAarE,IAEdA,CACT,CACA,SAAS4F,GAAUjyB,EAAOmV,EAAQkL,EAAU+P,GAC1C,MAAM,IAAC1vB,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,EAAK,MAAE1J,GAAS+I,GACpC,UAACuL,EAAS,OAAE/G,GAAUvN,EAC5B,IACIyhB,EAAUwZ,EAAQC,EADlBpc,EAAW,EAEf,MAAMxC,EAAS3S,EAASF,EAClB8S,EAAQ7S,EAAQE,EACtB,GAAIb,EAAMsR,eAAgB,CAExB,GADA4gB,GAAS,QAAe9B,EAAOvvB,EAAMF,IACjC,IAAAhI,GAAS0nB,GAAW,CACtB,MAAM+R,EAAiB70B,OAAOC,KAAK6iB,GAAU,GACvC3gB,EAAQ2gB,EAAS+R,GACvBD,EAAS3tB,EAAO4tB,GAAgB3iB,iBAAiB/P,GAAS6T,EAAS4B,CACrE,MACEgd,EADsB,WAAb9R,GACC9U,EAAU3K,OAAS2K,EAAU7K,KAAO,EAAI6S,EAAS4B,EAElDwb,GAAe3wB,EAAOqgB,EAAUlL,GAE3CuD,EAAW/X,EAAQE,CACrB,KAAO,CACL,IAAI,IAAAlI,GAAS0nB,GAAW,CACtB,MAAM+R,EAAiB70B,OAAOC,KAAK6iB,GAAU,GACvC3gB,EAAQ2gB,EAAS+R,GACvBF,EAAS1tB,EAAO4tB,GAAgB3iB,iBAAiB/P,GAAS8T,EAAQ2B,CACpE,MACE+c,EADsB,WAAb7R,GACC9U,EAAU1K,KAAO0K,EAAU5K,OAAS,EAAI6S,EAAQ2B,EAEjDwb,GAAe3wB,EAAOqgB,EAAUlL,GAE3Cgd,GAAS,QAAe/B,EAAOxvB,EAAQF,GACvCqV,EAAwB,SAAbsK,GAAuB,EAAAjJ,EAAU,EAAAA,CAC9C,CACA,MAAO,CAAC8a,SAAQC,SAAQzZ,WAAU3C,WACpC,CACA,MAAMsc,WAAcpG,GAClBz1B,YAAY8E,GACVsX,QACAnc,KAAKkM,GAAKrH,EAAIqH,GACdlM,KAAKW,KAAOkE,EAAIlE,KAChBX,KAAKwI,aAAUlI,EACfN,KAAKqP,IAAMxK,EAAIwK,IACfrP,KAAKQ,MAAQqE,EAAIrE,MACjBR,KAAKiK,SAAM3J,EACXN,KAAKmK,YAAS7J,EACdN,KAAKoK,UAAO9J,EACZN,KAAKkK,WAAQ5J,EACbN,KAAK+c,WAAQzc,EACbN,KAAK8c,YAASxc,EACdN,KAAK67B,SAAW,CACdzxB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAEVnK,KAAKiiB,cAAW3hB,EAChBN,KAAKkiB,eAAY5hB,EACjBN,KAAK87B,gBAAax7B,EAClBN,KAAK+7B,mBAAgBz7B,EACrBN,KAAKg8B,iBAAc17B,EACnBN,KAAKi8B,kBAAe37B,EACpBN,KAAKyN,UAAOnN,EACZN,KAAKk8B,mBAAgB57B,EACrBN,KAAKqB,SAAMf,EACXN,KAAKuD,SAAMjD,EACXN,KAAKm8B,YAAS77B,EACdN,KAAKiZ,MAAQ,GACbjZ,KAAKo8B,eAAiB,KACtBp8B,KAAKq8B,YAAc,KACnBr8B,KAAKs8B,YAAc,KACnBt8B,KAAK6Y,QAAU,EACf7Y,KAAKg4B,WAAa,EAClBh4B,KAAKu8B,kBAAoB,CAAC,EAC1Bv8B,KAAKwd,iBAAcld,EACnBN,KAAKyd,eAAYnd,EACjBN,KAAKwpB,gBAAiB,EACtBxpB,KAAKw8B,cAAWl8B,EAChBN,KAAKy8B,cAAWn8B,EAChBN,KAAK08B,mBAAgBp8B,EACrBN,KAAK28B,mBAAgBr8B,EACrBN,KAAK48B,aAAe,EACpB58B,KAAK68B,aAAe,EACpB78B,KAAKoY,OAAS,CAAC,EACfpY,KAAK88B,mBAAoB,EACzB98B,KAAKiQ,cAAW3P,CAClB,CACAy8B,KAAKv0B,GACHxI,KAAKwI,QAAUA,EAAQw0B,WAAWh9B,KAAK0S,cACvC1S,KAAKyN,KAAOjF,EAAQiF,KACpBzN,KAAKy8B,SAAWz8B,KAAK4S,MAAMpK,EAAQnH,KACnCrB,KAAKw8B,SAAWx8B,KAAK4S,MAAMpK,EAAQjF,KACnCvD,KAAK28B,cAAgB38B,KAAK4S,MAAMpK,EAAQy0B,cACxCj9B,KAAK08B,cAAgB18B,KAAK4S,MAAMpK,EAAQ00B,aAC1C,CACAtqB,MAAMpE,EAAKzD,GACT,OAAOyD,CACT,CACArC,gBACE,IAAI,SAACswB,EAAQ,SAAED,EAAQ,cAAEG,EAAa,cAAED,GAAiB18B,KAKzD,OAJAy8B,GAAW,OAAgBA,EAAUnwB,OAAOE,mBAC5CgwB,GAAW,OAAgBA,EAAUlwB,OAAOC,mBAC5CowB,GAAgB,OAAgBA,EAAerwB,OAAOE,mBACtDkwB,GAAgB,OAAgBA,EAAepwB,OAAOC,mBAC/C,CACLlL,KAAK,OAAgBo7B,EAAUE,GAC/Bp5B,KAAK,OAAgBi5B,EAAUE,GAC/BtwB,YAAY,OAAeqwB,GAC3BpwB,YAAY,OAAemwB,GAE/B,CACAxoB,UAAUhF,GACR,IACI6E,GADA,IAACxS,EAAG,IAAEkC,EAAG,WAAE6I,EAAU,WAAEC,GAAcrM,KAAKmM,gBAE9C,GAAIC,GAAcC,EAChB,MAAO,CAAChL,MAAKkC,OAEf,MAAM45B,EAAQn9B,KAAKiN,0BACnB,IAAK,IAAI/K,EAAI,EAAG4I,EAAOqyB,EAAMn7B,OAAQE,EAAI4I,IAAQ5I,EAC/C2R,EAAQspB,EAAMj7B,GAAGiL,WAAW6G,UAAUhU,KAAMgP,GACvC5C,IACH/K,EAAMD,KAAKC,IAAIA,EAAKwS,EAAMxS,MAEvBgL,IACH9I,EAAMnC,KAAKmC,IAAIA,EAAKsQ,EAAMtQ,MAK9B,OAFAlC,EAAMgL,GAAchL,EAAMkC,EAAMA,EAAMlC,EACtCkC,EAAM6I,GAAc/K,EAAMkC,EAAMlC,EAAMkC,EAC/B,CACLlC,KAAK,OAAgBA,GAAK,OAAgBkC,EAAKlC,IAC/CkC,KAAK,OAAgBA,GAAK,OAAgBlC,EAAKkC,IAEnD,CACA4qB,aACE,MAAO,CACL/jB,KAAMpK,KAAKg8B,aAAe,EAC1B/xB,IAAKjK,KAAK87B,YAAc,EACxB5xB,MAAOlK,KAAKi8B,cAAgB,EAC5B9xB,OAAQnK,KAAK+7B,eAAiB,EAElC,CACAqB,WACE,OAAOp9B,KAAKiZ,KACd,CACA3F,YACE,MAAM7H,EAAOzL,KAAKQ,MAAMiL,KACxB,OAAOzL,KAAKwI,QAAQ6K,SAAWrT,KAAK6a,eAAiBpP,EAAK4xB,QAAU5xB,EAAK6xB,UAAY7xB,EAAK4H,QAAU,EACtG,CACAgd,eACErwB,KAAKoY,OAAS,CAAC,EACfpY,KAAK88B,mBAAoB,CAC3B,CACAS,gBACE,OAASv9B,KAAKwI,QAAQ+0B,aAAc,CAACv9B,MACvC,CACAgG,OAAOic,EAAUC,EAAWsb,GAC1B,MAAM,YAAC3e,EAAW,MAAE6Z,EAAOzf,MAAO4d,GAAY72B,KAAKwI,QAC7Ci1B,EAAa5G,EAAS4G,WAC5Bz9B,KAAKu9B,eACLv9B,KAAKiiB,SAAWA,EAChBjiB,KAAKkiB,UAAYA,EACjBliB,KAAK67B,SAAW2B,EAAU12B,OAAOqC,OAAO,CACtCiB,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACPqzB,GACHx9B,KAAKiZ,MAAQ,KACbjZ,KAAKs8B,YAAc,KACnBt8B,KAAKo8B,eAAiB,KACtBp8B,KAAKq8B,YAAc,KACnBr8B,KAAK09B,sBACL19B,KAAK29B,gBACL39B,KAAK49B,qBACL59B,KAAKg4B,WAAah4B,KAAK6a,eACnB7a,KAAK+c,MAAQygB,EAAQpzB,KAAOozB,EAAQtzB,MACpClK,KAAK8c,OAAS0gB,EAAQvzB,IAAMuzB,EAAQrzB,OACnCnK,KAAK88B,oBACR98B,KAAK69B,mBACL79B,KAAK89B,sBACL99B,KAAK+9B,kBACL/9B,KAAKm8B,QAAS,OAAUn8B,KAAM04B,EAAO7Z,GACrC7e,KAAK88B,mBAAoB,GAE3B98B,KAAKg+B,mBACLh+B,KAAKiZ,MAAQjZ,KAAKi+B,cAAgB,GAClCj+B,KAAKk+B,kBACL,MAAMC,EAAkBV,EAAaz9B,KAAKiZ,MAAMjX,OAChDhC,KAAKo+B,sBAAsBD,EAAkBhE,GAAOn6B,KAAKiZ,MAAOwkB,GAAcz9B,KAAKiZ,OACnFjZ,KAAKgI,YACLhI,KAAKq+B,+BACLr+B,KAAKs+B,yBACLt+B,KAAKu+B,8BACD1H,EAASpP,UAAYoP,EAASD,UAAgC,SAApBC,EAAS2H,UACrDx+B,KAAKiZ,MAAQ2d,GAAS52B,KAAMA,KAAKiZ,OACjCjZ,KAAKs8B,YAAc,KACnBt8B,KAAKy+B,iBAEHN,GACFn+B,KAAKo+B,sBAAsBp+B,KAAKiZ,OAElCjZ,KAAK0+B,YACL1+B,KAAK2+B,MACL3+B,KAAK4+B,WACL5+B,KAAK6+B,aACP,CACA72B,YACE,IACI8V,EAAYE,EADZ8gB,EAAgB9+B,KAAKwI,QAAQkB,QAE7B1J,KAAK6a,gBACPiD,EAAa9d,KAAKoK,KAClB4T,EAAWhe,KAAKkK,QAEhB4T,EAAa9d,KAAKiK,IAClB+T,EAAWhe,KAAKmK,OAChB20B,GAAiBA,GAEnB9+B,KAAKwd,YAAcM,EACnB9d,KAAKyd,UAAYO,EACjBhe,KAAKwpB,eAAiBsV,EACtB9+B,KAAK6Y,QAAUmF,EAAWF,EAC1B9d,KAAK++B,eAAiB/+B,KAAKwI,QAAQw2B,aACrC,CACAH,eACE,OAAS7+B,KAAKwI,QAAQq2B,YAAa,CAAC7+B,MACtC,CACA09B,uBACE,OAAS19B,KAAKwI,QAAQk1B,oBAAqB,CAAC19B,MAC9C,CACA29B,gBACM39B,KAAK6a,gBACP7a,KAAK+c,MAAQ/c,KAAKiiB,SAClBjiB,KAAKoK,KAAO,EACZpK,KAAKkK,MAAQlK,KAAK+c,QAElB/c,KAAK8c,OAAS9c,KAAKkiB,UACnBliB,KAAKiK,IAAM,EACXjK,KAAKmK,OAASnK,KAAK8c,QAErB9c,KAAKg8B,YAAc,EACnBh8B,KAAK87B,WAAa,EAClB97B,KAAKi8B,aAAe,EACpBj8B,KAAK+7B,cAAgB,CACvB,CACA6B,sBACE,OAAS59B,KAAKwI,QAAQo1B,mBAAoB,CAAC59B,MAC7C,CACAi/B,WAAW93B,GACTnH,KAAKQ,MAAM0+B,cAAc/3B,EAAMnH,KAAK0S,eACpC,OAAS1S,KAAKwI,QAAQrB,GAAO,CAACnH,MAChC,CACA69B,mBACE79B,KAAKi/B,WAAW,mBAClB,CACAnB,sBAAuB,CACvBC,kBACE/9B,KAAKi/B,WAAW,kBAClB,CACAjB,mBACEh+B,KAAKi/B,WAAW,mBAClB,CACAhB,aACE,MAAO,EACT,CACAC,kBACEl+B,KAAKi/B,WAAW,kBAClB,CACAE,+BACE,OAASn/B,KAAKwI,QAAQ22B,4BAA6B,CAACn/B,MACtD,CACAo/B,mBAAmBnmB,GACjB,MAAM4d,EAAW72B,KAAKwI,QAAQyQ,MAC9B,IAAI/W,EAAG4I,EAAMxI,EACb,IAAKJ,EAAI,EAAG4I,EAAOmO,EAAMjX,OAAQE,EAAI4I,EAAM5I,IACzCI,EAAO2W,EAAM/W,GACbI,EAAKkS,OAAQ,OAASqiB,EAAS4C,SAAU,CAACn3B,EAAK2G,MAAO/G,EAAG+W,GAAQjZ,KAErE,CACAq/B,8BACE,OAASr/B,KAAKwI,QAAQ62B,2BAA4B,CAACr/B,MACrD,CACAq+B,gCACE,OAASr+B,KAAKwI,QAAQ61B,6BAA8B,CAACr+B,MACvD,CACAs+B,yBACE,MAAM91B,EAAUxI,KAAKwI,QACfquB,EAAWruB,EAAQyQ,MACnBqmB,EAAWt/B,KAAKiZ,MAAMjX,OACtBk3B,EAAcrC,EAASqC,aAAe,EACtCC,EAActC,EAASsC,YAC7B,IACIL,EAAW5W,EAAWqd,EADtBrD,EAAgBhD,EAEpB,IAAKl5B,KAAKw/B,eAAiB3I,EAASpP,SAAWyR,GAAeC,GAAemG,GAAY,IAAMt/B,KAAK6a,eAElG,YADA7a,KAAKk8B,cAAgBhD,GAGvB,MAAMuG,EAAaz/B,KAAK0/B,iBAClBC,EAAgBF,EAAWG,OAAO7iB,MAClC8iB,EAAiBJ,EAAWK,QAAQhjB,OACpCmF,GAAW,OAAYjiB,KAAKQ,MAAMuc,MAAQ4iB,EAAe,EAAG3/B,KAAKiiB,UACvE6W,EAAYtwB,EAAQkW,OAAS1e,KAAKiiB,SAAWqd,EAAWrd,GAAYqd,EAAW,GAC3EK,EAAgB,EAAI7G,IACtBA,EAAY7W,GAAYqd,GAAY92B,EAAQkW,OAAS,GAAM,IAC3DwD,EAAYliB,KAAKkiB,UAAY6Y,GAAkBvyB,EAAQmW,MACvDkY,EAASlH,QAAUqL,GAAexyB,EAAQyY,MAAOjhB,KAAKQ,MAAMgI,QAAQ0yB,MACpEqE,EAAmBn+B,KAAKmpB,KAAKoV,EAAgBA,EAAgBE,EAAiBA,GAC9E3D,GAAgB,OAAU96B,KAAKC,IAC7BD,KAAK2+B,MAAK,QAAaN,EAAWK,QAAQhjB,OAAS,GAAKgc,GAAY,EAAG,IACvE13B,KAAK2+B,MAAK,OAAY7d,EAAYqd,GAAmB,EAAG,IAAMn+B,KAAK2+B,MAAK,OAAYF,EAAiBN,GAAmB,EAAG,MAE7HrD,EAAgB96B,KAAKmC,IAAI21B,EAAa93B,KAAKC,IAAI83B,EAAa+C,KAE9Dl8B,KAAKk8B,cAAgBA,CACvB,CACAqC,+BACE,OAASv+B,KAAKwI,QAAQ+1B,4BAA6B,CAACv+B,MACtD,CACAy+B,gBAAiB,CACjBC,aACE,OAAS1+B,KAAKwI,QAAQk2B,UAAW,CAAC1+B,MACpC,CACA2+B,MACE,MAAM9X,EAAU,CACd9J,MAAO,EACPD,OAAQ,IAEJ,MAACtc,EAAOgI,SAAUyQ,MAAO4d,EAAU5V,MAAO+e,EAAWrhB,KAAMshB,IAAajgC,KACxEynB,EAAUznB,KAAKw/B,aACf3kB,EAAe7a,KAAK6a,eAC1B,GAAI4M,EAAS,CACX,MAAMyY,EAAclF,GAAegF,EAAWx/B,EAAMgI,QAAQ0yB,MAQ5D,GAPIrgB,GACFgM,EAAQ9J,MAAQ/c,KAAKiiB,SACrB4E,EAAQ/J,OAASie,GAAkBkF,GAAYC,IAE/CrZ,EAAQ/J,OAAS9c,KAAKkiB,UACtB2E,EAAQ9J,MAAQge,GAAkBkF,GAAYC,GAE5CrJ,EAASpP,SAAWznB,KAAKiZ,MAAMjX,OAAQ,CACzC,MAAM,MAACs1B,EAAK,KAAEra,EAAI,OAAE2iB,EAAM,QAAEE,GAAW9/B,KAAK0/B,iBACtCS,EAAiC,EAAnBtJ,EAASlH,QACvByQ,GAAe,IAAA91B,GAAUtK,KAAKk8B,eAC9Bjc,EAAM7e,KAAK6e,IAAImgB,GACfjgB,EAAM/e,KAAK+e,IAAIigB,GACrB,GAAIvlB,EAAc,CAChB,MAAMwlB,EAAcxJ,EAASuC,OAAS,EAAIjZ,EAAMyf,EAAO7iB,MAAQkD,EAAM6f,EAAQhjB,OAC7E+J,EAAQ/J,OAAS1b,KAAKC,IAAIrB,KAAKkiB,UAAW2E,EAAQ/J,OAASujB,EAAcF,EAC3E,KAAO,CACL,MAAMG,EAAazJ,EAASuC,OAAS,EAAInZ,EAAM2f,EAAO7iB,MAAQoD,EAAM2f,EAAQhjB,OAC5E+J,EAAQ9J,MAAQ3b,KAAKC,IAAIrB,KAAKiiB,SAAU4E,EAAQ9J,MAAQujB,EAAaH,EACvE,CACAngC,KAAKugC,kBAAkBjJ,EAAOra,EAAMkD,EAAKF,EAC3C,CACF,CACAjgB,KAAKwgC,iBACD3lB,GACF7a,KAAK+c,MAAQ/c,KAAK6Y,QAAUrY,EAAMuc,MAAQ/c,KAAK67B,SAASzxB,KAAOpK,KAAK67B,SAAS3xB,MAC7ElK,KAAK8c,OAAS+J,EAAQ/J,SAEtB9c,KAAK+c,MAAQ8J,EAAQ9J,MACrB/c,KAAK8c,OAAS9c,KAAK6Y,QAAUrY,EAAMsc,OAAS9c,KAAK67B,SAAS5xB,IAAMjK,KAAK67B,SAAS1xB,OAElF,CACAo2B,kBAAkBjJ,EAAOra,EAAMkD,EAAKF,GAClC,MAAOhH,OAAO,MAAC0gB,EAAK,QAAEhK,GAAQ,SAAE/F,GAAY5pB,KAAKwI,QAC3Ci4B,EAAmC,IAAvBzgC,KAAKk8B,cACjBwE,EAAgC,QAAb9W,GAAoC,MAAd5pB,KAAKyN,KACpD,GAAIzN,KAAK6a,eAAgB,CACvB,MAAM8lB,EAAa3gC,KAAKkZ,gBAAgB,GAAKlZ,KAAKoK,KAC5Cw2B,EAAc5gC,KAAKkK,MAAQlK,KAAKkZ,gBAAgBlZ,KAAKiZ,MAAMjX,OAAS,GAC1E,IAAIg6B,EAAc,EACdC,EAAe,EACfwE,EACEC,GACF1E,EAAc/b,EAAMqX,EAAMva,MAC1Bkf,EAAe9b,EAAMlD,EAAKH,SAE1Bkf,EAAc7b,EAAMmX,EAAMxa,OAC1Bmf,EAAehc,EAAMhD,EAAKF,OAET,UAAV4c,EACTsC,EAAehf,EAAKF,MACD,QAAV4c,EACTqC,EAAc1E,EAAMva,MACD,UAAV4c,IACTqC,EAAc1E,EAAMva,MAAQ,EAC5Bkf,EAAehf,EAAKF,MAAQ,GAE9B/c,KAAKg8B,YAAc56B,KAAKmC,KAAKy4B,EAAc2E,EAAahR,GAAW3vB,KAAK+c,OAAS/c,KAAK+c,MAAQ4jB,GAAa,GAC3G3gC,KAAKi8B,aAAe76B,KAAKmC,KAAK04B,EAAe2E,EAAcjR,GAAW3vB,KAAK+c,OAAS/c,KAAK+c,MAAQ6jB,GAAc,EACjH,KAAO,CACL,IAAI9E,EAAa7e,EAAKH,OAAS,EAC3Bif,EAAgBzE,EAAMxa,OAAS,EACrB,UAAV6c,GACFmC,EAAa,EACbC,EAAgBzE,EAAMxa,QACH,QAAV6c,IACTmC,EAAa7e,EAAKH,OAClBif,EAAgB,GAElB/7B,KAAK87B,WAAaA,EAAanM,EAC/B3vB,KAAK+7B,cAAgBA,EAAgBpM,CACvC,CACF,CACA6Q,iBACMxgC,KAAK67B,WACP77B,KAAK67B,SAASzxB,KAAOhJ,KAAKmC,IAAIvD,KAAKg8B,YAAah8B,KAAK67B,SAASzxB,MAC9DpK,KAAK67B,SAAS5xB,IAAM7I,KAAKmC,IAAIvD,KAAK87B,WAAY97B,KAAK67B,SAAS5xB,KAC5DjK,KAAK67B,SAAS3xB,MAAQ9I,KAAKmC,IAAIvD,KAAKi8B,aAAcj8B,KAAK67B,SAAS3xB,OAChElK,KAAK67B,SAAS1xB,OAAS/I,KAAKmC,IAAIvD,KAAK+7B,cAAe/7B,KAAK67B,SAAS1xB,QAEtE,CACAy0B,YACE,OAAS5+B,KAAKwI,QAAQo2B,SAAU,CAAC5+B,MACnC,CACA6a,eACE,MAAM,KAACpN,EAAI,SAAEmc,GAAY5pB,KAAKwI,QAC9B,MAAoB,QAAbohB,GAAmC,WAAbA,GAAkC,MAATnc,CACxD,CACAozB,aACE,OAAO7gC,KAAKwI,QAAQ6kB,QACtB,CACA+Q,sBAAsBnlB,GAGpB,IAAI/W,EAAG4I,EACP,IAHA9K,KAAKm/B,8BACLn/B,KAAKo/B,mBAAmBnmB,GAEnB/W,EAAI,EAAG4I,EAAOmO,EAAMjX,OAAQE,EAAI4I,EAAM5I,KACrC,OAAc+W,EAAM/W,GAAGsS,SACzByE,EAAMzB,OAAOtV,EAAG,GAChB4I,IACA5I,KAGJlC,KAAKq/B,4BACP,CACAK,iBACE,IAAID,EAAaz/B,KAAKs8B,YACtB,IAAKmD,EAAY,CACf,MAAMhC,EAAaz9B,KAAKwI,QAAQyQ,MAAMwkB,WACtC,IAAIxkB,EAAQjZ,KAAKiZ,MACbwkB,EAAaxkB,EAAMjX,SACrBiX,EAAQkhB,GAAOlhB,EAAOwkB,IAExBz9B,KAAKs8B,YAAcmD,EAAaz/B,KAAK8gC,mBAAmB7nB,EAAOA,EAAMjX,OACvE,CACA,OAAOy9B,CACT,CACAqB,mBAAmB7nB,EAAOjX,GACxB,MAAM,IAACqN,EAAKktB,kBAAmB3B,GAAU56B,KACnC+gC,EAAS,GACTC,EAAU,GAChB,IAEI9+B,EAAG6nB,EAAGkX,EAAMzsB,EAAO0sB,EAAUC,EAAY5rB,EAAO6lB,EAAYre,EAAOD,EAAQskB,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAKp/B,EAAI,EAAGA,EAAIF,IAAUE,EAAG,CAO3B,GANAsS,EAAQyE,EAAM/W,GAAGsS,MACjB0sB,EAAWlhC,KAAKuhC,wBAAwBr/B,GACxCmN,EAAI6rB,KAAOiG,EAAaD,EAASM,OACjCjsB,EAAQqlB,EAAOuG,GAAcvG,EAAOuG,IAAe,CAAC11B,KAAM,CAAC,EAAGovB,GAAI,IAClEO,EAAa8F,EAAS9F,WACtBre,EAAQD,EAAS,GACZ,OAActI,KAAW,OAAQA,IAG/B,IAAI,OAAQA,GACjB,IAAKuV,EAAI,EAAGkX,EAAOzsB,EAAMxS,OAAQ+nB,EAAIkX,IAAQlX,EAC3CqX,EAAc5sB,EAAMuV,IACf,OAAcqX,KAAiB,OAAQA,KAC1CrkB,GAAQ,OAAa1N,EAAKkG,EAAM9J,KAAM8J,EAAMslB,GAAI9d,EAAOqkB,GACvDtkB,GAAUse,QAPdre,GAAQ,OAAa1N,EAAKkG,EAAM9J,KAAM8J,EAAMslB,GAAI9d,EAAOvI,GACvDsI,EAASse,EAUX2F,EAAO99B,KAAK8Z,GACZikB,EAAQ/9B,KAAK6Z,GACbukB,EAAkBjgC,KAAKmC,IAAIwZ,EAAOskB,GAClCC,EAAmBlgC,KAAKmC,IAAIuZ,EAAQwkB,EACtC,CACA3G,GAAeC,EAAQ54B,GACvB,MAAM49B,EAASmB,EAAO1jB,QAAQgkB,GACxBvB,EAAUkB,EAAQ3jB,QAAQikB,GAC1BG,EAAWC,IAAQ,CAAE3kB,MAAOgkB,EAAOW,IAAQ,EAAG5kB,OAAQkkB,EAAQU,IAAQ,IAC5E,MAAO,CACLpK,MAAOmK,EAAQ,GACfxkB,KAAMwkB,EAAQz/B,EAAS,GACvB49B,OAAQ6B,EAAQ7B,GAChBE,QAAS2B,EAAQ3B,GACjBiB,SACAC,UAEJ,CACAvsB,iBAAiBxL,GACf,OAAOA,CACT,CACA+P,iBAAiB/P,EAAO8B,GACtB,OAAOgJ,GACT,CACA4tB,iBAAiBC,GAAQ,CACzB1oB,gBAAgBnO,GACd,MAAMkO,EAAQjZ,KAAKiZ,MACnB,OAAIlO,EAAQ,GAAKA,EAAQkO,EAAMjX,OAAS,EAC/B,KAEFhC,KAAKgZ,iBAAiBC,EAAMlO,GAAO9B,MAC5C,CACA8U,mBAAmB8jB,GACb7hC,KAAKwpB,iBACPqY,EAAU,EAAIA,GAEhB,MAAMD,EAAQ5hC,KAAKwd,YAAcqkB,EAAU7hC,KAAK6Y,QAChD,OAAO,OAAY7Y,KAAK++B,gBAAiB,OAAY/+B,KAAKQ,MAAOohC,EAAO,GAAKA,EAC/E,CACAE,mBAAmBF,GACjB,MAAMC,GAAWD,EAAQ5hC,KAAKwd,aAAexd,KAAK6Y,QAClD,OAAO7Y,KAAKwpB,eAAiB,EAAIqY,EAAUA,CAC7C,CACAxlB,eACE,OAAOrc,KAAKgZ,iBAAiBhZ,KAAK+hC,eACpC,CACAA,eACE,MAAM,IAAC1gC,EAAG,IAAEkC,GAAOvD,KACnB,OAAOqB,EAAM,GAAKkC,EAAM,EAAIA,EAC1BlC,EAAM,GAAKkC,EAAM,EAAIlC,EACrB,CACJ,CACAqR,WAAW3H,GACT,MAAMkO,EAAQjZ,KAAKiZ,OAAS,GAC5B,GAAIlO,GAAS,GAAKA,EAAQkO,EAAMjX,OAAQ,CACtC,MAAMM,EAAO2W,EAAMlO,GACnB,OAAOzI,EAAK2N,WACb3N,EAAK2N,SAAWqrB,GAAkBt7B,KAAK0S,aAAc3H,EAAOzI,GAC7D,CACA,OAAOtC,KAAKiQ,WACZjQ,KAAKiQ,SAAWorB,GAAmBr7B,KAAKQ,MAAMkS,aAAc1S,MAC9D,CACA63B,YACE,MAAMmK,EAAchiC,KAAKwI,QAAQyQ,MAC3BgpB,GAAM,IAAA33B,GAAUtK,KAAKk8B,eACrBjc,EAAM7e,KAAK2X,IAAI3X,KAAK6e,IAAIgiB,IACxB9hB,EAAM/e,KAAK2X,IAAI3X,KAAK+e,IAAI8hB,IACxBxC,EAAaz/B,KAAK0/B,iBAClB/P,EAAUqS,EAAYzI,iBAAmB,EACzC9K,EAAIgR,EAAaA,EAAWG,OAAO7iB,MAAQ4S,EAAU,EACrDhB,EAAI8Q,EAAaA,EAAWK,QAAQhjB,OAAS6S,EAAU,EAC7D,OAAO3vB,KAAK6a,eACR8T,EAAI1O,EAAMwO,EAAItO,EAAMsO,EAAIxO,EAAM0O,EAAIxO,EAClCwO,EAAIxO,EAAMsO,EAAIxO,EAAM0O,EAAI1O,EAAMwO,EAAItO,CACxC,CACAqf,aACE,MAAM/X,EAAUznB,KAAKwI,QAAQif,QAC7B,MAAgB,SAAZA,IACOA,EAEJznB,KAAKiN,0BAA0BjL,OAAS,CACjD,CACAkgC,sBAAsBptB,GACpB,MAAMrH,EAAOzN,KAAKyN,KACZjN,EAAQR,KAAKQ,MACbgI,EAAUxI,KAAKwI,SACf,KAACmW,EAAI,SAAEiL,GAAYphB,EACnBkW,EAASC,EAAKD,OACd7D,EAAe7a,KAAK6a,eACpB5B,EAAQjZ,KAAKiZ,MACbkpB,EAAclpB,EAAMjX,QAAU0c,EAAS,EAAI,GAC3C0jB,EAAKrH,GAAkBpc,GACvB5c,EAAQ,GACRsgC,EAAa1jB,EAAKqe,WAAWh9B,KAAK0S,cAClC4vB,EAAYD,EAAW1J,WAAa0J,EAAWjf,YAAc,EAC7Dmf,EAAgBD,EAAY,EAC5BE,EAAmB,SAASZ,GAChC,OAAO,OAAYphC,EAAOohC,EAAOU,EACnC,EACA,IAAIG,EAAavgC,EAAGw4B,EAAWgI,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAbtZ,EACF6Y,EAAcD,EAAiBxiC,KAAKmK,QACpCy4B,EAAM5iC,KAAKmK,OAASi4B,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiB1tB,EAAU7K,KAAOs4B,EACvCW,EAAKpuB,EAAU3K,YACV,GAAiB,WAAbyf,EACT6Y,EAAcD,EAAiBxiC,KAAKiK,KACpC+4B,EAAKluB,EAAU7K,IACfi5B,EAAKV,EAAiB1tB,EAAU3K,QAAUo4B,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM9iC,KAAKiK,IAAMm4B,OACZ,GAAiB,SAAbxY,EACT6Y,EAAcD,EAAiBxiC,KAAKkK,OACpCy4B,EAAM3iC,KAAKkK,MAAQk4B,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiB1tB,EAAU1K,MAAQm4B,EACxCU,EAAKnuB,EAAU5K,WACV,GAAiB,UAAb0f,EACT6Y,EAAcD,EAAiBxiC,KAAKoK,MACpC24B,EAAKjuB,EAAU1K,KACf64B,EAAKT,EAAiB1tB,EAAU5K,OAASq4B,EACzCI,EAAMF,EAAcF,EACpBM,EAAM7iC,KAAKoK,KAAOg4B,OACb,GAAa,MAAT30B,EAAc,CACvB,GAAiB,WAAbmc,EACF6Y,EAAcD,GAAkB1tB,EAAU7K,IAAM6K,EAAU3K,QAAU,EAAI,SACnE,IAAI,IAAAjI,GAAS0nB,GAAW,CAC7B,MAAM+R,EAAiB70B,OAAOC,KAAK6iB,GAAU,GACvC3gB,EAAQ2gB,EAAS+R,GACvB8G,EAAcD,EAAiBxiC,KAAKQ,MAAMuN,OAAO4tB,GAAgB3iB,iBAAiB/P,GACpF,CACA+5B,EAAKluB,EAAU7K,IACfi5B,EAAKpuB,EAAU3K,OACfy4B,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CACd,MAAO,GAAa,MAAT30B,EAAc,CACvB,GAAiB,WAAbmc,EACF6Y,EAAcD,GAAkB1tB,EAAU1K,KAAO0K,EAAU5K,OAAS,QAC/D,IAAI,IAAAhI,GAAS0nB,GAAW,CAC7B,MAAM+R,EAAiB70B,OAAOC,KAAK6iB,GAAU,GACvC3gB,EAAQ2gB,EAAS+R,GACvB8G,EAAcD,EAAiBxiC,KAAKQ,MAAMuN,OAAO4tB,GAAgB3iB,iBAAiB/P,GACpF,CACA05B,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAKjuB,EAAU1K,KACf64B,EAAKnuB,EAAU5K,KACjB,CACA,MAAMi5B,GAAQ,IAAAx7B,GAAea,EAAQyQ,MAAM8d,cAAeoL,GACpDiB,EAAOhiC,KAAKmC,IAAI,EAAGnC,KAAKi3B,KAAK8J,EAAcgB,IACjD,IAAKjhC,EAAI,EAAGA,EAAIigC,EAAajgC,GAAKkhC,EAAM,CACtC,MAAMC,EAAc1kB,EAAKqe,WAAWh9B,KAAK0S,WAAWxQ,IAC9CmiB,EAAYgf,EAAYhf,UACxBif,EAAYD,EAAYj/B,MACxB40B,EAAara,EAAKqa,YAAc,GAChCC,EAAmBoK,EAAYpK,iBAC/BH,EAAYuK,EAAYvK,UACxBC,EAAYsK,EAAYtK,UACxBwK,EAAiBF,EAAYE,gBAAkB,GAC/CC,EAAuBH,EAAYG,qBACzC9I,EAAYJ,GAAoBt6B,KAAMkC,EAAGwc,QACvBpe,IAAdo6B,IAGJgI,GAAmB,OAAYliC,EAAOk6B,EAAWrW,GAC7CxJ,EACF8nB,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAExB3gC,EAAMkB,KAAK,CACT0/B,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAnmB,MAAOsH,EACPjgB,MAAOk/B,EACPtK,aACAC,mBACAH,YACAC,YACAwK,iBACAC,yBAEJ,CAGA,OAFAxjC,KAAK48B,aAAeuF,EACpBniC,KAAK68B,aAAe4F,EACb1gC,CACT,CACA0hC,mBAAmB3uB,GACjB,MAAMrH,EAAOzN,KAAKyN,KACZjF,EAAUxI,KAAKwI,SACf,SAACohB,EAAU3Q,MAAO+oB,GAAex5B,EACjCqS,EAAe7a,KAAK6a,eACpB5B,EAAQjZ,KAAKiZ,OACb,MAAC0gB,EAAK,WAAEC,EAAU,QAAEjK,EAAO,OAAEyJ,GAAU4I,EACvCI,EAAKrH,GAAkBvyB,EAAQmW,MAC/B+kB,EAAiBtB,EAAKzS,EACtBgU,EAAkBvK,GAAUzJ,EAAU+T,EACtCpkB,IAAY,IAAAhV,GAAUtK,KAAKk8B,eAC3Bn6B,EAAQ,GACd,IAAIG,EAAG4I,EAAMxI,EAAMkS,EAAOzK,EAAGC,EAAG45B,EAAWhC,EAAO1G,EAAME,EAAYyI,EAAWC,EAC3EC,EAAe,SACnB,GAAiB,QAAbna,EACF5f,EAAIhK,KAAKmK,OAASw5B,EAClBC,EAAY5jC,KAAKgkC,+BACZ,GAAiB,WAAbpa,EACT5f,EAAIhK,KAAKiK,IAAM05B,EACfC,EAAY5jC,KAAKgkC,+BACZ,GAAiB,SAAbpa,EAAqB,CAC9B,MAAMgM,EAAM51B,KAAKikC,wBAAwB7B,GACzCwB,EAAYhO,EAAIgO,UAChB75B,EAAI6rB,EAAI7rB,CACV,MAAO,GAAiB,UAAb6f,EAAsB,CAC/B,MAAMgM,EAAM51B,KAAKikC,wBAAwB7B,GACzCwB,EAAYhO,EAAIgO,UAChB75B,EAAI6rB,EAAI7rB,CACV,MAAO,GAAa,MAAT0D,EAAc,CACvB,GAAiB,WAAbmc,EACF5f,GAAM8K,EAAU7K,IAAM6K,EAAU3K,QAAU,EAAKu5B,OAC1C,IAAI,IAAAxhC,GAAS0nB,GAAW,CAC7B,MAAM+R,EAAiB70B,OAAOC,KAAK6iB,GAAU,GACvC3gB,EAAQ2gB,EAAS+R,GACvB3xB,EAAIhK,KAAKQ,MAAMuN,OAAO4tB,GAAgB3iB,iBAAiB/P,GAASy6B,CAClE,CACAE,EAAY5jC,KAAKgkC,yBACnB,MAAO,GAAa,MAATv2B,EAAc,CACvB,GAAiB,WAAbmc,EACF7f,GAAM+K,EAAU1K,KAAO0K,EAAU5K,OAAS,EAAKw5B,OAC1C,IAAI,IAAAxhC,GAAS0nB,GAAW,CAC7B,MAAM+R,EAAiB70B,OAAOC,KAAK6iB,GAAU,GACvC3gB,EAAQ2gB,EAAS+R,GACvB5xB,EAAI/J,KAAKQ,MAAMuN,OAAO4tB,GAAgB3iB,iBAAiB/P,EACzD,CACA26B,EAAY5jC,KAAKikC,wBAAwB7B,GAAIwB,SAC/C,CACa,MAATn2B,IACY,UAAVksB,EACFoK,EAAe,MACI,QAAVpK,IACToK,EAAe,WAGnB,MAAMtE,EAAaz/B,KAAK0/B,iBACxB,IAAKx9B,EAAI,EAAG4I,EAAOmO,EAAMjX,OAAQE,EAAI4I,IAAQ5I,EAAG,CAC9CI,EAAO2W,EAAM/W,GACbsS,EAAQlS,EAAKkS,MACb,MAAM6uB,EAAcrB,EAAYhF,WAAWh9B,KAAK0S,WAAWxQ,IAC3D0/B,EAAQ5hC,KAAKkZ,gBAAgBhX,GAAK8/B,EAAYxI,YAC9C0B,EAAOl7B,KAAKuhC,wBAAwBr/B,GACpCk5B,EAAaF,EAAKE,WAClByI,GAAY,OAAQrvB,GAASA,EAAMxS,OAAS,EAC5C,MAAMkiC,EAAYL,EAAY,EACxBz/B,EAAQi/B,EAAYj/B,MACpB+/B,EAAcd,EAAY/J,gBAC1B8K,EAAcf,EAAYhK,gBAChC,IAoCIgL,EApCAC,EAAgBV,EAqCpB,GApCI/oB,GACF9Q,EAAI63B,EACc,UAAdgC,IAEAU,EADEpiC,IAAM4I,EAAO,EACE9K,KAAKwI,QAAQkB,QAAoB,OAAV,QACzB,IAANxH,EACQlC,KAAKwI,QAAQkB,QAAmB,QAAT,OAExB,UAKhBo6B,EAFa,QAAbla,EACiB,SAAfgQ,GAAsC,IAAbta,GACbukB,EAAYzI,EAAaA,EAAa,EAC5B,WAAfxB,GACK6F,EAAWK,QAAQhjB,OAAS,EAAIonB,EAAY9I,EAAaA,GAEzDqE,EAAWK,QAAQhjB,OAASse,EAAa,EAGtC,SAAfxB,GAAsC,IAAbta,EACd8b,EAAa,EACF,WAAfxB,EACI6F,EAAWK,QAAQhjB,OAAS,EAAIonB,EAAY9I,EAE5CqE,EAAWK,QAAQhjB,OAAS+mB,EAAYzI,EAGrDhC,IACF0K,IAAe,KAGjB95B,EAAI43B,EACJkC,GAAc,EAAID,GAAazI,EAAa,GAG1CiI,EAAYxJ,kBAAmB,CACjC,MAAM0K,GAAe,OAAUlB,EAAYtJ,iBACrCjd,EAAS2iB,EAAWuB,QAAQ9+B,GAC5B6a,EAAQ0iB,EAAWsB,OAAO7+B,GAChC,IAAI+H,EAAMD,EAAI85B,EAAaS,EAAat6B,IACpCG,EAAOL,EAAIw6B,EAAan6B,KAC5B,OAAQ25B,GACR,IAAK,SACH95B,GAAO6S,EAAS,EAChB,MACF,IAAK,SACH7S,GAAO6S,EACP,MAEF,OAAQ8mB,GACR,IAAK,SACHx5B,GAAQ2S,EAAQ,EAChB,MACF,IAAK,QACH3S,GAAQ2S,EACR,MAEFsnB,EAAW,CACTj6B,OACAH,MACA8S,MAAOA,EAAQwnB,EAAaxnB,MAC5BD,OAAQA,EAASynB,EAAaznB,OAC9B1Y,MAAOi/B,EAAYvJ,cAEvB,CACA/3B,EAAMkB,KAAK,CACTqc,WACA9K,QACA0mB,OACA92B,QACA+/B,cACAC,cACAN,aACAF,UAAWU,EACXP,eACAS,YAAa,CAACz6B,EAAGC,GACjBq6B,YAEJ,CACA,OAAOtiC,CACT,CACAiiC,0BACE,MAAM,SAACpa,EAAQ,MAAE3Q,GAASjZ,KAAKwI,QACzB8W,IAAY,IAAAhV,GAAUtK,KAAKk8B,eACjC,GAAI5c,EACF,MAAoB,QAAbsK,EAAqB,OAAS,QAEvC,IAAI+P,EAAQ,SAQZ,MAPoB,UAAhB1gB,EAAM0gB,MACRA,EAAQ,OACiB,QAAhB1gB,EAAM0gB,MACfA,EAAQ,QACiB,UAAhB1gB,EAAM0gB,QACfA,EAAQ,SAEHA,CACT,CACAsK,wBAAwB7B,GACtB,MAAM,SAACxY,EAAU3Q,OAAO,WAAC2gB,EAAU,OAAER,EAAM,QAAEzJ,IAAY3vB,KAAKwI,QACxDi3B,EAAaz/B,KAAK0/B,iBAClBgE,EAAiBtB,EAAKzS,EACtBiQ,EAASH,EAAWG,OAAO7iB,MACjC,IAAI6mB,EACA75B,EAoDJ,MAnDiB,SAAb6f,EACEwP,GACFrvB,EAAI/J,KAAKkK,MAAQylB,EACE,SAAfiK,EACFgK,EAAY,OACY,WAAfhK,GACTgK,EAAY,SACZ75B,GAAM61B,EAAS,IAEfgE,EAAY,QACZ75B,GAAK61B,KAGP71B,EAAI/J,KAAKkK,MAAQw5B,EACE,SAAf9J,EACFgK,EAAY,QACY,WAAfhK,GACTgK,EAAY,SACZ75B,GAAM61B,EAAS,IAEfgE,EAAY,OACZ75B,EAAI/J,KAAKoK,OAGS,UAAbwf,EACLwP,GACFrvB,EAAI/J,KAAKoK,KAAOulB,EACG,SAAfiK,EACFgK,EAAY,QACY,WAAfhK,GACTgK,EAAY,SACZ75B,GAAM61B,EAAS,IAEfgE,EAAY,OACZ75B,GAAK61B,KAGP71B,EAAI/J,KAAKoK,KAAOs5B,EACG,SAAf9J,EACFgK,EAAY,OACY,WAAfhK,GACTgK,EAAY,SACZ75B,GAAK61B,EAAS,IAEdgE,EAAY,QACZ75B,EAAI/J,KAAKkK,QAIb05B,EAAY,QAEP,CAACA,YAAW75B,IACrB,CACA06B,oBACE,GAAIzkC,KAAKwI,QAAQyQ,MAAMmgB,OACrB,OAEF,MAAM54B,EAAQR,KAAKQ,MACbopB,EAAW5pB,KAAKwI,QAAQohB,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAAC3f,IAAK,EAAGG,KAAMpK,KAAKoK,KAAMD,OAAQ3J,EAAMsc,OAAQ5S,MAAOlK,KAAKkK,OAClD,QAAb0f,GAAmC,WAAbA,EACnB,CAAC3f,IAAKjK,KAAKiK,IAAKG,KAAM,EAAGD,OAAQnK,KAAKmK,OAAQD,MAAO1J,EAAMuc,YADlE,CAGJ,CACA2nB,iBACE,MAAM,IAACr1B,EAAK7G,SAAS,gBAAC0b,GAAgB,KAAE9Z,EAAI,IAAEH,EAAG,MAAE8S,EAAK,OAAED,GAAU9c,KAChEkkB,IACF7U,EAAIs1B,OACJt1B,EAAI4U,UAAYC,EAChB7U,EAAIu1B,SAASx6B,EAAMH,EAAK8S,EAAOD,GAC/BzN,EAAIw1B,UAER,CACA3mB,qBAAqBjV,GACnB,MAAM0V,EAAO3e,KAAKwI,QAAQmW,KAC1B,IAAK3e,KAAKw/B,eAAiB7gB,EAAK8I,QAC9B,OAAO,EAET,MAAMxO,EAAQjZ,KAAKiZ,MACblO,EAAQkO,EAAM6rB,WAAUx6B,GAAKA,EAAErB,QAAUA,IAC/C,GAAI8B,GAAS,EAAG,CACd,MAAMtB,EAAOkV,EAAKqe,WAAWh9B,KAAK0S,WAAW3H,IAC7C,OAAOtB,EAAK4a,SACd,CACA,OAAO,CACT,CACA0gB,SAASjwB,GACP,MAAM6J,EAAO3e,KAAKwI,QAAQmW,KACpBtP,EAAMrP,KAAKqP,IACXtN,EAAQ/B,KAAKo8B,iBAAmBp8B,KAAKo8B,eAAiBp8B,KAAKkiC,sBAAsBptB,IACvF,IAAI5S,EAAG4I,EACP,MAAMk6B,EAAW,CAACC,EAAIC,EAAInhB,KACnBA,EAAMhH,OAAUgH,EAAM3f,QAG3BiL,EAAIs1B,OACJt1B,EAAIgV,UAAYN,EAAMhH,MACtB1N,EAAI8U,YAAcJ,EAAM3f,MACxBiL,EAAI81B,YAAYphB,EAAMiV,YAAc,IACpC3pB,EAAI+1B,eAAiBrhB,EAAMkV,iBAC3B5pB,EAAIg2B,YACJh2B,EAAIi2B,OAAOL,EAAGl7B,EAAGk7B,EAAGj7B,GACpBqF,EAAIk2B,OAAOL,EAAGn7B,EAAGm7B,EAAGl7B,GACpBqF,EAAIm2B,SACJn2B,EAAIw1B,UAAS,EAEf,GAAIlmB,EAAK8I,QACP,IAAKvlB,EAAI,EAAG4I,EAAO/I,EAAMC,OAAQE,EAAI4I,IAAQ5I,EAAG,CAC9C,MAAMD,EAAOF,EAAMG,GACfyc,EAAKia,iBACPoM,EACE,CAACj7B,EAAG9H,EAAK8gC,GAAI/4B,EAAG/H,EAAK+gC,IACrB,CAACj5B,EAAG9H,EAAKghC,GAAIj5B,EAAG/H,EAAKihC,IACrBjhC,GAGA0c,EAAKka,WACPmM,EACE,CAACj7B,EAAG9H,EAAK0gC,IAAK34B,EAAG/H,EAAK2gC,KACtB,CAAC74B,EAAG9H,EAAK4gC,IAAK74B,EAAG/H,EAAK6gC,KACtB,CACE1+B,MAAOnC,EAAK82B,UACZhc,MAAO9a,EAAK62B,UACZE,WAAY/2B,EAAKshC,eACjBtK,iBAAkBh3B,EAAKuhC,sBAI/B,CAEJ,CACA7K,aACE,MAAM,MAACn4B,EAAK,IAAE6O,EAAK7G,SAAS,KAACmW,IAAS3e,KAChCqiC,EAAa1jB,EAAKqe,WAAWh9B,KAAK0S,cAClC4vB,EAAY3jB,EAAKga,WAAa0J,EAAWjf,YAAc,EAC7D,IAAKkf,EACH,OAEF,MAAMmD,EAAgB9mB,EAAKqe,WAAWh9B,KAAK0S,WAAW,IAAI2R,UACpDoe,EAAcziC,KAAK68B,aACzB,IAAIkG,EAAIE,EAAID,EAAIE,EACZljC,KAAK6a,gBACPkoB,GAAK,OAAYviC,EAAOR,KAAKoK,KAAMk4B,GAAaA,EAAY,EAC5DW,GAAK,OAAYziC,EAAOR,KAAKkK,MAAOu7B,GAAiBA,EAAgB,EACrEzC,EAAKE,EAAKT,IAEVO,GAAK,OAAYxiC,EAAOR,KAAKiK,IAAKq4B,GAAaA,EAAY,EAC3DY,GAAK,OAAY1iC,EAAOR,KAAKmK,OAAQs7B,GAAiBA,EAAgB,EACtE1C,EAAKE,EAAKR,GAEZpzB,EAAIs1B,OACJt1B,EAAIgV,UAAYge,EAAWjf,YAC3B/T,EAAI8U,YAAcke,EAAWje,YAC7B/U,EAAIg2B,YACJh2B,EAAIi2B,OAAOvC,EAAIC,GACf3zB,EAAIk2B,OAAOtC,EAAIC,GACf7zB,EAAIm2B,SACJn2B,EAAIw1B,SACN,CACAa,WAAW5wB,GACT,MAAMktB,EAAchiC,KAAKwI,QAAQyQ,MACjC,IAAK+oB,EAAYva,QACf,OAEF,MAAMpY,EAAMrP,KAAKqP,IACXwF,EAAO7U,KAAKykC,oBACd5vB,IACF,OAASxF,EAAKwF,GAEhB,MAAM9S,EAAQ/B,KAAKq8B,cAAgBr8B,KAAKq8B,YAAcr8B,KAAKyjC,mBAAmB3uB,IAC9E,IAAI5S,EAAG4I,EACP,IAAK5I,EAAI,EAAG4I,EAAO/I,EAAMC,OAAQE,EAAI4I,IAAQ5I,EAAG,CAC9C,MAAMD,EAAOF,EAAMG,GACbg/B,EAAWj/B,EAAKi5B,KAChB1mB,EAAQvS,EAAKuS,MACfvS,EAAKoiC,WACPh1B,EAAI4U,UAAYhiB,EAAKoiC,SAASjgC,MAC9BiL,EAAIu1B,SAAS3iC,EAAKoiC,SAASj6B,KAAMnI,EAAKoiC,SAASp6B,IAAKhI,EAAKoiC,SAAStnB,MAAO9a,EAAKoiC,SAASvnB,SAEzF,IAAI9S,EAAI/H,EAAK6hC,YACb,OAAWz0B,EAAKmF,EAAO,EAAGxK,EAAGk3B,EAAUj/B,EACzC,CACI4S,IACF,OAAWxF,EAEf,CACAs2B,YACE,MAAM,IAACt2B,EAAK7G,SAAS,SAACohB,EAAQ,MAAE3I,EAAK,QAAEvX,IAAY1J,KACnD,IAAKihB,EAAMwG,QACT,OAEF,MAAMyT,GAAO,OAAOja,EAAMia,MACpBvL,GAAU,OAAU1O,EAAM0O,SAC1BgK,EAAQ1Y,EAAM0Y,MACpB,IAAIjb,EAASwc,EAAKE,WAAa,EACd,WAAbxR,GAAsC,WAAbA,IAAyB,IAAA1nB,GAAS0nB,IAC7DlL,GAAUiR,EAAQxlB,QACd,OAAQ8W,EAAM+C,QAChBtF,GAAUwc,EAAKE,YAAcna,EAAM+C,KAAKhiB,OAAS,KAGnD0c,GAAUiR,EAAQ1lB,IAEpB,MAAM,OAACwxB,EAAM,OAAEC,EAAM,SAAEzZ,EAAQ,SAAE3C,GAAYkc,GAAUx7B,KAAM0e,EAAQkL,EAAU+P,IAC/E,OAAWtqB,EAAK4R,EAAM+C,KAAM,EAAG,EAAGkX,EAAM,CACtC92B,MAAO6c,EAAM7c,MACb6d,WACA3C,WACAskB,UAAWrI,GAAW5B,EAAO/P,EAAUlgB,GACvCq6B,aAAc,SACdS,YAAa,CAAC/I,EAAQC,IAE1B,CACAv5B,KAAK2S,GACE9U,KAAKw/B,eAGVx/B,KAAK0kC,iBACL1kC,KAAK+kC,SAASjwB,GACd9U,KAAK24B,aACL34B,KAAK2lC,YACL3lC,KAAK0lC,WAAW5wB,GAClB,CACAgb,UACE,MAAMrmB,EAAOzJ,KAAKwI,QACZo9B,EAAKn8B,EAAKwP,OAASxP,EAAKwP,MAAM8W,GAAK,EACnC8V,GAAK,IAAAl+B,GAAe8B,EAAKkV,MAAQlV,EAAKkV,KAAKoR,GAAI,GACrD,OAAK/vB,KAAKw/B,cAAgBx/B,KAAKmC,OAASy5B,GAAM9f,UAAU3Z,KAQjD,CAAC,CACN4tB,EAAG8V,EACH1jC,KAAO2S,IACL9U,KAAK0kC,iBACL1kC,KAAK+kC,SAASjwB,GACd9U,KAAK2lC,WAAW,GAEjB,CACD5V,EAAG8V,EAAK,EACR1jC,KAAM,KACJnC,KAAK24B,YAAY,GAElB,CACD5I,EAAG6V,EACHzjC,KAAO2S,IACL9U,KAAK0lC,WAAW5wB,EAAU,IAtBrB,CAAC,CACNib,EAAG6V,EACHzjC,KAAO2S,IACL9U,KAAKmC,KAAK2S,EAAU,GAsB5B,CACA7H,wBAAwBtM,GACtB,MAAMw8B,EAAQn9B,KAAKQ,MAAMspB,+BACnBgc,EAAS9lC,KAAKyN,KAAO,SACrB2qB,EAAS,GACf,IAAIl2B,EAAG4I,EACP,IAAK5I,EAAI,EAAG4I,EAAOqyB,EAAMn7B,OAAQE,EAAI4I,IAAQ5I,EAAG,CAC9C,MAAM2J,EAAOsxB,EAAMj7B,GACf2J,EAAKi6B,KAAY9lC,KAAKkM,IAAQvL,GAAQkL,EAAKlL,OAASA,GACtDy3B,EAAOn1B,KAAK4I,EAEhB,CACA,OAAOusB,CACT,CACAmJ,wBAAwBx2B,GACtB,MAAMtB,EAAOzJ,KAAKwI,QAAQyQ,MAAM+jB,WAAWh9B,KAAK0S,WAAW3H,IAC3D,OAAO,OAAOtB,EAAKyxB,KACrB,CACA6K,aACE,MAAMC,EAAWhmC,KAAKuhC,wBAAwB,GAAGnG,WACjD,OAAQp7B,KAAK6a,eAAiB7a,KAAK+c,MAAQ/c,KAAK8c,QAAUkpB,CAC5D,EAGF,MAAMC,GACJlmC,YAAYY,EAAMulC,EAAOld,GACvBhpB,KAAKW,KAAOA,EACZX,KAAKkmC,MAAQA,EACblmC,KAAKgpB,SAAWA,EAChBhpB,KAAK+B,MAAQ+E,OAAOq/B,OAAO,KAC7B,CACAC,UAAUzlC,GACR,OAAOmG,OAAOgV,UAAUuqB,cAAc3P,KAAK12B,KAAKW,KAAKmb,UAAWnb,EAAKmb,UACvE,CACAwqB,SAASrkC,GACP,MAAMskC,EAAQz/B,OAAO0/B,eAAevkC,GACpC,IAAIwkC,EACAC,GAAkBH,KACpBE,EAAczmC,KAAKsmC,SAASC,IAE9B,MAAMxkC,EAAQ/B,KAAK+B,MACbmK,EAAKjK,EAAKiK,GACVg6B,EAAQlmC,KAAKkmC,MAAQ,IAAMh6B,EACjC,IAAKA,EACH,MAAM,IAAImc,MAAM,2BAA6BpmB,GAE/C,OAAIiK,KAAMnK,IAGVA,EAAMmK,GAAMjK,EACZ0kC,GAAiB1kC,EAAMikC,EAAOO,GAC1BzmC,KAAKgpB,UACP,EAAApiB,EAAA,SAAkB3E,EAAKiK,GAAIjK,EAAKuc,YALzB0nB,CAQX,CACAxjC,IAAIwJ,GACF,OAAOlM,KAAK+B,MAAMmK,EACpB,CACA06B,WAAW3kC,GACT,MAAMF,EAAQ/B,KAAK+B,MACbmK,EAAKjK,EAAKiK,GACVg6B,EAAQlmC,KAAKkmC,MACfh6B,KAAMnK,UACDA,EAAMmK,GAEXg6B,GAASh6B,KAAM,EAAAtF,EAASs/B,YACnB,EAAAt/B,EAASs/B,GAAOh6B,GACnBlM,KAAKgpB,iBACA,KAAU9c,GAGvB,EAEF,SAASy6B,GAAiB1kC,EAAMikC,EAAOO,GACrC,MAAMI,GAAe,QAAM//B,OAAOq/B,OAAO,MAAO,CAC9CM,EAAc,EAAA7/B,EAAA,IAAa6/B,GAAe,CAAC,EAC3C,EAAA7/B,EAAA,IAAas/B,GACbjkC,EAAK4Z,WAEP,EAAAjV,EAAA,IAAas/B,EAAOW,GAChB5kC,EAAK4zB,eACPiR,GAAcZ,EAAOjkC,EAAK4zB,eAExB5zB,EAAKwhB,aACP,EAAA7c,EAAA,SAAkBs/B,EAAOjkC,EAAKwhB,YAElC,CACA,SAASqjB,GAAcZ,EAAOa,GAC5BjgC,OAAOC,KAAKggC,GAAQ/lC,SAAQgmC,IAC1B,MAAMC,EAAgBD,EAASE,MAAM,KAC/BC,EAAaF,EAAc1kC,MAC3B6kC,EAAc,CAAClB,GAAO3tB,OAAO0uB,GAAeI,KAAK,KACjDC,EAAQP,EAAOC,GAAUE,MAAM,KAC/BK,EAAaD,EAAM/kC,MACnBilC,EAAcF,EAAMD,KAAK,KAC/B,EAAAzgC,EAAA,MAAewgC,EAAaD,EAAYK,EAAaD,EAAW,GAEpE,CACA,SAASb,GAAkBH,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACxC,CAEA,MAAMkB,GACJ1nC,cACEC,KAAK0nC,YAAc,IAAIzB,GAAc92B,EAAmB,YAAY,GACpEnP,KAAK4U,SAAW,IAAIqxB,GAAczQ,GAAS,YAC3Cx1B,KAAK+gB,QAAU,IAAIklB,GAAcn/B,OAAQ,WACzC9G,KAAK+N,OAAS,IAAIk4B,GAAcrK,GAAO,UACvC57B,KAAK2nC,iBAAmB,CAAC3nC,KAAK0nC,YAAa1nC,KAAK+N,OAAQ/N,KAAK4U,SAC/D,CACA1R,OAAOwU,GACL1X,KAAK4nC,MAAM,WAAYlwB,EACzB,CACA/T,UAAU+T,GACR1X,KAAK4nC,MAAM,aAAclwB,EAC3B,CACAmwB,kBAAkBnwB,GAChB1X,KAAK4nC,MAAM,WAAYlwB,EAAM1X,KAAK0nC,YACpC,CACAr3B,eAAeqH,GACb1X,KAAK4nC,MAAM,WAAYlwB,EAAM1X,KAAK4U,SACpC,CACAkzB,cAAcpwB,GACZ1X,KAAK4nC,MAAM,WAAYlwB,EAAM1X,KAAK+gB,QACpC,CACAgnB,aAAarwB,GACX1X,KAAK4nC,MAAM,WAAYlwB,EAAM1X,KAAK+N,OACpC,CACAi6B,cAAc97B,GACZ,OAAOlM,KAAKioC,KAAK/7B,EAAIlM,KAAK0nC,YAAa,aACzC,CACAQ,WAAWh8B,GACT,OAAOlM,KAAKioC,KAAK/7B,EAAIlM,KAAK4U,SAAU,UACtC,CACAuzB,UAAUj8B,GACR,OAAOlM,KAAKioC,KAAK/7B,EAAIlM,KAAK+gB,QAAS,SACrC,CACAqnB,SAASl8B,GACP,OAAOlM,KAAKioC,KAAK/7B,EAAIlM,KAAK+N,OAAQ,QACpC,CACAs6B,qBAAqB3wB,GACnB1X,KAAK4nC,MAAM,aAAclwB,EAAM1X,KAAK0nC,YACtC,CACAY,kBAAkB5wB,GAChB1X,KAAK4nC,MAAM,aAAclwB,EAAM1X,KAAK4U,SACtC,CACA2zB,iBAAiB7wB,GACf1X,KAAK4nC,MAAM,aAAclwB,EAAM1X,KAAK+gB,QACtC,CACAynB,gBAAgB9wB,GACd1X,KAAK4nC,MAAM,aAAclwB,EAAM1X,KAAK+N,OACtC,CACA65B,MAAMnhC,EAAQiR,EAAM+wB,GAClB,IAAI/wB,GAAM1W,SAAQ0nC,IAChB,MAAMC,EAAMF,GAAiBzoC,KAAK4oC,oBAAoBF,GAClDD,GAAiBE,EAAIvC,UAAUsC,IAASC,IAAQ3oC,KAAK+gB,SAAW2nB,EAAIx8B,GACtElM,KAAK6oC,MAAMpiC,EAAQkiC,EAAKD,IAExB,OAAKA,GAAKzmC,IACR,MAAM6mC,EAAUL,GAAiBzoC,KAAK4oC,oBAAoB3mC,GAC1DjC,KAAK6oC,MAAMpiC,EAAQqiC,EAAS7mC,EAAK,GAErC,GAEJ,CACA4mC,MAAMpiC,EAAQsiC,EAAUC,GACtB,MAAMC,GAAc,QAAYxiC,IAChC,OAASuiC,EAAU,SAAWC,GAAc,GAAID,GAChDD,EAAStiC,GAAQuiC,IACjB,OAASA,EAAU,QAAUC,GAAc,GAAID,EACjD,CACAJ,oBAAoBjoC,GAClB,IAAK,IAAIuB,EAAI,EAAGA,EAAIlC,KAAK2nC,iBAAiB3lC,OAAQE,IAAK,CACrD,MAAMymC,EAAM3oC,KAAK2nC,iBAAiBzlC,GAClC,GAAIymC,EAAIvC,UAAUzlC,GAChB,OAAOgoC,CAEX,CACA,OAAO3oC,KAAK+gB,OACd,CACAknB,KAAK/7B,EAAIu8B,EAAe9nC,GACtB,MAAMsB,EAAOwmC,EAAc/lC,IAAIwJ,GAC/B,QAAa5L,IAAT2B,EACF,MAAM,IAAIomB,MAAM,IAAMnc,EAAK,yBAA2BvL,EAAO,KAE/D,OAAOsB,CACT,EAEF,IAAI8mC,GAAW,IAAItB,GAEnB,MAAMyB,GACJnpC,cACEC,KAAKmpC,MAAQ,EACf,CACAC,OAAO5oC,EAAO6oC,EAAM3xB,EAAM1J,GACX,eAATq7B,IACFrpC,KAAKmpC,MAAQnpC,KAAKspC,mBAAmB9oC,GAAO,GAC5CR,KAAKO,QAAQP,KAAKmpC,MAAO3oC,EAAO,YAElC,MAAMijB,EAAczV,EAAShO,KAAKupC,aAAa/oC,GAAOwN,OAAOA,GAAUhO,KAAKupC,aAAa/oC,GACnF43B,EAASp4B,KAAKO,QAAQkjB,EAAajjB,EAAO6oC,EAAM3xB,GAKtD,MAJa,iBAAT2xB,IACFrpC,KAAKO,QAAQkjB,EAAajjB,EAAO,QACjCR,KAAKO,QAAQP,KAAKmpC,MAAO3oC,EAAO,cAE3B43B,CACT,CACA73B,QAAQkjB,EAAajjB,EAAO6oC,EAAM3xB,GAChCA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAM8xB,KAAc/lB,EAAa,CACpC,MAAMgmB,EAASD,EAAWC,OACpBhjC,EAASgjC,EAAOJ,GAChBpc,EAAS,CAACzsB,EAAOkX,EAAM8xB,EAAWhhC,SACxC,IAAyC,KAArC,OAAS/B,EAAQwmB,EAAQwc,IAAqB/xB,EAAKgyB,WACrD,OAAO,CAEX,CACA,OAAO,CACT,CACAC,cACO,OAAc3pC,KAAKoY,UACtBpY,KAAK4pC,UAAY5pC,KAAKoY,OACtBpY,KAAKoY,YAAS9X,EAElB,CACAipC,aAAa/oC,GACX,GAAIR,KAAKoY,OACP,OAAOpY,KAAKoY,OAEd,MAAMqL,EAAczjB,KAAKoY,OAASpY,KAAKspC,mBAAmB9oC,GAE1D,OADAR,KAAK6pC,oBAAoBrpC,GAClBijB,CACT,CACA6lB,mBAAmB9oC,EAAO6I,GACxB,MAAMxB,EAASrH,GAASA,EAAMqH,OACxBW,GAAU,IAAAb,GAAeE,EAAOW,SAAWX,EAAOW,QAAQuY,QAAS,CAAC,GACpEA,EAAU+oB,GAAWjiC,GAC3B,OAAmB,IAAZW,GAAsBa,EAAW0gC,GAAkBvpC,EAAOugB,EAASvY,EAASa,GAAhD,EACrC,CACAwgC,oBAAoBrpC,GAClB,MAAMwpC,EAAsBhqC,KAAK4pC,WAAa,GACxCnmB,EAAczjB,KAAKoY,OACnBwQ,EAAO,CAAClQ,EAAGnO,IAAMmO,EAAE1K,QAAOjE,IAAMQ,EAAE0/B,MAAKjgC,GAAKD,EAAE0/B,OAAOv9B,KAAOlC,EAAEy/B,OAAOv9B,OAC3ElM,KAAKO,QAAQqoB,EAAKohB,EAAqBvmB,GAAcjjB,EAAO,QAC5DR,KAAKO,QAAQqoB,EAAKnF,EAAaumB,GAAsBxpC,EAAO,QAC9D,EAEF,SAASspC,GAAWjiC,GAClB,MAAMkZ,EAAU,GACVha,EAAOD,OAAOC,KAAKgiC,GAAShoB,QAAQhf,OAC1C,IAAK,IAAIG,EAAI,EAAGA,EAAI6E,EAAK/E,OAAQE,IAC/B6e,EAAQ9d,KAAK8lC,GAASZ,UAAUphC,EAAK7E,KAEvC,MAAMgoC,EAAQriC,EAAOkZ,SAAW,GAChC,IAAK,IAAI7e,EAAI,EAAGA,EAAIgoC,EAAMloC,OAAQE,IAAK,CACrC,MAAMunC,EAASS,EAAMhoC,IACY,IAA7B6e,EAAQ1D,QAAQosB,IAClB1oB,EAAQ9d,KAAKwmC,EAEjB,CACA,OAAO1oB,CACT,CACA,SAASopB,GAAQ3hC,EAASa,GACxB,OAAKA,IAAmB,IAAZb,GAGI,IAAZA,EACK,CAAC,EAEHA,EALE,IAMX,CACA,SAASuhC,GAAkBvpC,EAAOugB,EAASvY,EAASa,GAClD,MAAM+uB,EAAS,GACTjjB,EAAU3U,EAAMkS,aACtB,IAAK,IAAIxQ,EAAI,EAAGA,EAAI6e,EAAQ/e,OAAQE,IAAK,CACvC,MAAMunC,EAAS1oB,EAAQ7e,GACjBgK,EAAKu9B,EAAOv9B,GACZzC,EAAO0gC,GAAQ3hC,EAAQ0D,GAAK7C,GACrB,OAATI,GAGJ2uB,EAAOn1B,KAAK,CACVwmC,SACAjhC,QAAS4hC,GAAW5pC,EAAMqH,OAAQ4hC,EAAQhgC,EAAM0L,IAEpD,CACA,OAAOijB,CACT,CACA,SAASgS,GAAWviC,EAAQ4hC,EAAQhgC,EAAM0L,GACxC,MAAMpO,EAAOc,EAAOwiC,gBAAgBZ,GAC9Bl3B,EAAS1K,EAAO2K,gBAAgB/I,EAAM1C,GAC5C,OAAOc,EAAO4K,eAAeF,EAAQ4C,EAAS,CAAC,IAAK,CAACm1B,YAAY,EAAOC,WAAW,EAAOC,SAAS,GACrG,CAEA,SAASC,GAAa9pC,EAAM6H,GAC1B,MAAMkiC,EAAkB,EAAA9jC,EAAA,SAAkBjG,IAAS,CAAC,EAC9CgqC,GAAkBniC,EAAQ8I,UAAY,CAAC,GAAG3Q,IAAS,CAAC,EAC1D,OAAOgqC,EAAe55B,WAAavI,EAAQuI,WAAa25B,EAAgB35B,WAAa,GACvF,CACA,SAAS65B,GAA0B1+B,EAAI6E,GACrC,IAAItD,EAAOvB,EAMX,MALW,YAAPA,EACFuB,EAAOsD,EACS,YAAP7E,IACTuB,EAAqB,MAAdsD,EAAoB,IAAM,KAE5BtD,CACT,CACA,SAASo9B,GAA0Bp9B,EAAMsD,GACvC,OAAOtD,IAASsD,EAAY,UAAY,SAC1C,CACA,SAAS+5B,GAAiBlhB,GACxB,MAAiB,QAAbA,GAAmC,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,CAGF,CACA,SAASmhB,GAAc7+B,EAAI8+B,GACzB,MAAW,MAAP9+B,GAAqB,MAAPA,EACTA,EAEF8+B,EAAav9B,MAAQq9B,GAAiBE,EAAaphB,WAAa1d,EAAGlD,OAAO,GAAGiiC,aACtF,CACA,SAASC,GAAiBrjC,EAAQW,GAChC,MAAM2iC,EAAgB,KAAUtjC,EAAOlH,OAAS,CAACoN,OAAQ,CAAC,GACpDq9B,EAAe5iC,EAAQuF,QAAU,CAAC,EAClCs9B,EAAiBZ,GAAa5iC,EAAOlH,KAAM6H,GAC3C8iC,EAAWxkC,OAAOq/B,OAAO,MACzBp4B,EAASjH,OAAOq/B,OAAO,MA+B7B,OA9BAr/B,OAAOC,KAAKqkC,GAAcpqC,SAAQkL,IAChC,MAAMq/B,EAAYH,EAAal/B,GAC/B,KAAK,IAAAhK,GAASqpC,GACZ,OAAOC,EAAQC,MAAM,0CAA0Cv/B,KAEjE,GAAIq/B,EAAUG,OACZ,OAAOF,EAAQG,KAAK,kDAAkDz/B,KAExE,MAAMuB,EAAOs9B,GAAc7+B,EAAIq/B,GACzBK,EAAYf,GAA0Bp9B,EAAM49B,GAC5CQ,EAAsBV,EAAcp9B,QAAU,CAAC,EACrDu9B,EAAS79B,GAAQ69B,EAAS79B,IAASvB,EACnC6B,EAAO7B,IAAM,QAAQpF,OAAOq/B,OAAO,MAAO,CAAC,CAAC14B,QAAO89B,EAAWM,EAAoBp+B,GAAOo+B,EAAoBD,IAAY,IAE3H/jC,EAAO4D,KAAK6F,SAAStQ,SAAQoN,IAC3B,MAAMzN,EAAOyN,EAAQzN,MAAQkH,EAAOlH,KAC9BoQ,EAAY3C,EAAQ2C,WAAa05B,GAAa9pC,EAAM6H,GACpDkiC,EAAkB,KAAU/pC,IAAS,CAAC,EACtCkrC,EAAsBnB,EAAgB38B,QAAU,CAAC,EACvDjH,OAAOC,KAAK8kC,GAAqB7qC,SAAQ8qC,IACvC,MAAMr+B,EAAOm9B,GAA0BkB,EAAW/6B,GAC5C7E,EAAKkC,EAAQX,EAAO,WAAa69B,EAAS79B,IAASA,EACzDM,EAAO7B,GAAM6B,EAAO7B,IAAOpF,OAAOq/B,OAAO,OACzC,QAAQp4B,EAAO7B,GAAK,CAAC,CAACuB,QAAO29B,EAAal/B,GAAK2/B,EAAoBC,IAAY,GAC/E,IAEJhlC,OAAOC,KAAKgH,GAAQ/M,SAAQmH,IAC1B,MAAMoB,EAAQwE,EAAO5F,IACrB,QAAQoB,EAAO,CAAC,EAAA3C,EAAA,OAAgB2C,EAAM5I,MAAO,EAAAiG,EAAA,OAAgB,IAExDmH,CACT,CACA,SAASg+B,GAAYlkC,GACnB,MAAMW,EAAUX,EAAOW,UAAYX,EAAOW,QAAU,CAAC,GACrDA,EAAQuY,SAAU,IAAApZ,GAAea,EAAQuY,QAAS,CAAC,GACnDvY,EAAQuF,OAASm9B,GAAiBrjC,EAAQW,EAC5C,CACA,SAASwjC,GAASvgC,GAIhB,OAHAA,EAAOA,GAAQ,CAAC,EAChBA,EAAK6F,SAAW7F,EAAK6F,UAAY,GACjC7F,EAAK4H,OAAS5H,EAAK4H,QAAU,GACtB5H,CACT,CACA,SAASwgC,GAAWpkC,GAIlB,OAHAA,EAASA,GAAU,CAAC,EACpBA,EAAO4D,KAAOugC,GAASnkC,EAAO4D,MAC9BsgC,GAAYlkC,GACLA,CACT,CACA,MAAMqkC,GAAW,IAAI/rC,IACfgsC,GAAa,IAAIC,IACvB,SAASC,GAAW72B,EAAU82B,GAC5B,IAAIvlC,EAAOmlC,GAASxpC,IAAI8S,GAMxB,OALKzO,IACHA,EAAOulC,IACPJ,GAASrpC,IAAI2S,EAAUzO,GACvBolC,GAAWjpC,IAAI6D,IAEVA,CACT,CACA,MAAMwlC,GAAa,CAAC1pC,EAAKqZ,EAAK/T,KAC5B,MAAMsB,GAAO,OAAiByS,EAAK/T,QACtB7H,IAATmJ,GACF5G,EAAIK,IAAIuG,EACV,EAEF,MAAM+iC,GACJzsC,YAAY8H,GACV7H,KAAKysC,QAAUR,GAAWpkC,GAC1B7H,KAAK0sC,YAAc,IAAIvsC,IACvBH,KAAK2sC,eAAiB,IAAIxsC,GAC5B,CACIysC,eACF,OAAO5sC,KAAKysC,QAAQG,QACtB,CACIjsC,WACF,OAAOX,KAAKysC,QAAQ9rC,IACtB,CACIA,SAAKA,GACPX,KAAKysC,QAAQ9rC,KAAOA,CACtB,CACI8K,WACF,OAAOzL,KAAKysC,QAAQhhC,IACtB,CACIA,SAAKA,GACPzL,KAAKysC,QAAQhhC,KAAOugC,GAASvgC,EAC/B,CACIjD,cACF,OAAOxI,KAAKysC,QAAQjkC,OACtB,CACIA,YAAQA,GACVxI,KAAKysC,QAAQjkC,QAAUA,CACzB,CACIuY,cACF,OAAO/gB,KAAKysC,QAAQ1rB,OACtB,CACA/a,SACE,MAAM6B,EAAS7H,KAAKysC,QACpBzsC,KAAK6sC,aACLd,GAAYlkC,EACd,CACAglC,aACE7sC,KAAK0sC,YAAYI,QACjB9sC,KAAK2sC,eAAeG,OACtB,CACAx6B,iBAAiBy6B,GACf,OAAOV,GAAWU,GAChB,IAAM,CAAC,CACL,YAAYA,IACZ,MAEN,CACA92B,0BAA0B82B,EAAa/2B,GACrC,OAAOq2B,GAAW,GAAGU,gBAA0B/2B,KAC7C,IAAM,CACJ,CACE,YAAY+2B,iBAA2B/2B,IACvC,eAAeA,KAEjB,CACE,YAAY+2B,IACZ,MAGR,CACAr3B,wBAAwBq3B,EAAaz3B,GACnC,OAAO+2B,GAAW,GAAGU,KAAez3B,KAClC,IAAM,CAAC,CACL,YAAYy3B,cAAwBz3B,IACpC,YAAYy3B,IACZ,YAAYz3B,IACZ,MAEN,CACA+0B,gBAAgBZ,GACd,MAAMv9B,EAAKu9B,EAAOv9B,GACZvL,EAAOX,KAAKW,KAClB,OAAO0rC,GAAW,GAAG1rC,YAAeuL,KAClC,IAAM,CAAC,CACL,WAAWA,OACRu9B,EAAOuD,wBAA0B,MAE1C,CACAC,cAAcC,EAAWC,GACvB,MAAMT,EAAc1sC,KAAK0sC,YACzB,IAAIn3B,EAAQm3B,EAAYhqC,IAAIwqC,GAK5B,OAJK33B,IAAS43B,IACZ53B,EAAQ,IAAIpV,IACZusC,EAAY7pC,IAAIqqC,EAAW33B,IAEtBA,CACT,CACA/C,gBAAgB06B,EAAWE,EAAUD,GACnC,MAAM,QAAC3kC,EAAO,KAAE7H,GAAQX,KAClBuV,EAAQvV,KAAKitC,cAAcC,EAAWC,GACtCt+B,EAAS0G,EAAM7S,IAAI0qC,GACzB,GAAIv+B,EACF,OAAOA,EAET,MAAM0D,EAAS,IAAI65B,IACnBgB,EAASpsC,SAAQ+F,IACXmmC,IACF36B,EAAOrP,IAAIgqC,GACXnmC,EAAK/F,SAAQmH,GAAOokC,GAAWh6B,EAAQ26B,EAAW/kC,MAEpDpB,EAAK/F,SAAQmH,GAAOokC,GAAWh6B,EAAQ/J,EAASL,KAChDpB,EAAK/F,SAAQmH,GAAOokC,GAAWh6B,EAAQ,KAAU5R,IAAS,CAAC,EAAGwH,KAC9DpB,EAAK/F,SAAQmH,GAAOokC,GAAWh6B,EAAQ,EAAA3L,EAAUuB,KACjDpB,EAAK/F,SAAQmH,GAAOokC,GAAWh6B,EAAQ,KAAapK,IAAK,IAE3D,MAAM6jB,EAAQrgB,MAAM1H,KAAKsO,GAOzB,OANqB,IAAjByZ,EAAMhqB,QACRgqB,EAAM/oB,KAAK6D,OAAOq/B,OAAO,OAEvBgG,GAAWhpC,IAAIiqC,IACjB73B,EAAM1S,IAAIuqC,EAAUphB,GAEfA,CACT,CACAqhB,oBACE,MAAM,QAAC7kC,EAAO,KAAE7H,GAAQX,KACxB,MAAO,CACLwI,EACA,KAAU7H,IAAS,CAAC,EACpB,EAAAiG,EAAA,SAAkBjG,IAAS,CAAC,EAC5B,CAACA,QACD,EAAAiG,EACA,KAEJ,CACAiP,oBAAoBtD,EAAQqD,EAAOT,EAASQ,EAAW,CAAC,KACtD,MAAMyiB,EAAS,CAACzvB,SAAS,IACnB,SAAC2kC,EAAQ,YAAEC,GAAeC,GAAYxtC,KAAK2sC,eAAgBp6B,EAAQoD,GACzE,IAAInN,EAAU8kC,EACd,GAAIG,GAAYH,EAAU13B,GAAQ,CAChCwiB,EAAOzvB,SAAU,EACjBwM,GAAU,QAAWA,GAAWA,IAAYA,EAC5C,MAAMu4B,EAAc1tC,KAAKyS,eAAeF,EAAQ4C,EAASo4B,GACzD/kC,GAAU,QAAe8kC,EAAUn4B,EAASu4B,EAC9C,CACA,IAAK,MAAM3oC,KAAQ6Q,EACjBwiB,EAAOrzB,GAAQyD,EAAQzD,GAEzB,OAAOqzB,CACT,CACA3lB,eAAeF,EAAQ4C,EAASQ,EAAW,CAAC,IAAKg4B,GAC/C,MAAM,SAACL,GAAYE,GAAYxtC,KAAK2sC,eAAgBp6B,EAAQoD,GAC5D,OAAO,IAAAzT,GAASiT,IACZ,QAAem4B,EAAUn4B,OAAS7U,EAAWqtC,GAC7CL,CACN,EAEF,SAASE,GAAYI,EAAer7B,EAAQoD,GAC1C,IAAIJ,EAAQq4B,EAAclrC,IAAI6P,GACzBgD,IACHA,EAAQ,IAAIpV,IACZytC,EAAc/qC,IAAI0P,EAAQgD,IAE5B,MAAMC,EAAWG,EAAS0xB,OAC1B,IAAIx4B,EAAS0G,EAAM7S,IAAI8S,GACvB,IAAK3G,EAAQ,CACX,MAAMy+B,GAAW,QAAgB/6B,EAAQoD,GACzC9G,EAAS,CACPy+B,WACAC,YAAa53B,EAAS3H,QAAO6/B,IAAMA,EAAE5C,cAAcpe,SAAS,YAE9DtX,EAAM1S,IAAI2S,EAAU3G,EACtB,CACA,OAAOA,CACT,CACA,MAAMi/B,GAAc7kC,IAAS,IAAA/G,GAAS+G,IACjCnC,OAAOoB,oBAAoBe,GAAO7F,QAAO,CAACC,EAAK8E,IAAQ9E,IAAO,QAAW4F,EAAMd,MAAO,GAC3F,SAASslC,GAAY7Y,EAAOhf,GAC1B,MAAM,aAACm4B,EAAY,YAAEC,IAAe,QAAapZ,GACjD,IAAK,MAAM7vB,KAAQ6Q,EAAO,CACxB,MAAM00B,EAAayD,EAAahpC,GAC1BwlC,EAAYyD,EAAYjpC,GACxBkE,GAASshC,GAAaD,IAAe1V,EAAM7vB,GACjD,GAAKulC,KAAe,QAAWrhC,IAAU6kC,GAAY7kC,KAC/CshC,IAAa,OAAQthC,GACzB,OAAO,CAEX,CACA,OAAO,CACT,CAEA,IAAIglC,GAAU,QAEd,MAAMC,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBvkB,EAAUnc,GACtC,MAAoB,QAAbmc,GAAmC,WAAbA,IAAiE,IAAvCskB,GAAgB7wB,QAAQuM,IAA6B,MAATnc,CACrG,CACA,SAAS2gC,GAAcC,EAAIC,GACzB,OAAO,SAAS51B,EAAGnO,GACjB,OAAOmO,EAAE21B,KAAQ9jC,EAAE8jC,GACf31B,EAAE41B,GAAM/jC,EAAE+jC,GACV51B,EAAE21B,GAAM9jC,EAAE8jC,EAChB,CACF,CACA,SAASE,GAAqBp5B,GAC5B,MAAM3U,EAAQ2U,EAAQ3U,MAChBqG,EAAmBrG,EAAMgI,QAAQnB,UACvC7G,EAAM0+B,cAAc,gBACpB,OAASr4B,GAAoBA,EAAiB2nC,WAAY,CAACr5B,GAAU3U,EACvE,CACA,SAASiuC,GAAoBt5B,GAC3B,MAAM3U,EAAQ2U,EAAQ3U,MAChBqG,EAAmBrG,EAAMgI,QAAQnB,WACvC,OAASR,GAAoBA,EAAiB6nC,WAAY,CAACv5B,GAAU3U,EACvE,CACA,SAASmuC,GAAU1sC,GASjB,OARI,UAAqC,kBAATA,EAC9BA,EAAOuxB,SAASob,eAAe3sC,GACtBA,GAAQA,EAAKD,SACtBC,EAAOA,EAAK,IAEVA,GAAQA,EAAKwuB,SACfxuB,EAAOA,EAAKwuB,QAEPxuB,CACT,CACA,MAAM4sC,GAAY,CAAC,EACbC,GAAY3mC,IAChB,MAAMsoB,EAASke,GAAUxmC,GACzB,OAAOrB,OAAOwB,OAAOumC,IAAW7gC,QAAQ1J,GAAMA,EAAEmsB,SAAWA,IAAQluB,KAAK,EAE1E,SAASwsC,GAAgB7yB,EAAK5a,EAAO8V,GACnC,MAAMrQ,EAAOD,OAAOC,KAAKmV,GACzB,IAAK,MAAM/T,KAAOpB,EAAM,CACtB,MAAMioC,GAAU7mC,EAChB,GAAI6mC,GAAU1tC,EAAO,CACnB,MAAM2H,EAAQiT,EAAI/T,UACX+T,EAAI/T,IACPiP,EAAO,GAAK43B,EAAS1tC,KACvB4a,EAAI8yB,EAAS53B,GAAQnO,EAEzB,CACF,CACF,CACA,SAASgmC,GAAmB9pC,EAAG+pC,EAAWC,EAAaC,GACrD,OAAKD,GAA0B,aAAXhqC,EAAExE,KAGlByuC,EACKF,EAEF/pC,EALE,IAMX,CACA,MAAMkqC,GACJtvC,YAAYkC,EAAMqtC,GAChB,MAAMznC,EAAS7H,KAAK6H,OAAS,IAAI2kC,GAAO8C,GAClCC,EAAgBZ,GAAU1sC,GAC1ButC,EAAgBV,GAASS,GAC/B,GAAIC,EACF,MAAM,IAAInnB,MACR,4CAA+CmnB,EAActjC,GAA7D,wDAIJ,MAAM1D,EAAUX,EAAO4K,eAAe5K,EAAOwlC,oBAAqBrtC,KAAK0S,cACvE1S,KAAK4sC,SAAW,IAAK/kC,EAAO+kC,UAAYtX,GAAgBia,IACxDvvC,KAAK4sC,SAAS3b,aAAappB,GAC3B,MAAMsN,EAAUnV,KAAK4sC,SAASpc,eAAe+e,EAAe/mC,EAAQkb,aAC9D+M,EAAStb,GAAWA,EAAQsb,OAC5B3T,EAAS2T,GAAUA,EAAO3T,OAC1BC,EAAQ0T,GAAUA,EAAO1T,MAC/B/c,KAAKkM,IAAK,UACVlM,KAAKqP,IAAM8F,EACXnV,KAAKywB,OAASA,EACdzwB,KAAK+c,MAAQA,EACb/c,KAAK8c,OAASA,EACd9c,KAAKyvC,SAAWjnC,EAChBxI,KAAK0vC,aAAe1vC,KAAK0jB,YACzB1jB,KAAK8vB,QAAU,GACf9vB,KAAK2vC,UAAY,GACjB3vC,KAAKsN,aAAUhN,EACfN,KAAKusB,MAAQ,GACbvsB,KAAKi0B,6BAA0B3zB,EAC/BN,KAAK8U,eAAYxU,EACjBN,KAAKoC,QAAU,GACfpC,KAAK4vC,gBAAatvC,EAClBN,KAAK6vC,WAAa,CAAC,EACnB7vC,KAAK8vC,0BAAuBxvC,EAC5BN,KAAK+vC,gBAAkB,GACvB/vC,KAAK+N,OAAS,CAAC,EACf/N,KAAKgwC,SAAW,IAAI9G,GACpBlpC,KAAKi1B,SAAW,CAAC,EACjBj1B,KAAKiwC,eAAiB,CAAC,EACvBjwC,KAAKkwC,UAAW,EAChBlwC,KAAKsW,yBAAsBhW,EAC3BN,KAAKiQ,cAAW3P,EAChBN,KAAKmwC,WAAY,SAAS/kC,GAAQpL,KAAKgG,OAAOoF,IAAO5C,EAAQ4nC,aAAe,GAC5EpwC,KAAK2X,aAAe,GACpBk3B,GAAU7uC,KAAKkM,IAAMlM,KAChBmV,GAAYsb,GAIjB5sB,EAASf,OAAO9C,KAAM,WAAYuuC,IAClC1qC,EAASf,OAAO9C,KAAM,WAAYyuC,IAClCzuC,KAAKqwC,cACDrwC,KAAKkwC,UACPlwC,KAAKgG,UAPLwlC,EAAQC,MAAM,oEASlB,CACI/nB,kBACF,MAAOlb,SAAS,YAACkb,EAAW,oBAAE4sB,GAAoB,MAAEvzB,EAAK,OAAED,EAAM,aAAE4yB,GAAgB1vC,KACnF,OAAK,OAAc0jB,GAGf4sB,GAAuBZ,EAClBA,EAEF5yB,EAASC,EAAQD,EAAS,KALxB4G,CAMX,CACIjY,WACF,OAAOzL,KAAK6H,OAAO4D,IACrB,CACIA,SAAKA,GACPzL,KAAK6H,OAAO4D,KAAOA,CACrB,CACIjD,cACF,OAAOxI,KAAKyvC,QACd,CACIjnC,YAAQA,GACVxI,KAAK6H,OAAOW,QAAUA,CACxB,CACA6nC,cASE,OARArwC,KAAKk/B,cAAc,cACfl/B,KAAKwI,QAAQ+nC,WACfvwC,KAAKsH,UAEL,QAAYtH,KAAMA,KAAKwI,QAAQwrB,kBAEjCh0B,KAAKwwC,aACLxwC,KAAKk/B,cAAc,aACZl/B,IACT,CACA8sC,QAEE,OADA,QAAY9sC,KAAKywB,OAAQzwB,KAAKqP,KACvBrP,IACT,CACAyD,OAEE,OADAI,EAASJ,KAAKzD,MACPA,IACT,CACAsH,OAAOyV,EAAOD,GACPjZ,EAAS/B,QAAQ9B,MAGpBA,KAAKywC,kBAAoB,CAAC1zB,QAAOD,UAFjC9c,KAAK0wC,QAAQ3zB,EAAOD,EAIxB,CACA4zB,QAAQ3zB,EAAOD,GACb,MAAMtU,EAAUxI,KAAKwI,QACfioB,EAASzwB,KAAKywB,OACd/M,EAAclb,EAAQ8nC,qBAAuBtwC,KAAK0jB,YAClDitB,EAAU3wC,KAAK4sC,SAAS7b,eAAeN,EAAQ1T,EAAOD,EAAQ4G,GAC9DktB,EAAWpoC,EAAQwrB,kBAAoBh0B,KAAK4sC,SAAS9b,sBACrD1lB,EAAOpL,KAAK+c,MAAQ,SAAW,SACrC/c,KAAK+c,MAAQ4zB,EAAQ5zB,MACrB/c,KAAK8c,OAAS6zB,EAAQ7zB,OACtB9c,KAAK0vC,aAAe1vC,KAAK0jB,aACpB,QAAY1jB,KAAM4wC,GAAU,KAGjC5wC,KAAKk/B,cAAc,SAAU,CAACh2B,KAAMynC,KACpC,OAASnoC,EAAQqoC,SAAU,CAAC7wC,KAAM2wC,GAAU3wC,MACxCA,KAAKkwC,UACHlwC,KAAKmwC,UAAU/kC,IACjBpL,KAAK8wC,SAGX,CACAC,sBACE,MAAMvoC,EAAUxI,KAAKwI,QACfwoC,EAAgBxoC,EAAQuF,QAAU,CAAC,GACzC,OAAKijC,GAAe,CAACC,EAAanL,KAChCmL,EAAY/kC,GAAK45B,CAAM,GAE3B,CACAoL,sBACE,MAAM1oC,EAAUxI,KAAKwI,QACf2oC,EAAY3oC,EAAQuF,OACpBA,EAAS/N,KAAK+N,OACdqjC,EAAUtqC,OAAOC,KAAKgH,GAAQ3K,QAAO,CAAC8Y,EAAKhQ,KAC/CgQ,EAAIhQ,IAAM,EACHgQ,IACN,CAAC,GACJ,IAAIna,EAAQ,GACRovC,IACFpvC,EAAQA,EAAMwW,OACZzR,OAAOC,KAAKoqC,GAAWrtB,KAAK5X,IAC1B,MAAM8+B,EAAemG,EAAUjlC,GACzBuB,EAAOs9B,GAAc7+B,EAAI8+B,GACzBqG,EAAoB,MAAT5jC,EACXoN,EAAwB,MAATpN,EACrB,MAAO,CACLjF,QAASwiC,EACTsG,UAAWD,EAAW,YAAcx2B,EAAe,SAAW,OAC9D02B,MAAOF,EAAW,eAAiBx2B,EAAe,WAAa,SAChE,OAIP,OAAK9Y,GAAQE,IACX,MAAM+oC,EAAe/oC,EAAKuG,QACpB0D,EAAK8+B,EAAa9+B,GAClBuB,EAAOs9B,GAAc7+B,EAAI8+B,GACzBwG,GAAY,IAAA7pC,GAAeqjC,EAAarqC,KAAMsB,EAAKsvC,YAC3BjxC,IAA1B0qC,EAAaphB,UAA0BukB,GAAqBnD,EAAaphB,SAAUnc,KAAU0gC,GAAqBlsC,EAAKqvC,aACzHtG,EAAaphB,SAAW3nB,EAAKqvC,WAE/BF,EAAQllC,IAAM,EACd,IAAI3C,EAAQ,KACZ,GAAI2C,KAAM6B,GAAUA,EAAO7B,GAAIvL,OAAS6wC,EACtCjoC,EAAQwE,EAAO7B,OACV,CACL,MAAMulC,EAAa1I,GAASX,SAASoJ,GACrCjoC,EAAQ,IAAIkoC,EAAW,CACrBvlC,KACAvL,KAAM6wC,EACNniC,IAAKrP,KAAKqP,IACV7O,MAAOR,OAET+N,EAAOxE,EAAM2C,IAAM3C,CACrB,CACAA,EAAMwzB,KAAKiO,EAAcxiC,EAAQ,KAEnC,OAAK4oC,GAAS,CAACM,EAAYxlC,KACpBwlC,UACI3jC,EAAO7B,EAChB,KAEF,OAAK6B,GAASxE,IACZojB,GAAQ3kB,UAAUhI,KAAMuJ,EAAOA,EAAMf,SACrCmkB,GAAQkD,OAAO7vB,KAAMuJ,EAAM,GAE/B,CACAooC,kBACE,MAAM/mC,EAAW5K,KAAK2vC,UAChB14B,EAAUjX,KAAKyL,KAAK6F,SAAStP,OAC7BgV,EAAUpM,EAAS5I,OAEzB,GADA4I,EAAS6N,MAAK,CAACC,EAAGnO,IAAMmO,EAAE3N,MAAQR,EAAEQ,QAChCiM,EAAUC,EAAS,CACrB,IAAK,IAAI/U,EAAI+U,EAAS/U,EAAI8U,IAAW9U,EACnClC,KAAK4xC,oBAAoB1vC,GAE3B0I,EAAS4M,OAAOP,EAASD,EAAUC,EACrC,CACAjX,KAAK+vC,gBAAkBnlC,EAASga,MAAM,GAAGnM,KAAK21B,GAAc,QAAS,SACvE,CACAyD,8BACE,MAAOlC,UAAW/kC,EAAUa,MAAM,SAAC6F,IAAatR,KAC5C4K,EAAS5I,OAASsP,EAAStP,eACtBhC,KAAKsN,QAEd1C,EAAS5J,SAAQ,CAAC6K,EAAMd,KACmC,IAArDuG,EAAStD,QAAOjE,GAAKA,IAAM8B,EAAKkZ,WAAU/iB,QAC5ChC,KAAK4xC,oBAAoB7mC,EAC3B,GAEJ,CACA+mC,2BACE,MAAMC,EAAiB,GACjBzgC,EAAWtR,KAAKyL,KAAK6F,SAC3B,IAAIpP,EAAG4I,EAEP,IADA9K,KAAK6xC,8BACA3vC,EAAI,EAAG4I,EAAOwG,EAAStP,OAAQE,EAAI4I,EAAM5I,IAAK,CACjD,MAAMkM,EAAUkD,EAASpP,GACzB,IAAI2J,EAAO7L,KAAKuR,eAAerP,GAC/B,MAAMvB,EAAOyN,EAAQzN,MAAQX,KAAK6H,OAAOlH,KAWzC,GAVIkL,EAAKlL,MAAQkL,EAAKlL,OAASA,IAC7BX,KAAK4xC,oBAAoB1vC,GACzB2J,EAAO7L,KAAKuR,eAAerP,IAE7B2J,EAAKlL,KAAOA,EACZkL,EAAKkF,UAAY3C,EAAQ2C,WAAa05B,GAAa9pC,EAAMX,KAAKwI,SAC9DqD,EAAKmmC,MAAQ5jC,EAAQ4jC,OAAS,EAC9BnmC,EAAKd,MAAQ7I,EACb2J,EAAK2I,MAAQ,GAAKpG,EAAQoG,MAC1B3I,EAAKpE,QAAUzH,KAAKyhB,iBAAiBvf,GACjC2J,EAAKsB,WACPtB,EAAKsB,WAAWmD,YAAYpO,GAC5B2J,EAAKsB,WAAWiD,iBACX,CACL,MAAM6hC,EAAkBlJ,GAASf,cAAcrnC,IACzC,mBAACoR,EAAkB,gBAAEsD,GAAmB,EAAAzO,EAAA,SAAkBjG,GAChEmG,OAAOqC,OAAO8oC,EAAgBn2B,UAAW,CACvCzG,gBAAiB0zB,GAASb,WAAW7yB,GACrCtD,mBAAoBA,GAAsBg3B,GAASb,WAAWn2B,KAEhElG,EAAKsB,WAAa,IAAI8kC,EAAgBjyC,KAAMkC,GAC5C6vC,EAAe9uC,KAAK4I,EAAKsB,WAC3B,CACF,CAEA,OADAnN,KAAK2xC,kBACEI,CACT,CACAG,kBACE,OAAKlyC,KAAKyL,KAAK6F,UAAU,CAAClD,EAAS/C,KACjCrL,KAAKuR,eAAelG,GAAc8B,WAAWuE,OAAO,GACnD1R,KACL,CACA0R,QACE1R,KAAKkyC,iBACLlyC,KAAKk/B,cAAc,QACrB,CACAl5B,OAAOoF,GACL,MAAMvD,EAAS7H,KAAK6H,OACpBA,EAAO7B,SACP,MAAMwC,EAAUxI,KAAKyvC,SAAW5nC,EAAO4K,eAAe5K,EAAOwlC,oBAAqBrtC,KAAK0S,cACjFy/B,EAAgBnyC,KAAKsW,qBAAuB9N,EAAQnB,UAK1D,GAJArH,KAAKoyC,gBACLpyC,KAAKqyC,sBACLryC,KAAKsyC,uBACLtyC,KAAKgwC,SAASrG,cACuD,IAAjE3pC,KAAKk/B,cAAc,eAAgB,CAAC9zB,OAAMs+B,YAAY,IACxD,OAEF,MAAMqI,EAAiB/xC,KAAK8xC,2BAC5B9xC,KAAKk/B,cAAc,wBACnB,IAAIhP,EAAa,EACjB,IAAK,IAAIhuB,EAAI,EAAG4I,EAAO9K,KAAKyL,KAAK6F,SAAStP,OAAQE,EAAI4I,EAAM5I,IAAK,CAC/D,MAAM,WAACiL,GAAcnN,KAAKuR,eAAerP,GACnCwP,GAASygC,IAAyD,IAAxCJ,EAAe10B,QAAQlQ,GACvDA,EAAW6E,sBAAsBN,GACjCwe,EAAa9uB,KAAKmC,KAAK4J,EAAWmH,iBAAkB4b,EACtD,CACAA,EAAalwB,KAAKuyC,YAAc/pC,EAAQ4kB,OAAOwC,YAAcM,EAAa,EAC1ElwB,KAAKwyC,cAActiB,GACdiiB,IACH,OAAKJ,GAAiB5kC,IACpBA,EAAWuE,OAAO,IAGtB1R,KAAKyyC,gBAAgBrnC,GACrBpL,KAAKk/B,cAAc,cAAe,CAAC9zB,SACnCpL,KAAK8vB,QAAQrX,KAAK21B,GAAc,IAAK,SACrC,MAAM,QAAChsC,EAAO,WAAEwtC,GAAc5vC,KAC1B4vC,EACF5vC,KAAK0yC,cAAc9C,GAAY,GACtBxtC,EAAQJ,QACjBhC,KAAK2yC,mBAAmBvwC,EAASA,GAAS,GAE5CpC,KAAK8wC,QACP,CACAsB,iBACE,OAAKpyC,KAAK+N,QAASxE,IACjBojB,GAAQqD,UAAUhwB,KAAMuJ,EAAM,IAEhCvJ,KAAK+wC,sBACL/wC,KAAKkxC,qBACP,CACAmB,sBACE,MAAM7pC,EAAUxI,KAAKwI,QACfoqC,EAAiB,IAAIxG,IAAItlC,OAAOC,KAAK/G,KAAK6vC,aAC1CgD,EAAY,IAAIzG,IAAI5jC,EAAQsqC,SAC7B,QAAUF,EAAgBC,MAAgB7yC,KAAK8vC,uBAAyBtnC,EAAQ+nC,aACnFvwC,KAAK+yC,eACL/yC,KAAKwwC,aAET,CACA8B,uBACE,MAAM,eAACrC,GAAkBjwC,KACnBgzC,EAAUhzC,KAAKizC,0BAA4B,GACjD,IAAK,MAAM,OAACxsC,EAAM,MAAEnF,EAAK,MAAEuR,KAAUmgC,EAAS,CAC5C,MAAM57B,EAAkB,oBAAX3Q,GAAgCoM,EAAQA,EACrDk8B,GAAgBkB,EAAgB3uC,EAAO8V,EACzC,CACF,CACA67B,yBACE,MAAMt7B,EAAe3X,KAAK2X,aAC1B,IAAKA,IAAiBA,EAAa3V,OACjC,OAEFhC,KAAK2X,aAAe,GACpB,MAAMu7B,EAAelzC,KAAKyL,KAAK6F,SAAStP,OAClCmxC,EAAWzR,GAAQ,IAAI0K,IAC3Bz0B,EACG3J,QAAO1J,GAAKA,EAAE,KAAOo9B,IACrB5d,KAAI,CAACxf,EAAGpC,IAAMA,EAAI,IAAMoC,EAAEkT,OAAO,GAAG6vB,KAAK,QAExC+L,EAAYD,EAAQ,GAC1B,IAAK,IAAIjxC,EAAI,EAAGA,EAAIgxC,EAAchxC,IAChC,KAAK,QAAUkxC,EAAWD,EAAQjxC,IAChC,OAGJ,OAAOyJ,MAAM1H,KAAKmvC,GACftvB,KAAIxf,GAAKA,EAAE4iC,MAAM,OACjBpjB,KAAIpL,IAAK,CAAEjS,OAAQiS,EAAE,GAAIpX,OAAQoX,EAAE,GAAI7F,OAAQ6F,EAAE,MACtD,CACA85B,cAActiB,GACZ,IAA+D,IAA3DlwB,KAAKk/B,cAAc,eAAgB,CAACwK,YAAY,IAClD,OAEF/c,GAAQ3mB,OAAOhG,KAAMA,KAAK+c,MAAO/c,KAAK8c,OAAQoT,GAC9C,MAAMrb,EAAO7U,KAAK8U,UACZu+B,EAASx+B,EAAKkI,OAAS,GAAKlI,EAAKiI,QAAU,EACjD9c,KAAK8vB,QAAU,IACf,OAAK9vB,KAAKusB,OAAQJ,IACZknB,GAA2B,cAAjBlnB,EAAIvC,WAGduC,EAAInkB,WACNmkB,EAAInkB,YAENhI,KAAK8vB,QAAQ7sB,QAAQkpB,EAAI2D,WAAU,GAClC9vB,MACHA,KAAK8vB,QAAQ9uB,SAAQ,CAACiB,EAAM8I,KAC1B9I,EAAKqxC,KAAOvoC,CAAK,IAEnB/K,KAAKk/B,cAAc,cACrB,CACAuT,gBAAgBrnC,GACd,IAA6E,IAAzEpL,KAAKk/B,cAAc,uBAAwB,CAAC9zB,OAAMs+B,YAAY,IAAlE,CAGA,IAAK,IAAIxnC,EAAI,EAAG4I,EAAO9K,KAAKyL,KAAK6F,SAAStP,OAAQE,EAAI4I,IAAQ5I,EAC5DlC,KAAKuR,eAAerP,GAAGiL,WAAWnF,YAEpC,IAAK,IAAI9F,EAAI,EAAG4I,EAAO9K,KAAKyL,KAAK6F,SAAStP,OAAQE,EAAI4I,IAAQ5I,EAC5DlC,KAAKuzC,eAAerxC,GAAG,QAAWkJ,GAAQA,EAAK,CAACC,aAAcnJ,IAAMkJ,GAEtEpL,KAAKk/B,cAAc,sBAAuB,CAAC9zB,QAP3C,CAQF,CACAmoC,eAAexoC,EAAOK,GACpB,MAAMS,EAAO7L,KAAKuR,eAAexG,GAC3B2M,EAAO,CAAC7L,OAAMd,QAAOK,OAAMs+B,YAAY,IACW,IAApD1pC,KAAKk/B,cAAc,sBAAuBxnB,KAG9C7L,EAAKsB,WAAWzL,QAAQ0J,GACxBsM,EAAKgyB,YAAa,EAClB1pC,KAAKk/B,cAAc,qBAAsBxnB,GAC3C,CACAo5B,UACiE,IAA3D9wC,KAAKk/B,cAAc,eAAgB,CAACwK,YAAY,MAGhD7lC,EAASV,IAAInD,MACXA,KAAKkwC,WAAarsC,EAAS/B,QAAQ9B,OACrC6D,EAASvC,MAAMtB,OAGjBA,KAAKmC,OACLosC,GAAqB,CAAC/tC,MAAOR,QAEjC,CACAmC,OACE,IAAID,EACJ,GAAIlC,KAAKywC,kBAAmB,CAC1B,MAAM,MAAC1zB,EAAK,OAAED,GAAU9c,KAAKywC,kBAC7BzwC,KAAK0wC,QAAQ3zB,EAAOD,GACpB9c,KAAKywC,kBAAoB,IAC3B,CAEA,GADAzwC,KAAK8sC,QACD9sC,KAAK+c,OAAS,GAAK/c,KAAK8c,QAAU,EACpC,OAEF,IAA6D,IAAzD9c,KAAKk/B,cAAc,aAAc,CAACwK,YAAY,IAChD,OAEF,MAAM8J,EAASxzC,KAAK8vB,QACpB,IAAK5tB,EAAI,EAAGA,EAAIsxC,EAAOxxC,QAAUwxC,EAAOtxC,GAAG6tB,GAAK,IAAK7tB,EACnDsxC,EAAOtxC,GAAGC,KAAKnC,KAAK8U,WAGtB,IADA9U,KAAKyzC,gBACEvxC,EAAIsxC,EAAOxxC,SAAUE,EAC1BsxC,EAAOtxC,GAAGC,KAAKnC,KAAK8U,WAEtB9U,KAAKk/B,cAAc,YACrB,CACAr0B,uBAAuBF,GACrB,MAAMC,EAAW5K,KAAK+vC,gBAChB3X,EAAS,GACf,IAAIl2B,EAAG4I,EACP,IAAK5I,EAAI,EAAG4I,EAAOF,EAAS5I,OAAQE,EAAI4I,IAAQ5I,EAAG,CACjD,MAAM2J,EAAOjB,EAAS1I,GACjByI,IAAiBkB,EAAKpE,SACzB2wB,EAAOn1B,KAAK4I,EAEhB,CACA,OAAOusB,CACT,CACAtO,+BACE,OAAO9pB,KAAK6K,wBAAuB,EACrC,CACA4oC,gBACE,IAAqE,IAAjEzzC,KAAKk/B,cAAc,qBAAsB,CAACwK,YAAY,IACxD,OAEF,MAAM9+B,EAAW5K,KAAK8pB,+BACtB,IAAK,IAAI5nB,EAAI0I,EAAS5I,OAAS,EAAGE,GAAK,IAAKA,EAC1ClC,KAAK0zC,aAAa9oC,EAAS1I,IAE7BlC,KAAKk/B,cAAc,oBACrB,CACAwU,aAAa7nC,GACX,MAAMwD,EAAMrP,KAAKqP,IACXsF,EAAO9I,EAAK6I,MACZi/B,GAAWh/B,EAAKlK,SAChBoK,EAAO7U,KAAK8U,UACZ4C,EAAO,CACX7L,OACAd,MAAOc,EAAKd,MACZ2+B,YAAY,IAEwC,IAAlD1pC,KAAKk/B,cAAc,oBAAqBxnB,KAGxCi8B,IACF,OAAStkC,EAAK,CACZjF,MAAoB,IAAduK,EAAKvK,KAAiB,EAAIyK,EAAKzK,KAAOuK,EAAKvK,KACjDF,OAAsB,IAAfyK,EAAKzK,MAAkBlK,KAAK+c,MAAQlI,EAAK3K,MAAQyK,EAAKzK,MAC7DD,KAAkB,IAAb0K,EAAK1K,IAAgB,EAAI4K,EAAK5K,IAAM0K,EAAK1K,IAC9CE,QAAwB,IAAhBwK,EAAKxK,OAAmBnK,KAAK8c,OAASjI,EAAK1K,OAASwK,EAAKxK,SAGrE0B,EAAKsB,WAAWhL,OACZwxC,IACF,OAAWtkC,GAEbqI,EAAKgyB,YAAa,EAClB1pC,KAAKk/B,cAAc,mBAAoBxnB,GACzC,CACAkT,cAAc3L,GACZ,OAAO,OAAeA,EAAOjf,KAAK8U,UAAW9U,KAAKuyC,YACpD,CACAqB,0BAA0BzuC,EAAGiG,EAAM5C,EAASkiB,GAC1C,MAAMjkB,EAASklB,GAAYC,MAAMxgB,GACjC,MAAsB,oBAAX3E,EACFA,EAAOzG,KAAMmF,EAAGqD,EAASkiB,GAE3B,EACT,CACAnZ,eAAelG,GACb,MAAM+C,EAAUpO,KAAKyL,KAAK6F,SAASjG,GAC7BT,EAAW5K,KAAK2vC,UACtB,IAAI9jC,EAAOjB,EAASoD,QAAOjE,GAAKA,GAAKA,EAAEgb,WAAa3W,IAAS7L,MAkB7D,OAjBKsJ,IACHA,EAAO,CACLlL,KAAM,KACN8K,KAAM,GACN2C,QAAS,KACTjB,WAAY,KACZ8B,OAAQ,KACRyB,QAAS,KACTE,QAAS,KACTohC,MAAO5jC,GAAWA,EAAQ4jC,OAAS,EACnCjnC,MAAOM,EACP0Z,SAAU3W,EACVM,QAAS,GACTqE,SAAS,GAEXnI,EAAS3H,KAAK4I,IAETA,CACT,CACA6G,aACE,OAAO1S,KAAKiQ,WAAajQ,KAAKiQ,UAAW,OAAc,KAAM,CAACzP,MAAOR,KAAMW,KAAM,UACnF,CACAomB,yBACE,OAAO/mB,KAAK8pB,+BAA+B9nB,MAC7C,CACAyf,iBAAiBpW,GACf,MAAM+C,EAAUpO,KAAKyL,KAAK6F,SAASjG,GACnC,IAAK+C,EACH,OAAO,EAET,MAAMvC,EAAO7L,KAAKuR,eAAelG,GACjC,MAA8B,mBAAhBQ,EAAKoD,QAAwBpD,EAAKoD,QAAUb,EAAQa,MACpE,CACA4kC,qBAAqBxoC,EAAc5D,GACjC,MAAMoE,EAAO7L,KAAKuR,eAAelG,GACjCQ,EAAKoD,QAAUxH,CACjB,CACA+c,qBAAqBzZ,GACnB/K,KAAKiwC,eAAellC,IAAU/K,KAAKiwC,eAAellC,EACpD,CACA8S,kBAAkB9S,GAChB,OAAQ/K,KAAKiwC,eAAellC,EAC9B,CACA+oC,kBAAkBzoC,EAAckD,EAAW9G,GACzC,MAAM2D,EAAO3D,EAAU,OAAS,OAC1BoE,EAAO7L,KAAKuR,eAAelG,GAC3B5K,EAAQoL,EAAKsB,WAAW4I,wBAAmBzV,EAAW8K,IACxD,OAAQmD,IACV1C,EAAKJ,KAAK8C,GAAWU,QAAUxH,EAC/BzH,KAAKgG,WAELhG,KAAK6zC,qBAAqBxoC,EAAc5D,GACxChH,EAAMuF,OAAO6F,EAAM,CAACpE,YACpBzH,KAAKgG,QAAQqJ,GAAQA,EAAIhE,eAAiBA,EAAeD,OAAO9K,IAEpE,CACAoH,KAAK2D,EAAckD,GACjBvO,KAAK8zC,kBAAkBzoC,EAAckD,GAAW,EAClD,CACAhH,KAAK8D,EAAckD,GACjBvO,KAAK8zC,kBAAkBzoC,EAAckD,GAAW,EAClD,CACAqjC,oBAAoBvmC,GAClB,MAAMQ,EAAO7L,KAAK2vC,UAAUtkC,GACxBQ,GAAQA,EAAKsB,YACftB,EAAKsB,WAAWwE,kBAEX3R,KAAK2vC,UAAUtkC,EACxB,CACA0oC,QACE,IAAI7xC,EAAG4I,EAGP,IAFA9K,KAAKyD,OACLI,EAASF,OAAO3D,MACXkC,EAAI,EAAG4I,EAAO9K,KAAKyL,KAAK6F,SAAStP,OAAQE,EAAI4I,IAAQ5I,EACxDlC,KAAK4xC,oBAAoB1vC,EAE7B,CACA8xC,UACEh0C,KAAKk/B,cAAc,iBACnB,MAAM,OAACzO,EAAM,IAAEphB,GAAOrP,KACtBA,KAAK+zC,QACL/zC,KAAK6H,OAAOglC,aACRpc,IACFzwB,KAAK+yC,gBACL,QAAYtiB,EAAQphB,GACpBrP,KAAK4sC,SAASlc,eAAerhB,GAC7BrP,KAAKywB,OAAS,KACdzwB,KAAKqP,IAAM,MAEbrP,KAAKk/B,cAAc,kBACZ2P,GAAU7uC,KAAKkM,IACtBlM,KAAKk/B,cAAc,eACrB,CACA+U,iBAAiBv8B,GACf,OAAO1X,KAAKywB,OAAOyjB,aAAax8B,EAClC,CACA84B,aACExwC,KAAKm0C,iBACDn0C,KAAKwI,QAAQ+nC,WACfvwC,KAAKo0C,uBAELp0C,KAAKkwC,UAAW,CAEpB,CACAiE,iBACE,MAAMtzC,EAAYb,KAAK6vC,WACjBjD,EAAW5sC,KAAK4sC,SAChByH,EAAO,CAAC1zC,EAAMiwB,KAClBgc,EAASjc,iBAAiB3wB,KAAMW,EAAMiwB,GACtC/vB,EAAUF,GAAQiwB,CAAQ,EAEtBA,EAAW,CAACzrB,EAAG4E,EAAGC,KACtB7E,EAAEwa,QAAU5V,EACZ5E,EAAEya,QAAU5V,EACZhK,KAAK0yC,cAAcvtC,EAAE,GAEvB,OAAKnF,KAAKwI,QAAQsqC,QAASnyC,GAAS0zC,EAAK1zC,EAAMiwB,IACjD,CACAwjB,uBACOp0C,KAAK8vC,uBACR9vC,KAAK8vC,qBAAuB,CAAC,GAE/B,MAAMjvC,EAAYb,KAAK8vC,qBACjBlD,EAAW5sC,KAAK4sC,SAChByH,EAAO,CAAC1zC,EAAMiwB,KAClBgc,EAASjc,iBAAiB3wB,KAAMW,EAAMiwB,GACtC/vB,EAAUF,GAAQiwB,CAAQ,EAEtB0jB,EAAU,CAAC3zC,EAAMiwB,KACjB/vB,EAAUF,KACZisC,EAAS/b,oBAAoB7wB,KAAMW,EAAMiwB,UAClC/vB,EAAUF,GACnB,EAEIiwB,EAAW,CAAC7T,EAAOD,KACnB9c,KAAKywB,QACPzwB,KAAKsH,OAAOyV,EAAOD,EACrB,EAEF,IAAIy3B,EACJ,MAAMrE,EAAW,KACfoE,EAAQ,SAAUpE,GAClBlwC,KAAKkwC,UAAW,EAChBlwC,KAAKsH,SACL+sC,EAAK,SAAUzjB,GACfyjB,EAAK,SAAUE,EAAS,EAE1BA,EAAW,KACTv0C,KAAKkwC,UAAW,EAChBoE,EAAQ,SAAU1jB,GAClB5wB,KAAK+zC,QACL/zC,KAAK0wC,QAAQ,EAAG,GAChB2D,EAAK,SAAUnE,EAAS,EAEtBtD,EAAS5b,WAAWhxB,KAAKywB,QAC3Byf,IAEAqE,GAEJ,CACAxB,gBACE,OAAK/yC,KAAK6vC,YAAY,CAACjf,EAAUjwB,KAC/BX,KAAK4sC,SAAS/b,oBAAoB7wB,KAAMW,EAAMiwB,EAAS,IAEzD5wB,KAAK6vC,WAAa,CAAC,GACnB,OAAK7vC,KAAK8vC,sBAAsB,CAAClf,EAAUjwB,KACzCX,KAAK4sC,SAAS/b,oBAAoB7wB,KAAMW,EAAMiwB,EAAS,IAEzD5wB,KAAK8vC,0BAAuBxvC,CAC9B,CACAk0C,iBAAiBzyC,EAAOqJ,EAAM+rB,GAC5B,MAAMsd,EAAStd,EAAU,MAAQ,SACjC,IAAItrB,EAAM5J,EAAMC,EAAG4I,EAKnB,IAJa,YAATM,IACFS,EAAO7L,KAAKuR,eAAexP,EAAM,GAAGsJ,cACpCQ,EAAKsB,WAAW,IAAMsnC,EAAS,wBAE5BvyC,EAAI,EAAG4I,EAAO/I,EAAMC,OAAQE,EAAI4I,IAAQ5I,EAAG,CAC9CD,EAAOF,EAAMG,GACb,MAAMiL,EAAalL,GAAQjC,KAAKuR,eAAetP,EAAKoJ,cAAc8B,WAC9DA,GACFA,EAAWsnC,EAAS,cAAcxyC,EAAKqM,QAASrM,EAAKoJ,aAAcpJ,EAAK8I,MAE5E,CACF,CACA2pC,oBACE,OAAO10C,KAAKoC,SAAW,EACzB,CACAuyC,kBAAkBC,GAChB,MAAMC,EAAa70C,KAAKoC,SAAW,GAC7B2D,EAAS6uC,EAAe9wB,KAAI,EAAEzY,eAAcN,YAChD,MAAMc,EAAO7L,KAAKuR,eAAelG,GACjC,IAAKQ,EACH,MAAM,IAAIwc,MAAM,6BAA+Bhd,GAEjD,MAAO,CACLA,eACAiD,QAASzC,EAAKJ,KAAKV,GACnBA,QACD,IAEG2b,IAAW,QAAe3gB,EAAQ8uC,GACpCnuB,IACF1mB,KAAKoC,QAAU2D,EACf/F,KAAK4vC,WAAa,KAClB5vC,KAAK2yC,mBAAmB5sC,EAAQ8uC,GAEpC,CACA3V,cAAcmK,EAAM3xB,EAAM1J,GACxB,OAAOhO,KAAKgwC,SAAS5G,OAAOppC,KAAMqpC,EAAM3xB,EAAM1J,EAChD,CACA2kC,mBAAmB5sC,EAAQ8uC,EAAYC,GACrC,MAAMC,EAAe/0C,KAAKwI,QAAQwsC,MAC5BpsB,EAAO,CAAClQ,EAAGnO,IAAMmO,EAAE1K,QAAOjE,IAAMQ,EAAE0/B,MAAKjgC,GAAKD,EAAEsB,eAAiBrB,EAAEqB,cAAgBtB,EAAEgB,QAAUf,EAAEe,UAC/FkqC,EAAcrsB,EAAKisB,EAAY9uC,GAC/BmvC,EAAYJ,EAAS/uC,EAAS6iB,EAAK7iB,EAAQ8uC,GAC7CI,EAAYjzC,QACdhC,KAAKw0C,iBAAiBS,EAAaF,EAAa3pC,MAAM,GAEpD8pC,EAAUlzC,QAAU+yC,EAAa3pC,MACnCpL,KAAKw0C,iBAAiBU,EAAWH,EAAa3pC,MAAM,EAExD,CACAsnC,cAAcvtC,EAAG2vC,GACf,MAAMp9B,EAAO,CACX3U,MAAOoC,EACP2vC,SACApL,YAAY,EACZyF,YAAanvC,KAAK4qB,cAAczlB,IAE5BgwC,EAAe1L,IAAYA,EAAOjhC,QAAQsqC,QAAU9yC,KAAKwI,QAAQsqC,QAAQjmB,SAAS1nB,EAAEytB,OAAOjyB,MACjG,IAA6D,IAAzDX,KAAKk/B,cAAc,cAAexnB,EAAMy9B,GAC1C,OAEF,MAAMzuB,EAAU1mB,KAAKo1C,aAAajwC,EAAG2vC,EAAQp9B,EAAKy3B,aAMlD,OALAz3B,EAAKgyB,YAAa,EAClB1pC,KAAKk/B,cAAc,aAAcxnB,EAAMy9B,IACnCzuB,GAAWhP,EAAKgP,UAClB1mB,KAAK8wC,SAEA9wC,IACT,CACAo1C,aAAajwC,EAAG2vC,EAAQ3F,GACtB,MAAO/sC,QAASyyC,EAAa,GAAE,QAAErsC,GAAWxI,KACtC0qB,EAAmBoqB,EACnB/uC,EAAS/F,KAAKq1C,mBAAmBlwC,EAAG0vC,EAAY1F,EAAazkB,GAC7D0kB,GAAU,QAAcjqC,GACxB+pC,EAAYD,GAAmB9pC,EAAGnF,KAAK4vC,WAAYT,EAAaC,GAClED,IACFnvC,KAAK4vC,WAAa,MAClB,OAASpnC,EAAQ8sC,QAAS,CAACnwC,EAAGY,EAAQ/F,MAAOA,MACzCovC,IACF,OAAS5mC,EAAQ8b,QAAS,CAACnf,EAAGY,EAAQ/F,MAAOA,OAGjD,MAAM0mB,IAAW,QAAe3gB,EAAQ8uC,GAMxC,OALInuB,GAAWouB,KACb90C,KAAKoC,QAAU2D,EACf/F,KAAK2yC,mBAAmB5sC,EAAQ8uC,EAAYC,IAE9C90C,KAAK4vC,WAAaV,EACXxoB,CACT,CACA2uB,mBAAmBlwC,EAAG0vC,EAAY1F,EAAazkB,GAC7C,GAAe,aAAXvlB,EAAExE,KACJ,MAAO,GAET,IAAKwuC,EACH,OAAO0F,EAET,MAAME,EAAe/0C,KAAKwI,QAAQwsC,MAClC,OAAOh1C,KAAK4zC,0BAA0BzuC,EAAG4vC,EAAa3pC,KAAM2pC,EAAcrqB,EAC5E,EAEF,MAAM6qB,GAAoB,KAAM,OAAKlG,GAAMR,WAAYruC,GAAUA,EAAMwvC,SAASrG,eAC1E6L,IAAa,EA0CnB,SAASC,GAAQpmC,EAAKf,EAASyR,GAC7B,MAAM,WAACD,EAAU,YAAE41B,EAAW,EAAE3rC,EAAC,EAAEC,EAAC,YAAEoX,EAAW,YAAED,GAAe7S,EAClE,IAAIqnC,EAAcD,EAAct0B,EAChC/R,EAAIg2B,YACJh2B,EAAI2T,IAAIjZ,EAAGC,EAAGoX,EAAatB,EAAa61B,EAAa51B,EAAW41B,GAC5Dx0B,EAAcu0B,GAChBC,EAAcD,EAAcv0B,EAC5B9R,EAAI2T,IAAIjZ,EAAGC,EAAGmX,EAAapB,EAAW41B,EAAa71B,EAAa61B,GAAa,IAE7EtmC,EAAI2T,IAAIjZ,EAAGC,EAAG0rC,EAAa31B,EAAW,EAAAY,EAASb,EAAa,EAAAa,GAE9DtR,EAAIumC,YACJvmC,EAAIsF,MACN,CACA,SAASkhC,GAAgB5sC,GACvB,OAAO,QAAkBA,EAAO,CAAC,aAAc,WAAY,aAAc,YAC3E,CACA,SAAS6sC,GAAoB9yB,EAAK7B,EAAaC,EAAa20B,GAC1D,MAAMC,EAAIH,GAAgB7yB,EAAIxa,QAAQytC,cAChCC,GAAiB90B,EAAcD,GAAe,EAC9Cg1B,EAAa/0C,KAAKC,IAAI60C,EAAeH,EAAa50B,EAAc,GAChEi1B,EAAqBj5B,IACzB,MAAMk5B,GAAiBj1B,EAAchgB,KAAKC,IAAI60C,EAAe/4B,IAAQ44B,EAAa,EAClF,OAAO,OAAY54B,EAAK,EAAG/b,KAAKC,IAAI60C,EAAeG,GAAe,EAEpE,MAAO,CACLC,WAAYF,EAAkBJ,EAAEM,YAChCC,SAAUH,EAAkBJ,EAAEO,UAC9BC,YAAY,OAAYR,EAAEQ,WAAY,EAAGL,GACzCM,UAAU,OAAYT,EAAES,SAAU,EAAGN,GAEzC,CACA,SAASO,GAAWl1C,EAAGm1C,EAAO5sC,EAAGC,GAC/B,MAAO,CACLD,EAAGA,EAAIvI,EAAIJ,KAAK6e,IAAI02B,GACpB3sC,EAAGA,EAAIxI,EAAIJ,KAAK+e,IAAIw2B,GAExB,CACA,SAASC,GAAQvnC,EAAKf,EAASoQ,EAAQiD,EAAShY,GAC9C,MAAM,EAACI,EAAC,EAAEC,EAAG8V,WAAYxe,EAAK,YAAEo0C,EAAav0B,YAAa01B,GAAUvoC,EAC9D8S,EAAchgB,KAAKmC,IAAI+K,EAAQ8S,YAAcO,EAAUjD,EAASg3B,EAAa,GAC7Ev0B,EAAc01B,EAAS,EAAIA,EAASl1B,EAAUjD,EAASg3B,EAAc,EAC3E,IAAIoB,EAAgB,EACpB,MAAMC,EAAQptC,EAAMrI,EACpB,GAAIqgB,EAAS,CACX,MAAMq1B,EAAuBH,EAAS,EAAIA,EAASl1B,EAAU,EACvDs1B,EAAuB71B,EAAc,EAAIA,EAAcO,EAAU,EACjEu1B,GAAsBF,EAAuBC,GAAwB,EACrEE,EAAuC,IAAvBD,EAA4BH,EAAQG,GAAuBA,EAAqBv1B,GAAWo1B,EACjHD,GAAiBC,EAAQI,GAAiB,CAC5C,CACA,MAAMC,EAAOh2C,KAAKmC,IAAI,KAAOwzC,EAAQ31B,EAAc1C,EAAS,EAAAmC,GAAMO,EAC5Di2B,GAAeN,EAAQK,GAAQ,EAC/Bt3B,EAAaxe,EAAQ+1C,EAAcP,EACnC/2B,EAAWpW,EAAM0tC,EAAcP,GAC/B,WAACR,EAAU,SAAEC,EAAQ,WAAEC,EAAU,SAAEC,GAAYX,GAAoBxnC,EAAS6S,EAAaC,EAAarB,EAAWD,GACjHw3B,EAA2Bl2B,EAAck1B,EACzCiB,EAAyBn2B,EAAcm1B,EACvCiB,EAA0B13B,EAAaw2B,EAAagB,EACpDG,EAAwB13B,EAAWw2B,EAAWgB,EAC9CG,EAA2Bv2B,EAAcq1B,EACzCmB,EAAyBx2B,EAAcs1B,EACvCmB,EAA0B93B,EAAa02B,EAAakB,EACpDG,EAAwB93B,EAAW02B,EAAWkB,EAGpD,GAFAtoC,EAAIg2B,YACJh2B,EAAI2T,IAAIjZ,EAAGC,EAAGoX,EAAao2B,EAAyBC,GAChDlB,EAAW,EAAG,CAChB,MAAMuB,EAAUpB,GAAWa,EAAwBE,EAAuB1tC,EAAGC,GAC7EqF,EAAI2T,IAAI80B,EAAQ/tC,EAAG+tC,EAAQ9tC,EAAGusC,EAAUkB,EAAuB13B,EAAW,EAAAY,EAC5E,CACA,MAAMo3B,EAAKrB,GAAWiB,EAAwB53B,EAAUhW,EAAGC,GAE3D,GADAqF,EAAIk2B,OAAOwS,EAAGhuC,EAAGguC,EAAG/tC,GAChBysC,EAAW,EAAG,CAChB,MAAMqB,EAAUpB,GAAWiB,EAAwBE,EAAuB9tC,EAAGC,GAC7EqF,EAAI2T,IAAI80B,EAAQ/tC,EAAG+tC,EAAQ9tC,EAAGysC,EAAU12B,EAAW,EAAAY,EAASk3B,EAAwBz2C,KAAK42C,GAC3F,CAEA,GADA3oC,EAAI2T,IAAIjZ,EAAGC,EAAGmX,EAAapB,EAAY02B,EAAWt1B,EAAcrB,EAAc02B,EAAar1B,GAAc,GACrGq1B,EAAa,EAAG,CAClB,MAAMsB,EAAUpB,GAAWgB,EAA0BE,EAAyB7tC,EAAGC,GACjFqF,EAAI2T,IAAI80B,EAAQ/tC,EAAG+tC,EAAQ9tC,EAAGwsC,EAAYoB,EAA0Bx2C,KAAK42C,GAAIl4B,EAAa,EAAAa,EAC5F,CACA,MAAMs3B,EAAKvB,GAAWY,EAA0Bx3B,EAAY/V,EAAGC,GAE/D,GADAqF,EAAIk2B,OAAO0S,EAAGluC,EAAGkuC,EAAGjuC,GAChBssC,EAAa,EAAG,CAClB,MAAMwB,EAAUpB,GAAWY,EAA0BE,EAAyBztC,EAAGC,GACjFqF,EAAI2T,IAAI80B,EAAQ/tC,EAAG+tC,EAAQ9tC,EAAGssC,EAAYx2B,EAAa,EAAAa,EAAS62B,EAClE,CACAnoC,EAAIumC,WACN,CACA,SAASsC,GAAQ7oC,EAAKf,EAASoQ,EAAQiD,GACrC,MAAM,YAACw2B,EAAW,WAAEr4B,EAAU,cAAEP,GAAiBjR,EACjD,IAAIyR,EAAWzR,EAAQyR,SACvB,GAAIo4B,EAAa,CACfvB,GAAQvnC,EAAKf,EAASoQ,EAAQiD,EAAS7B,EAAa,EAAAD,GACpD,IAAK,IAAI3d,EAAI,EAAGA,EAAIi2C,IAAej2C,EACjCmN,EAAI4Y,OAED7K,MAAMmC,KACTQ,EAAWD,EAAaP,EAAgB,EAAAM,EACpCN,EAAgB,EAAAM,IAAQ,IAC1BE,GAAY,EAAAF,GAGlB,CAGA,OAFA+2B,GAAQvnC,EAAKf,EAASoQ,EAAQiD,EAAS5B,GACvC1Q,EAAI4Y,OACGlI,CACT,CACA,SAASq4B,GAAsB/oC,EAAKf,EAAS+pC,GAC3C,MAAM,EAACtuC,EAAC,EAAEC,EAAC,WAAE8V,EAAU,YAAE41B,EAAW,YAAEyC,GAAe7pC,EAC/C8S,EAAchgB,KAAKmC,IAAI+K,EAAQ8S,YAAcs0B,EAAa,GAC1Dv0B,EAAc7S,EAAQ6S,YAAcu0B,EAC1C,IAAIxzC,EAMJ,IALIm2C,GACF5C,GAAQpmC,EAAKf,EAASwR,EAAa,EAAAD,GAErCxQ,EAAIg2B,YACJh2B,EAAI2T,IAAIjZ,EAAGC,EAAGmX,EAAarB,EAAa,EAAAD,EAAKC,GAAY,GACpD5d,EAAI,EAAGA,EAAIi2C,IAAej2C,EAC7BmN,EAAIm2B,SAIN,IAFAn2B,EAAIg2B,YACJh2B,EAAI2T,IAAIjZ,EAAGC,EAAGoX,EAAatB,EAAYA,EAAa,EAAAD,GAC/C3d,EAAI,EAAGA,EAAIi2C,IAAej2C,EAC7BmN,EAAIm2B,QAER,CACA,SAAS7M,GAAWtpB,EAAKf,EAASoQ,EAAQiD,EAAS5B,GACjD,MAAM,QAACvX,GAAW8F,GACZ,YAAC8U,EAAW,gBAAEk1B,GAAmB9vC,EACjC6vC,EAAgC,UAAxB7vC,EAAQ2a,YACjBC,IAGDi1B,GACFhpC,EAAIgV,UAA0B,EAAdjB,EAChB/T,EAAIkpC,SAAWD,GAAmB,UAElCjpC,EAAIgV,UAAYjB,EAChB/T,EAAIkpC,SAAWD,GAAmB,SAEhChqC,EAAQ6pC,aACVC,GAAsB/oC,EAAKf,EAAS+pC,GAElCA,GACF5C,GAAQpmC,EAAKf,EAASyR,GAExB62B,GAAQvnC,EAAKf,EAASoQ,EAAQiD,EAAS5B,GACvC1Q,EAAIm2B,SACN,CA9LA1+B,OAAO0xC,iBAAiBnJ,GAAO,CAC7BxzB,SAAU,CACR25B,cACAvsC,MAAO,EAAArC,GAETioC,UAAW,CACT2G,cACAvsC,MAAO4lC,IAETrwB,UAAW,CACTg3B,cACAvsC,MAAO,MAET8/B,SAAU,CACRyM,cACAvsC,MAAO8/B,IAETkF,QAAS,CACPuH,cACAvsC,MAAOglC,IAETa,SAAU,CACR0G,cACAvsC,MAAO6lC,IAETxI,SAAU,CACRkP,cACAvsC,MAAO,IAAIlH,KACTgnC,GAAS7lC,OAAOnB,GAChBwzC,IAAmB,GAGvB3O,WAAY,CACV4O,cACAvsC,MAAO,IAAIlH,KACTgnC,GAASplC,UAAU5B,GACnBwzC,IAAmB,KA2JzB,MAAMkD,WAAmBjjB,GACvBz1B,YAAY8E,GACVsX,QACAnc,KAAKwI,aAAUlI,EACfN,KAAKuf,mBAAgBjf,EACrBN,KAAK8f,gBAAaxf,EAClBN,KAAK+f,cAAWzf,EAChBN,KAAKmhB,iBAAc7gB,EACnBN,KAAKohB,iBAAc9gB,EACnBN,KAAK01C,YAAc,EACnB11C,KAAKm4C,YAAc,EACftzC,GACFiC,OAAOqC,OAAOnJ,KAAM6E,EAExB,CACAimB,QAAQ4tB,EAAQC,EAAQjuB,GACtB,MAAMzL,EAAQjf,KAAKgrB,SAAS,CAAC,IAAK,KAAMN,IAClC,MAACnK,EAAK,SAAE+K,IAAY,OAAkBrM,EAAO,CAAClV,EAAG2uC,EAAQ1uC,EAAG2uC,KAC5D,WAAC74B,EAAU,SAAEC,EAAQ,YAAEoB,EAAW,YAAEC,EAAW,cAAE7B,GAAiBvf,KAAKgrB,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCN,GACGkuB,EAAU54C,KAAKwI,QAAQmZ,QAAU,EACjCc,GAAiB,IAAA9a,GAAe4X,EAAeQ,EAAWD,GAC1D+4B,EAAgBp2B,GAAkB,EAAA5C,IAAO,OAAcU,EAAOT,EAAYC,GAC1E+4B,GAAe,QAAWxtB,EAAUnK,EAAcy3B,EAASx3B,EAAcw3B,GAC/E,OAAQC,GAAiBC,CAC3B,CACA1tB,eAAeV,GACb,MAAM,EAAC3gB,EAAC,EAAEC,EAAC,WAAE8V,EAAU,SAAEC,EAAQ,YAAEoB,EAAW,YAAEC,GAAephB,KAAKgrB,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACCN,IACG,OAAChM,EAAM,QAAEiD,GAAW3hB,KAAKwI,QACzBuwC,GAAaj5B,EAAaC,GAAY,EACtCi5B,GAAc73B,EAAcC,EAAcO,EAAUjD,GAAU,EACpE,MAAO,CACL3U,EAAGA,EAAI3I,KAAK6e,IAAI84B,GAAaC,EAC7BhvC,EAAGA,EAAI5I,KAAK+e,IAAI44B,GAAaC,EAEjC,CACAvjB,gBAAgB/K,GACd,OAAO1qB,KAAKorB,eAAeV,EAC7B,CACAvoB,KAAKkN,GACH,MAAM,QAAC7G,EAAO,cAAE+W,GAAiBvf,KAC3B0e,GAAUlW,EAAQkW,QAAU,GAAK,EACjCiD,GAAWnZ,EAAQmZ,SAAW,GAAK,EAGzC,GAFA3hB,KAAK01C,YAAuC,UAAxBltC,EAAQ2a,YAA2B,IAAO,EAC9DnjB,KAAKm4C,YAAc54B,EAAgB,EAAAM,EAAMze,KAAKkE,MAAMia,EAAgB,EAAAM,GAAO,EACrD,IAAlBN,GAAuBvf,KAAKmhB,YAAc,GAAKnhB,KAAKohB,YAAc,EACpE,OAEF/R,EAAIs1B,OACJ,IAAIsU,EAAe,EACnB,GAAIv6B,EAAQ,CACVu6B,EAAev6B,EAAS,EACxB,MAAMq6B,GAAa/4C,KAAK8f,WAAa9f,KAAK+f,UAAY,EACtD1Q,EAAI6pC,UAAU93C,KAAK6e,IAAI84B,GAAaE,EAAc73C,KAAK+e,IAAI44B,GAAaE,GACpEj5C,KAAKuf,eAAiB,EAAAsB,IACxBo4B,EAAev6B,EAEnB,CACArP,EAAI4U,UAAYzb,EAAQ0b,gBACxB7U,EAAI8U,YAAc3b,EAAQ4b,YAC1B,MAAMrE,EAAWm4B,GAAQ7oC,EAAKrP,KAAMi5C,EAAct3B,GAClDgX,GAAWtpB,EAAKrP,KAAMi5C,EAAct3B,EAAS5B,GAC7C1Q,EAAIw1B,SACN,EAiBF,SAASsU,GAAS9pC,EAAK7G,EAASub,EAAQvb,GACtC6G,EAAI+pC,SAAU,IAAAzxC,GAAeoc,EAAMs1B,eAAgB7wC,EAAQ6wC,gBAC3DhqC,EAAI81B,aAAY,IAAAx9B,GAAeoc,EAAMiV,WAAYxwB,EAAQwwB,aACzD3pB,EAAI+1B,gBAAiB,IAAAz9B,GAAeoc,EAAMkV,iBAAkBzwB,EAAQywB,kBACpE5pB,EAAIkpC,UAAW,IAAA5wC,GAAeoc,EAAMu0B,gBAAiB9vC,EAAQ8vC,iBAC7DjpC,EAAIgV,WAAY,IAAA1c,GAAeoc,EAAMX,YAAa5a,EAAQ4a,aAC1D/T,EAAI8U,aAAc,IAAAxc,GAAeoc,EAAMK,YAAa5b,EAAQ4b,YAC9D,CACA,SAASmhB,GAAOl2B,EAAKiqC,EAAUx0C,GAC7BuK,EAAIk2B,OAAOzgC,EAAOiF,EAAGjF,EAAOkF,EAC9B,CACA,SAASuvC,GAAc/wC,GACrB,OAAIA,EAAQgxC,QACH,KAELhxC,EAAQixC,SAA8C,aAAnCjxC,EAAQkxC,uBACtB,KAEFnU,EACT,CACA,SAASoU,GAAS36B,EAAQsG,EAAS2H,EAAS,CAAC,GAC3C,MAAMpa,EAAQmM,EAAOhd,QACdV,MAAOs4C,EAAc,EAAGjwC,IAAKkwC,EAAYhnC,EAAQ,GAAKoa,GACtD3rB,MAAOw4C,EAAcnwC,IAAKowC,GAAcz0B,EACzChkB,EAAQF,KAAKmC,IAAIq2C,EAAaE,GAC9BnwC,EAAMvI,KAAKC,IAAIw4C,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACLlnC,QACAvR,QACAmE,KAAM6f,EAAQ7f,KACdqF,KAAMnB,EAAMrI,IAAU04C,EAAUnnC,EAAQlJ,EAAMrI,EAAQqI,EAAMrI,EAEhE,CACA,SAAS24C,GAAY5qC,EAAKyV,EAAMQ,EAAS2H,GACvC,MAAM,OAACjO,EAAM,QAAExW,GAAWsc,GACpB,MAACjS,EAAK,MAAEvR,EAAK,KAAEmE,EAAI,KAAEqF,GAAQ6uC,GAAS36B,EAAQsG,EAAS2H,GACvDitB,EAAaX,GAAc/wC,GACjC,IACItG,EAAG+c,EAAOjM,GADV,KAACoE,GAAO,EAAI,QAAE1N,GAAWujB,GAAU,CAAC,EAExC,IAAK/qB,EAAI,EAAGA,GAAK4I,IAAQ5I,EACvB+c,EAAQD,GAAQ1d,GAASoI,EAAUoB,EAAO5I,EAAIA,IAAM2Q,GAChDoM,EAAMG,OAEChI,GACT/H,EAAIi2B,OAAOrmB,EAAMlV,EAAGkV,EAAMjV,GAC1BoN,GAAO,GAEP8iC,EAAW7qC,EAAK2D,EAAMiM,EAAOvV,EAASlB,EAAQgxC,SAEhDxmC,EAAOiM,GAMT,OAJIxZ,IACFwZ,EAAQD,GAAQ1d,GAASoI,EAAUoB,EAAO,IAAM+H,GAChDqnC,EAAW7qC,EAAK2D,EAAMiM,EAAOvV,EAASlB,EAAQgxC,YAEvC/zC,CACX,CACA,SAAS00C,GAAgB9qC,EAAKyV,EAAMQ,EAAS2H,GAC3C,MAAMjO,EAAS8F,EAAK9F,QACd,MAACnM,EAAK,MAAEvR,EAAK,KAAEwJ,GAAQ6uC,GAAS36B,EAAQsG,EAAS2H,IACjD,KAAC7V,GAAO,EAAI,QAAE1N,GAAWujB,GAAU,CAAC,EAC1C,IAEI/qB,EAAG+c,EAAOm7B,EAAOt5B,EAAMJ,EAAM25B,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAAczvC,IAAWzJ,GAASoI,EAAUoB,EAAOC,EAAQA,IAAU8H,EACrE4nC,EAAQ,KACR35B,IAASJ,IACXrR,EAAIk2B,OAAO+U,EAAM55B,GACjBrR,EAAIk2B,OAAO+U,EAAMx5B,GACjBzR,EAAIk2B,OAAO+U,EAAMD,GACnB,EAMF,IAJIjjC,IACF6H,EAAQD,EAAOw7B,EAAW,IAC1BnrC,EAAIi2B,OAAOrmB,EAAMlV,EAAGkV,EAAMjV,IAEvB9H,EAAI,EAAGA,GAAK4I,IAAQ5I,EAAG,CAE1B,GADA+c,EAAQD,EAAOw7B,EAAWt4C,IACtB+c,EAAMG,KACR,SAEF,MAAMrV,EAAIkV,EAAMlV,EACVC,EAAIiV,EAAMjV,EACV0wC,EAAa,EAAJ3wC,EACX2wC,IAAWN,GACTpwC,EAAI8W,EACNA,EAAO9W,EACEA,EAAI0W,IACbA,EAAO1W,GAETswC,GAAQC,EAASD,EAAOvwC,KAAOwwC,IAE/BE,IACAprC,EAAIk2B,OAAOx7B,EAAGC,GACdowC,EAAQM,EACRH,EAAS,EACTz5B,EAAOJ,EAAO1W,GAEhBqwC,EAAQrwC,CACV,CACAywC,GACF,CACA,SAASE,GAAkB71B,GACzB,MAAMrb,EAAOqb,EAAKtc,QACZwwB,EAAavvB,EAAKuvB,YAAcvvB,EAAKuvB,WAAWh3B,OAChD44C,GAAe91B,EAAKM,aAAeN,EAAKtf,QAAUiE,EAAKgwC,SAA2C,aAAhChwC,EAAKiwC,yBAA0CjwC,EAAK+vC,UAAYxgB,EACxI,OAAO4hB,EAAcT,GAAkBF,EACzC,CACA,SAASY,GAAwBryC,GAC/B,OAAIA,EAAQgxC,QACH,KAELhxC,EAAQixC,SAA8C,aAAnCjxC,EAAQkxC,uBACtB,KAEF,IACT,CACA,SAASoB,GAAoBzrC,EAAKyV,EAAMxjB,EAAOuR,GAC7C,IAAIkoC,EAAOj2B,EAAKk2B,MACXD,IACHA,EAAOj2B,EAAKk2B,MAAQ,IAAIC,OACpBn2B,EAAKi2B,KAAKA,EAAMz5C,EAAOuR,IACzBkoC,EAAKnF,aAGTuD,GAAS9pC,EAAKyV,EAAKtc,SACnB6G,EAAIm2B,OAAOuV,EACb,CACA,SAASG,GAAiB7rC,EAAKyV,EAAMxjB,EAAOuR,GAC1C,MAAM,SAACsoC,EAAQ,QAAE3yC,GAAWsc,EACtBs2B,EAAgBT,GAAkB71B,GACxC,IAAK,MAAMQ,KAAW61B,EACpBhC,GAAS9pC,EAAK7G,EAAS8c,EAAQvB,OAC/B1U,EAAIg2B,YACA+V,EAAc/rC,EAAKyV,EAAMQ,EAAS,CAAChkB,QAAOqI,IAAKrI,EAAQuR,EAAQ,KACjExD,EAAIumC,YAENvmC,EAAIm2B,QAER,CA3JAiT,GAAWvsC,GAAK,MAChBusC,GAAW58B,SAAW,CACpBsH,YAAa,SACbiB,YAAa,OACbk0B,qBAAiBh4C,EACjB21C,aAAc,EACd7yB,YAAa,EACb1E,OAAQ,EACRiD,QAAS,EACTpB,WAAOjgB,GAETm4C,GAAW5iB,cAAgB,CACzB3R,gBAAiB,mBAgJnB,MAAMm3B,GAA8B,oBAAXJ,OACzB,SAAS94C,GAAKkN,EAAKyV,EAAMxjB,EAAOuR,GAC1BwoC,KAAcv2B,EAAKtc,QAAQ8c,QAC7Bw1B,GAAoBzrC,EAAKyV,EAAMxjB,EAAOuR,GAEtCqoC,GAAiB7rC,EAAKyV,EAAMxjB,EAAOuR,EAEvC,CACA,MAAMyoC,WAAoB9lB,GACxBz1B,YAAY8E,GACVsX,QACAnc,KAAKulB,UAAW,EAChBvlB,KAAKwI,aAAUlI,EACfN,KAAK8H,YAASxH,EACdN,KAAKwF,WAAQlF,EACbN,KAAK8nB,eAAYxnB,EACjBN,KAAKg7C,WAAQ16C,EACbN,KAAKu7C,aAAUj7C,EACfN,KAAKw7C,eAAYl7C,EACjBN,KAAKolB,YAAa,EAClBplB,KAAKy7C,gBAAiB,EACtBz7C,KAAKmlB,mBAAgB7kB,EACjBuE,GACFiC,OAAOqC,OAAOnJ,KAAM6E,EAExB,CACAmhB,oBAAoBlR,EAAW/D,GAC7B,MAAMvI,EAAUxI,KAAKwI,QACrB,IAAKA,EAAQixC,SAA8C,aAAnCjxC,EAAQkxC,0BAA2ClxC,EAAQgxC,UAAYx5C,KAAKy7C,eAAgB,CAClH,MAAMh2C,EAAO+C,EAAQgd,SAAWxlB,KAAKwF,MAAQxF,KAAK8nB,WAClD,QAA2B9nB,KAAKu7C,QAAS/yC,EAASsM,EAAWrP,EAAMsL,GACnE/Q,KAAKy7C,gBAAiB,CACxB,CACF,CACIz8B,WAAOA,GACThf,KAAKu7C,QAAUv8B,SACRhf,KAAKw7C,iBACLx7C,KAAKg7C,MACZh7C,KAAKy7C,gBAAiB,CACxB,CACIz8B,aACF,OAAOhf,KAAKu7C,OACd,CACIJ,eACF,OAAOn7C,KAAKw7C,YAAcx7C,KAAKw7C,WAAY,QAAiBx7C,KAAMA,KAAKwI,QAAQ8c,SACjF,CACAgS,QACE,MAAM6jB,EAAWn7C,KAAKm7C,SAChBn8B,EAAShf,KAAKgf,OACpB,OAAOm8B,EAASn5C,QAAUgd,EAAOm8B,EAAS,GAAG75C,MAC/C,CACA2b,OACE,MAAMk+B,EAAWn7C,KAAKm7C,SAChBn8B,EAAShf,KAAKgf,OACdnM,EAAQsoC,EAASn5C,OACvB,OAAO6Q,GAASmM,EAAOm8B,EAAStoC,EAAQ,GAAGlJ,IAC7C,CACA+xC,YAAYz8B,EAAO+nB,GACjB,MAAMx+B,EAAUxI,KAAKwI,QACfS,EAAQgW,EAAM+nB,GACdhoB,EAAShf,KAAKgf,OACdm8B,GAAW,QAAen7C,KAAM,CAACgnC,WAAU1lC,MAAO2H,EAAOU,IAAKV,IACpE,IAAKkyC,EAASn5C,OACZ,OAEF,MAAMo2B,EAAS,GACTujB,EAAed,GAAwBryC,GAC7C,IAAItG,EAAG4I,EACP,IAAK5I,EAAI,EAAG4I,EAAOqwC,EAASn5C,OAAQE,EAAI4I,IAAQ5I,EAAG,CACjD,MAAM,MAACZ,EAAK,IAAEqI,GAAOwxC,EAASj5C,GACxB+iC,EAAKjmB,EAAO1d,GACZ4jC,EAAKlmB,EAAOrV,GAClB,GAAIs7B,IAAOC,EAAI,CACb9M,EAAOn1B,KAAKgiC,GACZ,QACF,CACA,MAAM36B,EAAIlJ,KAAK2X,KAAK9P,EAAQg8B,EAAG+B,KAAc9B,EAAG8B,GAAY/B,EAAG+B,KACzD4U,EAAeD,EAAa1W,EAAIC,EAAI56B,EAAG9B,EAAQgxC,SACrDoC,EAAa5U,GAAY/nB,EAAM+nB,GAC/B5O,EAAOn1B,KAAK24C,EACd,CACA,OAAyB,IAAlBxjB,EAAOp2B,OAAeo2B,EAAO,GAAKA,CAC3C,CACA6hB,YAAY5qC,EAAKiW,EAAS2H,GACxB,MAAMmuB,EAAgBT,GAAkB36C,MACxC,OAAOo7C,EAAc/rC,EAAKrP,KAAMslB,EAAS2H,EAC3C,CACA8tB,KAAK1rC,EAAK/N,EAAOuR,GACf,MAAMsoC,EAAWn7C,KAAKm7C,SAChBC,EAAgBT,GAAkB36C,MACxC,IAAIyF,EAAOzF,KAAKwF,MAChBlE,EAAQA,GAAS,EACjBuR,EAAQA,GAAU7S,KAAKgf,OAAOhd,OAASV,EACvC,IAAK,MAAMgkB,KAAW61B,EACpB11C,GAAQ21C,EAAc/rC,EAAKrP,KAAMslB,EAAS,CAAChkB,QAAOqI,IAAKrI,EAAQuR,EAAQ,IAEzE,QAASpN,CACX,CACAtD,KAAKkN,EAAKyF,EAAWxT,EAAOuR,GAC1B,MAAMrK,EAAUxI,KAAKwI,SAAW,CAAC,EAC3BwW,EAAShf,KAAKgf,QAAU,GAC1BA,EAAOhd,QAAUwG,EAAQ4a,cAC3B/T,EAAIs1B,OACJxiC,GAAKkN,EAAKrP,KAAMsB,EAAOuR,GACvBxD,EAAIw1B,WAEF7kC,KAAKulB,WACPvlB,KAAKy7C,gBAAiB,EACtBz7C,KAAKg7C,WAAQ16C,EAEjB,EAyBF,SAASu7C,GAAUpyB,EAAIwC,EAAKxe,EAAMid,GAChC,MAAMliB,EAAUihB,EAAGjhB,SACZ,CAACiF,GAAOxE,GAASwgB,EAAGuB,SAAS,CAACvd,GAAOid,GAC5C,OAAQtpB,KAAK2X,IAAIkT,EAAMhjB,GAAST,EAAQuW,OAASvW,EAAQszC,SAC3D,CA3BAR,GAAYpvC,GAAK,OACjBovC,GAAYz/B,SAAW,CACrBw9B,eAAgB,OAChBrgB,WAAY,GACZC,iBAAkB,EAClBqf,gBAAiB,QACjBl1B,YAAa,EACb24B,iBAAiB,EACjBrC,uBAAwB,UACxBzxB,MAAM,EACNzC,UAAU,EACVg0B,SAAS,EACTC,QAAS,GAEX6B,GAAYzlB,cAAgB,CAC1B3R,gBAAiB,kBACjBE,YAAa,eAEfk3B,GAAY73B,YAAc,CACxBvc,aAAa,EACbD,WAAaE,GAAkB,eAATA,GAAkC,SAATA,GAQjD,MAAM60C,WAAqBxmB,GACzBz1B,YAAY8E,GACVsX,QACAnc,KAAKwI,aAAUlI,EACfN,KAAKoN,YAAS9M,EACdN,KAAKof,UAAO9e,EACZN,KAAKyD,UAAOnD,EACRuE,GACFiC,OAAOqC,OAAOnJ,KAAM6E,EAExB,CACAimB,QAAQmxB,EAAQC,EAAQxxB,GACtB,MAAMliB,EAAUxI,KAAKwI,SACf,EAACuB,EAAC,EAAEC,GAAKhK,KAAKgrB,SAAS,CAAC,IAAK,KAAMN,GACzC,OAAStpB,KAAKopB,IAAIyxB,EAASlyC,EAAG,GAAK3I,KAAKopB,IAAI0xB,EAASlyC,EAAG,GAAM5I,KAAKopB,IAAIhiB,EAAQszC,UAAYtzC,EAAQuW,OAAQ,EAC7G,CACAo9B,SAASF,EAAQvxB,GACf,OAAOmxB,GAAU77C,KAAMi8C,EAAQ,IAAKvxB,EACtC,CACA0xB,SAASF,EAAQxxB,GACf,OAAOmxB,GAAU77C,KAAMk8C,EAAQ,IAAKxxB,EACtC,CACAU,eAAeV,GACb,MAAM,EAAC3gB,EAAC,EAAEC,GAAKhK,KAAKgrB,SAAS,CAAC,IAAK,KAAMN,GACzC,MAAO,CAAC3gB,IAAGC,IACb,CACAd,KAAKV,GACHA,EAAUA,GAAWxI,KAAKwI,SAAW,CAAC,EACtC,IAAIuW,EAASvW,EAAQuW,QAAU,EAC/BA,EAAS3d,KAAKmC,IAAIwb,EAAQA,GAAUvW,EAAQ6zC,aAAe,GAC3D,MAAMj5B,EAAcrE,GAAUvW,EAAQ4a,aAAe,EACrD,OAAgC,GAAxBrE,EAASqE,EACnB,CACAjhB,KAAKkN,EAAKwF,GACR,MAAMrM,EAAUxI,KAAKwI,QACjBxI,KAAKof,MAAQ5W,EAAQuW,OAAS,MAAQ,OAAe/e,KAAM6U,EAAM7U,KAAKkJ,KAAKV,GAAW,KAG1F6G,EAAI8U,YAAc3b,EAAQ4b,YAC1B/U,EAAIgV,UAAY7b,EAAQ4a,YACxB/T,EAAI4U,UAAYzb,EAAQ0b,iBACxB,QAAU7U,EAAK7G,EAASxI,KAAK+J,EAAG/J,KAAKgK,GACvC,CACA0f,WACE,MAAMlhB,EAAUxI,KAAKwI,SAAW,CAAC,EACjC,OAAOA,EAAQuW,OAASvW,EAAQszC,SAClC,EAiBF,SAASQ,GAAaC,EAAK7xB,GACzB,MAAM,EAAC3gB,EAAC,EAAEC,EAAC,KAAEgR,EAAI,MAAE+B,EAAK,OAAED,GAAUy/B,EAAIvxB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWN,GACxF,IAAItgB,EAAMF,EAAOD,EAAKE,EAAQqyC,EAc9B,OAbID,EAAIxhC,YACNyhC,EAAO1/B,EAAS,EAChB1S,EAAOhJ,KAAKC,IAAI0I,EAAGiR,GACnB9Q,EAAQ9I,KAAKmC,IAAIwG,EAAGiR,GACpB/Q,EAAMD,EAAIwyC,EACVryC,EAASH,EAAIwyC,IAEbA,EAAOz/B,EAAQ,EACf3S,EAAOL,EAAIyyC,EACXtyC,EAAQH,EAAIyyC,EACZvyC,EAAM7I,KAAKC,IAAI2I,EAAGgR,GAClB7Q,EAAS/I,KAAKmC,IAAIyG,EAAGgR,IAEhB,CAAC5Q,OAAMH,MAAKC,QAAOC,SAC5B,CACA,SAASsyC,GAAYr9B,EAAMnW,EAAO5H,EAAKkC,GACrC,OAAO6b,EAAO,GAAI,OAAYnW,EAAO5H,EAAKkC,EAC5C,CACA,SAASm5C,GAAiBH,EAAKI,EAAMC,GACnC,MAAM3zC,EAAQszC,EAAI/zC,QAAQ4a,YACpBhE,EAAOm9B,EAAIphC,cACX66B,GAAI,QAAO/sC,GACjB,MAAO,CACLqB,EAAGmyC,GAAYr9B,EAAKnV,IAAK+rC,EAAE/rC,IAAK,EAAG2yC,GACnCp7C,EAAGi7C,GAAYr9B,EAAKlV,MAAO8rC,EAAE9rC,MAAO,EAAGyyC,GACvCpyC,EAAGkyC,GAAYr9B,EAAKjV,OAAQ6rC,EAAE7rC,OAAQ,EAAGyyC,GACzCpyC,EAAGiyC,GAAYr9B,EAAKhV,KAAM4rC,EAAE5rC,KAAM,EAAGuyC,GAEzC,CACA,SAASE,GAAkBN,EAAKI,EAAMC,GACpC,MAAM,mBAACxhC,GAAsBmhC,EAAIvxB,SAAS,CAAC,uBACrC/hB,EAAQszC,EAAI/zC,QAAQytC,aACpBD,GAAI,QAAc/sC,GAClB6zC,EAAO17C,KAAKC,IAAIs7C,EAAMC,GACtBx9B,EAAOm9B,EAAIphC,cACX4hC,EAAe3hC,IAAsB,IAAAlZ,GAAS+G,GACpD,MAAO,CACL+zC,QAASP,IAAaM,GAAgB39B,EAAKnV,KAAOmV,EAAKhV,KAAM4rC,EAAEgH,QAAS,EAAGF,GAC3EG,SAAUR,IAAaM,GAAgB39B,EAAKnV,KAAOmV,EAAKlV,MAAO8rC,EAAEiH,SAAU,EAAGH,GAC9EI,WAAYT,IAAaM,GAAgB39B,EAAKjV,QAAUiV,EAAKhV,KAAM4rC,EAAEkH,WAAY,EAAGJ,GACpFK,YAAaV,IAAaM,GAAgB39B,EAAKjV,QAAUiV,EAAKlV,MAAO8rC,EAAEmH,YAAa,EAAGL,GAE3F,CACA,SAASM,GAAcb,GACrB,MAAM9jB,EAAS6jB,GAAaC,GACtBx/B,EAAQ0b,EAAOvuB,MAAQuuB,EAAOruB,KAC9B0S,EAAS2b,EAAOtuB,OAASsuB,EAAOxuB,IAChC4b,EAAS62B,GAAiBH,EAAKx/B,EAAQ,EAAGD,EAAS,GACnDiC,EAAS89B,GAAkBN,EAAKx/B,EAAQ,EAAGD,EAAS,GAC1D,MAAO,CACLugC,MAAO,CACLtzC,EAAG0uB,EAAOruB,KACVJ,EAAGyuB,EAAOxuB,IACVwkB,EAAG1R,EACH4R,EAAG7R,EACHiC,UAEFs5B,MAAO,CACLtuC,EAAG0uB,EAAOruB,KAAOyb,EAAOrb,EACxBR,EAAGyuB,EAAOxuB,IAAM4b,EAAOvb,EACvBmkB,EAAG1R,EAAQ8I,EAAOrb,EAAIqb,EAAOrkB,EAC7BmtB,EAAG7R,EAAS+I,EAAOvb,EAAIub,EAAOtb,EAC9BwU,OAAQ,CACNi+B,QAAS57C,KAAKmC,IAAI,EAAGwb,EAAOi+B,QAAU57C,KAAKmC,IAAIsiB,EAAOvb,EAAGub,EAAOrb,IAChEyyC,SAAU77C,KAAKmC,IAAI,EAAGwb,EAAOk+B,SAAW77C,KAAKmC,IAAIsiB,EAAOvb,EAAGub,EAAOrkB,IAClE07C,WAAY97C,KAAKmC,IAAI,EAAGwb,EAAOm+B,WAAa97C,KAAKmC,IAAIsiB,EAAOtb,EAAGsb,EAAOrb,IACtE2yC,YAAa/7C,KAAKmC,IAAI,EAAGwb,EAAOo+B,YAAc/7C,KAAKmC,IAAIsiB,EAAOtb,EAAGsb,EAAOrkB,MAIhF,CACA,SAASspB,GAAQyxB,EAAKxyC,EAAGC,EAAG0gB,GAC1B,MAAM4yB,EAAc,OAANvzC,EACRwzC,EAAc,OAANvzC,EACRwzC,EAAWF,GAASC,EACpB9kB,EAAS8jB,IAAQiB,GAAYlB,GAAaC,EAAK7xB,GACrD,OAAO+N,IACH6kB,IAAS,QAAWvzC,EAAG0uB,EAAOruB,KAAMquB,EAAOvuB,UAC3CqzC,IAAS,QAAWvzC,EAAGyuB,EAAOxuB,IAAKwuB,EAAOtuB,QAChD,CACA,SAASszC,GAAU1+B,GACjB,OAAOA,EAAOi+B,SAAWj+B,EAAOk+B,UAAYl+B,EAAOm+B,YAAcn+B,EAAOo+B,WAC1E,CACA,SAASO,GAAkBruC,EAAKsuC,GAC9BtuC,EAAIsuC,KAAKA,EAAK5zC,EAAG4zC,EAAK3zC,EAAG2zC,EAAKlvB,EAAGkvB,EAAKhvB,EACxC,CACA,SAASivB,GAAYD,EAAMj1B,EAAQm1B,EAAU,CAAC,GAC5C,MAAM9zC,EAAI4zC,EAAK5zC,IAAM8zC,EAAQ9zC,GAAK2e,EAAS,EACrC1e,EAAI2zC,EAAK3zC,IAAM6zC,EAAQ7zC,GAAK0e,EAAS,EACrC+F,GAAKkvB,EAAK5zC,EAAI4zC,EAAKlvB,IAAMovB,EAAQ9zC,EAAI8zC,EAAQpvB,EAAI/F,EAAS,GAAK3e,EAC/D4kB,GAAKgvB,EAAK3zC,EAAI2zC,EAAKhvB,IAAMkvB,EAAQ7zC,EAAI6zC,EAAQlvB,EAAIjG,EAAS,GAAK1e,EACrE,MAAO,CACLD,EAAG4zC,EAAK5zC,EAAIA,EACZC,EAAG2zC,EAAK3zC,EAAIA,EACZykB,EAAGkvB,EAAKlvB,EAAIA,EACZE,EAAGgvB,EAAKhvB,EAAIA,EACZ5P,OAAQ4+B,EAAK5+B,OAEjB,CApHAi9B,GAAa9vC,GAAK,QAClB8vC,GAAangC,SAAW,CACtBuH,YAAa,EACb04B,UAAW,EACXz4B,iBAAkB,EAClBg5B,YAAa,EACbx4B,WAAY,SACZ9E,OAAQ,EACRO,SAAU,GAEZ08B,GAAanmB,cAAgB,CAC3B3R,gBAAiB,kBACjBE,YAAa,eAyGf,MAAM05B,WAAmBtoB,GACvBz1B,YAAY8E,GACVsX,QACAnc,KAAKwI,aAAUlI,EACfN,KAAK+a,gBAAaza,EAClBN,KAAKgb,UAAO1a,EACZN,KAAK+c,WAAQzc,EACbN,KAAK8c,YAASxc,EACdN,KAAK4b,mBAAgBtb,EACjBuE,GACFiC,OAAOqC,OAAOnJ,KAAM6E,EAExB,CACA1C,KAAKkN,GACH,MAAM,cAACuM,EAAepT,SAAS,YAAC4b,EAAW,gBAAEF,IAAoBlkB,MAC3D,MAACq4C,EAAK,MAAEgF,GAASD,GAAcp9C,MAC/B+9C,EAAcN,GAAUJ,EAAMt+B,QAAU,KAAqB2+B,GACnEruC,EAAIs1B,OACA0Y,EAAM5uB,IAAM4pB,EAAM5pB,GAAK4uB,EAAM1uB,IAAM0pB,EAAM1pB,IAC3Ctf,EAAIg2B,YACJ0Y,EAAY1uC,EAAKuuC,GAAYP,EAAOzhC,EAAey8B,IACnDhpC,EAAIsF,OACJopC,EAAY1uC,EAAKuuC,GAAYvF,GAAQz8B,EAAeyhC,IACpDhuC,EAAI4U,UAAYG,EAChB/U,EAAI4Y,KAAK,YAEX5Y,EAAIg2B,YACJ0Y,EAAY1uC,EAAKuuC,GAAYvF,EAAOz8B,IACpCvM,EAAI4U,UAAYC,EAChB7U,EAAI4Y,OACJ5Y,EAAIw1B,SACN,CACA/Z,QAAQmxB,EAAQC,EAAQxxB,GACtB,OAAOI,GAAQ9qB,KAAMi8C,EAAQC,EAAQxxB,EACvC,CACAyxB,SAASF,EAAQvxB,GACf,OAAOI,GAAQ9qB,KAAMi8C,EAAQ,KAAMvxB,EACrC,CACA0xB,SAASF,EAAQxxB,GACf,OAAOI,GAAQ9qB,KAAM,KAAMk8C,EAAQxxB,EACrC,CACAU,eAAeV,GACb,MAAM,EAAC3gB,EAAC,EAAEC,EAAC,KAAEgR,EAAI,WAAED,GAAc/a,KAAKgrB,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAeN,GACjF,MAAO,CACL3gB,EAAGgR,GAAchR,EAAIiR,GAAQ,EAAIjR,EACjCC,EAAG+Q,EAAa/Q,GAAKA,EAAIgR,GAAQ,EAErC,CACA0O,SAASjc,GACP,MAAgB,MAATA,EAAezN,KAAK+c,MAAQ,EAAI/c,KAAK8c,OAAS,CACvD,EAEFghC,GAAW5xC,GAAK,MAChB4xC,GAAWjiC,SAAW,CACpBV,cAAe,QACfiI,YAAa,EACb6yB,aAAc,EACdr6B,cAAe,OACfiI,gBAAYvjB,GAEdw9C,GAAWjoB,cAAgB,CACzB3R,gBAAiB,kBACjBE,YAAa,eAitBf,MAAM45B,GAAa,CAACC,EAAWjY,KAC7B,IAAI,UAACkY,EAAYlY,EAAQ,SAAEmY,EAAWnY,GAAYiY,EAKlD,OAJIA,EAAUG,gBACZF,EAAY98C,KAAKC,IAAI68C,EAAWlY,GAChCmY,EAAW/8C,KAAKC,IAAI88C,EAAUnY,IAEzB,CACLmY,WACAD,YACAG,WAAYj9C,KAAKmC,IAAIyiC,EAAUkY,GAChC,EAEGI,GAAa,CAAC5lC,EAAGnO,IAAY,OAANmO,GAAoB,OAANnO,GAAcmO,EAAErN,eAAiBd,EAAEc,cAAgBqN,EAAE3N,QAAUR,EAAEQ,MAC5G,MAAMwzC,WAAe/oB,GACnBz1B,YAAY8H,GACVsU,QACAnc,KAAKw+C,QAAS,EACdx+C,KAAKy+C,eAAiB,GACtBz+C,KAAK0+C,aAAe,KACpB1+C,KAAK2+C,cAAe,EACpB3+C,KAAKQ,MAAQqH,EAAOrH,MACpBR,KAAKwI,QAAUX,EAAOW,QACtBxI,KAAKqP,IAAMxH,EAAOwH,IAClBrP,KAAK4+C,iBAAct+C,EACnBN,KAAK6+C,iBAAcv+C,EACnBN,KAAK8+C,gBAAax+C,EAClBN,KAAKkiB,eAAY5hB,EACjBN,KAAKiiB,cAAW3hB,EAChBN,KAAKiK,SAAM3J,EACXN,KAAKmK,YAAS7J,EACdN,KAAKoK,UAAO9J,EACZN,KAAKkK,WAAQ5J,EACbN,KAAK8c,YAASxc,EACdN,KAAK+c,WAAQzc,EACbN,KAAK67B,cAAWv7B,EAChBN,KAAK4pB,cAAWtpB,EAChBN,KAAKwjB,YAASljB,EACdN,KAAKqtB,cAAW/sB,CAClB,CACA0F,OAAOic,EAAUC,EAAWsb,GAC1Bx9B,KAAKiiB,SAAWA,EAChBjiB,KAAKkiB,UAAYA,EACjBliB,KAAK67B,SAAW2B,EAChBx9B,KAAK29B,gBACL39B,KAAK++C,cACL/+C,KAAK2+B,KACP,CACAhB,gBACM39B,KAAK6a,gBACP7a,KAAK+c,MAAQ/c,KAAKiiB,SAClBjiB,KAAKoK,KAAOpK,KAAK67B,SAASzxB,KAC1BpK,KAAKkK,MAAQlK,KAAK+c,QAElB/c,KAAK8c,OAAS9c,KAAKkiB,UACnBliB,KAAKiK,IAAMjK,KAAK67B,SAAS5xB,IACzBjK,KAAKmK,OAASnK,KAAK8c,OAEvB,CACAiiC,cACE,MAAMd,EAAYj+C,KAAKwI,QAAQ6K,QAAU,CAAC,EAC1C,IAAIurC,GAAc,OAASX,EAAUr6B,eAAgB,CAAC5jB,KAAKQ,OAAQR,OAAS,GACxEi+C,EAAUjwC,SACZ4wC,EAAcA,EAAY5wC,QAAQ/L,GAASg8C,EAAUjwC,OAAO/L,EAAMjC,KAAKQ,MAAMiL,SAE3EwyC,EAAUxlC,OACZmmC,EAAcA,EAAYnmC,MAAK,CAACC,EAAGnO,IAAM0zC,EAAUxlC,KAAKC,EAAGnO,EAAGvK,KAAKQ,MAAMiL,SAEvEzL,KAAKwI,QAAQkB,SACfk1C,EAAYl1C,UAEd1J,KAAK4+C,YAAcA,CACrB,CACAjgB,MACE,MAAM,QAACn2B,EAAO,IAAE6G,GAAOrP,KACvB,IAAKwI,EAAQif,QAEX,YADAznB,KAAK+c,MAAQ/c,KAAK8c,OAAS,GAG7B,MAAMmhC,EAAYz1C,EAAQ6K,OACpB2rC,GAAY,OAAOf,EAAU/iB,MAC7B8K,EAAWgZ,EAAU91C,KACrBg3B,EAAclgC,KAAKi/C,uBACnB,SAACd,EAAQ,WAAEE,GAAcL,GAAWC,EAAWjY,GACrD,IAAIjpB,EAAOD,EACXzN,EAAI6rB,KAAO8jB,EAAUxd,OACjBxhC,KAAK6a,gBACPkC,EAAQ/c,KAAKiiB,SACbnF,EAAS9c,KAAKk/C,SAAShf,EAAa8F,EAAUmY,EAAUE,GAAc,KAEtEvhC,EAAS9c,KAAKkiB,UACdnF,EAAQ/c,KAAKm/C,SAASjf,EAAa8F,EAAUmY,EAAUE,GAAc,IAEvEr+C,KAAK+c,MAAQ3b,KAAKC,IAAI0b,EAAOvU,EAAQyZ,UAAYjiB,KAAKiiB,UACtDjiB,KAAK8c,OAAS1b,KAAKC,IAAIyb,EAAQtU,EAAQ0Z,WAAaliB,KAAKkiB,UAC3D,CACAg9B,SAAShf,EAAa8F,EAAUmY,EAAUE,GACxC,MAAM,IAAChvC,EAAG,SAAE4S,EAAUzZ,SAAU6K,QAAQ,QAACsc,KAAa3vB,KAChDo/C,EAAWp/C,KAAKy+C,eAAiB,GACjCK,EAAa9+C,KAAK8+C,WAAa,CAAC,GAChC1jB,EAAaijB,EAAa1uB,EAChC,IAAI0vB,EAAcnf,EAClB7wB,EAAIu0B,UAAY,OAChBv0B,EAAI00B,aAAe,SACnB,IAAIub,GAAO,EACPr1C,GAAOmxB,EAYX,OAXAp7B,KAAK4+C,YAAY59C,SAAQ,CAACujB,EAAYriB,KACpC,MAAMq9C,EAAYpB,EAAYnY,EAAW,EAAK32B,EAAImwC,YAAYj7B,EAAWP,MAAMjH,OACrE,IAAN7a,GAAW48C,EAAWA,EAAW98C,OAAS,GAAKu9C,EAAY,EAAI5vB,EAAU1N,KAC3Eo9B,GAAejkB,EACf0jB,EAAWA,EAAW98C,QAAUE,EAAI,EAAI,EAAI,IAAM,EAClD+H,GAAOmxB,EACPkkB,KAEFF,EAASl9C,GAAK,CAACkI,KAAM,EAAGH,MAAKq1C,MAAKviC,MAAOwiC,EAAWziC,OAAQuhC,GAC5DS,EAAWA,EAAW98C,OAAS,IAAMu9C,EAAY5vB,CAAO,IAEnD0vB,CACT,CACAF,SAASjf,EAAa8F,EAAUmY,EAAUE,GACxC,MAAM,IAAChvC,EAAG,UAAE6S,EAAW1Z,SAAU6K,QAAQ,QAACsc,KAAa3vB,KACjDo/C,EAAWp/C,KAAKy+C,eAAiB,GACjCI,EAAc7+C,KAAK6+C,YAAc,GACjCY,EAAcv9B,EAAYge,EAChC,IAAIwf,EAAa/vB,EACbgwB,EAAkB,EAClBC,EAAmB,EACnBx1C,EAAO,EACPy1C,EAAM,EAgBV,OAfA7/C,KAAK4+C,YAAY59C,SAAQ,CAACujB,EAAYriB,KACpC,MAAMq9C,EAAYpB,EAAYnY,EAAW,EAAK32B,EAAImwC,YAAYj7B,EAAWP,MAAMjH,MAC3E7a,EAAI,GAAK09C,EAAmBvB,EAAa,EAAI1uB,EAAU8vB,IACzDC,GAAcC,EAAkBhwB,EAChCkvB,EAAY57C,KAAK,CAAC8Z,MAAO4iC,EAAiB7iC,OAAQ8iC,IAClDx1C,GAAQu1C,EAAkBhwB,EAC1BkwB,IACAF,EAAkBC,EAAmB,GAEvCR,EAASl9C,GAAK,CAACkI,OAAMH,IAAK21C,EAAkBC,MAAK9iC,MAAOwiC,EAAWziC,OAAQuhC,GAC3EsB,EAAkBv+C,KAAKmC,IAAIo8C,EAAiBJ,GAC5CK,GAAoBvB,EAAa1uB,CAAO,IAE1C+vB,GAAcC,EACdd,EAAY57C,KAAK,CAAC8Z,MAAO4iC,EAAiB7iC,OAAQ8iC,IAC3CF,CACT,CACAI,iBACE,IAAK9/C,KAAKwI,QAAQif,QAChB,OAEF,MAAMyY,EAAclgC,KAAKi/C,uBAClBR,eAAgBW,EAAU52C,SAAS,MAACmxB,EAAOtmB,QAAQ,QAACsc,GAAQ,IAAEowB,IAAQ//C,KACvEggD,GAAY,QAAcD,EAAK//C,KAAKoK,KAAMpK,KAAK+c,OACrD,GAAI/c,KAAK6a,eAAgB,CACvB,IAAIykC,EAAM,EACNl1C,GAAO,QAAeuvB,EAAO35B,KAAKoK,KAAOulB,EAAS3vB,KAAKkK,MAAQlK,KAAK8+C,WAAWQ,IACnF,IAAK,MAAMW,KAAUb,EACfE,IAAQW,EAAOX,MACjBA,EAAMW,EAAOX,IACbl1C,GAAO,QAAeuvB,EAAO35B,KAAKoK,KAAOulB,EAAS3vB,KAAKkK,MAAQlK,KAAK8+C,WAAWQ,KAEjFW,EAAOh2C,KAAOjK,KAAKiK,IAAMi2B,EAAcvQ,EACvCswB,EAAO71C,KAAO41C,EAAUE,WAAWF,EAAUj2C,EAAEK,GAAO61C,EAAOljC,OAC7D3S,GAAQ61C,EAAOljC,MAAQ4S,CAE3B,KAAO,CACL,IAAIkwB,EAAM,EACN51C,GAAM,QAAe0vB,EAAO35B,KAAKiK,IAAMi2B,EAAcvQ,EAAS3vB,KAAKmK,OAASnK,KAAK6+C,YAAYgB,GAAK/iC,QACtG,IAAK,MAAMmjC,KAAUb,EACfa,EAAOJ,MAAQA,IACjBA,EAAMI,EAAOJ,IACb51C,GAAM,QAAe0vB,EAAO35B,KAAKiK,IAAMi2B,EAAcvQ,EAAS3vB,KAAKmK,OAASnK,KAAK6+C,YAAYgB,GAAK/iC,SAEpGmjC,EAAOh2C,IAAMA,EACbg2C,EAAO71C,MAAQpK,KAAKoK,KAAOulB,EAC3BswB,EAAO71C,KAAO41C,EAAUE,WAAWF,EAAUj2C,EAAEk2C,EAAO71C,MAAO61C,EAAOljC,OACpE9S,GAAOg2C,EAAOnjC,OAAS6S,CAE3B,CACF,CACA9U,eACE,MAAiC,QAA1B7a,KAAKwI,QAAQohB,UAAgD,WAA1B5pB,KAAKwI,QAAQohB,QACzD,CACAznB,OACE,GAAInC,KAAKwI,QAAQif,QAAS,CACxB,MAAMpY,EAAMrP,KAAKqP,KACjB,OAASA,EAAKrP,MACdA,KAAKmgD,SACL,OAAW9wC,EACb,CACF,CACA8wC,QACE,MAAO33C,QAASiB,EAAI,YAAEo1C,EAAW,WAAEC,EAAU,IAAEzvC,GAAOrP,MAChD,MAAC25B,EAAOtmB,OAAQ4qC,GAAax0C,EAC7B22C,EAAe,EAAAx5C,EAAA,MACfo5C,GAAY,QAAcv2C,EAAKs2C,IAAK//C,KAAKoK,KAAMpK,KAAK+c,OACpDiiC,GAAY,OAAOf,EAAU/iB,OAC5B92B,MAAOi8C,EAAS,QAAE1wB,GAAWsuB,EAC9BjY,EAAWgZ,EAAU91C,KACrBo3C,EAAeta,EAAW,EAChC,IAAIua,EACJvgD,KAAK2lC,YACLt2B,EAAIu0B,UAAYoc,EAAUpc,UAAU,QACpCv0B,EAAI00B,aAAe,SACnB10B,EAAIgV,UAAY,GAChBhV,EAAI6rB,KAAO8jB,EAAUxd,OACrB,MAAM,SAAC2c,EAAQ,UAAED,EAAS,WAAEG,GAAcL,GAAWC,EAAWjY,GAC1Dwa,EAAgB,SAASz2C,EAAGC,EAAGua,GACnC,GAAInH,MAAM+gC,IAAaA,GAAY,GAAK/gC,MAAM8gC,IAAcA,EAAY,EACtE,OAEF7uC,EAAIs1B,OACJ,MAAMtgB,GAAY,IAAA1c,GAAe4c,EAAWF,UAAW,GAQvD,GAPAhV,EAAI4U,WAAY,IAAAtc,GAAe4c,EAAWN,UAAWm8B,GACrD/wC,EAAI+pC,SAAU,IAAAzxC,GAAe4c,EAAW60B,QAAS,QACjD/pC,EAAI+1B,gBAAiB,IAAAz9B,GAAe4c,EAAW6gB,eAAgB,GAC/D/1B,EAAIkpC,UAAW,IAAA5wC,GAAe4c,EAAWg0B,SAAU,SACnDlpC,EAAIgV,UAAYA,EAChBhV,EAAI8U,aAAc,IAAAxc,GAAe4c,EAAWJ,YAAai8B,GACzD/wC,EAAI81B,aAAY,IAAAx9B,GAAe4c,EAAWk8B,SAAU,KAChDxC,EAAUG,cAAe,CAC3B,MAAMsC,EAAc,CAClB3hC,OAAQo/B,EAAW/8C,KAAKu/C,MAAQ,EAChC98B,WAAYU,EAAWV,WACvBvE,SAAUiF,EAAWjF,SACrB8D,YAAaiB,GAETxB,EAAUm9B,EAAUY,MAAM72C,EAAGo0C,EAAW,GACxCr7B,EAAU9Y,EAAIs2C,GACpB,QAAUjxC,EAAKqxC,EAAa79B,EAASC,EACvC,KAAO,CACL,MAAM+9B,EAAU72C,EAAI5I,KAAKmC,KAAKyiC,EAAWkY,GAAa,EAAG,GACnD4C,EAAWd,EAAUE,WAAWn2C,EAAGo0C,GACnClI,GAAe,QAAc1xB,EAAW0xB,cAC9C5mC,EAAIg2B,YACAv+B,OAAOwB,OAAO2tC,GAAchM,MAAKtiC,GAAW,IAANA,KACxC,QAAmB0H,EAAK,CACtBtF,EAAG+2C,EACH92C,EAAG62C,EACHpyB,EAAG0vB,EACHxvB,EAAGuvB,EACHn/B,OAAQk3B,IAGV5mC,EAAIsuC,KAAKmD,EAAUD,EAAS1C,EAAUD,GAExC7uC,EAAI4Y,OACc,IAAd5D,GACFhV,EAAIm2B,QAER,CACAn2B,EAAIw1B,SACN,EACMkc,EAAW,SAASh3C,EAAGC,EAAGua,IAC9B,OAAWlV,EAAKkV,EAAWP,KAAMja,EAAGC,EAAKq0C,EAAa,EAAIW,EAAW,CACnEgC,cAAez8B,EAAWtV,OAC1B20B,UAAWoc,EAAUpc,UAAUrf,EAAWqf,YAE9C,EACM/oB,EAAe7a,KAAK6a,eACpBqlB,EAAclgC,KAAKi/C,sBAEvBsB,EADE1lC,EACO,CACP9Q,GAAG,QAAe4vB,EAAO35B,KAAKoK,KAAOulB,EAAS3vB,KAAKkK,MAAQ40C,EAAW,IACtE90C,EAAGhK,KAAKiK,IAAM0lB,EAAUuQ,EACxBpb,KAAM,GAGC,CACP/a,EAAG/J,KAAKoK,KAAOulB,EACf3lB,GAAG,QAAe2vB,EAAO35B,KAAKiK,IAAMi2B,EAAcvQ,EAAS3vB,KAAKmK,OAAS00C,EAAY,GAAG/hC,QACxFgI,KAAM,IAGV,QAAsB9kB,KAAKqP,IAAK5F,EAAKw3C,eACrC,MAAM7lB,EAAaijB,EAAa1uB,EAChC3vB,KAAK4+C,YAAY59C,SAAQ,CAACujB,EAAYriB,KACpCmN,EAAI8U,YAAcI,EAAW87B,WAAaA,EAC1ChxC,EAAI4U,UAAYM,EAAW87B,WAAaA,EACxC,MAAMa,EAAY7xC,EAAImwC,YAAYj7B,EAAWP,MAAMjH,MAC7C6mB,EAAYoc,EAAUpc,UAAUrf,EAAWqf,YAAcrf,EAAWqf,UAAYqa,EAAUra,YAC1F7mB,EAAQohC,EAAWmC,EAAeY,EACxC,IAAIn3C,EAAIw2C,EAAOx2C,EACXC,EAAIu2C,EAAOv2C,EACfg2C,EAAUmB,SAASnhD,KAAK+c,OACpBlC,EACE3Y,EAAI,GAAK6H,EAAIgT,EAAQ4S,EAAU3vB,KAAKkK,QACtCF,EAAIu2C,EAAOv2C,GAAKoxB,EAChBmlB,EAAOz7B,OACP/a,EAAIw2C,EAAOx2C,GAAI,QAAe4vB,EAAO35B,KAAKoK,KAAOulB,EAAS3vB,KAAKkK,MAAQ40C,EAAWyB,EAAOz7B,QAElF5iB,EAAI,GAAK8H,EAAIoxB,EAAap7B,KAAKmK,SACxCJ,EAAIw2C,EAAOx2C,EAAIA,EAAI80C,EAAY0B,EAAOz7B,MAAM/H,MAAQ4S,EACpD4wB,EAAOz7B,OACP9a,EAAIu2C,EAAOv2C,GAAI,QAAe2vB,EAAO35B,KAAKiK,IAAMi2B,EAAcvQ,EAAS3vB,KAAKmK,OAAS00C,EAAY0B,EAAOz7B,MAAMhI,SAEhH,MAAMskC,EAAQpB,EAAUj2C,EAAEA,GAC1By2C,EAAcY,EAAOp3C,EAAGua,GACxBxa,GAAI,QAAO65B,EAAW75B,EAAIo0C,EAAWmC,EAAczlC,EAAe9Q,EAAIgT,EAAQ/c,KAAKkK,MAAOT,EAAKs2C,KAC/FgB,EAASf,EAAUj2C,EAAEA,GAAIC,EAAGua,GACxB1J,EACF0lC,EAAOx2C,GAAKgT,EAAQ4S,EAEpB4wB,EAAOv2C,GAAKoxB,CACd,KAEF,QAAqBp7B,KAAKqP,IAAK5F,EAAKw3C,cACtC,CACAtb,YACE,MAAMl8B,EAAOzJ,KAAKwI,QACZw3B,EAAYv2B,EAAKwX,MACjBogC,GAAY,OAAOrhB,EAAU9E,MAC7BomB,GAAe,OAAUthB,EAAUrQ,SACzC,IAAKqQ,EAAUvY,QACb,OAEF,MAAMu4B,GAAY,QAAcv2C,EAAKs2C,IAAK//C,KAAKoK,KAAMpK,KAAK+c,OACpD1N,EAAMrP,KAAKqP,IACXua,EAAWoW,EAAUpW,SACrB02B,EAAee,EAAUn4C,KAAO,EAChCq4C,EAA6BD,EAAar3C,IAAMq2C,EACtD,IAAIt2C,EACAI,EAAOpK,KAAKoK,KACZ6X,EAAWjiB,KAAK+c,MACpB,GAAI/c,KAAK6a,eACPoH,EAAW7gB,KAAKmC,OAAOvD,KAAK8+C,YAC5B90C,EAAIhK,KAAKiK,IAAMs3C,EACfn3C,GAAO,QAAeX,EAAKkwB,MAAOvvB,EAAMpK,KAAKkK,MAAQ+X,OAChD,CACL,MAAMC,EAAYliB,KAAK6+C,YAAYz7C,QAAO,CAACC,EAAK6F,IAAS9H,KAAKmC,IAAIF,EAAK6F,EAAK4T,SAAS,GACrF9S,EAAIu3C,GAA6B,QAAe93C,EAAKkwB,MAAO35B,KAAKiK,IAAKjK,KAAKmK,OAAS+X,EAAYzY,EAAK4J,OAAOsc,QAAU3vB,KAAKi/C,sBAC7H,CACA,MAAMl1C,GAAI,QAAe6f,EAAUxf,EAAMA,EAAO6X,GAChD5S,EAAIu0B,UAAYoc,EAAUpc,WAAU,QAAmBha,IACvDva,EAAI00B,aAAe,SACnB10B,EAAI8U,YAAc6b,EAAU57B,MAC5BiL,EAAI4U,UAAY+b,EAAU57B,MAC1BiL,EAAI6rB,KAAOmmB,EAAU7f,QACrB,OAAWnyB,EAAK2wB,EAAUhc,KAAMja,EAAGC,EAAGq3C,EACxC,CACApC,sBACE,MAAMjf,EAAYhgC,KAAKwI,QAAQyY,MACzBogC,GAAY,OAAOrhB,EAAU9E,MAC7BomB,GAAe,OAAUthB,EAAUrQ,SACzC,OAAOqQ,EAAUvY,QAAU45B,EAAUjmB,WAAakmB,EAAaxkC,OAAS,CAC1E,CACA0kC,iBAAiBz3C,EAAGC,GAClB,IAAI9H,EAAGu/C,EAAQC,EACf,IAAI,QAAW33C,EAAG/J,KAAKoK,KAAMpK,KAAKkK,SAC7B,QAAWF,EAAGhK,KAAKiK,IAAKjK,KAAKmK,QAEhC,IADAu3C,EAAK1hD,KAAKy+C,eACLv8C,EAAI,EAAGA,EAAIw/C,EAAG1/C,SAAUE,EAE3B,GADAu/C,EAASC,EAAGx/C,IACR,QAAW6H,EAAG03C,EAAOr3C,KAAMq3C,EAAOr3C,KAAOq3C,EAAO1kC,SAC/C,QAAW/S,EAAGy3C,EAAOx3C,IAAKw3C,EAAOx3C,IAAMw3C,EAAO3kC,QACjD,OAAO9c,KAAK4+C,YAAY18C,GAI9B,OAAO,IACT,CACAy/C,YAAYx8C,GACV,MAAMsE,EAAOzJ,KAAKwI,QAClB,IAAKo5C,GAAWz8C,EAAExE,KAAM8I,GACtB,OAEF,MAAMo4C,EAAc7hD,KAAKwhD,iBAAiBr8C,EAAE4E,EAAG5E,EAAE6E,GACjD,GAAe,cAAX7E,EAAExE,MAAmC,aAAXwE,EAAExE,KAAqB,CACnD,MAAM24C,EAAWt5C,KAAK0+C,aAChBoD,EAAWxD,GAAWhF,EAAUuI,GAClCvI,IAAawI,IACf,OAASr4C,EAAKs4C,QAAS,CAAC58C,EAAGm0C,EAAUt5C,MAAOA,MAE9CA,KAAK0+C,aAAemD,EAChBA,IAAgBC,IAClB,OAASr4C,EAAK6rC,QAAS,CAACnwC,EAAG08C,EAAa7hD,MAAOA,KAEnD,MAAW6hD,IACT,OAASp4C,EAAK6a,QAAS,CAACnf,EAAG08C,EAAa7hD,MAAOA,KAEnD,EAEF,SAAS4hD,GAAWjhD,EAAM8I,GACxB,QAAc,cAAT9I,GAAiC,aAATA,IAAyB8I,EAAK6rC,UAAW7rC,EAAKs4C,aAGvEt4C,EAAK6a,SAAqB,UAAT3jB,GAA6B,YAATA,EAI3C,CACA,IAAIqhD,GAAgB,CAClB91C,GAAI,SACJ+1C,SAAU1D,GACVj9C,MAAMd,EAAO0hD,EAAO15C,GAClB,MAAMmb,EAASnjB,EAAMmjB,OAAS,IAAI46B,GAAO,CAAClvC,IAAK7O,EAAM6O,IAAK7G,UAAShI,UACnEmsB,GAAQ3kB,UAAUxH,EAAOmjB,EAAQnb,GACjCmkB,GAAQkD,OAAOrvB,EAAOmjB,EACxB,EACAlgB,KAAKjD,GACHmsB,GAAQqD,UAAUxvB,EAAOA,EAAMmjB,eACxBnjB,EAAMmjB,MACf,EACA4Z,aAAa/8B,EAAO0hD,EAAO15C,GACzB,MAAMmb,EAASnjB,EAAMmjB,OACrBgJ,GAAQ3kB,UAAUxH,EAAOmjB,EAAQnb,GACjCmb,EAAOnb,QAAUA,CACnB,EACAq2B,YAAYr+B,GACV,MAAMmjB,EAASnjB,EAAMmjB,OACrBA,EAAOo7B,cACPp7B,EAAOm8B,gBACT,EACAqC,WAAW3hD,EAAOkX,GACXA,EAAKo9B,QACRt0C,EAAMmjB,OAAOg+B,YAAYjqC,EAAK3U,MAElC,EACA8Y,SAAU,CACR4L,SAAS,EACTmC,SAAU,MACV+P,MAAO,SACPtM,UAAU,EACV3jB,SAAS,EACT8Z,OAAQ,IACRc,QAAQnf,EAAGof,EAAYZ,GACrB,MAAM5Y,EAAQwZ,EAAWlZ,aACnB+2C,EAAKz+B,EAAOnjB,MACd4hD,EAAG3gC,iBAAiB1W,IACtBq3C,EAAG16C,KAAKqD,GACRwZ,EAAWtV,QAAS,IAEpBmzC,EAAG76C,KAAKwD,GACRwZ,EAAWtV,QAAS,EAExB,EACAqmC,QAAS,KACTyM,QAAS,KACT1uC,OAAQ,CACNjP,MAAQiL,GAAQA,EAAI7O,MAAMgI,QAAQpE,MAClC+5C,SAAU,GACVxuB,QAAS,GACT/L,eAAepjB,GACb,MAAM8Q,EAAW9Q,EAAMiL,KAAK6F,UACrB+B,QAAQ,cAAC+qC,EAAa,WAAEv6B,EAAU,UAAE+f,EAAS,MAAEx/B,IAAU5D,EAAMmjB,OAAOnb,QAC7E,OAAOhI,EAAMqK,yBAAyBiZ,KAAKjY,IACzC,MAAMkY,EAAQlY,EAAKsB,WAAW6H,SAASopC,EAAgB,OAAI99C,GACrD8iB,GAAc,OAAUW,EAAMX,aACpC,MAAO,CACLY,KAAM1S,EAASzF,EAAKd,OAAOyJ,MAC3ByP,UAAWF,EAAMG,gBACjBm8B,UAAWj8C,EACX6K,QAASpD,EAAKpE,QACd2xC,QAASr1B,EAAMs1B,eACfoH,SAAU18B,EAAMiV,WAChBoM,eAAgBrhB,EAAMkV,iBACtBsf,SAAUx0B,EAAMu0B,gBAChBj0B,WAAYjB,EAAYrG,MAAQqG,EAAYtG,QAAU,EACtDqH,YAAaJ,EAAMK,YACnBP,WAAYA,GAAcE,EAAMF,WAChCvE,SAAUyE,EAAMzE,SAChBskB,UAAWA,GAAa7f,EAAM6f,UAC9BqS,aAAc,EACd5qC,aAAcQ,EAAKd,MACpB,GACA/K,KACL,GAEFihB,MAAO,CACL7c,MAAQiL,GAAQA,EAAI7O,MAAMgI,QAAQpE,MAClCqjB,SAAS,EACTmC,SAAU,SACV5F,KAAM,KAGVP,YAAa,CACXvc,YAAcC,IAAUA,EAAK6yB,WAAW,MACxC3mB,OAAQ,CACNnM,YAAcC,IAAU,CAAC,iBAAkB,SAAU,QAAQ0lB,SAAS1lB,MAK5E,MAAMk7C,WAAc7sB,GAClBz1B,YAAY8H,GACVsU,QACAnc,KAAKQ,MAAQqH,EAAOrH,MACpBR,KAAKwI,QAAUX,EAAOW,QACtBxI,KAAKqP,IAAMxH,EAAOwH,IAClBrP,KAAKsiD,cAAWhiD,EAChBN,KAAKiK,SAAM3J,EACXN,KAAKmK,YAAS7J,EACdN,KAAKoK,UAAO9J,EACZN,KAAKkK,WAAQ5J,EACbN,KAAK+c,WAAQzc,EACbN,KAAK8c,YAASxc,EACdN,KAAK4pB,cAAWtpB,EAChBN,KAAKwjB,YAASljB,EACdN,KAAKqtB,cAAW/sB,CAClB,CACA0F,OAAOic,EAAUC,GACf,MAAMzY,EAAOzJ,KAAKwI,QAGlB,GAFAxI,KAAKoK,KAAO,EACZpK,KAAKiK,IAAM,GACNR,EAAKge,QAER,YADAznB,KAAK+c,MAAQ/c,KAAK8c,OAAS9c,KAAKkK,MAAQlK,KAAKmK,OAAS,GAGxDnK,KAAK+c,MAAQ/c,KAAKkK,MAAQ+X,EAC1BjiB,KAAK8c,OAAS9c,KAAKmK,OAAS+X,EAC5B,MAAM2hB,GAAY,OAAQp6B,EAAKua,MAAQva,EAAKua,KAAKhiB,OAAS,EAC1DhC,KAAKsiD,UAAW,OAAU74C,EAAKkmB,SAC/B,MAAM4yB,EAAW1e,GAAY,OAAOp6B,EAAKyxB,MAAME,WAAap7B,KAAKsiD,SAASxlC,OACtE9c,KAAK6a,eACP7a,KAAK8c,OAASylC,EAEdviD,KAAK+c,MAAQwlC,CAEjB,CACA1nC,eACE,MAAMoR,EAAMjsB,KAAKwI,QAAQohB,SACzB,MAAe,QAARqC,GAAyB,WAARA,CAC1B,CACAu2B,UAAU9jC,GACR,MAAM,IAACzU,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,EAAK,QAAE1B,GAAWxI,KACtC25B,EAAQnxB,EAAQmxB,MACtB,IACI1X,EAAUwZ,EAAQC,EADlBpc,EAAW,EAkBf,OAhBItf,KAAK6a,gBACP4gB,GAAS,QAAe9B,EAAOvvB,EAAMF,GACrCwxB,EAASzxB,EAAMyU,EACfuD,EAAW/X,EAAQE,IAEM,SAArB5B,EAAQohB,UACV6R,EAASrxB,EAAOsU,EAChBgd,GAAS,QAAe/B,EAAOxvB,EAAQF,GACvCqV,GAAiB,GAAN,EAAAuB,IAEX4a,EAASvxB,EAAQwU,EACjBgd,GAAS,QAAe/B,EAAO1vB,EAAKE,GACpCmV,EAAgB,GAAL,EAAAuB,GAEboB,EAAW9X,EAASF,GAEf,CAACwxB,SAAQC,SAAQzZ,WAAU3C,WACpC,CACAnd,OACE,MAAMkN,EAAMrP,KAAKqP,IACX5F,EAAOzJ,KAAKwI,QAClB,IAAKiB,EAAKge,QACR,OAEF,MAAMg7B,GAAW,OAAOh5C,EAAKyxB,MACvBE,EAAaqnB,EAASrnB,WACtB1c,EAAS0c,EAAa,EAAIp7B,KAAKsiD,SAASr4C,KACxC,OAACwxB,EAAM,OAAEC,EAAM,SAAEzZ,EAAQ,SAAE3C,GAAYtf,KAAKwiD,UAAU9jC,IAC5D,OAAWrP,EAAK5F,EAAKua,KAAM,EAAG,EAAGy+B,EAAU,CACzCr+C,MAAOqF,EAAKrF,MACZ6d,WACA3C,WACAskB,WAAW,QAAmBn6B,EAAKkwB,OACnCoK,aAAc,SACdS,YAAa,CAAC/I,EAAQC,IAE1B,EAEF,SAASgnB,GAAYliD,EAAOw/B,GAC1B,MAAM/e,EAAQ,IAAIohC,GAAM,CACtBhzC,IAAK7O,EAAM6O,IACX7G,QAASw3B,EACTx/B,UAEFmsB,GAAQ3kB,UAAUxH,EAAOygB,EAAO+e,GAChCrT,GAAQkD,OAAOrvB,EAAOygB,GACtBzgB,EAAMmiD,WAAa1hC,CACrB,CACA,IAAI2hC,GAAe,CACjB12C,GAAI,QACJ+1C,SAAUI,GACV/gD,MAAMd,EAAO0hD,EAAO15C,GAClBk6C,GAAYliD,EAAOgI,EACrB,EACA/E,KAAKjD,GACH,MAAMmiD,EAAaniD,EAAMmiD,WACzBh2B,GAAQqD,UAAUxvB,EAAOmiD,UAClBniD,EAAMmiD,UACf,EACAplB,aAAa/8B,EAAO0hD,EAAO15C,GACzB,MAAMyY,EAAQzgB,EAAMmiD,WACpBh2B,GAAQ3kB,UAAUxH,EAAOygB,EAAOzY,GAChCyY,EAAMzY,QAAUA,CAClB,EACAqT,SAAU,CACR8d,MAAO,SACPlS,SAAS,EACTyT,KAAM,CACJ1X,OAAQ,QAEV6J,UAAU,EACVsC,QAAS,GACT/F,SAAU,MACV5F,KAAM,GACNR,OAAQ,KAEVqS,cAAe,CACbzxB,MAAO,SAETqf,YAAa,CACXvc,aAAa,EACbD,YAAY,IAIJ,IAAI47C,QA2ChB,MAAMC,GAAc,CAClBC,QAAQhhD,GACN,IAAKA,EAAMC,OACT,OAAO,EAET,IAAIE,EAAGs2B,EACHzuB,EAAI,EACJC,EAAI,EACJ6I,EAAQ,EACZ,IAAK3Q,EAAI,EAAGs2B,EAAMz2B,EAAMC,OAAQE,EAAIs2B,IAAOt2B,EAAG,CAC5C,MAAMunB,EAAK1nB,EAAMG,GAAGoM,QACpB,GAAImb,GAAMA,EAAGiM,WAAY,CACvB,MAAMzJ,EAAMxC,EAAGgM,kBACf1rB,GAAKkiB,EAAIliB,EACTC,GAAKiiB,EAAIjiB,IACP6I,CACJ,CACF,CACA,MAAO,CACL9I,EAAGA,EAAI8I,EACP7I,EAAGA,EAAI6I,EAEX,EACAgZ,QAAQ9pB,EAAOihD,GACb,IAAKjhD,EAAMC,OACT,OAAO,EAET,IAGIE,EAAGs2B,EAAKyqB,EAHRl5C,EAAIi5C,EAAcj5C,EAClBC,EAAIg5C,EAAch5C,EAClBmhB,EAAc7e,OAAOE,kBAEzB,IAAKtK,EAAI,EAAGs2B,EAAMz2B,EAAMC,OAAQE,EAAIs2B,IAAOt2B,EAAG,CAC5C,MAAMunB,EAAK1nB,EAAMG,GAAGoM,QACpB,GAAImb,GAAMA,EAAGiM,WAAY,CACvB,MAAM7Y,EAAS4M,EAAG2B,iBACZxkB,GAAI,QAAsBo8C,EAAenmC,GAC3CjW,EAAIukB,IACNA,EAAcvkB,EACdq8C,EAAiBx5B,EAErB,CACF,CACA,GAAIw5B,EAAgB,CAClB,MAAMC,EAAKD,EAAextB,kBAC1B1rB,EAAIm5C,EAAGn5C,EACPC,EAAIk5C,EAAGl5C,CACT,CACA,MAAO,CACLD,IACAC,IAEJ,GAEF,SAASm5C,GAAanoC,EAAMooC,GAQ1B,OAPIA,KACE,OAAQA,GACVz3C,MAAMmQ,UAAU7Y,KAAKogD,MAAMroC,EAAMooC,GAEjCpoC,EAAK/X,KAAKmgD,IAGPpoC,CACT,CACA,SAASsoC,GAAcC,GACrB,OAAoB,kBAARA,GAAoBA,aAAeC,SAAWD,EAAIlmC,QAAQ,OAAS,EACtEkmC,EAAIrc,MAAM,MAEZqc,CACT,CACA,SAASE,GAAkBjjD,EAAOyB,GAChC,MAAM,QAACqM,EAAO,aAAEjD,EAAY,MAAEN,GAAS9I,EACjCkL,EAAa3M,EAAM+Q,eAAelG,GAAc8B,YAChD,MAACqH,EAAK,MAAEvL,GAASkE,EAAWoH,iBAAiBxJ,GACnD,MAAO,CACLvK,QACAgU,QACApH,OAAQD,EAAWuG,UAAU3I,GAC7ByD,IAAKhO,EAAMiL,KAAK6F,SAASjG,GAAcI,KAAKV,GAC5C4Z,eAAgB1b,EAChBmF,QAASjB,EAAWoD,aACpBhC,UAAWxD,EACXM,eACAiD,UAEJ,CACA,SAASo1C,GAAe1iC,EAASxY,GAC/B,MAAM6G,EAAM2R,EAAQxgB,MAAM6O,KACpB,KAACs0C,EAAI,OAAEC,EAAM,MAAE3iC,GAASD,GACxB,SAACm9B,EAAQ,UAAED,GAAa11C,EACxBq7C,GAAW,OAAOr7C,EAAQq7C,UAC1BxC,GAAY,OAAO74C,EAAQ64C,WAC3ByC,GAAa,OAAOt7C,EAAQs7C,YAC5BC,EAAiB9iC,EAAMjf,OACvBgiD,EAAkBJ,EAAO5hD,OACzBiiD,EAAoBN,EAAK3hD,OACzB2tB,GAAU,OAAUnnB,EAAQmnB,SAClC,IAAI7S,EAAS6S,EAAQ7S,OACjBC,EAAQ,EACRmnC,EAAqBP,EAAKvgD,QAAO,CAACyP,EAAOsxC,IAAatxC,EAAQsxC,EAASC,OAAOpiD,OAASmiD,EAAShpB,MAAMn5B,OAASmiD,EAASE,MAAMriD,QAAQ,GAO1I,GANAkiD,GAAsBljC,EAAQsjC,WAAWtiD,OAASgf,EAAQujC,UAAUviD,OAChE+hD,IACFjnC,GAAUinC,EAAiB1C,EAAUjmB,YACnC2oB,EAAiB,GAAKv7C,EAAQg8C,aAC/Bh8C,EAAQi8C,mBAEPP,EAAoB,CACtB,MAAMQ,EAAiBl8C,EAAQm8C,cAAgBvjD,KAAKmC,IAAI26C,EAAW2F,EAASzoB,YAAcyoB,EAASzoB,WACnGte,GAAUmnC,EAAoBS,GAC5BR,EAAqBD,GAAqBJ,EAASzoB,YACnD8oB,EAAqB,GAAK17C,EAAQo8C,WACtC,CACIZ,IACFlnC,GAAUtU,EAAQq8C,gBACjBb,EAAkBF,EAAW1oB,YAC5B4oB,EAAkB,GAAKx7C,EAAQs8C,eAEnC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAASlgC,GAC5B/H,EAAQ3b,KAAKmC,IAAIwZ,EAAO1N,EAAImwC,YAAY16B,GAAM/H,MAAQgoC,EACxD,EAiBA,OAhBA11C,EAAIs1B,OACJt1B,EAAI6rB,KAAOmmB,EAAU7f,QACrB,OAAKxgB,EAAQC,MAAO+jC,GACpB31C,EAAI6rB,KAAO2oB,EAASriB,QACpB,OAAKxgB,EAAQsjC,WAAW/rC,OAAOyI,EAAQujC,WAAYS,GACnDD,EAAev8C,EAAQm8C,cAAiBxG,EAAW,EAAI31C,EAAQylB,WAAc,GAC7E,OAAK01B,GAAOQ,KACV,OAAKA,EAASC,OAAQY,IACtB,OAAKb,EAAShpB,MAAO6pB,IACrB,OAAKb,EAASE,MAAOW,EAAa,IAEpCD,EAAe,EACf11C,EAAI6rB,KAAO4oB,EAAWtiB,QACtB,OAAKxgB,EAAQ4iC,OAAQoB,GACrB31C,EAAIw1B,UACJ9nB,GAAS4S,EAAQ5S,MACV,CAACA,QAAOD,SACjB,CACA,SAASmoC,GAAgBzkD,EAAO0I,GAC9B,MAAM,EAACc,EAAC,OAAE8S,GAAU5T,EACpB,OAAIc,EAAI8S,EAAS,EACR,MACE9S,EAAKxJ,EAAMsc,OAASA,EAAS,EAC/B,SAEF,QACT,CACA,SAASooC,GAAoBC,EAAQ3kD,EAAOgI,EAASU,GACnD,MAAM,EAACa,EAAC,MAAEgT,GAAS7T,EACbk8C,EAAQ58C,EAAQ68C,UAAY78C,EAAQ88C,aAC1C,MAAe,SAAXH,GAAqBp7C,EAAIgT,EAAQqoC,EAAQ5kD,EAAMuc,QAGpC,UAAXooC,GAAsBp7C,EAAIgT,EAAQqoC,EAAQ,QAA9C,EAGF,CACA,SAASG,GAAgB/kD,EAAOgI,EAASU,EAAMs8C,GAC7C,MAAM,EAACz7C,EAAC,MAAEgT,GAAS7T,GACZ6T,MAAO0oC,EAAY3wC,WAAW,KAAC1K,EAAI,MAAEF,IAAU1J,EACtD,IAAI2kD,EAAS,SAWb,MAVe,WAAXK,EACFL,EAASp7C,IAAMK,EAAOF,GAAS,EAAI,OAAS,QACnCH,GAAKgT,EAAQ,EACtBooC,EAAS,OACAp7C,GAAK07C,EAAa1oC,EAAQ,IACnCooC,EAAS,SAEPD,GAAoBC,EAAQ3kD,EAAOgI,EAASU,KAC9Ci8C,EAAS,UAEJA,CACT,CACA,SAASO,GAAmBllD,EAAOgI,EAASU,GAC1C,MAAMs8C,EAASt8C,EAAKs8C,QAAUh9C,EAAQg9C,QAAUP,GAAgBzkD,EAAO0I,GACvE,MAAO,CACLi8C,OAAQj8C,EAAKi8C,QAAU38C,EAAQ28C,QAAUI,GAAgB/kD,EAAOgI,EAASU,EAAMs8C,GAC/EA,SAEJ,CACA,SAASG,GAAOz8C,EAAMi8C,GACpB,IAAI,EAACp7C,EAAC,MAAEgT,GAAS7T,EAMjB,MALe,UAAXi8C,EACFp7C,GAAKgT,EACe,WAAXooC,IACTp7C,GAAMgT,EAAQ,GAEThT,CACT,CACA,SAAS67C,GAAO18C,EAAMs8C,EAAQK,GAC5B,IAAI,EAAC77C,EAAC,OAAE8S,GAAU5T,EAQlB,MAPe,QAAXs8C,EACFx7C,GAAK67C,EAEL77C,GADoB,WAAXw7C,EACJ1oC,EAAS+oC,EAER/oC,EAAS,EAEV9S,CACT,CACA,SAAS87C,GAAmBt9C,EAASU,EAAM68C,EAAWvlD,GACpD,MAAM,UAAC6kD,EAAS,aAAEC,EAAY,aAAEU,GAAgBx9C,GAC1C,OAAC28C,EAAM,OAAEK,GAAUO,EACnBF,EAAiBR,EAAYC,GAC7B,QAACtI,EAAO,SAAEC,EAAQ,WAAEC,EAAU,YAAEC,IAAe,QAAc6I,GACnE,IAAIj8C,EAAI47C,GAAOz8C,EAAMi8C,GACrB,MAAMn7C,EAAI47C,GAAO18C,EAAMs8C,EAAQK,GAY/B,MAXe,WAAXL,EACa,SAAXL,EACFp7C,GAAK87C,EACe,UAAXV,IACTp7C,GAAK87C,GAEa,SAAXV,EACTp7C,GAAK3I,KAAKmC,IAAIy5C,EAASE,GAAcmI,EACjB,UAAXF,IACTp7C,GAAK3I,KAAKmC,IAAI05C,EAAUE,GAAekI,GAElC,CACLt7C,GAAG,OAAYA,EAAG,EAAGvJ,EAAMuc,MAAQ7T,EAAK6T,OACxC/S,GAAG,OAAYA,EAAG,EAAGxJ,EAAMsc,OAAS5T,EAAK4T,QAE7C,CACA,SAASmpC,GAAYjlC,EAAS2Y,EAAOnxB,GACnC,MAAMmnB,GAAU,OAAUnnB,EAAQmnB,SAClC,MAAiB,WAAVgK,EACH3Y,EAAQjX,EAAIiX,EAAQjE,MAAQ,EAClB,UAAV4c,EACE3Y,EAAQjX,EAAIiX,EAAQjE,MAAQ4S,EAAQzlB,MACpC8W,EAAQjX,EAAI4lB,EAAQvlB,IAC5B,CACA,SAAS87C,GAAwBzsB,GAC/B,OAAO0pB,GAAa,GAAIG,GAAc7pB,GACxC,CACA,SAAS0sB,GAAqBh4C,EAAQ6S,EAASolC,GAC7C,OAAO,OAAcj4C,EAAQ,CAC3B6S,UACAolC,eACAzlD,KAAM,WAEV,CACA,SAAS0lD,GAAkBzlD,EAAWuU,GACpC,MAAM6T,EAAW7T,GAAWA,EAAQ/G,SAAW+G,EAAQ/G,QAAQ4S,SAAW7L,EAAQ/G,QAAQ4S,QAAQpgB,UAClG,OAAOooB,EAAWpoB,EAAUooB,SAASA,GAAYpoB,CACnD,CACA,MAAM0lD,WAAgB9wB,GACpBz1B,YAAY8H,GACVsU,QACAnc,KAAKumD,QAAU,EACfvmD,KAAKoC,QAAU,GACfpC,KAAKwmD,oBAAiBlmD,EACtBN,KAAKymD,WAAQnmD,EACbN,KAAK0mD,uBAAoBpmD,EACzBN,KAAK2mD,cAAgB,GACrB3mD,KAAK6I,iBAAcvI,EACnBN,KAAKiQ,cAAW3P,EAChBN,KAAKQ,MAAQqH,EAAOrH,OAASqH,EAAOC,OACpC9H,KAAK8H,OAAS9H,KAAKQ,MACnBR,KAAKwI,QAAUX,EAAOW,QACtBxI,KAAK4mD,gBAAatmD,EAClBN,KAAKihB,WAAQ3gB,EACbN,KAAKskD,gBAAahkD,EAClBN,KAAK2jD,UAAOrjD,EACZN,KAAKukD,eAAYjkD,EACjBN,KAAK4jD,YAAStjD,EACdN,KAAKmlD,YAAS7kD,EACdN,KAAKwlD,YAASllD,EACdN,KAAK+J,OAAIzJ,EACTN,KAAKgK,OAAI1J,EACTN,KAAK8c,YAASxc,EACdN,KAAK+c,WAAQzc,EACbN,KAAK6mD,YAASvmD,EACdN,KAAK8mD,YAASxmD,EACdN,KAAK+mD,iBAAczmD,EACnBN,KAAKgnD,sBAAmB1mD,EACxBN,KAAKinD,qBAAkB3mD,CACzB,CACA6P,WAAW3H,GACTxI,KAAKwI,QAAUA,EACfxI,KAAK0mD,uBAAoBpmD,EACzBN,KAAKiQ,cAAW3P,CAClB,CACAyV,qBACE,MAAMlH,EAAS7O,KAAK0mD,kBACpB,GAAI73C,EACF,OAAOA,EAET,MAAMrO,EAAQR,KAAKQ,MACbgI,EAAUxI,KAAKwI,QAAQw0B,WAAWh9B,KAAK0S,cACvCjJ,EAAOjB,EAAQ2uB,SAAW32B,EAAMgI,QAAQnB,WAAamB,EAAQhB,WAC7DA,EAAa,IAAII,EAAW5H,KAAKQ,MAAOiJ,GAI9C,OAHIA,EAAKyM,aACPlW,KAAK0mD,kBAAoB5/C,OAAOgP,OAAOtO,IAElCA,CACT,CACAkL,aACE,OAAO1S,KAAKiQ,WACZjQ,KAAKiQ,SAAWk2C,GAAqBnmD,KAAKQ,MAAMkS,aAAc1S,KAAMA,KAAK2mD,eAC3E,CACAO,SAAS/xC,EAAS3M,GAChB,MAAM,UAAC5H,GAAa4H,EACd2+C,EAAcvmD,EAAUumD,YAAY9D,MAAMrjD,KAAM,CAACmV,IACjD8L,EAAQrgB,EAAUqgB,MAAMoiC,MAAMrjD,KAAM,CAACmV,IACrCiyC,EAAaxmD,EAAUwmD,WAAW/D,MAAMrjD,KAAM,CAACmV,IACrD,IAAIgmB,EAAQ,GAIZ,OAHAA,EAAQgoB,GAAahoB,EAAOmoB,GAAc6D,IAC1ChsB,EAAQgoB,GAAahoB,EAAOmoB,GAAcriC,IAC1Cka,EAAQgoB,GAAahoB,EAAOmoB,GAAc8D,IACnCjsB,CACT,CACAksB,cAAcjB,EAAc59C,GAC1B,OAAO09C,GAAwB19C,EAAQ5H,UAAU0jD,WAAWjB,MAAMrjD,KAAM,CAAComD,IAC3E,CACAkB,QAAQlB,EAAc59C,GACpB,MAAM,UAAC5H,GAAa4H,EACd++C,EAAY,GAalB,OAZA,OAAKnB,GAAejxC,IAClB,MAAMgvC,EAAW,CACfC,OAAQ,GACRjpB,MAAO,GACPkpB,MAAO,IAEHmD,EAASnB,GAAkBzlD,EAAWuU,GAC5CguC,GAAagB,EAASC,OAAQd,GAAckE,EAAOC,YAAY/wB,KAAK12B,KAAMmV,KAC1EguC,GAAagB,EAAShpB,MAAOqsB,EAAOhzC,MAAMkiB,KAAK12B,KAAMmV,IACrDguC,GAAagB,EAASE,MAAOf,GAAckE,EAAOE,WAAWhxB,KAAK12B,KAAMmV,KACxEoyC,EAAUtkD,KAAKkhD,EAAS,IAEnBoD,CACT,CACAI,aAAavB,EAAc59C,GACzB,OAAO09C,GAAwB19C,EAAQ5H,UAAU2jD,UAAUlB,MAAMrjD,KAAM,CAAComD,IAC1E,CACAwB,UAAUxB,EAAc59C,GACtB,MAAM,UAAC5H,GAAa4H,EACdq/C,EAAejnD,EAAUinD,aAAaxE,MAAMrjD,KAAM,CAAComD,IACnDxC,EAAShjD,EAAUgjD,OAAOP,MAAMrjD,KAAM,CAAComD,IACvC0B,EAAclnD,EAAUknD,YAAYzE,MAAMrjD,KAAM,CAAComD,IACvD,IAAIjrB,EAAQ,GAIZ,OAHAA,EAAQgoB,GAAahoB,EAAOmoB,GAAcuE,IAC1C1sB,EAAQgoB,GAAahoB,EAAOmoB,GAAcM,IAC1CzoB,EAAQgoB,GAAahoB,EAAOmoB,GAAcwE,IACnC3sB,CACT,CACA4sB,aAAav/C,GACX,MAAMzC,EAAS/F,KAAKoC,QACdqJ,EAAOzL,KAAKQ,MAAMiL,KAClBs7C,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI/kD,EAAGs2B,EADH4tB,EAAe,GAEnB,IAAKlkD,EAAI,EAAGs2B,EAAMzyB,EAAO/D,OAAQE,EAAIs2B,IAAOt2B,EAC1CkkD,EAAanjD,KAAKwgD,GAAkBzjD,KAAKQ,MAAOuF,EAAO7D,KAkBzD,OAhBIsG,EAAQwF,SACVo4C,EAAeA,EAAap4C,QAAO,CAACM,EAASvD,EAAOihB,IAAUxjB,EAAQwF,OAAOM,EAASvD,EAAOihB,EAAOvgB,MAElGjD,EAAQw/C,WACV5B,EAAeA,EAAa3tC,MAAK,CAACC,EAAGnO,IAAM/B,EAAQw/C,SAAStvC,EAAGnO,EAAGkB,OAEpE,OAAK26C,GAAejxC,IAClB,MAAMqyC,EAASnB,GAAkB79C,EAAQ5H,UAAWuU,GACpD4xC,EAAY9jD,KAAKukD,EAAOS,WAAWvxB,KAAK12B,KAAMmV,IAC9C6xC,EAAiB/jD,KAAKukD,EAAOU,gBAAgBxxB,KAAK12B,KAAMmV,IACxD8xC,EAAgBhkD,KAAKukD,EAAOW,eAAezxB,KAAK12B,KAAMmV,GAAS,IAEjEnV,KAAK+mD,YAAcA,EACnB/mD,KAAKgnD,iBAAmBA,EACxBhnD,KAAKinD,gBAAkBA,EACvBjnD,KAAK4mD,WAAaR,EACXA,CACT,CACApgD,OAAO0gB,EAASouB,GACd,MAAMtsC,EAAUxI,KAAKwI,QAAQw0B,WAAWh9B,KAAK0S,cACvC3M,EAAS/F,KAAKoC,QACpB,IAAIgF,EACAg/C,EAAe,GACnB,GAAKrgD,EAAO/D,OAML,CACL,MAAM4nB,EAAWk5B,GAAYt6C,EAAQohB,UAAU8M,KAAK12B,KAAM+F,EAAQ/F,KAAKwmD,gBACvEJ,EAAepmD,KAAK+nD,aAAav/C,GACjCxI,KAAKihB,MAAQjhB,KAAKknD,SAASd,EAAc59C,GACzCxI,KAAKskD,WAAatkD,KAAKqnD,cAAcjB,EAAc59C,GACnDxI,KAAK2jD,KAAO3jD,KAAKsnD,QAAQlB,EAAc59C,GACvCxI,KAAKukD,UAAYvkD,KAAK2nD,aAAavB,EAAc59C,GACjDxI,KAAK4jD,OAAS5jD,KAAK4nD,UAAUxB,EAAc59C,GAC3C,MAAMU,EAAOlJ,KAAKymD,MAAQ/C,GAAe1jD,KAAMwI,GACzC4/C,EAAkBthD,OAAOqC,OAAO,CAAC,EAAGygB,EAAU1gB,GAC9C68C,EAAYL,GAAmB1lD,KAAKQ,MAAOgI,EAAS4/C,GACpDC,EAAkBvC,GAAmBt9C,EAAS4/C,EAAiBrC,EAAW/lD,KAAKQ,OACrFR,KAAKmlD,OAASY,EAAUZ,OACxBnlD,KAAKwlD,OAASO,EAAUP,OACxBp+C,EAAa,CACXm/C,QAAS,EACTx8C,EAAGs+C,EAAgBt+C,EACnBC,EAAGq+C,EAAgBr+C,EACnB+S,MAAO7T,EAAK6T,MACZD,OAAQ5T,EAAK4T,OACb+pC,OAAQj9B,EAAS7f,EACjB+8C,OAAQl9B,EAAS5f,EAErB,MA5BuB,IAAjBhK,KAAKumD,UACPn/C,EAAa,CACXm/C,QAAS,IA2BfvmD,KAAK2mD,cAAgBP,EACrBpmD,KAAKiQ,cAAW3P,EACZ8G,GACFpH,KAAK+V,qBAAqB/P,OAAOhG,KAAMoH,GAErCsf,GAAWle,EAAQ8/C,UACrB9/C,EAAQ8/C,SAAS5xB,KAAK12B,KAAM,CAACQ,MAAOR,KAAKQ,MAAOwgB,QAAShhB,KAAM80C,UAEnE,CACAyT,UAAUC,EAAcn5C,EAAKnG,EAAMV,GACjC,MAAMigD,EAAgBzoD,KAAK0oD,iBAAiBF,EAAct/C,EAAMV,GAChE6G,EAAIk2B,OAAOkjB,EAAc1lB,GAAI0lB,EAAczlB,IAC3C3zB,EAAIk2B,OAAOkjB,EAAcxlB,GAAIwlB,EAAcvlB,IAC3C7zB,EAAIk2B,OAAOkjB,EAAcE,GAAIF,EAAcG,GAC7C,CACAF,iBAAiBF,EAAct/C,EAAMV,GACnC,MAAM,OAAC28C,EAAM,OAAEK,GAAUxlD,MACnB,UAACqlD,EAAS,aAAEW,GAAgBx9C,GAC5B,QAACw0C,EAAO,SAAEC,EAAQ,WAAEC,EAAU,YAAEC,IAAe,QAAc6I,IAC5Dj8C,EAAG8+C,EAAK7+C,EAAG8+C,GAAON,GACnB,MAACzrC,EAAK,OAAED,GAAU5T,EACxB,IAAI65B,EAAIE,EAAI0lB,EAAI3lB,EAAIE,EAAI0lB,EAoCxB,MAnCe,WAAXpD,GACFtiB,EAAK4lB,EAAOhsC,EAAS,EACN,SAAXqoC,GACFpiB,EAAK8lB,EACL5lB,EAAKF,EAAKsiB,EACVriB,EAAKE,EAAKmiB,EACVuD,EAAK1lB,EAAKmiB,IAEVtiB,EAAK8lB,EAAM9rC,EACXkmB,EAAKF,EAAKsiB,EACVriB,EAAKE,EAAKmiB,EACVuD,EAAK1lB,EAAKmiB,GAEZsD,EAAK5lB,IAGHE,EADa,SAAXkiB,EACG0D,EAAMznD,KAAKmC,IAAIy5C,EAASE,GAAc,EACvB,UAAXiI,EACJ0D,EAAM9rC,EAAQ3b,KAAKmC,IAAI05C,EAAUE,GAAekI,EAEhDrlD,KAAK6mD,OAEG,QAAXrB,GACFxiB,EAAK8lB,EACL5lB,EAAKF,EAAKqiB,EACVtiB,EAAKE,EAAKoiB,EACVsD,EAAK1lB,EAAKoiB,IAEVriB,EAAK8lB,EAAMhsC,EACXomB,EAAKF,EAAKqiB,EACVtiB,EAAKE,EAAKoiB,EACVsD,EAAK1lB,EAAKoiB,GAEZuD,EAAK5lB,GAEA,CAACD,KAAIE,KAAI0lB,KAAI3lB,KAAIE,KAAI0lB,KAC9B,CACAjjB,UAAUojB,EAAI15C,EAAK7G,GACjB,MAAMyY,EAAQjhB,KAAKihB,MACbjf,EAASif,EAAMjf,OACrB,IAAIq/C,EAAWmD,EAActiD,EAC7B,GAAIF,EAAQ,CACV,MAAMg+C,GAAY,QAAcx3C,EAAQu3C,IAAK//C,KAAK+J,EAAG/J,KAAK+c,OAQ1D,IAPAgsC,EAAGh/C,EAAIk8C,GAAYjmD,KAAMwI,EAAQ+yB,WAAY/yB,GAC7C6G,EAAIu0B,UAAYoc,EAAUpc,UAAUp7B,EAAQ+yB,YAC5ClsB,EAAI00B,aAAe,SACnBsd,GAAY,OAAO74C,EAAQ64C,WAC3BmD,EAAeh8C,EAAQg8C,aACvBn1C,EAAI4U,UAAYzb,EAAQwgD,WACxB35C,EAAI6rB,KAAOmmB,EAAU7f,OAChBt/B,EAAI,EAAGA,EAAIF,IAAUE,EACxBmN,EAAI0xC,SAAS9/B,EAAM/e,GAAI89C,EAAUj2C,EAAEg/C,EAAGh/C,GAAIg/C,EAAG/+C,EAAIq3C,EAAUjmB,WAAa,GACxE2tB,EAAG/+C,GAAKq3C,EAAUjmB,WAAaopB,EAC3BtiD,EAAI,IAAMF,IACZ+mD,EAAG/+C,GAAKxB,EAAQi8C,kBAAoBD,EAG1C,CACF,CACAyE,cAAc55C,EAAK05C,EAAI7mD,EAAG89C,EAAWx3C,GACnC,MAAMu+C,EAAc/mD,KAAK+mD,YAAY7kD,GAC/BgmD,EAAkBloD,KAAKgnD,iBAAiB9kD,IACxC,UAACg8C,EAAS,SAAEC,EAAQ,WAAElwB,GAAczlB,EACpCq7C,GAAW,OAAOr7C,EAAQq7C,UAC1BqF,EAASjD,GAAYjmD,KAAM,OAAQwI,GACnC2gD,EAAYnJ,EAAUj2C,EAAEm/C,GACxBE,EAAUlL,EAAY2F,EAASzoB,YAAcyoB,EAASzoB,WAAa8iB,GAAa,EAAI,EACpFmL,EAASN,EAAG/+C,EAAIo/C,EACtB,GAAI5gD,EAAQ41C,cAAe,CACzB,MAAMsC,EAAc,CAClB3hC,OAAQ3d,KAAKC,IAAI88C,EAAUD,GAAa,EACxCr6B,WAAYqkC,EAAgBrkC,WAC5BvE,SAAU4oC,EAAgB5oC,SAC1B8D,YAAa,GAETP,EAAUm9B,EAAUE,WAAWiJ,EAAWhL,GAAYA,EAAW,EACjEr7B,EAAUumC,EAASnL,EAAY,EACrC7uC,EAAI8U,YAAc3b,EAAQ8gD,mBAC1Bj6C,EAAI4U,UAAYzb,EAAQ8gD,oBACxB,QAAUj6C,EAAKqxC,EAAa79B,EAASC,GACrCzT,EAAI8U,YAAc4iC,EAAY3iC,YAC9B/U,EAAI4U,UAAY8iC,EAAY7iC,iBAC5B,QAAU7U,EAAKqxC,EAAa79B,EAASC,EACvC,KAAO,CACLzT,EAAIgV,UAAY0iC,EAAY3jC,aAAe,EAC3C/T,EAAI8U,YAAc4iC,EAAY3iC,YAC9B/U,EAAI81B,YAAY4hB,EAAY/tB,YAAc,IAC1C3pB,EAAI+1B,eAAiB2hB,EAAY9tB,kBAAoB,EACrD,MAAMswB,EAASvJ,EAAUE,WAAWiJ,EAAWhL,EAAWlwB,GACpDu7B,EAASxJ,EAAUE,WAAWF,EAAUY,MAAMuI,EAAW,GAAIhL,EAAWlwB,EAAa,GACrFgoB,GAAe,QAAc8Q,EAAY9Q,cAC3CnvC,OAAOwB,OAAO2tC,GAAchM,MAAKtiC,GAAW,IAANA,KACxC0H,EAAIg2B,YACJh2B,EAAI4U,UAAYzb,EAAQ8gD,oBACxB,QAAmBj6C,EAAK,CACtBtF,EAAGw/C,EACHv/C,EAAGq/C,EACH56B,EAAG0vB,EACHxvB,EACA5P,OAAQk3B,IAEV5mC,EAAI4Y,OACJ5Y,EAAIm2B,SACJn2B,EAAI4U,UAAY8iC,EAAY7iC,gBAC5B7U,EAAIg2B,aACJ,QAAmBh2B,EAAK,CACtBtF,EAAGy/C,EACHx/C,EAAGq/C,EAAS,EACZ56B,EAAG0vB,EAAW,EACdxvB,EAAGuvB,EAAY,EACfn/B,OAAQk3B,IAEV5mC,EAAI4Y,SAEJ5Y,EAAI4U,UAAYzb,EAAQ8gD,mBACxBj6C,EAAIu1B,SAAS2kB,EAAQF,EAAQlL,EAAUD,GACvC7uC,EAAIo6C,WAAWF,EAAQF,EAAQlL,EAAUD,GACzC7uC,EAAI4U,UAAY8iC,EAAY7iC,gBAC5B7U,EAAIu1B,SAAS4kB,EAAQH,EAAS,EAAGlL,EAAW,EAAGD,EAAY,GAE/D,CACA7uC,EAAI4U,UAAYjkB,KAAKinD,gBAAgB/kD,EACvC,CACAwnD,SAASX,EAAI15C,EAAK7G,GAChB,MAAM,KAACm7C,GAAQ3jD,MACT,YAAC4kD,EAAW,UAAE+E,EAAS,cAAEhF,EAAa,UAAEzG,EAAS,SAAEC,EAAQ,WAAElwB,GAAczlB,EAC3Eq7C,GAAW,OAAOr7C,EAAQq7C,UAChC,IAAIa,EAAiBb,EAASzoB,WAC1BwuB,EAAe,EACnB,MAAM5J,GAAY,QAAcx3C,EAAQu3C,IAAK//C,KAAK+J,EAAG/J,KAAK+c,OACpD8sC,EAAiB,SAAS/kC,GAC9BzV,EAAI0xC,SAASj8B,EAAMk7B,EAAUj2C,EAAEg/C,EAAGh/C,EAAI6/C,GAAeb,EAAG/+C,EAAI06C,EAAiB,GAC7EqE,EAAG/+C,GAAK06C,EAAiBE,CAC3B,EACMkF,EAA0B9J,EAAUpc,UAAU+lB,GACpD,IAAIxF,EAAU4F,EAAW5uB,EAAOj5B,EAAG6nB,EAAGjf,EAAMm2B,EAU5C,IATA5xB,EAAIu0B,UAAY+lB,EAChBt6C,EAAI00B,aAAe,SACnB10B,EAAI6rB,KAAO2oB,EAASriB,OACpBunB,EAAGh/C,EAAIk8C,GAAYjmD,KAAM8pD,EAAyBthD,GAClD6G,EAAI4U,UAAYzb,EAAQwhD,WACxB,OAAKhqD,KAAKskD,WAAYuF,GACtBD,EAAejF,GAA6C,UAA5BmF,EACd,WAAdH,EAA0BxL,EAAW,EAAIlwB,EAAekwB,EAAW,EAAIlwB,EACvE,EACC/rB,EAAI,EAAG4I,EAAO64C,EAAK3hD,OAAQE,EAAI4I,IAAQ5I,EAAG,CAU7C,IATAiiD,EAAWR,EAAKzhD,GAChB6nD,EAAY/pD,KAAKinD,gBAAgB/kD,GACjCmN,EAAI4U,UAAY8lC,GAChB,OAAK5F,EAASC,OAAQyF,GACtB1uB,EAAQgpB,EAAShpB,MACbwpB,GAAiBxpB,EAAMn5B,SACzBhC,KAAKipD,cAAc55C,EAAK05C,EAAI7mD,EAAG89C,EAAWx3C,GAC1Ck8C,EAAiBtjD,KAAKmC,IAAIsgD,EAASzoB,WAAY8iB,IAE5Cn0B,EAAI,EAAGkX,EAAO9F,EAAMn5B,OAAQ+nB,EAAIkX,IAAQlX,EAC3C8/B,EAAe1uB,EAAMpR,IACrB26B,EAAiBb,EAASzoB,YAE5B,OAAK+oB,EAASE,MAAOwF,EACvB,CACAD,EAAe,EACflF,EAAiBb,EAASzoB,YAC1B,OAAKp7B,KAAKukD,UAAWsF,GACrBd,EAAG/+C,GAAK46C,CACV,CACAqF,WAAWlB,EAAI15C,EAAK7G,GAClB,MAAMo7C,EAAS5jD,KAAK4jD,OACd5hD,EAAS4hD,EAAO5hD,OACtB,IAAI8hD,EAAY5hD,EAChB,GAAIF,EAAQ,CACV,MAAMg+C,GAAY,QAAcx3C,EAAQu3C,IAAK//C,KAAK+J,EAAG/J,KAAK+c,OAQ1D,IAPAgsC,EAAGh/C,EAAIk8C,GAAYjmD,KAAMwI,EAAQ0hD,YAAa1hD,GAC9CugD,EAAG/+C,GAAKxB,EAAQq8C,gBAChBx1C,EAAIu0B,UAAYoc,EAAUpc,UAAUp7B,EAAQ0hD,aAC5C76C,EAAI00B,aAAe,SACnB+f,GAAa,OAAOt7C,EAAQs7C,YAC5Bz0C,EAAI4U,UAAYzb,EAAQ2hD,YACxB96C,EAAI6rB,KAAO4oB,EAAWtiB,OACjBt/B,EAAI,EAAGA,EAAIF,IAAUE,EACxBmN,EAAI0xC,SAAS6C,EAAO1hD,GAAI89C,EAAUj2C,EAAEg/C,EAAGh/C,GAAIg/C,EAAG/+C,EAAI85C,EAAW1oB,WAAa,GAC1E2tB,EAAG/+C,GAAK85C,EAAW1oB,WAAa5yB,EAAQs8C,aAE5C,CACF,CACApgB,eAAeqkB,EAAI15C,EAAK+6C,EAAa5hD,GACnC,MAAM,OAAC28C,EAAM,OAAEK,GAAUxlD,MACnB,EAAC+J,EAAC,EAAEC,GAAK++C,GACT,MAAChsC,EAAK,OAAED,GAAUstC,GAClB,QAACpN,EAAO,SAAEC,EAAQ,WAAEC,EAAU,YAAEC,IAAe,QAAc30C,EAAQw9C,cAC3E32C,EAAI4U,UAAYzb,EAAQ0b,gBACxB7U,EAAI8U,YAAc3b,EAAQ4b,YAC1B/U,EAAIgV,UAAY7b,EAAQ4a,YACxB/T,EAAIg2B,YACJh2B,EAAIi2B,OAAOv7B,EAAIizC,EAAShzC,GACT,QAAXw7C,GACFxlD,KAAKuoD,UAAUQ,EAAI15C,EAAK+6C,EAAa5hD,GAEvC6G,EAAIk2B,OAAOx7B,EAAIgT,EAAQkgC,EAAUjzC,GACjCqF,EAAIg7C,iBAAiBtgD,EAAIgT,EAAO/S,EAAGD,EAAIgT,EAAO/S,EAAIizC,GACnC,WAAXuI,GAAkC,UAAXL,GACzBnlD,KAAKuoD,UAAUQ,EAAI15C,EAAK+6C,EAAa5hD,GAEvC6G,EAAIk2B,OAAOx7B,EAAIgT,EAAO/S,EAAI8S,EAASqgC,GACnC9tC,EAAIg7C,iBAAiBtgD,EAAIgT,EAAO/S,EAAI8S,EAAQ/S,EAAIgT,EAAQogC,EAAanzC,EAAI8S,GAC1D,WAAX0oC,GACFxlD,KAAKuoD,UAAUQ,EAAI15C,EAAK+6C,EAAa5hD,GAEvC6G,EAAIk2B,OAAOx7B,EAAImzC,EAAYlzC,EAAI8S,GAC/BzN,EAAIg7C,iBAAiBtgD,EAAGC,EAAI8S,EAAQ/S,EAAGC,EAAI8S,EAASogC,GACrC,WAAXsI,GAAkC,SAAXL,GACzBnlD,KAAKuoD,UAAUQ,EAAI15C,EAAK+6C,EAAa5hD,GAEvC6G,EAAIk2B,OAAOx7B,EAAGC,EAAIgzC,GAClB3tC,EAAIg7C,iBAAiBtgD,EAAGC,EAAGD,EAAIizC,EAAShzC,GACxCqF,EAAIumC,YACJvmC,EAAI4Y,OACAzf,EAAQ4a,YAAc,GACxB/T,EAAIm2B,QAER,CACA8kB,uBAAuB9hD,GACrB,MAAMhI,EAAQR,KAAKQ,MACbC,EAAQT,KAAK6I,YACb0hD,EAAQ9pD,GAASA,EAAMsJ,EACvBygD,EAAQ/pD,GAASA,EAAMuJ,EAC7B,GAAIugD,GAASC,EAAO,CAClB,MAAM5gC,EAAWk5B,GAAYt6C,EAAQohB,UAAU8M,KAAK12B,KAAMA,KAAKoC,QAASpC,KAAKwmD,gBAC7E,IAAK58B,EACH,OAEF,MAAM1gB,EAAOlJ,KAAKymD,MAAQ/C,GAAe1jD,KAAMwI,GACzC4/C,EAAkBthD,OAAOqC,OAAO,CAAC,EAAGygB,EAAU5pB,KAAKymD,OACnDV,EAAYL,GAAmBllD,EAAOgI,EAAS4/C,GAC/CnpC,EAAQ6mC,GAAmBt9C,EAAS4/C,EAAiBrC,EAAWvlD,GAClE+pD,EAAM1kD,MAAQoZ,EAAMlV,GAAKygD,EAAM3kD,MAAQoZ,EAAMjV,IAC/ChK,KAAKmlD,OAASY,EAAUZ,OACxBnlD,KAAKwlD,OAASO,EAAUP,OACxBxlD,KAAK+c,MAAQ7T,EAAK6T,MAClB/c,KAAK8c,OAAS5T,EAAK4T,OACnB9c,KAAK6mD,OAASj9B,EAAS7f,EACvB/J,KAAK8mD,OAASl9B,EAAS5f,EACvBhK,KAAK+V,qBAAqB/P,OAAOhG,KAAMif,GAE3C,CACF,CACAwrC,cACE,QAASzqD,KAAKumD,OAChB,CACApkD,KAAKkN,GACH,MAAM7G,EAAUxI,KAAKwI,QAAQw0B,WAAWh9B,KAAK0S,cAC7C,IAAI6zC,EAAUvmD,KAAKumD,QACnB,IAAKA,EACH,OAEFvmD,KAAKsqD,uBAAuB9hD,GAC5B,MAAM4hD,EAAc,CAClBrtC,MAAO/c,KAAK+c,MACZD,OAAQ9c,KAAK8c,QAETisC,EAAK,CACTh/C,EAAG/J,KAAK+J,EACRC,EAAGhK,KAAKgK,GAEVu8C,EAAUnlD,KAAK2X,IAAIwtC,GAAW,KAAO,EAAIA,EACzC,MAAM52B,GAAU,OAAUnnB,EAAQmnB,SAC5B+6B,EAAoB1qD,KAAKihB,MAAMjf,QAAUhC,KAAKskD,WAAWtiD,QAAUhC,KAAK2jD,KAAK3hD,QAAUhC,KAAKukD,UAAUviD,QAAUhC,KAAK4jD,OAAO5hD,OAC9HwG,EAAQ2uB,SAAWuzB,IACrBr7C,EAAIs1B,OACJt1B,EAAIs7C,YAAcpE,EAClBvmD,KAAK0kC,eAAeqkB,EAAI15C,EAAK+6C,EAAa5hD,IAC1C,QAAsB6G,EAAK7G,EAAQy4C,eACnC8H,EAAG/+C,GAAK2lB,EAAQ1lB,IAChBjK,KAAK2lC,UAAUojB,EAAI15C,EAAK7G,GACxBxI,KAAK0pD,SAASX,EAAI15C,EAAK7G,GACvBxI,KAAKiqD,WAAWlB,EAAI15C,EAAK7G,IACzB,QAAqB6G,EAAK7G,EAAQy4C,eAClC5xC,EAAIw1B,UAER,CACA6P,oBACE,OAAO10C,KAAKoC,SAAW,EACzB,CACAuyC,kBAAkBC,EAAgBoO,GAChC,MAAMnO,EAAa70C,KAAKoC,QAClB2D,EAAS6uC,EAAe9wB,KAAI,EAAEzY,eAAcN,YAChD,MAAMc,EAAO7L,KAAKQ,MAAM+Q,eAAelG,GACvC,IAAKQ,EACH,MAAM,IAAIwc,MAAM,kCAAoChd,GAEtD,MAAO,CACLA,eACAiD,QAASzC,EAAKJ,KAAKV,GACnBA,QACD,IAEG2b,IAAW,QAAemuB,EAAY9uC,GACtC6kD,EAAkB5qD,KAAK6qD,iBAAiB9kD,EAAQi9C,IAClDt8B,GAAWkkC,KACb5qD,KAAKoC,QAAU2D,EACf/F,KAAKwmD,eAAiBxD,EACtBhjD,KAAK8qD,qBAAsB,EAC3B9qD,KAAKgG,QAAO,GAEhB,CACA27C,YAAYx8C,EAAG2vC,EAAQ3F,GAAc,GACnC,GAAI2F,GAAU90C,KAAK8qD,oBACjB,OAAO,EAET9qD,KAAK8qD,qBAAsB,EAC3B,MAAMtiD,EAAUxI,KAAKwI,QACfqsC,EAAa70C,KAAKoC,SAAW,GAC7B2D,EAAS/F,KAAKq1C,mBAAmBlwC,EAAG0vC,EAAYC,EAAQ3F,GACxDyb,EAAkB5qD,KAAK6qD,iBAAiB9kD,EAAQZ,GAChDuhB,EAAUouB,KAAW,QAAe/uC,EAAQ8uC,IAAe+V,EAWjE,OAVIlkC,IACF1mB,KAAKoC,QAAU2D,GACXyC,EAAQ2uB,SAAW3uB,EAAQ8/C,YAC7BtoD,KAAKwmD,eAAiB,CACpBz8C,EAAG5E,EAAE4E,EACLC,EAAG7E,EAAE6E,GAEPhK,KAAKgG,QAAO,EAAM8uC,KAGfpuB,CACT,CACA2uB,mBAAmBlwC,EAAG0vC,EAAYC,EAAQ3F,GACxC,MAAM3mC,EAAUxI,KAAKwI,QACrB,GAAe,aAAXrD,EAAExE,KACJ,MAAO,GAET,IAAKwuC,EACH,OAAO0F,EAET,MAAM9uC,EAAS/F,KAAKQ,MAAMozC,0BAA0BzuC,EAAGqD,EAAQ4C,KAAM5C,EAASssC,GAI9E,OAHItsC,EAAQkB,SACV3D,EAAO2D,UAEF3D,CACT,CACA8kD,iBAAiB9kD,EAAQZ,GACvB,MAAM,OAAC0hD,EAAM,OAAEC,EAAM,QAAEt+C,GAAWxI,KAC5B4pB,EAAWk5B,GAAYt6C,EAAQohB,UAAU8M,KAAK12B,KAAM+F,EAAQZ,GAClE,OAAoB,IAAbykB,IAAuBi9B,IAAWj9B,EAAS7f,GAAK+8C,IAAWl9B,EAAS5f,EAC7E,EAEFs8C,GAAQxD,YAAcA,GACtB,IAAIiI,GAAiB,CACnB7+C,GAAI,UACJ+1C,SAAUqE,GACVxD,eACAkI,UAAUxqD,EAAO0hD,EAAO15C,GAClBA,IACFhI,EAAMwgB,QAAU,IAAIslC,GAAQ,CAAC9lD,QAAOgI,YAExC,EACA+0B,aAAa/8B,EAAO0hD,EAAO15C,GACrBhI,EAAMwgB,SACRxgB,EAAMwgB,QAAQ7Q,WAAW3H,EAE7B,EACAkJ,MAAMlR,EAAO0hD,EAAO15C,GACdhI,EAAMwgB,SACRxgB,EAAMwgB,QAAQ7Q,WAAW3H,EAE7B,EACAyiD,UAAUzqD,GACR,MAAMwgB,EAAUxgB,EAAMwgB,QACtB,GAAIA,GAAWA,EAAQypC,cAAe,CACpC,MAAM/yC,EAAO,CACXsJ,WAEF,IAAuD,IAAnDxgB,EAAM0+B,cAAc,oBAAqBxnB,GAC3C,OAEFsJ,EAAQ7e,KAAK3B,EAAM6O,KACnB7O,EAAM0+B,cAAc,mBAAoBxnB,EAC1C,CACF,EACAyqC,WAAW3hD,EAAOkX,GAChB,GAAIlX,EAAMwgB,QAAS,CACjB,MAAM0J,EAAmBhT,EAAKo9B,OAC1Bt0C,EAAMwgB,QAAQ2gC,YAAYjqC,EAAK3U,MAAO2nB,EAAkBhT,EAAKy3B,eAC/Dz3B,EAAKgP,SAAU,EAEnB,CACF,EACA7K,SAAU,CACRsb,SAAS,EACTmxB,SAAU,KACV1+B,SAAU,UACV1F,gBAAiB,kBACjB8kC,WAAY,OACZ3H,UAAW,CACT79B,OAAQ,QAEVghC,aAAc,EACdC,kBAAmB,EACnBlpB,WAAY,OACZyuB,UAAW,OACXpF,YAAa,EACbf,SAAU,CACV,EACA8F,UAAW,OACXQ,YAAa,OACbrF,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACVtgC,OAAQ,QAEV0mC,YAAa,OACbv6B,QAAS,EACT21B,aAAc,EACdD,UAAW,EACXW,aAAc,EACd9H,UAAW,CAAC7uC,EAAK5F,IAASA,EAAKo6C,SAAS36C,KACxCi1C,SAAU,CAAC9uC,EAAK5F,IAASA,EAAKo6C,SAAS36C,KACvCogD,mBAAoB,OACpB3E,eAAe,EACf12B,WAAY,EACZ7J,YAAa,gBACbhB,YAAa,EACb/b,UAAW,CACTtG,SAAU,IACVqE,OAAQ,gBAEVoC,WAAY,CACVd,QAAS,CACP/F,KAAM,SACNyG,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtDm/C,QAAS,CACPnhD,OAAQ,SACRrE,SAAU,MAGdH,UAAW,CACTumD,YAAa,KACblmC,MAAMmlC,GACJ,GAAIA,EAAapkD,OAAS,EAAG,CAC3B,MAAMC,EAAOmkD,EAAa,GACpB/yC,EAASpR,EAAKzB,MAAMiL,KAAK4H,OACzB63C,EAAa73C,EAASA,EAAOrR,OAAS,EAC5C,GAAIhC,MAAQA,KAAKwI,SAAiC,YAAtBxI,KAAKwI,QAAQ4C,KACvC,OAAOnJ,EAAKmM,QAAQoG,OAAS,GACxB,GAAIvS,EAAKuS,MACd,OAAOvS,EAAKuS,MACP,GAAI02C,EAAa,GAAKjpD,EAAKsM,UAAY28C,EAC5C,OAAO73C,EAAOpR,EAAKsM,UAEvB,CACA,MAAO,EACT,EACA64C,WAAY,KACZ9C,WAAY,KACZmD,YAAa,KACbjzC,MAAMiQ,GACJ,GAAIzkB,MAAQA,KAAKwI,SAAiC,YAAtBxI,KAAKwI,QAAQ4C,KACvC,OAAOqZ,EAAYjQ,MAAQ,KAAOiQ,EAAYE,gBAAkBF,EAAYE,eAE9E,IAAInQ,EAAQiQ,EAAYrW,QAAQoG,OAAS,GACrCA,IACFA,GAAS,MAEX,MAAMvL,EAAQwb,EAAYE,eAI1B,OAHK,OAAc1b,KACjBuL,GAASvL,GAEJuL,CACT,EACAyzC,WAAWxjC,GACT,MAAM5Y,EAAO4Y,EAAYjkB,MAAM+Q,eAAekT,EAAYpZ,cACpD7C,EAAUqD,EAAKsB,WAAW6H,SAASyP,EAAYlW,WACrD,MAAO,CACL6V,YAAa5b,EAAQ4b,YACrBF,gBAAiB1b,EAAQ0b,gBACzBd,YAAa5a,EAAQ4a,YACrB4V,WAAYxwB,EAAQwwB,WACpBC,iBAAkBzwB,EAAQywB,iBAC1Bgd,aAAc,EAElB,EACAkS,iBACE,OAAOnoD,KAAKwI,QAAQwhD,SACtB,EACA9B,gBAAgBzjC,GACd,MAAM5Y,EAAO4Y,EAAYjkB,MAAM+Q,eAAekT,EAAYpZ,cACpD7C,EAAUqD,EAAKsB,WAAW6H,SAASyP,EAAYlW,WACrD,MAAO,CACLsV,WAAYrb,EAAQqb,WACpBvE,SAAU9W,EAAQ8W,SAEtB,EACAooC,WAAY,KACZnD,UAAW,KACXsD,aAAc,KACdjE,OAAQ,KACRkE,YAAa,OAGjBjyB,cAAe,CACbguB,SAAU,OACVC,WAAY,OACZzC,UAAW,QAEb59B,YAAa,CACXvc,YAAcC,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnEF,YAAY,EACZrG,UAAW,CACTsG,aAAa,EACbD,YAAY,GAEdI,UAAW,CACTL,WAAW,GAEbQ,WAAY,CACVR,UAAW,cAGfgmC,uBAAwB,CAAC,gBAa3B,MAAMme,GAAc,CAAC93C,EAAQ7E,EAAKzD,EAAOqgD,KACpB,kBAAR58C,GACTzD,EAAQsI,EAAOpQ,KAAKuL,GAAO,EAC3B48C,EAAYC,QAAQ,CAACtgD,QAAOyJ,MAAOhG,KAC1B4O,MAAM5O,KACfzD,EAAQ,MAEHA,GAET,SAASugD,GAAej4C,EAAQ7E,EAAKzD,EAAOqgD,GAC1C,MAAM9zB,EAAQjkB,EAAOgK,QAAQ7O,GAC7B,IAAe,IAAX8oB,EACF,OAAO6zB,GAAY93C,EAAQ7E,EAAKzD,EAAOqgD,GAEzC,MAAMnuC,EAAO5J,EAAOk4C,YAAY/8C,GAChC,OAAO8oB,IAAUra,EAAOlS,EAAQusB,CAClC,CACA,MAAMkD,GAAa,CAACzvB,EAAOxH,IAAkB,OAAVwH,EAAiB,MAAO,OAAY3J,KAAKu2B,MAAM5sB,GAAQ,EAAGxH,GAC7F,MAAMioD,WAAsB5vB,GAC1B77B,YAAY8E,GACVsX,MAAMtX,GACN7E,KAAKyrD,iBAAcnrD,EACnBN,KAAK0rD,YAAc,EACnB1rD,KAAK2rD,aAAe,EACtB,CACA5uB,KAAKiO,GACH,MAAM4gB,EAAQ5rD,KAAK2rD,aACnB,GAAIC,EAAM5pD,OAAQ,CAChB,MAAMqR,EAASrT,KAAKsT,YACpB,IAAK,MAAM,MAACvI,EAAK,MAAEyJ,KAAUo3C,EACvBv4C,EAAOtI,KAAWyJ,GACpBnB,EAAOmE,OAAOzM,EAAO,GAGzB/K,KAAK2rD,aAAe,EACtB,CACAxvC,MAAM4gB,KAAKiO,EACb,CACAp4B,MAAMpE,EAAKzD,GACT,IAAI,OAAcyD,GAChB,OAAO,KAET,MAAM6E,EAASrT,KAAKsT,YAGpB,OAFAvI,EAAQ8gD,SAAS9gD,IAAUsI,EAAOtI,KAAWyD,EAAMzD,EAC/CugD,GAAej4C,EAAQ7E,GAAK,IAAA7G,GAAeoD,EAAOyD,GAAMxO,KAAK2rD,cAC1DnxB,GAAWzvB,EAAOsI,EAAOrR,OAAS,EAC3C,CACA87B,sBACE,MAAM,WAAC1xB,EAAU,WAAEC,GAAcrM,KAAKmM,gBACtC,IAAI,IAAC9K,EAAG,IAAEkC,GAAOvD,KAAKgU,WAAU,GACJ,UAAxBhU,KAAKwI,QAAQiwB,SACVrsB,IACH/K,EAAM,GAEHgL,IACH9I,EAAMvD,KAAKsT,YAAYtR,OAAS,IAGpChC,KAAKqB,IAAMA,EACXrB,KAAKuD,IAAMA,CACb,CACA06B,aACE,MAAM58B,EAAMrB,KAAKqB,IACXkC,EAAMvD,KAAKuD,IACXmb,EAAS1e,KAAKwI,QAAQkW,OACtBzF,EAAQ,GACd,IAAI5F,EAASrT,KAAKsT,YAClBD,EAAkB,IAARhS,GAAakC,IAAQ8P,EAAOrR,OAAS,EAAKqR,EAASA,EAAOuR,MAAMvjB,EAAKkC,EAAM,GACrFvD,KAAK0rD,YAActqD,KAAKmC,IAAI8P,EAAOrR,QAAU0c,EAAS,EAAI,GAAI,GAC9D1e,KAAKyrD,YAAczrD,KAAKqB,KAAOqd,EAAS,GAAM,GAC9C,IAAK,IAAIzV,EAAQ5H,EAAK4H,GAAS1F,EAAK0F,IAClCgQ,EAAMhW,KAAK,CAACgG,UAEd,OAAOgQ,CACT,CACAxE,iBAAiBxL,GACf,MAAMoK,EAASrT,KAAKsT,YACpB,OAAIrK,GAAS,GAAKA,EAAQoK,EAAOrR,OACxBqR,EAAOpK,GAETA,CACT,CACAjB,YACEmU,MAAMnU,YACDhI,KAAK6a,iBACR7a,KAAKwpB,gBAAkBxpB,KAAKwpB,eAEhC,CACAxQ,iBAAiB/P,GAIf,MAHqB,kBAAVA,IACTA,EAAQjJ,KAAK4S,MAAM3J,IAEJ,OAAVA,EAAiB8K,IAAM/T,KAAK+d,oBAAoB9U,EAAQjJ,KAAKyrD,aAAezrD,KAAK0rD,YAC1F,CACAxyC,gBAAgBnO,GACd,MAAMkO,EAAQjZ,KAAKiZ,MACnB,OAAIlO,EAAQ,GAAKA,EAAQkO,EAAMjX,OAAS,EAC/B,KAEFhC,KAAKgZ,iBAAiBC,EAAMlO,GAAO9B,MAC5C,CACA04B,iBAAiBC,GACf,OAAOxgC,KAAKu2B,MAAM33B,KAAKyrD,YAAczrD,KAAK8hC,mBAAmBF,GAAS5hC,KAAK0rD,YAC7E,CACArvC,eACE,OAAOrc,KAAKmK,MACd,EASF,SAAS2hD,GAAgBC,EAAmBC,GAC1C,MAAM/yC,EAAQ,GACRgzC,EAAc,OACd,OAACxzB,EAAM,KAAE2K,EAAI,IAAE/hC,EAAG,IAAEkC,EAAG,UAAE2oD,EAAS,MAAEr5C,EAAK,SAAEs5C,EAAQ,UAAEC,EAAS,cAAEC,GAAiBN,EACjFpjC,EAAOya,GAAQ,EACfkpB,EAAYH,EAAW,GACtB9qD,IAAKkrD,EAAMhpD,IAAKipD,GAAQR,EACzB5/C,IAAc,OAAc/K,GAC5BgL,IAAc,OAAc9I,GAC5BkpD,IAAgB,OAAc55C,GAC9B65C,GAAcF,EAAOD,IAASH,EAAY,GAChD,IACIjoD,EAAQwoD,EAASC,EAASC,EAD1BlrC,GAAU,SAAS6qC,EAAOD,GAAQD,EAAY3jC,GAAQA,EAE1D,GAAIhH,EAAUsqC,IAAgB7/C,IAAeC,EAC3C,MAAO,CAAC,CAACpD,MAAOsjD,GAAO,CAACtjD,MAAOujD,IAEjCK,EAAYzrD,KAAKi3B,KAAKm0B,EAAO7qC,GAAWvgB,KAAKkE,MAAMinD,EAAO5qC,GACtDkrC,EAAYP,IACd3qC,GAAU,QAAQkrC,EAAYlrC,EAAU2qC,EAAY3jC,GAAQA,IAEzD,OAAcujC,KACjB/nD,EAAS/C,KAAKopB,IAAI,GAAI0hC,GACtBvqC,EAAUvgB,KAAKi3B,KAAK1W,EAAUxd,GAAUA,GAE3B,UAAXs0B,GACFk0B,EAAUvrD,KAAKkE,MAAMinD,EAAO5qC,GAAWA,EACvCirC,EAAUxrD,KAAKi3B,KAAKm0B,EAAO7qC,GAAWA,IAEtCgrC,EAAUJ,EACVK,EAAUJ,GAERpgD,GAAcC,GAAc+2B,IAAQ,SAAa7/B,EAAMlC,GAAO+hC,EAAMzhB,EAAU,MAChFkrC,EAAYzrD,KAAKu2B,MAAMv2B,KAAKC,KAAKkC,EAAMlC,GAAOsgB,EAASwqC,IACvDxqC,GAAWpe,EAAMlC,GAAOwrD,EACxBF,EAAUtrD,EACVurD,EAAUrpD,GACDkpD,GACTE,EAAUvgD,EAAa/K,EAAMsrD,EAC7BC,EAAUvgD,EAAa9I,EAAMqpD,EAC7BC,EAAYh6C,EAAQ,EACpB8O,GAAWirC,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAWhrC,EAEhCkrC,GADE,QAAaA,EAAWzrD,KAAKu2B,MAAMk1B,GAAYlrC,EAAU,KAC/CvgB,KAAKu2B,MAAMk1B,GAEXzrD,KAAKi3B,KAAKw0B,IAG1B,MAAMC,EAAgB1rD,KAAKmC,KACzB,QAAeoe,IACf,QAAegrC,IAEjBxoD,EAAS/C,KAAKopB,IAAI,IAAI,OAAc0hC,GAAaY,EAAgBZ,GACjES,EAAUvrD,KAAKu2B,MAAMg1B,EAAUxoD,GAAUA,EACzCyoD,EAAUxrD,KAAKu2B,MAAMi1B,EAAUzoD,GAAUA,EACzC,IAAI4lB,EAAI,EAcR,IAbI3d,IACEigD,GAAiBM,IAAYtrD,GAC/B4X,EAAMhW,KAAK,CAACgG,MAAO5H,IACfsrD,EAAUtrD,GACZ0oB,KAEE,QAAa3oB,KAAKu2B,OAAOg1B,EAAU5iC,EAAIpI,GAAWxd,GAAUA,EAAQ9C,EAAK0rD,GAAkB1rD,EAAKqrD,EAAYX,KAC9GhiC,KAEO4iC,EAAUtrD,GACnB0oB,KAGGA,EAAI8iC,IAAa9iC,EACtB9Q,EAAMhW,KAAK,CAACgG,MAAO7H,KAAKu2B,OAAOg1B,EAAU5iC,EAAIpI,GAAWxd,GAAUA,IAWpE,OATIkI,GAAcggD,GAAiBO,IAAYrpD,EACzC0V,EAAMjX,SAAU,QAAaiX,EAAMA,EAAMjX,OAAS,GAAGiH,MAAO1F,EAAKwpD,GAAkBxpD,EAAKmpD,EAAYX,IACtG9yC,EAAMA,EAAMjX,OAAS,GAAGiH,MAAQ1F,EAEhC0V,EAAMhW,KAAK,CAACgG,MAAO1F,IAEX8I,GAAcugD,IAAYrpD,GACpC0V,EAAMhW,KAAK,CAACgG,MAAO2jD,IAEd3zC,CACT,CACA,SAAS8zC,GAAkB9jD,EAAOyjD,GAAY,WAAC3xC,EAAU,YAAEme,IACzD,MAAM8zB,GAAM,IAAA1iD,GAAU4uB,GAChB1f,GAASuB,EAAa3Z,KAAK+e,IAAI6sC,GAAO5rD,KAAK6e,IAAI+sC,KAAS,KACxDhrD,EAAS,IAAO0qD,GAAc,GAAKzjD,GAAOjH,OAChD,OAAOZ,KAAKC,IAAIqrD,EAAalzC,EAAOxX,EACtC,CAhGAwpD,GAAct/C,GAAK,WACnBs/C,GAAc3vC,SAAW,CACvB5C,MAAO,CACLwgB,SAAU+xB,GAAc1vC,UAAUrH,mBA8FtC,MAAMw4C,WAAwBrxB,GAC5B77B,YAAY8E,GACVsX,MAAMtX,GACN7E,KAAKsB,WAAQhB,EACbN,KAAK2J,SAAMrJ,EACXN,KAAKyrD,iBAAcnrD,EACnBN,KAAKktD,eAAY5sD,EACjBN,KAAK0rD,YAAc,CACrB,CACA94C,MAAMpE,EAAKzD,GACT,OAAI,OAAcyD,KAGE,kBAARA,GAAoBA,aAAelC,UAAYu/C,UAAUr9C,GAF5D,MAKDA,CACV,CACA2+C,yBACE,MAAM,YAACtuC,GAAe7e,KAAKwI,SACrB,WAAC4D,EAAU,WAAEC,GAAcrM,KAAKmM,gBACtC,IAAI,IAAC9K,EAAG,IAAEkC,GAAOvD,KACjB,MAAMotD,EAASzlD,GAAMtG,EAAM+K,EAAa/K,EAAMsG,EACxC0lD,EAAS1lD,GAAMpE,EAAM8I,EAAa9I,EAAMoE,EAC9C,GAAIkX,EAAa,CACf,MAAMyuC,GAAU,IAAA/hD,GAAKlK,GACfksD,GAAU,IAAAhiD,GAAKhI,GACjB+pD,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,EAEX,CACA,GAAI/rD,IAAQkC,EAAK,CACf,IAAImb,EAAS,GACTnb,GAAO+I,OAAOkhD,kBAAoBnsD,GAAOiL,OAAOmhD,oBAClD/uC,EAAStd,KAAK2X,IAAU,IAANxV,IAEpB8pD,EAAO9pD,EAAMmb,GACRG,GACHuuC,EAAO/rD,EAAMqd,EAEjB,CACA1e,KAAKqB,IAAMA,EACXrB,KAAKuD,IAAMA,CACb,CACAmqD,eACE,MAAM72B,EAAW72B,KAAKwI,QAAQyQ,MAC9B,IACIkzC,GADA,cAACp1B,EAAa,SAAE42B,GAAY92B,EAehC,OAbI82B,GACFxB,EAAW/qD,KAAKi3B,KAAKr4B,KAAKuD,IAAMoqD,GAAYvsD,KAAKkE,MAAMtF,KAAKqB,IAAMssD,GAAY,EAC1ExB,EAAW,MACb3gB,EAAQG,KAAK,UAAU3rC,KAAKkM,sBAAsByhD,mCAA0CxB,8BAC5FA,EAAW,OAGbA,EAAWnsD,KAAK4tD,mBAChB72B,EAAgBA,GAAiB,IAE/BA,IACFo1B,EAAW/qD,KAAKC,IAAI01B,EAAeo1B,IAE9BA,CACT,CACAyB,mBACE,OAAOthD,OAAOE,iBAChB,CACAyxB,aACE,MAAMx0B,EAAOzJ,KAAKwI,QACZquB,EAAWptB,EAAKwP,MACtB,IAAIkzC,EAAWnsD,KAAK0tD,eACpBvB,EAAW/qD,KAAKmC,IAAI,EAAG4oD,GACvB,MAAM0B,EAA0B,CAC9B1B,WACA1zB,OAAQhvB,EAAKgvB,OACbp3B,IAAKoI,EAAKpI,IACVkC,IAAKkG,EAAKlG,IACV2oD,UAAWr1B,EAASq1B,UACpB9oB,KAAMvM,EAAS82B,SACf96C,MAAOgkB,EAAShkB,MAChBu5C,UAAWpsD,KAAK+lC,aAChBhrB,WAAY/a,KAAK6a,eACjBqe,YAAarC,EAASqC,aAAe,EACrCmzB,eAA0C,IAA3Bx1B,EAASw1B,eAEpBL,EAAYhsD,KAAKm8B,QAAUn8B,KAC3BiZ,EAAQ6yC,GAAgB+B,EAAyB7B,GAYvD,MAXoB,UAAhBviD,EAAKgvB,SACP,QAAmBxf,EAAOjZ,KAAM,SAE9ByJ,EAAKC,SACPuP,EAAMvP,UACN1J,KAAKsB,MAAQtB,KAAKuD,IAClBvD,KAAK2J,IAAM3J,KAAKqB,MAEhBrB,KAAKsB,MAAQtB,KAAKqB,IAClBrB,KAAK2J,IAAM3J,KAAKuD,KAEX0V,CACT,CACAjR,YACE,MAAMiR,EAAQjZ,KAAKiZ,MACnB,IAAI3X,EAAQtB,KAAKqB,IACbsI,EAAM3J,KAAKuD,IAEf,GADA4Y,MAAMnU,YACFhI,KAAKwI,QAAQkW,QAAUzF,EAAMjX,OAAQ,CACvC,MAAM0c,GAAU/U,EAAMrI,GAASF,KAAKmC,IAAI0V,EAAMjX,OAAS,EAAG,GAAK,EAC/DV,GAASod,EACT/U,GAAO+U,CACT,CACA1e,KAAKyrD,YAAcnqD,EACnBtB,KAAKktD,UAAYvjD,EACjB3J,KAAK0rD,YAAc/hD,EAAMrI,CAC3B,CACAmT,iBAAiBxL,GACf,OAAO,OAAaA,EAAOjJ,KAAKQ,MAAMgI,QAAQ0a,OAAQljB,KAAKwI,QAAQyQ,MAAMuP,OAC3E,EAGF,MAAMslC,WAAoBb,GACxBnvB,sBACE,MAAM,IAACz8B,EAAG,IAAEkC,GAAOvD,KAAKgU,WAAU,GAClChU,KAAKqB,KAAM,OAAeA,GAAOA,EAAM,EACvCrB,KAAKuD,KAAM,OAAeA,GAAOA,EAAM,EACvCvD,KAAKmtD,wBACP,CACAS,mBACE,MAAM7yC,EAAa/a,KAAK6a,eAClB7Y,EAAS+Y,EAAa/a,KAAK+c,MAAQ/c,KAAK8c,OACxCoc,GAAc,IAAA5uB,GAAUtK,KAAKwI,QAAQyQ,MAAMigB,aAC3C1f,GAASuB,EAAa3Z,KAAK+e,IAAI+Y,GAAe93B,KAAK6e,IAAIiZ,KAAiB,KACxEgI,EAAWlhC,KAAKuhC,wBAAwB,GAC9C,OAAOngC,KAAKi3B,KAAKr2B,EAASZ,KAAKC,IAAI,GAAI6/B,EAAS9F,WAAa5hB,GAC/D,CACAR,iBAAiB/P,GACf,OAAiB,OAAVA,EAAiB8K,IAAM/T,KAAK+d,oBAAoB9U,EAAQjJ,KAAKyrD,aAAezrD,KAAK0rD,YAC1F,CACA/pB,iBAAiBC,GACf,OAAO5hC,KAAKyrD,YAAczrD,KAAK8hC,mBAAmBF,GAAS5hC,KAAK0rD,WAClE,EASF,SAASqC,GAAQC,GACf,MAAM9nD,EAAS8nD,EAAW5sD,KAAKopB,IAAI,GAAIppB,KAAKkE,OAAM,OAAM0oD,KACxD,OAAkB,IAAX9nD,CACT,CACA,SAAS+nD,GAAclC,EAAmBC,GACxC,MAAMkC,EAAS9sD,KAAKkE,OAAM,OAAM0mD,EAAUzoD,MACpC4qD,EAAiB/sD,KAAKi3B,KAAK2zB,EAAUzoD,IAAMnC,KAAKopB,IAAI,GAAI0jC,IACxDj1C,EAAQ,GACd,IAAI+0C,GAAU,OAAgBjC,EAAkB1qD,IAAKD,KAAKopB,IAAI,GAAIppB,KAAKkE,OAAM,OAAM0mD,EAAU3qD,QACzF+sD,EAAMhtD,KAAKkE,OAAM,OAAM0oD,IACvBK,EAAcjtD,KAAKkE,MAAM0oD,EAAU5sD,KAAKopB,IAAI,GAAI4jC,IAChDlC,EAAYkC,EAAM,EAAIhtD,KAAKopB,IAAI,GAAIppB,KAAK2X,IAAIq1C,IAAQ,EACxD,GACEn1C,EAAMhW,KAAK,CAACgG,MAAO+kD,EAAS92B,MAAO62B,GAAQC,OACzCK,EACkB,KAAhBA,IACFA,EAAc,IACZD,EACFlC,EAAYkC,GAAO,EAAI,EAAIlC,GAE7B8B,EAAU5sD,KAAKu2B,MAAM02B,EAAcjtD,KAAKopB,IAAI,GAAI4jC,GAAOlC,GAAaA,QAC7DkC,EAAMF,GAAWE,IAAQF,GAAUG,EAAcF,GAC1D,MAAMG,GAAW,OAAgBvC,EAAkBxoD,IAAKyqD,GAExD,OADA/0C,EAAMhW,KAAK,CAACgG,MAAOqlD,EAAUp3B,MAAO62B,GAAQC,KACrC/0C,CACT,CAhCA60C,GAAY5hD,GAAK,SACjB4hD,GAAYjyC,SAAW,CACrB5C,MAAO,CACLwgB,SAAU9C,GAAMb,WAAWC,UA8B/B,MAAMw4B,WAAyB3yB,GAC7B77B,YAAY8E,GACVsX,MAAMtX,GACN7E,KAAKsB,WAAQhB,EACbN,KAAK2J,SAAMrJ,EACXN,KAAKyrD,iBAAcnrD,EACnBN,KAAK0rD,YAAc,CACrB,CACA94C,MAAMpE,EAAKzD,GACT,MAAM9B,EAAQgkD,GAAgBnxC,UAAUlJ,MAAMywC,MAAMrjD,KAAM,CAACwO,EAAKzD,IAChE,GAAc,IAAV9B,EAIJ,OAAO,OAAeA,IAAUA,EAAQ,EAAIA,EAAQ,KAHlDjJ,KAAKwuD,OAAQ,CAIjB,CACA1wB,sBACE,MAAM,IAACz8B,EAAG,IAAEkC,GAAOvD,KAAKgU,WAAU,GAClChU,KAAKqB,KAAM,OAAeA,GAAOD,KAAKmC,IAAI,EAAGlC,GAAO,KACpDrB,KAAKuD,KAAM,OAAeA,GAAOnC,KAAKmC,IAAI,EAAGA,GAAO,KAChDvD,KAAKwI,QAAQqW,cACf7e,KAAKwuD,OAAQ,GAEfxuD,KAAKmtD,wBACP,CACAA,yBACE,MAAM,WAAC/gD,EAAU,WAAEC,GAAcrM,KAAKmM,gBACtC,IAAI9K,EAAMrB,KAAKqB,IACXkC,EAAMvD,KAAKuD,IACf,MAAM6pD,EAASzlD,GAAMtG,EAAM+K,EAAa/K,EAAMsG,EACxC0lD,EAAS1lD,GAAMpE,EAAM8I,EAAa9I,EAAMoE,EACxCymD,EAAM,CAACzmD,EAAG8mD,IAAMrtD,KAAKopB,IAAI,GAAIppB,KAAKkE,OAAM,OAAMqC,IAAM8mD,GACtDptD,IAAQkC,IACNlC,GAAO,GACT+rD,EAAO,GACPC,EAAO,MAEPD,EAAOgB,EAAI/sD,GAAM,IACjBgsD,EAAOe,EAAI7qD,EAAK,MAGhBlC,GAAO,GACT+rD,EAAOgB,EAAI7qD,GAAM,IAEfA,GAAO,GACT8pD,EAAOe,EAAI/sD,EAAK,IAEdrB,KAAKwuD,OAASxuD,KAAKqB,MAAQrB,KAAK28B,eAAiBt7B,IAAQ+sD,EAAIpuD,KAAKqB,IAAK,IACzE+rD,EAAOgB,EAAI/sD,GAAM,IAEnBrB,KAAKqB,IAAMA,EACXrB,KAAKuD,IAAMA,CACb,CACA06B,aACE,MAAMx0B,EAAOzJ,KAAKwI,QACZujD,EAAoB,CACxB1qD,IAAKrB,KAAKy8B,SACVl5B,IAAKvD,KAAKw8B,UAENvjB,EAAQg1C,GAAclC,EAAmB/rD,MAY/C,MAXoB,UAAhByJ,EAAKgvB,SACP,QAAmBxf,EAAOjZ,KAAM,SAE9ByJ,EAAKC,SACPuP,EAAMvP,UACN1J,KAAKsB,MAAQtB,KAAKuD,IAClBvD,KAAK2J,IAAM3J,KAAKqB,MAEhBrB,KAAKsB,MAAQtB,KAAKqB,IAClBrB,KAAK2J,IAAM3J,KAAKuD,KAEX0V,CACT,CACAxE,iBAAiBxL,GACf,YAAiB3I,IAAV2I,EACH,KACA,OAAaA,EAAOjJ,KAAKQ,MAAMgI,QAAQ0a,OAAQljB,KAAKwI,QAAQyQ,MAAMuP,OACxE,CACAxgB,YACE,MAAM1G,EAAQtB,KAAKqB,IACnB8a,MAAMnU,YACNhI,KAAKyrD,aAAc,OAAMnqD,GACzBtB,KAAK0rD,aAAc,OAAM1rD,KAAKuD,MAAO,OAAMjC,EAC7C,CACA0X,iBAAiB/P,GAIf,YAHc3I,IAAV2I,GAAiC,IAAVA,IACzBA,EAAQjJ,KAAKqB,KAED,OAAV4H,GAAkBmU,MAAMnU,GACnB8K,IAEF/T,KAAK+d,mBAAmB9U,IAAUjJ,KAAKqB,IAC1C,IACC,OAAM4H,GAASjJ,KAAKyrD,aAAezrD,KAAK0rD,YAC/C,CACA/pB,iBAAiBC,GACf,MAAMC,EAAU7hC,KAAK8hC,mBAAmBF,GACxC,OAAOxgC,KAAKopB,IAAI,GAAIxqB,KAAKyrD,YAAc5pB,EAAU7hC,KAAK0rD,YACxD,EAYF,SAASgD,GAAsBjlD,GAC7B,MAAMotB,EAAWptB,EAAKwP,MACtB,GAAI4d,EAASpP,SAAWhe,EAAKge,QAAS,CACpC,MAAMkI,GAAU,OAAUkH,EAASkD,iBACnC,OAAO,IAAApyB,GAAekvB,EAASqE,MAAQrE,EAASqE,KAAKhyB,KAAM,EAAAtC,EAAA,WAAsB+oB,EAAQ7S,MAC3F,CACA,OAAO,CACT,CACA,SAAS6xC,GAAiBt/C,EAAK6rB,EAAM1mB,GAEnC,OADAA,GAAQ,OAAQA,GAASA,EAAQ,CAACA,GAC3B,CACLia,GAAG,QAAapf,EAAK6rB,EAAKsG,OAAQhtB,GAClCma,EAAGna,EAAMxS,OAASk5B,EAAKE,WAE3B,CACA,SAASwzB,GAAgBruC,EAAO0L,EAAK/iB,EAAM7H,EAAKkC,GAC9C,OAAIgd,IAAUlf,GAAOkf,IAAUhd,EACtB,CACLjC,MAAO2qB,EAAO/iB,EAAO,EACrBS,IAAKsiB,EAAO/iB,EAAO,GAEZqX,EAAQlf,GAAOkf,EAAQhd,EACzB,CACLjC,MAAO2qB,EAAM/iB,EACbS,IAAKsiB,GAGF,CACL3qB,MAAO2qB,EACPtiB,IAAKsiB,EAAM/iB,EAEf,CACA,SAAS2lD,GAAmBtlD,GAC1B,MAAMiS,EAAO,CACXhR,EAAGjB,EAAMa,KAAOb,EAAM+4C,SAASl4C,KAC/B5I,EAAG+H,EAAMW,MAAQX,EAAM+4C,SAASp4C,MAChCI,EAAGf,EAAMU,IAAMV,EAAM+4C,SAASr4C,IAC9BM,EAAGhB,EAAMY,OAASZ,EAAM+4C,SAASn4C,QAE7B2kD,EAAShoD,OAAOqC,OAAO,CAAC,EAAGqS,GAC3BikB,EAAa,GACb9P,EAAU,GACVo/B,EAAaxlD,EAAMylD,aAAahtD,OAChCitD,EAAiB1lD,EAAMf,QAAQmf,YAC/BunC,EAAkBD,EAAeE,kBAAoB,EAAAtuC,EAAKkuC,EAAa,EAC7E,IAAK,IAAI7sD,EAAI,EAAGA,EAAI6sD,EAAY7sD,IAAK,CACnC,MAAMuH,EAAOwlD,EAAejyB,WAAWzzB,EAAM6lD,qBAAqBltD,IAClEytB,EAAQztB,GAAKuH,EAAKkmB,QAClB,MAAM5H,EAAgBxe,EAAM8lD,iBAAiBntD,EAAGqH,EAAM+lD,YAAc3/B,EAAQztB,GAAIgtD,GAC1EK,GAAS,OAAO9lD,EAAKyxB,MACrBqnB,EAAWoM,GAAiBplD,EAAM8F,IAAKkgD,EAAQhmD,EAAMylD,aAAa9sD,IACxEu9B,EAAWv9B,GAAKqgD,EAChB,MAAMniB,GAAe,QAAgB72B,EAAM4d,cAAcjlB,GAAKgtD,GACxD3uC,EAAQnf,KAAKu2B,OAAM,OAAUyI,IAC7BovB,EAAUZ,GAAgBruC,EAAOwH,EAAche,EAAGw4C,EAAS9zB,EAAG,EAAG,KACjEghC,EAAUb,GAAgBruC,EAAOwH,EAAc/d,EAAGu4C,EAAS5zB,EAAG,GAAI,KACxE+gC,GAAaZ,EAAQtzC,EAAM4kB,EAAcovB,EAASC,EACpD,CACAlmD,EAAMomD,eACJn0C,EAAKhR,EAAIskD,EAAOtkD,EAChBskD,EAAOttD,EAAIga,EAAKha,EAChBga,EAAKlR,EAAIwkD,EAAOxkD,EAChBwkD,EAAOvkD,EAAIiR,EAAKjR,GAElBhB,EAAMqmD,iBAAmBC,GAAqBtmD,EAAOk2B,EAAY9P,EACnE,CACA,SAAS+/B,GAAaZ,EAAQtzC,EAAM+E,EAAOivC,EAASC,GAClD,MAAMtvC,EAAM/e,KAAK2X,IAAI3X,KAAK+e,IAAII,IACxBN,EAAM7e,KAAK2X,IAAI3X,KAAK6e,IAAIM,IAC9B,IAAIxW,EAAI,EACJC,EAAI,EACJwlD,EAAQluD,MAAQka,EAAKhR,GACvBT,GAAKyR,EAAKhR,EAAIglD,EAAQluD,OAAS6e,EAC/B2uC,EAAOtkD,EAAIpJ,KAAKC,IAAIytD,EAAOtkD,EAAGgR,EAAKhR,EAAIT,IAC9BylD,EAAQ7lD,IAAM6R,EAAKha,IAC5BuI,GAAKylD,EAAQ7lD,IAAM6R,EAAKha,GAAK2e,EAC7B2uC,EAAOttD,EAAIJ,KAAKmC,IAAIurD,EAAOttD,EAAGga,EAAKha,EAAIuI,IAErC0lD,EAAQnuD,MAAQka,EAAKlR,GACvBN,GAAKwR,EAAKlR,EAAImlD,EAAQnuD,OAAS2e,EAC/B6uC,EAAOxkD,EAAIlJ,KAAKC,IAAIytD,EAAOxkD,EAAGkR,EAAKlR,EAAIN,IAC9BylD,EAAQ9lD,IAAM6R,EAAKjR,IAC5BP,GAAKylD,EAAQ9lD,IAAM6R,EAAKjR,GAAK0V,EAC7B6uC,EAAOvkD,EAAInJ,KAAKmC,IAAIurD,EAAOvkD,EAAGiR,EAAKjR,EAAIP,GAE3C,CACA,SAAS6lD,GAAqBtmD,EAAOk2B,EAAY9P,GAC/C,MAAM5tB,EAAQ,GACRgtD,EAAaxlD,EAAMylD,aAAahtD,OAChCyH,EAAOF,EAAMf,QACbsnD,EAAQpB,GAAsBjlD,GAAQ,EACtCsmD,EAAgBxmD,EAAM+lD,YACtBJ,EAAkBzlD,EAAKke,YAAYwnC,kBAAoB,EAAAtuC,EAAKkuC,EAAa,EAC/E,IAAK,IAAI7sD,EAAI,EAAGA,EAAI6sD,EAAY7sD,IAAK,CACnC,MAAM8tD,EAAqBzmD,EAAM8lD,iBAAiBntD,EAAG6tD,EAAgBD,EAAQngC,EAAQztB,GAAIgtD,GACnF3uC,EAAQnf,KAAKu2B,OAAM,QAAU,QAAgBq4B,EAAmBzvC,MAAQ,EAAAI,KACxEzX,EAAOu2B,EAAWv9B,GAClB8H,EAAIimD,GAAUD,EAAmBhmD,EAAGd,EAAKylB,EAAGpO,GAC5CqjB,EAAYssB,GAAqB3vC,GACjCnW,EAAO+lD,GAAiBH,EAAmBjmD,EAAGb,EAAKulB,EAAGmV,GAC5D7hC,EAAMkB,KAAK,CACT8G,EAAGimD,EAAmBjmD,EACtBC,IACA45B,YACAx5B,OACAH,IAAKD,EACLE,MAAOE,EAAOlB,EAAKulB,EACnBtkB,OAAQH,EAAId,EAAKylB,GAErB,CACA,OAAO5sB,CACT,CACA,SAASmuD,GAAqB3vC,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAEF,OACT,CACA,SAAS4vC,GAAiBpmD,EAAG0kB,EAAGkL,GAM9B,MALc,UAAVA,EACF5vB,GAAK0kB,EACc,WAAVkL,IACT5vB,GAAM0kB,EAAI,GAEL1kB,CACT,CACA,SAASkmD,GAAUjmD,EAAG2kB,EAAGpO,GAMvB,OALc,KAAVA,GAA0B,MAAVA,EAClBvW,GAAM2kB,EAAI,GACDpO,EAAQ,KAAOA,EAAQ,MAChCvW,GAAK2kB,GAEA3kB,CACT,CACA,SAASomD,GAAgB7mD,EAAO2hD,GAC9B,MAAM,IAAC77C,EAAK7G,SAAS,YAACmf,IAAgBpe,EACtC,IAAK,IAAIrH,EAAIgpD,EAAa,EAAGhpD,GAAK,EAAGA,IAAK,CACxC,MAAMmhC,EAAc1b,EAAYqV,WAAWzzB,EAAM6lD,qBAAqBltD,IAChEqtD,GAAS,OAAOlsB,EAAYnI,OAC5B,EAACnxB,EAAC,EAAEC,EAAC,UAAE45B,EAAS,KAAEx5B,EAAI,IAAEH,EAAG,MAAEC,EAAK,OAAEC,GAAUZ,EAAMqmD,iBAAiB1tD,IACrE,cAAC43B,GAAiBuJ,EACxB,KAAK,OAAcvJ,GAAgB,CACjC,MAAMmc,GAAe,QAAc5S,EAAY4S,cACzCtmB,GAAU,OAAU0T,EAAYtJ,iBACtC1qB,EAAI4U,UAAY6V,EAChB,MAAMu2B,EAAejmD,EAAOulB,EAAQvlB,KAC9BkmD,EAAcrmD,EAAM0lB,EAAQ1lB,IAC5BsmD,EAAgBrmD,EAAQE,EAAOulB,EAAQ5S,MACvCyzC,EAAiBrmD,EAASF,EAAM0lB,EAAQ7S,OAC1ChW,OAAOwB,OAAO2tC,GAAchM,MAAKtiC,GAAW,IAANA,KACxC0H,EAAIg2B,aACJ,QAAmBh2B,EAAK,CACtBtF,EAAGsmD,EACHrmD,EAAGsmD,EACH7hC,EAAG8hC,EACH5hC,EACA5P,OAAQk3B,IAEV5mC,EAAI4Y,QAEJ5Y,EAAIu1B,SAASyrB,EAAcC,EAAaC,EAAeC,EAE3D,EACA,OACEnhD,EACA9F,EAAMylD,aAAa9sD,GACnB6H,EACAC,EAAKulD,EAAOn0B,WAAa,EACzBm0B,EACA,CACEnrD,MAAOi/B,EAAYj/B,MACnBw/B,UAAWA,EACXG,aAAc,UAGpB,CACF,CACA,SAAS0sB,GAAelnD,EAAOwV,EAAQ2I,EAAUwjC,GAC/C,MAAM,IAAC77C,GAAO9F,EACd,GAAIme,EACFrY,EAAI2T,IAAIzZ,EAAMyd,QAASzd,EAAM0d,QAASlI,EAAQ,EAAG,EAAAc,OAC5C,CACL,IAAIkI,EAAgBxe,EAAM8lD,iBAAiB,EAAGtwC,GAC9C1P,EAAIi2B,OAAOvd,EAAche,EAAGge,EAAc/d,GAC1C,IAAK,IAAI9H,EAAI,EAAGA,EAAIgpD,EAAYhpD,IAC9B6lB,EAAgBxe,EAAM8lD,iBAAiBntD,EAAG6c,GAC1C1P,EAAIk2B,OAAOxd,EAAche,EAAGge,EAAc/d,EAE9C,CACF,CACA,SAAS0mD,GAAennD,EAAOonD,EAAc5xC,EAAQmsC,GACnD,MAAM77C,EAAM9F,EAAM8F,IACZqY,EAAWipC,EAAajpC,UACxB,MAACtjB,EAAK,UAAEigB,GAAassC,GACrBjpC,IAAawjC,IAAgB9mD,IAAUigB,GAAatF,EAAS,IAGnE1P,EAAIs1B,OACJt1B,EAAI8U,YAAc/f,EAClBiL,EAAIgV,UAAYA,EAChBhV,EAAI81B,YAAYwrB,EAAa33B,YAC7B3pB,EAAI+1B,eAAiBurB,EAAa13B,iBAClC5pB,EAAIg2B,YACJorB,GAAelnD,EAAOwV,EAAQ2I,EAAUwjC,GACxC77C,EAAIumC,YACJvmC,EAAIm2B,SACJn2B,EAAIw1B,UACN,CACA,SAAS+rB,GAAwBziD,EAAQpD,EAAOyJ,GAC9C,OAAO,OAAcrG,EAAQ,CAC3BqG,QACAzJ,QACApK,KAAM,cAEV,CAlOA4tD,GAAiBriD,GAAK,cACtBqiD,GAAiB1yC,SAAW,CAC1B5C,MAAO,CACLwgB,SAAU9C,GAAMb,WAAWW,YAC3BS,MAAO,CACLC,SAAS,KA8Nf,MAAM05B,WAA0B5D,GAC9BltD,YAAY8E,GACVsX,MAAMtX,GACN7E,KAAKgnB,aAAU1mB,EACfN,KAAKinB,aAAU3mB,EACfN,KAAKsvD,iBAAchvD,EACnBN,KAAKgvD,aAAe,GACpBhvD,KAAK4vD,iBAAmB,EAC1B,CACAjyB,gBACE,MAAMhO,EAAU3vB,KAAKsiD,UAAW,OAAUoM,GAAsB1uD,KAAKwI,SAAW,GAC1EimB,EAAIzuB,KAAK+c,MAAQ/c,KAAKiiB,SAAW0N,EAAQ5S,MACzC4R,EAAI3uB,KAAK8c,OAAS9c,KAAKkiB,UAAYyN,EAAQ7S,OACjD9c,KAAKgnB,QAAU5lB,KAAKkE,MAAMtF,KAAKoK,KAAOqkB,EAAI,EAAIkB,EAAQvlB,MACtDpK,KAAKinB,QAAU7lB,KAAKkE,MAAMtF,KAAKiK,IAAM0kB,EAAI,EAAIgB,EAAQ1lB,KACrDjK,KAAKsvD,YAAcluD,KAAKkE,MAAMlE,KAAKC,IAAIotB,EAAGE,GAAK,EACjD,CACAmP,sBACE,MAAM,IAACz8B,EAAG,IAAEkC,GAAOvD,KAAKgU,WAAU,GAClChU,KAAKqB,KAAM,OAAeA,KAAS+b,MAAM/b,GAAOA,EAAM,EACtDrB,KAAKuD,KAAM,OAAeA,KAAS6Z,MAAM7Z,GAAOA,EAAM,EACtDvD,KAAKmtD,wBACP,CACAS,mBACE,OAAOxsD,KAAKi3B,KAAKr4B,KAAKsvD,YAAcZ,GAAsB1uD,KAAKwI,SACjE,CACA42B,mBAAmBnmB,GACjBg0C,GAAgBnxC,UAAUsjB,mBAAmB1I,KAAK12B,KAAMiZ,GACxDjZ,KAAKgvD,aAAehvD,KAAKsT,YACtBwQ,KAAI,CAAC7a,EAAO8B,KACX,MAAMyJ,GAAQ,OAASxU,KAAKwI,QAAQmf,YAAY8R,SAAU,CAACxwB,EAAO8B,GAAQ/K,MAC1E,OAAOwU,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IAEzCxG,QAAO,CAACrG,EAAGzF,IAAMlC,KAAKQ,MAAMqd,kBAAkB3b,IACnD,CACAy8B,MACE,MAAMl1B,EAAOzJ,KAAKwI,QACdiB,EAAKge,SAAWhe,EAAKke,YAAYF,QACnConC,GAAmB7uD,MAEnBA,KAAK2vD,eAAe,EAAG,EAAG,EAAG,EAEjC,CACAA,eAAemB,EAAcC,EAAeC,EAAaC,GACvDjxD,KAAKgnB,SAAW5lB,KAAKkE,OAAOwrD,EAAeC,GAAiB,GAC5D/wD,KAAKinB,SAAW7lB,KAAKkE,OAAO0rD,EAAcC,GAAkB,GAC5DjxD,KAAKsvD,aAAeluD,KAAKC,IAAIrB,KAAKsvD,YAAc,EAAGluD,KAAKmC,IAAIutD,EAAcC,EAAeC,EAAaC,GACxG,CACA9pC,cAAcpc,GACZ,MAAMmmD,EAAkB,EAAArxC,GAAO7f,KAAKgvD,aAAahtD,QAAU,GACrD8d,EAAa9f,KAAKwI,QAAQsX,YAAc,EAC9C,OAAO,QAAgB/U,EAAQmmD,GAAkB,IAAA5mD,GAAUwV,GAC7D,CACAyH,8BAA8Bte,GAC5B,IAAI,OAAcA,GAChB,OAAO8K,IAET,MAAMo9C,EAAgBnxD,KAAKsvD,aAAetvD,KAAKuD,IAAMvD,KAAKqB,KAC1D,OAAIrB,KAAKwI,QAAQkB,SACP1J,KAAKuD,IAAM0F,GAASkoD,GAEtBloD,EAAQjJ,KAAKqB,KAAO8vD,CAC9B,CACAC,8BAA8B9lC,GAC5B,IAAI,OAAcA,GAChB,OAAOvX,IAET,MAAMs9C,EAAiB/lC,GAAYtrB,KAAKsvD,aAAetvD,KAAKuD,IAAMvD,KAAKqB,MACvE,OAAOrB,KAAKwI,QAAQkB,QAAU1J,KAAKuD,IAAM8tD,EAAiBrxD,KAAKqB,IAAMgwD,CACvE,CACAjC,qBAAqBrkD,GACnB,MAAM4c,EAAc3nB,KAAKgvD,cAAgB,GACzC,GAAIjkD,GAAS,GAAKA,EAAQ4c,EAAY3lB,OAAQ,CAC5C,MAAMsvD,EAAa3pC,EAAY5c,GAC/B,OAAO6lD,GAAwB5wD,KAAK0S,aAAc3H,EAAOumD,EAC3D,CACF,CACAjC,iBAAiBtkD,EAAOwmD,EAAoBrC,EAAkB,GAC5D,MAAM3uC,EAAQvgB,KAAKmnB,cAAcpc,GAAS,EAAA4V,EAAUuuC,EACpD,MAAO,CACLnlD,EAAG3I,KAAK6e,IAAIM,GAASgxC,EAAqBvxD,KAAKgnB,QAC/Chd,EAAG5I,KAAK+e,IAAII,GAASgxC,EAAqBvxD,KAAKinB,QAC/C1G,QAEJ,CACAyH,yBAAyBjd,EAAO9B,GAC9B,OAAOjJ,KAAKqvD,iBAAiBtkD,EAAO/K,KAAKunB,8BAA8Bte,GACzE,CACAuoD,gBAAgBzmD,GACd,OAAO/K,KAAKgoB,yBAAyBjd,GAAS,EAAG/K,KAAK+hC,eACxD,CACA0vB,sBAAsB1mD,GACpB,MAAM,KAACX,EAAI,IAAEH,EAAG,MAAEC,EAAK,OAAEC,GAAUnK,KAAK4vD,iBAAiB7kD,GACzD,MAAO,CACLX,OACAH,MACAC,QACAC,SAEJ,CACAu6B,iBACE,MAAM,gBAACxgB,EAAiBvF,MAAM,SAAC+I,IAAa1nB,KAAKwI,QACjD,GAAI0b,EAAiB,CACnB,MAAM7U,EAAMrP,KAAKqP,IACjBA,EAAIs1B,OACJt1B,EAAIg2B,YACJorB,GAAezwD,KAAMA,KAAKunB,8BAA8BvnB,KAAKktD,WAAYxlC,EAAU1nB,KAAKgvD,aAAahtD,QACrGqN,EAAIumC,YACJvmC,EAAI4U,UAAYC,EAChB7U,EAAI4Y,OACJ5Y,EAAIw1B,SACN,CACF,CACAE,WACE,MAAM11B,EAAMrP,KAAKqP,IACX5F,EAAOzJ,KAAKwI,SACZ,WAACgf,EAAU,KAAE7I,GAAQlV,EACrByhD,EAAalrD,KAAKgvD,aAAahtD,OACrC,IAAIE,EAAGwc,EAAQkL,EAaf,GAZIngB,EAAKke,YAAYF,SACnB2oC,GAAgBpwD,KAAMkrD,GAEpBvsC,EAAK8I,SACPznB,KAAKiZ,MAAMjY,SAAQ,CAACsB,EAAMyI,KACxB,GAAc,IAAVA,EAAa,CACf2T,EAAS1e,KAAKunB,8BAA8BjlB,EAAK2G,OACjD,MAAMo6B,EAAc1kB,EAAKqe,WAAWh9B,KAAK0S,WAAW3H,EAAQ,IAC5D2lD,GAAe1wD,KAAMqjC,EAAa3kB,EAAQwsC,EAC5C,KAGA1jC,EAAWC,QAAS,CAEtB,IADApY,EAAIs1B,OACCziC,EAAIgpD,EAAa,EAAGhpD,GAAK,EAAGA,IAAK,CACpC,MAAMmhC,EAAc7b,EAAWwV,WAAWh9B,KAAKovD,qBAAqBltD,KAC9D,MAACkC,EAAK,UAAEigB,GAAagf,EACtBhf,GAAcjgB,IAGnBiL,EAAIgV,UAAYA,EAChBhV,EAAI8U,YAAc/f,EAClBiL,EAAI81B,YAAY9B,EAAYrK,YAC5B3pB,EAAI+1B,eAAiB/B,EAAYpK,iBACjCva,EAAS1e,KAAKunB,8BAA8B9d,EAAKwP,MAAMvP,QAAU1J,KAAKqB,IAAMrB,KAAKuD,KACjFqmB,EAAW5pB,KAAKqvD,iBAAiBntD,EAAGwc,GACpCrP,EAAIg2B,YACJh2B,EAAIi2B,OAAOtlC,KAAKgnB,QAAShnB,KAAKinB,SAC9B5X,EAAIk2B,OAAO3b,EAAS7f,EAAG6f,EAAS5f,GAChCqF,EAAIm2B,SACN,CACAn2B,EAAIw1B,SACN,CACF,CACAlM,aAAc,CACd+M,aACE,MAAMr2B,EAAMrP,KAAKqP,IACX5F,EAAOzJ,KAAKwI,QACZquB,EAAWptB,EAAKwP,MACtB,IAAK4d,EAASpP,QACZ,OAEF,MAAM3H,EAAa9f,KAAKmnB,cAAc,GACtC,IAAIzI,EAAQ3B,EACZ1N,EAAIs1B,OACJt1B,EAAI6pC,UAAUl5C,KAAKgnB,QAAShnB,KAAKinB,SACjC5X,EAAIqiD,OAAO5xC,GACXzQ,EAAIu0B,UAAY,SAChBv0B,EAAI00B,aAAe,SACnB/jC,KAAKiZ,MAAMjY,SAAQ,CAACsB,EAAMyI,KACxB,GAAc,IAAVA,IAAgBtB,EAAKC,QACvB,OAEF,MAAM25B,EAAcxM,EAASmG,WAAWh9B,KAAK0S,WAAW3H,IAClDm2B,GAAW,OAAOmC,EAAYnI,MAEpC,GADAxc,EAAS1e,KAAKunB,8BAA8BvnB,KAAKiZ,MAAMlO,GAAO9B,OAC1Do6B,EAAYxJ,kBAAmB,CACjCxqB,EAAI6rB,KAAOgG,EAASM,OACpBzkB,EAAQ1N,EAAImwC,YAAYl9C,EAAKkS,OAAOuI,MACpC1N,EAAI4U,UAAYof,EAAYvJ,cAC5B,MAAMnK,GAAU,OAAU0T,EAAYtJ,iBACtC1qB,EAAIu1B,UACD7nB,EAAQ,EAAI4S,EAAQvlB,MACpBsU,EAASwiB,EAASh4B,KAAO,EAAIymB,EAAQ1lB,IACtC8S,EAAQ4S,EAAQ5S,MAChBmkB,EAASh4B,KAAOymB,EAAQ7S,OAE5B,EACA,OAAWzN,EAAK/M,EAAKkS,MAAO,GAAIkK,EAAQwiB,EAAU,CAChD98B,MAAOi/B,EAAYj/B,OACnB,IAEJiL,EAAIw1B,SACN,CACAc,YAAa,EAEfkrB,GAAkB3kD,GAAK,eACvB2kD,GAAkBh1C,SAAW,CAC3B4L,SAAS,EACTkqC,SAAS,EACT/nC,SAAU,YACVpC,WAAY,CACVC,SAAS,EACTpD,UAAW,EACX2U,WAAY,GACZC,iBAAkB,GAEpBta,KAAM,CACJ+I,UAAU,GAEZ5H,WAAY,EACZ7G,MAAO,CACL4gB,mBAAmB,EACnBJ,SAAU9C,GAAMb,WAAWC,SAE7BpO,YAAa,CACXmS,mBAAex5B,EACfy5B,gBAAiB,EACjBtS,SAAS,EACTyT,KAAM,CACJhyB,KAAM,IAERuwB,SAASjlB,GACP,OAAOA,CACT,EACAmb,QAAS,EACTw/B,mBAAmB,IAGvB0B,GAAkBh7B,cAAgB,CAChC,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEjBg7B,GAAkBptC,YAAc,CAC9B+D,WAAY,CACVxgB,UAAW,SAIf,MAAM4qD,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAM5oD,KAAM,EAAG6oD,MAAO,KAC5CC,OAAQ,CAACF,QAAQ,EAAM5oD,KAAM,IAAM6oD,MAAO,IAC1CE,OAAQ,CAACH,QAAQ,EAAM5oD,KAAM,IAAO6oD,MAAO,IAC3CG,KAAM,CAACJ,QAAQ,EAAM5oD,KAAM,KAAS6oD,MAAO,IAC3CI,IAAK,CAACL,QAAQ,EAAM5oD,KAAM,MAAU6oD,MAAO,IAC3CK,KAAM,CAACN,QAAQ,EAAO5oD,KAAM,OAAW6oD,MAAO,GAC9CM,MAAO,CAACP,QAAQ,EAAM5oD,KAAM,OAAS6oD,MAAO,IAC5CO,QAAS,CAACR,QAAQ,EAAO5oD,KAAM,OAAS6oD,MAAO,GAC/CQ,KAAM,CAACT,QAAQ,EAAM5oD,KAAM,SAEvBspD,GAAS1rD,OAAOC,KAAK6qD,IAC3B,SAASa,GAAO/5C,EAAGnO,GACjB,OAAOmO,EAAInO,CACb,CACA,SAASqI,GAAMrJ,EAAOmpD,GACpB,IAAI,OAAcA,GAChB,OAAO,KAET,MAAMC,EAAUppD,EAAMqpD,UAChB,OAACC,EAAM,MAAEl7B,EAAK,WAAEm7B,GAAcvpD,EAAMwpD,WAC1C,IAAI9pD,EAAQypD,EASZ,MARsB,oBAAXG,IACT5pD,EAAQ4pD,EAAO5pD,KAEZ,OAAeA,KAClBA,EAA0B,kBAAX4pD,EACXF,EAAQ//C,MAAM3J,EAAO4pD,GACrBF,EAAQ//C,MAAM3J,IAEN,OAAVA,EACK,MAEL0uB,IACF1uB,EAAkB,SAAV0uB,KAAqB,OAASm7B,KAA8B,IAAfA,EAEjDH,EAAQ9pC,QAAQ5f,EAAO0uB,GADvBg7B,EAAQ9pC,QAAQ5f,EAAO,UAAW6pD,KAGhC7pD,EACV,CACA,SAAS+pD,GAA0BC,EAAS5xD,EAAKkC,EAAK2vD,GACpD,MAAMpoD,EAAO0nD,GAAMxwD,OACnB,IAAK,IAAIE,EAAIswD,GAAMn1C,QAAQ41C,GAAU/wD,EAAI4I,EAAO,IAAK5I,EAAG,CACtD,MAAMixD,EAAWvB,GAAUY,GAAMtwD,IAC3BiC,EAASgvD,EAASpB,MAAQoB,EAASpB,MAAQzlD,OAAOkhD,iBACxD,GAAI2F,EAASrB,QAAU1wD,KAAKi3B,MAAM90B,EAAMlC,IAAQ8C,EAASgvD,EAASjqD,QAAUgqD,EAC1E,OAAOV,GAAMtwD,EAEjB,CACA,OAAOswD,GAAM1nD,EAAO,EACtB,CACA,SAASsoD,GAA2B7pD,EAAO+1B,EAAU2zB,EAAS5xD,EAAKkC,GACjE,IAAK,IAAIrB,EAAIswD,GAAMxwD,OAAS,EAAGE,GAAKswD,GAAMn1C,QAAQ41C,GAAU/wD,IAAK,CAC/D,MAAMymB,EAAO6pC,GAAMtwD,GACnB,GAAI0vD,GAAUjpC,GAAMmpC,QAAUvoD,EAAMqpD,SAAShqC,KAAKrlB,EAAKlC,EAAKsnB,IAAS2W,EAAW,EAC9E,OAAO3W,CAEX,CACA,OAAO6pC,GAAMS,EAAUT,GAAMn1C,QAAQ41C,GAAW,EAClD,CACA,SAASI,GAAmB1qC,GAC1B,IAAK,IAAIzmB,EAAIswD,GAAMn1C,QAAQsL,GAAQ,EAAG7d,EAAO0nD,GAAMxwD,OAAQE,EAAI4I,IAAQ5I,EACrE,GAAI0vD,GAAUY,GAAMtwD,IAAI4vD,OACtB,OAAOU,GAAMtwD,EAGnB,CACA,SAASoxD,GAAQr6C,EAAOs6C,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWxxD,OAAQ,CAC5B,MAAM,GAACkkB,EAAE,GAAEC,IAAM,QAAQqtC,EAAYD,GAC/B9qC,EAAY+qC,EAAWttC,IAAOqtC,EAAOC,EAAWttC,GAAMstC,EAAWrtC,GACvElN,EAAMwP,IAAa,CACrB,OALExP,EAAMs6C,IAAQ,CAMlB,CACA,SAASE,GAAclqD,EAAO0P,EAAO6K,EAAK4vC,GACxC,MAAMf,EAAUppD,EAAMqpD,SAChBt7B,GAASq7B,EAAQ9pC,QAAQ5P,EAAM,GAAGhQ,MAAOyqD,GACzCz2C,EAAOhE,EAAMA,EAAMjX,OAAS,GAAGiH,MACrC,IAAIiuB,EAAOnsB,EACX,IAAKmsB,EAAQI,EAAOJ,GAASja,EAAMia,GAASy7B,EAAQzvD,IAAIg0B,EAAO,EAAGw8B,GAChE3oD,EAAQ+Y,EAAIoT,GACRnsB,GAAS,IACXkO,EAAMlO,GAAOmsB,OAAQ,GAGzB,OAAOje,CACT,CACA,SAAS06C,GAAoBpqD,EAAOjB,EAAQorD,GAC1C,MAAMz6C,EAAQ,GACR6K,EAAM,CAAC,EACPhZ,EAAOxC,EAAOtG,OACpB,IAAIE,EAAG+G,EACP,IAAK/G,EAAI,EAAGA,EAAI4I,IAAQ5I,EACtB+G,EAAQX,EAAOpG,GACf4hB,EAAI7a,GAAS/G,EACb+W,EAAMhW,KAAK,CACTgG,QACAiuB,OAAO,IAGX,OAAiB,IAATpsB,GAAe4oD,EAAqBD,GAAclqD,EAAO0P,EAAO6K,EAAK4vC,GAAzCz6C,CACtC,CACA,MAAM26C,WAAkBh4B,GACtB77B,YAAYgJ,GACVoT,MAAMpT,GACN/I,KAAKoY,OAAS,CACZ3M,KAAM,GACN4H,OAAQ,GACRhK,IAAK,IAEPrJ,KAAK6zD,MAAQ,MACb7zD,KAAK8zD,gBAAaxzD,EAClBN,KAAK+zD,SAAW,CAAC,EACjB/zD,KAAKg0D,aAAc,EACnBh0D,KAAK+yD,gBAAazyD,CACpB,CACAy8B,KAAKoU,EAAW1nC,GACd,MAAM8pD,EAAOpiB,EAAUoiB,OAASpiB,EAAUoiB,KAAO,CAAC,GAC5CZ,EAAU3yD,KAAK4yD,SAAW,IAAI1pC,GAASC,MAAMgoB,EAAUjoB,SAASxoB,OACtE,QAAQ6yD,EAAKU,eAAgBtB,EAAQpqC,WACrCvoB,KAAK+yD,WAAa,CAChBF,OAAQU,EAAKV,OACbl7B,MAAO47B,EAAK57B,MACZm7B,WAAYS,EAAKT,YAEnB32C,MAAM4gB,KAAKoU,GACXnxC,KAAKg0D,YAAcvqD,EAAKyqD,UAC1B,CACAthD,MAAMpE,EAAKzD,GACT,YAAYzK,IAARkO,EACK,KAEFoE,GAAM5S,KAAMwO,EACrB,CACA6hB,eACElU,MAAMkU,eACNrwB,KAAKoY,OAAS,CACZ3M,KAAM,GACN4H,OAAQ,GACRhK,IAAK,GAET,CACAy0B,sBACE,MAAMt1B,EAAUxI,KAAKwI,QACfmqD,EAAU3yD,KAAK4yD,SACfjqC,EAAOngB,EAAQ+qD,KAAK5qC,MAAQ,MAClC,IAAI,IAACtnB,EAAG,IAAEkC,EAAG,WAAE6I,EAAU,WAAEC,GAAcrM,KAAKmM,gBAC9C,SAASgoD,EAAa17B,GACfrsB,GAAegR,MAAMqb,EAAOp3B,OAC/BA,EAAMD,KAAKC,IAAIA,EAAKo3B,EAAOp3B,MAExBgL,GAAe+Q,MAAMqb,EAAOl1B,OAC/BA,EAAMnC,KAAKmC,IAAIA,EAAKk1B,EAAOl1B,KAE/B,CACK6I,GAAeC,IAClB8nD,EAAan0D,KAAKo0D,mBACK,UAAnB5rD,EAAQiwB,QAA+C,WAAzBjwB,EAAQyQ,MAAMulB,QAC9C21B,EAAan0D,KAAKgU,WAAU,KAGhC3S,GAAM,OAAeA,KAAS+b,MAAM/b,GAAOA,GAAOsxD,EAAQ9pC,QAAQlnB,KAAKC,MAAO+mB,GAC9EplB,GAAM,OAAeA,KAAS6Z,MAAM7Z,GAAOA,GAAOovD,EAAQ5pC,MAAMpnB,KAAKC,MAAO+mB,GAAQ,EACpF3oB,KAAKqB,IAAMD,KAAKC,IAAIA,EAAKkC,EAAM,GAC/BvD,KAAKuD,IAAMnC,KAAKmC,IAAIlC,EAAM,EAAGkC,EAC/B,CACA6wD,kBACE,MAAM/8C,EAAMrX,KAAKq0D,qBACjB,IAAIhzD,EAAMiL,OAAOE,kBACbjJ,EAAM+I,OAAOC,kBAKjB,OAJI8K,EAAIrV,SACNX,EAAMgW,EAAI,GACV9T,EAAM8T,EAAIA,EAAIrV,OAAS,IAElB,CAACX,MAAKkC,MACf,CACA06B,aACE,MAAMz1B,EAAUxI,KAAKwI,QACf8rD,EAAW9rD,EAAQ+qD,KACnB18B,EAAWruB,EAAQyQ,MACnBu6C,EAAiC,WAApB38B,EAAS2H,OAAsBx+B,KAAKq0D,qBAAuBr0D,KAAKu0D,YAC5D,UAAnB/rD,EAAQiwB,QAAsB+6B,EAAWxxD,SAC3ChC,KAAKqB,IAAMrB,KAAKy8B,UAAY+2B,EAAW,GACvCxzD,KAAKuD,IAAMvD,KAAKw8B,UAAYg3B,EAAWA,EAAWxxD,OAAS,IAE7D,MAAMX,EAAMrB,KAAKqB,IACXkC,EAAMvD,KAAKuD,IACX0V,GAAQ,QAAeu6C,EAAYnyD,EAAKkC,GAU9C,OATAvD,KAAK6zD,MAAQS,EAAS3rC,OAASkO,EAASD,SACpCo8B,GAA0BsB,EAASrB,QAASjzD,KAAKqB,IAAKrB,KAAKuD,IAAKvD,KAAKw0D,kBAAkBnzD,IACvF+xD,GAA2BpzD,KAAMiZ,EAAMjX,OAAQsyD,EAASrB,QAASjzD,KAAKqB,IAAKrB,KAAKuD,MACpFvD,KAAK8zD,WAAcj9B,EAASK,MAAMC,SAA0B,SAAfn3B,KAAK6zD,MAC9CR,GAAmBrzD,KAAK6zD,YADyCvzD,EAErEN,KAAKy0D,YAAYjB,GACbhrD,EAAQkB,SACVuP,EAAMvP,UAEDiqD,GAAoB3zD,KAAMiZ,EAAOjZ,KAAK8zD,WAC/C,CACAr1B,gBACMz+B,KAAKwI,QAAQksD,qBACf10D,KAAKy0D,YAAYz0D,KAAKiZ,MAAM6K,KAAIxhB,IAASA,EAAK2G,QAElD,CACAwrD,YAAYjB,GACV,IAEIl8B,EAAOra,EAFP3b,EAAQ,EACRqI,EAAM,EAEN3J,KAAKwI,QAAQkW,QAAU80C,EAAWxxD,SACpCs1B,EAAQt3B,KAAK20D,mBAAmBnB,EAAW,IAEzClyD,EADwB,IAAtBkyD,EAAWxxD,OACL,EAAIs1B,GAEHt3B,KAAK20D,mBAAmBnB,EAAW,IAAMl8B,GAAS,EAE7Dra,EAAOjd,KAAK20D,mBAAmBnB,EAAWA,EAAWxxD,OAAS,IAE5D2H,EADwB,IAAtB6pD,EAAWxxD,OACPib,GAECA,EAAOjd,KAAK20D,mBAAmBnB,EAAWA,EAAWxxD,OAAS,KAAO,GAGhF,MAAMmhC,EAAQqwB,EAAWxxD,OAAS,EAAI,GAAM,IAC5CV,GAAQ,OAAYA,EAAO,EAAG6hC,GAC9Bx5B,GAAM,OAAYA,EAAK,EAAGw5B,GAC1BnjC,KAAK+zD,SAAW,CAACzyD,QAAOqI,MAAKxF,OAAQ,GAAK7C,EAAQ,EAAIqI,GACxD,CACA4qD,YACE,MAAM5B,EAAU3yD,KAAK4yD,SACfvxD,EAAMrB,KAAKqB,IACXkC,EAAMvD,KAAKuD,IACXiF,EAAUxI,KAAKwI,QACf8rD,EAAW9rD,EAAQ+qD,KACnB75B,EAAQ46B,EAAS3rC,MAAQqqC,GAA0BsB,EAASrB,QAAS5xD,EAAKkC,EAAKvD,KAAKw0D,kBAAkBnzD,IACtGssD,GAAW,IAAAhmD,GAAe2sD,EAAS3G,SAAU,GAC7C7kC,EAAoB,SAAV4Q,GAAmB46B,EAASxB,WACtC8B,GAAa,OAAS9rC,KAAwB,IAAZA,EAClC7P,EAAQ,CAAC,EACf,IACIs6C,EAAM1gD,EADNykB,EAAQj2B,EAMZ,GAJIuzD,IACFt9B,GAASq7B,EAAQ9pC,QAAQyO,EAAO,UAAWxO,IAE7CwO,GAASq7B,EAAQ9pC,QAAQyO,EAAOs9B,EAAa,MAAQl7B,GACjDi5B,EAAQ/pC,KAAKrlB,EAAKlC,EAAKq4B,GAAS,IAASi0B,EAC3C,MAAM,IAAItlC,MAAMhnB,EAAM,QAAUkC,EAAM,uCAAyCoqD,EAAW,IAAMj0B,GAElG,MAAM85B,EAAsC,SAAzBhrD,EAAQyQ,MAAMulB,QAAqBx+B,KAAK60D,oBAC3D,IAAKtB,EAAOj8B,EAAOzkB,EAAQ,EAAG0gD,EAAOhwD,EAAKgwD,GAAQZ,EAAQzvD,IAAIqwD,EAAM5F,EAAUj0B,GAAQ7mB,IACpFygD,GAAQr6C,EAAOs6C,EAAMC,GAKvB,OAHID,IAAShwD,GAA0B,UAAnBiF,EAAQiwB,QAAgC,IAAV5lB,GAChDygD,GAAQr6C,EAAOs6C,EAAMC,GAEhB1sD,OAAOC,KAAKkS,GAAOR,MAAK,CAACC,EAAGnO,IAAMmO,EAAInO,IAAGuZ,KAAI/Z,IAAMA,GAC5D,CACA0K,iBAAiBxL,GACf,MAAM0pD,EAAU3yD,KAAK4yD,SACf0B,EAAWt0D,KAAKwI,QAAQ+qD,KAC9B,OAAIe,EAASQ,cACJnC,EAAQnqC,OAAOvf,EAAOqrD,EAASQ,eAEjCnC,EAAQnqC,OAAOvf,EAAOqrD,EAASL,eAAec,SACvD,CACAC,oBAAoBzB,EAAMxoD,EAAOkO,EAAOuP,GACtC,MAAMhgB,EAAUxI,KAAKwI,QACf+f,EAAU/f,EAAQ+qD,KAAKU,eACvBtrC,EAAO3oB,KAAK6zD,MACZH,EAAY1zD,KAAK8zD,WACjBmB,EAActsC,GAAQJ,EAAQI,GAC9BusC,EAAcxB,GAAanrC,EAAQmrC,GACnCpxD,EAAO2W,EAAMlO,GACbmsB,EAAQw8B,GAAawB,GAAe5yD,GAAQA,EAAK40B,MACjD1iB,EAAQxU,KAAK4yD,SAASpqC,OAAO+qC,EAAM/qC,IAAW0O,EAAQg+B,EAAcD,IACpEE,EAAY3sD,EAAQyQ,MAAMwgB,SAChC,OAAO07B,GAAY,OAASA,EAAW,CAAC3gD,EAAOzJ,EAAOkO,GAAQjZ,MAAQwU,CACxE,CACA4qB,mBAAmBnmB,GACjB,IAAI/W,EAAG4I,EAAMxI,EACb,IAAKJ,EAAI,EAAG4I,EAAOmO,EAAMjX,OAAQE,EAAI4I,IAAQ5I,EAC3CI,EAAO2W,EAAM/W,GACbI,EAAKkS,MAAQxU,KAAKg1D,oBAAoB1yD,EAAK2G,MAAO/G,EAAG+W,EAEzD,CACA07C,mBAAmB1rD,GACjB,OAAiB,OAAVA,EAAiB8K,KAAO9K,EAAQjJ,KAAKqB,MAAQrB,KAAKuD,IAAMvD,KAAKqB,IACtE,CACA2X,iBAAiB/P,GACf,MAAMmsD,EAAUp1D,KAAK+zD,SACf9nC,EAAMjsB,KAAK20D,mBAAmB1rD,GACpC,OAAOjJ,KAAK+d,oBAAoBq3C,EAAQ9zD,MAAQ2qB,GAAOmpC,EAAQjxD,OACjE,CACAw9B,iBAAiBC,GACf,MAAMwzB,EAAUp1D,KAAK+zD,SACf9nC,EAAMjsB,KAAK8hC,mBAAmBF,GAASwzB,EAAQjxD,OAASixD,EAAQzrD,IACtE,OAAO3J,KAAKqB,IAAM4qB,GAAOjsB,KAAKuD,IAAMvD,KAAKqB,IAC3C,CACAg0D,cAAc7gD,GACZ,MAAM8gD,EAAYt1D,KAAKwI,QAAQyQ,MACzBs8C,EAAiBv1D,KAAKqP,IAAImwC,YAAYhrC,GAAOuI,MAC7CwD,GAAQ,IAAAjW,GAAUtK,KAAK6a,eAAiBy6C,EAAUn8B,YAAcm8B,EAAUp8B,aAC1Es8B,EAAcp0D,KAAK6e,IAAIM,GACvBk1C,EAAcr0D,KAAK+e,IAAII,GACvBm1C,EAAe11D,KAAKuhC,wBAAwB,GAAGr4B,KACrD,MAAO,CACLulB,EAAI8mC,EAAiBC,EAAgBE,EAAeD,EACpD9mC,EAAI4mC,EAAiBE,EAAgBC,EAAeF,EAExD,CACAhB,kBAAkBmB,GAChB,MAAMrB,EAAWt0D,KAAKwI,QAAQ+qD,KACxBU,EAAiBK,EAASL,eAC1BzrC,EAASyrC,EAAeK,EAAS3rC,OAASsrC,EAAepC,YACzD+D,EAAe51D,KAAKg1D,oBAAoBW,EAAa,EAAGhC,GAAoB3zD,KAAM,CAAC21D,GAAc31D,KAAK8zD,YAAatrC,GACnHtf,EAAOlJ,KAAKq1D,cAAcO,GAC1B1C,EAAW9xD,KAAKkE,MAAMtF,KAAK6a,eAAiB7a,KAAK+c,MAAQ7T,EAAKulB,EAAIzuB,KAAK8c,OAAS5T,EAAKylB,GAAK,EAChG,OAAOukC,EAAW,EAAIA,EAAW,CACnC,CACA2B,oBACE,IACI3yD,EAAG4I,EADH0oD,EAAaxzD,KAAKoY,OAAO3M,MAAQ,GAErC,GAAI+nD,EAAWxxD,OACb,OAAOwxD,EAET,MAAMr2B,EAAQn9B,KAAKiN,0BACnB,GAAIjN,KAAKg0D,aAAe72B,EAAMn7B,OAC5B,OAAQhC,KAAKoY,OAAO3M,KAAO0xB,EAAM,GAAGhwB,WAAWkH,mBAAmBrU,MAEpE,IAAKkC,EAAI,EAAG4I,EAAOqyB,EAAMn7B,OAAQE,EAAI4I,IAAQ5I,EAC3CsxD,EAAaA,EAAWj7C,OAAO4kB,EAAMj7B,GAAGiL,WAAWkH,mBAAmBrU,OAExE,OAAQA,KAAKoY,OAAO3M,KAAOzL,KAAK61D,UAAUrC,EAC5C,CACAa,qBACE,MAAMb,EAAaxzD,KAAKoY,OAAO/E,QAAU,GACzC,IAAInR,EAAG4I,EACP,GAAI0oD,EAAWxxD,OACb,OAAOwxD,EAET,MAAMngD,EAASrT,KAAKsT,YACpB,IAAKpR,EAAI,EAAG4I,EAAOuI,EAAOrR,OAAQE,EAAI4I,IAAQ5I,EAC5CsxD,EAAWvwD,KAAK2P,GAAM5S,KAAMqT,EAAOnR,KAErC,OAAQlC,KAAKoY,OAAO/E,OAASrT,KAAKg0D,YAAcR,EAAaxzD,KAAK61D,UAAUrC,EAC9E,CACAqC,UAAUvtD,GACR,OAAO,IAAAkQ,GAAalQ,EAAOmQ,KAAKg6C,IAClC,EAsBF,SAAS/W,GAAYoa,EAAO34C,EAAKzT,GAC/B,IAEIqsD,EAAYC,EAAYC,EAAYC,EAFpChwC,EAAK,EACLC,EAAK2vC,EAAM9zD,OAAS,EAEpB0H,GACEyT,GAAO24C,EAAM5vC,GAAI+F,KAAO9O,GAAO24C,EAAM3vC,GAAI8F,OACzC/F,KAAIC,OAAM,OAAa2vC,EAAO,MAAO34C,MAEvC8O,IAAK8pC,EAAYxC,KAAM0C,GAAcH,EAAM5vC,MAC3C+F,IAAK+pC,EAAYzC,KAAM2C,GAAcJ,EAAM3vC,MAEzChJ,GAAO24C,EAAM5vC,GAAIqtC,MAAQp2C,GAAO24C,EAAM3vC,GAAIotC,QAC1CrtC,KAAIC,OAAM,OAAa2vC,EAAO,OAAQ34C,MAExCo2C,KAAMwC,EAAY9pC,IAAKgqC,GAAcH,EAAM5vC,MAC3CqtC,KAAMyC,EAAY/pC,IAAKiqC,GAAcJ,EAAM3vC,KAE/C,MAAMgwC,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe94C,EAAM44C,GAAcI,EAAOF,CACrF,CAvCArC,GAAU1nD,GAAK,OACf0nD,GAAU/3C,SAAW,CACnB4c,OAAQ,OACRvP,SAAU,CAAC,EACXqqC,KAAM,CACJV,QAAQ,EACRlqC,MAAM,EACNgP,OAAO,EACPm7B,YAAY,EACZG,QAAS,cACTgB,eAAgB,CAAC,GAEnBh7C,MAAO,CACLulB,OAAQ,OACRtH,MAAO,CACLC,SAAS,KAyBf,MAAMi/B,WAAwBxC,GAC5B7zD,YAAYgJ,GACVoT,MAAMpT,GACN/I,KAAKq2D,OAAS,GACdr2D,KAAKs2D,aAAUh2D,EACfN,KAAKu2D,iBAAcj2D,CACrB,CACAm0D,cACE,MAAMjB,EAAaxzD,KAAKw2D,yBAClBV,EAAQ91D,KAAKq2D,OAASr2D,KAAKy2D,iBAAiBjD,GAClDxzD,KAAKs2D,QAAU5a,GAAYoa,EAAO91D,KAAKqB,KACvCrB,KAAKu2D,YAAc7a,GAAYoa,EAAO91D,KAAKuD,KAAOvD,KAAKs2D,QACvDn6C,MAAMs4C,YAAYjB,EACpB,CACAiD,iBAAiBjD,GACf,MAAM,IAACnyD,EAAG,IAAEkC,GAAOvD,KACb+B,EAAQ,GACR+zD,EAAQ,GACd,IAAI5zD,EAAG4I,EAAMkI,EAAM4F,EAAMkB,EACzB,IAAK5X,EAAI,EAAG4I,EAAO0oD,EAAWxxD,OAAQE,EAAI4I,IAAQ5I,EAChD0W,EAAO46C,EAAWtxD,GACd0W,GAAQvX,GAAOuX,GAAQrV,GACzBxB,EAAMkB,KAAK2V,GAGf,GAAI7W,EAAMC,OAAS,EACjB,MAAO,CACL,CAACuxD,KAAMlyD,EAAK4qB,IAAK,GACjB,CAACsnC,KAAMhwD,EAAK0oB,IAAK,IAGrB,IAAK/pB,EAAI,EAAG4I,EAAO/I,EAAMC,OAAQE,EAAI4I,IAAQ5I,EAC3C4X,EAAO/X,EAAMG,EAAI,GACjB8Q,EAAOjR,EAAMG,EAAI,GACjB0W,EAAO7W,EAAMG,GACTd,KAAKu2B,OAAO7d,EAAO9G,GAAQ,KAAO4F,GACpCk9C,EAAM7yD,KAAK,CAACswD,KAAM36C,EAAMqT,IAAK/pB,GAAK4I,EAAO,KAG7C,OAAOgrD,CACT,CACAU,yBACE,IAAIhD,EAAaxzD,KAAKoY,OAAO/O,KAAO,GACpC,GAAImqD,EAAWxxD,OACb,OAAOwxD,EAET,MAAM/nD,EAAOzL,KAAK60D,oBACZrgD,EAAQxU,KAAKq0D,qBAOnB,OALEb,EADE/nD,EAAKzJ,QAAUwS,EAAMxS,OACVhC,KAAK61D,UAAUpqD,EAAK8M,OAAO/D,IAE3B/I,EAAKzJ,OAASyJ,EAAO+I,EAEpCg/C,EAAaxzD,KAAKoY,OAAO/O,IAAMmqD,EACxBA,CACT,CACAmB,mBAAmB1rD,GACjB,OAAQyyC,GAAY17C,KAAKq2D,OAAQptD,GAASjJ,KAAKs2D,SAAWt2D,KAAKu2D,WACjE,CACA50B,iBAAiBC,GACf,MAAMwzB,EAAUp1D,KAAK+zD,SACflyB,EAAU7hC,KAAK8hC,mBAAmBF,GAASwzB,EAAQjxD,OAASixD,EAAQzrD,IAC1E,OAAO+xC,GAAY17C,KAAKq2D,OAAQx0B,EAAU7hC,KAAKu2D,YAAcv2D,KAAKs2D,SAAS,EAC7E,EAEFF,GAAgBlqD,GAAK,aACrBkqD,GAAgBv6C,SAAW+3C,GAAU/3C,Q","sources":["webpack://@openeo/web-editor/./node_modules/chart.js/dist/chart.esm.js"],"sourcesContent":["/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","d","animationOptions","Object","keys","_fallback","_indexable","_scriptable","name","properties","animation","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_","sort","a","computeMinSampleSize","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","T","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","call","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","startsWith","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","tickTextAlign","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","p","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","defineProperties","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","_args","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","m","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}
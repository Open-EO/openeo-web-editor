{"version":3,"file":"js/6636.d9862bc2.js","mappings":"8KAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAAEJ,EAAIK,OAAQ,CAACH,EAAG,cAAc,CAACI,IAAIN,EAAIO,KAAKC,IAAI,cAAcC,MAAM,CAAC,MAAQ,QAAQ,WAAW,KAAK,SAAWT,EAAIU,SAAS,QAAUV,EAAIW,cAAc,YAAa,EAAM,eAAiBX,EAAIY,UAAU,UAAYZ,EAAIa,SAAS,cAAgBb,EAAIc,cAAc,SAAWd,EAAIe,SAAS,eAAiBf,EAAIgB,gBAAgBC,GAAG,CAAC,IAAMjB,EAAIkB,UAAUC,MAAM,CAACC,MAAOpB,EAAIqB,SAAUC,SAAS,SAAUC,GAAMvB,EAAIqB,SAASE,CAAG,EAAEC,WAAW,cAAexB,EAAIyB,YAAavB,EAAG,SAAS,CAACO,MAAM,CAAC,KAAO,SAAS,MAAQ,WAAWQ,GAAG,CAAC,MAAQ,SAASS,GAAQ,OAAO1B,EAAI2B,MAAM,YAAY,IAAI,CAACzB,EAAG,IAAI,CAACE,YAAY,kBAAkBJ,EAAI4B,MAAM1B,EAAG,MAAM,CAACE,YAAY,WAAW,CAACF,EAAG,IAAI,CAACE,YAAY,2BAA2BJ,EAAI6B,GAAG,0BAA0B,EACp1B,EACIC,EAAkB,G,0CCYtB,SACAC,KAAA,YACAC,WAAA,CACAC,YAAAA,KAEAC,MAAA,CACAd,MAAA,GACAb,KAAA,CACAA,KAAA4B,OACAC,QAAA,IAEAvB,SAAA,CACAN,KAAA8B,QACAD,SAAA,GAEAE,QAAA,CACA/B,KAAA,CAAAgC,MAAAC,SAEAC,OAAA,CACAlC,KAAAiC,QAEAE,QAAA,GACAC,aAAA,CACApC,KAAAqC,SACAR,QAAA,OAGAS,SAAA,CACAlC,aAAAA,GACA,IAAAmC,EAAA,GACA,YAAAvC,MACA,gBACA,IAAAwC,EAAA,KAAAC,OAAAF,MAAAG,YAAAC,MAAAC,GAAAA,EAAAC,IAAA,KAAAV,UACA,GAAAW,EAAAA,EAAAC,SAAAP,GAAA,CACA,IACAD,EAAAC,EAAAQ,UAAA,YAAAC,KAAAC,GAAAA,EAAA1B,MACA,OAAA2B,GAAA,CACA,OAAAZ,EAAAa,QAAAN,EAAAA,EAAAC,SAAAP,EAAA,oBACA,IACA,IAAAa,EAAApB,OAAAqB,OAAAd,EAAA,oBAAAG,MAAAY,GAAA,UAAAA,EAAAvD,OACAqD,GAAArB,MAAAwB,QAAAH,EAAAC,UACAf,EAAAc,EAAAC,OAEA,OAAAH,GAAA,CAEA,CACA,MACA,oBACAZ,EAAA,KAAAE,OAAAF,MAAAG,YACA,MACA,aACAH,EAAA,KAAAE,OAAAF,MAAAkB,KAAAA,KACA,MACA,gBACA,iBACAlB,EAAA,KAAAE,OAAAF,MAAAmB,MAAAA,MACA,MACA,gBACAnB,EAAA,KAAAE,OAAAF,MAAAoB,OAAAC,UACA,MACA,mBACArB,EAAA,KAAAE,OAAAF,MAAAsB,YAAAC,gBACA,MACA,sBACA,IAAAC,EAAAC,EAAA,MACAC,EAAA,GACA,QAAAC,KAAAH,EAAAI,aACAF,EAAAC,GAAA,CAAAlE,KAAAkE,GAEA3B,EAAAN,OAAAmC,OAAAH,EAAAF,EAAAM,WACA,MACA,oBACA9B,EAAA,KAAAE,OAAAF,MAAAsB,YAAAS,iBACA,MACA,mBACA/B,EAAA,KAAAE,OAAAF,MAAAgC,aACA,MACA,mBACAhC,EAAA,KAAAE,OAAAF,MAAAiC,WAAAC,eAAAC,YACA,MACA,kBACAnC,EAAAN,OAAA0C,KAAA,KAAAlC,OAAAF,MAAAqC,aACA,MACA,0BACArC,EAAA,KAAAJ,WAAA,KAAAM,OAAAF,MAAAqC,YAAA3C,OAAA0C,KAAA,KAAAlC,OAAAF,MAAAqC,YAAA,KAAAzC,SAAA0C,UAAA,GACA,MAGA,yBAAAzC,cAAAG,GAAA,kBAAAA,IAEAA,EADAO,EAAAA,EAAAC,SAAAR,GACAN,OAAA6C,YAAA7C,OAAA8C,QAAAxC,GAAAyC,QAAA,EAAAjF,EAAAc,KAAA,KAAAuB,aAAAvB,EAAAd,MAGAwC,EAAAyC,QAAA,CAAAnE,EAAAd,IAAA,KAAAqC,aAAAvB,EAAAd,MAIA,IAAAkF,EAAA,GACA,YAAAjF,MACA,oBACA,OAAAuC,EAAAU,KAAAL,GAAA,KAAAsC,EAAAtC,EAAAC,MAAAsC,KAAA,KAAAC,aACA,aACA,OAAA7C,EAAAU,KAAAoC,IAAA,CACAxC,GAAAwC,EAAAxC,GACAyC,MAAAxC,EAAAA,EAAAyC,iBAAAF,OACAF,KAAA,KAAAC,aACA,sBACA,QAAApF,KAAAuC,EAAA,CACA,IAAAL,EAAAK,EAAAvC,GACAiF,EAAAO,KAAA,CACA3C,GAAA7C,EACAsF,MAAApD,EAAAuD,OAAA3C,EAAAA,EAAA4C,eAAA1F,GACAa,MAAAqB,GAEA,CACA,OAAA+C,EACA,gBACA,iBACA,OAAA1C,EAAAU,KAAA0C,GAAA,KAAAT,EAAAS,EAAAC,QAAAT,MAAA,CAAAU,EAAAC,IAAAhD,EAAAA,EAAAiD,WAAAF,EAAAhD,GAAAiD,EAAAjD,MACA,gBACA,QAAA9C,KAAAwC,EACA0C,EAAAO,KAAA,CACA3C,GAAAmD,OAAAC,SAAAlG,EAAA,IACAuF,MAAAvF,EAAA,KAAAwC,EAAAxC,KAGA,OAAAkF,EACA,mBACA,oBACA,mBACA,QAAAlF,KAAAwC,EAAA,CACA,IAAAM,EAAA9C,EAAAmG,cAEAZ,EAAA/C,EAAAxC,GAAA0F,MAEAH,EAIAzC,IAAAyC,EAAAY,gBACAZ,EAAA,GAAAA,OAAAzC,KAJAyC,EAAAzC,EAMAoC,EAAAO,KAAA,CAAA3C,KAAAyC,SACA,CACA,OAAAL,EAAAE,KAAA,KAAAC,aACA,mBACA,OAAA7C,EAAAU,KAAAkD,IAAA,CACAtD,GAAAsD,EAAA3E,KACA8D,MAAAa,EAAA3E,MAAA2E,EAAAC,KAAA,yBAEA,WACA,IAAAC,GAAA,IAAAC,MAAAC,cACAC,EAAAxE,MAAAyE,KAAA,CAAArD,OAAA,OAAAsD,EAAAC,IAAA,KAAAzB,EAAAtD,OAAAyE,EAAAM,MAEA,0BAAA9F,OAAA,KAAAA,MAAAuC,OAAA,QAAAoD,EAAAI,WAAAC,GAAAA,EAAAhE,KAAA,KAAAhC,QAAA,CACA,IAAAiG,EAAA,KAAA5B,EAAA,KAAArE,OACA,KAAAA,MAAAwF,EACAG,EAAAO,QAAAD,GAGAN,EAAAhB,KAAA,KAAAN,EAAA,KAAArE,OAEA,CACA,OAAA2F,EACA,gBACA,kBACA,0BACA,OAAAjE,EAAAU,KAAA+D,GAAA,KAAA9B,EAAA8B,KACA,QACA,OAAAlE,EAAAA,EAAAC,SAAA,KAAAb,SAAA,KAAAA,OAAA+E,SACA,KAAA/E,OAAAgF,iBAAAjE,KAAA+D,GAAA,KAAA9B,EAAA8B,KAEAhF,MAAAwB,QAAA,KAAAzB,SACA,KAAAA,QAAAkB,KAAA+D,GACAlE,EAAAA,EAAAC,SAAAiE,GACAA,EAGA,KAAA9B,EAAA8B,KAKA,GAGA,EACA9F,WAAAA,GACA,6BAAAlB,IACA,EACAO,aAAAA,GACA,YAAAJ,SAAA,0BACA,EACAM,cAAAA,GACA,oBAAAT,KAAA,qDACA,EACAG,QAAAA,GACA,0BAAAH,IACA,EACAQ,QAAAA,GACA,oBAAAR,IACA,EACAK,SAAAA,GACA,YAAAF,UACA6B,MAAAwB,QAAA,KAAA1C,WAAA,SAAAA,SAAAsC,OAGA,YAAAtC,QAEA,GAEAmE,IAAAA,GACA,OACAnE,SAAA,KACAhB,QAAA,EAEA,EACAqH,OAAAA,GACA,KAAAC,UACA,EACAC,MAAA,CACArH,IAAAA,GACA,KAAAoH,UACA,EACAtG,QAAAA,CAAAwG,GACA,IAAAzG,EACA,UAAAyG,EACAzG,EAAA,UAEA,QAAAV,SACA6B,MAAAwB,QAAA8D,KACAA,EAAA,CAAAA,IAEAzG,EAAAyG,EAAArE,KAAAsE,GAAAA,EAAA1E,UAGA,YAAA7C,MACA,gBACA,IAAAwH,EAAAxB,OAAAC,SAAAqB,EAAAzE,IACAhC,EAAAmF,OAAAyB,MAAAD,GAAA,KAAAA,EACA,MACA,sBACA3G,EAAAyG,EAAAzG,MACA,MACA,WACAA,EAAAe,OAAA0F,EAAAzE,IACA,MACA,QACAhC,EAAAyG,EAAAzE,GAGA,KAAAzB,MAAA,QAAAP,EACA,EACAsB,OAAAA,GACA,YAAAnC,MACA,kBACA,0BACA,KAAAc,SAAA,KACA,KAAA4G,iBACA,MACA,gBACA,KAAA5G,SAAA,KACA,KAAAsG,WACA,MAEA,GAEAO,QAAA,IACA7E,EAAAA,EAAA8E,WAAA,2BACA9E,EAAAA,EAAA8E,WAAA,4BAEA1C,CAAAA,CAAA8B,GACA,OACAnE,GAAAmE,EACA1B,MAAA0B,EAEA,EACA,cAAAI,GACA,KAAAtH,QAAA,EACA,mBAAAE,WACA,KAAA6H,gBAEA,mBAAA7H,YACA,KAAA8H,mBAAA,KAAA3F,SAEA,KAAA4F,gBACA,KAAAjI,QAAA,CACA,EACA,oBAAA4H,SACA,KAAAM,YAEA,IAAAC,EAAA,KAAAC,MAAAC,YAEAF,EAAAP,gBAAA1F,MAAAwB,QAAAyE,EAAAG,kBAAAH,EAAAG,gBAAAhF,QACA6E,EAAAI,OAAAJ,EAAAG,gBAAA,GAEA,EACAL,aAAAA,GACA,IAAAlH,EAAA,KAAAA,MACA,QAAAV,UAAA6B,MAAAwB,QAAA3C,GACA,KAAAC,SAAA,KAAAV,cAAA4E,QAAAsD,GAAAzH,EAAA0H,SAAAD,EAAAzF,UAEA,CACA,YAAA7C,MACA,mBACA,oBACA,mBACA,kBAAAa,IACAA,EAAAA,EAAAqF,eAEA,MAEA,IAAAsC,EAAA,KAAApI,cAAAuC,MAAA2F,GAAAA,EAAAzF,KAAAhC,SACA4H,IAAAD,IACA,KAAA1H,SAAA0H,EAEA,CACA,EACApD,WAAAA,CAAAS,EAAAC,GACA,OAAAhD,EAAAA,EAAA4F,6BAAA7C,EAAAP,MAAAQ,EAAAR,MACA,EACA3E,QAAAA,CAAAE,GACA,KAAAC,SAAA,KAAAoE,EAAArE,EACA,ICjViQ,I,cCS7P8H,GAAY,OACd,EACAnJ,EACA+B,GACA,EACA,KACA,KACA,MAIF,QAAeoH,EAAiB,O,gDCpBhC,IAAInJ,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,oBAAoB,CAACF,EAAG,IAAI,CAACF,EAAI6B,GAAG7B,EAAImJ,GAAGnJ,EAAIoJ,SAASlJ,EAAG,YAAY,CAACO,MAAM,CAAC,QAAUT,EAAIsC,QAAQ,MAAQtC,EAAIoB,OAAOH,GAAG,CAAC,MAAQ6G,GAAK9H,EAAI2B,MAAM,QAASmG,OAAO,EAC5P,EACIhG,EAAkB,G,sBCStB,SACAC,KAAA,gBACAC,WAAA,CACAqH,UAAAA,EAAAA,YAEAnH,MAAA,CACAkH,KAAA,CACA7I,KAAA4B,OACAC,QAAA,2CAEAkH,WAAA,CACA/I,KAAA8B,QACAD,SAAA,GAEAhB,MAAA,CACAb,KAAA4B,OACAC,QAAA,SAGAS,SAAA,IACAQ,EAAAA,EAAAkG,WAAA,eACAjH,OAAAA,GACA,IAAAkH,EAAA,KAAAC,UACAC,MACAnE,QAAAmB,IACA,GAAAnE,MAAAwB,QAAA2C,EAAAiD,aAAAjD,EAAAiD,WAAAb,SAAA,YAAAvG,MAAAwB,QAAA2C,EAAAkD,aAAA,kBAAAlD,EAAAtD,GAAA,CACA,IAAAyG,EAAAnD,EAAAkD,WAAArE,QAAAuE,IAAA,IAAAA,EAAAC,WACA,WAAAF,EAAAlG,QAAA,SAAAkG,EAAA,GAAA9H,IACA,CACA,YAEAyB,KAAAkD,IAAA,CAAAtD,GAAAsD,EAAAtD,GAAAyC,MAAA,GAAAa,EAAAtD,QAAAsD,EAAAsD,cAEA,OADAR,EAAAlC,QAAA,CAAAlE,GAAA,GAAAyC,MAAA,iBACA2D,CACA,IC7C8Q,I,cCO1QN,GAAY,OACd,EACAnJ,EACA+B,GACA,EACA,KACA,KACA,MAIF,QAAeoH,EAAiB,O,mFCjBzB,MAAMtE,EAAYvB,EAAAA,EAAM4G,gBAAgB1F,EAAQ,QAAyD2F,YACnGxF,EAAe,CAC3B,SACA,UACA,SACA,UACA,QACA,S","sources":["webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/src/components/datatypes/SelectBox.vue","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?ff2a","webpack://@openeo/web-editor/./src/components/datatypes/SelectBox.vue?8dc4","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseReducer.vue","webpack://@openeo/web-editor/src/components/wizards/tabs/ChooseReducer.vue","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseReducer.vue?bf71","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseReducer.vue?822a","webpack://@openeo/web-editor/./src/components/datatypes/api.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"select-container\"},[(_vm.loaded)?[_c('MultiSelect',{key:_vm.type,ref:\"htmlElement\",attrs:{\"label\":\"label\",\"track-by\":\"id\",\"multiple\":_vm.multiple,\"options\":_vm.selectOptions,\"allowEmpty\":false,\"preselectFirst\":_vm.preselect,\"disabled\":!_vm.editable,\"deselectLabel\":_vm.deselectLabel,\"taggable\":_vm.taggable,\"tagPlaceholder\":_vm.tagPlaceholder},on:{\"tag\":_vm.addValue},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}}),(_vm.showDetails)?_c('button',{attrs:{\"type\":\"button\",\"title\":\"Details\"},on:{\"click\":function($event){return _vm.$emit('onDetails')}}},[_c('i',{staticClass:\"fas fa-info\"})]):_vm._e()]:_c('div',{staticClass:\"loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_vm._v(\" Loading options...\")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"select-container\">\n\t\t<template v-if=\"loaded\">\n\t\t\t<MultiSelect v-model=\"selected\" :key=\"type\" ref=\"htmlElement\" label=\"label\" track-by=\"id\" :multiple=\"multiple\" :options=\"selectOptions\" :allowEmpty=\"false\" :preselectFirst=\"preselect\" :disabled=\"!editable\" :deselectLabel=\"deselectLabel\" :taggable=\"taggable\" :tagPlaceholder=\"tagPlaceholder\" @tag=\"addValue\"></MultiSelect>\n\t\t\t<button v-if=\"showDetails\" type=\"button\" title=\"Details\" @click=\"$emit('onDetails')\"><i class=\"fas fa-info\"></i></button>\n\t\t</template>\n\t\t<div class=\"loading\" v-else><i class=\"fas fa-spinner fa-spin\"></i> Loading options...</div>\n\t</div>\n</template>\n\n<script>\nimport MultiSelect from 'vue-multiselect'\nimport Utils from '../../utils';\n\nexport default {\n\tname: 'SelectBox',\n\tcomponents: {\n\t\tMultiSelect\n\t},\n\tprops: {\n\t\tvalue: {},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\tdefault: \"\"\n\t\t},\n\t\teditable: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\toptions: {\n\t\t\ttype: [Array, Object]\n\t\t},\n\t\tschema: {\n\t\t\ttype: Object\n\t\t},\n\t\tcontext: {},\n\t\toptionFilter: {\n\t\t\ttype: Function,\n\t\t\tdefault: null\n\t\t}\n\t},\n\tcomputed: {\n\t\tselectOptions() {\n\t\t\tlet state = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tlet collection = this.$store.state.collections.find(c => c.id == this.context);\n\t\t\t\t\tif (Utils.isObject(collection)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstate = collection.summaries['eo:bands'].map(band => band.name);\n\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\tif (state.length === 0 && Utils.isObject(collection['cube:dimensions'])) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tlet bandDimension = Object.values(collection['cube:dimensions']).find(d => d.type === 'bands');\n\t\t\t\t\t\t\t\tif (bandDimension && Array.isArray(bandDimension.values)) {\n\t\t\t\t\t\t\t\t\tstate = bandDimension.values;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} catch (error) {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\tstate = this.$store.state.collections;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'job-id':\n\t\t\t\t\tstate = this.$store.state.jobs.jobs;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\tstate = this.$store.state.files.files;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tstate = this.$store.state.editor.epsgCodes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'input-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getInputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tlet t = require('./api');\n\t\t\t\t\tlet types = {};\n\t\t\t\t\tfor(let native of t.NATIVE_TYPES) {\n\t\t\t\t\t\ttypes[native] = {type: native}\n\t\t\t\t\t}\n\t\t\t\t\tstate = Object.assign(types, t.API_TYPES);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'output-format':\n\t\t\t\t\tstate = this.$store.state.fileFormats.getOutputTypes();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tstate = this.$store.state.serviceTypes;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\tstate = this.$store.state.connection.capabilities().listPlans();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\t\tstate = Object.keys(this.$store.state.udfRuntimes);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tstate = this.context in this.$store.state.udfRuntimes ? Object.keys(this.$store.state.udfRuntimes[this.context].versions) : [];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (typeof this.optionFilter === 'function' && state && typeof state === 'object') {\n\t\t\t\tif (Utils.isObject(state)) {\n\t\t\t\t\tstate = Object.fromEntries(Object.entries(state).filter(([key, value]) => this.optionFilter(value, key)));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstate = state.filter((value, key) => this.optionFilter(value, key));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet data = [];\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'collection-id':\n\t\t\t\t\treturn state.map(c => this.e(c.id)).sort(this.sortByLabel);\n\t\t\t\tcase 'job-id':\n\t\t\t\t\treturn state.map(j => ({\n\t\t\t\t\t\tid: j.id,\n\t\t\t\t\t\tlabel: Utils.getResourceTitle(j)\n\t\t\t\t\t})).sort(this.sortByLabel);\n\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\tfor(let type in state) {\n\t\t\t\t\t\tlet schema = state[type];\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: type,\n\t\t\t\t\t\t\tlabel: schema.title || Utils.prettifyString(type),\n\t\t\t\t\t\t\tvalue: schema\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'file-path':\n\t\t\t\tcase 'file-paths':\n\t\t\t\t\treturn state.map(f => this.e(f.path)).sort((a, b) => Utils.sortByPath(a.id, b.id));\n\t\t\t\tcase 'epsg-code':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tdata.push({\n\t\t\t\t\t\t\tid: Number.parseInt(key, 10),\n\t\t\t\t\t\t\tlabel: key + \": \" + state[key]\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\tcase 'input-format':\n\t\t\t\tcase 'output-format':\n\t\t\t\tcase 'service-type':\n\t\t\t\t\tfor(let key in state) {\n\t\t\t\t\t\tlet id = key.toUpperCase(); // uppercase mostly for services\n\t\t\t\t\t\t// show title if available...\n\t\t\t\t\t\tlet label = state[key].title;\n\t\t\t\t\t\t// otherwise upper-cased key...\n\t\t\t\t\t\tif (!label) {\n\t\t\t\t\t\t\tlabel = id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// and if title is different from key, also show key\n\t\t\t\t\t\telse if (id !== label.toUpperCase()) {\n\t\t\t\t\t\t\tlabel = `${label} - ${id}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.push({id, label});\n\t\t\t\t\t}\n\t\t\t\t\treturn data.sort(this.sortByLabel);\n\t\t\t\tcase 'billing-plan':\n\t\t\t\t\treturn state.map(p => ({\n\t\t\t\t\t\tid: p.name,\n\t\t\t\t\t\tlabel: p.name + (p.paid ? ' (paid)' : ' (free)')\n\t\t\t\t\t}));\n\t\t\t\tcase 'year':\n\t\t\t\t\tlet thisYear = new Date().getFullYear();\n\t\t\t\t\tlet years = Array.from({length: 100}, (x,i) => this.e(String(thisYear - i)));\n\t\t\t\t\t// Add custom years to select box\n\t\t\t\t\tif (typeof this.value === 'string' && this.value.length > 0 && years.findIndex(y => y.id === this.value) === -1) {\n\t\t\t\t\t\tvar customYear = this.e(this.value);\n\t\t\t\t\t\tif (this.value > thisYear) {\n\t\t\t\t\t\t\tyears.unshift(customYear);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tyears.push(this.e(this.value));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn years;\n\t\t\t\tcase 'band-name':\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\treturn state.map(val => this.e(val));\n\t\t\t\tdefault:\n\t\t\t\t\tif (Utils.isObject(this.schema) && this.schema.isEnum()) {\n\t\t\t\t\t\treturn this.schema.getEnumChoices().map(val => this.e(val));\n\t\t\t\t\t}\n\t\t\t\t\telse if (Array.isArray(this.options)) {\n\t\t\t\t\t\treturn this.options.map(val => {\n\t\t\t\t\t\t\tif (Utils.isObject(val)) {\n\t\t\t\t\t\t\t\treturn val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\treturn this.e(val)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tshowDetails() {\n\t\t\treturn (this.type === 'collection-id');\n\t\t},\n\t\tdeselectLabel() {\n\t\t\treturn this.multiple ? 'Press enter to remove' : '';\n\t\t},\n\t\ttagPlaceholder() {\n\t\t\treturn this.type === 'year' ? 'Press enter to select' : 'Press enter to create a tag';\n\t\t},\n\t\tmultiple() {\n\t\t\treturn (this.type === 'file-paths');\n\t\t},\n\t\ttaggable() {\n\t\t\treturn (this.type === 'year');\n\t\t},\n\t\tpreselect() {\n\t\t\tif (this.multiple) {\n\t\t\t\treturn (!Array.isArray(this.selected) || this.selected.length === 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn (this.selected === null);\n\t\t\t}\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tselected: null,\n\t\t\tloaded: false\n\t\t};\n\t},\n\tcreated() {\n\t\tthis.loadData();\n\t},\n\twatch: {\n\t\ttype() {\n\t\t\tthis.loadData();\n\t\t},\n\t\tselected(newValue) {\n\t\t\tlet value;\n\t\t\tif (newValue === null) {\n\t\t\t\tvalue = null;\n\t\t\t}\n\t\t\telse if (this.multiple) {\n\t\t\t\tif (!Array.isArray(newValue)) {\n\t\t\t\t\tnewValue = [newValue];\n\t\t\t\t}\n\t\t\t\tvalue = newValue.map(v => v.id);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'epsg-code':\n\t\t\t\t\t\tvar num = Number.parseInt(newValue.id);\n\t\t\t\t\t\tvalue = Number.isNaN(num) ? null : num;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'openeo-datatype':\n\t\t\t\t\t\tvalue = newValue.value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tvalue = String(newValue.id);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvalue = newValue.id;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.$emit('input', value);\n\t\t},\n\t\tcontext() {\n\t\t\tswitch(this.type) {\n\t\t\t\tcase 'udf-runtime':\n\t\t\t\tcase 'udf-runtime-version':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.preselectFirst();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'band-name':\n\t\t\t\t\tthis.selected = null;\n\t\t\t\t\tthis.loadData();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\t...Utils.mapActions(['describeCollection']),\n\t\t...Utils.mapActions('editor', ['loadEpsgCodes']),\n\t\t// Convert a value to a option object for MultiSelect\n\t\te(val) {\n\t\t\treturn {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t},\n\t\tasync loadData() {\n\t\t\tthis.loaded = false;\n\t\t\tif (this.type === 'epsg-code') {\n\t\t\t\tawait this.loadEpsgCodes();\n\t\t\t}\n\t\t\telse if (this.type === 'band-name') {\n\t\t\t\tawait this.describeCollection(this.context);\n\t\t\t}\n\t\t\tthis.initSelection();\n\t\t\tthis.loaded = true;\n\t\t},\n\t\tasync preselectFirst() {\n\t\t\tawait this.$nextTick();\n\t\t\t// Preselect first element if nothing else is set.\n\t\t\tlet elem = this.$refs.htmlElement;\n\t\t\t// Code inspired from mounted() method in vue-multiselect's multiselectMixin.js\n\t\t\tif (elem.preselectFirst && Array.isArray(elem.filteredOptions) && elem.filteredOptions.length) {\n\t\t\t\telem.select(elem.filteredOptions[0]);\n\t\t\t}\n\t\t},\n\t\tinitSelection() {\n\t\t\tlet value = this.value;\n\t\t\tif (this.multiple && Array.isArray(value)) {\n\t\t\t\tthis.selected = this.selectOptions.filter(o => value.includes(o.id));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswitch(this.type) {\n\t\t\t\t\tcase 'input-format':\n\t\t\t\t\tcase 'output-format':\n\t\t\t\t\tcase 'service-type':\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tvalue = value.toUpperCase();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlet selectedOption = this.selectOptions.find(o => o.id === value);\n\t\t\t\tif (selectedOption !== undefined) {\n\t\t\t\t\tthis.selected = selectedOption;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsortByLabel(a,b) {\n\t\t\treturn Utils.compareStringCaseInsensitive(a.label, b.label);\n\t\t},\n\t\taddValue(value) {\n\t\t\tthis.selected = this.e(value);\n\t\t}\n\t}\n}\n</script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n\n<style lang=\"scss\">\n@import '../../../theme.scss';\n\n.select-container {\n\tdisplay: flex;\n\tflex-grow: 1;\n\n\t> div {\n\t\tflex-grow: 1;\n\t}\n\n\t> button {\n\t\tmargin-left: 10px;\n\t}\n\n\t.multiselect__option--selected.multiselect__option--highlight {\n\t\tbackground: $mainColor;\n\t}\n\t.multiselect__option--highlight, .multiselect__option--highlight:after {\n\t\tbackground: $mainColor;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectBox.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./SelectBox.vue?vue&type=template&id=b788e4ae\"\nimport script from \"./SelectBox.vue?vue&type=script&lang=js\"\nexport * from \"./SelectBox.vue?vue&type=script&lang=js\"\nimport style0 from \"vue-multiselect/dist/vue-multiselect.min.css?vue&type=style&index=0&prod&lang=css&external\"\nimport style1 from \"./SelectBox.vue?vue&type=style&index=1&id=b788e4ae&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"step choose-time\"},[_c('p',[_vm._v(_vm._s(_vm.text))]),_c('SelectBox',{attrs:{\"options\":_vm.options,\"value\":_vm.value},on:{\"input\":v => _vm.$emit('input', v)}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"step choose-time\">\n\t\t<p>{{ text }}</p>\n\t\t<SelectBox :options=\"options\" :value=\"value\" @input=\"v => $emit('input', v)\" />\n\t</div>\n</template>\n\n<script>\nimport SelectBox from '../../datatypes/SelectBox.vue';\nimport Utils from '../../../utils';\n\nexport default {\n\tname: 'ChooseReducer',\n\tcomponents: {\n\t\tSelectBox\n\t},\n\tprops: {\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\tdefault: \"Please select a method for aggregation:\"\n\t\t},\n\t\tallowEmpty: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\tdefault: \"mean\"\n\t\t}\n\t},\n\tcomputed: {\n\t\t...Utils.mapGetters(['processes']),\n\t\toptions() {\t\t\t\n\t\t\tlet reducers = this.processes\n\t\t\t\t.all()\n\t\t\t\t.filter(p => {\n\t\t\t\t\tif (Array.isArray(p.categories) && p.categories.includes(\"reducer\") && Array.isArray(p.parameters) && p.id !== 'array_element') {\n\t\t\t\t\t\tlet params = p.parameters.filter(param => param.optional !== true);\n\t\t\t\t\t\treturn (params.length === 1 && params[0].name === 'data');\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t})\n\t\t\t\t.map(p => ({id: p.id, label: `${p.id} - ${p.summary}`}));\n\t\t\treducers.unshift({id: \"\", label: \"No composite\"});\n\t\t\treturn reducers;\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseReducer.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseReducer.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ChooseReducer.vue?vue&type=template&id=7923ec13\"\nimport script from \"./ChooseReducer.vue?vue&type=script&lang=js\"\nexport * from \"./ChooseReducer.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Utils from '../../utils';\nexport const API_TYPES = Utils.resolveJsonRefs(require('@openeo/js-processgraphs/assets/subtype-schemas.json')).definitions;\nexport const NATIVE_TYPES = [\n\t'string',\n\t'integer',\n\t'number',\n\t'boolean',\n\t'array',\n\t'object'\n];"],"names":["render","_vm","this","_c","_self","staticClass","loaded","key","type","ref","attrs","multiple","selectOptions","preselect","editable","deselectLabel","taggable","tagPlaceholder","on","addValue","model","value","selected","callback","$$v","expression","showDetails","$event","$emit","_e","_v","staticRenderFns","name","components","MultiSelect","props","String","default","Boolean","options","Array","Object","schema","context","optionFilter","Function","computed","state","collection","$store","collections","find","c","id","Utils","isObject","summaries","map","band","error","length","bandDimension","values","d","isArray","jobs","files","editor","epsgCodes","fileFormats","getInputTypes","t","require","types","native","NATIVE_TYPES","assign","API_TYPES","getOutputTypes","serviceTypes","connection","capabilities","listPlans","keys","udfRuntimes","versions","fromEntries","entries","filter","data","e","sort","sortByLabel","j","label","getResourceTitle","push","title","prettifyString","f","path","a","b","sortByPath","Number","parseInt","toUpperCase","p","paid","thisYear","Date","getFullYear","years","from","x","i","findIndex","y","customYear","unshift","val","isEnum","getEnumChoices","created","loadData","watch","newValue","v","num","isNaN","preselectFirst","methods","mapActions","loadEpsgCodes","describeCollection","initSelection","$nextTick","elem","$refs","htmlElement","filteredOptions","select","o","includes","selectedOption","undefined","compareStringCaseInsensitive","component","_s","text","SelectBox","allowEmpty","mapGetters","reducers","processes","all","categories","parameters","params","param","optional","summary","resolveJsonRefs","definitions"],"sourceRoot":""}
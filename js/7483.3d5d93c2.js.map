{"version":3,"file":"js/7483.3d5d93c2.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/rbush/rbush.min.js","webpack://@openeo/web-editor/./node_modules/ol/vec/mat4.js","webpack://@openeo/web-editor/./node_modules/ol/webgl.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/Buffer.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/ContextEventType.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/PostProcessingPass.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/Helper.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/RenderTarget.js","webpack://@openeo/web-editor/./node_modules/ol/worker/webgl.js"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl\n */\n\nimport {SAFARI_BUG_237906} from './has.js';\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, attributes) {\n  attributes = Object.assign(\n    {\n      preserveDrawingBuffer: true,\n      antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    },\n    attributes\n  );\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {\n  ARRAY_BUFFER,\n  DYNAMIC_DRAW,\n  ELEMENT_ARRAY_BUFFER,\n  STATIC_DRAW,\n  STREAM_DRAW,\n} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = usage !== undefined ? usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   * @return {WebGLArrayBuffer} This\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size.\n   * @param {Array<number>} array Numerical array\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArray(array) {\n    this.array = getArrayClassForType(this.type).from(array);\n    return this;\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   * @return {WebGLArrayBuffer} This\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n    return this;\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nimport {getUid} from '../util.js';\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n  uniform float u_opacity;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {WebGLUniformLocation} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetOpacityLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_opacity'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach((name) => {\n        this.uniforms_.push({\n          value: options.uniforms[name],\n          location: gl.getUniformLocation(this.renderTargetProgram_, name),\n        });\n      });\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   * @api\n   */\n  apply(frameState, nextPass, preCompose, postCompose) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    if (!nextPass) {\n      // clear the canvas if we are the first to render to it\n      // and preserveDrawingBuffer is true\n      const canvasId = getUid(gl.canvas);\n      if (!frameState.renderTargets[canvasId]) {\n        const attributes = gl.getContextAttributes();\n        if (attributes && attributes.preserveDrawingBuffer) {\n          gl.clearColor(0.0, 0.0, 0.0, 0.0);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n\n        frameState.renderTargets[canvasId] = true;\n      }\n    }\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    const opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n    gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n\n    this.applyUniforms(frameState);\n\n    if (preCompose) {\n      preCompose(gl, frameState);\n    }\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    if (postCompose) {\n      postCompose(gl, frameState);\n    }\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Names of uniforms made available to all shaders.\n * Please note: changing these *will* break custom shaders!\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n  VIEWPORT_SIZE_PX: 'u_viewportSizePx',\n  PIXEL_RATIO: 'u_pixelRatio',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../Map.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {UniformValue} [prevValue] The previous value.\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nconst canvasCache = {};\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n  return 'shared/' + key;\n}\n\nlet uniqueCanvasCacheKeyCount = 0;\n\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n  const key = 'unique/' + uniqueCanvasCacheKeyCount;\n  uniqueCanvasCacheKeyCount += 1;\n  return key;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n  let cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.left = '0';\n    cacheItem = {users: 0, canvas};\n    canvasCache[key] = cacheItem;\n  }\n\n  cacheItem.users += 1;\n  return cacheItem.canvas;\n}\n\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n  const cacheItem = canvasCache[key];\n  if (!cacheItem) {\n    return;\n  }\n\n  cacheItem.users -= 1;\n  if (cacheItem.users > 0) {\n    return;\n  }\n\n  const canvas = cacheItem.canvas;\n  const gl = getContext(canvas);\n  const extension = gl.getExtension('WEBGL_lose_context');\n  if (extension) {\n    extension.loseContext();\n  }\n\n  delete canvasCache[key];\n}\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls; note how a frameState is required to set up a program,\n *   // as several default uniforms are computed from it (projection matrix, zoom level, etc.)\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program, frameState);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n    options = options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.canvasCacheKey_ = options.canvasCacheKey\n      ? getSharedCanvasCacheKey(options.canvasCacheKey)\n      : getUniqueCanvasCacheKey();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = getCanvas(this.canvasCacheKey_);\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, WebGLUniformLocation>>}\n     */\n    this.uniformLocationsByProgram_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.attribLocationsByProgram_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      this.setUniforms(options.uniforms);\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(\n          (options) =>\n            new WebGLPostProcessingPass({\n              webGlContext: this.gl_,\n              scaleRatio: options.scaleRatio,\n              vertexShader: options.vertexShader,\n              fragmentShader: options.fragmentShader,\n              uniforms: options.uniforms,\n            })\n        )\n      : [new WebGLPostProcessingPass({webGlContext: this.gl_})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n   */\n  setUniforms(uniforms) {\n    this.uniforms_ = [];\n    for (const name in uniforms) {\n      this.uniforms_.push({\n        name: name,\n        value: uniforms[name],\n      });\n    }\n  }\n\n  /**\n   * @param {string} canvasCacheKey The canvas cache key.\n   * @return {boolean} The provided key matches the one this helper was constructed with.\n   */\n  canvasCacheKeyMatches(canvasCacheKey) {\n    return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object|null} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  bindBuffer(buffer) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   */\n  flushBufferData(buffer) {\n    const gl = this.gl_;\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.gl_;\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    releaseCanvas(this.canvasCacheKey_);\n\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDraw(frameState, disableAlphaBlend) {\n    const gl = this.gl_;\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    if (\n      canvas.width !== size[0] * pixelRatio ||\n      canvas.height !== size[1] * pixelRatio\n    ) {\n      canvas.width = size[0] * pixelRatio;\n      canvas.height = size[1] * pixelRatio;\n      canvas.style.width = size[0] + 'px';\n      canvas.style.height = size[1] + 'px';\n    }\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Prepare a program to use a texture.\n   * @param {WebGLTexture} texture The texture.\n   * @param {number} slot The texture slot.\n   * @param {string} uniformName The corresponding uniform name.\n   */\n  bindTexture(texture, slot, uniformName) {\n    const gl = this.gl_;\n    gl.activeTexture(gl.TEXTURE0 + slot);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.uniform1i(this.getUniformLocation(uniformName), slot);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, disableAlphaBlend) {\n    const gl = this.gl_;\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  drawElements(start, end) {\n    const gl = this.gl_;\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../Map.js\").FrameState} frameState current frame state\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [preCompose] Called before composing.\n   * @param {function(WebGLRenderingContext, import(\"../Map.js\").FrameState):void} [postCompose] Called before composing.\n   */\n  finalizeDraw(frameState, preCompose, postCompose) {\n    // apply post processes using the next one as target\n    for (let i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n      if (i === ii - 1) {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          null,\n          preCompose,\n          postCompose\n        );\n      } else {\n        this.postProcessPasses_[i].apply(\n          frameState,\n          this.postProcessPasses_[i + 1]\n        );\n      }\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n    this.setUniformFloatValue(DefaultUniform.PIXEL_RATIO, pixelRatio);\n    this.setUniformFloatVec2(DefaultUniform.VIEWPORT_SIZE_PX, [\n      size[0],\n      size[1],\n    ]);\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  applyUniforms(frameState) {\n    const gl = this.gl_;\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach((uniform) => {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (\n        value instanceof HTMLCanvasElement ||\n        value instanceof HTMLImageElement ||\n        value instanceof ImageData\n      ) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.prevValue = undefined;\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        const imageReady =\n          !(value instanceof HTMLImageElement) ||\n          /** @type {HTMLImageElement} */ (value).complete;\n        if (imageReady && uniform.prevValue !== value) {\n          uniform.prevValue = value;\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n      } else if (Array.isArray(value) && value.length === 6) {\n        this.setUniformMatrixValue(\n          uniform.name,\n          fromTransform(this.tmpMat4_, value)\n        );\n      } else if (Array.isArray(value) && value.length <= 4) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1]\n            );\n            return;\n          case 3:\n            gl.uniform3f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2]\n            );\n            return;\n          case 4:\n            gl.uniform4f(\n              this.getUniformLocation(uniform.name),\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    });\n  }\n\n  /**\n   * Set up a program for use. The program will be set as the current one. Then, the uniforms used\n   * in the program will be set based on the current frame state and the helper configuration.\n   * @param {WebGLProgram} program Program.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  useProgram(program, frameState) {\n    const gl = this.gl_;\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.gl_;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.gl_;\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compilation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getProgramInfoLog(\n        program\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   */\n  getUniformLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.uniformLocationsByProgram_[programUid] === undefined) {\n      this.uniformLocationsByProgram_[programUid] = {};\n    }\n    if (this.uniformLocationsByProgram_[programUid][name] === undefined) {\n      this.uniformLocationsByProgram_[programUid][name] =\n        this.gl_.getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   */\n  getAttributeLocation(name) {\n    const programUid = getUid(this.currentProgram_);\n    if (this.attribLocationsByProgram_[programUid] === undefined) {\n      this.attribLocationsByProgram_[programUid] = {};\n    }\n    if (this.attribLocationsByProgram_[programUid][name] === undefined) {\n      this.attribLocationsByProgram_[programUid][name] =\n        this.gl_.getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocationsByProgram_[programUid][name];\n  }\n\n  /**\n   * Sets the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates in the [-1, 1] range.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   */\n  setUniformFloatValue(uniform, value) {\n    this.gl_.uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec2 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec2(uniform, value) {\n    this.gl_.uniform2fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a vec4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Array of length 4.\n   */\n  setUniformFloatVec4(uniform, value) {\n    this.gl_.uniform4fv(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.gl_.uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.gl_.enableVertexAttribArray(location);\n    this.gl_.vertexAttribPointer(location, size, type, false, stride, offset);\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   */\n  createTexture(size, data, texture) {\n    const gl = this.gl_;\n    texture = texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (data) {\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, data);\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","\n        export function create() {\n          const source = \"const e=\\\"GENERATE_POLYGON_BUFFERS\\\",t=\\\"GENERATE_POINT_BUFFERS\\\",n=\\\"GENERATE_LINE_STRING_BUFFERS\\\",r={1:\\\"The view center is not defined\\\",2:\\\"The view resolution is not defined\\\",3:\\\"The view rotation is not defined\\\",4:\\\"`image` and `src` cannot be provided at the same time\\\",5:\\\"`imgSize` must be set when `image` is provided\\\",7:\\\"`format` must be set when `url` is set\\\",8:\\\"Unknown `serverType` configured\\\",9:\\\"`url` must be configured or set using `#setUrl()`\\\",10:\\\"The default `geometryFunction` can only handle `Point` geometries\\\",11:\\\"`options.featureTypes` must be an Array\\\",12:\\\"`options.geometryName` must also be provided when `options.bbox` is set\\\",13:\\\"Invalid corner\\\",14:\\\"Invalid color\\\",15:\\\"Tried to get a value for a key that does not exist in the cache\\\",16:\\\"Tried to set a value for a key that is used already\\\",17:\\\"`resolutions` must be sorted in descending order\\\",18:\\\"Either `origin` or `origins` must be configured, never both\\\",19:\\\"Number of `tileSizes` and `resolutions` must be equal\\\",20:\\\"Number of `origins` and `resolutions` must be equal\\\",22:\\\"Either `tileSize` or `tileSizes` must be configured, never both\\\",24:\\\"Invalid extent or geometry provided as `geometry`\\\",25:\\\"Cannot fit empty extent provided as `geometry`\\\",26:\\\"Features must have an id set\\\",27:\\\"Features must have an id set\\\",28:'`renderMode` must be `\\\"hybrid\\\"` or `\\\"vector\\\"`',30:\\\"The passed `feature` was already added to the source\\\",31:\\\"Tried to enqueue an `element` that was already added to the queue\\\",32:\\\"Transformation matrix cannot be inverted\\\",33:\\\"Invalid units\\\",34:\\\"Invalid geometry layout\\\",36:\\\"Unknown SRS type\\\",37:\\\"Unknown geometry type found\\\",38:\\\"`styleMapValue` has an unknown type\\\",39:\\\"Unknown geometry type\\\",40:\\\"Expected `feature` to have a geometry\\\",41:\\\"Expected an `ol/style/Style` or an array of `ol/style/Style.js`\\\",42:\\\"Question unknown, the answer is 42\\\",43:\\\"Expected `layers` to be an array or a `Collection`\\\",47:\\\"Expected `controls` to be an array or an `ol/Collection`\\\",48:\\\"Expected `interactions` to be an array or an `ol/Collection`\\\",49:\\\"Expected `overlays` to be an array or an `ol/Collection`\\\",50:\\\"`options.featureTypes` should be an Array\\\",51:\\\"Either `url` or `tileJSON` options must be provided\\\",52:\\\"Unknown `serverType` configured\\\",53:\\\"Unknown `tierSizeCalculation` configured\\\",55:\\\"The {-y} placeholder requires a tile grid with extent\\\",56:\\\"mapBrowserEvent must originate from a pointer event\\\",57:\\\"At least 2 conditions are required\\\",59:\\\"Invalid command found in the PBF\\\",60:\\\"Missing or invalid `size`\\\",61:\\\"Cannot determine IIIF Image API version from provided image information JSON\\\",62:\\\"A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`\\\",64:\\\"Layer opacity must be a number\\\",66:\\\"`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`\\\",67:\\\"A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both\\\",68:\\\"A VectorTile source can only be rendered if it has a projection compatible with the view projection\\\",69:\\\"`width` or `height` cannot be provided together with `scale`\\\"};class o extends Error{constructor(e){const t=r[e];super(t),this.code=e,this.name=\\\"AssertionError\\\",this.message=t}}var i=o;function a(e,t){const n=t[0],r=t[1];return t[0]=e[0]*n+e[2]*r+e[4],t[1]=e[1]*n+e[3]*r+e[5],t}function s(e,t){const n=(r=t)[0]*r[3]-r[1]*r[2];var r;!function(e,t){if(!e)throw new i(t)}(0!==n,32);const o=t[0],a=t[1],s=t[2],u=t[3],f=t[4],x=t[5];return e[0]=u/n,e[1]=-a/n,e[2]=-s/n,e[3]=o/n,e[4]=(s*x-u*f)/n,e[5]=-(o*x-a*f)/n,e}function u(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}new Array(6);var f={exports:{}};function x(e,t,n){n=n||2;var r,o,i,a,s,u,f,x=t&&t.length,h=x?t[0]*n:e.length,v=l(e,0,h,n,!0),d=[];if(!v||v.next===v.prev)return d;if(x&&(v=function(e,t,n,r){var o,i,a,s=[];for(o=0,i=t.length;o<i;o++)(a=l(e,t[o]*r,o<i-1?t[o+1]*r:e.length,r,!1))===a.next&&(a.steiner=!0),s.push(A(a));for(s.sort(b),o=0;o<s.length;o++)n=g(s[o],n);return n}(e,t,v,n)),e.length>80*n){r=i=e[0],o=a=e[1];for(var y=n;y<h;y+=n)(s=e[y])<r&&(r=s),(u=e[y+1])<o&&(o=u),s>i&&(i=s),u>a&&(a=u);f=0!==(f=Math.max(i-r,a-o))?32767/f:0}return c(v,d,n,r,o,f,0),d}function l(e,t,n,r,o){var i,a;if(o===P(e,t,n,r)>0)for(i=t;i<n;i+=r)a=k(i,e[i],e[i+1],a);else for(i=n-r;i>=t;i-=r)a=k(i,e[i],e[i+1],a);return a&&F(a,a.next)&&(R(a),a=a.next),a}function h(e,t){if(!e)return e;t||(t=e);var n,r=e;do{if(n=!1,r.steiner||!F(r,r.next)&&0!==Z(r.prev,r,r.next))r=r.next;else{if(R(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function c(e,t,n,r,o,i,a){if(e){!a&&i&&function(e,t,n,r){var o=e;do{0===o.z&&(o.z=w(o.x,o.y,t,n,r)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next}while(o!==e);o.prevZ.nextZ=null,o.prevZ=null,function(e){var t,n,r,o,i,a,s,u,f=1;do{for(n=e,e=null,i=null,a=0;n;){for(a++,r=n,s=0,t=0;t<f&&(s++,r=r.nextZ);t++);for(u=f;s>0||u>0&&r;)0!==s&&(0===u||!r||n.z<=r.z)?(o=n,n=n.nextZ,s--):(o=r,r=r.nextZ,u--),i?i.nextZ=o:e=o,o.prevZ=i,i=o;n=r}i.nextZ=null,f*=2}while(a>1)}(o)}(e,r,o,i);for(var s,u,f=e;e.prev!==e.next;)if(s=e.prev,u=e.next,i?d(e,r,o,i):v(e))t.push(s.i/n|0),t.push(e.i/n|0),t.push(u.i/n|0),R(e),e=u.next,f=u.next;else if((e=u)===f){a?1===a?c(e=y(h(e),t,n),t,n,r,o,i,2):2===a&&p(e,t,n,r,o,i):c(h(e),t,n,r,o,i,1);break}}}function v(e){var t=e.prev,n=e,r=e.next;if(Z(t,n,r)>=0)return!1;for(var o=t.x,i=n.x,a=r.x,s=t.y,u=n.y,f=r.y,x=o<i?o<a?o:a:i<a?i:a,l=s<u?s<f?s:f:u<f?u:f,h=o>i?o>a?o:a:i>a?i:a,c=s>u?s>f?s:f:u>f?u:f,v=r.next;v!==t;){if(v.x>=x&&v.x<=h&&v.y>=l&&v.y<=c&&E(o,s,i,u,a,f,v.x,v.y)&&Z(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function d(e,t,n,r){var o=e.prev,i=e,a=e.next;if(Z(o,i,a)>=0)return!1;for(var s=o.x,u=i.x,f=a.x,x=o.y,l=i.y,h=a.y,c=s<u?s<f?s:f:u<f?u:f,v=x<l?x<h?x:h:l<h?l:h,d=s>u?s>f?s:f:u>f?u:f,y=x>l?x>h?x:h:l>h?l:h,p=w(c,v,t,n,r),b=w(d,y,t,n,r),g=e.prevZ,m=e.nextZ;g&&g.z>=p&&m&&m.z<=b;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&E(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;if(g=g.prevZ,m.x>=c&&m.x<=d&&m.y>=v&&m.y<=y&&m!==o&&m!==a&&E(s,x,u,l,f,h,m.x,m.y)&&Z(m.prev,m,m.next)>=0)return!1;m=m.nextZ}for(;g&&g.z>=p;){if(g.x>=c&&g.x<=d&&g.y>=v&&g.y<=y&&g!==o&&g!==a&&E(s,x,u,l,f,h,g.x,g.y)&&Z(g.prev,g,g.next)>=0)return!1;g=g.prevZ}for(;m&&m.z<=b;){if(m.x>=c&&m.x<=d&&m.y>=v&&m.y<=y&&m!==o&&m!==a&&E(s,x,u,l,f,h,m.x,m.y)&&Z(m.prev,m,m.next)>=0)return!1;m=m.nextZ}return!0}function y(e,t,n){var r=e;do{var o=r.prev,i=r.next.next;!F(o,i)&&T(o,r,r.next,i)&&z(o,i)&&z(i,o)&&(t.push(o.i/n|0),t.push(r.i/n|0),t.push(i.i/n|0),R(r),R(r.next),r=e=i),r=r.next}while(r!==e);return h(r)}function p(e,t,n,r,o,i){var a=e;do{for(var s=a.next.next;s!==a.prev;){if(a.i!==s.i&&M(a,s)){var u=U(a,s);return a=h(a,a.next),u=h(u,u.next),c(a,t,n,r,o,i,0),void c(u,t,n,r,o,i,0)}s=s.next}a=a.next}while(a!==e)}function b(e,t){return e.x-t.x}function g(e,t){var n=function(e,t){var n,r=t,o=e.x,i=e.y,a=-1/0;do{if(i<=r.y&&i>=r.next.y&&r.next.y!==r.y){var s=r.x+(i-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(s<=o&&s>a&&(a=s,n=r.x<r.next.x?r:r.next,s===o))return n}r=r.next}while(r!==t);if(!n)return null;var u,f=n,x=n.x,l=n.y,h=1/0;r=n;do{o>=r.x&&r.x>=x&&o!==r.x&&E(i<l?o:a,i,x,l,i<l?a:o,i,r.x,r.y)&&(u=Math.abs(i-r.y)/(o-r.x),z(r,e)&&(u<h||u===h&&(r.x>n.x||r.x===n.x&&m(n,r)))&&(n=r,h=u)),r=r.next}while(r!==f);return n}(e,t);if(!n)return t;var r=U(n,e);return h(r,r.next),h(n,n.next)}function m(e,t){return Z(e.prev,e,t.prev)<0&&Z(t.next,e,e.next)<0}function w(e,t,n,r,o){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-n)*o|0)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-r)*o|0)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function A(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function E(e,t,n,r,o,i,a,s){return(o-a)*(t-s)>=(e-a)*(i-s)&&(e-a)*(r-s)>=(n-a)*(t-s)&&(n-a)*(i-s)>=(o-a)*(r-s)}function M(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&T(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(z(e,t)&&z(t,e)&&function(e,t){var n=e,r=!1,o=(e.x+t.x)/2,i=(e.y+t.y)/2;do{n.y>i!=n.next.y>i&&n.next.y!==n.y&&o<(n.next.x-n.x)*(i-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==e);return r}(e,t)&&(Z(e.prev,e,t.prev)||Z(e,t.prev,t))||F(e,t)&&Z(e.prev,e,e.next)>0&&Z(t.prev,t,t.next)>0)}function Z(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function F(e,t){return e.x===t.x&&e.y===t.y}function T(e,t,n,r){var o=S(Z(e,t,n)),i=S(Z(e,t,r)),a=S(Z(n,r,e)),s=S(Z(n,r,t));return o!==i&&a!==s||(!(0!==o||!I(e,n,t))||(!(0!==i||!I(e,r,t))||(!(0!==a||!I(n,e,r))||!(0!==s||!I(n,t,r)))))}function I(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function S(e){return e>0?1:e<0?-1:0}function z(e,t){return Z(e.prev,e,e.next)<0?Z(e,t,e.next)>=0&&Z(e,e.prev,t)>=0:Z(e,t,e.prev)<0||Z(e,e.next,t)<0}function U(e,t){var n=new B(e.i,e.x,e.y),r=new B(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,n.next=o,o.prev=n,r.next=n,n.prev=r,i.next=r,r.prev=i,r}function k(e,t,n,r){var o=new B(e,t,n);return r?(o.next=r.next,o.prev=r,r.next.prev=o,r.next=o):(o.prev=o,o.next=o),o}function R(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function B(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function P(e,t,n,r){for(var o=0,i=t,a=n-r;i<n;i+=r)o+=(e[a]-e[i])*(e[i+1]+e[a+1]),a=i;return o}f.exports=x,f.exports.default=x,x.deviation=function(e,t,n,r){var o=t&&t.length,i=o?t[0]*n:e.length,a=Math.abs(P(e,0,i,n));if(o)for(var s=0,u=t.length;s<u;s++){var f=t[s]*n,x=s<u-1?t[s+1]*n:e.length;a-=Math.abs(P(e,f,x,n))}var l=0;for(s=0;s<r.length;s+=3){var h=r[s]*n,c=r[s+1]*n,v=r[s+2]*n;l+=Math.abs((e[h]-e[v])*(e[c+1]-e[h+1])-(e[h]-e[c])*(e[v+1]-e[h+1]))}return 0===a&&0===l?0:Math.abs((l-a)/a)},x.flatten=function(e){for(var t=e[0][0].length,n={vertices:[],holes:[],dimensions:t},r=0,o=0;o<e.length;o++){for(var i=0;i<e[o].length;i++)for(var a=0;a<t;a++)n.vertices.push(e[o][i][a]);o>0&&(r+=e[o-1].length,n.holes.push(r))}return n};var N=u(f.exports);const _=[],O={vertexPosition:0,indexPosition:0};function q(e,t,n,r,o){e[t+0]=n,e[t+1]=r,e[t+2]=o}function L(e,t,n,r,o,i){const a=3+o,s=e[t+0],u=e[t+1],f=_;f.length=o;for(let n=0;n<f.length;n++)f[n]=e[t+2+n];let x=i?i.vertexPosition:0,l=i?i.indexPosition:0;const h=x/a;return q(n,x,s,u,0),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,1),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,2),f.length&&n.set(f,x+3),x+=a,q(n,x,s,u,3),f.length&&n.set(f,x+3),x+=a,r[l++]=h,r[l++]=h+1,r[l++]=h+3,r[l++]=h+1,r[l++]=h+2,r[l++]=h+3,O.vertexPosition=x,O.indexPosition=l,O}function C(e,t,n,r,o,i,s,u,f,x){const l=5+u.length,h=i.length/l,c=[e[t+0],e[t+1]],v=[e[n],e[n+1]],d=a(x,[...c]),y=a(x,[...v]);function p(e,t,n){const r=1e4;return Math.round(1500*t)+Math.round(1500*n)*r+e*r*r}function b(e,t,n){const r=Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1])),o=[(t[0]-e[0])/r,(t[1]-e[1])/r],i=[-o[1],o[0]],a=Math.sqrt((n[0]-e[0])*(n[0]-e[0])+(n[1]-e[1])*(n[1]-e[1])),s=[(n[0]-e[0])/a,(n[1]-e[1])/a],u=0===r||0===a?0:Math.acos((f=s[0]*o[0]+s[1]*o[1],x=-1,l=1,Math.min(Math.max(f,x),l)));var f,x,l;return s[0]*i[0]+s[1]*i[1]>0?u:2*Math.PI-u}const g=null!==o;let m=0,w=0;if(null!==r){m=b(d,y,a(x,[...[e[r],e[r+1]]]))}if(g){w=b(y,d,a(x,[...[e[o],e[o+1]]]))}i.push(c[0],c[1],v[0],v[1],p(0,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(1,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(2,m,w)),i.push(...u),i.push(c[0],c[1],v[0],v[1],p(3,m,w)),i.push(...u),s.push(h,h+1,h+2,h+1,h+3,h+2)}function G(e,t,n,r,o){const i=2+o;let a=t;const s=e.slice(a,a+o);a+=o;const u=e[a++];let f=0;const x=new Array(u-1);for(let t=0;t<u;t++)f+=e[a++],t<u-1&&(x[t]=f);const l=e.slice(a,a+2*f),h=N(l,x,2);for(let e=0;e<h.length;e++)r.push(h[e]+n.length/i);for(let e=0;e<l.length;e+=2)n.push(l[e],l[e+1],...s);return a+2*f}const j=self;j.onmessage=r=>{const o=r.data;switch(o.type){case t:{const e=3,t=2,n=o.customAttributesSize,r=t+n,i=new Float32Array(o.renderInstructions),a=i.length/r,s=4*a*(n+e),u=new Uint32Array(6*a),f=new Float32Array(s);let x;for(let e=0;e<i.length;e+=r)x=L(i,e,f,u,n,x);const l=Object.assign({vertexBuffer:f.buffer,indexBuffer:u.buffer,renderInstructions:i.buffer},o);j.postMessage(l,[f.buffer,u.buffer,i.buffer]);break}case n:{const e=[],t=[],n=o.customAttributesSize,r=2,i=new Float32Array(o.renderInstructions);let a=0;const u=o.renderInstructionsTransform,f=[1,0,0,1,0,0];let x,l;for(s(f,u);a<i.length;){l=Array.from(i.slice(a,a+n)),a+=n,x=i[a++];for(let n=0;n<x-1;n++)C(i,a+n*r,a+(n+1)*r,n>0?a+(n-1)*r:null,n<x-2?a+(n+2)*r:null,e,t,l,0,f);a+=x*r}const h=Uint32Array.from(t),c=Float32Array.from(e),v=Object.assign({vertexBuffer:c.buffer,indexBuffer:h.buffer,renderInstructions:i.buffer},o);j.postMessage(v,[c.buffer,h.buffer,i.buffer]);break}case e:{const e=[],t=[],n=o.customAttributesSize,r=new Float32Array(o.renderInstructions);let i=0;for(;i<r.length;)i=G(r,i,e,t,n);const a=Uint32Array.from(t),s=Float32Array.from(e),u=Object.assign({vertexBuffer:s.buffer,indexBuffer:a.buffer,renderInstructions:r.buffer},o);j.postMessage(u,[s.buffer,a.buffer,r.buffer]);break}}};\";\n          return new Worker(typeof Blob === 'undefined'\n            ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n            : URL.createObjectURL(new Blob([source], {type: 'application/javascript'})));\n        }\n      \n"],"names":["t","i","module","exports","this","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","m","max","floor","c","min","p","d","x","length","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","create","fromTransform","mat4","transform","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","CONTEXT_IDS","getContext","canvas","attributes","Object","assign","preserveDrawingBuffer","antialias","ii","context","BufferUsage","WebGLArrayBuffer","constructor","type","usage","array","undefined","ofSize","size","getArrayClassForType","fromArray","from","fromArrayBuffer","buffer","getType","getArray","getUsage","getSize","Float32Array","Uint32Array","LOST","RESTORED","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","options","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","verticesArray","bindBuffer","bufferData","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","keys","forEach","name","value","location","getGL","init","frameState","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","level","internalFormat","RGBA","border","format","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","renderTargets","getContextAttributes","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2f","uniform1i","opacity","layerStatesArray","layerIndex","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","ImageData","texture","width","Uint8Array","Array","isArray","uniform3f","uniform4f","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","VIEWPORT_SIZE_PX","PIXEL_RATIO","AttributeType","canvasCache","getSharedCanvasCacheKey","key","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getCanvas","cacheItem","document","createElement","style","position","left","users","releaseCanvas","extension","getExtension","loseContext","WebGLHelper","Disposable","super","boundHandleWebGLContextLost_","handleWebGLContextLost","bind","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","canvas_","bufferCache_","extensionCache_","currentProgram_","addEventListener","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocationsByProgram_","attribLocationsByProgram_","setUniforms","postProcessPasses_","postProcesses","map","shaderCompileErrors_","startTime_","Date","now","canvasCacheKeyMatches","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","disposeInternal","removeEventListener","prepareDraw","disableAlphaBlend","pixelRatio","ZERO","slot","uniformName","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getTexture","drawElements","start","end","elementType","elementSize","numItems","offsetInBytes","finalizeDraw","applyFrameState","rotation","viewState","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","setUniformFloatValue","zoom","resolution","setUniformFloatVec2","HTMLImageElement","prevValue","imageReady","complete","program","source","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","message","getShaderInfoLog","Error","deleteShader","getProgramParameter","LINK_STATUS","getProgramInfoLog","programUid","getAttributeLocation","makeProjectionTransform","center","uniform2fv","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","stride","offset","enableAttributes","computeAttributesStride","attr","getByteSizeFromType","BYTES_PER_ELEMENT","Uint16Array","tmpArray4","WebGLRenderTarget","helper","helper_","texture_","framebuffer_","size_","data_","dataCacheDirty_","updateSize_","setSize","clearCachedData","readAll","readPixels","readPixel","y","index","Worker","Blob","Buffer","toString","URL","createObjectURL"],"sourceRoot":""}
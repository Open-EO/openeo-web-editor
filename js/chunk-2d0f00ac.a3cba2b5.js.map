{"version":3,"sources":["webpack:///./node_modules/chart.js/dist/chart.esm.js"],"names":["Animator","this","_request","_charts","Map","_running","_lastDate","undefined","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","call","window","_update","_refresh","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_notify","charts","get","complete","progress","set","event","cb","_getAnims","push","reduce","acc","cur","max","_duration","cancel","delete","animator","transparent","interpolators","from","to","factor","c0","c1","valid","mix","hexString","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","active","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","has","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","_animateOptions","value","update","size","assign","add","anim","wait","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","range","parsedValue","NaN","otherScale","_getOtherScale","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","clip","getMaxOverflow","elements","area","chartArea","drawActiveElementsOnTop","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","_cacheable","sharedOptions","_animationsDisabled","_resolveAnimations","getStyle","getSharedOptions","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","args","_dataChanges","arguments","_sync","newCount","getAllScaleValues","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","a","computeMinSampleSize","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","reset","getBasePixel","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","updateElement","last","grouped","val","isNaN","indexOf","_getStacks","_startPixel","_endPixel","_getStackCount","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","_getStackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","plugins","tooltip","DoughnutController","innerRadius","outerRadius","getter","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","_getRotationExtents","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","e","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","stop","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","abstract","Error","DateAdapter","format","timestamp","amount","unit","weekday","override","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","canvas","listener","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","addEventListener","removeListener","removeEventListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","final","ret","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","color","borderDash","borderDashOffset","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","valueAt","idx","pixel","decimal","getBaseValue","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","tickTextAlign","labelPadding","translation","save","fillRect","restore","findIndex","_computeGridLineItems","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","_computeLabelArea","_computeLabelItems","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","scope","create","isPrototypeOf","proto","getPrototypeOf","parentScope","isIChartComponent","register","registerDefaults","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getPlugin","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","p","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","getMaximumSize","newRatio","getDevicePixelRatio","onResize","render","scalesOptions","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","getScale","init","hasUpdated","addBox","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","removeBox","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","isAttached","prefix","activeElements","lastActive","notify","replay","hoverOptions","hover","deactivated","activated","updateHoverStyle","eventFilter","_handleEvent","_getActiveElements","onHover","onClick","getElementsAtEventForMode","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","defineProperties","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","isListened","hoveredItem","_getLegendItemAt","sameItem","onLeave","plugin_legend","_element","_args","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","d","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_willRender","labelCount","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","numericGeneratorOptions","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","m","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","logarithmic","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","distanceFromCenter","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","formatter","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","normalize","interpolate","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"mappings":"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","file":"js/chunk-2d0f00ac.a3cba2b5.js","sourcesContent":["/*!\n * Chart.js v3.8.0\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as noop, aD as distanceBetweenPoints, aE as _setMinAndMaxByKey, aF as niceNum, aG as almostWhole, aH as almostEquals, aI as _decimalPlaces, aJ as _longestText, aK as _filterBetween, aL as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"sourceRoot":""}
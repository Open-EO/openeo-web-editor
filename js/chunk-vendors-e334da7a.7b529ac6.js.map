{"version":3,"file":"js/chunk-vendors-e334da7a.7b529ac6.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/proj4/lib/global.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/values.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/units.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/match.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projString.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/defs.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/parseCode.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/extend.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/msfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/sign.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_lon.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/tsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/phi2z.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/merc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/longlat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/deriveConstants.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/Datum.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datum.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/nadgrid.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/Proj.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datumUtils.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datum_transform.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/adjust_axis.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/toPoint.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/checkSanity.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/transform.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/core.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/Point.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_enfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/tmerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/sinh.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/hypot.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/log1py.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/asinhy.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/gatg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/clens.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/cosh.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/etmerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_zone.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/utm.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/srat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/gauss.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/sterea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/stere.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/somerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/omerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/lcc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/krovak.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e0fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e1fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e2fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e3fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/gN.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_lat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/imlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/cass.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/qsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/laea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/asinz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/aea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/gnom.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/iqsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/cea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/poly.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/nzmg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/mill.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/sinu.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/moll.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqdc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/vandg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/vincenty.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/aeqd.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/ortho.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/qsc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/robin.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/geocent.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/tpers.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/geos.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqearth.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/bonne.js","webpack://@openeo/web-editor/./node_modules/proj4/projs.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/index.js"],"sourcesContent":["export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var primeMeridian = {};\n\nprimeMeridian.greenwich = 0.0; // \"0dE\",\nprimeMeridian.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nprimeMeridian.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nprimeMeridian.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nprimeMeridian.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nprimeMeridian.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nprimeMeridian.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nprimeMeridian.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nprimeMeridian.ferro = -17.666666666667; // \"17d40'W\",\nprimeMeridian.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nprimeMeridian.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nprimeMeridian.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nprimeMeridian.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n\nexport default primeMeridian;\n","export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\n/**\n * @param {string} defData\n * @returns {import('./defs').ProjectionDefinition}\n */\nexport default function (defData) {\n  /** @type {import('./defs').ProjectionDefinition} */\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    /** @type {Array<?>} */\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\n/**\n * @typedef {Object} ProjectionDefinition\n * @property {string} title\n * @property {string} [projName]\n * @property {string} [ellps]\n * @property {import('./Proj.js').DatumDefinition} [datum]\n * @property {string} [datumName]\n * @property {number} [rf]\n * @property {number} [lat0]\n * @property {number} [lat1]\n * @property {number} [lat2]\n * @property {number} [lat_ts]\n * @property {number} [long0]\n * @property {number} [long1]\n * @property {number} [long2]\n * @property {number} [alpha]\n * @property {number} [longc]\n * @property {number} [x0]\n * @property {number} [y0]\n * @property {number} [k0]\n * @property {number} [a]\n * @property {number} [b]\n * @property {true} [R_A]\n * @property {number} [zone]\n * @property {true} [utmSouth]\n * @property {string|Array<number>} [datum_params]\n * @property {number} [to_meter]\n * @property {string} [units]\n * @property {number} [from_greenwich]\n * @property {string} [datumCode]\n * @property {string} [nadgrids]\n * @property {string} [axis]\n * @property {boolean} [sphere]\n * @property {number} [rectified_grid_angle]\n * @property {boolean} [approx]\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n */\n\n/**\n * @overload\n * @param {string} name\n * @param {string|ProjectionDefinition|import('./core.js').PROJJSONDefinition} projection\n * @returns {void}\n */\n/**\n * @overload\n * @param {Array<[string, string]>} name\n * @returns {Array<ProjectionDefinition|undefined>}\n */\n/**\n * @overload\n * @param {string} name\n * @returns {ProjectionDefinition}\n */\n\n/**\n * @param {string | Array<Array<string>> | Partial<Record<'EPSG'|'ESRI'|'IAU2000', ProjectionDefinition>>} name\n * @returns {ProjectionDefinition | Array<ProjectionDefinition|undefined> | void}\n */\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[/** @type {string} */ (name)] = parseProj(arguments[1]);\n      } else {\n        defs[/** @type {string} */ (name)] = wkt(arguments[1]);\n      }\n    } else {\n      defs[/** @type {string} */ (name)] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          return defs.apply(that, v);\n        } else {\n          return defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} code\n * @returns {import('./defs').ProjectionDefinition}\n */\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!('projName' in code)) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n","export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e\n * @property {number} k\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from './projections/merc';\nimport longlat from './projections/longlat';\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport { add };\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\n/**\n * @typedef {Object} NadgridInfo\n * @property {string} name The name of the NAD grid or 'null' if not specified.\n * @property {boolean} mandatory Indicates if the grid is mandatory (true) or optional (false).\n * @property {*} grid The loaded NAD grid object, or null if not loaded or not applicable.\n * @property {boolean} isNull True if the grid is explicitly 'null', otherwise false.\n */\n\n/**\n * @typedef {Object} NTV2GridOptions\n * @property {boolean} [includeErrorFields=true] Whether to include error fields in the subgrids.\n */\n\n/**\n * @typedef {Object} NadgridHeader\n * @property {number} [nFields] Number of fields in the header.\n * @property {number} [nSubgridFields] Number of fields in each subgrid header.\n * @property {number} nSubgrids Number of subgrids in the file.\n * @property {string} [shiftType] Type of shift (e.g., \"SECONDS\").\n * @property {number} [fromSemiMajorAxis] Source ellipsoid semi-major axis.\n * @property {number} [fromSemiMinorAxis] Source ellipsoid semi-minor axis.\n * @property {number} [toSemiMajorAxis] Target ellipsoid semi-major axis.\n * @property {number} [toSemiMinorAxis] Target ellipsoid semi-minor axis.\n */\n\n/**\n * @typedef {Object} Subgrid\n * @property {Array<number>} ll Lower left corner of the grid in radians [longitude, latitude].\n * @property {Array<number>} del Grid spacing in radians [longitude interval, latitude interval].\n * @property {Array<number>} lim Number of columns in the grid [longitude columns, latitude columns].\n * @property {number} [count] Total number of grid nodes.\n * @property {Array} cvs Mapped node values for the grid.\n */\n\n/** @typedef {{header: NadgridHeader, subgrids: Array<Subgrid>}} NADGrid */\n\nvar loadedNadgrids = {};\n\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer} data - The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] - Optional parameters for loading the grid.\n * @returns {NADGrid} - The loaded NAD grid information.\n */\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {import('geotiff').GeoTIFF} data - The GeoTIFF instance to read the grid from.\n * @returns {{ready: Promise<NADGrid>}} - A promise that resolves to the loaded grid information.\n */\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer|import('geotiff').GeoTIFF} data The data to load, either an ArrayBuffer for NTv2 or a GeoTIFF instance.\n * @param {NTV2GridOptions} [options] Optional parameters.\n * @returns {{ready: Promise<NADGrid>}|NADGrid} - A promise that resolves to the loaded grid information.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {ArrayBuffer} data The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] Optional parameters for loading the grid.\n * @returns {NADGrid} The loaded NAD grid information.\n */\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {import('geotiff').GeoTIFF} tiff The GeoTIFF instance to read the grid from.\n * @returns {Promise<NADGrid>} A promise that resolves to the loaded NAD grid information.\n */\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n * @param {string} nadgrids A comma-separated list of grid names, optionally prefixed with '@' to indicate optional grids.\n * @returns\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\n/**\n * @param {string} value The nadgrid string to get information for.\n * @returns {NadgridInfo|null} An object with grid information, or null if the input is empty.\n */\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\n/**\n * @typedef {Object} DatumDefinition\n * @property {number} datum_type - The type of datum.\n * @property {number} a - Semi-major axis of the ellipsoid.\n * @property {number} b - Semi-minor axis of the ellipsoid.\n * @property {number} es - Eccentricity squared of the ellipsoid.\n * @property {number} ep2 - Second eccentricity squared of the ellipsoid.\n */\n\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} srsCode\n * @param {(errorMessage?: string, instance?: Projection) => void} [callback]\n */\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.forward = null;\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.inverse = null;\n  /** @type {string} */\n  this.name;\n  /** @type {string} */\n  this.title;\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  /** @type {DatumDefinition} */\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  if ('init' in this && typeof this.init === 'function') {\n    this.init();\n  }\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  /** @type {import(\"./core\").InterfaceCoordinates} */\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n","/**\n * @param {Array<number>} array\n * @returns {import(\"../core\").InterfaceCoordinates}\n */\nexport default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\n/**\n * @param {import('./defs').ProjectionDefinition} source\n * @param {import('./defs').ProjectionDefinition} dest\n * @param {import('./core').TemplateCoordinates} point\n * @param {boolean} enforceAxis\n * @returns {import('./core').InterfaceCoordinates | undefined}\n */\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  point = /** @type {import('./core').InterfaceCoordinates} */ (point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\n/**\n * @typedef {{x: number, y: number, z?: number, m?: number}} InterfaceCoordinates\n */\n\n/**\n * @typedef {Array<number> | InterfaceCoordinates} TemplateCoordinates\n */\n\n/**\n * @typedef {Object} Converter\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {proj} [oProj]\n */\n\n/**\n * @typedef {Object} PROJJSONDefinition\n * @property {string} [$schema]\n * @property {string} type\n * @property {string} [name]\n * @property {{authority: string, code: number}} [id]\n * @property {string} [scope]\n * @property {string} [area]\n * @property {{south_latitude: number, west_longitude: number, north_latitude: number, east_longitude: number}} [bbox]\n * @property {PROJJSONDefinition[]} [components]\n * @property {{type: string, name: string}} [datum]\n * @property {{\n *   name: string,\n *   members: Array<{\n *     name: string,\n *     id?: {authority: string, code: number}\n *   }>,\n *   ellipsoid?: {\n *     name: string,\n *     semi_major_axis: number,\n *     inverse_flattening?: number\n *   },\n *   accuracy?: string,\n *   id?: {authority: string, code: number}\n * }} [datum_ensemble]\n * @property {{\n *   subtype: string,\n *   axis: Array<{\n *     name: string,\n *     abbreviation?: string,\n *     direction: string,\n *     unit: string\n *   }>\n * }} [coordinate_system]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string\n *   }>\n * }} [conversion]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string,\n *     type?: string,\n *     file_name?: string\n *   }>\n * }} [transformation]\n */\n\n/**\n * @template {TemplateCoordinates} T\n * @param {proj} from\n * @param {proj} to\n * @param {T} coords\n * @param {boolean} [enforceAxis]\n * @returns {T}\n */\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3)));\n        } else {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3)));\n        }\n      } else {\n        return /** @type {T} */ ([transformedArray.x, transformedArray.y].concat(coords.slice(2)));\n      }\n    } else {\n      return /** @type {T} */ ([transformedArray.x, transformedArray.y]);\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return /** @type {T} */ (out);\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return /** @type {T} */ (out);\n  }\n}\n\n/**\n * @param {proj | string | PROJJSONDefinition | Converter} item\n * @returns {import('./Proj').default}\n */\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (typeof item === 'object' && 'oProj' in item) {\n    return item.oProj;\n  }\n  return proj(/** @type {string | PROJJSONDefinition} */ (item));\n}\n\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @param {string | PROJJSONDefinition | proj} fromProjOrToProj\n * @param {string | PROJJSONDefinition | proj | TemplateCoordinates} [toProjOrCoord]\n * @param {T} [coord]\n * @returns {T|Converter}\n */\nfunction proj4(fromProjOrToProj, toProjOrCoord, coord) {\n  /** @type {proj} */\n  var fromProj;\n  /** @type {proj} */\n  var toProj;\n  var single = false;\n  /** @type {Converter} */\n  var obj;\n  if (typeof toProjOrCoord === 'undefined') {\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof /** @type {?} */ (toProjOrCoord).x !== 'undefined' || Array.isArray(toProjOrCoord)) {\n    coord = /** @type {T} */ (/** @type {?} */ (toProjOrCoord));\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  }\n  if (!fromProj) {\n    fromProj = checkProj(fromProjOrToProj);\n  }\n  if (!toProj) {\n    toProj = checkProj(/** @type {string | PROJJSONDefinition | proj } */ (toProjOrCoord));\n  }\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\n\nexport default proj4;\n","import { toPoint, forward } from 'mgrs';\n\n/**\n * @deprecated v3.0.0 - use proj4.toPoint instead\n * @param {number | import('./core').TemplateCoordinates | string} x\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0]);\n    this.y = parseFloat(coords[1]);\n    this.z = parseFloat(coords[2]) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n","import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} cbg\n * @property {Array<number>} cgb\n * @property {Array<number>} utg\n * @property {Array<number>} gtu\n * @property {number} Qn\n * @property {number} Zb\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\n/** @this {import('../defs.js').ProjectionDefinition} */\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} rc\n * @property {number} C\n * @property {number} phic0\n * @property {number} ratexp\n * @property {number} K\n * @property {number} e\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sinc0\n * @property {number} cosc0\n * @property {number} R2\n * @property {number} rc\n * @property {number} phic0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} coslat0\n * @property {number} sinlat0\n * @property {number} ms1\n * @property {number} X0\n * @property {number} cosX0\n * @property {number} sinX0\n * @property {number} con\n * @property {number} cons\n * @property {number} e\n */\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} lambda0\n * @property {number} e\n * @property {number} R\n * @property {number} b0\n * @property {number} K\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\n/**\n * @typedef {Object} LocalThis\n * @property {boolean} no_off\n * @property {boolean} no_rot\n * @property {number} rectified_grid_angle\n * @property {number} es\n * @property {number} A\n * @property {number} B\n * @property {number} E\n * @property {number} e\n * @property {number} lam0\n * @property {number} singam\n * @property {number} cosgam\n * @property {number} sinrot\n * @property {number} cosrot\n * @property {number} rB\n * @property {number} ArB\n * @property {number} BrA\n * @property {number} u_0\n * @property {number} v_pole_n\n * @property {number} v_pole_s\n */\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/**\n * Initialize the Oblique Mercator  projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.PI) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.PI) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n * @property {number} ns\n * @property {number} f0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n","export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n","export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n","export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n","export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {Array<number>} apa\n * @property {number} dd\n * @property {number} e\n * @property {number} es\n * @property {number} mmf\n * @property {number} rq\n * @property {number} qp\n * @property {number} sinb1\n * @property {number} cosb1\n * @property {number} ymf\n * @property {number} xmf\n * @property {number} sinph0\n * @property {number} cosph0\n */\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/**\n * Initialize the Lambert Azimuthal Equal Area projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? S_POLE : N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = EQUIT;\n  } else {\n    this.mode = OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case N_POLE:\n        this.dd = 1;\n        break;\n      case S_POLE:\n        this.dd = 1;\n        break;\n      case EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e3\n * @property {number} sin_po\n * @property {number} cos_po\n * @property {number} t1\n * @property {number} con\n * @property {number} ms1\n * @property {number} qs1\n * @property {number} t2\n * @property {number} ms2\n * @property {number} qs2\n * @property {number} t3\n * @property {number} qs0\n * @property {number} ns0\n * @property {number} c\n * @property {number} rh\n * @property {number} sin_phi\n * @property {number} cos_phi\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n * @property {number} infinity_dist\n * @property {number} rc\n */\n\n/**\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n   @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n */\n\n/**\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n  @this {import('../defs.js').ProjectionDefinition & LocalThis}\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\nvar MAX_ITER = 20;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {Array<number>} en\n * @property {number} n\n * @property {number} m\n * @property {number} C_y\n * @property {number} C_x\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} sin_phi\n * @property {number} cos_phi\n * @property {number} ms1\n * @property {number} ml1\n * @property {number} ms2\n * @property {number} ml2\n * @property {number} ns\n * @property {number} g\n * @property {number} ml0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sin_phi = Math.sin(this.lat1);\n  this.cos_phi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sin_phi, this.cos_phi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sin_phi;\n  } else {\n    this.sin_phi = Math.sin(this.lat2);\n    this.cos_phi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sin_phi, this.cos_phi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} R - Radius of the Earth\n */\n\n/**\n * Initialize the Van Der Grinten projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Calculates the inverse geodesic problem using Vincenty's formulae.\n * Computes the forward azimuth and ellipsoidal distance between two points\n * specified by latitude and longitude on the surface of an ellipsoid.\n *\n * @param {number} lat1 Latitude of the first point in radians.\n * @param {number} lon1 Longitude of the first point in radians.\n * @param {number} lat2 Latitude of the second point in radians.\n * @param {number} lon2 Longitude of the second point in radians.\n * @param {number} a Semi-major axis of the ellipsoid (meters).\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{ azi1: number, s12: number }} An object containing:\n *   - azi1: Forward azimuth from the first point to the second point (radians).\n *   - s12: Ellipsoidal distance between the two points (meters).\n */\nexport function vincentyInverse(lat1, lon1, lat2, lon2, a, f) {\n  const L = lon2 - lon1;\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const U2 = Math.atan((1 - f) * Math.tan(lat2));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);\n\n  let lambda = L, lambdaP, iterLimit = 100;\n  let sinLambda, cosLambda, sinSigma, cosSigma, sigma, sinAlpha, cos2Alpha, cos2SigmaM, C;\n  let uSq, A, B, deltaSigma, s;\n\n  do {\n    sinLambda = Math.sin(lambda);\n    cosLambda = Math.cos(lambda);\n    sinSigma = Math.sqrt(\n      (cosU2 * sinLambda) * (cosU2 * sinLambda)\n      + (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n      * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n    );\n    if (sinSigma === 0) {\n      return { azi1: 0, s12: 0 }; // coincident points\n    }\n    cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n    sigma = Math.atan2(sinSigma, cosSigma);\n    sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma;\n    cos2Alpha = 1 - sinAlpha * sinAlpha;\n    cos2SigmaM = (cos2Alpha !== 0) ? (cosSigma - 2 * sinU1 * sinU2 / cos2Alpha) : 0;\n    C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n    lambdaP = lambda;\n    lambda = L + (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  } while (Math.abs(lambda - lambdaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { azi1: NaN, s12: NaN }; // formula failed to converge\n  }\n\n  uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n  deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n    - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n\n  s = (a * (1 - f)) * A * (sigma - deltaSigma);\n\n  // Forward azimuth\n  const azi1 = Math.atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n\n  return { azi1, s12: s };\n}\n\n/**\n * Solves the direct geodetic problem using Vincenty's formulae.\n * Given a starting point, initial azimuth, and distance, computes the destination point on the ellipsoid.\n *\n * @param {number} lat1 Latitude of the starting point in radians.\n * @param {number} lon1 Longitude of the starting point in radians.\n * @param {number} azi1 Initial azimuth (forward azimuth) in radians.\n * @param {number} s12 Distance to travel from the starting point in meters.\n * @param {number} a Semi-major axis of the ellipsoid in meters.\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{lat2: number, lon2: number}} The latitude and longitude (in radians) of the destination point.\n */\nexport function vincentyDirect(lat1, lon1, azi1, s12, a, f) {\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinAlpha1 = Math.sin(azi1), cosAlpha1 = Math.cos(azi1);\n\n  const sigma1 = Math.atan2(sinU1, cosU1 * cosAlpha1);\n  const sinAlpha = cosU1 * sinAlpha1;\n  const cos2Alpha = 1 - sinAlpha * sinAlpha;\n  const uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n\n  let sigma = s12 / ((a * (1 - f)) * A), sigmaP, iterLimit = 100;\n  let cos2SigmaM, sinSigma, cosSigma, deltaSigma;\n\n  do {\n    cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n    sinSigma = Math.sin(sigma);\n    cosSigma = Math.cos(sigma);\n    deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n      - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n    sigmaP = sigma;\n    sigma = s12 / ((a * (1 - f)) * A) + deltaSigma;\n  } while (Math.abs(sigma - sigmaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { lat2: NaN, lon2: NaN };\n  }\n\n  const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n  const lat2 = Math.atan2(\n    sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n    (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\n  );\n  const lambda = Math.atan2(\n    sinSigma * sinAlpha1,\n    cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\n  );\n  const C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n  const L = lambda - (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  const lon2 = lon1 + L;\n\n  return { lat2, lon2 };\n}\n","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { vincentyDirect, vincentyInverse } from '../common/vincenty';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} sin_p12\n * @property {number} cos_p12\n * @property {number} a\n * @property {number} f\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  // flattening for ellipsoid\n  this.f = this.es / (1 + Math.sqrt(1 - this.es));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      vars = vincentyInverse(this.lat0, this.long0, lat, lon, this.a, this.f);\n      azi1 = vars.azi1;\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      azi1 = Math.atan2(p.x, p.y);\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = vincentyDirect(this.lat0, this.long0, azi1, s12, this.a, this.f);\n\n      p.x = vars.lon2;\n      p.y = vars.lat2;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} face\n * @property {number} x0\n * @property {number} y0\n * @property {number} es\n * @property {number} one_minus_f\n * @property {number} one_minus_f_squared\n */\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {number} sinph0\n * @property {number} cosph0\n * @property {number} pn1\n * @property {number} h\n * @property {number} rp\n * @property {number} p\n * @property {number} h1\n * @property {number} pfact\n * @property {number} es\n * @property {number} tilt\n * @property {number} azi\n * @property {number} cg\n * @property {number} sg\n * @property {number} cw\n * @property {number} sw\n */\n\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {1 | 0} flip_axis\n * @property {number} h\n * @property {number} radius_g_1\n * @property {number} radius_g\n * @property {number} radius_p\n * @property {number} radius_p2\n * @property {number} radius_p_inv2\n * @property {'ellipse'|'sphere'} shape\n * @property {number} C\n * @property {string} sweep\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} phi1\n * @property {number} cphi1\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} m1\n * @property {number} am1\n */\n\nvar EPS10 = 1e-10;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n","import core from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\n/**\n * @typedef {Object} Mgrs\n * @property {(lonlat: [number, number]) => string} forward\n * @property {(mgrsString: string) => [number, number, number, number]} inverse\n * @property {(mgrsString: string) => [number, number]} toPoint\n */\n\n/**\n * @template {import('./core').TemplateCoordinates} T\n * @type {core<T> & {defaultDatum: string, Proj: typeof Proj, WGS84: Proj, Point: typeof Point, toPoint: typeof common, defs: typeof defs, nadgrid: typeof nadgrid, transform: typeof transform, mgrs: Mgrs, version: string}}\n */\nconst proj4 = Object.assign(core, {\n  defaultDatum: 'WGS84',\n  Proj,\n  WGS84: new Proj('WGS84'),\n  Point,\n  toPoint: common,\n  defs,\n  nadgrid,\n  transform,\n  mgrs,\n  version: '__VERSION__'\n});\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["defs","i","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","primeMeridian","mm","to_meter","cm","ft","fath","kmi","km","mi","yd","ch","link","dm","in","ignoredChar","match","obj","key","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","name","that","this","arguments","def","charAt","Array","isArray","apply","EPSG","ESRI","IAU2000","console","log","global","testObj","code","testDef","testWKT","codes","checkMercator","item","auth","checkProjStr","ext","testProj","parse","out","maybeProjStr","destination","source","value","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","init","es","e","sphere","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","forEach","n","getNormalizedProjName","get","start","ellipsoids","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk80ign","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Ellipsoid","eccentricity","a2","b2","ep2","ellps","ellipse","datums","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","EPSG_5451","IGNF_LURESG","EPSG_4614","EPSG_4615","ESRI_37241","ESRI_37249","ESRI_37245","EPSG_4178","EPSG_4622","EPSG_4625","EPSG_5252","EPSG_4314","EPSG_4282","EPSG_4231","EPSG_4274","EPSG_4134","EPSG_4254","EPSG_4159","EPSG_4687","EPSG_4227","EPSG_4746","EPSG_4745","EPSG_6311","EPSG_4289","EPSG_4230","EPSG_4154","EPSG_4156","EPSG_4299","EPSG_4179","EPSG_4313","EPSG_4194","EPSG_4195","EPSG_4196","EPSG_4611","EPSG_4633","EPSG_4641","EPSG_4643","EPSG_4300","EPSG_4188","EPSG_4660","EPSG_4662","EPSG_3906","EPSG_4307","EPSG_6892","EPSG_4690","EPSG_4691","EPSG_4629","EPSG_4630","EPSG_4692","EPSG_9333","EPSG_9059","EPSG_4312","EPSG_4123","EPSG_4309","ESRI_104106","EPSG_4281","EPSG_4322","EPSG_4324","EPSG_4284","EPSG_4277","EPSG_4207","EPSG_4688","EPSG_4689","EPSG_4720","EPSG_4273","EPSG_4240","EPSG_4817","ESRI_104131","EPSG_4265","EPSG_4263","EPSG_4298","EPSG_4270","EPSG_4229","EPSG_4220","EPSG_4214","EPSG_4232","EPSG_4238","EPSG_4168","EPSG_4131","EPSG_4152","EPSG_5228","EPSG_8351","EPSG_4683","EPSG_4133","EPSG_7373","EPSG_9075","EPSG_9072","EPSG_9294","EPSG_4212","EPSG_4191","EPSG_4237","EPSG_4740","EPSG_4124","EPSG_5681","EPSG_4141","EPSG_4204","EPSG_4319","EPSG_4200","EPSG_4130","EPSG_4127","EPSG_4149","EPSG_4617","EPSG_4663","EPSG_4664","EPSG_4665","EPSG_4666","EPSG_4756","EPSG_4723","EPSG_4726","EPSG_4267","EPSG_5365","EPSG_4218","EPSG_4242","EPSG_4216","ESRI_104105","ESRI_104129","EPSG_4673","EPSG_4202","EPSG_4203","EPSG_3819","EPSG_8694","EPSG_4145","EPSG_4283","EPSG_4317","EPSG_4272","EPSG_4248","EPSG_5561","EPSG_5233","ESRI_104130","ESRI_104102","ESRI_37207","EPSG_4675","ESRI_104109","ESRI_104112","ESRI_104113","IGNF_WGS72G","IGNF_NTFG","IGNF_EFATE57G","IGNF_PGP50G","IGNF_REUN47G","IGNF_CSG67G","IGNF_GUAD48G","IGNF_TAHI51G","IGNF_TAHAAG","IGNF_NUKU72G","IGNF_PETRELS72G","IGNF_WALL78G","IGNF_MAYO50G","IGNF_TANNAG","IGNF_IGN72G","IGNF_ATIGG","IGNF_FANGA84G","IGNF_RUSAT84G","IGNF_KAUE70G","IGNF_MOP90G","IGNF_MHPF67G","IGNF_TAHI79G","IGNF_ANAA92G","IGNF_MARQUI72G","IGNF_APAT86G","IGNF_TUBU69G","IGNF_STPM50G","EPSG_4150","EPSG_4754","ESRI_104101","EPSG_4693","EPSG_6207","EPSG_4153","EPSG_4132","EPSG_4221","EPSG_4266","EPSG_4193","EPSG_5340","EPSG_4246","EPSG_4318","EPSG_4121","EPSG_4223","EPSG_4158","EPSG_4285","EPSG_4613","EPSG_4607","EPSG_4475","EPSG_4208","EPSG_4743","EPSG_4710","EPSG_7881","EPSG_4682","EPSG_4739","EPSG_4679","EPSG_4750","EPSG_4644","EPSG_4695","EPSG_4292","EPSG_4302","EPSG_4143","EPSG_4606","EPSG_4699","EPSG_4247","EPSG_4160","EPSG_4161","EPSG_9251","EPSG_9253","EPSG_4297","EPSG_4269","EPSG_4301","EPSG_4618","EPSG_4612","EPSG_4678","EPSG_4250","EPSG_4144","EPSG_4147","EPSG_4259","EPSG_4164","EPSG_4211","EPSG_4182","EPSG_4224","EPSG_4225","EPSG_5527","EPSG_4752","EPSG_4310","EPSG_9248","EPSG_4680","EPSG_4701","EPSG_4706","EPSG_4805","EPSG_4201","EPSG_4210","EPSG_4183","EPSG_4139","EPSG_4668","EPSG_4717","EPSG_4732","EPSG_4280","EPSG_4209","EPSG_4261","EPSG_4658","EPSG_4721","EPSG_4222","EPSG_4601","EPSG_4602","EPSG_4603","EPSG_4605","EPSG_4621","EPSG_4657","EPSG_4316","EPSG_4642","EPSG_4698","EPSG_4192","EPSG_4311","EPSG_4135","ESRI_104138","EPSG_4245","EPSG_4142","EPSG_4213","EPSG_4253","EPSG_4129","EPSG_4713","EPSG_4239","EPSG_4146","EPSG_4155","EPSG_4165","EPSG_4672","EPSG_4236","EPSG_4251","EPSG_4271","EPSG_4175","EPSG_4716","EPSG_4315","EPSG_4744","EPSG_4244","EPSG_4293","EPSG_4714","EPSG_4736","EPSG_6883","EPSG_6894","EPSG_4205","EPSG_4256","EPSG_4262","EPSG_4604","EPSG_4169","EPSG_4620","EPSG_4184","EPSG_4616","EPSG_9403","EPSG_4684","EPSG_4708","EPSG_4707","EPSG_4709","EPSG_4712","EPSG_4711","EPSG_4718","EPSG_4719","EPSG_4724","EPSG_4725","EPSG_4735","EPSG_4722","EPSG_4728","EPSG_4734","EPSG_4727","EPSG_4729","EPSG_4730","EPSG_4733","ESRI_37218","ESRI_37240","ESRI_37221","ESRI_4305","ESRI_104139","EPSG_4748","EPSG_4219","EPSG_4255","EPSG_4257","EPSG_4646","EPSG_6881","EPSG_6882","EPSG_4715","IGNF_RGF93GDD","IGNF_RGM04GDD","IGNF_RGSPM06GDD","IGNF_RGTAAF07GDD","IGNF_RGFG95GDD","IGNF_RGNCG","IGNF_RGPFGDD","IGNF_ETRS89G","IGNF_RGR92GDD","EPSG_4173","EPSG_4180","EPSG_4619","EPSG_4667","EPSG_4075","EPSG_6706","EPSG_7798","EPSG_4661","EPSG_4669","EPSG_8685","EPSG_4151","EPSG_9702","EPSG_4758","EPSG_4761","EPSG_4765","EPSG_8997","EPSG_4023","EPSG_4670","EPSG_4694","EPSG_4148","EPSG_4163","EPSG_4167","EPSG_4189","EPSG_4190","EPSG_4176","EPSG_4659","EPSG_3824","EPSG_3889","EPSG_4046","EPSG_4081","EPSG_4558","EPSG_4483","EPSG_5013","EPSG_5264","EPSG_5324","EPSG_5354","EPSG_5371","EPSG_5373","EPSG_5381","EPSG_5393","EPSG_5489","EPSG_5593","EPSG_6135","EPSG_6365","EPSG_5246","EPSG_7886","EPSG_8431","EPSG_8427","EPSG_8699","EPSG_8818","EPSG_4757","EPSG_9140","EPSG_8086","EPSG_4686","EPSG_4737","EPSG_4702","EPSG_4747","EPSG_4749","EPSG_4674","EPSG_4755","EPSG_4759","EPSG_4762","EPSG_4763","EPSG_4764","EPSG_4166","EPSG_4170","EPSG_5546","EPSG_7844","EPSG_4818","datum_type","grids","loadedNadgrids","nadgrid","data","options","ArrayBuffer","readNTV2Grid","ready","readGeotiffGrid","includeErrorFields","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","async","tiff","subGridCount","getImageCount","subgridIndex","image","getImage","rasters","readRasters","lim","getWidth","getHeight","imageBBoxRadians","getBoundingBox","degreesToRadians","del","fileDirectory","ModelPixelScale","maxX","minY","latitudeOffsetBand","longitudeOffsetBand","nodes","j","index","secondsToRadians","ll","cvs","tifGrid","nSubgrids","getNadgrids","parseNadgridString","optional","slice","mandatory","grid","isNull","degrees","seconds","nFields","getInt32","warn","nSubgridFields","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","count","gridNodeCount","mapNodes","rowSize","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","title","error","json","parseCode","ourProj","projections","projName","datumDef","Datum","sphere_","ecc","datumObj","extend","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","type","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","input","output","Number","NaN","attemptedGrids","outer","jj","subgrid","epsilon","minX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","tol","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","isFinite","TypeError","checkNotWGS","transform","enforceAxis","toPoint","hasZ","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","checkProj","oProj","proj4","fromProjOrToProj","toProjOrCoord","coord","fromProj","toProj","single","Point","fromMGRS","mgrsStr","prototype","toMGRS","accuracy","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","hr","hr1","hr2","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hi1","hi","Error","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","C","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","A","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","I","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","D","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","T","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e1","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","vincentyInverse","lon1","lon2","U1","U2","sinU1","cosU1","sinU2","cosU2","lambdaP","sinLambda","cosLambda","sinSigma","cosSigma","sigma","sinAlpha","cos2Alpha","cos2SigmaM","uSq","deltaSigma","iterLimit","azi1","s12","vincentyDirect","sinAlpha1","cosAlpha1","sigma1","sigmaP","sin_p12","cos_p12","Mlp","Ml","kp","cos_c","vars","M","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","mu","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","COEFS_X","COEFS_Y","FXC","FYC","C1","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","fy","fpy","EPS","NITER","EPS10","am1","e_inv","e_fwd","cphi1","s_inv","s_fwd","Proj","utm","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","eqearth","bonne","assign","core","defaultDatum","mgrs","version"],"sourceRoot":""}
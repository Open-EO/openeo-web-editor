{"version":3,"file":"js/1189.344ac366.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/ol/interaction/Interaction.js","webpack://@openeo/web-editor/./node_modules/ol/has.js","webpack://@openeo/web-editor/./node_modules/ol/layer/BaseVector.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/Pointer.js","webpack://@openeo/web-editor/./node_modules/ol/layer/BaseTile.js","webpack://@openeo/web-editor/./node_modules/ol/layer/Tile.js","webpack://@openeo/web-editor/./node_modules/ol/layer/Group.js","webpack://@openeo/web-editor/./node_modules/ol/layer/VectorTile.js","webpack://@openeo/web-editor/./node_modules/ol/layer/Heatmap.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/Select.js","webpack://@openeo/web-editor/./node_modules/ol/obj.js","webpack://@openeo/web-editor/./node_modules/ol/layer/TileProperty.js","webpack://@openeo/web-editor/./node_modules/ol/layer/Base.js","webpack://@openeo/web-editor/./node_modules/ol/layer/Layer.js","webpack://@openeo/web-editor/./node_modules/ol/loadingstrategy.js","webpack://@openeo/web-editor/./node_modules/ol/layer/BaseImage.js","webpack://@openeo/web-editor/./node_modules/ol/layer/Image.js","webpack://@openeo/web-editor/./node_modules/ol/layer/Property.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/Property.js","webpack://@openeo/web-editor/./node_modules/ol/layer/Vector.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/DragPan.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/DragRotate.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/DragBox.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/DragZoom.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/KeyboardPan.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/KeyboardZoom.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/PinchRotate.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/PinchZoom.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/defaults.js"],"sourcesContent":["/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {import(\"../source/VectorTile.js\").default<FeatureType>} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default<FeatureType>, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Options<FeatureType>} */ (\n      Object.assign({}, options)\n    );\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport BaseVector from './BaseVector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {ShaderBuilder} from '../webgl/ShaderBuilder.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default<FeatureType>} [source] Point source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @extends {BaseVector<import(\"../source/Vector.js\").default<FeatureType>, WebGLPointsLayerRenderer>}\n * @api\n */\nclass Heatmap extends BaseVector {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  createRenderer() {\n    const builder = new ShaderBuilder()\n      .addAttribute('float a_prop_weight')\n      .addVarying('v_prop_weight', 'float', 'a_prop_weight')\n      .addUniform('float u_size')\n      .addUniform('float u_blurSlope')\n      .setSymbolSizeExpression('vec2(u_size)')\n      .setSymbolColorExpression(\n        'vec4(smoothstep(0., 1., (1. - length(coordsPx * 2. / v_quadSizePx)) * u_blurSlope) * v_prop_weight)',\n      );\n\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: (feature) => {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          },\n        },\n      ],\n      uniforms: {\n        u_size: () => {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        },\n        u_blurSlope: () => {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        },\n      },\n      hitDetectionEnabled: true,\n      vertexShader: builder.getSymbolVertexShader(),\n      fragmentShader: builder.getSymbolFragmentShader(),\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n            uniform float u_opacity;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a * u_opacity;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: () => this.gradient_,\n            u_opacity: () => this.getOpacity(),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").default, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {Collection<Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature~Feature} and an\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {Collection<Feature>}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return layers.includes(layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {Collection<Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\n   * a selected feature.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_,\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_,\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n    if (!this.getLayer(feature)) {\n      const layer = /** @type {VectorLayer} */ (\n        this.getMap()\n          .getAllLayers()\n          .find(function (layer) {\n            if (\n              layer instanceof VectorLayer &&\n              layer.getSource() &&\n              layer.getSource().hasFeature(feature)\n            ) {\n              return layer;\n            }\n          })\n      );\n      if (layer) {\n        this.addFeatureLayerAssociation_(feature, layer);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<Feature>} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    if (this.style_) {\n      this.restorePreviousStyle_(evt.element);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const deselected = [];\n\n    /**\n     * @type {Array<Feature>}\n     */\n    const selected = [];\n\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          this.addFeatureLayerAssociation_(feature, layer);\n          selected.push(feature);\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        (feature, layer) => {\n          if (!(feature instanceof Feature) || !this.filter_(feature, layer)) {\n            return;\n          }\n          if ((add || toggle) && !features.getArray().includes(feature)) {\n            this.addFeatureLayerAssociation_(feature, layer);\n            selected.push(feature);\n          } else if (\n            (remove || toggle) &&\n            features.getArray().includes(feature)\n          ) {\n            deselected.push(feature);\n            this.removeFeatureLayerAssociation_(feature);\n          }\n          return !this.multi_;\n        },\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        },\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent,\n        ),\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles['Polygon'], styles['LineString']);\n  extend(styles['GeometryCollection'], styles['LineString']);\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default<FeatureType>} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default<FeatureType>, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n"],"names":["Interaction","constructor","options","super","this","on","once","un","handleEvent","map_","setActive","getActive","get","ACTIVE","getMap","mapBrowserEvent","active","set","setMap","map","pan","view","delta","duration","currentCenter","getCenterInternal","center","animateInternal","undefined","easing","getConstrainedCenter","zoomByDelta","anchor","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","resolution","ua","navigator","userAgent","toLowerCase","FIREFOX","includes","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","prototype","decode","PASSIVE_EVENT_LISTENERS","passive","Object","defineProperty","window","addEventListener","removeEventListener","error","Property","RENDER_ORDER","BaseVectorLayer","baseOptions","assign","style","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","String","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","pixel","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","frameState","layerState","declutterGroup","getRenderer","setRenderOrder","renderOrder","createDefaultStyle","styleLike","toStyleLike","changed","Array","isArray","length","first","styles","i","candidate","Error","rules","flatStyles","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","originalEvent","stopEvent","updateTrackedPointers_","type","POINTERDRAG","preventDefault","POINTERUP","handledUp","POINTERDOWN","handled","POINTERMOVE","activePointers","centroid","pointerEvents","clientX","clientY","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","getData","TileLayer","createRenderer","GroupEvent","layer","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","slice","unique","setLayers","handleLayerChange_","forEach","getLayers","push","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","id","layersArray","getArray","ii","registerLayerListeners_","dispatchEvent","listenerKeys","PROPERTYCHANGE","CHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","event","collectionEvent","element","key","collection","currentLayers","getLayersArray","array","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","zIndex","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","getSourceState","VectorTileLayer","renderMode","renderMode_","getBackground","setBackground","getRenderMode","BLUR","GRADIENT","RADIUS","DEFAULT_GRADIENT","Heatmap","gradient","radius","blur","weight","gradient_","handleGradientChanged_","setGradient","setBlur","setRadius","weightFunction_","feature","getBlur","getGradient","getRadius","createGradient","colors","builder","addAttribute","addVarying","addUniform","setSymbolSizeExpression","setSymbolColorExpression","className","getClassName","attributes","name","callback","uniforms","u_size","u_blurSlope","hitDetectionEnabled","vertexShader","getSymbolVertexShader","fragmentShader","getSymbolFragmentShader","postProcesses","u_gradientTexture","u_opacity","getOpacity","width","height","context","createLinearGradient","step","addColorStop","fillStyle","fillRect","canvas","SelectEventType","SELECT","SelectEvent","selected","deselected","originalFeatureStyles","Select","layerFilter","boundAddFeature_","addFeature_","bind","boundRemoveFeature_","removeFeature_","condition_","condition","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","filter","hitTolerance_","hitTolerance","getDefaultStyleFunction","features_","features","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","currentMap","restorePreviousStyle_","applySelectedStyle_","evt","getAllLayers","find","getSource","hasFeature","interactions","getInteractions","interaction","lastIndexOf","removeFeatureLayerAssociation_","add","remove","toggle","forEachFeatureAtPixel","getLength","item","index","indexOf","splice","extend","j","createEditingStyle","getGeometry","getType","clear","object","property","isEmpty","BaseLayer","background_","background","properties","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","Infinity","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","setProperties","state_","managed","state","getZIndex","round","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","EXTENT","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","disposeInternal","Layer","source","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","getState","handleSourceChange_","setTimeout","Promise","resolve","isVisible","getMapInternal","getView","viewState","calculateExtent","layerStatesArray","getLayerGroup","layerExtent","inView","getAttributions","getViewStateAndExtent","attributions","target","layerRenderer","prepareFrame","renderFrame","unrender","renderDeferred","setMapInternal","MAP","PRECOMPOSE","renderEvent","some","arrayLayerState","hasRenderer","dispose","zoom","all","BaseImageLayer","ImageLayer","BaseImage","VectorLayer","DoubleClickZoom","delta_","duration_","MapBrowserEventType","DBLCLICK","browserEvent","coordinate","shiftKey","DragPan","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","onFocusOnly","noKinetic_","beginInteraction","getEventPixel","update","getResolution","getRotation","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","endInteraction","DragRotate","lastAngle_","getConstraints","rotation","size","getSize","offset","theta","atan2","adjustRotationInternal","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","Event","DragBox","box_","minArea_","minArea","onBoxEnd","startPixel_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","completeBox","DragZoom","out_","out","geometry","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","EventType","KEYDOWN","keyEvent","Key","DOWN","LEFT","RIGHT","UP","mapUnitsDelta","deltaX","deltaY","KeyboardZoom","KEYPRESS","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","now","Date","abs","getConstrainResolution","clearTimeout","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","dx","dy","sqrt","adjustResolutionInternal","direction","defaults","Collection","Kinetic","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom"],"sourceRoot":""}
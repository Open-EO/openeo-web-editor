{"version":3,"file":"js/chunk-vendors-e334da7a.fa5045e3.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/proj4/lib/global.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/values.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/units.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/match.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projString.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/defs.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/parseCode.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/extend.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/msfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/sign.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_lon.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/tsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/phi2z.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/merc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/longlat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/deriveConstants.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/constants/Datum.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datum.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/nadgrid.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/Proj.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datumUtils.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/datum_transform.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/adjust_axis.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/toPoint.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/checkSanity.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/transform.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/core.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/Point.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_enfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/tmerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/sinh.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/hypot.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/log1py.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/asinhy.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/gatg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/clens.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/cosh.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/etmerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_zone.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/utm.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/srat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/gauss.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/sterea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/stere.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/somerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/omerc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/lcc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/krovak.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/mlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e0fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e1fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e2fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/e3fn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/gN.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/adjust_lat.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/imlfn.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/cass.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/qsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/laea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/asinz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/aea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/gnom.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/common/iqsfnz.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/cea.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/poly.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/nzmg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/mill.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/sinu.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/moll.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqdc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/vandg.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/aeqd.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/ortho.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/qsc.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/robin.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/geocent.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/tpers.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/geos.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/eqearth.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/projections/bonne.js","webpack://@openeo/web-editor/./node_modules/proj4/projs.js","webpack://@openeo/web-editor/./node_modules/proj4/lib/index.js"],"sourcesContent":["export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), \"+proj=utm +zone=\" + i + \" +datum=WGS84 +units=m\");\n    defs('EPSG:' + (32700 + i), \"+proj=utm +zone=\" + i + \" +south +datum=WGS84 +units=m\");\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  'mm': {to_meter: 0.001},\n  'cm': {to_meter: 0.01},\n  'ft': {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937},\n  'fath': {to_meter: 1.8288},\n  'kmi': {to_meter: 1852},\n  'us-ch': {to_meter: 20.1168402336805},\n  'us-mi': {to_meter: 1609.34721869444},\n  'km': {to_meter: 1000},\n  'ind-ft': {to_meter: 0.30479841},\n  'ind-yd': {to_meter: 0.91439523},\n  'mi': {to_meter: 1609.344},\n  'yd': {to_meter: 0.9144},\n  'ch': {to_meter: 20.1168},\n  'link': {to_meter: 0.201168},\n  'dm': {to_meter: 0.01},\n  'in': {to_meter: 0.0254},\n  'ind-ch': {to_meter: 20.11669506},\n  'us-in': {to_meter: 0.025400050800101},\n  'us-yd': {to_meter: 0.914401828803658}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: \"0,0,0\",\n    ellipse: \"WGS84\",\n    datumName: \"WGS84\"\n  },\n  ch1903: {\n    towgs84: \"674.374,15.056,405.346\",\n    ellipse: \"bessel\",\n    datumName: \"swiss\"\n  },\n  ggrs87: {\n    towgs84: \"-199.87,74.79,246.62\",\n    ellipse: \"GRS80\",\n    datumName: \"Greek_Geodetic_Reference_System_1987\"\n  },\n  nad83: {\n    towgs84: \"0,0,0\",\n    ellipse: \"GRS80\",\n    datumName: \"North_American_Datum_1983\"\n  },\n  nad27: {\n    nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n    ellipse: \"clrk66\",\n    datumName: \"North_American_Datum_1927\"\n  },\n  potsdam: {\n    towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n    ellipse: \"bessel\",\n    datumName: \"Potsdam Rauenberg 1950 DHDN\"\n  },\n  carthage: {\n    towgs84: \"-263.0,6.0,431.0\",\n    ellipse: \"clark80\",\n    datumName: \"Carthage 1934 Tunisia\"\n  },\n  hermannskogel: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Hermannskogel\"\n  },\n  mgi: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Militar-Geographische Institut\",\n  },\n  osni52: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"airy\",\n    datumName: \"Irish National\"\n  },\n  ire65: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"mod_airy\",\n    datumName: \"Ireland 1965\"\n  },\n  rassadiran: {\n    towgs84: \"-133.63,-157.5,-158.62\",\n    ellipse: \"intl\",\n    datumName: \"Rassadiran\"\n  },\n  nzgd49: {\n    towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n    ellipse: \"intl\",\n    datumName: \"New Zealand Geodetic Datum 1949\"\n  },\n  osgb36: {\n    towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n    ellipse: \"airy\",\n    datumName: \"Ordnance Survey of Great Britain 1936\"\n  },\n  s_jtsk: {\n    towgs84: \"589,76,480\",\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n    ellipse: \"intl\",\n    datumName: \"Reseau National Belge 1972\"\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"names":["defs","i","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","to_meter","ignoredChar","match","obj","key","testkey","processedKey","keys","Object","lkey","toLowerCase","replace","length","defData","paramName","paramVal","paramOutname","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","name","that","this","arguments","def","charAt","Array","isArray","apply","EPSG","ESRI","IAU2000","console","log","global","testObj","code","testDef","codeWords","testWKT","some","word","codes","checkMercator","item","auth","checkProjStr","ext","testProj","parse","out","maybeProjStr","destination","source","value","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","init","es","e","sphere","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","forEach","n","get","start","ellipseName","eccentricity","a2","b2","ep2","ellps","ellipse","datums","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","datum_type","grids","loadedNadgrids","nadgrid","data","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","getNadgrids","parseNadgridString","optional","slice","mandatory","grid","isNull","secondsToRadians","seconds","nFields","getInt32","warn","nSubgridFields","nSubgrids","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","ll","del","lim","count","gridNodeCount","cvs","mapNodes","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","projName","datumDef","Datum","sphere_","ecc","datumObj","extend","compareDatums","dest","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","genau2","maxiter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","type","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","input","output","Number","NaN","attemptedGrids","outer","j","jj","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","tol","inx","indx","floor","frct","f00","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","isFinite","TypeError","checkNotWGS","transform","enforceAxis","toPoint","hasZ","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","checkProj","oProj","proj4","fromProj","toProj","coord","single","Point","fromMGRS","mgrsStr","prototype","toMGRS","accuracy","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","d","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","hr","hr1","hr2","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hi1","hi","Error","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","C","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","A","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","I","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","PROJECTION","cosph0","D","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","T","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e1","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_re1","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_re1","z_n_im1","delta_x","delta_y","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","M","N1","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","mu","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","slon","COEFS_X","COEFS_Y","FXC","FYC","C1","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","fy","fpy","EPS","NITER","EPS10","am1","e_inv","e_fwd","cphi1","s_inv","s_fwd","Proj","utm","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","eqearth","bonne","defaultDatum","mgrs","version"],"sourceRoot":""}
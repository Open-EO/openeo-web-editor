{"version":3,"file":"js/3291.ed299200.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/ol/style/Stroke.js","webpack://@openeo/web-editor/./node_modules/ol/util.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid.js","webpack://@openeo/web-editor/./node_modules/ol/transform.js","webpack://@openeo/web-editor/./node_modules/ol/source/XYZ.js","webpack://@openeo/web-editor/./node_modules/ol/style/Image.js","webpack://@openeo/web-editor/./node_modules/ol/style/Fill.js","webpack://@openeo/web-editor/./node_modules/ol/structs/LRUCache.js","webpack://@openeo/web-editor/./node_modules/ol/source/Source.js","webpack://@openeo/web-editor/./node_modules/ol/source/TileEventType.js","webpack://@openeo/web-editor/./node_modules/ol/source/UrlTile.js","webpack://@openeo/web-editor/./node_modules/ol/source/TileImage.js","webpack://@openeo/web-editor/./node_modules/ol/style/Circle.js","webpack://@openeo/web-editor/./node_modules/ol/style/Style.js","webpack://@openeo/web-editor/./node_modules/ol/tilecoord.js","webpack://@openeo/web-editor/./node_modules/ol/tileurlfunction.js","webpack://@openeo/web-editor/./node_modules/ol/style/Icon.js","webpack://@openeo/web-editor/./node_modules/ol/style/flat.js","webpack://@openeo/web-editor/./node_modules/ol/source/Vector.js","webpack://@openeo/web-editor/./node_modules/ol/structs/PriorityQueue.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/TileGrid.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/common.js","webpack://@openeo/web-editor/./node_modules/ol/source/Tile.js","webpack://@openeo/web-editor/./node_modules/ol/style/Text.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconImageCache.js","webpack://@openeo/web-editor/./node_modules/ol/style/RegularShape.js","webpack://@openeo/web-editor/./node_modules/ol/source/VectorEventType.js","webpack://@openeo/web-editor/./node_modules/ol/structs/RBush.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconImage.js"],"sourcesContent":["/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.4';\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n * @property {StringExpression} [fill-pattern-src] Fill pattern image URL.\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset] Fill pattern image offset in pixels.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n"],"names":["Stroke","constructor","options","this","color_","undefined","color","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","width","clone","getColor","Array","isArray","slice","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","getWidth","setColor","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","getForProjection","projection","tileGrid","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","tileCoord","z","center","getTileCoordCenter","projectionExtent","extentFromProjection","worldWidth","worldsAway","Math","ceil","getTileCoordForCoordAndZ","createForExtent","extent","maxZoom","tileSize","corner","resolutions","resolutionsFromExtent","origin","createXYZ","xyzOptions","get","getExtent","gridOptions","minZoom","maxResolution","height","max","length","pow","half","METERS_PER_UNIT","degrees","getMetersPerUnit","tmp_","create","reset","transform","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","a","b","c","d","e","f","setFromArray","apply","coordinate","x","y","rotate","angle","cos","sin","scale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","target","source","det","determinant","mat","matrixPrecision","toString","transformString","map","value","i","round","join","XYZ","super","attributions","cacheSize","crossOrigin","interpolate","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","transition","attributionsCollapsible","zDirection","gutter_","gutter","getGutter","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","listener","load","unlistenImageChange","ready","Promise","resolve","Fill","patternImage_","patternImage","src","offset","size","then","IDLE","LOADING","loading","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","pop","clear","containsKey","key","hasOwnProperty","forEach","entry","value_","key_","newer","older","remove","getKeys","keys","getValues","values","peekLast","peekLastKey","peekFirstKey","peek","replace","setSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","state_","state","wrapX_","interpolate_","viewResolver","viewRejector","self","viewPromise_","reject","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getState","getWrapX","getInterpolate","refresh","changed","setAttributions","setState","attributionLike","frameState","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile","generateTileUrlFunction_","prototype","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","Object","getPrototypeOf","bind","getUrls","handleTileChange","event","tile","uid","tileState","type","TileState","TileEventType","ERROR","LOADED","dispatchEvent","setTileLoadFunction","tileCache","setTileUrlFunction","pruneExceptNewestZ","setKey","useTile","tileCoordKey","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTiles","usedTileCache","getTileCacheForProjection","id","getGutterForProjection","equivalent","getKey","getOpaque","getTileGridForProjection","thisProj","projKey","TileCache","createTile_","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","EMPTY","tileOptions","addEventListener","EventType","CHANGE","getTile","sourceProjection","getTileInternal","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","getTilePixelRatio","interimTile","refreshInterimChain","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","imageTile","CircleStyle","radius","points","Infinity","fill","stroke","style","getFill","getStroke","getRadius","setRadius","radius_","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","fill_","image_","image","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","stroke_","text_","text","zIndex_","zIndex","getGeometry","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","resolution","createEditingStyle","white","blue","concat","createOrUpdate","getKeyZXY","fromKey","split","Number","hash","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getFullTileRange","containsXY","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getHeight","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","index","expandUrl","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","fromCharCode","stop","parseInt","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imageState","cacheKey","complete","iconImage_","offset_","offsetOrigin_","offsetOrigin","origin_","size_","HTMLImageElement","initialOptions_","onload","imageSize","getSrc","setAnchor","iconImageSize","removeEventListener","VectorSourceEvent","features","VectorSource","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","insert","ADDFEATURE","handleFeatureChange_","PROPERTYCHANGE","valid","getId","indexedFeature","addFeatures","extents","newFeatures","geometryFeatures","hasListener","modifyingCollection","evt","REMOVEFEATURE","ADD","element","REMOVE","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","callback","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","result","getFeaturesCollection","getFeatures","getAll","getFeaturesAtCoordinate","getFeaturesInExtent","multiWorld","canWrapX","getInExtent","anExtent","getClosestFeatureToCoordinate","filter","closestFeature","closestPoint","NaN","minSquaredDistance","previousMinSquaredDistance","closestPointXY","minDistance","sqrt","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","isEmpty","getLength","loadFeatures","loadedExtentsRtree","extentsToLoad","ii","extentToLoad","alreadyLoaded","object","FEATURESLOADSTART","call","FEATURESLOADEND","FEATURESLOADERROR","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","idString","splice","indexOf","removed","includes","setLoader","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","resolutions_","origins","zoomFactor_","origins_","tileSizes_","tileSizes","tileSize_","extent_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","min","restrictedTileRange","getTileRangeForExtentAndZ","minX","maxX","minY","maxY","calculateTileRanges_","forEachTileCoord","zoom","j","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordExtent","floor","getResolution","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileCoordForXYAndZ_","getTileSize","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","TileSource","opaque_","tilePixelRatio_","tmpSize","forEachLoadedTile","loaded","covered","getTileGrid","getTilePixelSize","isGlobal","updateCacheSize","tileCount","TileSourceEvent","DEFAULT_FILL_COLOR","Text","font_","font","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","expire","iconImage","getCacheKey","getPattern","pattern","createPattern","maxCacheSize","colorString","shared","RegularShape","canvases_","hitDetectionCanvas_","points_","radius2_","radius2","angle_","renderOptions_","imageState_","getPoints","getRadius2","getAngle","createHitDetectionCanvas_","renderOptions","context","draw_","canvas","calculateLineJoinSize_","strokeWidth","r1","r2","tmp","alpha","miterRatio","k","l","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","add","maxRadius","createPath_","fillStyle","lineWidth","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","RBush","maxEntries","rbush_","items_","item","items","bbox","all","search","forEach_","data","toJSON","rbush","taintedTestContext","IconImage","hitDetectionImage_","canvas_","src_","tainted_","ready_","initializeImage_","Image","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","catch","document","createElement","ctx","getContext","globalCompositeOperation","onChange"],"sourceRoot":""}
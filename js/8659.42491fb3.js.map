{"version":3,"file":"js/8659.42491fb3.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/ol-ext/control/TextButton.js","webpack://@openeo/web-editor/./node_modules/ol-ext/control/Toggle.js","webpack://@openeo/web-editor/./node_modules/ol-ext/geom/GeomUtils.js","webpack://@openeo/web-editor/./node_modules/ol-ext/geom/LineStringSplitAt.js","webpack://@openeo/web-editor/./node_modules/ol-ext/interaction/Delete.js","webpack://@openeo/web-editor/./node_modules/ol-ext/interaction/DrawHole.js","webpack://@openeo/web-editor/./node_modules/ol-ext/interaction/DrawRegular.js","webpack://@openeo/web-editor/./node_modules/ol-ext/interaction/ModifyFeature.js","webpack://@openeo/web-editor/./node_modules/ol-ext/interaction/Offset.js","webpack://@openeo/web-editor/./node_modules/ol-ext/interaction/Split.js","webpack://@openeo/web-editor/./node_modules/ol-ext/interaction/Transform.js","webpack://@openeo/web-editor/./node_modules/ol-ext/source/Vector.js","webpack://@openeo/web-editor/./node_modules/ol-ext/interaction/UndoRedo.js","webpack://@openeo/web-editor/./node_modules/ol-ext/style/defaultStyle.js","webpack://@openeo/web-editor/./node_modules/ol/geom/Circle.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/Draw.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/Extent.js","webpack://@openeo/web-editor/./node_modules/ol/interaction/Snap.js"],"sourcesContent":["/*\tCopyright (c) 2016 Jean-Marc VIGLINO,\r\n\treleased under the CeCILL-B license (French BSD license)\r\n\t(http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_control_Button from \"./Button\";\r\n\r\n/** A simple push button control drawn as text\r\n * @constructor\r\n * @extends {ol_control_Button}\r\n * @param {Object=} options Control options.\r\n *\t@param {String} options.className class of the control\r\n *\t@param {String} options.title title of the control\r\n *\t@param {String} options.html html to insert in the control\r\n *\t@param {function} options.handleClick callback when control is clicked (or use change:active event)\r\n */\r\n\r\nvar ol_control_TextButton = function(options)\r\n{\toptions = options || {};\r\n    options.className = (options.className||\"\") + \" ol-text-button\";\r\n    ol_control_Button.call(this, options);\r\n};\r\nol_ext_inherits(ol_control_TextButton, ol_control_Button);\r\n\r\nexport default ol_control_TextButton\r\n","/*\tCopyright (c) 2016 Jean-Marc VIGLINO,\r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_control_Button from './Button'\r\n\r\n/** A simple toggle control\r\n * The control can be created with an interaction to control its activation.\r\n *\r\n * @constructor\r\n * @extends {ol_control_Button}\r\n * @fires change:active, change:disable\r\n * @param {Object=} options Control options.\r\n *  @param {String} options.className class of the control\r\n *  @param {String} options.title title of the control\r\n *  @param {String} options.html html to insert in the control\r\n *  @param {ol.interaction} options.interaction interaction associated with the control\r\n *  @param {bool} options.active the control is created active, default false\r\n *  @param {bool} options.disable the control is created disabled, default false\r\n *  @param {ol.control.Bar} options.bar a subbar associated with the control (drawn when active if control is nested in a ol.control.Bar)\r\n *  @param {bool} options.autoActive the control will activate when shown in an ol.control.Bar, default false\r\n *  @param {function} options.onToggle callback when control is clicked (or use change:active event)\r\n */\r\nvar ol_control_Toggle = function(options) {\r\n  options = options || {};\r\n  var self = this;\r\n\r\n  this.interaction_ = options.interaction;\r\n  if (this.interaction_) {\r\n    this.interaction_.setActive(options.active);\r\n    this.interaction_.on(\"change:active\", function() {\r\n      self.setActive(self.interaction_.getActive());\r\n    });\r\n  }\r\n\r\n  if (options.toggleFn) options.onToggle = options.toggleFn; // compat old version\r\n  options.handleClick = function() {\r\n    self.toggle();\r\n    if (options.onToggle) options.onToggle.call(self, self.getActive());\r\n  };\r\n  options.className = (options.className||\"\") + \" ol-toggle\";\r\n  ol_control_Button.call(this, options);\r\n\r\n  this.set(\"title\", options.title);\r\n\r\n  this.set (\"autoActivate\", options.autoActivate);\r\n  if (options.bar) this.setSubBar(options.bar);\r\n\r\n  this.setActive (options.active);\r\n  this.setDisable (options.disable);\r\n};\r\nol_ext_inherits(ol_control_Toggle, ol_control_Button);\r\n\r\n/**\r\n * Set the map instance the control is associated with\r\n * and add interaction attached to it to this map.\r\n * @param {_ol_Map_} map The map instance.\r\n */\r\nol_control_Toggle.prototype.setMap = function(map) {\r\n  if (!map && this.getMap()) {\r\n    if (this.interaction_) {\r\n      this.getMap().removeInteraction (this.interaction_);\r\n    }\r\n    if (this.subbar_) this.getMap().removeControl (this.subbar_);\r\n  }\r\n\r\n  ol_control_Button.prototype.setMap.call(this, map);\r\n\r\n  if (map) {\r\n    if (this.interaction_) map.addInteraction (this.interaction_);\r\n    if (this.subbar_) map.addControl (this.subbar_);\r\n  }\r\n};\r\n\r\n/** Get the subbar associated with a control\r\n * @return {ol_control_Bar}\r\n */\r\nol_control_Toggle.prototype.getSubBar = function () {\r\n  return this.subbar_;\r\n};\r\n\r\n/** Set the subbar associated with a control\r\n * @param {ol_control_Bar} [bar] a subbar if none remove the current subbar\r\n */\r\nol_control_Toggle.prototype.setSubBar = function (bar) {\r\n  var map = this.getMap();\r\n  if (map && this.subbar_) map.removeControl (this.subbar_);\r\n  this.subbar_ = bar;\r\n  if (bar) {\r\n    this.subbar_.setTarget(this.element);\r\n    this.subbar_.element.classList.add(\"ol-option-bar\");\r\n    if (map) map.addControl (this.subbar_);\r\n  }\r\n};\r\n\r\n/**\r\n * Test if the control is disabled.\r\n * @return {bool}.\r\n * @api stable\r\n */\r\nol_control_Toggle.prototype.getDisable = function() {\r\n  var button = this.element.querySelector(\"button\");\r\n  return button && button.disabled;\r\n};\r\n\r\n/** Disable the control. If disable, the control will be deactivated too.\r\n* @param {bool} b disable (or enable) the control, default false (enable)\r\n*/\r\nol_control_Toggle.prototype.setDisable = function(b) {\r\n  if (this.getDisable()==b) return;\r\n  this.element.querySelector(\"button\").disabled = b;\r\n  if (b && this.getActive()) this.setActive(false);\r\n\r\n  this.dispatchEvent({ type:'change:disable', key:'disable', oldValue:!b, disable:b });\r\n};\r\n\r\n/**\r\n * Test if the control is active.\r\n * @return {bool}.\r\n * @api stable\r\n */\r\nol_control_Toggle.prototype.getActive = function() {\r\n  return this.element.classList.contains(\"ol-active\");\r\n};\r\n\r\n/** Toggle control state active/deactive\r\n */\r\nol_control_Toggle.prototype.toggle = function() {\r\n  if (this.getActive()) this.setActive(false);\r\n  else this.setActive(true);\r\n};\r\n\r\n/** Change control state\r\n * @param {bool} b activate or deactivate the control, default false\r\n */\r\nol_control_Toggle.prototype.setActive = function(b) {\r\n  if (this.interaction_) this.interaction_.setActive (b);\r\n  if (this.subbar_) this.subbar_.setActive(b);\r\n  if (this.getActive()===b) return;\r\n  if (b) this.element.classList.add(\"ol-active\");\r\n  else this.element.classList.remove(\"ol-active\");\r\n\r\n  this.dispatchEvent({ type:'change:active', key:'active', oldValue:!b, active:b });\r\n};\r\n\r\n/** Set the control interaction\r\n* @param {_ol_interaction_} i interaction to associate with the control\r\n*/\r\nol_control_Toggle.prototype.setInteraction = function(i) {\r\n  this.interaction_ = i;\r\n};\r\n\r\n/** Get the control interaction\r\n* @return {_ol_interaction_} interaction associated with the control\r\n*/\r\nol_control_Toggle.prototype.getInteraction = function() {\r\n  return this.interaction_;\r\n};\r\n\r\nexport default ol_control_Toggle\r\n","/*\tCopyright (c) 2016 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n\r\n  Usefull function to handle geometric operations\r\n*/\r\n\r\nimport ol_geom_LineString from 'ol/geom/LineString'\r\nimport ol_geom_LinearRing from 'ol/geom/LinearRing'\r\nimport ol_geom_MultiLineString from 'ol/geom/MultiLineString'\r\nimport ol_geom_MultiPoint from 'ol/geom/MultiPoint'\r\nimport ol_geom_MultiPolygon from 'ol/geom/MultiPolygon'\r\nimport ol_geom_Point from 'ol/geom/Point'\r\nimport ol_geom_Polygon from 'ol/geom/Polygon'\r\nimport ol_geom_Circle from 'ol/geom/Circle'\r\nimport {getCenter as ol_extent_getCenter} from 'ol/extent'\r\nimport {buffer as ol_extent_buffer} from 'ol/extent'\r\n\r\n/** Distance beetween 2 points\r\n *\tUsefull geometric functions\r\n * @param {ol.Coordinate} p1 first point\r\n * @param {ol.Coordinate} p2 second point\r\n * @return {number} distance\r\n */\r\nvar ol_coordinate_dist2d = function(p1, p2) {\r\n  var dx = p1[0]-p2[0];\r\n  var dy = p1[1]-p2[1];\r\n  return Math.sqrt(dx*dx+dy*dy);\r\n}\r\n\r\n/** 2 points are equal\r\n *\tUsefull geometric functions\r\n * @param {ol.Coordinate} p1 first point\r\n * @param {ol.Coordinate} p2 second point\r\n * @return {boolean}\r\n */\r\nvar ol_coordinate_equal = function(p1, p2) {\r\n  return (p1[0]==p2[0] && p1[1]==p2[1]);\r\n}\r\n\r\n/** Get center coordinate of a feature\r\n * @param {ol.Feature} f\r\n * @return {ol.coordinate} the center\r\n */\r\nvar ol_coordinate_getFeatureCenter = function(f) {\r\n  return ol_coordinate_getGeomCenter (f.getGeometry());\r\n};\r\n\r\n/** Get center coordinate of a geometry\r\n* @param {ol.geom.Geometry} geom\r\n* @return {ol.Coordinate} the center\r\n*/\r\nvar ol_coordinate_getGeomCenter = function(geom) {\r\n  switch (geom.getType()) {\r\n    case 'Point': \r\n      return geom.getCoordinates();\r\n    case \"MultiPolygon\":\r\n      geom = geom.getPolygon(0);\r\n      // fallthrough\r\n    case \"Polygon\":\r\n      return geom.getInteriorPoint().getCoordinates();\r\n    default:\r\n      return geom.getClosestPoint(ol_extent_getCenter(geom.getExtent()));\r\n  }\r\n};\r\n\r\n/** Offset a polyline\r\n * @param {Array<ol.Coordinate>} coords\r\n * @param {number} offset\r\n * @return {Array<ol.Coordinate>} resulting coord\r\n * @see http://stackoverflow.com/a/11970006/796832\r\n * @see https://drive.google.com/viewerng/viewer?a=v&pid=sites&srcid=ZGVmYXVsdGRvbWFpbnxqa2dhZGdldHN0b3JlfGd4OjQ4MzI5M2Y0MjNmNzI2MjY\r\n */\r\nvar ol_coordinate_offsetCoords = function (coords, offset) {\r\n  var path = [];\r\n  var N = coords.length-1;\r\n  var max = N;\r\n  var mi, mi1, li, li1, ri, ri1, si, si1, Xi1, Yi1;\r\n  var p0, p1, p2;\r\n  var isClosed = ol_coordinate_equal(coords[0],coords[N]);\r\n  if (!isClosed) {\r\n    p0 = coords[0];\r\n    p1 = coords[1];\r\n    p2 = [\r\n      p0[0] + (p1[1] - p0[1]) / ol_coordinate_dist2d(p0,p1) *offset,\r\n      p0[1] - (p1[0] - p0[0]) / ol_coordinate_dist2d(p0,p1) *offset\r\n    ];\r\n    path.push(p2);\r\n    coords.push(coords[N])\r\n    N++;\r\n    max--;\r\n  }\r\n  for (var i = 0; i < max; i++) {\r\n    p0 = coords[i];\r\n    p1 = coords[(i+1) % N];\r\n    p2 = coords[(i+2) % N];\r\n\r\n    mi = (p1[1] - p0[1])/(p1[0] - p0[0]);\r\n    mi1 = (p2[1] - p1[1])/(p2[0] - p1[0]);\r\n    // Prevent alignements\r\n    if (Math.abs(mi-mi1) > 1e-10) {\r\n      li = Math.sqrt((p1[0] - p0[0])*(p1[0] - p0[0])+(p1[1] - p0[1])*(p1[1] - p0[1]));\r\n      li1 = Math.sqrt((p2[0] - p1[0])*(p2[0] - p1[0])+(p2[1] - p1[1])*(p2[1] - p1[1]));\r\n      ri = p0[0] + offset*(p1[1] - p0[1])/li;\r\n      ri1 = p1[0] + offset*(p2[1] - p1[1])/li1;\r\n      si = p0[1] - offset*(p1[0] - p0[0])/li;\r\n      si1 = p1[1] - offset*(p2[0] - p1[0])/li1;\r\n      Xi1 = (mi1*ri1-mi*ri+si-si1) / (mi1-mi);\r\n      Yi1 = (mi*mi1*(ri1-ri)+mi1*si-mi*si1) / (mi1-mi);\r\n\r\n      // Correction for vertical lines\r\n      if(p1[0] - p0[0] == 0) {\r\n        Xi1 = p1[0] + offset*(p1[1] - p0[1])/Math.abs(p1[1] - p0[1]);\r\n        Yi1 = mi1*Xi1 - mi1*ri1 + si1;\r\n      }\r\n      if (p2[0] - p1[0] == 0 ) {\r\n        Xi1 = p2[0] + offset*(p2[1] - p1[1])/Math.abs(p2[1] - p1[1]);\r\n        Yi1 = mi*Xi1 - mi*ri + si;\r\n      }\r\n\r\n      path.push([Xi1, Yi1]);\r\n    }\r\n  }\r\n  if (isClosed) {\r\n    path.push(path[0]);\r\n  } else {\r\n    coords.pop();\r\n    p0 = coords[coords.length-1];\r\n    p1 = coords[coords.length-2];\r\n    p2 = [\r\n      p0[0] - (p1[1] - p0[1]) / ol_coordinate_dist2d(p0,p1) *offset,\r\n      p0[1] + (p1[0] - p0[0]) / ol_coordinate_dist2d(p0,p1) *offset\r\n    ];\r\n    path.push(p2);\r\n  }\r\n  return path;\r\n}\r\n\r\n/** Find the segment a point belongs to\r\n * @param {ol.Coordinate} pt\r\n * @param {Array<ol.Coordinate>} coords\r\n * @return {} the index (-1 if not found) and the segment\r\n */\r\nvar ol_coordinate_findSegment = function (pt, coords) {\r\n  for (var i=0; i<coords.length-1; i++) {\r\n    var p0 = coords[i];\r\n    var p1 = coords[i+1];\r\n    if (ol_coordinate_equal(pt, p0) || ol_coordinate_equal(pt, p1)) {\r\n      return { index:1, segment: [p0,p1] };\r\n    } else {\r\n      var d0 = ol_coordinate_dist2d(p0,p1);\r\n      var v0 = [ (p1[0] - p0[0]) / d0, (p1[1] - p0[1]) / d0 ];\r\n      var d1 = ol_coordinate_dist2d(p0,pt);\r\n      var v1 = [ (pt[0] - p0[0]) / d1, (pt[1] - p0[1]) / d1 ];\r\n      if (Math.abs(v0[0]*v1[1] - v0[1]*v1[0]) < 1e-10) {\r\n        return { index:1, segment: [p0,p1] };\r\n      }\r\n    }\r\n  }\r\n  return { index: -1 };\r\n};\r\n\r\n/**\r\n * Split a Polygon geom with horizontal lines\r\n * @param {Array<ol.Coordinate>} geom\r\n * @param {number} y the y to split\r\n * @param {number} n contour index\r\n * @return {Array<Array<ol.Coordinate>>}\r\n */\r\nvar ol_coordinate_splitH = function (geom, y, n) {\r\n  var x, abs;\r\n  var list = [];\r\n  for (var i=0; i<geom.length-1; i++) {\r\n    // Hole separator?\r\n    if (!geom[i].length || !geom[i+1].length) continue;\r\n    // Intersect\r\n    if (geom[i][1]<=y && geom[i+1][1]>y || geom[i][1]>=y && geom[i+1][1]<y) {\r\n      abs = (y-geom[i][1]) / (geom[i+1][1]-geom[i][1]);\r\n      x = abs * (geom[i+1][0]-geom[i][0]) + geom[i][0];\r\n      list.push ({ contour: n, index: i, pt: [x,y], abs: abs });\r\n    }\r\n  }\r\n  // Sort x\r\n  list.sort(function(a,b) { return a.pt[0] - b.pt[0] });\r\n  // Horizontal segment\r\n  var result = [];\r\n  for (var j=0; j<list.length-1; j += 2) {\r\n    result.push([list[j], list[j+1]])\r\n  }\r\n  return result;\r\n};\r\n\r\n/** Create a geometry given a type and coordinates */\r\nvar ol_geom_createFromType = function (type, coordinates) {\r\n  switch (type) {\r\n    case 'LineString': return new ol_geom_LineString(coordinates);\r\n    case 'LinearRing': return new ol_geom_LinearRing(coordinates);\r\n    case 'MultiLineString': return new ol_geom_MultiLineString(coordinates);\r\n    case 'MultiPoint': return new ol_geom_MultiPoint(coordinates);\r\n    case 'MultiPolygon': return new ol_geom_MultiPolygon(coordinates);\r\n    case 'Point': return new ol_geom_Point(coordinates);\r\n    case 'Polygon': return new ol_geom_Polygon(coordinates);\r\n    default:\r\n      console.error('[createFromType] Unsupported type: '+type);\r\n      return null;\r\n  }\r\n};\r\n\r\nexport {ol_geom_createFromType}\r\nexport {ol_coordinate_dist2d, ol_coordinate_equal, ol_coordinate_findSegment, ol_coordinate_getFeatureCenter, ol_coordinate_getGeomCenter, ol_coordinate_offsetCoords, ol_coordinate_splitH}\r\n\r\n/** Intersect 2 lines\r\n * @param {Arrar<ol.coordinate>} d1\r\n * @param {Arrar<ol.coordinate>} d2\r\n */\r\nvar ol_coordinate_getIntersectionPoint = function (d1, d2) {\r\n  var d1x = d1[1][0] - d1[0][0];\r\n  var d1y = d1[1][1] - d1[0][1];\r\n  var d2x = d2[1][0] - d2[0][0];\r\n  var d2y = d2[1][1] - d2[0][1];\r\n  var det = d1x * d2y - d1y * d2x;\r\n  if (det != 0) {\r\n    var k = (d1x * d1[0][1] - d1x * d2[0][1] - d1y * d1[0][0] + d1y * d2[0][0]) / det;\r\n    return [d2[0][0] + k*d2x, d2[0][1] + k*d2y];\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport { ol_coordinate_getIntersectionPoint }\r\n\r\nvar ol_extent_intersection;\r\n\r\n(function() {\r\n// Split at x\r\nfunction splitX(pts, x) {\r\n  var pt;\r\n  for (let i=pts.length-1; i>0; i--) {\r\n    if ((pts[i][0]>x && pts[i-1][0]<x) || (pts[i][0]<x && pts[i-1][0]>x)) {\r\n      pt = [ x, (x - pts[i][0]) / (pts[i-1][0]-pts[i][0]) * (pts[i-1][1]-pts[i][1]) + pts[i][1]];\r\n      pts.splice(i, 0, pt);\r\n    }\r\n  }\r\n}\r\n// Split at y\r\nfunction splitY(pts, y) {\r\n  var pt;\r\n  for (let i=pts.length-1; i>0; i--) {\r\n    if ((pts[i][1]>y && pts[i-1][1]<y) || (pts[i][1]<y && pts[i-1][1]>y)) {\r\n      pt = [ (y - pts[i][1]) / (pts[i-1][1]-pts[i][1]) * (pts[i-1][0]-pts[i][0]) + pts[i][0], y];\r\n      pts.splice(i, 0, pt);\r\n    }\r\n  }\r\n}\r\n\r\n/** Fast polygon intersection with an extent (used for area calculation)\r\n * @param {ol_extent_Extent} extent\r\n * @param {ol_geom_Polygon|ol_geom_MultiPolygon} polygon\r\n * @returns {ol_geom_Polygon|ol_geom_MultiPolygon|null} return null if not a polygon geometry\r\n */\r\nol_extent_intersection = function(extent, polygon) {\r\n  var poly = (polygon.getType() === 'Polygon');\r\n  if (!poly && polygon.getType() !== 'MultiPolygon') return null;\r\n  var geom = polygon.getCoordinates();\r\n  if (poly) geom = [geom];\r\n  geom.forEach(function(g) {\r\n    g.forEach(function(c) {\r\n      splitX(c, extent[0]);\r\n      splitX(c, extent[2]);\r\n      splitY(c, extent[1]);\r\n      splitY(c, extent[3]);\r\n    });\r\n  })\r\n  // Snap geom to the extent \r\n  geom.forEach(function(g) {\r\n    g.forEach(function(c) {\r\n      c.forEach(function(p) {\r\n        if (p[0]<extent[0]) p[0] = extent[0];\r\n        else if (p[0]>extent[2]) p[0] = extent[2];\r\n        if (p[1]<extent[1]) p[1] = extent[1];\r\n        else if (p[1]>extent[3]) p[1] = extent[3];\r\n      })\r\n    })\r\n  })\r\n  if (poly) {\r\n    return new ol_geom_Polygon(geom[0]);\r\n  } else {\r\n    return new ol_geom_MultiPolygon(geom);\r\n  }\r\n};\r\n})();\r\n\r\nexport {ol_extent_intersection}\r\n\r\n/** Add points along a segment\r\n * @param {ol_Coordinate} p1 \r\n * @param {ol_Coordinate} p2 \r\n * @param {number} d \r\n * @param {boolean} start include starting point, default true\r\n * @returns {Array<ol_Coordinate>}\r\n */\r\nvar ol_coordinate_sampleAt = function(p1, p2, d, start) {\r\n  var pts = [];\r\n  if (start!==false) pts.push(p1);\r\n  var dl = ol_coordinate_dist2d(p1,p2);\r\n  if (dl) {\r\n    var nb = Math.round(dl/d);\r\n    if (nb>1) {\r\n      var dx = (p2[0]-p1[0]) / nb;\r\n      var dy = (p2[1]-p1[1]) / nb;\r\n      for (var i=1; i<nb; i++) {\r\n        pts.push([p1[0] + dx*i, p1[1] + dy*i])\r\n      }\r\n    }\r\n  }\r\n  pts.push(p2);\r\n  return pts;\r\n};\r\nexport { ol_coordinate_sampleAt }\r\n\r\n/** Sample a LineString at a distance\r\n * @param {number} d\r\n * @returns {ol_geom_LineString}\r\n */\r\nol_geom_LineString.prototype.sampleAt = function(d) {\r\n  var line = this.getCoordinates();\r\n  var result = [];\r\n  for (var i=1; i<line.length; i++) {\r\n    result = result.concat(ol_coordinate_sampleAt(line[i-1], line[i], d, i===1));\r\n  }\r\n  return new ol_geom_LineString(result);\r\n};\r\n\r\n/** Sample a MultiLineString at a distance\r\n * @param {number} d\r\n * @returns {ol_geom_MultiLineString}\r\n */\r\nol_geom_MultiLineString.prototype.sampleAt = function(d) {\r\n  var lines = this.getCoordinates();\r\n  var result = [];\r\n  lines.forEach(function(p) {\r\n    var l = [];\r\n    for (var i=1; i<p.length; i++) {\r\n      l = l.concat(ol_coordinate_sampleAt(p[i-1], p[i], d, i===1));\r\n    }\r\n    result.push(l);\r\n  })\r\n  return new ol_geom_MultiLineString(result);\r\n};\r\n\r\n/** Sample a Polygon at a distance\r\n * @param {number} d\r\n * @returns {ol_geom_Polygon}\r\n */\r\nol_geom_Polygon.prototype.sampleAt = function(res) {\r\n  var poly = this.getCoordinates();\r\n  var result = [];\r\n  poly.forEach(function(p) {\r\n    var l = [];\r\n    for (var i=1; i<p.length; i++) {\r\n      l = l.concat(ol_coordinate_sampleAt(p[i-1], p[i], res, i===1));\r\n    }\r\n    result.push(l);\r\n  })\r\n  return new ol_geom_Polygon(result);\r\n};\r\n\r\n/** Sample a MultiPolygon at a distance\r\n * @param {number} res\r\n * @returns {ol_geom_MultiPolygon}\r\n */\r\nol_geom_MultiPolygon.prototype.sampleAt = function(res) {\r\n  var mpoly = this.getCoordinates();\r\n  var result = [];\r\n  mpoly.forEach(function(poly) {\r\n    var a = [];\r\n    result.push(a);\r\n    poly.forEach(function(p) {\r\n      var l = [];\r\n      for (var i=1; i<p.length; i++) {\r\n        l = l.concat(ol_coordinate_sampleAt(p[i-1], p[i], res, i===1));\r\n      }\r\n      a.push(l);\r\n    })\r\n  });\r\n  return new ol_geom_MultiPolygon(result);\r\n};\r\n\r\n/** Intersect a geometry using a circle\r\n * @param {ol_geom_Geometry} geom\r\n * @param {number} resolution circle resolution to sample the polygon on the circle, default 1\r\n * @returns {ol_geom_Geometry}\r\n */\r\nol_geom_Circle.prototype.intersection = function(geom, resolution) {\r\n  if (geom.sampleAt) {\r\n    var ext = ol_extent_buffer(this.getCenter().concat(this.getCenter()), this.getRadius());\r\n    geom = ol_extent_intersection(ext, geom);\r\n    geom = geom.simplify(resolution);\r\n    var c = this.getCenter();\r\n    var r = this.getRadius();\r\n    //var res = (resolution||1) * r / 100;\r\n    var g = geom.sampleAt(resolution).getCoordinates();\r\n    switch (geom.getType()) {\r\n      case 'Polygon': g = [g];\r\n        // fallthrough\r\n      case 'MultiPolygon': {\r\n        var hasout = false;\r\n        // var hasin = false;\r\n        var result = [];\r\n        g.forEach(function(poly) {\r\n          var a = [];\r\n          result.push(a);\r\n          poly.forEach(function(ring) {\r\n            var l = [];\r\n            a.push(l);\r\n            ring.forEach(function(p) {\r\n              var d = ol_coordinate_dist2d(c, p);\r\n              if (d > r) {\r\n                hasout = true;\r\n                l.push([\r\n                  c[0] + r / d * (p[0]-c[0]),\r\n                  c[1] + r / d * (p[1]-c[1])\r\n                ]);\r\n              } else {\r\n                // hasin = true;\r\n                l.push(p);\r\n              }\r\n            });\r\n          })\r\n        });\r\n        if (!hasout) return geom;\r\n        if (geom.getType() === 'Polygon') {\r\n          return new ol_geom_Polygon(result[0]);\r\n        } else {\r\n          return new ol_geom_MultiPolygon(result);\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    console.warn('[ol/geom/Circle~intersection] Unsupported geometry type: '+geom.getType());\r\n  }\r\n  return geom;\r\n};\r\n","import {ol_coordinate_equal} from \"./GeomUtils\";\r\nimport ol_geom_LineString from \"ol/geom/LineString\";\r\n\r\n/** Split a lineString by a point or a list of points\r\n *\tNB: points must be on the line, use getClosestPoint() to get one\r\n * @param {ol.Coordinate | Array<ol.Coordinate>} pt points to split the line\r\n * @param {Number} tol distance tolerance for 2 points to be equal\r\n */\r\nol_geom_LineString.prototype.splitAt = function(pt, tol) {\r\n  var i;\r\n  if (!pt) return [this];\r\n    if (!tol) tol = 1e-10;\r\n    // Test if list of points\r\n    if (pt.length && pt[0].length) {\r\n      var result = [this];\r\n      for (i=0; i<pt.length; i++) {\r\n        var r = [];\r\n        for (var k=0; k<result.length; k++) {\r\n          var ri = result[k].splitAt(pt[i], tol);\r\n          r = r.concat(ri);\r\n        }\r\n        result = r;\r\n      }\r\n      return result;\r\n    }\r\n    // Nothing to do\r\n    if (ol_coordinate_equal(pt,this.getFirstCoordinate())\r\n    || ol_coordinate_equal(pt,this.getLastCoordinate())) {\r\n      return [this];\r\n    }\r\n    // Get\r\n    var c0 = this.getCoordinates();\r\n    var ci=[c0[0]];\r\n    var c = [];\r\n    for (i=0; i<c0.length-1; i++) {\r\n      // Filter equal points\r\n      if (ol_coordinate_equal(c0[i],c0[i+1])) continue;\r\n      // Extremity found\r\n      if (ol_coordinate_equal(pt,c0[i+1])) {\r\n        ci.push(c0[i+1]);\r\n        c.push(new ol_geom_LineString(ci));\r\n        ci = [];\r\n      }\r\n      // Test alignement\r\n      else if (!ol_coordinate_equal(pt,c0[i])) {\r\n        var d1, d2, split=false;\r\n        if (c0[i][0] == c0[i+1][0]) {\r\n          d1 = (c0[i][1]-pt[1]) / (c0[i][1]-c0[i+1][1]);\r\n          split = (c0[i][0] == pt[0]) && (0 < d1 && d1 <= 1)\r\n        } else if (c0[i][1] == c0[i+1][1]) {\r\n          d1 = (c0[i][0]-pt[0]) / (c0[i][0]-c0[i+1][0]);\r\n          split = (c0[i][1] == pt[1]) && (0 < d1 && d1 <= 1)\r\n        } else {\r\n          d1 = (c0[i][0]-pt[0]) / (c0[i][0]-c0[i+1][0]);\r\n          d2 = (c0[i][1]-pt[1]) / (c0[i][1]-c0[i+1][1]);\r\n          split = (Math.abs(d1-d2) <= tol && 0 < d1 && d1 <= 1)\r\n        }\r\n        // pt is inside the segment > split\r\n        if (split) {\r\n          ci.push(pt);\r\n          c.push (new ol_geom_LineString(ci));\r\n          ci = [pt];\r\n        }\r\n      }\r\n      ci.push(c0[i+1]);\r\n    }\r\n    if (ci.length>1) c.push (new ol_geom_LineString(ci));\r\n    if (c.length) return c;\r\n    else return [this];\r\n}\r\n\r\n// import('ol-ext/geom/LineStringSplitAt')","/*\tCopyright (c) 2018 Jean-Marc VIGLINO, \r\n\treleased under the CeCILL-B license (French BSD license)\r\n\t(http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_interaction_Select from 'ol/interaction/Select'\r\nimport ol_source_Vector from 'ol/source/Vector'\r\n\r\n/** A Select interaction to delete features on click.\r\n * @constructor\r\n * @extends {ol_interaction_Interaction}\r\n * @fires deletestart\r\n * @fires deleteend\r\n * @param {*} options ol.interaction.Select options\r\n */\r\nvar ol_interaction_Delete = function(options) {\r\n  ol_interaction_Select.call(this, options);\r\n  this.on('select', function(e) {\r\n    this.getFeatures().clear();\r\n    this.delete(e.selected);\r\n  }.bind(this));\r\n};\r\nol_ext_inherits(ol_interaction_Delete, ol_interaction_Select);\r\n\r\n/** Get vector source of the map\r\n * @return {Array<ol.source.Vector>}\r\n */\r\nol_interaction_Delete.prototype._getSources = function(layers) {\r\n  if (!this.getMap()) return [];\r\n  if (!layers) layers = this.getMap().getLayers();\r\n  var sources = [];\r\n  layers.forEach(function (l) {\r\n    // LayerGroup\r\n    if (l.getLayers) {\r\n      sources = sources.concat(this._getSources(l.getLayers()));\r\n    } else {\r\n      if (l.getSource && l.getSource() instanceof ol_source_Vector) {\r\n        sources.push(l.getSource());\r\n      }\r\n    }\r\n  }.bind(this));\r\n  return sources;\r\n};\r\n\r\n/** Delete features: remove the features from the map (from all layers in the map)\r\n * @param {ol.Collection<ol.Feature>|Array<ol.Feature>} features The features to delete\r\n * @api\r\n */\r\nol_interaction_Delete.prototype.delete = function(features) {\r\n  if (features && (features.length || features.getLength())) {\r\n    this.dispatchEvent({ type: 'deletestart', features: features });\r\n    var delFeatures = [];\r\n    // Get the sources concerned\r\n    this._getSources().forEach(function (source) {\r\n      try {\r\n        // Try to delete features in the source\r\n        features.forEach(function(f) {\r\n          source.removeFeature(f);\r\n          delFeatures.push(f);\r\n        });\r\n      } catch(e) { /* ok */ }\r\n    })\r\n    this.dispatchEvent({ type: 'deleteend', features: delFeatures });\r\n  }\r\n};\r\n\r\nexport default ol_interaction_Delete","/*\tCopyright (c) 2017 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_geom_Polygon from 'ol/geom/Polygon'\r\nimport ol_geom_MultiPolygon from 'ol/geom/MultiPolygon'\r\nimport ol_geom_LinearRing from 'ol/geom/LinearRing'\r\nimport ol_interaction_Draw from 'ol/interaction/Draw'\r\nimport ol_interaction_Select from 'ol/interaction/Select'\r\n\r\n/** Interaction to draw holes in a polygon.\r\n * It fires a drawstart, drawend event when drawing the hole\r\n * and a modifystart, modifyend event before and after inserting the hole in the feature geometry.\r\n * @constructor\r\n * @extends {ol_interaction_Interaction}\r\n * @fires drawstart\r\n * @fires drawend\r\n * @fires modifystart\r\n * @fires modifyend\r\n * @param {olx.interaction.DrawHoleOptions} options extend olx.interaction.DrawOptions\r\n * \t@param {Array<ol.layer.Vector> | function | undefined} options.layers A list of layers from which polygons should be selected. Alternatively, a filter function can be provided. default: all visible layers\r\n * \t@param {Array<ol.Feature> | ol.Collection<ol.Feature> | function | undefined} options.featureFilter An array or a collection of features the interaction applies on or a function that takes a feature and a layer and returns true if the feature is a candidate\r\n * \t@param { ol.style.Style | Array<ol.style.Style> | StyleFunction | undefined }\tStyle for the selected features, default: default edit style\r\n */\r\nvar ol_interaction_DrawHole = function(options) {\r\n  if (!options) options = {};\r\n  var self = this;\r\n\r\n  // Select interaction for the current feature\r\n  this._select = new ol_interaction_Select({ style: options.style });\r\n  this._select.setActive(false);\r\n\r\n  // Geometry function that test points inside the current\r\n  var geometryFn, geomFn = options.geometryFunction;\r\n  if (geomFn) {\r\n    geometryFn = function(c,g) {\r\n      g = self._geometryFn (c, g);\r\n      return geomFn (c,g);\r\n    }\r\n  } else {\r\n    geometryFn = function(c,g) { return self._geometryFn (c, g); }\r\n  }\r\n\r\n  // Create draw interaction\r\n  options.type = \"Polygon\";\r\n  options.geometryFunction = geometryFn;\r\n  ol_interaction_Draw.call(this, options);\r\n\r\n  // Layer filter function\r\n  if (options.layers) {\r\n    if (typeof (options.layers) === 'function') {\r\n      this.layers_ = options.layers;\r\n    } else if (options.layers.indexOf) {\r\n      this.layers_ = function(l) {\r\n        return (options.layers.indexOf(l) >= 0); \r\n      };\r\n    }\r\n  }\r\n\r\n  // Features to apply on \r\n  if (typeof(options.featureFilter) === 'function') {\r\n    this._features = options.featureFilter;\r\n  } else if (options.featureFilter) {\r\n    var features = options.featureFilter;\r\n    this._features = function(f) {\r\n      if (features.indexOf) {\r\n        return !!features[features.indexOf(f)];\r\n      } else {\r\n        return !!features.item(features.getArray().indexOf(f));\r\n      }\r\n    }\r\n  } else {\r\n    this._features = function() { return true }\r\n  }\r\n\r\n  // Start drawing if inside a feature\r\n  this.on('drawstart', this._startDrawing.bind(this));\r\n  // End drawing add the hole to the current Polygon\r\n  this.on('drawend', this._finishDrawing.bind(this));\r\n};\r\nol_ext_inherits(ol_interaction_DrawHole, ol_interaction_Draw);\r\n\r\n/**\r\n * Remove the interaction from its current map, if any,  and attach it to a new\r\n * map, if any. Pass `null` to just remove the interaction from the current map.\r\n * @param {ol.Map} map Map.\r\n * @api stable\r\n */\r\nol_interaction_DrawHole.prototype.setMap = function(map) {\r\n  if (this.getMap()) this.getMap().removeInteraction(this._select);\r\n  if (map) map.addInteraction(this._select);\r\n  ol_interaction_Draw.prototype.setMap.call (this, map);\r\n};\r\n\r\n/**\r\n * Activate/deactivate the interaction\r\n * @param {boolean}\r\n * @api stable\r\n */\r\nol_interaction_DrawHole.prototype.setActive = function(b) {\r\n  this._select.getFeatures().clear();\r\n  ol_interaction_Draw.prototype.setActive.call (this, b);\r\n};\r\n\r\n/**\r\n * Remove last point of the feature currently being drawn \r\n * (test if points to remove before).\r\n */\r\nol_interaction_DrawHole.prototype.removeLastPoint = function() {\r\n  if (this._feature && this._feature.getGeometry().getCoordinates()[0].length>2) {\r\n    ol_interaction_Draw.prototype.removeLastPoint.call(this);\r\n  }\r\n};\r\n\r\n/** \r\n * Get the current polygon to hole\r\n * @return {ol.Feature}\r\n */\r\nol_interaction_DrawHole.prototype.getPolygon = function() {\r\n  return this._polygon;\r\n  // return this._select.getFeatures().item(0).getGeometry();\r\n};\r\n\r\n/**\r\n * Get current feature to add a hole and start drawing\r\n * @param {ol_interaction_Draw.Event} e\r\n * @private\r\n */\r\nol_interaction_DrawHole.prototype._startDrawing = function(e) {\r\n  var map = this.getMap();\r\n  this._feature = e.feature;\r\n  var coord = e.feature.getGeometry().getCoordinates()[0][0];\r\n  this._current = null;\r\n  // Check object under the pointer\r\n  map.forEachFeatureAtPixel(\r\n    map.getPixelFromCoordinate(coord),\r\n    function(feature, layer) {\r\n      // Not yet found?\r\n      if (!this._current && this._features(feature, layer)) {\r\n        var poly = feature.getGeometry();\r\n        if (poly.getType() === \"Polygon\"\r\n          && poly.intersectsCoordinate(coord)) {\r\n          this._polygonIndex = false;\r\n          this._polygon = poly;\r\n          this._current = feature;\r\n        } else if (poly.getType() === \"MultiPolygon\"\r\n          && poly.intersectsCoordinate(coord)) {\r\n          for (var i=0, p; p=poly.getPolygon(i); i++) {\r\n            if (p.intersectsCoordinate(coord)) {\r\n              this._polygonIndex = i;\r\n              this._polygon = p;\r\n              this._current = feature;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }.bind(this), {\r\n      layerFilter: this.layers_\r\n    }\r\n  );\r\n  this._select.getFeatures().clear();\r\n  if (!this._current) {\r\n    this.setActive(false);\r\n    this.setActive(true);\r\n  } else {\r\n    this._select.getFeatures().push(this._current);\r\n  }\r\n};\r\n\r\n/**\r\n * Stop drawing and add the sketch feature to the target feature. \r\n * @param {ol_interaction_Draw.Event} e\r\n * @private\r\n */\r\nol_interaction_DrawHole.prototype._finishDrawing = function(e) {\r\n  // The feature is the hole\r\n  e.hole = e.feature;\r\n  // Get the current feature\r\n  e.feature = this._select.getFeatures().item(0);\r\n  this.dispatchEvent({ type: 'modifystart', features: [ this._current ] });\r\n  // Create the hole\r\n  var c = e.hole.getGeometry().getCoordinates()[0];\r\n  if (c.length > 3) {\r\n    if (this._polygonIndex!==false) {\r\n      var geom = e.feature.getGeometry();\r\n      var newGeom = new ol_geom_MultiPolygon([]);\r\n      for (var i=0, pi; pi=geom.getPolygon(i); i++) {\r\n        if (i===this._polygonIndex) {\r\n          pi.appendLinearRing(new ol_geom_LinearRing(c));\r\n          newGeom.appendPolygon(pi);\r\n        } else {\r\n          newGeom.appendPolygon(pi);\r\n        }\r\n      }\r\n      e.feature.setGeometry(newGeom);\r\n    } else {\r\n      this.getPolygon().appendLinearRing(new ol_geom_LinearRing(c));\r\n    }\r\n  }\r\n  this.dispatchEvent({ type: 'modifyend', features: [ this._current ] });\r\n  // reset\r\n  this._feature = null;\r\n  this._select.getFeatures().clear();\r\n};\r\n\r\n/**\r\n * Function that is called when a geometry's coordinates are updated.\r\n * @param {Array<ol.coordinate>} coordinates\r\n * @param {ol_geom_Polygon} geometry\r\n * @return {ol_geom_Polygon}\r\n * @private\r\n */\r\nol_interaction_DrawHole.prototype._geometryFn = function(coordinates, geometry) {\r\n  var coord = coordinates[0].pop();\r\n  if (!this.getPolygon() || this.getPolygon().intersectsCoordinate(coord)) {\r\n    this.lastOKCoord = [coord[0],coord[1]];\r\n  }\r\n  coordinates[0].push([this.lastOKCoord[0],this.lastOKCoord[1]]);\r\n\r\n  if (geometry) {\r\n    geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\r\n  } else {\r\n    geometry = new ol_geom_Polygon(coordinates);\r\n  }\r\n  return geometry;\r\n};\r\n\r\nexport default ol_interaction_DrawHole\r\n","/*\tCopyright (c) 2016 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_interaction_Interaction from 'ol/interaction/Interaction'\r\nimport ol_style_Style_defaultStyle from '../style/defaultStyle'\r\nimport ol_Collection from 'ol/Collection'\r\nimport ol_layer_Vector from 'ol/layer/Vector'\r\nimport ol_source_Vector from 'ol/source/Vector'\r\nimport ol_geom_Circle from 'ol/geom/Circle'\r\nimport {fromCircle as ol_geom_Polygon_fromCircle} from 'ol/geom/Polygon'\r\nimport ol_geom_Point from 'ol/geom/Point'\r\nimport ol_geom_LineString from 'ol/geom/LineString'\r\nimport ol_geom_Polygon from 'ol/geom/Polygon'\r\nimport ol_Feature from 'ol/Feature'\r\n\r\n/** Interaction rotate\r\n * @constructor\r\n * @extends {ol_interaction_Interaction}\r\n * @fires drawstart, drawing, drawend, drawcancel\r\n * @param {olx.interaction.TransformOptions} options\r\n *  @param {Array<ol.Layer>} options.source Destination source for the drawn features\r\n *  @param {ol.Collection<ol.Feature>} options.features Destination collection for the drawn features \r\n *  @param {ol.style.Style | Array.<ol.style.Style> | ol.style.StyleFunction | undefined} options.style style for the sketch\r\n *  @param {integer} options.sides number of sides, default 0 = circle\r\n *  @param { ol.events.ConditionType | undefined } options.condition A function that takes an ol.MapBrowserEvent and returns a boolean that event should be handled. By default module:ol/events/condition.always.\r\n *  @param { ol.events.ConditionType | undefined } options.squareCondition A function that takes an ol.MapBrowserEvent and returns a boolean to draw square features. Default test shift key\r\n *  @param { ol.events.ConditionType | undefined } options.centerCondition A function that takes an ol.MapBrowserEvent and returns a boolean to draw centered features. Default check Ctrl key\r\n *  @param { bool } options.canRotate Allow rotation when centered + square, default: true\r\n *  @param { string } [options.geometryName=geometry] \r\n *  @param { number } options.clickTolerance click tolerance on touch devices, default: 6\r\n *  @param { number } options.maxCircleCoordinates Maximum number of point on a circle, default: 100\r\n */\r\nvar ol_interaction_DrawRegular = function(options) {\r\n  if (!options) options={};\r\n\r\n  this.squaredClickTolerance_ = options.clickTolerance ? options.clickTolerance * options.clickTolerance : 36;\r\n  this.maxCircleCoordinates_ = options.maxCircleCoordinates || 100;\r\n\r\n  // Collection of feature to transform \r\n  this.features_ = options.features;\r\n  // List of layers to transform \r\n  this.source_ = options.source;\r\n  // Square condition\r\n  this.conditionFn_ = options.condition;\r\n  // Square condition\r\n  this.squareFn_ = options.squareCondition;\r\n  // Centered condition\r\n  this.centeredFn_ = options.centerCondition;\r\n  // Allow rotation when centered + square\r\n  this.canRotate_ = (options.canRotate !== false);\r\n  // Specify custom geometry name\r\n  this.geometryName_ = options.geometryName;\r\n\r\n  // Number of sides (default=0: circle)\r\n  this.setSides(options.sides);\r\n\r\n  // Style\r\n  var defaultStyle = ol_style_Style_defaultStyle(true);\r\n\r\n  // Create a new overlay layer for the sketch\r\n  this.sketch_ = new ol_Collection();\r\n  this.overlayLayer_ = new ol_layer_Vector({\r\n    source: new ol_source_Vector({\r\n      features: this.sketch_,\r\n      useSpatialIndex: false\r\n    }),\r\n    name:'DrawRegular overlay',\r\n    displayInLayerSwitcher: false,\r\n    style: options.style || defaultStyle\r\n  });\r\n\r\n  ol_interaction_Interaction.call(this, {\t\r\n      /*\r\n      handleDownEvent: this.handleDownEvent_,\r\n      handleMoveEvent: this.handleMoveEvent_,\r\n      handleUpEvent: this.handleUpEvent_,\r\n      */\r\n      handleEvent: this.handleEvent_\r\n    });\r\n};\r\nol_ext_inherits(ol_interaction_DrawRegular, ol_interaction_Interaction);\r\n\r\n/**\r\n * Remove the interaction from its current map, if any,  and attach it to a new\r\n * map, if any. Pass `null` to just remove the interaction from the current map.\r\n * @param {ol.Map} map Map.\r\n * @api stable\r\n */\r\nol_interaction_DrawRegular.prototype.setMap = function(map) {\r\n  if (this.getMap()) this.getMap().removeLayer(this.overlayLayer_);\r\n  ol_interaction_Interaction.prototype.setMap.call (this, map);\r\n  this.overlayLayer_.setMap(map);\r\n};\r\n\r\n/**\r\n * Activate/deactivate the interaction\r\n * @param {boolean}\r\n * @api stable\r\n */\r\nol_interaction_DrawRegular.prototype.setActive = function(b) {\r\n  this.reset();\r\n  ol_interaction_Interaction.prototype.setActive.call (this, b);\r\n}\r\n\r\n/**\r\n * Reset the interaction\r\n * @api stable\r\n */\r\nol_interaction_DrawRegular.prototype.reset = function() {\r\n  this.overlayLayer_.getSource().clear();\r\n  this.started_ = false;\r\n}\r\n\r\n/**\r\n * Set the number of sides.\r\n * @param {int} number of sides.\r\n * @api stable\r\n */\r\nol_interaction_DrawRegular.prototype.setSides = function (nb) {\r\n  nb = parseInt(nb);\r\n  this.sides_ = nb>2 ? nb : 0;\r\n}\r\n\r\n/**\r\n * Allow rotation when centered + square\r\n * @param {bool} \r\n * @api stable\r\n */\r\nol_interaction_DrawRegular.prototype.canRotate = function (b) {\r\n  if (b===true || b===false) this.canRotate_ = b;\r\n  return this.canRotate_;\r\n}\r\n\r\n/**\r\n * Get the number of sides.\r\n * @return {int} number of sides.\r\n * @api stable\r\n */\r\nol_interaction_DrawRegular.prototype.getSides = function () {\r\n  return this.sides_;\r\n}\r\n\r\n/** Default start angle array for each sides\r\n*/\r\nol_interaction_DrawRegular.prototype.startAngle = {\r\n  'default':Math.PI/2,\r\n  3: -Math.PI/2,\r\n  4: Math.PI/4\r\n};\r\n\r\n/** Get geom of the current drawing\r\n* @return {ol.geom.Polygon | ol.geom.Point}\r\n*/\r\nol_interaction_DrawRegular.prototype.getGeom_ = function () {\r\n  this.overlayLayer_.getSource().clear();\r\n  if (!this.center_) return false;\r\n\r\n  var g;\r\n  if (this.coord_) {\r\n    var center = this.center_;\r\n    var coord = this.coord_;\r\n\r\n    // Specific case: circle\r\n    var d, dmax, r, circle, centerPx;\r\n    if (!this.sides_ && this.square_ && !this.centered_) {\r\n      center = [(coord[0] + center[0])/2, (coord[1] + center[1])/2];\r\n      d = [coord[0] - center[0], coord[1] - center[1]];\r\n      r = Math.sqrt(d[0]*d[0]+d[1]*d[1]);\r\n      circle = new ol_geom_Circle(center, r, 'XY');\r\n      // Optimize points on the circle\r\n      centerPx = this.getMap().getPixelFromCoordinate(center);\r\n      dmax = Math.max (100, Math.abs(centerPx[0]-this.coordPx_[0]), Math.abs(centerPx[1]-this.coordPx_[1]));\r\n      dmax = Math.min ( this.maxCircleCoordinates_, Math.round(dmax / 3 ));\r\n      return ol_geom_Polygon_fromCircle (circle, dmax, 0);\r\n    } else {\r\n      var hasrotation = this.canRotate_ && this.centered_ && this.square_;\r\n      d = [coord[0] - center[0], coord[1] - center[1]];\r\n      if (this.square_ && !hasrotation) {\r\n        //var d = [coord[0] - center[0], coord[1] - center[1]];\r\n        var dm = Math.max (Math.abs(d[0]), Math.abs(d[1])); \r\n        coord = [ \r\n          center[0] + (d[0]>0 ? dm:-dm),\r\n          center[1] + (d[1]>0 ? dm:-dm)\r\n        ];\r\n      }\r\n      r = Math.sqrt(d[0]*d[0]+d[1]*d[1]);\r\n      if (r>0) {\r\n        circle = new ol_geom_Circle(center, r, 'XY');\r\n        var a;\r\n        if (hasrotation) a = Math.atan2(d[1], d[0]);\r\n        else a = this.startAngle[this.sides_] || this.startAngle['default'];\r\n\r\n        if (this.sides_) {\r\n          g = ol_geom_Polygon_fromCircle (circle, this.sides_, a);\r\n        } else {\r\n          // Optimize points on the circle\r\n          centerPx = this.getMap().getPixelFromCoordinate(this.center_);\r\n          dmax = Math.max (100, Math.abs(centerPx[0]-this.coordPx_[0]), Math.abs(centerPx[1]-this.coordPx_[1]));\r\n          dmax = Math.min ( this.maxCircleCoordinates_, Math.round(dmax / (this.centered_ ? 3:5) ));\r\n          g = ol_geom_Polygon_fromCircle (circle, dmax, 0);\r\n        }\r\n\r\n        if (hasrotation) return g;\r\n      \r\n        // Scale polygon to fit extent\r\n        var ext = g.getExtent();\r\n        if (!this.centered_) center = this.center_;\r\n        else center = [ 2*this.center_[0]-this.coord_[0], 2*this.center_[1]-this.coord_[1] ];\r\n        var scx = (center[0] - coord[0]) / (ext[0] - ext[2]);\r\n        var scy = (center[1] - coord[1]) / (ext[1] - ext[3]);\r\n        if (this.square_) {\r\n          var sc = Math.min(Math.abs(scx),Math.abs(scy));\r\n          scx = Math.sign(scx)*sc;\r\n          scy = Math.sign(scy)*sc;\r\n        }\r\n        var t = [ center[0] - ext[0]*scx, center[1] - ext[1]*scy ];\r\n      \r\n        g.applyTransform(function(g1, g2, dim) {\r\n          for (var i=0; i<g1.length; i+=dim) {\r\n            g2[i] = g1[i]*scx + t[0];\r\n            g2[i+1] = g1[i+1]*scy + t[1];\r\n          }\r\n          return g2;\r\n        });\r\n        return g;\r\n      }\r\n    }\r\n  }\r\n\r\n  // No geom => return a point\r\n  return new ol_geom_Point(this.center_);\r\n};\r\n\r\n/** Draw sketch\r\n* @return {ol.Feature} The feature being drawn.\r\n*/\r\nol_interaction_DrawRegular.prototype.drawSketch_ = function(evt) {\r\n  this.overlayLayer_.getSource().clear();\r\n  if (evt) {\r\n    this.square_ = this.squareFn_ ? this.squareFn_(evt) : evt.originalEvent.shiftKey;\r\n    this.centered_ = this.centeredFn_ ? this.centeredFn_(evt) : evt.originalEvent.metaKey || evt.originalEvent.ctrlKey;\r\n    var g = this.getGeom_();\r\n    if (g) {\r\n      var f = this.feature_;\r\n\r\n      //f.setGeometry (g);\r\n      if (g.getType()==='Polygon') f.getGeometry().setCoordinates(g.getCoordinates());\r\n      this.overlayLayer_.getSource().addFeature(f);\r\n      if (this.coord_ \r\n        && this.square_ \r\n        && ((this.canRotate_ && this.centered_ && this.coord_) || (!this.sides_ && !this.centered_))) {\r\n        this.overlayLayer_.getSource().addFeature(new ol_Feature(new ol_geom_LineString([this.center_,this.coord_])));\r\n      }\r\n      return f;\r\n    }\r\n  }\r\n};\r\n\r\n/** Draw sketch (Point)\r\n*/\r\nol_interaction_DrawRegular.prototype.drawPoint_ = function(pt, noclear) {\r\n  if (!noclear) this.overlayLayer_.getSource().clear();\r\n  this.overlayLayer_.getSource().addFeature(new ol_Feature(new ol_geom_Point(pt)));\r\n};\r\n\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n */\r\nol_interaction_DrawRegular.prototype.handleEvent_ = function(evt) {\r\n  var dx, dy;\r\n  // Event date time\r\n  this._eventTime = new Date();\r\n  switch (evt.type) {\r\n    case \"pointerdown\": {\r\n      if (this.conditionFn_ && !this.conditionFn_(evt)) break;\r\n      this.downPx_ = evt.pixel;\r\n      this.start_(evt);\r\n      // Test long touch\r\n      var dt = 500;\r\n      this._longTouch = false;\r\n      setTimeout(function() {\r\n        this._longTouch = (new Date() - this._eventTime > .9*dt);\r\n        if (this._longTouch) this.handleMoveEvent_(evt);\r\n      }.bind(this), dt);\r\n      break;\r\n    }\r\n    case \"pointerup\": {\r\n      // Started and fisrt move\r\n      if (this.started_ && this.coord_) {\r\n        dx = this.downPx_[0] - evt.pixel[0];\r\n        dy = this.downPx_[1] - evt.pixel[1];\r\n        if (dx*dx + dy*dy <= this.squaredClickTolerance_) {\r\n          // The pointer has moved\r\n          if ( this.lastEvent == \"pointermove\" || this.lastEvent == \"keydown\" ) {\r\n            this.end_(evt);\r\n          }\r\n          // On touch device there is no move event : terminate = click on the same point\r\n          else {\r\n            dx = this.upPx_[0] - evt.pixel[0];\r\n            dy = this.upPx_[1] - evt.pixel[1];\r\n            if ( dx*dx + dy*dy <= this.squaredClickTolerance_) {\r\n              this.end_(evt);\r\n            } else  {\r\n              this.handleMoveEvent_(evt);\r\n              this.drawPoint_(evt.coordinate,true);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.upPx_ = evt.pixel;\t\r\n      break;\r\n    }\r\n    case \"pointerdrag\": {\r\n      if (this.started_) {\r\n        var centerPx = this.getMap().getPixelFromCoordinate(this.center_);\r\n        dx = centerPx[0] - evt.pixel[0];\r\n        dy = centerPx[1] - evt.pixel[1];\r\n        if (dx*dx + dy*dy <= this.squaredClickTolerance_) {\r\n          this.reset();\r\n        }\r\n      }\r\n      return !this._longTouch;\r\n      // break;\r\n    }\r\n    case \"pointermove\": {\r\n      if (this.started_) {\r\n        dx = this.downPx_[0] - evt.pixel[0];\r\n        dy = this.downPx_[1] - evt.pixel[1];\r\n        if (dx*dx + dy*dy > this.squaredClickTolerance_) {\r\n          this.handleMoveEvent_(evt);\r\n          this.lastEvent = evt.type;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      this.lastEvent = evt.type;\r\n      // Prevent zoom in on dblclick\r\n      if (this.started_ && evt.type==='dblclick') {\r\n        //evt.stopPropagation();\r\n        return false;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/** Stop drawing.\r\n */\r\nol_interaction_DrawRegular.prototype.finishDrawing = function() {\r\n  if (this.started_ && this.coord_) {\r\n    this.end_({ pixel: this.upPx_, coordinate: this.coord_});\r\n  }\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Event.\r\n */\r\nol_interaction_DrawRegular.prototype.handleMoveEvent_ = function(evt) {\r\n  if (this.started_) {\r\n    this.coord_ = evt.coordinate;\r\n    this.coordPx_ = evt.pixel;\r\n    var f = this.drawSketch_(evt);\r\n    this.dispatchEvent({ \r\n      type:'drawing', \r\n      feature: f, \r\n      pixel: evt.pixel, \r\n      startCoordinate: this.center_,\r\n      coordinate: evt.coordinate, \r\n      square: this.square_, \r\n      centered: this.centered_ \r\n    });\r\n  } else  {\r\n    this.drawPoint_(evt.coordinate);\r\n  }\r\n};\r\n\r\n/** Start an new draw\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n * @return {boolean} `false` to stop the drag sequence.\r\n */\r\nol_interaction_DrawRegular.prototype.start_ = function(evt) {\r\n  if (!this.started_) {\r\n    this.started_ = true;\r\n    this.center_ = evt.coordinate;\r\n    this.coord_ = null;\r\n    var f = this.feature_ = new ol_Feature({});\r\n    f.setGeometryName(this.geometryName_);\r\n    f.setGeometry(new ol_geom_Polygon([[evt.coordinate,evt.coordinate,evt.coordinate]]));\r\n    this.drawSketch_(evt);\r\n    this.dispatchEvent({ type:'drawstart', feature: f, pixel: evt.pixel, coordinate: evt.coordinate });\r\n  } else {\r\n    this.coord_ = evt.coordinate;\r\n  }\r\n};\r\n\r\n/** End drawing\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n * @return {boolean} `false` to stop the drag sequence.\r\n */\r\nol_interaction_DrawRegular.prototype.end_ = function(evt) {\r\n  this.coord_ = evt.coordinate;\r\n  this.started_ = false;\r\n  if (this.coord_ && (this.center_[0]!==this.coord_[0] || this.center_[1]!==this.coord_[1])) {\r\n    var f = this.feature_;\r\n\r\n    f.setGeometry(this.getGeom_());\r\n    if (this.source_) this.source_.addFeature(f);\r\n    else if (this.features_) this.features_.push(f);\r\n    this.dispatchEvent({ type:'drawend', feature: f, pixel: evt.pixel, coordinate: evt.coordinate, square: this.square_, centered: this.centered_ });\r\n  } else {\r\n    this.dispatchEvent({ type:'drawcancel', feature: null, pixel: evt.pixel, coordinate: evt.coordinate, square: this.square_, centered: this.centered_ });\r\n  }\r\n\r\n  this.center_ = this.coord_ = null;\r\n  this.drawSketch_();\r\n};\r\n\r\nexport default ol_interaction_DrawRegular\r\n","/*\tCopyright (c) 2016 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_interaction_Pointer from 'ol/interaction/Pointer'\r\nimport ol_style_Style from 'ol/style/Style'\r\nimport ol_style_Stroke from 'ol/style/Stroke'\r\nimport ol_source_Vector from 'ol/source/Vector'\r\nimport ol_style_Fill from 'ol/style/Fill'\r\nimport ol_style_Circle from 'ol/style/Circle'\r\nimport ol_layer_Vector from 'ol/layer/Vector'\r\nimport ol_geom_Point from 'ol/geom/Point'\r\nimport ol_Feature from 'ol/Feature'\r\nimport ol_geom_LineString from 'ol/geom/LineString'\r\nimport ol_interaction_Interaction from 'ol/interaction/Interaction'\r\nimport {ol_coordinate_dist2d, ol_coordinate_equal} from \"../geom/GeomUtils\";\r\nimport {boundingExtent as ol_extent_boundingExtent} from 'ol/extent'\r\nimport {buffer as ol_extent_buffer} from 'ol/extent'\r\nimport {altKeyOnly as ol_events_condition_altKeyOnly} from 'ol/events/condition'\r\nimport {primaryAction as ol_events_condition_primaryAction} from 'ol/events/condition'\r\nimport {always as ol_events_condition_always} from 'ol/events/condition'\r\n\r\nimport '../geom/LineStringSplitAt'\r\n\r\n/** Interaction for modifying feature geometries. Similar to the core ol/interaction/Modify.\r\n * The interaction is more suitable to use to handle feature modification: only features concerned \r\n * by the modification are passed to the events (instead of all feature with ol/interaction/Modify)\r\n * - the modifystart event is fired before the feature is modified (no points still inserted)\r\n * - the modifyend event is fired after the modification\r\n * - it fires a modifying event\r\n * @constructor\r\n * @extends {ol_interaction_Pointer}\r\n * @fires modifystart\r\n * @fires modifying\r\n * @fires modifyend\r\n * @fires select\r\n * @param {*} options\r\n *\t@param {ol.source.Vector} options.source a source to modify (configured with useSpatialIndex set to true)\r\n *\t@param {ol.source.Vector|Array<ol.source.Vector>} options.sources a list of source to modify (configured with useSpatialIndex set to true)\r\n *  @param {ol.Collection.<ol.Feature>} options.features collection of feature to modify\r\n *  @param {integer} options.pixelTolerance Pixel tolerance for considering the pointer close enough to a segment or vertex for editing. Default is 10.\r\n *  @param {function|undefined} options.filter a filter that takes a feature and return true if it can be modified, default always true.\r\n *  @param {ol.style.Style | Array<ol.style.Style> | undefined} options.style Style for the sketch features.\r\n *  @param {ol.EventsConditionType | undefined} options.condition A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether that event will be considered to add or move a vertex to the sketch. Default is ol.events.condition.primaryAction.\r\n *  @param {ol.EventsConditionType | undefined} options.deleteCondition A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether that event should be handled. By default, ol.events.condition.singleClick with ol.events.condition.altKeyOnly results in a vertex deletion.\r\n *  @param {ol.EventsConditionType | undefined} options.insertVertexCondition A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether a new vertex can be added to the sketch features. Default is ol.events.condition.always\r\n *  @param {boolean} options.wrapX Wrap the world horizontally on the sketch overlay, default false\r\n */\r\nvar ol_interaction_ModifyFeature = function(options){\r\n  if (!options) options = {};\r\n\r\n  var dragging, modifying;\r\n  ol_interaction_Pointer.call(this,{\r\n    /*\r\n    handleDownEvent: this.handleDownEvent,\r\n    handleDragEvent: this.handleDragEvent,\r\n    handleMoveEvent: this.handleMoveEvent,\r\n    handleUpEvent: this.handleUpEvent,\r\n    */\r\n    handleEvent: function(e) {\r\n      switch(e.type) {\r\n        case 'pointerdown': {\r\n          dragging = this.handleDownEvent(e);\r\n          modifying = dragging || this._deleteCondition(e);\r\n          return !dragging;\r\n        }\r\n        case 'pointerup': {\r\n          dragging = false;\r\n          return this.handleUpEvent(e);\r\n        }\r\n        case 'pointerdrag': {\r\n          if (dragging) return this.handleDragEvent(e);\r\n          else return true;\r\n        }\r\n        case 'pointermove': {\r\n          if (!dragging) return this.handleMoveEvent(e);\r\n          else return true;\r\n        }\r\n        case 'singleclick':\r\n        case 'click': {\r\n          // Prevent click when modifying\r\n          return !modifying;\r\n        }\r\n        default: return true;\r\n      }\r\n    }\r\n  });\r\n\r\n  // Snap distance (in px)\r\n  this.snapDistance_ = options.pixelTolerance || 10;\r\n  // Split tolerance between the calculated intersection and the geometry\r\n  this.tolerance_ = 1e-10;\r\n  // Cursor\r\n  this.cursor_ = options.cursor;\r\n\r\n  // List of source to split\r\n  this.sources_ = options.sources ? (options.sources instanceof Array) ? options.sources:[options.sources] : [];\r\n  if (options.source) this.sources_.push (options.source);\r\n  if (options.features) this.sources_.push (new ol_source_Vector({ features: options.features }));\r\n\r\n  // Get all features candidate\r\n  this.filterSplit_ = options.filter || function(){ return true; };\r\n\r\n  this._condition = options.condition || ol_events_condition_primaryAction;\r\n  this._deleteCondition = options.deleteCondition || ol_events_condition_altKeyOnly;\r\n  this._insertVertexCondition = options.insertVertexCondition || ol_events_condition_always;\r\n\r\n  // Default style\r\n  var sketchStyle = function() {\r\n    return [ new ol_style_Style({\r\n        image: new ol_style_Circle({\r\n          radius: 6,\r\n          fill: new ol_style_Fill({ color: [0, 153, 255, 1] }),\r\n          stroke: new ol_style_Stroke({ color: '#FFF', width: 1.25 })\r\n        })\r\n      })\r\n    ];\r\n  }\r\n\r\n  // Custom style\r\n  if (options.style) {\r\n    if (typeof(options.style) === 'function') {\r\n      sketchStyle = options.style\r\n     } else {\r\n       sketchStyle = function() { return options.style; }\r\n     }\r\n  }\r\n\r\n  // Create a new overlay for the sketch\r\n  this.overlayLayer_ = new ol_layer_Vector({\r\n    source: new ol_source_Vector({\r\n      useSpatialIndex: false\r\n    }),\r\n    name:'Modify overlay',\r\n    displayInLayerSwitcher: false,\r\n    style: sketchStyle,\r\n    wrapX: options.wrapX\r\n  });\r\n\r\n};\r\nol_ext_inherits(ol_interaction_ModifyFeature, ol_interaction_Pointer);\r\n\r\n/**\r\n * Remove the interaction from its current map, if any,  and attach it to a new\r\n * map, if any. Pass `null` to just remove the interaction from the current map.\r\n * @param {ol.Map} map Map.\r\n * @api stable\r\n */\r\nol_interaction_ModifyFeature.prototype.setMap = function(map) {\r\n  if (this.getMap()) this.getMap().removeLayer(this.overlayLayer_);\r\n  ol_interaction_Interaction.prototype.setMap.call (this, map);\r\n  this.overlayLayer_.setMap(map);\r\n};\r\n\r\n/**\r\n * Activate or deactivate the interaction + remove the sketch.\r\n * @param {boolean} active.\r\n * @api stable\r\n */\r\nol_interaction_ModifyFeature.prototype.setActive = function(active) {\r\n  ol_interaction_Interaction.prototype.setActive.call (this, active);\r\n  if (this.overlayLayer_) this.overlayLayer_.getSource().clear();\r\n};\r\n\r\n/** Change the filter function\r\n * @param {function|undefined} options.filter a filter that takes a feature and return true if it can be modified, default always true.\r\n */\r\nol_interaction_ModifyFeature.prototype.setFilter = function(filter) {\r\n  if (typeof(filter) === 'function') this.filterSplit_ = filter;\r\n  else if (filter === undefined) this.filterSplit_ = function(){ return true; };\r\n};\r\n\r\n/** Get closest feature at pixel\r\n * @param {ol.Pixel} \r\n * @return {*} \r\n * @private\r\n */\r\nol_interaction_ModifyFeature.prototype.getClosestFeature = function(e) {\r\n  var f, c, d = this.snapDistance_+1;\r\n  for (var i=0; i<this.sources_.length; i++) {\r\n    var source = this.sources_[i];\r\n    f = source.getClosestFeatureToCoordinate(e.coordinate);\r\n    if (f && this.filterSplit_(f)) {\r\n      var ci = f.getGeometry().getClosestPoint(e.coordinate);\r\n      var di = ol_coordinate_dist2d(e.coordinate,ci) / e.frameState.viewState.resolution;\r\n      if (di < d){\r\n        d = di;\r\n        c = ci;\r\n      }\r\n      break;\r\n    }\r\n  }\r\n  if (d > this.snapDistance_) {\r\n    if (this.currentFeature) this.dispatchEvent({ type: 'select', selected: [], deselected: [this.currentFeature] })\r\n    this.currentFeature = null;\r\n    return false;\r\n  } else {\r\n    // Snap to node\r\n    var coord = this.getNearestCoord (c, f.getGeometry());\r\n    if (coord) {\r\n      coord = coord.coord;\r\n      var p = this.getMap().getPixelFromCoordinate(coord);\r\n      if (ol_coordinate_dist2d(e.pixel, p) < this.snapDistance_) {\r\n        c = coord;\r\n      }\r\n      //\r\n      if (this.currentFeature !== f) this.dispatchEvent({ type: 'select', selected: [f], deselected: [this.currentFeature] })\r\n      this.currentFeature = f;\r\n      return { source:source, feature:f, coord: c };\r\n    }\r\n  }\r\n}\r\n\r\n/** Get nearest coordinate in a list \r\n* @param {ol.coordinate} pt the point to find nearest\r\n* @param {ol.geom} coords list of coordinates\r\n* @return {*} the nearest point with a coord (projected point), dist (distance to the geom), ring (if Polygon)\r\n*/\r\nol_interaction_ModifyFeature.prototype.getNearestCoord = function(pt, geom) {\r\n  var i, l, p, p0, dm;\r\n  switch (geom.getType()) {\r\n    case 'Point': {\r\n      return { coord: geom.getCoordinates(), dist: ol_coordinate_dist2d(geom.getCoordinates(), pt) };\r\n    }\r\n    case 'MultiPoint': {\r\n      return this.getNearestCoord (pt, new ol_geom_LineString(geom.getCoordinates()));\r\n    }\r\n    case 'LineString':\r\n    case 'LinearRing': {\r\n      var d;\r\n      dm = Number.MAX_VALUE;\r\n      var coords = geom.getCoordinates();\r\n      for (i=0; i < coords.length; i++) {\r\n        d = ol_coordinate_dist2d (pt, coords[i]);\r\n        if (d < dm) {\r\n          dm = d;\r\n          p0 = coords[i];\r\n        }\r\n      }\r\n      return { coord: p0, dist: dm };\r\n    }\r\n    case 'MultiLineString': {\r\n      var lstring = geom.getLineStrings();\r\n      p0 = false, dm = Number.MAX_VALUE;\r\n      for (i=0; l=lstring[i]; i++) {\r\n        p = this.getNearestCoord(pt, l);\r\n        if (p && p.dist<dm) {\r\n          p0 = p;\r\n          dm = p.dist;\r\n          p0.ring = i;\r\n        }\r\n      }\r\n      return p0;\r\n    }\r\n    case 'Polygon': {\r\n      var lring = geom.getLinearRings();\r\n      p0 = false;\r\n      dm = Number.MAX_VALUE;\r\n      for (i=0; l=lring[i]; i++) {\r\n        p = this.getNearestCoord(pt, l);\r\n        if (p && p.dist<dm) {\r\n          p0 = p;\r\n          dm = p.dist;\r\n          p0.ring = i;\r\n        }\r\n      }\r\n      return p0;\r\n    }\r\n    case 'MultiPolygon': {\r\n      var poly = geom.getPolygons();\r\n      p0 = false;\r\n      dm = Number.MAX_VALUE;\r\n      for (i=0; l=poly[i]; i++) {\r\n        p = this.getNearestCoord(pt, l);\r\n        if (p && p.dist<dm) {\r\n          p0 = p;\r\n          dm = p.dist;\r\n          p0.poly = i;\r\n        }\r\n      }\r\n      return p0;\r\n    }\r\n    case 'GeometryCollection': {\r\n      var g = geom.getGeometries();\r\n      p0 = false;\r\n      dm = Number.MAX_VALUE;\r\n      for (i=0; l=g[i]; i++) {\r\n        p = this.getNearestCoord(pt, l);\r\n        if (p && p.dist<dm) {\r\n          p0 = p;\r\n          dm = p.dist;\r\n          p0.geom = i;\r\n        }\r\n      }\r\n      return p0;\r\n    }\r\n    default: return false;\r\n  }\r\n};\r\n\r\n/** Get arcs concerned by a modification \r\n * @param {ol.geom} geom the geometry concerned\r\n * @param {ol.coordinate} coord pointed coordinates\r\n */\r\nol_interaction_ModifyFeature.prototype.getArcs = function(geom, coord) {\r\n  var arcs = false;\r\n  var coords, i, s, l, g;\r\n  switch(geom.getType()) {\r\n    case 'Point': {\r\n      if (ol_coordinate_equal(coord, geom.getCoordinates())) {\r\n        arcs = { \r\n          geom: geom, \r\n          type: geom.getType(),\r\n          coord1: [],\r\n          coord2: [],\r\n          node: true\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'MultiPoint': {\r\n      coords = geom.getCoordinates();\r\n      for (i=0; i < coords.length; i++) {\r\n        if (ol_coordinate_equal(coord, coords[i])) {\r\n          arcs = { \r\n            geom: geom, \r\n            type: geom.getType(),\r\n            index: i,\r\n            coord1: [],\r\n            coord2: [],\r\n            node: true\r\n          }\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'LinearRing': \r\n    case 'LineString': {\r\n      var p = geom.getClosestPoint(coord);\r\n      if (ol_coordinate_dist2d(p,coord) < 1.5*this.tolerance_) {\r\n        var split;\r\n        // Split the line in two\r\n        if (geom.getType() === 'LinearRing') {\r\n          g = new ol_geom_LineString(geom.getCoordinates());\r\n          split = g.splitAt(coord, this.tolerance_);\r\n        } else {\r\n          split = geom.splitAt(coord, this.tolerance_);\r\n        }\r\n        // If more than 2\r\n        if (split.length>2) {\r\n          coords = split[1].getCoordinates();\r\n          for (i=2; s=split[i]; i++) {\r\n            var c = s.getCoordinates();\r\n            c.shift();\r\n            coords = coords.concat(c);\r\n          }\r\n          split = [ split[0], new ol_geom_LineString(coords) ];\r\n        }\r\n        // Split in two\r\n        if (split.length === 2) {\r\n          var c0 = split[0].getCoordinates();\r\n          var c1 = split[1].getCoordinates();\r\n          var nbpt = c0.length + c1.length -1;\r\n          c0.pop();\r\n          c1.shift();\r\n          arcs = { \r\n            geom: geom, \r\n            type: geom.getType(),\r\n            coord1: c0, \r\n            coord2: c1,\r\n            node: (geom.getCoordinates().length === nbpt),\r\n            closed: false\r\n          }\r\n        } else if (split.length === 1) {\r\n          s = split[0].getCoordinates();\r\n          var start = ol_coordinate_equal(s[0], coord);\r\n          var end = ol_coordinate_equal(s[s.length-1], coord);\r\n          // Move first point\r\n          if (start) {\r\n            s.shift();\r\n            if (end) s.pop();\r\n            arcs = { \r\n              geom: geom, \r\n              type: geom.getType(),\r\n              coord1: [], \r\n              coord2: s,\r\n              node: true,\r\n              closed: end\r\n            }\r\n          } else if (end) {\r\n            // Move last point\r\n            s.pop()\r\n            arcs = { \r\n              geom: geom, \r\n              type: geom.getType(),\r\n              coord1: s, \r\n              coord2: [],\r\n              node: true,\r\n              closed: false\r\n            }\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'MultiLineString': {\r\n      var lstring = geom.getLineStrings();\r\n      for (i=0; l=lstring[i]; i++) {\r\n        arcs = this.getArcs(l, coord);\r\n        if (arcs) {\r\n          arcs.geom = geom;\r\n          arcs.type = geom.getType();\r\n          arcs.lstring = i;\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'Polygon': {\r\n      var lring = geom.getLinearRings();\r\n      for (i=0; l=lring[i]; i++) {\r\n        arcs = this.getArcs(l, coord);\r\n        if (arcs) {\r\n          arcs.geom = geom;\r\n          arcs.type = geom.getType();\r\n          arcs.index = i;\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'MultiPolygon': {\r\n      var poly = geom.getPolygons();\r\n      for (i=0; l=poly[i]; i++) {\r\n        arcs = this.getArcs(l, coord);\r\n        if (arcs) {\r\n          arcs.geom = geom;\r\n          arcs.type = geom.getType();\r\n          arcs.poly = i;\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'GeometryCollection': {\r\n      g = geom.getGeometries();\r\n      for (i=0; l=g[i]; i++) {\r\n        arcs = this.getArcs(l, coord);\r\n        if (arcs) {\r\n          arcs.geom = geom;\r\n          arcs.g = i;\r\n          arcs.typeg = arcs.type;\r\n          arcs.type = geom.getType();\r\n          break;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      console.error('ol/interaction/ModifyFeature '+geom.getType()+' not supported!');\r\n      break;\r\n    }\r\n  }\r\n  return arcs;\r\n};\r\n\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n * @return {boolean} `true` to start the drag sequence.\r\n */\r\nol_interaction_ModifyFeature.prototype.handleDownEvent = function(evt) {\r\n  if (!this.getActive()) return false;\r\n\r\n  // Something to move ?\r\n  var current = this.getClosestFeature(evt);\r\n\r\n  if (current && (this._condition(evt) || this._deleteCondition(evt))) {\r\n    var features = [];\r\n    this.arcs = [];\r\n\r\n    // Get features concerned\r\n    this.sources_.forEach(function(s) {\r\n      var extent = ol_extent_buffer (ol_extent_boundingExtent([current.coord]), this.tolerance_);\r\n      features = features.concat(features, s.getFeaturesInExtent(extent));\r\n    }.bind(this));\r\n\r\n    // Get arcs concerned\r\n    this._modifiedFeatures = [];\r\n    features.forEach(function(f) {\r\n      var a = this.getArcs(f.getGeometry(), current.coord);\r\n      if (a) {\r\n        if (this._insertVertexCondition(evt) || a.node) {\r\n          a.feature = f;\r\n          this._modifiedFeatures.push(f);\r\n          this.arcs.push(a);\r\n        }\r\n      }\r\n    }.bind(this));\r\n\r\n    if (this._modifiedFeatures.length) {\r\n      if (this._deleteCondition(evt)) {\r\n        return !this._removePoint(current, evt); \r\n      } else {\r\n        this.dispatchEvent({ \r\n          type:'modifystart', \r\n          coordinate: current.coord,\r\n          originalEvent: evt.originalEvent,\r\n          features: this._modifiedFeatures\r\n        });\r\n        this.handleDragEvent({ \r\n          coordinate: current.coord,\r\n          originalEvent: evt.originalEvent\r\n        })\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n/** Get modified features\r\n * @return {Array<ol.Feature>} list of modified features\r\n */\r\nol_interaction_ModifyFeature.prototype.getModifiedFeatures = function() {\r\n  return this._modifiedFeatures || [];\r\n};\r\n\r\n/** Removes the vertex currently being pointed.\r\n */\r\nol_interaction_ModifyFeature.prototype.removePoint = function() {\r\n  this._removePoint({},{});\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nol_interaction_ModifyFeature.prototype._getModification = function(a) {\r\n  var coords = a.coord1.concat(a.coord2);\r\n  switch (a.type) {\r\n    case 'LineString': {\r\n      if (a.closed) coords.push(coords[0]);\r\n      if (coords.length>1) {\r\n        if (a.geom.getCoordinates().length != coords.length) {\r\n          a.coords = coords;\r\n          return true;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'MultiLineString': {\r\n      if (a.closed) coords.push(coords[0]);\r\n      if (coords.length>1) {\r\n        var c = a.geom.getCoordinates();\r\n        if (c[a.lstring].length != coords.length) {\r\n          c[a.lstring] = coords;\r\n          a.coords = c;\r\n          return true;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'Polygon': {\r\n      if (a.closed) coords.push(coords[0]);\r\n      if (coords.length>3) {\r\n        c = a.geom.getCoordinates();\r\n        if (c[a.index].length != coords.length) {\r\n          c[a.index] = coords;\r\n          a.coords = c;\r\n          return true;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'MultiPolygon': {\r\n      if (a.closed) coords.push(coords[0]);\r\n      if (coords.length>3) {\r\n        c = a.geom.getCoordinates();\r\n        if (c[a.poly][a.index].length != coords.length) {\r\n          c[a.poly][a.index] = coords;\r\n          a.coords = c;\r\n          return true;\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'GeometryCollection': {\r\n      a.type = a.typeg;\r\n      var geom = a.geom;\r\n      var geoms = geom.getGeometries();\r\n      a.geom = geoms[a.g];\r\n      var found = this._getModification(a);\r\n      // Restore current arc\r\n      geom.setGeometries(geoms);\r\n      a.geom = geom;\r\n      a.type = 'GeometryCollection';\r\n      return found;\r\n    }\r\n    default: {\r\n      //console.error('ol/interaction/ModifyFeature '+a.type+' not supported!');\r\n      break;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n/** Removes the vertex currently being pointed.\r\n * @private\r\n */\r\nol_interaction_ModifyFeature.prototype._removePoint = function(current, evt) {\r\n  if (!this.arcs) return false;\r\n\r\n  this.overlayLayer_.getSource().clear();\r\n\r\n  var found = false;\r\n  // Get all modifications\r\n  this.arcs.forEach(function(a) {\r\n    found = found || this._getModification(a);\r\n  }.bind(this));\r\n\r\n  // Almost one point is removed\r\n  if (found) {\r\n    this.dispatchEvent({ \r\n      type:'modifystart', \r\n      coordinate: current.coord,\r\n      originalEvent: evt.originalEvent,\r\n      features: this._modifiedFeatures\r\n    });\r\n    this.arcs.forEach(function(a) {\r\n      if (a.geom.getType() === 'GeometryCollection') {\r\n        if (a.coords) {\r\n          var geoms = a.geom.getGeometries();\r\n          geoms[a.g].setCoordinates(a.coords);\r\n          a.geom.setGeometries(geoms);\r\n        }\r\n      } else {\r\n        if (a.coords) a.geom.setCoordinates(a.coords);\r\n      }\r\n    }.bind(this));\r\n    this.dispatchEvent({ \r\n      type:'modifyend', \r\n      coordinate: current.coord,\r\n      originalEvent: evt.originalEvent,\r\n      features: this._modifiedFeatures\r\n    });\r\n  }\r\n\r\n  this.arcs = [];\r\n  return found;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nol_interaction_ModifyFeature.prototype.handleUpEvent = function(e) {\r\n  if (!this.getActive()) return false;\r\n  if (!this.arcs || !this.arcs.length) return true;\r\n\r\n  this.overlayLayer_.getSource().clear();\r\n  this.dispatchEvent({ \r\n    type:'modifyend', \r\n    coordinate: e.coordinate,\r\n    originalEvent: e.originalEvent,\r\n    features: this._modifiedFeatures\r\n  });\r\n  \r\n  this.arcs = [];\r\n  return true;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nol_interaction_ModifyFeature.prototype.setArcCoordinates = function(a, coords) {\r\n  var c;\r\n  switch (a.type) {\r\n    case 'Point': {\r\n      a.geom.setCoordinates(coords[0]);\r\n      break;\r\n    }\r\n    case 'MultiPoint': {\r\n      c = a.geom.getCoordinates();\r\n      c[a.index] = coords[0];\r\n      a.geom.setCoordinates(c);\r\n      break;\r\n    }\r\n    case 'LineString': {\r\n      a.geom.setCoordinates(coords);\r\n      break;\r\n    }\r\n    case 'MultiLineString': {\r\n      c = a.geom.getCoordinates();\r\n      c[a.lstring] = coords;\r\n      a.geom.setCoordinates(c);\r\n      break;\r\n    }\r\n    case 'Polygon': {\r\n      c = a.geom.getCoordinates();\r\n      c[a.index] = coords;\r\n      a.geom.setCoordinates(c);\r\n      break;\r\n    }\r\n    case 'MultiPolygon': {\r\n      c = a.geom.getCoordinates();\r\n      c[a.poly][a.index] = coords;\r\n      a.geom.setCoordinates(c);\r\n      break;\r\n    }\r\n    case 'GeometryCollection': {\r\n      a.type = a.typeg;\r\n      var geom = a.geom;\r\n      var geoms = geom.getGeometries();\r\n      a.geom = geoms[a.g];\r\n      this.setArcCoordinates(a, coords);\r\n      geom.setGeometries(geoms);\r\n      a.geom = geom;\r\n      a.type = 'GeometryCollection';\r\n      break;\r\n    }\r\n  }\r\n};\r\n/**\r\n * @private\r\n */\r\nol_interaction_ModifyFeature.prototype.handleDragEvent = function(e) {\r\n  if (!this.getActive()) return false;\r\n  if (!this.arcs) return true;\r\n\r\n  // Show sketch\r\n  this.overlayLayer_.getSource().clear();\r\n  var p = new ol_Feature(new ol_geom_Point(e.coordinate));\r\n  this.overlayLayer_.getSource().addFeature(p);\r\n\r\n  // Nothing to do\r\n  if (!this.arcs.length) return true;\r\n\r\n  // Move arcs\r\n  this.arcs.forEach(function(a) {\r\n    var coords = a.coord1.concat([e.coordinate], a.coord2);\r\n    if (a.closed) coords.push(e.coordinate);\r\n    this.setArcCoordinates(a, coords);\r\n  }.bind(this));\r\n\r\n  this.dispatchEvent({ \r\n    type:'modifying', \r\n    coordinate: e.coordinate,\r\n    originalEvent: e.originalEvent,\r\n    features: this._modifiedFeatures\r\n  });\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Event.\r\n * @private\r\n */\r\nol_interaction_ModifyFeature.prototype.handleMoveEvent = function(e) {\r\n  if (!this.getActive()) return false;\r\n\r\n  this.overlayLayer_.getSource().clear();\r\n  var current = this.getClosestFeature(e);\r\n\r\n  // Draw sketch\r\n  if (current) {\r\n    var p = new ol_Feature(new ol_geom_Point(current.coord));\r\n    this.overlayLayer_.getSource().addFeature(p);\r\n  }\r\n\r\n  // Show cursor\r\n  var element = e.map.getTargetElement();\r\n  if (this.cursor_) {\r\n    if (current) {\r\n      if (element.style.cursor != this.cursor_) {\r\n        this.previousCursor_ = element.style.cursor;\r\n        element.style.cursor = this.cursor_;\r\n      }\r\n    } else if (this.previousCursor_ !== undefined) {\r\n      element.style.cursor = this.previousCursor_;\r\n      this.previousCursor_ = undefined;\r\n    }\r\n  }\r\n};\r\n\r\n/** Get the current feature to modify\r\n * @return {ol.Feature} \r\n */\r\nol_interaction_ModifyFeature.prototype.getCurrentFeature = function() {\r\n  return this.currentFeature;\r\n};\r\n\r\nexport default ol_interaction_ModifyFeature","/*\tCopyright (c) 2016 Jean-Marc VIGLINO, \r\n\treleased under the CeCILL-B license (French BSD license)\r\n\t(http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_interaction_Pointer from 'ol/interaction/Pointer'\r\nimport ol_geom_LineString from 'ol/geom/LineString'\r\nimport ol_geom_Polygon from 'ol/geom/Polygon'\r\nimport {ol_coordinate_dist2d, ol_coordinate_findSegment, ol_coordinate_offsetCoords} from \"../geom/GeomUtils\";\r\n\r\nimport ol_style_Style_defaultStyle from '../style/defaultStyle'\r\n\r\n/** Offset interaction for offseting feature geometry\r\n * @constructor\r\n * @extends {ol_interaction_Pointer}\r\n * @fires offsetstart\r\n * @fires offsetting\r\n * @fires offsetend\r\n * @param {any} options\r\n *\t@param {function} [options.filter] a function that takes a feature and a layer and return true if the feature can be modified\r\n *\t@param {ol.layer.Vector | Array<ol.layer.Vector>} options.layers list of feature to transform \r\n *\t@param {ol.Collection.<ol.Feature>} options.features collection of feature to transform\r\n *\t@param {ol.source.Vector | undefined} options.source source to duplicate feature when ctrl key is down\r\n *\t@param {boolean} options.duplicate force feature to duplicate (source must be set)\r\n *  @param {ol.style.Style | Array.<ol.style.Style> | ol.style.StyleFunction | undefined} style style for the sketch\r\n */\r\nvar ol_interaction_Offset = function(options) {\r\n  if (!options) options = {};\r\n\r\n\t// Extend pointer\r\n\tol_interaction_Pointer.call(this, {\r\n    handleDownEvent: this.handleDownEvent_,\r\n    handleDragEvent: this.handleDragEvent_,\r\n    handleMoveEvent: this.handleMoveEvent_,\r\n    handleUpEvent: this.handleUpEvent_\r\n  });\r\n    \r\n  this._filter = options.filter;\r\n\t// Collection of feature to transform\r\n\tthis.features_ = options.features;\r\n\t// List of layers to transform\r\n  this.layers_ = options.layers ? (options.layers instanceof Array) ? options.layers:[options.layers] : null;\r\n  // duplicate\r\n  this.set('duplicate', options.duplicate);\r\n  this.source_ = options.source;\r\n  // Style\r\n  this._style = (typeof (options.style) === 'function') ? options.style : function () { \r\n    if (options.style) return options.style;\r\n    else return ol_style_Style_defaultStyle(true);\r\n  };\r\n\r\n  // init\r\n  this.previousCursor_ = false;\r\n};\r\nol_ext_inherits(ol_interaction_Offset, ol_interaction_Pointer);\r\n\r\n/**\r\n * Remove the interaction from its current map, if any,  and attach it to a new\r\n * map, if any. Pass `null` to just remove the interaction from the current map.\r\n * @param {ol.Map} map Map.\r\n * @api stable\r\n */\r\nol_interaction_Offset.prototype.setMap = function(map) {\r\n\tol_interaction_Pointer.prototype.setMap.call (this, map);\r\n};\r\n\r\n/** Get Feature at pixel\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n * @return {any} a feature and the hit point\r\n * @private\r\n */\r\nol_interaction_Offset.prototype.getFeatureAtPixel_ = function(e) {\r\n  var self = this;\r\n\treturn this.getMap().forEachFeatureAtPixel(e.pixel,\r\n\t\tfunction(feature, layer) {\r\n      var current;\r\n      if (self._filter && !self._filter(feature, layer)) return false;\r\n\t\t\t// feature belong to a layer\r\n\t\t\tif (self.layers_) {\r\n        for (var i=0; i<self.layers_.length; i++) {\r\n          if (self.layers_[i]===layer) {\r\n            current = feature;\r\n            break;\r\n          }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// feature in the collection\r\n\t\t\telse if (self.features_) {\r\n        self.features_.forEach (function(f) {\r\n          if (f===feature) {\r\n            current = feature \r\n          }\r\n        });\r\n\t\t\t}\r\n\t\t\t// Others\r\n\t\t\telse {\r\n        current = feature;\r\n      }\r\n\r\n      // Only poygon or linestring\r\n      var typeGeom = current.getGeometry().getType();\r\n      if (current && /Polygon|LineString/.test(typeGeom)) {\r\n        if (typeGeom==='Polygon' && current.getGeometry().getCoordinates().length>1) return false;\r\n        // test distance\r\n        var p = current.getGeometry().getClosestPoint(e.coordinate);\r\n        var dx = p[0]-e.coordinate[0];\r\n        var dy = p[1]-e.coordinate[1];\r\n        var d = Math.sqrt(dx*dx+dy*dy) / e.frameState.viewState.resolution;\r\n      \r\n        if (d<5) {\r\n          return { \r\n            feature: current, \r\n            hit: p, \r\n            coordinates: current.getGeometry().getCoordinates(),\r\n            geom: current.getGeometry().clone(),\r\n            geomType: typeGeom\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n\t\t},  { hitTolerance: 5 });\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} e Map browser event.\r\n * @return {boolean} `true` to start the drag sequence.\r\n * @private\r\n */\r\nol_interaction_Offset.prototype.handleDownEvent_ = function(e) {\t\r\n  this.current_ = this.getFeatureAtPixel_(e);\r\n  if (this.current_) {\r\n    this.currentStyle_ = this.current_.feature.getStyle();\r\n    if (this.source_ && (this.get('duplicate') || e.originalEvent.ctrlKey)) {\r\n      this.current_.feature = this.current_.feature.clone();\r\n      this.current_.feature.setStyle(this._style(this.current_.feature));\r\n      this.source_.addFeature(this.current_.feature);\r\n    } else {\r\n      // Modify the current feature\r\n      this.current_.feature.setStyle(this._style(this.current_.feature));\r\n      this._modifystart = true;\r\n    }\r\n    this.dispatchEvent({ type:'offsetstart', feature: this.current_.feature, offset: 0 });\r\n    return true;\r\n  } else  {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} e Map browser event.\r\n * @private\r\n */\r\nol_interaction_Offset.prototype.handleDragEvent_ = function(e) {\r\n  if (this._modifystart) {\r\n    this.dispatchEvent({ type:'modifystart', features: [ this.current_.feature ] });\r\n    this._modifystart = false;\r\n  }\r\n  var p = this.current_.geom.getClosestPoint(e.coordinate);\r\n  var d = ol_coordinate_dist2d(p, e.coordinate);\r\n  var seg, v1, v2, offset;\r\n  switch (this.current_.geomType) {\r\n    case  'Polygon': {\r\n      seg = ol_coordinate_findSegment(p, this.current_.coordinates[0]).segment;\r\n      if (seg) {\r\n        v1 = [ seg[1][0]-seg[0][0], seg[1][1]-seg[0][1] ];\r\n        v2 = [ e.coordinate[0]-p[0], e.coordinate[1]-p[1] ];\r\n        if (v1[0]*v2[1] - v1[1]*v2[0] > 0) {\r\n          d = -d;\r\n        }\r\n\r\n        offset = [];\r\n        for (var i=0; i<this.current_.coordinates.length; i++) {\r\n          offset.push( ol_coordinate_offsetCoords(this.current_.coordinates[i], i==0 ? d : -d) );\r\n        }\r\n        this.current_.feature.setGeometry(new ol_geom_Polygon(offset));\r\n      }\r\n      break;\r\n    }\r\n    case 'LineString': {\r\n      seg = ol_coordinate_findSegment(p, this.current_.coordinates).segment;\r\n      if (seg) {\r\n        v1 = [ seg[1][0]-seg[0][0], seg[1][1]-seg[0][1] ];\r\n        v2 = [ e.coordinate[0]-p[0], e.coordinate[1]-p[1] ];\r\n        if (v1[0]*v2[1] - v1[1]*v2[0] > 0) {\r\n          d = -d;\r\n        }\r\n        offset = ol_coordinate_offsetCoords(this.current_.coordinates, d);\r\n        this.current_.feature.setGeometry(new ol_geom_LineString(offset));\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      break;\r\n    }\r\n  }\r\n  this.dispatchEvent({ type:'offsetting', feature: this.current_.feature, offset: d, segment: [p, e.coordinate], coordinate: e.coordinate });  \r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} e Map browser event.\r\n * @private\r\n */\r\nol_interaction_Offset.prototype.handleUpEvent_ = function(e) {\r\n  if (!this._modifystart) {\r\n    this.dispatchEvent({ type:'offsetend', feature: this.current_.feature, coordinate: e.coordinate }); \r\n  }\r\n  this.current_.feature.setStyle(this.currentStyle_);\r\n  this.current_ = false;\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} e Event.\r\n * @private\r\n */\r\nol_interaction_Offset.prototype.handleMoveEvent_ = function(e) {\t\r\n  var f = this.getFeatureAtPixel_(e);\r\n  if (f) {\r\n    if (this.previousCursor_ === false) {\r\n      this.previousCursor_ = e.map.getTargetElement().style.cursor;\r\n    }\r\n    e.map.getTargetElement().style.cursor = 'pointer';\r\n  } else {\r\n    e.map.getTargetElement().style.cursor = this.previousCursor_;\r\n    this.previousCursor_ = false;\r\n  }\r\n};\r\n\r\nexport default ol_interaction_Offset\r\n","/*\tCopyright (c) 2016 Jean-Marc VIGLINO, \r\n  released under the CeCILL-B license (French BSD license)\r\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\r\n*/\r\n\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_interaction_Interaction from 'ol/interaction/Interaction'\r\nimport ol_style_Style from 'ol/style/Style'\r\nimport ol_style_Stroke from 'ol/style/Stroke'\r\nimport ol_source_Vector from 'ol/source/Vector'\r\nimport ol_style_Fill from 'ol/style/Fill'\r\nimport ol_style_Circle from 'ol/style/Circle'\r\nimport ol_layer_Vector from 'ol/layer/Vector'\r\nimport ol_geom_Point from 'ol/geom/Point'\r\nimport ol_Feature from 'ol/Feature'\r\nimport ol_geom_LineString from 'ol/geom/LineString'\r\nimport {ol_coordinate_dist2d} from \"../geom/GeomUtils\";\r\nimport '../geom/LineStringSplitAt'\r\n\r\n/** Interaction split interaction for splitting feature geometry\r\n * @constructor\r\n * @extends {ol_interaction_Interaction}\r\n * @fires  beforesplit, aftersplit, pointermove\r\n * @param {*} \r\n *  @param {ol.source.Vector|Array<ol.source.Vector>} [options.sources] a list of source to split (configured with useSpatialIndex set to true), if none use map visible layers.\r\n *  @param {ol.Collection.<ol.Feature>} options.features collection of feature to split (instead of a list of sources)\r\n *  @param {integer} options.snapDistance distance (in px) to snap to an object, default 25px\r\n *\t@param {string|undefined} options.cursor cursor name to display when hovering an objet\r\n *  @param {function|undefined} options.filter a filter that takes a feature and return true if it can be clipped, default always split.\r\n *  @param ol_style_Style | Array<ol_style_Style> | false | undefined} options.featureStyle Style for the selected features, choose false if you don't want feature selection. By default the default edit style is used.\r\n *  @param {ol_style_Style | Array<ol_style_Style> | undefined} options.sketchStyle Style for the sektch features. \r\n *  @param {function|undefined} options.tolerance Distance between the calculated intersection and a vertex on the source geometry below which the existing vertex will be used for the split.  Default is 1e-10.\r\n */\r\nvar ol_interaction_Split = function(options) {\r\n  if (!options) options = {};\r\n\r\n  ol_interaction_Interaction.call(this, {\r\n    handleEvent: function(e) {\r\n      switch (e.type) {\r\n        case \"singleclick\":\r\n          return this.handleDownEvent(e);\r\n        case \"pointermove\":\r\n          return this.handleMoveEvent(e);\r\n        default: \r\n          return true;\r\n      }\r\n      //return true;\r\n    }\r\n  });\r\n\r\n  // Snap distance (in px)\r\n  this.snapDistance_ = options.snapDistance || 25;\r\n  // Split tolerance between the calculated intersection and the geometry\r\n  this.tolerance_ = options.tolerance || 1e-10;\r\n  // Cursor\r\n  this.cursor_ = options.cursor;\r\n\r\n  // List of source to split\r\n  this.setSources(options.sources);\r\n\r\n  if (options.features) {\r\n    this.sources_.push (new ol_source_Vector({ features: options.features }));\r\n  }\r\n\r\n  // Get all features candidate\r\n  this.filterSplit_ = options.filter || function(){ return true; };\r\n\r\n  // Default style\r\n  var white = [255, 255, 255, 1];\r\n  var blue = [0, 153, 255, 1];\r\n  var width = 3;\r\n  var fill = new ol_style_Fill({ color: 'rgba(255,255,255,0.4)' });\r\n  var stroke = new ol_style_Stroke({\r\n    color: '#3399CC',\r\n    width: 1.25\r\n  });\r\n  var sketchStyle = [\r\n    new ol_style_Style({\r\n      image: new ol_style_Circle({\r\n        fill: fill,\r\n        stroke: stroke,\r\n        radius: 5\r\n      }),\r\n      fill: fill,\r\n      stroke: stroke\r\n    })\r\n  ];\r\n  var featureStyle = [\r\n    new ol_style_Style({\r\n      stroke: new ol_style_Stroke({\r\n        color: white,\r\n        width: width + 2\r\n      })\r\n    }),\r\n    new ol_style_Style({\r\n      image: new ol_style_Circle({\r\n        radius: 2*width,\r\n        fill: new ol_style_Fill({\r\n          color: blue\r\n        }),\r\n        stroke: new ol_style_Stroke({\r\n          color: white,\r\n          width: width/2\r\n        })\r\n      }),\r\n      stroke: new ol_style_Stroke({\r\n          color: blue,\r\n          width: width\r\n        })\r\n    }),\r\n  ];\r\n\r\n  // Custom style\r\n  if (options.sketchStyle) sketchStyle = options.sketchStyle instanceof Array ? options.sketchStyle : [options.sketchStyle];\r\n  if (options.featureStyle) featureStyle = options.featureStyle instanceof Array ? options.featureStyle : [options.featureStyle];\r\n\r\n  // Create a new overlay for the sketch\r\n  this.overlayLayer_ = new ol_layer_Vector({\r\n    source: new ol_source_Vector({\r\n      useSpatialIndex: false\r\n    }),\r\n    name:'Split overlay',\r\n    displayInLayerSwitcher: false,\r\n    style: function(f) {\r\n      if (f._sketch_) return sketchStyle;\r\n      else return featureStyle;\r\n    }\r\n  });\r\n\r\n};\r\nol_ext_inherits(ol_interaction_Split, ol_interaction_Interaction);\r\n\r\n/**\r\n * Remove the interaction from its current map, if any,  and attach it to a new\r\n * map, if any. Pass `null` to just remove the interaction from the current map.\r\n * @param {ol.Map} map Map.\r\n * @api stable\r\n */\r\nol_interaction_Split.prototype.setMap = function(map) {\r\n  if (this.getMap()) this.getMap().removeLayer(this.overlayLayer_);\r\n  ol_interaction_Interaction.prototype.setMap.call (this, map);\r\n  this.overlayLayer_.setMap(map);\r\n};\r\n\r\n/** Get sources to split features in\r\n * @return {Array<ol.source.Vector>}\r\n */\r\nol_interaction_Split.prototype.getSources = function() {\r\n  if (!this.sources_ && this.getMap()) {\r\n    var sources = []\r\n    function getSources(layers) {\r\n      layers.forEach(function(layer) {\r\n        if (layer.getVisible()) {\r\n          if (layer.getSource && layer.getSource() instanceof ol_source_Vector) {\r\n            sources.unshift(layer.getSource());\r\n          } else if (layer.getLayers) {\r\n            getSources(layer.getLayers());\r\n          }\r\n        }\r\n      })\r\n    }\r\n    getSources(this.getMap().getLayers())\r\n    return sources;\r\n  }\r\n  return this.sources_ || [];\r\n};\r\n\r\n/** Set sources to split features in \r\n * @param {ol.source.Vector|Array<ol.source.Vector>} [sources]\r\n */\r\nol_interaction_Split.prototype.setSources = function(sources) {\r\n  this.sources_ = sources ? (sources instanceof Array ? sources||false : [sources]) : false;\r\n};\r\n\r\n\r\n/** Get closest feature at pixel\r\n * @param {ol.Pixel} \r\n * @return {ol.feature} \r\n * @private\r\n */\r\nol_interaction_Split.prototype.getClosestFeature = function(e) {\r\n  var source, f, c, g, d = this.snapDistance_+1;\r\n  // Look for closest point in the sources\r\n  this.getSources().forEach(function(si) {\r\n    var fi = si.getClosestFeatureToCoordinate(e.coordinate);\r\n    if (fi && fi.getGeometry().splitAt) {\r\n      var ci = fi.getGeometry().getClosestPoint(e.coordinate);\r\n      var gi = new ol_geom_LineString([e.coordinate,ci]);\r\n      var di = gi.getLength() / e.frameState.viewState.resolution;\r\n      if (di < d) {\r\n        source = si;\r\n        d = di;\r\n        f = fi;\r\n        g = gi;\r\n        c = ci;\r\n      }\r\n    }\r\n  });\r\n  // Snap ?\r\n  if (d > this.snapDistance_) {\r\n    return false;\r\n  } else {\r\n    // Snap to node\r\n    var coord = this.getNearestCoord (c, f.getGeometry().getCoordinates());\r\n    var p = this.getMap().getPixelFromCoordinate(coord);\r\n    if (ol_coordinate_dist2d(e.pixel, p) < this.snapDistance_) {\r\n      c = coord;\r\n    }\r\n    //\r\n    return { source:source, feature:f, coord: c, link: g };\r\n  }\r\n}\r\n\r\n/** Get nearest coordinate in a list \r\n* @param {ol.coordinate} pt the point to find nearest\r\n* @param {Array<ol.coordinate>} coords list of coordinates\r\n* @return {ol.coordinate} the nearest coordinate in the list\r\n*/\r\nol_interaction_Split.prototype.getNearestCoord = function(pt, coords) {\r\n  var d, dm=Number.MAX_VALUE, p0;\r\n  for (var i=0; i < coords.length; i++) {\r\n    d = ol_coordinate_dist2d (pt, coords[i]);\r\n    if (d < dm) {\r\n      dm = d;\r\n      p0 = coords[i];\r\n    }\r\n  }\r\n  return p0;\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n * @return {boolean} `true` to start the drag sequence.\r\n */\r\nol_interaction_Split.prototype.handleDownEvent = function(evt) {\r\n  // Something to split ?\r\n  var current = this.getClosestFeature(evt);\r\n\r\n  if (current) {\r\n    var self = this;\r\n    self.overlayLayer_.getSource().clear();\r\n    var split = current.feature.getGeometry().splitAt(current.coord, this.tolerance_);\r\n    var i;\r\n    if (split.length > 1) {\r\n      var tosplit = [];\r\n      for (i=0; i<split.length; i++) {\r\n        var f = current.feature.clone();\r\n        f.setGeometry(split[i]);\r\n        tosplit.push(f);\r\n      }\r\n      self.dispatchEvent({ type:'beforesplit', original: current.feature, features: tosplit });\r\n      current.source.dispatchEvent({ type:'beforesplit', original: current.feature, features: tosplit });\r\n      current.source.removeFeature(current.feature);\r\n      for (i=0; i<tosplit.length; i++) {\r\n        current.source.addFeature(tosplit[i]);\r\n      }\r\n      self.dispatchEvent({ type:'aftersplit', original: current.feature, features: tosplit });\r\n      current.source.dispatchEvent({ type:'aftersplit', original: current.feature, features: tosplit });\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Event.\r\n */\r\nol_interaction_Split.prototype.handleMoveEvent = function(e) {\r\n  var map = e.map;\r\n  this.overlayLayer_.getSource().clear();\r\n  var current = this.getClosestFeature(e);\r\n\r\n  if (current && this.filterSplit_(current.feature)) {\r\n    var p, l;\r\n    // Draw sketch\r\n    this.overlayLayer_.getSource().addFeature(current.feature);\r\n    p = new ol_Feature(new ol_geom_Point(current.coord));\r\n    p._sketch_ = true;\r\n    this.overlayLayer_.getSource().addFeature(p);\r\n    //\r\n    l = new ol_Feature(current.link);\r\n    l._sketch_ = true;\r\n    this.overlayLayer_.getSource().addFeature(l);\r\n    // move event\r\n    this.dispatchEvent({\r\n      type: 'pointermove',\r\n      coordinate: e.coordinate,\r\n      frameState: e.frameState,\r\n      originalEvent: e.originalEvent,\r\n      map: e.map,\r\n      pixel: e.pixel,\r\n      feature: current.feature,\r\n      linkGeometry: current.link\r\n    });\r\n  } else {\r\n    this.dispatchEvent(e);\r\n  }\r\n\r\n  var element = map.getTargetElement();\r\n  if (this.cursor_) {\r\n    if (current) {\r\n      if (element.style.cursor != this.cursor_) {\r\n        this.previousCursor_ = element.style.cursor;\r\n        element.style.cursor = this.cursor_;\r\n      }\r\n    } else if (this.previousCursor_ !== undefined) {\r\n      element.style.cursor = this.previousCursor_;\r\n      this.previousCursor_ = undefined;\r\n    }\r\n  }\r\n};\r\n\r\nexport default ol_interaction_Split\r\n","import ol_ext_inherits from '../util/ext'\r\nimport ol_style_Style from 'ol/style/Style'\r\nimport ol_style_Stroke from 'ol/style/Stroke'\r\nimport ol_source_Vector from 'ol/source/Vector'\r\nimport ol_style_Fill from 'ol/style/Fill'\r\nimport ol_layer_Vector from 'ol/layer/Vector'\r\nimport ol_geom_Point from 'ol/geom/Point'\r\nimport ol_Feature from 'ol/Feature'\r\nimport ol_Collection from 'ol/Collection'\r\nimport ol_interaction_Pointer from 'ol/interaction/Pointer'\r\nimport ol_style_RegularShape from 'ol/style/RegularShape'\r\nimport {fromExtent as ol_geom_Polygon_fromExtent} from 'ol/geom/Polygon'\r\nimport {boundingExtent as ol_extent_boundingExtent, buffer as ol_extent_buffer, createEmpty as ol_extent_createEmpty, extend as ol_extent_extend, getCenter as ol_extent_getCenter} from 'ol/extent'\r\nimport {unByKey as ol_Observable_unByKey} from 'ol/Observable'\r\nimport ol_geom_Polygon from 'ol/geom/Polygon'\r\n\r\n/** Interaction rotate\r\n * @constructor\r\n * @extends {ol_interaction_Pointer}\r\n * @fires select | rotatestart | rotating | rotateend | translatestart | translating | translateend | scalestart | scaling | scaleend\r\n * @param {any} options\r\n *  @param {function} options.filter A function that takes a Feature and a Layer and returns true if the feature may be transformed or false otherwise.\r\n *  @param {Array<ol.Layer>} options.layers array of layers to transform,\r\n *  @param {ol.Collection<ol.Feature>} options.features collection of feature to transform,\r\n *\t@param {ol.EventsConditionType|undefined} options.condition A function that takes an ol.MapBrowserEvent and a feature collection and returns a boolean to indicate whether that event should be handled. default: ol.events.condition.always.\r\n *\t@param {ol.EventsConditionType|undefined} options.addCondition A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether that event should be handled ie. the feature will be added to the transforms features. default: ol.events.condition.never.\r\n *\t@param {number | undefined} options.hitTolerance Tolerance to select feature in pixel, default 0\r\n *\t@param {bool} options.translateFeature Translate when click on feature\r\n *\t@param {bool} options.translate Can translate the feature\r\n *  @param {bool} options.translateBBox Enable translate when the user drags inside the bounding box\r\n *\t@param {bool} options.stretch can stretch the feature\r\n *\t@param {bool} options.scale can scale the feature\r\n *\t@param {bool} options.rotate can rotate the feature\r\n *\t@param {bool} options.noFlip prevent the feature geometry to flip, default false\r\n *\t@param {bool} options.selection the intraction handle selection/deselection, if not use the select prototype to add features to transform, default true\r\n *\t@param {ol.events.ConditionType | undefined} options.keepAspectRatio A function that takes an ol.MapBrowserEvent and returns a boolean to keep aspect ratio, default ol.events.condition.shiftKeyOnly.\r\n *\t@param {ol.events.ConditionType | undefined} options.modifyCenter A function that takes an ol.MapBrowserEvent and returns a boolean to apply scale & strech from the center, default ol.events.condition.metaKey or ol.events.condition.ctrlKey.\r\n *\t@param {boolean} options.enableRotatedTransform Enable transform when map is rotated\r\n *\t@param {boolean} [options.keepRectangle=false] keep rectangle when possible\r\n *\t@param {*} options.style list of ol.style for handles\r\n *  @param {number|Array<number>|function} [options.pointRadius=0] radius for points or a function that takes a feature and returns the radius (or [radiusX, radiusY]). If not null show handles to transform the points\r\n */\r\nvar ol_interaction_Transform = function(options) {\r\n  if (!options) options = {};\r\n\tvar self = this;\r\n\r\n  this.selection_ = new ol_Collection();\r\n\r\n\t// Create a new overlay layer for the sketch\r\n\tthis.handles_ = new ol_Collection();\r\n\tthis.overlayLayer_ = new ol_layer_Vector({\r\n    source: new ol_source_Vector({\r\n      features: this.handles_,\r\n      useSpatialIndex: false,\r\n      wrapX: false // For vector editing across the -180° and 180° meridians to work properly, this should be set to false\r\n    }),\r\n    name:'Transform overlay',\r\n    displayInLayerSwitcher: false,\r\n    // Return the style according to the handle type\r\n    style: function (feature) {\r\n      return (self.style[(feature.get('handle')||'default')+(feature.get('constraint')||'')+(feature.get('option')||'')]);\r\n    },\r\n  });\r\n\r\n  // Extend pointer\r\n  ol_interaction_Pointer.call(this, {\r\n    handleDownEvent: this.handleDownEvent_,\r\n    handleDragEvent: this.handleDragEvent_,\r\n    handleMoveEvent: this.handleMoveEvent_,\r\n    handleUpEvent: this.handleUpEvent_\r\n  });\r\n\r\n  // Collection of feature to transform\r\n  this.features_ = options.features;\r\n  // Filter or list of layers to transform\r\n  if (typeof(options.filter)==='function') this._filter = options.filter;\r\n  this.layers_ = options.layers ? (options.layers instanceof Array) ? options.layers:[options.layers] : null;\r\n\r\n  this._handleEvent = options.condition || function() { return true; };\r\n  this.addFn_ = options.addCondition || function() { return false; };\r\n  this.setPointRadius(options.pointRadius);\r\n  /* Translate when click on feature */\r\n  this.set('translateFeature', (options.translateFeature!==false));\r\n  /* Can translate the feature */\r\n  this.set('translate', (options.translate!==false));\r\n  /* Translate when click on the bounding box */\r\n  this.set('translateBBox', (options.translateBBox===true));\r\n  /* Can stretch the feature */\r\n  this.set('stretch', (options.stretch!==false));\r\n  /* Can scale the feature */\r\n  this.set('scale', (options.scale!==false));\r\n  /* Can rotate the feature */\r\n  this.set('rotate', (options.rotate!==false));\r\n  /* Keep aspect ratio */\r\n  this.set('keepAspectRatio', (options.keepAspectRatio || function(e){ return e.originalEvent.shiftKey }));\r\n  /* Modify center */\r\n  this.set('modifyCenter', (options.modifyCenter || function(e){ return e.originalEvent.metaKey || e.originalEvent.ctrlKey }));\r\n  /* Prevent flip */\r\n  this.set('noFlip', (options.noFlip || false));\r\n  /* Handle selection */\r\n  this.set('selection', (options.selection !== false));\r\n  /*  */\r\n  this.set('hitTolerance', (options.hitTolerance || 0));\r\n  /* Enable view rotated transforms */\r\n  this.set('enableRotatedTransform', (options.enableRotatedTransform || false));\r\n  /* Keep rectangle angles 90 degrees */\r\n  this.set('keepRectangle', (options.keepRectangle || false));\r\n\r\n\r\n  // Force redraw when changed\r\n  this.on ('propertychange', function() {\r\n    this.drawSketch_();\r\n  });\r\n\r\n  // setstyle\r\n  this.setDefaultStyle();\r\n};\r\nol_ext_inherits(ol_interaction_Transform, ol_interaction_Pointer);\r\n\r\n/** Cursors for transform\r\n*/\r\nol_interaction_Transform.prototype.Cursors = {\r\n  'default': 'auto',\r\n  'select': 'pointer',\r\n  'translate': 'move',\r\n  'rotate': 'move',\r\n  'rotate0': 'move',\r\n  'scale': 'nesw-resize',\r\n  'scale1': 'nwse-resize',\r\n  'scale2': 'nesw-resize',\r\n  'scale3': 'nwse-resize',\r\n  'scalev': 'ew-resize',\r\n  'scaleh1': 'ns-resize',\r\n  'scalev2': 'ew-resize',\r\n  'scaleh3': 'ns-resize'\r\n};\r\n\r\n/**\r\n * Remove the interaction from its current map, if any,  and attach it to a new\r\n * map, if any. Pass `null` to just remove the interaction from the current map.\r\n * @param {ol.Map} map Map.\r\n * @api stable\r\n */\r\nol_interaction_Transform.prototype.setMap = function(map) {\r\n  var oldMap = this.getMap();\r\n  if (oldMap) {\r\n    var targetElement = oldMap.getTargetElement();\r\n    oldMap.removeLayer(this.overlayLayer_);\r\n    if (this.previousCursor_ && targetElement) {\r\n      targetElement.style.cursor = this.previousCursor_;\r\n    }\r\n    this.previousCursor_ = undefined;\r\n  }\r\n  ol_interaction_Pointer.prototype.setMap.call (this, map);\r\n  this.overlayLayer_.setMap(map);\r\n  if (map === null) {\r\n    this.select(null);\r\n  }\r\n  if (map !== null) {\r\n    this.isTouch = /touch/.test(map.getViewport().className);\r\n    this.setDefaultStyle();\r\n  }\r\n};\r\n\r\n/**\r\n * Activate/deactivate interaction\r\n * @param {bool}\r\n * @api stable\r\n */\r\nol_interaction_Transform.prototype.setActive = function(b) {\r\n  this.select(null);\r\n  this.overlayLayer_.setVisible(b);\r\n  ol_interaction_Pointer.prototype.setActive.call (this, b);\r\n};\r\n\r\n/** Set default sketch style\r\n * @param {Object|undefined} options\r\n *  @param {ol_style_Stroke} stroke stroke style for selection rectangle\r\n *  @param {ol_style_Fill} fill fill style for selection rectangle\r\n *  @param {ol_style_Stroke} pointStroke stroke style for handles\r\n *  @param {ol_style_Fill} pointFill fill style for handles\r\n */\r\nol_interaction_Transform.prototype.setDefaultStyle = function(options) {\r\n  options = options || {}\r\n  // Style\r\n  var stroke = options.pointStroke || new ol_style_Stroke({ color: [255,0,0,1], width: 1 });\r\n  var strokedash = options.stroke || new ol_style_Stroke({ color: [255,0,0,1], width: 1, lineDash:[4,4] });\r\n  var fill0 = options.fill || new ol_style_Fill({ color:[255,0,0,0.01] });\r\n  var fill = options.pointFill || new ol_style_Fill({ color:[255,255,255,0.8] });\r\n  var circle = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 12 : 6,\r\n      displacement: this.isTouch ? [24, -24] : [12, -12],\r\n      points: 15\r\n    });\r\n  // Old version with no displacement\r\n  if (!circle.setDisplacement) circle.getAnchor()[0] = this.isTouch ? -10 : -5; \r\n  var bigpt = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 16 : 8,\r\n      points: 4,\r\n      angle: Math.PI/4\r\n    });\r\n  var smallpt = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 12 : 6,\r\n      points: 4,\r\n      angle: Math.PI/4\r\n    });\r\n  function createStyle (img, stroke, fill) {\r\n    return [ new ol_style_Style({image:img, stroke:stroke, fill:fill}) ];\r\n  }\r\n  /** Style for handles */\r\n  this.style = {\r\n    'default': createStyle (bigpt, strokedash, fill0),\r\n    'translate': createStyle (bigpt, stroke, fill),\r\n    'rotate': createStyle (circle, stroke, fill),\r\n    'rotate0': createStyle (bigpt, stroke, fill),\r\n    'scale': createStyle (bigpt, stroke, fill),\r\n    'scale1': createStyle (bigpt, stroke, fill),\r\n    'scale2': createStyle (bigpt, stroke, fill),\r\n    'scale3': createStyle (bigpt, stroke, fill),\r\n    'scalev': createStyle (smallpt, stroke, fill),\r\n    'scaleh1': createStyle (smallpt, stroke, fill),\r\n    'scalev2': createStyle (smallpt, stroke, fill),\r\n    'scaleh3': createStyle (smallpt, stroke, fill),\r\n  };\r\n  this.drawSketch_();\r\n}\r\n\r\n/**\r\n * Set sketch style.\r\n * @param {style} style Style name: 'default','translate','rotate','rotate0','scale','scale1','scale2','scale3','scalev','scaleh1','scalev2','scaleh3'\r\n * @param {ol.style.Style|Array<ol.style.Style>} olstyle\r\n * @api stable\r\n */\r\nol_interaction_Transform.prototype.setStyle = function(style, olstyle) {\r\n  if (!olstyle) return;\r\n  if (olstyle instanceof Array) this.style[style] = olstyle;\r\n  else this.style[style] = [ olstyle ];\r\n  for (var i=0; i<this.style[style].length; i++) {\r\n    var im = this.style[style][i].getImage();\r\n    if (im) {\r\n      if (style == 'rotate') {\r\n        im.getAnchor()[0] = -5;\r\n      }\r\n      if (this.isTouch) im.setScale(1.8);\r\n    }\r\n    var tx = this.style[style][i].getText();\r\n    if (tx) {\r\n      if (style == 'rotate') tx.setOffsetX(this.isTouch ? 14 : 7);\r\n      if (this.isTouch) tx.setScale(1.8);\r\n    }\r\n  }\r\n  this.drawSketch_();\r\n};\r\n\r\n/** Get Feature at pixel\r\n * @param {ol.Pixel}\r\n * @return {ol.feature}\r\n * @private\r\n */\r\nol_interaction_Transform.prototype.getFeatureAtPixel_ = function(pixel) {\r\n  var self = this;\r\n  return this.getMap().forEachFeatureAtPixel(pixel,\r\n    function(feature, layer) {\r\n      var found = false;\r\n      // Overlay ?\r\n      if (!layer) {\r\n        if (feature===self.bbox_) {\r\n          if (self.get('translateBBox')) {\r\n            return { feature: feature, handle: 'translate', constraint:'', option: '' };\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n        self.handles_.forEach (function(f) { if (f===feature) found=true; });\r\n        if (found) return { feature: feature, handle:feature.get('handle'), constraint:feature.get('constraint'), option:feature.get('option') };\r\n      }\r\n      // No seletion\r\n      if (!self.get('selection')) {\r\n        // Return the currently selected feature the user is interacting with.\r\n        if (self.selection_.getArray().some(function(f) { return feature === f; })) {\r\n          return { feature: feature };\r\n        }\r\n        return null;\r\n      }\r\n      // filter condition\r\n      if (self._filter) {\r\n        if (self._filter(feature,layer)) return { feature: feature };\r\n        else return null;\r\n      }\r\n      // feature belong to a layer\r\n      else if (self.layers_) {\r\n        for (var i=0; i<self.layers_.length; i++) {\r\n          if (self.layers_[i]===layer) return { feature: feature };\r\n        }\r\n        return null;\r\n      }\r\n      // feature in the collection\r\n      else if (self.features_) {\r\n        self.features_.forEach (function(f) { if (f===feature) found=true; });\r\n        if (found) return { feature: feature };\r\n        else return null;\r\n      }\r\n      // Others\r\n      else return { feature: feature };\r\n    },\r\n    { hitTolerance: this.get('hitTolerance') }\r\n  ) || {};\r\n}\r\n\r\n/** Rotate feature from map view rotation\r\n * @param {ol.Feature} f the feature\r\n * @param {boolean} clone clone resulting geom\r\n * @param {ol.geom.Geometry} rotated geometry\r\n */\r\nol_interaction_Transform.prototype.getGeometryRotateToZero_ = function(f, clone) {\r\n  var origGeom = f.getGeometry();\r\n  var viewRotation = this.getMap().getView().getRotation();\r\n  if (viewRotation === 0 || !this.get('enableRotatedTransform')) {\r\n    return (clone) ? origGeom.clone() : origGeom;\r\n  }\r\n  var rotGeom = origGeom.clone();\r\n  rotGeom.rotate(viewRotation * -1, this.getMap().getView().getCenter());\r\n  return rotGeom;\r\n};\r\n\r\n/** Test if rectangle\r\n * @param {ol.Geometry} geom\r\n * @returns {boolean}\r\n * @private\r\n */\r\nol_interaction_Transform.prototype._isRectangle = function(geom) {\r\n  if (this.get('keepRectangle') && geom.getType() === 'Polygon') {\r\n    var coords = geom.getCoordinates()[0];\r\n    return coords.length === 5;\r\n  }\r\n  return false;\r\n};\r\n\r\n/** Draw transform sketch\r\n* @param {boolean} draw only the center\r\n*/\r\nol_interaction_Transform.prototype.drawSketch_ = function(center) {\r\n  var i, f, geom;\r\n  var keepRectangle = this.selection_.item(0) && this._isRectangle(this.selection_.item(0).getGeometry());\r\n  this.overlayLayer_.getSource().clear();\r\n  if (!this.selection_.getLength()) return;\r\n  var viewRotation = this.getMap().getView().getRotation();\r\n  var ext = this.getGeometryRotateToZero_(this.selection_.item(0)).getExtent();\r\n  var coords;\r\n  if (keepRectangle) {\r\n    coords = this.getGeometryRotateToZero_(this.selection_.item(0)).getCoordinates()[0].slice(0, 4);\r\n    coords.unshift(coords[3]);\r\n  }\r\n  // Clone and extend\r\n  ext = ol_extent_buffer(ext, 0);\r\n  this.selection_.forEach(function (f) {\r\n    var extendExt = this.getGeometryRotateToZero_(f).getExtent();\r\n    ol_extent_extend(ext, extendExt);\r\n  }.bind(this));\r\n\r\n  var ptRadius = (this.selection_.getLength() === 1 ? this._pointRadius(this.selection_.item(0)) : 0);\r\n  if (ptRadius && !(ptRadius instanceof Array)) ptRadius = [ptRadius, ptRadius];\r\n\r\n  if (center===true) {\r\n    if (!this.ispt_) {\r\n      this.overlayLayer_.getSource().addFeature(new ol_Feature( { geometry: new ol_geom_Point(this.center_), handle:'rotate0' }) );\r\n      geom = ol_geom_Polygon_fromExtent(ext);\r\n      if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n        geom.rotate(viewRotation, this.getMap().getView().getCenter())\r\n      }\r\n      f = this.bbox_ = new ol_Feature(geom);\r\n      this.overlayLayer_.getSource().addFeature (f);\r\n    }\r\n  } else {\r\n    if (this.ispt_) {\r\n      // Calculate extent arround the point\r\n      var p = this.getMap().getPixelFromCoordinate([ext[0], ext[1]]);\r\n      if (p) {\r\n        var dx = ptRadius ? ptRadius[0] || 10 : 10;\r\n        var dy = ptRadius ? ptRadius[1] || 10 : 10;\r\n        ext = ol_extent_boundingExtent([\r\n          this.getMap().getCoordinateFromPixel([p[0] - dx, p[1] - dy]),\r\n          this.getMap().getCoordinateFromPixel([p[0] + dx, p[1] + dy])\r\n        ]);\r\n      }\r\n    }\r\n    geom = keepRectangle ? new ol_geom_Polygon([coords]) : ol_geom_Polygon_fromExtent(ext);\r\n    if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n      geom.rotate(viewRotation, this.getMap().getView().getCenter())\r\n    }\r\n    f = this.bbox_ = new ol_Feature(geom);\r\n    var features = [];\r\n    var g = geom.getCoordinates()[0];\r\n    if (!this.ispt_ || ptRadius) {\r\n      features.push(f);\r\n      // Middle\r\n      if (!this.iscircle_ && !this.ispt_ && this.get('stretch') && this.get('scale')) for (i=0; i<g.length-1; i++) {\r\n        f = new ol_Feature( { geometry: new ol_geom_Point([(g[i][0]+g[i+1][0])/2,(g[i][1]+g[i+1][1])/2]), handle:'scale', constraint:i%2?\"h\":\"v\", option:i });\r\n        features.push(f);\r\n      }\r\n      // Handles\r\n      if (this.get('scale')) for (i=0; i<g.length-1; i++) {\r\n        f = new ol_Feature( { geometry: new ol_geom_Point(g[i]), handle:'scale', option:i });\r\n        features.push(f);\r\n      }\r\n      // Center\r\n      if (this.get('translate') && !this.get('translateFeature')) {\r\n        f = new ol_Feature( { geometry: new ol_geom_Point([(g[0][0]+g[2][0])/2, (g[0][1]+g[2][1])/2]), handle:'translate' });\r\n        features.push(f);\r\n      }\r\n    }\r\n    // Rotate\r\n    if (!this.iscircle_ && this.get('rotate')) {\r\n      f = new ol_Feature( { geometry: new ol_geom_Point(g[3]), handle:'rotate' });\r\n      features.push(f);\r\n    }\r\n    // Add sketch\r\n    this.overlayLayer_.getSource().addFeatures(features);\r\n  }\r\n\r\n};\r\n\r\n/** Select a feature to transform\r\n* @param {ol.Feature} feature the feature to transform\r\n* @param {boolean} add true to add the feature to the selection, default false\r\n*/\r\nol_interaction_Transform.prototype.select = function(feature, add) {\r\n  if (!feature) {\r\n    this.selection_.clear();\r\n    this.drawSketch_();\r\n    return;\r\n  }\r\n  if (!feature.getGeometry || !feature.getGeometry()) return;\r\n  // Add to selection\r\n  if (add) {\r\n    this.selection_.push(feature);\r\n  } else {\r\n\tvar index = this.selection_.getArray().indexOf(feature);\r\n\tthis.selection_.removeAt(index);\r\n  }\r\n  this.ispt_ = (this.selection_.getLength()===1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false);\r\n  this.iscircle_ = (this.selection_.getLength()===1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false);\r\n  this.drawSketch_();\r\n  this.watchFeatures_();\r\n  // select event\r\n  this.dispatchEvent({ type:'select', feature: feature, features: this.selection_ });\r\n};\r\n\r\n/** Update the selection collection.\r\n* @param {ol.Collection<ol.Feature>} features the features to transform\r\n*/\r\nol_interaction_Transform.prototype.setSelection = function(features) {\r\n  this.selection_.clear();\r\n  features.forEach(function(feature) {\r\n    this.selection_.push(feature);\r\n  }.bind(this));\r\n\r\n  this.ispt_ = (this.selection_.getLength()===1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false);\r\n  this.iscircle_ = (this.selection_.getLength()===1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false);\r\n  this.drawSketch_();\r\n  this.watchFeatures_();\r\n  // select event\r\n  this.dispatchEvent({ type:'select', features: this.selection_ });\r\n};\r\n\r\n/** Watch selected features\r\n * @private\r\n */\r\nol_interaction_Transform.prototype.watchFeatures_ = function() {\r\n  // Listen to feature modification\r\n  if (this._featureListeners) {\r\n    this._featureListeners.forEach(function (l) {\r\n      ol_Observable_unByKey(l)\r\n    });\r\n  }\r\n  this._featureListeners = [];\r\n  this.selection_.forEach(function(f) {\r\n    this._featureListeners.push(\r\n      f.on('change', function() {\r\n        if (!this.isUpdating_) {\r\n          this.drawSketch_();\r\n        }\r\n      }.bind(this))\r\n    );\r\n  }.bind(this));\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n * @return {boolean} `true` to start the drag sequence.\r\n * @private\r\n */\r\nol_interaction_Transform.prototype.handleDownEvent_ = function(evt) {\r\n  if (!this._handleEvent(evt, this.selection_)) return;\r\n  var sel = this.getFeatureAtPixel_(evt.pixel);\r\n  var feature = sel.feature;\r\n  if (this.selection_.getLength()\r\n    && this.selection_.getArray().indexOf(feature) >= 0\r\n    && ((this.ispt_ && this.get('translate')) || this.get('translateFeature'))\r\n  ){\r\n    sel.handle = 'translate';\r\n  }\r\n  if (sel.handle) {\r\n    this.mode_ = sel.handle;\r\n    this.opt_ = sel.option;\r\n    this.constraint_ = sel.constraint;\r\n    // Save info\r\n    var viewRotation = this.getMap().getView().getRotation();\r\n    this.coordinate_ = evt.coordinate;\r\n    this.pixel_ = evt.pixel;\r\n    this.geoms_ = [];\r\n    this.rotatedGeoms_ = [];\r\n    var extent = ol_extent_createEmpty();\r\n    var rotExtent = ol_extent_createEmpty();\r\n    for (var i=0, f; f=this.selection_.item(i); i++) {\r\n      this.geoms_.push(f.getGeometry().clone());\r\n      extent = ol_extent_extend(extent, f.getGeometry().getExtent());\r\n      if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n        var rotGeom = this.getGeometryRotateToZero_(f, true);\r\n        this.rotatedGeoms_.push(rotGeom);\r\n        rotExtent = ol_extent_extend(rotExtent, rotGeom.getExtent());\r\n      }\r\n    }\r\n    this.extent_ = (ol_geom_Polygon_fromExtent(extent)).getCoordinates()[0];\r\n    if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n      this.rotatedExtent_ = (ol_geom_Polygon_fromExtent(rotExtent)).getCoordinates()[0];\r\n    }\r\n    if (this.mode_==='rotate') {\r\n      this.center_ = this.getCenter() || ol_extent_getCenter(extent);\r\n      // we are now rotating (cursor down on rotate mode), so apply the grabbing cursor\r\n      var element = evt.map.getTargetElement();\r\n      element.style.cursor = this.Cursors.rotate0;\r\n      this.previousCursor_ = element.style.cursor;\r\n    } else {\r\n      this.center_ = ol_extent_getCenter(extent);\r\n    }\r\n    this.angle_ = Math.atan2(this.center_[1]-evt.coordinate[1], this.center_[0]-evt.coordinate[0]);\r\n\r\n    this.dispatchEvent({\r\n      type: this.mode_+'start',\r\n      feature: this.selection_.item(0), // backward compatibility\r\n      features: this.selection_,\r\n      pixel: evt.pixel,\r\n      coordinate: evt.coordinate\r\n    });\r\n    return true;\r\n  }\r\n  else if (this.get('selection')) {\r\n    if (feature){\r\n      if (!this.addFn_(evt)) this.selection_.clear();\r\n      var index = this.selection_.getArray().indexOf(feature);\r\n      if (index < 0) this.selection_.push(feature);\r\n      else this.selection_.removeAt(index);\r\n    } else {\r\n      this.selection_.clear();\r\n    }\r\n    this.ispt_ = this.selection_.getLength()===1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false;\r\n    this.iscircle_ = (this.selection_.getLength()===1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false);\r\n    this.drawSketch_();\r\n    this.watchFeatures_();\r\n    this.dispatchEvent({ type:'select', feature: feature, features: this.selection_, pixel: evt.pixel, coordinate: evt.coordinate });\r\n    return false;\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Get features to transform\r\n * @return {ol.Collection<ol.Feature>}\r\n */\r\nol_interaction_Transform.prototype.getFeatures = function() {\r\n  return this.selection_;\r\n};\r\n\r\n/**\r\n * Get the rotation center\r\n * @return {ol.coordinates|undefined}\r\n */\r\nol_interaction_Transform.prototype.getCenter = function() {\r\n  return this.get('center');\r\n};\r\n\r\n/**\r\n * Set the rotation center\r\n * @param {ol.coordinates|undefined} c the center point, default center on the objet\r\n */\r\nol_interaction_Transform.prototype.setCenter = function(c) {\r\n  return this.set('center', c);\r\n}\r\n\r\nfunction projectVectorOnVector(displacement_vector, base) {\r\n  var k = (displacement_vector[0] * base[0] + displacement_vector[1] * base[1]) / (base[0] * base[0] + base[1] * base[1]);\r\n  return [base[0] * k, base[1] * k];\r\n}\r\n\r\nfunction countVector(start, end) {\r\n  return [end[0] - start[0], end[1] - start[1]];\r\n}\r\n\r\nfunction movePoint(point, displacementVector) {\r\n  return [point[0]+displacementVector[0], point[1]+displacementVector[1]];\r\n}\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n * @private\r\n */\r\nol_interaction_Transform.prototype.handleDragEvent_ = function(evt) {\r\n  if (!this._handleEvent(evt, this.features_)) return;\r\n  var viewRotation = this.getMap().getView().getRotation();\r\n  var i, j, f, geometry;\r\n  var pt0 = [this.coordinate_[0], this.coordinate_[1]];\r\n  var pt = [evt.coordinate[0], evt.coordinate[1]];\r\n  this.isUpdating_ = true;\r\n  switch (this.mode_) {\r\n    case 'rotate': {\r\n      var a = Math.atan2(this.center_[1]-pt[1], this.center_[0]-pt[0]);\r\n      if (!this.ispt) {\r\n        // var geometry = this.geom_.clone();\r\n        // geometry.rotate(a-this.angle_, this.center_);\r\n        // this.feature_.setGeometry(geometry);\r\n        for (i=0, f; f=this.selection_.item(i); i++) {\r\n          geometry = this.geoms_[i].clone();\r\n          geometry.rotate(a - this.angle_, this.center_);\r\n          // bug: ol, bad calculation circle geom extent\r\n          if (geometry.getType() == 'Circle') geometry.setCenterAndRadius(geometry.getCenter(), geometry.getRadius());\r\n          f.setGeometry(geometry);\r\n        }\r\n      }\r\n      this.drawSketch_(true);\r\n      this.dispatchEvent({\r\n        type:'rotating',\r\n        feature: this.selection_.item(0),\r\n        features: this.selection_,\r\n        angle: a-this.angle_,\r\n        pixel: evt.pixel,\r\n        coordinate: evt.coordinate\r\n      });\r\n      break;\r\n    }\r\n    case 'translate': {\r\n      var deltaX = pt[0] - pt0[0];\r\n      var deltaY = pt[1] - pt0[1];\r\n\r\n      //this.feature_.getGeometry().translate(deltaX, deltaY);\r\n      for (i=0, f; f=this.selection_.item(i); i++) {\r\n        f.getGeometry().translate(deltaX, deltaY);\r\n      }\r\n      this.handles_.forEach(function(f) {\r\n        f.getGeometry().translate(deltaX, deltaY);\r\n      });\r\n\r\n      this.coordinate_ = evt.coordinate;\r\n      this.dispatchEvent({\r\n        type:'translating',\r\n        feature: this.selection_.item(0),\r\n        features: this.selection_,\r\n        delta:[deltaX,deltaY],\r\n        pixel: evt.pixel,\r\n        coordinate: evt.coordinate\r\n      });\r\n      break;\r\n    }\r\n    case 'scale': {\r\n      var center = this.center_;\r\n      if (this.get('modifyCenter')(evt)) {\r\n        var extentCoordinates = this.extent_;\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          extentCoordinates = this.rotatedExtent_;\r\n        }\r\n        center = extentCoordinates[(Number(this.opt_)+2)%4];\r\n      }\r\n      var keepRectangle = (this.geoms_.length == 1 && this._isRectangle(this.geoms_[0]));\r\n      var stretch = this.constraint_;\r\n      var opt = this.opt_;\r\n\r\n      var downCoordinate = this.coordinate_;\r\n      var dragCoordinate = evt.coordinate;\r\n      if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n        var downPoint = new ol_geom_Point(this.coordinate_);\r\n        downPoint.rotate(viewRotation * -1, center);\r\n        downCoordinate = downPoint.getCoordinates();\r\n\r\n        var dragPoint = new ol_geom_Point(evt.coordinate);\r\n        dragPoint.rotate(viewRotation * -1, center);\r\n        dragCoordinate = dragPoint.getCoordinates();\r\n      }\r\n\r\n      var scx = ((dragCoordinate)[0] - (center)[0]) / (downCoordinate[0] - (center)[0]);\r\n      var scy = ((dragCoordinate)[1] - (center)[1]) / (downCoordinate[1] - (center)[1]);\r\n      var displacementVector = [dragCoordinate[0] - downCoordinate[0], (dragCoordinate)[1] - downCoordinate[1]];\r\n\r\n      if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n        var centerPoint = new ol_geom_Point(center);\r\n        centerPoint.rotate(viewRotation * -1, this.getMap().getView().getCenter());\r\n        center = centerPoint.getCoordinates();\r\n      }\r\n\r\n      if (this.get('noFlip')) {\r\n        if (scx<0) scx=-scx;\r\n        if (scy<0) scy=-scy;\r\n      }\r\n\r\n      if (this.constraint_) {\r\n        if (this.constraint_==\"h\") scx=1;\r\n        else scy=1;\r\n      } else {\r\n        if (this.get('keepAspectRatio')(evt)) {\r\n          scx = scy = Math.min(scx,scy);\r\n        }\r\n      }\r\n\r\n      for (i=0, f; f=this.selection_.item(i); i++) {\r\n        geometry = (viewRotation === 0 || !this.get('enableRotatedTransform')) ? this.geoms_[i].clone() : this.rotatedGeoms_[i].clone();\r\n        geometry.applyTransform(function(g1, g2, dim) {\r\n          if (dim<2) return g2;\r\n\r\n          if (!keepRectangle) {\r\n            for (j=0; j<g1.length; j+=dim) {\r\n              if (scx!=1) g2[j] = center[0] + (g1[j]-center[0])*scx;\r\n              if (scy!=1) g2[j+1] = center[1] + (g1[j+1]-center[1])*scy;\r\n            }\r\n          } else {\r\n            var pointArray = [[6], [0, 8], [2], [4]]\r\n            var pointA = [g1[0], g1[1]];\r\n            var pointB = [g1[2], g1[3]];\r\n            var pointC = [g1[4], g1[5]];\r\n            var pointD = [g1[6], g1[7]];\r\n            var pointA1 = [g1[8], g1[9]];\r\n\r\n            if (stretch) {\r\n              var base = (opt % 2 === 0) ? countVector(pointA, pointB) : countVector(pointD, pointA);\r\n              var projectedVector = projectVectorOnVector(displacementVector, base);\r\n              var nextIndex = opt+1 < pointArray.length ? opt+1 : 0;\r\n              var coordsToChange = [...pointArray[opt], ...pointArray[nextIndex]];\r\n\r\n              for (j = 0; j < g1.length; j += dim) {\r\n                  g2[j] = coordsToChange.includes(j) ? g1[j] + projectedVector[0] : g1[j];\r\n                  g2[j + 1] = coordsToChange.includes(j) ? g1[j + 1] + projectedVector[1] : g1[j + 1];\r\n              }\r\n            } else {\r\n              var projectedLeft, projectedRight;\r\n              switch (opt) {\r\n                case 0:\r\n                  displacementVector = countVector(pointD, dragCoordinate);\r\n                  projectedLeft = projectVectorOnVector(displacementVector, countVector(pointC, pointD));\r\n                  projectedRight = projectVectorOnVector(displacementVector, countVector(pointA, pointD));\r\n                  [g2[0], g2[1]] = movePoint(pointA, projectedLeft);\r\n                  [g2[4], g2[5]] = movePoint(pointC, projectedRight);\r\n                  [g2[6], g2[7]] = movePoint(pointD, displacementVector);\r\n                  [g2[8], g2[9]] = movePoint(pointA1, projectedLeft);\r\n                  break;\r\n                case 1:\r\n                  displacementVector = countVector(pointA, dragCoordinate);\r\n                  projectedLeft = projectVectorOnVector(displacementVector, countVector(pointD, pointA));\r\n                  projectedRight = projectVectorOnVector(displacementVector, countVector(pointB, pointA));\r\n                  [g2[0], g2[1]] = movePoint(pointA, displacementVector);\r\n                  [g2[2], g2[3]] = movePoint(pointB, projectedLeft);\r\n                  [g2[6], g2[7]] = movePoint(pointD, projectedRight);\r\n                  [g2[8], g2[9]] = movePoint(pointA1, displacementVector);\r\n                  break;\r\n                case 2:\r\n                  displacementVector = countVector(pointB, dragCoordinate);\r\n                  projectedLeft = projectVectorOnVector(displacementVector, countVector(pointA, pointB));\r\n                  projectedRight = projectVectorOnVector(displacementVector, countVector(pointC, pointB));\r\n                  [g2[0], g2[1]] = movePoint(pointA, projectedRight);\r\n                  [g2[2], g2[3]] = movePoint(pointB, displacementVector);\r\n                  [g2[4], g2[5]] = movePoint(pointC, projectedLeft);\r\n                  [g2[8], g2[9]] = movePoint(pointA1, projectedRight);\r\n                  break;\r\n                case 3:\r\n                  displacementVector = countVector(pointC, dragCoordinate);\r\n                  projectedLeft = projectVectorOnVector(displacementVector, countVector(pointB, pointC));\r\n                  projectedRight = projectVectorOnVector(displacementVector, countVector(pointD, pointC));\r\n                  [g2[2], g2[3]] = movePoint(pointB, projectedRight);\r\n                  [g2[4], g2[5]] = movePoint(pointC, displacementVector);\r\n                  [g2[6], g2[7]] = movePoint(pointD, projectedLeft);\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n\r\n          // bug: ol, bad calculation circle geom extent\r\n          if (geometry.getType() == 'Circle') geometry.setCenterAndRadius(geometry.getCenter(), geometry.getRadius());\r\n          return g2;\r\n        });\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          //geometry.rotate(viewRotation, rotationCenter);\r\n          geometry.rotate(viewRotation, this.getMap().getView().getCenter());\r\n        }\r\n        f.setGeometry(geometry);\r\n      }\r\n      this.drawSketch_();\r\n      this.dispatchEvent({\r\n        type:'scaling',\r\n        feature: this.selection_.item(0),\r\n        features: this.selection_,\r\n        scale:[scx,scy],\r\n        pixel: evt.pixel,\r\n        coordinate: evt.coordinate\r\n      });\r\n      break;\r\n    }\r\n    default: break;\r\n  }\r\n  this.isUpdating_ = false;\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Event.\r\n * @private\r\n */\r\nol_interaction_Transform.prototype.handleMoveEvent_ = function(evt) {\r\n  if (!this._handleEvent(evt, this.features_)) return;\r\n  // console.log(\"handleMoveEvent\");\r\n  if (!this.mode_) {\r\n    var sel = this.getFeatureAtPixel_(evt.pixel);\r\n    var element = evt.map.getTargetElement();\r\n    if (sel.feature) {\r\n      var c = sel.handle ? this.Cursors[(sel.handle||'default')+(sel.constraint||'')+(sel.option||'')] : this.Cursors.select;\r\n\r\n      if (this.previousCursor_===undefined) {\r\n        this.previousCursor_ = element.style.cursor;\r\n      }\r\n      element.style.cursor = c;\r\n    } else {\r\n      if (this.previousCursor_!==undefined) element.style.cursor = this.previousCursor_;\r\n      this.previousCursor_ = undefined;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * @param {ol.MapBrowserEvent} evt Map browser event.\r\n * @return {boolean} `false` to stop the drag sequence.\r\n */\r\nol_interaction_Transform.prototype.handleUpEvent_ = function(evt) {\r\n  // remove rotate0 cursor on Up event, otherwise it's stuck on grab/grabbing\r\n  if (this.mode_ === 'rotate') {\r\n    var element = evt.map.getTargetElement();\r\n    element.style.cursor = this.Cursors.default;\r\n    this.previousCursor_ = undefined;\r\n  }\r\n\r\n  //dispatchEvent\r\n  this.dispatchEvent({\r\n    type:this.mode_+'end',\r\n    feature: this.selection_.item(0),\r\n    features: this.selection_,\r\n    oldgeom: this.geoms_[0],\r\n    oldgeoms: this.geoms_\r\n  });\r\n\r\n  this.drawSketch_();\r\n  this.mode_ = null;\r\n  return false;\r\n};\r\n\r\n/** Get the features that are selected for transform\r\n * @return ol.Collection\r\n */\r\nol_interaction_Transform.prototype.getFeatures = function() {\r\n  return this.selection_;\r\n};\r\n\r\n/** Set the point radius to calculate handles on points\r\n *  @param {number|Array<number>|function} [pointRadius=0] radius for points or a function that takes a feature and returns the radius (or [radiusX, radiusY]). If not null show handles to transform the points\r\n */\r\nol_interaction_Transform.prototype.setPointRadius = function(pointRadius) {\r\n  if (typeof(pointRadius)==='function') {\r\n    this._pointRadius = pointRadius;\r\n  } else {\r\n    this._pointRadius = function(){ return pointRadius };\r\n  }\r\n};\r\n\r\n\r\nexport default ol_interaction_Transform\r\n","import ol_source_Vector from 'ol/source/Vector'\r\n\r\n(function () {\r\n  var clear = ol_source_Vector.prototype.clear;\r\n\r\n  /** Overwrite ol/source/Vector clear to fire clearstart / clearend event\r\n   */\r\n  ol_source_Vector.prototype.clear = function(opt_fast) {\r\n    this.dispatchEvent({ type: 'clearstart' });\r\n    clear.call(this, opt_fast)\r\n    this.dispatchEvent({ type: 'clearend' });\r\n  };\r\n})();\r\n","import ol_ext_inherits from '../util/ext'\r\nimport ol_Collection from 'ol/Collection'\r\nimport ol_interaction_Interaction from 'ol/interaction/Interaction'\r\nimport ol_layer_Vector from 'ol/layer/Vector'\r\nimport {unByKey as ol_Observable_unByKey} from 'ol/Observable'\r\nimport '../source/Vector' \r\n\r\n/** Undo/redo interaction\r\n * @constructor\r\n * @extends {ol_interaction_Interaction}\r\n * @fires undo\r\n * @fires redo\r\n * @fires change:add\r\n * @fires change:remove\r\n * @fires change:clear\r\n * @param {Object} options\r\n *  @param {number=} options.maxLength max undo stack length (0=Infinity), default Infinity\r\n *  @param {Array<ol.Layer>} options.layers array of layers to undo/redo\r\n */\r\nvar ol_interaction_UndoRedo = function(options) {\r\n  if (!options) options = {};\r\n\r\n\tol_interaction_Interaction.call(this, {\t\r\n    handleEvent: function() { \r\n      return true; \r\n    }\r\n  });\r\n\r\n  //array of layers to undo/redo\r\n  this._layers = options.layers\r\n\r\n  this._undoStack = new ol_Collection();\r\n  this._redoStack = new ol_Collection();\r\n  // Zero level stack\r\n  this._undo = [];\r\n  this._redo = [];\r\n  this._undoStack.on('add', function(e) {\r\n    if (e.element.level === undefined) {\r\n      e.element.level = this._level;\r\n      if (!e.element.level) {\r\n        e.element.view = {\r\n          center: this.getMap().getView().getCenter(),\r\n          zoom: this.getMap().getView().getZoom()\r\n        };\r\n        this._undo.push(e.element);\r\n      }\r\n    } else {\r\n      if (!e.element.level) this._undo.push(this._redo.shift());\r\n    }\r\n    if (!e.element.level) {\r\n      this.dispatchEvent({ \r\n        type: 'stack:add', \r\n        action: e.element\r\n      });\r\n    }\r\n    this._reduce();\r\n  }.bind(this));\r\n  this._undoStack.on('remove', function(e) {\r\n    if (!e.element.level) {\r\n      if (this._doShift) {\r\n        this._undo.shift();\r\n      } else {\r\n        if (this._undo.length) this._redo.push(this._undo.pop());\r\n      }\r\n      if (!this._doClear) {\r\n        this.dispatchEvent({ \r\n          type: 'stack:remove', \r\n          action: e.element,\r\n          shift: this._doShift\r\n        });\r\n      }\r\n    }\r\n  }.bind(this));\r\n  // Block counter\r\n  this._block = 0;\r\n  this._level = 0;\r\n  // Shift an undo action ?\r\n  this._doShift = false;\r\n  // Start recording\r\n  this._record = true;\r\n  // Custom definitions\r\n  this._defs = {};\r\n};\r\nol_ext_inherits(ol_interaction_UndoRedo, ol_interaction_Interaction);\r\n\r\n/** Add a custom undo/redo\r\n * @param {string} action the action key name\r\n * @param {function} undoFn function called when undoing\r\n * @param {function} redoFn function called when redoing\r\n * @api\r\n */\r\nol_interaction_UndoRedo.prototype.define = function(action, undoFn, redoFn) {\r\n  this._defs[action] = { undo: undoFn, redo: redoFn };\r\n};\r\n\r\n/** Get first level undo / redo length\r\n * @param {string} [type] get redo stack length, default get undo\r\n * @return {number}\r\n */\r\nol_interaction_UndoRedo.prototype.length = function(type) {\r\n  return (type==='redo') ? this._redo.length : this._undo.length;\r\n};\r\n\r\n/** Set undo stack max length\r\n * @param {number} length\r\n */\r\nol_interaction_UndoRedo.prototype.setMaxLength = function(length) {\r\n  length = parseInt(length);\r\n  if (length && length<0) length = 0;\r\n  this.set('maxLength', length);\r\n  this._reduce();\r\n};\r\n\r\n/** Get undo / redo size (includes all block levels)\r\n * @param {string} [type] get redo stack length, default get undo\r\n * @return {number}\r\n */\r\nol_interaction_UndoRedo.prototype.size = function(type) {\r\n  return (type==='redo') ? this._redoStack.getLength() : this._undoStack.getLength();\r\n};\r\n\r\n/** Set undo stack max size\r\n * @param {number} size\r\n */\r\nol_interaction_UndoRedo.prototype.setMaxSize = function(size) {\r\n  size = parseInt(size);\r\n  if (size && size<0) size = 0;\r\n  this.set('maxSize', size);\r\n  this._reduce();\r\n};\r\n\r\n/** Reduce stack: shift undo to set size\r\n * @private\r\n */\r\nol_interaction_UndoRedo.prototype._reduce = function() {\r\n  if (this.get('maxLength')) {\r\n    while (this.length() > this.get('maxLength')) {\r\n      this.shift();\r\n    }\r\n  }\r\n  if (this.get('maxSize')) {\r\n    while (this.length() > 1 && this.size() > this.get('maxSize')) {\r\n      this.shift();\r\n    }\r\n  }\r\n};\r\n\r\n/** Get first level undo / redo first level stack\r\n * @param {string} [type] get redo stack, default get undo\r\n * @return {Array<*>}\r\n */\r\nol_interaction_UndoRedo.prototype.getStack = function(type) {\r\n  return (type==='redo') ? this._redo : this._undo;\r\n};\r\n\r\n/** Add a new custom undo/redo\r\n * @param {string} action the action key name\r\n * @param {any} prop an object that will be passed in the undo/redo functions of the action\r\n * @param {string} name action name\r\n * @return {boolean} true if the action is defined\r\n */\r\nol_interaction_UndoRedo.prototype.push = function(action, prop, name) {\r\n  if (this._defs[action]) {\r\n    this._undoStack.push({ \r\n      type: action,\r\n      name: name,\r\n      custom: true,\r\n      prop: prop \r\n    });\r\n    return true;\r\n  } else {\r\n    console.warn('[UndoRedoInteraction]: \"'+action+'\" is not defined.');\r\n    return false;\r\n  }\r\n};\r\n\r\n/** Remove undo action from the beginning of the stack. \r\n * The action is not returned.\r\n */\r\nol_interaction_UndoRedo.prototype.shift = function() {\r\n  this._doShift = true;\r\n  var a = this._undoStack.removeAt(0);\r\n  this._doShift = false;\r\n  // Remove all block\r\n  if (a.type==='blockstart') {\r\n    a = this._undoStack.item(0);\r\n    while (this._undoStack.getLength() && a.level>0) {\r\n      this._undoStack.removeAt(0);\r\n      a = this._undoStack.item(0);\r\n    }\r\n  }\r\n};\r\n\r\n/** Activate or deactivate the interaction, ie. records or not events on the map.\r\n * @param {boolean} active\r\n * @api stable\r\n */\r\nol_interaction_UndoRedo.prototype.setActive = function(active) {\r\n  ol_interaction_Interaction.prototype.setActive.call (this, active);\r\n  this._record = active;\r\n};\r\n\r\n/**\r\n * Remove the interaction from its current map, if any, and attach it to a new\r\n * map, if any. Pass `null` to just remove the interaction from the current map.\r\n * @param {ol.Map} map Map.\r\n * @api stable\r\n */\r\nol_interaction_UndoRedo.prototype.setMap = function(map) {\r\n  if (this._mapListener) {\r\n    this._mapListener.forEach(function(l) { ol_Observable_unByKey(l); })\r\n  }\r\n  this._mapListener = [];\r\n  ol_interaction_Interaction.prototype.setMap.call (this, map);\r\n  // Watch blocks\r\n  if (map) {\r\n    this._mapListener.push(map.on('undoblockstart', this.blockStart.bind(this)));\r\n    this._mapListener.push(map.on('undoblockend', this.blockEnd.bind(this)));\r\n  }\r\n  // Watch sources\r\n  this._watchSources();\r\n  this._watchInteractions();\r\n};\r\n\r\n/** Watch for changes in the map sources\r\n * @private\r\n */\r\nol_interaction_UndoRedo.prototype._watchSources = function() {\r\n  var map = this.getMap();\r\n  // Clear listeners\r\n  if (this._sourceListener) {\r\n    this._sourceListener.forEach(function(l) { ol_Observable_unByKey(l); })\r\n  }\r\n  this._sourceListener = [];\r\n  \r\n  var self = this;\r\n\r\n  // Ges vector layers \r\n  function getVectorLayers(layers, init) {\r\n    if (!init) init = [];\r\n    layers.forEach(function(l) {\r\n      if (l instanceof ol_layer_Vector) {\r\n        if (!self._layers || self._layers.indexOf(l) >= 0) {\r\n          init.push(l);\r\n        }\r\n      } else if (l.getLayers) {\r\n        getVectorLayers(l.getLayers(), init);\r\n      }\r\n    });\r\n    return init;\r\n  }\r\n\r\n  if (map) {\r\n    // Watch the vector sources in the map \r\n    var vectors = getVectorLayers(map.getLayers());\r\n    vectors.forEach((function(l) {\r\n      var s = l.getSource();\r\n      this._sourceListener.push( s.on(['addfeature', 'removefeature'], this._onAddRemove.bind(this)) );\r\n      this._sourceListener.push( s.on('clearstart', function() {\r\n        this.blockStart('clear')\r\n      }.bind(this)));\r\n      this._sourceListener.push( s.on('clearend', this.blockEnd.bind(this)) );\r\n    }).bind(this));\r\n\r\n    // Watch new inserted/removed\r\n    this._sourceListener.push( map.getLayers().on(['add', 'remove'], this._watchSources.bind(this) ) );\r\n  }\r\n};\r\n\r\n/** Watch for interactions\r\n * @private\r\n */\r\nol_interaction_UndoRedo.prototype._watchInteractions = function() {\r\n  var map = this.getMap();\r\n  // Clear listeners\r\n  if (this._interactionListener) {\r\n    this._interactionListener.forEach(function(l) { ol_Observable_unByKey(l); })\r\n  }\r\n  this._interactionListener = [];\r\n\r\n  if (map) {\r\n    // Watch the interactions in the map \r\n    map.getInteractions().forEach((function(i) {\r\n      this._interactionListener.push(i.on(\r\n        ['setattributestart', 'modifystart', 'rotatestart', 'translatestart', 'scalestart', 'deletestart', 'deleteend', 'beforesplit', 'aftersplit'], \r\n        this._onInteraction.bind(this)\r\n      ));\r\n    }).bind(this));\r\n\r\n    // Watch new inserted / unwatch removed\r\n    this._interactionListener.push( map.getInteractions().on(\r\n      ['add', 'remove'], \r\n      this._watchInteractions.bind(this)\r\n    ));\r\n  }\r\n};\r\n\r\n/** A feature is added / removed\r\n */\r\nol_interaction_UndoRedo.prototype._onAddRemove = function(e) {\r\n  if (this._record) {\r\n    this._redoStack.clear();\r\n    this._redo.length = 0;\r\n    this._undoStack.push({\r\n      type: e.type, \r\n      source: e.target, \r\n      feature: e.feature\r\n    });\r\n  }\r\n};\r\n\r\n/** Perform an interaction\r\n * @private\r\n */\r\nol_interaction_UndoRedo.prototype._onInteraction = function(e) {\r\n  var fn = this._onInteraction[e.type];\r\n  if (fn) fn.call(this,e);\r\n};\r\n\r\n/** Set attribute\r\n * @private\r\n */\r\nol_interaction_UndoRedo.prototype._onInteraction.setattributestart = function(e) {\r\n  this.blockStart(e.target.get('name') || 'setattribute');\r\n  var newp = Object.assign({}, e.properties);\r\n  e.features.forEach(function(f) {\r\n    var oldp = {};\r\n    for (var p in newp) {\r\n      oldp[p] = f.get(p);\r\n    }\r\n    this._undoStack.push({\r\n      type: 'changeattribute', \r\n      feature: f,\r\n      newProperties: newp,\r\n      oldProperties: oldp\r\n    });\r\n  }.bind(this));\r\n  this.blockEnd();\r\n};\r\n\r\nol_interaction_UndoRedo.prototype._onInteraction.rotatestart = \r\nol_interaction_UndoRedo.prototype._onInteraction.translatestart = \r\nol_interaction_UndoRedo.prototype._onInteraction.scalestart = \r\nol_interaction_UndoRedo.prototype._onInteraction.modifystart = function (e) {\r\n  this.blockStart(e.type.replace(/start$/,''));\r\n  e.features.forEach(function(m) {\r\n    this._undoStack.push({ \r\n      type: 'changegeometry', \r\n      feature: m, \r\n      oldGeom: m.getGeometry().clone() \r\n    });\r\n  }.bind(this));\r\n  this.blockEnd();\r\n};\r\n\r\n/** Start an undo block\r\n * @param {string} [name] name f the action\r\n * @api\r\n */\r\nol_interaction_UndoRedo.prototype.blockStart = function (name) {\r\n  this._redoStack.clear();\r\n  this._redo.length = 0;\r\n  this._undoStack.push({ \r\n    type: 'blockstart', \r\n    name: name\r\n  });\r\n  this._level++;\r\n};\r\n\r\n/** @private\r\n */\r\nol_interaction_UndoRedo.prototype._onInteraction.beforesplit = function() {\r\n  // Check modify before split\r\n  var l = this._undoStack.getLength();\r\n  if (l>2 \r\n    && this._undoStack.item(l-1).type === 'blockend'\r\n    && this._undoStack.item(l-2).type === 'changegeometry') {\r\n    this._undoStack.pop();\r\n  } else {\r\n    this.blockStart('split');\r\n  }\r\n};\r\nol_interaction_UndoRedo.prototype._onInteraction.deletestart = function() {\r\n  this.blockStart('delete');\r\n}\r\n\r\n/** End an undo block\r\n * @api\r\n */\r\nol_interaction_UndoRedo.prototype.blockEnd = function () {\r\n  this._undoStack.push({ type: 'blockend' });\r\n  this._level--;\r\n};\r\n\r\n/** @private\r\n */\r\nol_interaction_UndoRedo.prototype._onInteraction.aftersplit =\r\nol_interaction_UndoRedo.prototype._onInteraction.deleteend =\r\nol_interaction_UndoRedo.prototype.blockEnd;\r\n\r\n/** handle undo/redo\r\n * @private\r\n */\r\nol_interaction_UndoRedo.prototype._handleDo = function(e, undo) {\r\n  // Not active\r\n  if (!this.getActive()) return;\r\n\r\n  // Stop recording while undoing\r\n  this._record = false;\r\n  if (e.custom) {\r\n    if (this._defs[e.type]) {\r\n      if (undo) this._defs[e.type].undo(e.prop);\r\n      else this._defs[e.type].redo(e.prop);\r\n    } else {\r\n      console.warn('[UndoRedoInteraction]: \"'+e.type+'\" is not defined.');\r\n    }\r\n  } else {\r\n    switch (e.type) {\r\n      case 'addfeature': {\r\n        if (undo) e.source.removeFeature(e.feature);\r\n        else e.source.addFeature(e.feature);\r\n        break;\r\n      }\r\n      case 'removefeature': {\r\n        if (undo) e.source.addFeature(e.feature);\r\n        else e.source.removeFeature(e.feature);\r\n        break;\r\n      }\r\n      case 'changegeometry': {\r\n        var geom = e.feature.getGeometry();\r\n        e.feature.setGeometry(e.oldGeom);\r\n        e.oldGeom = geom;\r\n        break;\r\n      }\r\n      case 'changeattribute': {\r\n        var newp = e.newProperties;\r\n        var oldp = e.oldProperties;\r\n        for (var p in oldp) {\r\n          if (oldp === undefined) e.feature.unset(p);\r\n          else e.feature.set(p, oldp[p]);\r\n        }\r\n        e.oldProperties = newp;\r\n        e.newProperties = oldp;\r\n        break;\r\n      }\r\n      case 'blockstart': {\r\n        this._block += undo ? -1 : 1;\r\n        break;\r\n      }\r\n      case 'blockend': {\r\n        this._block += undo ? 1 : -1;\r\n        break;\r\n      }\r\n      default: {\r\n        console.warn('[UndoRedoInteraction]: \"'+e.type+'\" is not defined.');\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle block\r\n  if (this._block<0) this._block = 0;\r\n  if (this._block) {\r\n    if (undo) this.undo();\r\n    else this.redo();\r\n  }\r\n  this._record = true;\r\n\r\n  // Dispatch event\r\n  this.dispatchEvent( { \r\n    type: undo ? 'undo' : 'redo',\r\n    action: e\r\n  });\r\n};\r\n\r\n/** Undo last operation\r\n * @api\r\n */\r\nol_interaction_UndoRedo.prototype.undo = function() {\r\n  var e = this._undoStack.item(this._undoStack.getLength() - 1);\r\n  if (!e) return;\r\n  this._redoStack.push(e);\r\n  this._undoStack.pop();\r\n  this._handleDo(e, true);\r\n};\r\n\r\n/** Redo last operation\r\n * @api\r\n */\r\nol_interaction_UndoRedo.prototype.redo = function() {\r\n  var e = this._redoStack.item(this._redoStack.getLength() - 1);\r\n  if (!e) return;\r\n  this._undoStack.push(e);\r\n  this._redoStack.pop();\r\n  this._handleDo(e, false);\r\n};\r\n\r\n/** Clear undo stack\r\n * @api\r\n */\r\nol_interaction_UndoRedo.prototype.clear = function() {\r\n  this._doClear = true;\r\n  this._undo.length = this._redo.length = 0;\r\n  this._undoStack.clear();\r\n  this._redoStack.clear();\r\n  this._doClear = false;\r\n  this.dispatchEvent({ type: 'stack:clear' });\r\n};\r\n\r\n/** Check if undo is avaliable\r\n * @return {number} the number of undo \r\n * @api\r\n */\r\nol_interaction_UndoRedo.prototype.hasUndo = function() {\r\n  return this._undoStack.getLength();\r\n};\r\n\r\n/** Check if redo is avaliable\r\n * @return {number} the number of redo\r\n * @api\r\n */\r\nol_interaction_UndoRedo.prototype.hasRedo = function() {\r\n  return this._redoStack.getLength();\r\n};\r\n\r\nexport default ol_interaction_UndoRedo\r\n","import ol_style_Style from 'ol/style/Style'\r\nimport ol_style_Circle from 'ol/style/Circle'\r\nimport ol_style_Stroke from 'ol/style/Stroke'\r\nimport ol_style_Fill from 'ol/style/Fill'\r\n\r\nvar ol_style_Style_defaultStyle;\r\n\r\n(function() {\r\n\r\n// Style\r\nvar white = [255, 255, 255, 1];\r\nvar blue = [0, 153, 255, 1];\r\nvar width = 3;\r\n\r\nvar defaultEditStyle = [\r\n  new ol_style_Style({\r\n    stroke: new ol_style_Stroke({ color: white, width: width + 2 })\r\n  }),\r\n  new ol_style_Style({\r\n    image: new ol_style_Circle({\r\n      radius: width * 2,\r\n      fill: new ol_style_Fill({ color: blue }),\r\n      stroke: new ol_style_Stroke({ color: white, width: width / 2 })\r\n    }),\r\n    stroke: new ol_style_Stroke({ color: blue, width: width }),\r\n    fill: new ol_style_Fill({\r\n      color: [255, 255, 255, 0.5]\r\n    })\r\n  })\r\n];\r\n\r\n/**\r\n * Get the default style\r\n * @param {boolean|*} [edit] true to get editing style or a { color, fillColor } object, default get default blue style\r\n * @return {Array<ol.style.Style>}\r\n */\r\nol_style_Style_defaultStyle = function(edit) {\r\n  if (edit===true) {\r\n    return defaultEditStyle;\r\n  } else {\r\n    edit = edit || {};\r\n    var fill = new ol_style_Fill({\r\n      color: edit.fillColor || 'rgba(255,255,255,0.4)'\r\n    });\r\n    var stroke = new ol_style_Stroke({\r\n      color: edit.color || '#3399CC',\r\n      width: 1.25\r\n    });\r\n    var style = new ol_style_Style({\r\n      image: new ol_style_Circle({\r\n        fill: fill,\r\n        stroke: stroke,\r\n        radius: 5\r\n      }),\r\n      fill: fill,\r\n      stroke: stroke\r\n    });\r\n    return [ style ];\r\n  }\r\n};\r\n\r\n})();\r\n\r\nexport default ol_style_Style_defaultStyle\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number} [opt_radius] Radius.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        var circle = new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n        circle.applyProperties(this);\n        return circle;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return 'Circle';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport Circle from '../geom/Circle.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport InteractionProperty from './Property.js';\nimport LineString from '../geom/LineString.js';\nimport MapBrowserEvent from '../MapBrowserEvent.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { always, noModifierKeys, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../extent.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromUserCoordinate, getUserProjection } from '../proj.js';\nimport { getStrideForLayout } from '../geom/SimpleGeometry.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../geom/Geometry.js\").Type} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish. Must be greater than `0`.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished. Not used when drawing\n * POINT or MULTI_POINT geometries.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the draw interaction.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry\n * and a projection as arguments, and returns a geometry. The optional existing\n * geometry is the geometry that is returned when the function is called without\n * a second argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\n *     import(\"../proj/Projection.js\").default):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle',\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend',\n    /**\n     * Triggered upon feature draw abortion\n     * @event DrawEvent#drawabort\n     * @api\n     */\n    DRAWABORT: 'drawabort',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\nexport { DrawEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\n */\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /***\n         * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {DrawOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {DrawOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * Pointer type of the last pointermove event\n         * @type {string}\n         * @private\n         */\n        _this.pointerType_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource|null}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>|null}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {import(\"../geom/Geometry.js\").Type}\n         * @private\n         */\n        _this.type_ = /** @type {import(\"../geom/Geometry.js\").Type} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints\n            ? options.minPoints\n            : _this.mode_ === Mode.POLYGON\n                ? 3\n                : 2;\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ =\n            _this.mode_ === Mode.CIRCLE\n                ? 2\n                : options.maxPoints\n                    ? options.maxPoints\n                    : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition\n            ? options.finishCondition\n            : TRUE;\n        /**\n         * @private\n         * @type {import(\"../geom/GeometryLayout\").default}\n         */\n        _this.geometryLayout_ = options.geometryLayout\n            ? options.geometryLayout\n            : GeometryLayout.XY;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            var mode_1 = _this.mode_;\n            if (mode_1 === Mode.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    var circle = geometry\n                        ? /** @type {Circle} */ (geometry)\n                        : new Circle([NaN, NaN]);\n                    var center = fromUserCoordinate(coordinates[0], projection);\n                    var squaredLength = squaredCoordinateDistance(center, fromUserCoordinate(coordinates[coordinates.length - 1], projection));\n                    circle.setCenterAndRadius(center, Math.sqrt(squaredLength), this.geometryLayout_);\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circle.transform(projection, userProjection);\n                    }\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\n                 * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, geometry, projection) {\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])], this.geometryLayout_);\n                            }\n                            else {\n                                geometry.setCoordinates([], this.geometryLayout_);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates, this.geometryLayout_);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates, this.geometryLayout_);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ =\n            options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature<import('../geom/SimpleGeometry.js').default>}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature<LineString>}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance\n            ? options.clickTolerance * options.clickTolerance\n            : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false,\n            }),\n            style: options.style ? options.style : getDefaultStyleFunction(),\n            updateWhileInteracting: true,\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition\n                ? options.freehandCondition\n                : shiftKeyOnly;\n        }\n        _this.addChangeListener(InteractionProperty.ACTIVE, _this.updateState_);\n        return _this;\n    }\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.originalEvent.preventDefault();\n        }\n        this.freehand_ =\n            this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ &&\n            this.lastDragTime_ &&\n            event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event.coordinate);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move && this.getPointerCount() < 2) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                this.handlePointerMove_(event);\n                if (this.shouldHandle_) {\n                    // Avoid page scrolling when freehand drawing on mobile\n                    event.originalEvent.preventDefault();\n                }\n            }\n            else if (event.originalEvent.pointerType === 'mouse' ||\n                (event.type === MapBrowserEventType.POINTERDRAG &&\n                    this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event.coordinate);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserEvent(MapBrowserEventType.POINTERMOVE, event.map, event.originalEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.getPointerCount() === 0) {\n            if (this.downTimeout_) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n            this.handlePointerMove_(event);\n            if (this.shouldHandle_) {\n                var startingToDraw = !this.finishCoordinate_;\n                if (startingToDraw) {\n                    this.startDrawing_(event.coordinate);\n                }\n                if (!startingToDraw && this.freehand_) {\n                    this.finishDrawing();\n                }\n                else if (!this.freehand_ &&\n                    (!startingToDraw || this.mode_ === Mode.POINT)) {\n                    if (this.atFinish_(event.pixel)) {\n                        if (this.finishCondition_(event)) {\n                            this.finishDrawing();\n                        }\n                    }\n                    else {\n                        this.addToDrawing_(event.coordinate);\n                    }\n                }\n                pass = false;\n            }\n            else if (this.freehand_) {\n                this.abortDrawing();\n            }\n        }\n        if (!pass && this.stopClick_) {\n            event.preventDefault();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        this.pointerType_ = event.originalEvent.pointerType;\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_\n                ? squaredDistance > this.squaredClickTolerance_\n                : squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event.coordinate);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event.coordinate.slice());\n        }\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (pixel) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            var mode = this.mode_;\n            if (mode === Mode.POINT) {\n                at = true;\n            }\n            else if (mode === Mode.CIRCLE) {\n                at = this.sketchCoords_.length === 2;\n            }\n            else if (mode === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (mode === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [\n                    sketchCoords[0][0],\n                    sketchCoords[0][sketchCoords[0].length - 2],\n                ];\n            }\n            if (potentiallyDone) {\n                var map = this.getMap();\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (coordinates) {\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @private\n     */\n    Draw.prototype.createOrUpdateCustomSketchLine_ = function (geometry) {\n        if (!this.sketchLine_) {\n            this.sketchLine_ = new Feature();\n        }\n        var ring = geometry.getLinearRing(0);\n        var sketchLineGeom = this.sketchLine_.getGeometry();\n        if (!sketchLineGeom) {\n            sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n            this.sketchLine_.setGeometry(sketchLineGeom);\n        }\n        else {\n            sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n            sketchLineGeom.changed();\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (start) {\n        var projection = this.getMap().getView().getProjection();\n        var stride = getStrideForLayout(this.geometryLayout_);\n        while (start.length < stride) {\n            start.push(0);\n        }\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_, undefined, projection);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (coordinate) {\n        var map = this.getMap();\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = map.getView().getProjection();\n        var stride = getStrideForLayout(this.geometryLayout_);\n        var coordinates, last;\n        while (coordinate.length < stride) {\n            coordinate.push(0);\n        }\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(\n        /** @type {!LineCoordType} */ (this.sketchCoords_), geometry, projection);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = this.sketchPoint_.getGeometry();\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        if (geometry.getType() === 'Polygon' && this.mode_ !== Mode.POLYGON) {\n            this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n        }\n        else if (this.sketchLineCoords_) {\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {!PointCoordType} coordinate Coordinate\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (coordinate) {\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var done;\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        this.createOrUpdateSketchPoint_(coordinate.slice());\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn. Does not do anything when\n     * drawing POINT or MULTI_POINT geometries.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = this.sketchFeature_.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        var coordinates;\n        var mode = this.mode_;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n                var finishCoordinate = this.finishCoordinate_.slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.createOrUpdateSketchPoint_(finishCoordinate);\n            }\n            this.geometryFunction_(coordinates, geometry, projection);\n            if (geometry.getType() === 'Polygon' && this.sketchLine_) {\n                this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\n            }\n        }\n        else if (mode === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            var sketchLineGeom = this.sketchLine_.getGeometry();\n            if (coordinates.length >= 2) {\n                var finishCoordinate = coordinates[coordinates.length - 2].slice();\n                coordinates[coordinates.length - 1] = finishCoordinate;\n                this.createOrUpdateSketchPoint_(finishCoordinate);\n            }\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry, projection);\n        }\n        if (coordinates.length === 1) {\n            this.abortDrawing();\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = sketchFeature.getGeometry();\n        var projection = this.getMap().getView().getProjection();\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry, projection);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === 'MultiPoint') {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === 'MultiLineString') {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === 'MultiPolygon') {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        this.sketchFeature_ = null;\n        this.sketchPoint_ = null;\n        this.sketchLine_ = null;\n        this.overlay_.getSource().clear(true);\n        return sketchFeature;\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @api\n     */\n    Draw.prototype.abortDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (sketchFeature) {\n            this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\n        }\n    };\n    /**\n     * Append coordinates to the end of the geometry that is currently being drawn.\n     * This can be used when drawing LineStrings or Polygons. Coordinates will\n     * either be appended to the current LineString or the outer ring of the current\n     * Polygon. If no geometry is being drawn, a new one will be created.\n     * @param {!LineCoordType} coordinates Linear coordinates to be appended to\n     * the coordinate array.\n     * @api\n     */\n    Draw.prototype.appendCoordinates = function (coordinates) {\n        var mode = this.mode_;\n        var newDrawing = !this.sketchFeature_;\n        if (newDrawing) {\n            this.startDrawing_(coordinates[0]);\n        }\n        /** @type {LineCoordType} */\n        var sketchCoords;\n        if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\n            sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\n        }\n        else if (mode === Mode.POLYGON) {\n            sketchCoords =\n                this.sketchCoords_ && this.sketchCoords_.length\n                    ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\n                    : [];\n        }\n        else {\n            return;\n        }\n        if (newDrawing) {\n            sketchCoords.shift();\n        }\n        // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\n        sketchCoords.pop();\n        // Append coordinate list\n        for (var i = 0; i < coordinates.length; i++) {\n            this.addToDrawing_(coordinates[i]);\n        }\n        var ending = coordinates[coordinates.length - 1];\n        // Duplicate last coordinate for sketch drawing (cursor position)\n        this.addToDrawing_(ending);\n        this.modifyDrawing_(ending);\n    };\n    /**\n     * Initiate draw mode by starting from an existing geometry which will\n     * receive new additional points. This only works on features with\n     * `LineString` geometries, where the interaction will extend lines by adding\n     * points to the end of the coordinates array.\n     * This will change the original feature, instead of drawing a copy.\n     *\n     * The function will dispatch a `drawstart` event.\n     *\n     * @param {!Feature<LineString>} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = geometry;\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.sketchPoint_ = new Feature(new Point(last));\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of a\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\n * @param {number} [opt_sides] Number of sides of the regular polygon.\n *     Default is 32.\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\n *     radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry, projection) {\n        var center = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[0], projection);\n        var end = fromUserCoordinate(\n        /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1], projection);\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry\n            ? /** @type {Polygon} */ (opt_geometry)\n            : fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle && opt_angle !== 0) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan2(y, x);\n        }\n        makeRegular(geometry, center, radius, angle);\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return function (coordinates, opt_geometry, projection) {\n        var extent = boundingExtent(\n        /** @type {LineCoordType} */ ([\n            coordinates[0],\n            coordinates[coordinates.length - 1],\n        ]).map(function (coordinate) {\n            return fromUserCoordinate(coordinate, projection);\n        }));\n        var boxCoordinates = [\n            [\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent),\n            ],\n        ];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            geometry.transform(projection, userProjection);\n        }\n        return geometry;\n    };\n}\n/**\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\n * their single-part cousins.\n * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    switch (type) {\n        case 'Point':\n        case 'MultiPoint':\n            return Mode.POINT;\n        case 'LineString':\n        case 'MultiLineString':\n            return Mode.LINE_STRING;\n        case 'Polygon':\n        case 'MultiPolygon':\n            return Mode.POLYGON;\n        case 'Circle':\n            return Mode.CIRCLE;\n        default:\n            throw new Error('Invalid type: ' + type);\n    }\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\n * documented in {@link module:ol/style/Style~Style}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\nexport { ExtentEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\n */\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /***\n         * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ExtentOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * Condition\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature<Point>}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.boxStyle\n                ? opt_options.boxStyle\n                : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX,\n            }),\n            style: opt_options.pointerStyle\n                ? opt_options.pointerStyle\n                : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n        var sortByDistance = function (a, b) {\n            return (squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b));\n        };\n        var extent = this.getExtentInternal();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n            var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex =\n                        squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @return {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @return {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = vertexFeature.getGeometry();\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtentInternal();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n            var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixelInternal(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtentInternal();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection (or user projection if set)\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtentInternal = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style['Polygon'];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style['Point'];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [\n            [extent[0], extent[1]],\n            [extent[0], extent[3]],\n        ],\n        [\n            [extent[0], extent[3]],\n            [extent[2], extent[3]],\n        ],\n        [\n            [extent[2], extent[3]],\n            [extent[2], extent[1]],\n        ],\n        [\n            [extent[2], extent[1]],\n            [extent[0], extent[1]],\n        ],\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport PointerInteraction from './Pointer.js';\nimport RBush from '../structs/RBush.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { closestOnCircle, closestOnSegment, squaredDistance, } from '../coordinate.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport { fromUserCoordinate, getUserProjection, toUserCoordinate, } from '../proj.js';\nimport { getUid } from '../util.js';\nimport { getValues } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Result\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature Feature.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if (\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\n            .feature;\n    }\n    else if (\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ (\n        /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n    }\n}\nvar tempSegment = [];\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default|null}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ =\n            options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n        /**\n         * Segment RTree for each layer\n         * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @const\n         * @private\n         * @type {Object<string, function(Array<Array<import('../coordinate.js').Coordinate>>, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.GEOMETRY_SEGMENTERS_ = {\n            'Point': _this.segmentPointGeometry_.bind(_this),\n            'LineString': _this.segmentLineStringGeometry_.bind(_this),\n            'LinearRing': _this.segmentLineStringGeometry_.bind(_this),\n            'Polygon': _this.segmentPolygonGeometry_.bind(_this),\n            'MultiPoint': _this.segmentMultiPointGeometry_.bind(_this),\n            'MultiLineString': _this.segmentMultiLineStringGeometry_.bind(_this),\n            'MultiPolygon': _this.segmentMultiPolygonGeometry_.bind(_this),\n            'GeometryCollection': _this.segmentGeometryCollectionGeometry_.bind(_this),\n            'Circle': _this.segmentCircleGeometry_.bind(_this),\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean} [opt_listen] Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmenter = this.GEOMETRY_SEGMENTERS_[geometry.getType()];\n            if (segmenter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                var segments = \n                /** @type {Array<Array<import('../coordinate.js').Coordinate>>} */ ([]);\n                segmenter(segments, geometry);\n                if (segments.length === 1) {\n                    this.rBush_.insert(boundingExtent(segments[0]), {\n                        feature: feature,\n                        segment: segments[0],\n                    });\n                }\n                else if (segments.length > 1) {\n                    var extents = segments.map(function (s) { return boundingExtent(s); });\n                    var segmentsData = segments.map(function (segment) { return ({\n                        feature: feature,\n                        segment: segment,\n                    }); });\n                    this.rBush_.load(extents, segmentsData);\n                }\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @return {boolean} If the event was consumed.\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result|null} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([\n            pixel[0] - this.pixelTolerance_,\n            pixel[1] + this.pixelTolerance_,\n        ]);\n        var upperRight = map.getCoordinateFromPixel([\n            pixel[0] + this.pixelTolerance_,\n            pixel[1] - this.pixelTolerance_,\n        ]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        var segmentsLength = segments.length;\n        if (segmentsLength === 0) {\n            return null;\n        }\n        var projection = map.getView().getProjection();\n        var projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n        var closestVertex;\n        var minSquaredDistance = Infinity;\n        var squaredPixelTolerance = this.pixelTolerance_ * this.pixelTolerance_;\n        var getResult = function () {\n            if (closestVertex) {\n                var vertexPixel = map.getPixelFromCoordinate(closestVertex);\n                var squaredPixelDistance = squaredDistance(pixel, vertexPixel);\n                if (squaredPixelDistance <= squaredPixelTolerance) {\n                    return {\n                        vertex: closestVertex,\n                        vertexPixel: [\n                            Math.round(vertexPixel[0]),\n                            Math.round(vertexPixel[1]),\n                        ],\n                    };\n                }\n            }\n            return null;\n        };\n        if (this.vertex_) {\n            for (var i = 0; i < segmentsLength; ++i) {\n                var segmentData = segments[i];\n                if (segmentData.feature.getGeometry().getType() !== 'Circle') {\n                    segmentData.segment.forEach(function (vertex) {\n                        var tempVertexCoord = fromUserCoordinate(vertex, projection);\n                        var delta = squaredDistance(projectedCoordinate, tempVertexCoord);\n                        if (delta < minSquaredDistance) {\n                            closestVertex = vertex;\n                            minSquaredDistance = delta;\n                        }\n                    });\n                }\n            }\n            var result = getResult();\n            if (result) {\n                return result;\n            }\n        }\n        if (this.edge_) {\n            for (var i = 0; i < segmentsLength; ++i) {\n                var vertex = null;\n                var segmentData = segments[i];\n                if (segmentData.feature.getGeometry().getType() === 'Circle') {\n                    var circleGeometry = segmentData.feature.getGeometry();\n                    var userProjection = getUserProjection();\n                    if (userProjection) {\n                        circleGeometry = circleGeometry\n                            .clone()\n                            .transform(userProjection, projection);\n                    }\n                    vertex = toUserCoordinate(closestOnCircle(projectedCoordinate, \n                    /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)), projection);\n                }\n                else {\n                    var _a = segmentData.segment, segmentStart = _a[0], segmentEnd = _a[1];\n                    // points have only one coordinate\n                    if (segmentEnd) {\n                        tempSegment[0] = fromUserCoordinate(segmentStart, projection);\n                        tempSegment[1] = fromUserCoordinate(segmentEnd, projection);\n                        vertex = closestOnSegment(projectedCoordinate, tempSegment);\n                    }\n                }\n                if (vertex) {\n                    var delta = squaredDistance(projectedCoordinate, vertex);\n                    if (delta < minSquaredDistance) {\n                        closestVertex = vertex;\n                        minSquaredDistance = delta;\n                    }\n                }\n            }\n            var result = getResult();\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentCircleGeometry_ = function (segments, geometry) {\n        var projection = this.getMap().getView().getProjection();\n        var circleGeometry = geometry;\n        var userProjection = getUserProjection();\n        if (userProjection) {\n            circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry.clone().transform(userProjection, projection));\n        }\n        var polygon = fromCircle(circleGeometry);\n        if (userProjection) {\n            polygon.transform(projection, userProjection);\n        }\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            segments.push(coordinates.slice(i, i + 2));\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentGeometryCollectionGeometry_ = function (segments, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmenter = this.GEOMETRY_SEGMENTERS_[geometries[i].getType()];\n            if (segmenter) {\n                segmenter(segments, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentLineStringGeometry_ = function (segments, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            segments.push(coordinates.slice(i, i + 2));\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentMultiLineStringGeometry_ = function (segments, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                segments.push(coordinates.slice(i, i + 2));\n            }\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentMultiPointGeometry_ = function (segments, geometry) {\n        geometry.getCoordinates().forEach(function (point) {\n            segments.push([point]);\n        });\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentMultiPolygonGeometry_ = function (segments, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    segments.push(coordinates.slice(i, i + 2));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentPointGeometry_ = function (segments, geometry) {\n        segments.push([geometry.getCoordinates()]);\n    };\n    /**\n     * @param {Array<Array<import('../coordinate.js').Coordinate>>} segments Segments\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.segmentPolygonGeometry_ = function (segments, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                segments.push(coordinates.slice(i, i + 2));\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\nexport default Snap;\n//# sourceMappingURL=Snap.js.map"],"names":["ol_control_TextButton","options","className","this","ol_control_Toggle","self","interaction_","interaction","setActive","active","on","getActive","toggleFn","onToggle","handleClick","toggle","call","set","title","autoActivate","bar","setSubBar","setDisable","disable","prototype","setMap","map","getMap","removeInteraction","subbar_","removeControl","addInteraction","addControl","getSubBar","setTarget","element","classList","add","getDisable","button","querySelector","disabled","b","dispatchEvent","type","key","oldValue","contains","remove","setInteraction","i","getInteraction","ol_extent_intersection","ol_coordinate_dist2d","p1","p2","dx","dy","Math","sqrt","ol_coordinate_equal","ol_coordinate_offsetCoords","coords","offset","mi","mi1","li","li1","ri","ri1","si","si1","Xi1","Yi1","p0","path","N","length","max","isClosed","push","abs","pop","ol_coordinate_findSegment","pt","index","segment","d0","v0","d1","v1","splitX","pts","x","splice","splitY","y","extent","polygon","poly","getType","geom","getCoordinates","forEach","g","c","p","ol_coordinate_sampleAt","d","start","dl","nb","round","line","result","concat","lines","l","res","mpoly","a","resolution","sampleAt","ext","getCenter","getRadius","simplify","r","hasout","ring","console","warn","tol","k","splitAt","getFirstCoordinate","getLastCoordinate","c0","ci","d2","split","ol_interaction_Delete","e","getFeatures","clear","delete","selected","bind","_getSources","layers","getLayers","sources","getSource","features","getLength","delFeatures","source","f","removeFeature","ol_interaction_DrawHole","_select","style","geometryFn","geomFn","geometryFunction","_geometryFn","layers_","indexOf","_features","featureFilter","item","getArray","_startDrawing","_finishDrawing","removeLastPoint","_feature","getGeometry","getPolygon","_polygon","feature","coord","_current","forEachFeatureAtPixel","getPixelFromCoordinate","layer","intersectsCoordinate","_polygonIndex","layerFilter","hole","pi","newGeom","appendLinearRing","appendPolygon","setGeometry","coordinates","geometry","lastOKCoord","setCoordinates","ol_interaction_DrawRegular","squaredClickTolerance_","clickTolerance","maxCircleCoordinates_","maxCircleCoordinates","features_","source_","conditionFn_","condition","squareFn_","squareCondition","centeredFn_","centerCondition","canRotate_","canRotate","geometryName_","geometryName","setSides","sides","defaultStyle","sketch_","overlayLayer_","useSpatialIndex","name","displayInLayerSwitcher","handleEvent","handleEvent_","removeLayer","reset","started_","parseInt","sides_","getSides","startAngle","PI","getGeom_","center_","coord_","dmax","circle","centerPx","center","square_","centered_","coordPx_","min","hasrotation","dm","atan2","getExtent","scx","scy","sc","sign","t","applyTransform","g1","g2","dim","drawSketch_","evt","originalEvent","shiftKey","metaKey","ctrlKey","feature_","addFeature","drawPoint_","noclear","_eventTime","Date","downPx_","pixel","start_","dt","_longTouch","setTimeout","handleMoveEvent_","lastEvent","end_","upPx_","coordinate","finishDrawing","startCoordinate","square","centered","setGeometryName","ol_interaction_ModifyFeature","dragging","modifying","handleDownEvent","_deleteCondition","handleUpEvent","handleDragEvent","handleMoveEvent","snapDistance_","pixelTolerance","tolerance_","cursor_","cursor","sources_","Array","filterSplit_","filter","_condition","deleteCondition","_insertVertexCondition","insertVertexCondition","sketchStyle","image","radius","fill","color","stroke","width","wrapX","setFilter","undefined","getClosestFeature","getClosestFeatureToCoordinate","getClosestPoint","di","frameState","viewState","currentFeature","deselected","getNearestCoord","dist","Number","MAX_VALUE","lstring","getLineStrings","lring","getLinearRings","getPolygons","getGeometries","getArcs","s","arcs","coord1","coord2","node","shift","c1","nbpt","closed","end","typeg","error","current","getFeaturesInExtent","_modifiedFeatures","_removePoint","getModifiedFeatures","removePoint","_getModification","geoms","found","setGeometries","setArcCoordinates","getTargetElement","previousCursor_","getCurrentFeature","ol_interaction_Offset","handleDownEvent_","handleDragEvent_","handleUpEvent_","_filter","duplicate","_style","getFeatureAtPixel_","typeGeom","test","hit","clone","geomType","hitTolerance","current_","currentStyle_","getStyle","get","setStyle","_modifystart","seg","v2","ol_interaction_Split","snapDistance","tolerance","setSources","white","blue","featureStyle","_sketch_","getSources","getVisible","unshift","fi","gi","link","tosplit","original","linkGeometry","ol_interaction_Transform","selection_","handles_","_handleEvent","addFn_","addCondition","setPointRadius","pointRadius","translateFeature","translate","translateBBox","stretch","scale","rotate","keepAspectRatio","modifyCenter","noFlip","selection","enableRotatedTransform","keepRectangle","setDefaultStyle","projectVectorOnVector","displacement_vector","base","countVector","movePoint","point","displacementVector","Cursors","oldMap","targetElement","select","isTouch","getViewport","setVisible","pointStroke","strokedash","lineDash","fill0","pointFill","displacement","points","setDisplacement","getAnchor","bigpt","angle","smallpt","createStyle","img","olstyle","im","getImage","setScale","tx","getText","setOffsetX","bbox_","handle","constraint","option","some","getGeometryRotateToZero_","origGeom","viewRotation","getView","getRotation","rotGeom","_isRectangle","slice","extendExt","ptRadius","_pointRadius","ispt_","getCoordinateFromPixel","iscircle_","addFeatures","removeAt","watchFeatures_","setSelection","_featureListeners","isUpdating_","sel","mode_","opt_","constraint_","coordinate_","pixel_","geoms_","rotatedGeoms_","rotExtent","extent_","rotatedExtent_","rotate0","angle_","setCenter","j","pt0","ispt","setCenterAndRadius","deltaX","deltaY","delta","extentCoordinates","opt","downCoordinate","dragCoordinate","downPoint","dragPoint","centerPoint","pointArray","pointA","pointB","pointC","pointD","pointA1","projectedVector","nextIndex","coordsToChange","includes","projectedLeft","projectedRight","default","oldgeom","oldgeoms","opt_fast","ol_interaction_UndoRedo","_layers","_undoStack","_redoStack","_undo","_redo","level","_level","view","zoom","getZoom","action","_reduce","_doShift","_doClear","_block","_record","_defs","define","undoFn","redoFn","undo","redo","setMaxLength","size","setMaxSize","getStack","prop","custom","_mapListener","blockStart","blockEnd","_watchSources","_watchInteractions","_sourceListener","getVectorLayers","init","vectors","_onAddRemove","_interactionListener","getInteractions","_onInteraction","target","fn","setattributestart","newp","Object","assign","properties","oldp","newProperties","oldProperties","rotatestart","translatestart","scalestart","modifystart","replace","m","oldGeom","beforesplit","deletestart","aftersplit","deleteend","_handleDo","unset","hasUndo","hasRedo","ol_style_Style_defaultStyle","defaultEditStyle","edit","fillColor","__extends","extendStatics","setPrototypeOf","__proto__","hasOwnProperty","TypeError","String","__","constructor","create","Circle","_super","opt_radius","opt_layout","_this","setFlatCoordinates","flatCoordinates","layout","applyProperties","closestPointXY","closestPoint","minSquaredDistance","squaredDistance","stride","containsXY","getRadiusSquared_","computeExtent","intersectsExtent","circleExtent","changed","setLayout","ii","setRadius","anchor","getStride","transform","Mode","POINT","LINE_STRING","POLYGON","CIRCLE","DrawEventType","DRAWSTART","DRAWEND","DRAWABORT","DrawEvent","Draw","pointerOptions","stopDown","once","un","shouldHandle_","downTimeout_","lastDragTime_","pointerType_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","Infinity","finishCondition_","finishCondition","geometryLayout_","geometryLayout","Constructor_1","mode_1","projection","NaN","squaredLength","userProjection","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","overlay_","getDefaultStyleFunction","updateWhileInteracting","condition_","freehandCondition_","freehand","freehandCondition","addChangeListener","updateState_","getOverlay","event","preventDefault","move","pass","now","clearTimeout","addToDrawing_","getPointerCount","handlePointerMove_","pointerType","startDrawing_","startingToDraw","atFinish_","abortDrawing","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","mode","sketchCoords","finishCoordinate","finishPixel","sketchPointGeom","updateSketchFeatures_","createOrUpdateCustomSketchLine_","getLinearRing","sketchLineGeom","getLayout","getFlatCoordinates","getProjection","last","done","sketchFeature","abortDrawing_","appendCoordinates","newDrawing","ending","extend","lineString","sketchFeatures","overlaySource","styles","Error","ExtentEventType","EXTENTCHANGED","ExtentEvent","Extent","opt_options","pointerHandler_","pixelTolerance_","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","updateWhileAnimating","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","setExtent","snapToVertex_","pixelCoordinate","getCoordinateFromPixelInternal","sortByDistance","getExtentInternal","segments","getSegments","sort","closestSegment","vertex","vertexPixel","getPixelFromCoordinateInternal","pixel1","pixel2","squaredDist1","squaredDist2","mapBrowserEvent","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","handlingDownUpSequence","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","fixedPoint","fixedP1","fixedP2","getFeatureFromEvent","tempSegment","Snap","vertex_","edge_","edge","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","rBush_","GEOMETRY_SEGMENTERS_","segmentPointGeometry_","segmentLineStringGeometry_","segmentPolygonGeometry_","segmentMultiPointGeometry_","segmentMultiLineStringGeometry_","segmentMultiPolygonGeometry_","segmentGeometryCollectionGeometry_","segmentCircleGeometry_","opt_listen","register","feature_uid","segmenter","insert","extents","segmentsData","load","handleFeatureChange_","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","handleFeatureAdd_","handleFeatureRemove_","uid","updateFeature_","featuresToUpdate","opt_unlisten","unregister","rBush","nodesToRemove_1","forEachInExtent","currentMap","keys","lowerLeft","upperRight","box","getInExtent","segmentsLength","closestVertex","projectedCoordinate","squaredPixelTolerance","getResult","squaredPixelDistance","segmentData","tempVertexCoord","circleGeometry","_a","segmentStart","segmentEnd","geometries","getGeometriesArray","jj","polygons","kk","rings"],"sourceRoot":""}
{"version":3,"file":"js/chunk-vendors-bc050c32.baebdf81.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/define-data-property/index.js","webpack://@openeo/web-editor/./node_modules/es-define-property/index.js","webpack://@openeo/web-editor/./node_modules/es-errors/eval.js","webpack://@openeo/web-editor/./node_modules/es-errors/index.js","webpack://@openeo/web-editor/./node_modules/es-errors/range.js","webpack://@openeo/web-editor/./node_modules/es-errors/ref.js","webpack://@openeo/web-editor/./node_modules/es-errors/syntax.js","webpack://@openeo/web-editor/./node_modules/es-errors/type.js","webpack://@openeo/web-editor/./node_modules/es-errors/uri.js","webpack://@openeo/web-editor/./node_modules/events/events.js","webpack://@openeo/web-editor/./node_modules/fast-deep-equal/es6/index.js","webpack://@openeo/web-editor/./node_modules/fast-deep-equal/index.js","webpack://@openeo/web-editor/./node_modules/fast-json-stable-stringify/index.js","webpack://@openeo/web-editor/./node_modules/function-bind/implementation.js","webpack://@openeo/web-editor/./node_modules/function-bind/index.js","webpack://@openeo/web-editor/./node_modules/get-intrinsic/index.js","webpack://@openeo/web-editor/./node_modules/gopd/index.js","webpack://@openeo/web-editor/./node_modules/has-property-descriptors/index.js","webpack://@openeo/web-editor/./node_modules/has-proto/index.js","webpack://@openeo/web-editor/./node_modules/has-symbols/index.js","webpack://@openeo/web-editor/./node_modules/has-symbols/shams.js","webpack://@openeo/web-editor/./node_modules/hasown/index.js","webpack://@openeo/web-editor/./node_modules/ieee754/index.js","webpack://@openeo/web-editor/./node_modules/inherits/inherits_browser.js","webpack://@openeo/web-editor/./node_modules/json-schema-traverse/index.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/compression/index.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/dataview64.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/dataslice.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/httputils.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/basesource.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/utils.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/blockedsource.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/client/base.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/client/fetch.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/client/xhr.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/client/http.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/remote.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/source/filereader.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/geotiff.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/rgb.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/resample.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/geotiffimage.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/globals.js"],"sourcesContent":["'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\n\nvar gopd = require('gopd');\n\n/** @type {import('.')} */\nmodule.exports = function defineDataProperty(\n\tobj,\n\tproperty,\n\tvalue\n) {\n\tif (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n\t\tthrow new $TypeError('`obj` must be an object or a function`');\n\t}\n\tif (typeof property !== 'string' && typeof property !== 'symbol') {\n\t\tthrow new $TypeError('`property` must be a string or a symbol`');\n\t}\n\tif (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {\n\t\tthrow new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {\n\t\tthrow new $TypeError('`nonWritable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {\n\t\tthrow new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');\n\t}\n\tif (arguments.length > 6 && typeof arguments[6] !== 'boolean') {\n\t\tthrow new $TypeError('`loose`, if provided, must be a boolean');\n\t}\n\n\tvar nonEnumerable = arguments.length > 3 ? arguments[3] : null;\n\tvar nonWritable = arguments.length > 4 ? arguments[4] : null;\n\tvar nonConfigurable = arguments.length > 5 ? arguments[5] : null;\n\tvar loose = arguments.length > 6 ? arguments[6] : false;\n\n\t/* @type {false | TypedPropertyDescriptor<unknown>} */\n\tvar desc = !!gopd && gopd(obj, property);\n\n\tif ($defineProperty) {\n\t\t$defineProperty(obj, property, {\n\t\t\tconfigurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,\n\t\t\tenumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,\n\t\t\tvalue: value,\n\t\t\twritable: nonWritable === null && desc ? desc.writable : !nonWritable\n\t\t});\n\t} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {\n\t\t// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable\n\t\tobj[property] = value; // eslint-disable-line no-param-reassign\n\t} else {\n\t\tthrow new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');\n\t}\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\n/** @type {import('.')} */\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n","'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n","'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n","'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n","'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n","'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n","'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nmodule.exports = function (data, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (node) {\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        if (node === undefined) return;\n        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';\n        if (typeof node !== 'object') return JSON.stringify(node);\n\n        var i, out;\n        if (Array.isArray(node)) {\n            out = '[';\n            for (i = 0; i < node.length; i++) {\n                if (i) out += ',';\n                out += stringify(node[i]) || 'null';\n            }\n            return out + ']';\n        }\n\n        if (node === null) return 'null';\n\n        if (seen.indexOf(node) !== -1) {\n            if (cycles) return JSON.stringify('__cycle__');\n            throw new TypeError('Converting circular structure to JSON');\n        }\n\n        var seenIndex = seen.push(node) - 1;\n        var keys = Object.keys(node).sort(cmp && cmp(node));\n        out = '';\n        for (i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var value = stringify(node[key]);\n\n            if (!value) continue;\n            if (out) out += ',';\n            out += JSON.stringify(key) + ':' + value;\n        }\n        seen.splice(seenIndex, 1);\n        return '{' + out + '}';\n    })(data);\n};\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\nvar hasProto = require('has-proto')();\n\nvar getProto = Object.getPrototypeOf || (\n\thasProto\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\n\t\t: null\n);\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","'use strict';\n\nvar $defineProperty = require('es-define-property');\n\nvar hasPropertyDescriptors = function hasPropertyDescriptors() {\n\treturn !!$defineProperty;\n};\n\nhasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {\n\t// node v0.6 has a bug where array lengths can be Set but not Defined\n\tif (!$defineProperty) {\n\t\treturn null;\n\t}\n\ttry {\n\t\treturn $defineProperty([], 'length', { value: 1 }).length !== 1;\n\t} catch (e) {\n\t\t// In Firefox 4-22, defining length on an array throws an exception.\n\t\treturn true;\n\t}\n};\n\nmodule.exports = hasPropertyDescriptors;\n","'use strict';\n\nvar test = {\n\t__proto__: null,\n\tfoo: {}\n};\n\nvar $Object = Object;\n\n/** @type {import('.')} */\nmodule.exports = function hasProto() {\n\t// @ts-expect-error: TS errors on an inherited property for some reason\n\treturn { __proto__: test }.foo === test.foo\n\t\t&& !(test instanceof $Object);\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","const registry = new Map();\n\nexport function addDecoder(cases, importFn) {\n  if (!Array.isArray(cases)) {\n    cases = [cases]; // eslint-disable-line no-param-reassign\n  }\n  cases.forEach((c) => registry.set(c, importFn));\n}\n\nexport async function getDecoder(fileDirectory) {\n  const importFn = registry.get(fileDirectory.Compression);\n  if (!importFn) {\n    throw new Error(`Unknown compression method identifier: ${fileDirectory.Compression}`);\n  }\n  const Decoder = await importFn();\n  return new Decoder(fileDirectory);\n}\n\n// Add default decoders to registry (end-user may override with other implementations)\naddDecoder([undefined, 1], () => import('./raw.js').then((m) => m.default));\naddDecoder(5, () => import('./lzw.js').then((m) => m.default));\naddDecoder(6, () => {\n  throw new Error('old style JPEG compression is not supported.');\n});\naddDecoder(7, () => import('./jpeg.js').then((m) => m.default));\naddDecoder([8, 32946], () => import('./deflate.js').then((m) => m.default));\naddDecoder(32773, () => import('./packbits.js').then((m) => m.default));\naddDecoder(34887, () => import('./lerc.js')\n  .then(async (m) => {\n    await m.zstd.init();\n    return m;\n  })\n  .then((m) => m.default),\n);\naddDecoder(50001, () => import('./webimage.js').then((m) => m.default));\n","import { getFloat16 } from '@petamoriken/float16';\n\nexport default class DataView64 {\n  constructor(arrayBuffer) {\n    this._dataView = new DataView(arrayBuffer);\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  getUint64(offset, littleEndian) {\n    const left = this.getUint32(offset, littleEndian);\n    const right = this.getUint32(offset + 4, littleEndian);\n    let combined;\n    if (littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  getInt64(offset, littleEndian) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (littleEndian ? i : 7 - i));\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  getUint8(offset, littleEndian) {\n    return this._dataView.getUint8(offset, littleEndian);\n  }\n\n  getInt8(offset, littleEndian) {\n    return this._dataView.getInt8(offset, littleEndian);\n  }\n\n  getUint16(offset, littleEndian) {\n    return this._dataView.getUint16(offset, littleEndian);\n  }\n\n  getInt16(offset, littleEndian) {\n    return this._dataView.getInt16(offset, littleEndian);\n  }\n\n  getUint32(offset, littleEndian) {\n    return this._dataView.getUint32(offset, littleEndian);\n  }\n\n  getInt32(offset, littleEndian) {\n    return this._dataView.getInt32(offset, littleEndian);\n  }\n\n  getFloat16(offset, littleEndian) {\n    return getFloat16(this._dataView, offset, littleEndian);\n  }\n\n  getFloat32(offset, littleEndian) {\n    return this._dataView.getFloat32(offset, littleEndian);\n  }\n\n  getFloat64(offset, littleEndian) {\n    return this._dataView.getFloat64(offset, littleEndian);\n  }\n}\n","export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80)\n      > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(\n        offset + (this._littleEndian ? i : 7 - i),\n      );\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}\n","const CRLFCRLF = '\\r\\n\\r\\n';\n\n/*\n * Shim for 'Object.fromEntries'\n */\nfunction itemsToObject(items) {\n  if (typeof Object.fromEntries !== 'undefined') {\n    return Object.fromEntries(items);\n  }\n  const obj = {};\n  for (const [key, value] of items) {\n    obj[key.toLowerCase()] = value;\n  }\n  return obj;\n}\n\n/**\n * Parse HTTP headers from a given string.\n * @param {String} text the text to parse the headers from\n * @returns {Object} the parsed headers with lowercase keys\n */\nfunction parseHeaders(text) {\n  const items = text\n    .split('\\r\\n')\n    .map((line) => {\n      const kv = line.split(':').map((str) => str.trim());\n      kv[0] = kv[0].toLowerCase();\n      return kv;\n    });\n\n  return itemsToObject(items);\n}\n\n/**\n * Parse a 'Content-Type' header value to the content-type and parameters\n * @param {String} rawContentType the raw string to parse from\n * @returns {Object} the parsed content type with the fields: type and params\n */\nexport function parseContentType(rawContentType) {\n  const [type, ...rawParams] = rawContentType.split(';').map((s) => s.trim());\n  const paramsItems = rawParams.map((param) => param.split('='));\n  return { type, params: itemsToObject(paramsItems) };\n}\n\n/**\n * Parse a 'Content-Range' header value to its start, end, and total parts\n * @param {String} rawContentRange the raw string to parse from\n * @returns {Object} the parsed parts\n */\nexport function parseContentRange(rawContentRange) {\n  let start;\n  let end;\n  let total;\n\n  if (rawContentRange) {\n    [, start, end, total] = rawContentRange.match(/bytes (\\d+)-(\\d+)\\/(\\d+)/);\n    start = parseInt(start, 10);\n    end = parseInt(end, 10);\n    total = parseInt(total, 10);\n  }\n\n  return { start, end, total };\n}\n\n/**\n * Parses a list of byteranges from the given 'multipart/byteranges' HTTP response.\n * Each item in the list has the following properties:\n * - headers: the HTTP headers\n * - data: the sliced ArrayBuffer for that specific part\n * - offset: the offset of the byterange within its originating file\n * - length: the length of the byterange\n * @param {ArrayBuffer} responseArrayBuffer the response to be parsed and split\n * @param {String} boundary the boundary string used to split the sections\n * @returns {Object[]} the parsed byteranges\n */\nexport function parseByteRanges(responseArrayBuffer, boundary) {\n  let offset = null;\n  const decoder = new TextDecoder('ascii');\n  const out = [];\n\n  const startBoundary = `--${boundary}`;\n  const endBoundary = `${startBoundary}--`;\n\n  // search for the initial boundary, may be offset by some bytes\n  // TODO: more efficient to check for `--` in bytes directly\n  for (let i = 0; i < 10; ++i) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, i, startBoundary.length),\n    );\n    if (text === startBoundary) {\n      offset = i;\n    }\n  }\n\n  if (offset === null) {\n    throw new Error('Could not find initial boundary');\n  }\n\n  while (offset < responseArrayBuffer.byteLength) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, offset,\n        Math.min(startBoundary.length + 1024, responseArrayBuffer.byteLength - offset),\n      ),\n    );\n\n    // break if we arrived at the end\n    if (text.length === 0 || text.startsWith(endBoundary)) {\n      break;\n    }\n\n    // assert that we are actually dealing with a byterange and are at the correct offset\n    if (!text.startsWith(startBoundary)) {\n      throw new Error('Part does not start with boundary');\n    }\n\n    // get a substring from where we read the headers\n    const innerText = text.substr(startBoundary.length + 2);\n\n    if (innerText.length === 0) {\n      break;\n    }\n\n    // find the double linebreak that denotes the end of the headers\n    const endOfHeaders = innerText.indexOf(CRLFCRLF);\n\n    // parse the headers to get the content range size\n    const headers = parseHeaders(innerText.substr(0, endOfHeaders));\n    const { start, end, total } = parseContentRange(headers['content-range']);\n\n    // calculate the length of the slice and the next offset\n    const startOfData = offset + startBoundary.length + endOfHeaders + CRLFCRLF.length;\n    const length = parseInt(end, 10) + 1 - parseInt(start, 10);\n    out.push({\n      headers,\n      data: responseArrayBuffer.slice(startOfData, startOfData + length),\n      offset: start,\n      length,\n      fileSize: total,\n    });\n\n    offset = startOfData + length + 4;\n  }\n\n  return out;\n}\n","/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n","export function assign(target, source) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nexport function chunk(iterable, length) {\n  const results = [];\n  const lengthOfIterable = iterable.length;\n  for (let i = 0; i < lengthOfIterable; i += length) {\n    const chunked = [];\n    for (let ci = i; ci < i + length; ci++) {\n      chunked.push(iterable[ci]);\n    }\n    results.push(chunked);\n  }\n  return results;\n}\n\nexport function endsWith(string, expectedEnding) {\n  if (string.length < expectedEnding.length) {\n    return false;\n  }\n  const actualEnding = string.substr(string.length - expectedEnding.length);\n  return actualEnding === expectedEnding;\n}\n\nexport function forEach(iterable, func) {\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    func(iterable[i], i);\n  }\n}\n\nexport function invert(oldObj) {\n  const newObj = {};\n  for (const key in oldObj) {\n    if (oldObj.hasOwnProperty(key)) {\n      const value = oldObj[key];\n      newObj[value] = key;\n    }\n  }\n  return newObj;\n}\n\nexport function range(n) {\n  const results = [];\n  for (let i = 0; i < n; i++) {\n    results.push(i);\n  }\n  return results;\n}\n\nexport function times(numTimes, func) {\n  const results = [];\n  for (let i = 0; i < numTimes; i++) {\n    results.push(func(i));\n  }\n  return results;\n}\n\nexport function toArray(iterable) {\n  const results = [];\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    results.push(iterable[i]);\n  }\n  return results;\n}\n\nexport function toArrayRecursively(input) {\n  if (input.length) {\n    return toArray(input).map(toArrayRecursively);\n  }\n  return input;\n}\n\n// copied from https://github.com/academia-de-codigo/parse-content-range-header/blob/master/index.js\nexport function parseContentRange(headerValue) {\n  if (!headerValue) {\n    return null;\n  }\n\n  if (typeof headerValue !== 'string') {\n    throw new Error('invalid argument');\n  }\n\n  const parseInt = (number) => Number.parseInt(number, 10);\n\n  // Check for presence of unit\n  let matches = headerValue.match(/^(\\w*) /);\n  const unit = matches && matches[1];\n\n  // check for start-end/size header format\n  matches = headerValue.match(/(\\d+)-(\\d+)\\/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: parseInt(matches[1]),\n      last: parseInt(matches[2]),\n      length: matches[3] === '*' ? null : parseInt(matches[3]),\n    };\n  }\n\n  // check for size header format\n  matches = headerValue.match(/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: null,\n      last: null,\n      length: matches[1] === '*' ? null : parseInt(matches[1]),\n    };\n  }\n\n  return null;\n}\n\n/*\n * Promisified wrapper around 'setTimeout' to allow 'await'\n */\nexport async function wait(milliseconds) {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n\nexport function zip(a, b) {\n  const A = Array.isArray(a) ? a : Array.from(a);\n  const B = Array.isArray(b) ? b : Array.from(b);\n  return A.map((k, i) => [k, B[i]]);\n}\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class AbortError extends Error {\n  constructor(params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AbortError);\n    }\n\n    this.name = 'AbortError';\n  }\n}\n\nexport class CustomAggregateError extends Error {\n  constructor(errors, message) {\n    super(message);\n    this.errors = errors;\n    this.message = message;\n    this.name = 'AggregateError';\n  }\n}\n\nexport const AggregateError = CustomAggregateError;\n","import QuickLRU from 'quick-lru';\nimport { BaseSource } from './basesource.js';\nimport { AbortError, AggregateError, wait, zip } from '../utils.js';\n\nclass Block {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {ArrayBuffer} [data]\n   */\n  constructor(offset, length, data = null) {\n    this.offset = offset;\n    this.length = length;\n    this.data = data;\n  }\n\n  /**\n   * @returns {number} the top byte border\n   */\n  get top() {\n    return this.offset + this.length;\n  }\n}\n\nclass BlockGroup {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {number[]} blockIds\n   */\n  constructor(offset, length, blockIds) {\n    this.offset = offset;\n    this.length = length;\n    this.blockIds = blockIds;\n  }\n}\n\nexport class BlockedSource extends BaseSource {\n  /**\n   *\n   * @param {BaseSource} source The underlying source that shall be blocked and cached\n   * @param {object} options\n   * @param {number} [options.blockSize]\n   * @param {number} [options.cacheSize]\n   */\n  constructor(source, { blockSize = 65536, cacheSize = 100 } = {}) {\n    super();\n    this.source = source;\n    this.blockSize = blockSize;\n\n    this.blockCache = new QuickLRU({\n      maxSize: cacheSize,\n      onEviction: (blockId, block) => {\n        this.evictedBlocks.set(blockId, block);\n      },\n    });\n\n    /** @type {Map<number, Block>} */\n    this.evictedBlocks = new Map();\n\n    // mapping blockId -> Block instance\n    this.blockRequests = new Map();\n\n    // set of blockIds missing for the current requests\n    this.blockIdsToFetch = new Set();\n\n    this.abortedBlockIds = new Set();\n  }\n\n  get fileSize() {\n    return this.source.fileSize;\n  }\n\n  /**\n   *\n   * @param {import(\"./basesource\").Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    const blockRequests = [];\n    const missingBlockIds = [];\n    const allBlockIds = [];\n    this.evictedBlocks.clear();\n\n    for (const { offset, length } of slices) {\n      let top = offset + length;\n\n      const { fileSize } = this;\n      if (fileSize !== null) {\n        top = Math.min(top, fileSize);\n      }\n\n      const firstBlockOffset = Math.floor(offset / this.blockSize) * this.blockSize;\n\n      for (let current = firstBlockOffset; current < top; current += this.blockSize) {\n        const blockId = Math.floor(current / this.blockSize);\n        if (!this.blockCache.has(blockId) && !this.blockRequests.has(blockId)) {\n          this.blockIdsToFetch.add(blockId);\n          missingBlockIds.push(blockId);\n        }\n        if (this.blockRequests.has(blockId)) {\n          blockRequests.push(this.blockRequests.get(blockId));\n        }\n        allBlockIds.push(blockId);\n      }\n    }\n\n    // allow additional block requests to accumulate\n    await wait();\n    this.fetchBlocks(signal);\n\n    // Gather all of the new requests that this fetch call is contributing to `fetch`.\n    const missingRequests = [];\n    for (const blockId of missingBlockIds) {\n      // The requested missing block could already be in the cache\n      // instead of having its request still be outstanding.\n      if (this.blockRequests.has(blockId)) {\n        missingRequests.push(this.blockRequests.get(blockId));\n      }\n    }\n\n    // Actually await all pending requests that are needed for this `fetch`.\n    await Promise.allSettled(blockRequests);\n    await Promise.allSettled(missingRequests);\n\n    // Perform retries if a block was interrupted by a previous signal\n    const abortedBlockRequests = [];\n    const abortedBlockIds = allBlockIds\n      .filter((id) => this.abortedBlockIds.has(id) || !this.blockCache.has(id));\n    abortedBlockIds.forEach((id) => this.blockIdsToFetch.add(id));\n    // start the retry of some blocks if required\n    if (abortedBlockIds.length > 0 && signal && !signal.aborted) {\n      this.fetchBlocks(null);\n      for (const blockId of abortedBlockIds) {\n        const block = this.blockRequests.get(blockId);\n        if (!block) {\n          throw new Error(`Block ${blockId} is not in the block requests`);\n        }\n        abortedBlockRequests.push(block);\n      }\n      await Promise.allSettled(abortedBlockRequests);\n    }\n\n    // throw an  abort error\n    if (signal && signal.aborted) {\n      throw new AbortError('Request was aborted');\n    }\n\n    const blocks = allBlockIds.map((id) => this.blockCache.get(id) || this.evictedBlocks.get(id));\n    const failedBlocks = blocks.filter((i) => !i);\n    if (failedBlocks.length) {\n      throw new AggregateError(failedBlocks, 'Request failed');\n    }\n\n    // create a final Map, with all required blocks for this request to satisfy\n    const requiredBlocks = new Map(zip(allBlockIds, blocks));\n\n    // TODO: satisfy each slice\n    return this.readSliceData(slices, requiredBlocks);\n  }\n\n  /**\n   *\n   * @param {AbortSignal} signal\n   */\n  fetchBlocks(signal) {\n    // check if we still need to\n    if (this.blockIdsToFetch.size > 0) {\n      const groups = this.groupBlocks(this.blockIdsToFetch);\n\n      // start requesting slices of data\n      const groupRequests = this.source.fetch(groups, signal);\n\n      for (let groupIndex = 0; groupIndex < groups.length; ++groupIndex) {\n        const group = groups[groupIndex];\n\n        for (const blockId of group.blockIds) {\n          // make an async IIFE for each block\n          this.blockRequests.set(blockId, (async () => {\n            try {\n              const response = (await groupRequests)[groupIndex];\n              const blockOffset = blockId * this.blockSize;\n              const o = blockOffset - response.offset;\n              const t = Math.min(o + this.blockSize, response.data.byteLength);\n              const data = response.data.slice(o, t);\n              const block = new Block(\n                blockOffset,\n                data.byteLength,\n                data,\n                blockId,\n              );\n              this.blockCache.set(blockId, block);\n              this.abortedBlockIds.delete(blockId);\n            } catch (err) {\n              if (err.name === 'AbortError') {\n                // store the signal here, we need it to determine later if an\n                // error was caused by this signal\n                err.signal = signal;\n                this.blockCache.delete(blockId);\n                this.abortedBlockIds.add(blockId);\n              } else {\n                throw err;\n              }\n            } finally {\n              this.blockRequests.delete(blockId);\n            }\n          })());\n        }\n      }\n      this.blockIdsToFetch.clear();\n    }\n  }\n\n  /**\n   *\n   * @param {Set} blockIds\n   * @returns {BlockGroup[]}\n   */\n  groupBlocks(blockIds) {\n    const sortedBlockIds = Array.from(blockIds).sort((a, b) => a - b);\n    if (sortedBlockIds.length === 0) {\n      return [];\n    }\n    let current = [];\n    let lastBlockId = null;\n    const groups = [];\n\n    for (const blockId of sortedBlockIds) {\n      if (lastBlockId === null || lastBlockId + 1 === blockId) {\n        current.push(blockId);\n        lastBlockId = blockId;\n      } else {\n        groups.push(new BlockGroup(\n          current[0] * this.blockSize,\n          current.length * this.blockSize,\n          current,\n        ));\n        current = [blockId];\n        lastBlockId = blockId;\n      }\n    }\n\n    groups.push(new BlockGroup(\n      current[0] * this.blockSize,\n      current.length * this.blockSize,\n      current,\n    ));\n\n    return groups;\n  }\n\n  /**\n   *\n   * @param {import(\"./basesource\").Slice[]} slices\n   * @param {Map} blocks\n   */\n  readSliceData(slices, blocks) {\n    return slices.map((slice) => {\n      let top = slice.offset + slice.length;\n      if (this.fileSize !== null) {\n        top = Math.min(this.fileSize, top);\n      }\n      const blockIdLow = Math.floor(slice.offset / this.blockSize);\n      const blockIdHigh = Math.floor(top / this.blockSize);\n      const sliceData = new ArrayBuffer(slice.length);\n      const sliceView = new Uint8Array(sliceData);\n\n      for (let blockId = blockIdLow; blockId <= blockIdHigh; ++blockId) {\n        const block = blocks.get(blockId);\n        const delta = block.offset - slice.offset;\n        const topDelta = block.top - top;\n        let blockInnerOffset = 0;\n        let rangeInnerOffset = 0;\n        let usedBlockLength;\n\n        if (delta < 0) {\n          blockInnerOffset = -delta;\n        } else if (delta > 0) {\n          rangeInnerOffset = delta;\n        }\n\n        if (topDelta < 0) {\n          usedBlockLength = block.length - blockInnerOffset;\n        } else {\n          usedBlockLength = top - block.offset - blockInnerOffset;\n        }\n\n        const blockView = new Uint8Array(block.data, blockInnerOffset, usedBlockLength);\n        sliceView.set(blockView, rangeInnerOffset);\n      }\n\n      return sliceData;\n    });\n  }\n}\n","export class BaseResponse {\n  /**\n   * Returns whether the response has an ok'ish status code\n   */\n  get ok() {\n    return this.status >= 200 && this.status <= 299;\n  }\n\n  /**\n   * Returns the status code of the response\n   */\n  get status() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * Returns the value of the specified header\n   * @param {string} headerName the header name\n   * @returns {string} the header value\n   */\n  getHeader(headerName) { // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @returns {ArrayBuffer} the response data of the request\n   */\n  async getData() {\n    throw new Error('not implemented');\n  }\n}\n\nexport class BaseClient {\n  constructor(url) {\n    this.url = url;\n  }\n\n  /**\n   * Send a request with the options\n   * @param {{headers: HeadersInit, signal: AbortSignal}} [options={}]\n   * @returns {Promise<BaseResponse>}\n   */\n  async request({ headers, signal } = {}) { // eslint-disable-line no-unused-vars\n    throw new Error('request is not implemented');\n  }\n}\n","import { BaseClient, BaseResponse } from './base.js';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer\n      ? await this.response.arrayBuffer()\n      : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  /**\n   * @param {{headers: HeadersInit, signal: AbortSignal}} [options={}]\n   * @returns {Promise<FetchResponse>}\n   */\n  async request({ headers, signal } = {}) {\n    const response = await fetch(this.url, {\n      headers, credentials: this.credentials, signal,\n    });\n    return new FetchResponse(response);\n  }\n}\n","import { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n\n  get status() {\n    return this.xhr.status;\n  }\n\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n\n  async getData() {\n    return this.data;\n  }\n}\n\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n\n      // hook signals\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n      xhr.onerror = reject;\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n      xhr.send();\n\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n","import http from 'http';\nimport https from 'https';\nimport urlMod from 'url';\n\nimport { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass HttpResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for node HTTP/HTTPS API Response\n   * @param {http.ServerResponse} response\n   */\n  constructor(response, dataPromise) {\n    super();\n    this.response = response;\n    this.dataPromise = dataPromise;\n  }\n\n  get status() {\n    return this.response.statusCode;\n  }\n\n  getHeader(name) {\n    return this.response.headers[name];\n  }\n\n  async getData() {\n    const data = await this.dataPromise;\n    return data;\n  }\n}\n\nexport class HttpClient extends BaseClient {\n  constructor(url) {\n    super(url);\n    this.parsedUrl = urlMod.parse(this.url);\n    this.httpApi = (this.parsedUrl.protocol === 'http:' ? http : https);\n  }\n\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const request = this.httpApi.get(\n        {\n          ...this.parsedUrl,\n          headers,\n        },\n        (response) => {\n          const dataPromise = new Promise((resolveData) => {\n            const chunks = [];\n\n            // collect chunks\n            response.on('data', (chunk) => {\n              chunks.push(chunk);\n            });\n\n            // concatenate all chunks and resolve the promise with the resulting buffer\n            response.on('end', () => {\n              const data = Buffer.concat(chunks).buffer;\n              resolveData(data);\n            });\n            response.on('error', reject);\n          });\n          resolve(new HttpResponse(response, dataPromise));\n        },\n      );\n      request.on('error', reject);\n\n      if (signal) {\n        if (signal.aborted) {\n          request.destroy(new AbortError('Request aborted'));\n        }\n        signal.addEventListener('abort', () => request.destroy(new AbortError('Request aborted')));\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n","import { parseByteRanges, parseContentRange, parseContentType } from './httputils.js';\nimport { BaseSource } from './basesource.js';\nimport { BlockedSource } from './blockedsource.js';\n\nimport { FetchClient } from './client/fetch.js';\nimport { XHRClient } from './client/xhr.js';\nimport { HttpClient } from './client/http.js';\n\nclass RemoteSource extends BaseSource {\n  /**\n   *\n   * @param {BaseClient} client\n   * @param {object} headers\n   * @param {numbers} maxRanges\n   * @param {boolean} allowFullFile\n   */\n  constructor(client, headers, maxRanges, allowFullFile) {\n    super();\n    this.client = client;\n    this.headers = headers;\n    this.maxRanges = maxRanges;\n    this.allowFullFile = allowFullFile;\n    this._fileSize = null;\n  }\n\n  /**\n   *\n   * @param {Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    // if we allow multi-ranges, split the incoming request into that many sub-requests\n    // and join them afterwards\n    if (this.maxRanges >= slices.length) {\n      return this.fetchSlices(slices, signal);\n    } else if (this.maxRanges > 0 && slices.length > 1) {\n      // TODO: split into multiple multi-range requests\n\n      // const subSlicesRequests = [];\n      // for (let i = 0; i < slices.length; i += this.maxRanges) {\n      //   subSlicesRequests.push(\n      //     this.fetchSlices(slices.slice(i, i + this.maxRanges), signal),\n      //   );\n      // }\n      // return (await Promise.all(subSlicesRequests)).flat();\n    }\n\n    // otherwise make a single request for each slice\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  async fetchSlices(slices, signal) {\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${slices\n          .map(({ offset, length }) => `${offset}-${offset + length}`)\n          .join(',')\n        }`,\n      },\n      signal,\n    });\n\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const { type, params } = parseContentType(response.getHeader('content-type'));\n      if (type === 'multipart/byteranges') {\n        const byteRanges = parseByteRanges(await response.getData(), params.boundary);\n        this._fileSize = byteRanges[0].fileSize || null;\n        return byteRanges;\n      }\n\n      const data = await response.getData();\n\n      const { start, end, total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      const first = [{\n        data,\n        offset: start,\n        length: end - start,\n      }];\n\n      if (slices.length > 1) {\n        // we requested more than one slice, but got only the first\n        // unfortunately, some HTTP Servers don't support multi-ranges\n        // and return only the first\n\n        // get the rest of the slices and fetch them iteratively\n        const others = await Promise.all(slices.slice(1).map((slice) => this.fetchSlice(slice, signal)));\n        return first.concat(others);\n      }\n      return first;\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n      const data = await response.getData();\n      this._fileSize = data.byteLength;\n      return [{\n        data,\n        offset: 0,\n        length: data.byteLength,\n      }];\n    }\n  }\n\n  async fetchSlice(slice, signal) {\n    const { offset, length } = slice;\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${offset}-${offset + length}`,\n      },\n      signal,\n    });\n\n    // check the response was okay and if the server actually understands range requests\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const data = await response.getData();\n\n      const { total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      return {\n        data,\n        offset,\n        length,\n      };\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n\n      const data = await response.getData();\n\n      this._fileSize = data.byteLength;\n      return {\n        data,\n        offset: 0,\n        length: data.byteLength,\n      };\n    }\n  }\n\n  get fileSize() {\n    return this._fileSize;\n  }\n}\n\nfunction maybeWrapInBlockedSource(source, { blockSize, cacheSize }) {\n  if (blockSize === null) {\n    return source;\n  }\n  return new BlockedSource(source, { blockSize, cacheSize });\n}\n\nexport function makeFetchSource(url, { headers = {}, credentials, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new FetchClient(url, credentials);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeXHRSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new XHRClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeHttpSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new HttpClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeCustomSource(client, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\n/**\n *\n * @param {string} url\n * @param {object} options\n */\nexport function makeRemoteSource(url, { forceXHR = false, ...clientOptions } = {}) {\n  if (typeof fetch === 'function' && !forceXHR) {\n    return makeFetchSource(url, clientOptions);\n  }\n  if (typeof XMLHttpRequest !== 'undefined') {\n    return makeXHRSource(url, clientOptions);\n  }\n  return makeHttpSource(url, clientOptions);\n}\n","import { BaseSource } from './basesource.js';\n\nclass FileReaderSource extends BaseSource {\n  constructor(file) {\n    super();\n    this.file = file;\n  }\n\n  async fetchSlice(slice, signal) {\n    return new Promise((resolve, reject) => {\n      const blob = this.file.slice(slice.offset, slice.offset + slice.length);\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = reject;\n      reader.onabort = reject;\n      reader.readAsArrayBuffer(blob);\n\n      if (signal) {\n        signal.addEventListener('abort', () => reader.abort());\n      }\n    });\n  }\n}\n\n/**\n * Create a new source from a given file/blob.\n * @param {Blob} file The file or blob to read from.\n * @returns The constructed source\n */\nexport function makeFileReaderSource(file) {\n  return new FileReaderSource(file);\n}\n","/** @module geotiff */\nimport GeoTIFFImage from './geotiffimage.js';\nimport DataView64 from './dataview64.js';\nimport DataSlice from './dataslice.js';\nimport Pool from './pool.js';\n\nimport { makeRemoteSource, makeCustomSource } from './source/remote.js';\nimport { makeBufferSource } from './source/arraybuffer.js';\nimport { makeFileReaderSource } from './source/filereader.js';\nimport { makeFileSource } from './source/file.js';\nimport { BaseClient, BaseResponse } from './source/client/base.js';\n\nimport { fieldTypes, fieldTagNames, arrayFields, geoKeyNames } from './globals.js';\nimport { writeGeotiff } from './geotiffwriter.js';\nimport * as globals from './globals.js';\nimport * as rgb from './rgb.js';\nimport { getDecoder, addDecoder } from './compression/index.js';\nimport { setLogger } from './logging.js';\n\nexport { globals };\nexport { rgb };\nexport { default as BaseDecoder } from './compression/basedecoder.js';\nexport { getDecoder, addDecoder };\nexport { setLogger };\n\n/**\n * @typedef {Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array}\n * TypedArray\n */\n\n/**\n * @typedef {{ height:number, width: number }} Dimensions\n */\n\n/**\n * The autogenerated docs are a little confusing here. The effective type is:\n *\n * `TypedArray & { height: number; width: number}`\n * @typedef {TypedArray & Dimensions} TypedArrayWithDimensions\n */\n\n/**\n * The autogenerated docs are a little confusing here. The effective type is:\n *\n * `TypedArray[] & { height: number; width: number}`\n * @typedef {TypedArray[] & Dimensions} TypedArrayArrayWithDimensions\n */\n\n/**\n *  The autogenerated docs are a little confusing here. The effective type is:\n *\n * `(TypedArray | TypedArray[]) & { height: number; width: number}`\n * @typedef {TypedArrayWithDimensions | TypedArrayArrayWithDimensions} ReadRasterResult\n */\n\nfunction getFieldTypeLength(fieldType) {\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.SBYTE: case fieldTypes.UNDEFINED:\n      return 1;\n    case fieldTypes.SHORT: case fieldTypes.SSHORT:\n      return 2;\n    case fieldTypes.LONG: case fieldTypes.SLONG: case fieldTypes.FLOAT: case fieldTypes.IFD:\n      return 4;\n    case fieldTypes.RATIONAL: case fieldTypes.SRATIONAL: case fieldTypes.DOUBLE:\n    case fieldTypes.LONG8: case fieldTypes.SLONG8: case fieldTypes.IFD8:\n      return 8;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n}\n\nfunction parseGeoKeyDirectory(fileDirectory) {\n  const rawGeoKeyDirectory = fileDirectory.GeoKeyDirectory;\n  if (!rawGeoKeyDirectory) {\n    return null;\n  }\n\n  const geoKeyDirectory = {};\n  for (let i = 4; i <= rawGeoKeyDirectory[3] * 4; i += 4) {\n    const key = geoKeyNames[rawGeoKeyDirectory[i]];\n    const location = (rawGeoKeyDirectory[i + 1])\n      ? (fieldTagNames[rawGeoKeyDirectory[i + 1]]) : null;\n    const count = rawGeoKeyDirectory[i + 2];\n    const offset = rawGeoKeyDirectory[i + 3];\n\n    let value = null;\n    if (!location) {\n      value = offset;\n    } else {\n      value = fileDirectory[location];\n      if (typeof value === 'undefined' || value === null) {\n        throw new Error(`Could not get value of geoKey '${key}'.`);\n      } else if (typeof value === 'string') {\n        value = value.substring(offset, offset + count - 1);\n      } else if (value.subarray) {\n        value = value.subarray(offset, offset + count);\n        if (count === 1) {\n          value = value[0];\n        }\n      }\n    }\n    geoKeyDirectory[key] = value;\n  }\n  return geoKeyDirectory;\n}\n\nfunction getValues(dataSlice, fieldType, count, offset) {\n  let values = null;\n  let readMethod = null;\n  const fieldTypeLength = getFieldTypeLength(fieldType);\n\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.UNDEFINED:\n      values = new Uint8Array(count); readMethod = dataSlice.readUint8;\n      break;\n    case fieldTypes.SBYTE:\n      values = new Int8Array(count); readMethod = dataSlice.readInt8;\n      break;\n    case fieldTypes.SHORT:\n      values = new Uint16Array(count); readMethod = dataSlice.readUint16;\n      break;\n    case fieldTypes.SSHORT:\n      values = new Int16Array(count); readMethod = dataSlice.readInt16;\n      break;\n    case fieldTypes.LONG: case fieldTypes.IFD:\n      values = new Uint32Array(count); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SLONG:\n      values = new Int32Array(count); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.LONG8: case fieldTypes.IFD8:\n      values = new Array(count); readMethod = dataSlice.readUint64;\n      break;\n    case fieldTypes.SLONG8:\n      values = new Array(count); readMethod = dataSlice.readInt64;\n      break;\n    case fieldTypes.RATIONAL:\n      values = new Uint32Array(count * 2); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SRATIONAL:\n      values = new Int32Array(count * 2); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.FLOAT:\n      values = new Float32Array(count); readMethod = dataSlice.readFloat32;\n      break;\n    case fieldTypes.DOUBLE:\n      values = new Float64Array(count); readMethod = dataSlice.readFloat64;\n      break;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n\n  // normal fields\n  if (!(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n    for (let i = 0; i < count; ++i) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n    }\n  } else { // RATIONAL or SRATIONAL\n    for (let i = 0; i < count; i += 2) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n      values[i + 1] = readMethod.call(\n        dataSlice, offset + ((i * fieldTypeLength) + 4),\n      );\n    }\n  }\n\n  if (fieldType === fieldTypes.ASCII) {\n    return new TextDecoder('utf-8').decode(values);\n  }\n  return values;\n}\n\n/**\n * Data class to store the parsed file directory, geo key directory and\n * offset to the next IFD\n */\nclass ImageFileDirectory {\n  constructor(fileDirectory, geoKeyDirectory, nextIFDByteOffset) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeyDirectory = geoKeyDirectory;\n    this.nextIFDByteOffset = nextIFDByteOffset;\n  }\n}\n\n/**\n * Error class for cases when an IFD index was requested, that does not exist\n * in the file.\n */\nclass GeoTIFFImageIndexError extends Error {\n  constructor(index) {\n    super(`No image at index ${index}`);\n    this.index = index;\n  }\n}\n\nclass GeoTIFFBase {\n  /**\n   * (experimental) Reads raster data from the best fitting image. This function uses\n   * the image with the lowest resolution that is still a higher resolution than the\n   * requested resolution.\n   * When specified, the `bbox` option is translated to the `window` option and the\n   * `resX` and `resY` to `width` and `height` respectively.\n   * Then, the [readRasters]{@link GeoTIFFImage#readRasters} method of the selected\n   * image is called and the result returned.\n   * @see GeoTIFFImage.readRasters\n   * @param {import('./geotiffimage').ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise<ReadRasterResult>} the decoded array(s), with `height` and `width`, as a promise\n   */\n  async readRasters(options = {}) {\n    const { window: imageWindow, width, height } = options;\n    let { resX, resY, bbox } = options;\n\n    const firstImage = await this.getImage();\n    let usedImage = firstImage;\n    const imageCount = await this.getImageCount();\n    const imgBBox = firstImage.getBoundingBox();\n\n    if (imageWindow && bbox) {\n      throw new Error('Both \"bbox\" and \"window\" passed.');\n    }\n\n    // if width/height is passed, transform it to resolution\n    if (width || height) {\n      // if we have an image window (pixel coordinates), transform it to a BBox\n      // using the origin/resolution of the first image.\n      if (imageWindow) {\n        const [oX, oY] = firstImage.getOrigin();\n        const [rX, rY] = firstImage.getResolution();\n\n        bbox = [\n          oX + (imageWindow[0] * rX),\n          oY + (imageWindow[1] * rY),\n          oX + (imageWindow[2] * rX),\n          oY + (imageWindow[3] * rY),\n        ];\n      }\n\n      // if we have a bbox (or calculated one)\n\n      const usedBBox = bbox || imgBBox;\n\n      if (width) {\n        if (resX) {\n          throw new Error('Both width and resX passed');\n        }\n        resX = (usedBBox[2] - usedBBox[0]) / width;\n      }\n      if (height) {\n        if (resY) {\n          throw new Error('Both width and resY passed');\n        }\n        resY = (usedBBox[3] - usedBBox[1]) / height;\n      }\n    }\n\n    // if resolution is set or calculated, try to get the image with the worst acceptable resolution\n    if (resX || resY) {\n      const allImages = [];\n      for (let i = 0; i < imageCount; ++i) {\n        const image = await this.getImage(i);\n        const { SubfileType: subfileType, NewSubfileType: newSubfileType } = image.fileDirectory;\n        if (i === 0 || subfileType === 2 || newSubfileType & 1) {\n          allImages.push(image);\n        }\n      }\n\n      allImages.sort((a, b) => a.getWidth() - b.getWidth());\n      for (let i = 0; i < allImages.length; ++i) {\n        const image = allImages[i];\n        const imgResX = (imgBBox[2] - imgBBox[0]) / image.getWidth();\n        const imgResY = (imgBBox[3] - imgBBox[1]) / image.getHeight();\n\n        usedImage = image;\n        if ((resX && resX > imgResX) || (resY && resY > imgResY)) {\n          break;\n        }\n      }\n    }\n\n    let wnd = imageWindow;\n    if (bbox) {\n      const [oX, oY] = firstImage.getOrigin();\n      const [imageResX, imageResY] = usedImage.getResolution(firstImage);\n\n      wnd = [\n        Math.round((bbox[0] - oX) / imageResX),\n        Math.round((bbox[1] - oY) / imageResY),\n        Math.round((bbox[2] - oX) / imageResX),\n        Math.round((bbox[3] - oY) / imageResY),\n      ];\n      wnd = [\n        Math.min(wnd[0], wnd[2]),\n        Math.min(wnd[1], wnd[3]),\n        Math.max(wnd[0], wnd[2]),\n        Math.max(wnd[1], wnd[3]),\n      ];\n    }\n\n    return usedImage.readRasters({ ...options, window: wnd });\n  }\n}\n\n/**\n * @typedef {Object} GeoTIFFOptions\n * @property {boolean} [cache=false] whether or not decoded tiles shall be cached.\n */\n\n/**\n * The abstraction for a whole GeoTIFF file.\n * @augments GeoTIFFBase\n */\nclass GeoTIFF extends GeoTIFFBase {\n  /**\n   * @constructor\n   * @param {*} source The datasource to read from.\n   * @param {boolean} littleEndian Whether the image uses little endian.\n   * @param {boolean} bigTiff Whether the image uses bigTIFF conventions.\n   * @param {number} firstIFDOffset The numeric byte-offset from the start of the image\n   *                                to the first IFD.\n   * @param {GeoTIFFOptions} [options] further options.\n   */\n  constructor(source, littleEndian, bigTiff, firstIFDOffset, options = {}) {\n    super();\n    this.source = source;\n    this.littleEndian = littleEndian;\n    this.bigTiff = bigTiff;\n    this.firstIFDOffset = firstIFDOffset;\n    this.cache = options.cache || false;\n    this.ifdRequests = [];\n    this.ghostValues = null;\n  }\n\n  async getSlice(offset, size) {\n    const fallbackSize = this.bigTiff ? 4048 : 1024;\n    return new DataSlice(\n      (await this.source.fetch([{\n        offset,\n        length: typeof size !== 'undefined' ? size : fallbackSize,\n      }]))[0],\n      offset,\n      this.littleEndian,\n      this.bigTiff,\n    );\n  }\n\n  /**\n   * Instructs to parse an image file directory at the given file offset.\n   * As there is no way to ensure that a location is indeed the start of an IFD,\n   * this function must be called with caution (e.g only using the IFD offsets from\n   * the headers or other IFDs).\n   * @param {number} offset the offset to parse the IFD at\n   * @returns {Promise<ImageFileDirectory>} the parsed IFD\n   */\n  async parseFileDirectoryAt(offset) {\n    const entrySize = this.bigTiff ? 20 : 12;\n    const offsetSize = this.bigTiff ? 8 : 2;\n\n    let dataSlice = await this.getSlice(offset);\n    const numDirEntries = this.bigTiff\n      ? dataSlice.readUint64(offset)\n      : dataSlice.readUint16(offset);\n\n    // if the slice does not cover the whole IFD, request a bigger slice, where the\n    // whole IFD fits: num of entries + n x tag length + offset to next IFD\n    const byteSize = (numDirEntries * entrySize) + (this.bigTiff ? 16 : 6);\n    if (!dataSlice.covers(offset, byteSize)) {\n      dataSlice = await this.getSlice(offset, byteSize);\n    }\n\n    const fileDirectory = {};\n\n    // loop over the IFD and create a file directory object\n    let i = offset + (this.bigTiff ? 8 : 2);\n    for (let entryCount = 0; entryCount < numDirEntries; i += entrySize, ++entryCount) {\n      const fieldTag = dataSlice.readUint16(i);\n      const fieldType = dataSlice.readUint16(i + 2);\n      const typeCount = this.bigTiff\n        ? dataSlice.readUint64(i + 4)\n        : dataSlice.readUint32(i + 4);\n\n      let fieldValues;\n      let value;\n      const fieldTypeLength = getFieldTypeLength(fieldType);\n      const valueOffset = i + (this.bigTiff ? 12 : 8);\n\n      // check whether the value is directly encoded in the tag or refers to a\n      // different external byte range\n      if (fieldTypeLength * typeCount <= (this.bigTiff ? 8 : 4)) {\n        fieldValues = getValues(dataSlice, fieldType, typeCount, valueOffset);\n      } else {\n        // resolve the reference to the actual byte range\n        const actualOffset = dataSlice.readOffset(valueOffset);\n        const length = getFieldTypeLength(fieldType) * typeCount;\n\n        // check, whether we actually cover the referenced byte range; if not,\n        // request a new slice of bytes to read from it\n        if (dataSlice.covers(actualOffset, length)) {\n          fieldValues = getValues(dataSlice, fieldType, typeCount, actualOffset);\n        } else {\n          const fieldDataSlice = await this.getSlice(actualOffset, length);\n          fieldValues = getValues(fieldDataSlice, fieldType, typeCount, actualOffset);\n        }\n      }\n\n      // unpack single values from the array\n      if (typeCount === 1 && arrayFields.indexOf(fieldTag) === -1\n        && !(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n        value = fieldValues[0];\n      } else {\n        value = fieldValues;\n      }\n\n      // write the tags value to the file directly\n      fileDirectory[fieldTagNames[fieldTag]] = value;\n    }\n    const geoKeyDirectory = parseGeoKeyDirectory(fileDirectory);\n    const nextIFDByteOffset = dataSlice.readOffset(\n      offset + offsetSize + (entrySize * numDirEntries),\n    );\n\n    return new ImageFileDirectory(\n      fileDirectory,\n      geoKeyDirectory,\n      nextIFDByteOffset,\n    );\n  }\n\n  async requestIFD(index) {\n    // see if we already have that IFD index requested.\n    if (this.ifdRequests[index]) {\n      // attach to an already requested IFD\n      return this.ifdRequests[index];\n    } else if (index === 0) {\n      // special case for index 0\n      this.ifdRequests[index] = this.parseFileDirectoryAt(this.firstIFDOffset);\n      return this.ifdRequests[index];\n    } else if (!this.ifdRequests[index - 1]) {\n      // if the previous IFD was not yet loaded, load that one first\n      // this is the recursive call.\n      try {\n        this.ifdRequests[index - 1] = this.requestIFD(index - 1);\n      } catch (e) {\n        // if the previous one already was an index error, rethrow\n        // with the current index\n        if (e instanceof GeoTIFFImageIndexError) {\n          throw new GeoTIFFImageIndexError(index);\n        }\n        // rethrow anything else\n        throw e;\n      }\n    }\n    // if the previous IFD was loaded, we can finally fetch the one we are interested in.\n    // we need to wrap this in an IIFE, otherwise this.ifdRequests[index] would be delayed\n    this.ifdRequests[index] = (async () => {\n      const previousIfd = await this.ifdRequests[index - 1];\n      if (previousIfd.nextIFDByteOffset === 0) {\n        throw new GeoTIFFImageIndexError(index);\n      }\n      return this.parseFileDirectoryAt(previousIfd.nextIFDByteOffset);\n    })();\n    return this.ifdRequests[index];\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    const ifd = await this.requestIFD(index);\n    return new GeoTIFFImage(\n      ifd.fileDirectory, ifd.geoKeyDirectory,\n      this.dataView, this.littleEndian, this.cache, this.source,\n    );\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    let index = 0;\n    // loop until we run out of IFDs\n    let hasNext = true;\n    while (hasNext) {\n      try {\n        await this.requestIFD(index);\n        ++index;\n      } catch (e) {\n        if (e instanceof GeoTIFFImageIndexError) {\n          hasNext = false;\n        } else {\n          throw e;\n        }\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Get the values of the COG ghost area as a parsed map.\n   * See https://gdal.org/drivers/raster/cog.html#header-ghost-area for reference\n   * @returns {Promise<Object>} the parsed ghost area or null, if no such area was found\n   */\n  async getGhostValues() {\n    const offset = this.bigTiff ? 16 : 8;\n    if (this.ghostValues) {\n      return this.ghostValues;\n    }\n    const detectionString = 'GDAL_STRUCTURAL_METADATA_SIZE=';\n    const heuristicAreaSize = detectionString.length + 100;\n    let slice = await this.getSlice(offset, heuristicAreaSize);\n    if (detectionString === getValues(slice, fieldTypes.ASCII, detectionString.length, offset)) {\n      const valuesString = getValues(slice, fieldTypes.ASCII, heuristicAreaSize, offset);\n      const firstLine = valuesString.split('\\n')[0];\n      const metadataSize = Number(firstLine.split('=')[1].split(' ')[0]) + firstLine.length;\n      if (metadataSize > heuristicAreaSize) {\n        slice = await this.getSlice(offset, metadataSize);\n      }\n      const fullString = getValues(slice, fieldTypes.ASCII, metadataSize, offset);\n      this.ghostValues = {};\n      fullString\n        .split('\\n')\n        .filter((line) => line.length > 0)\n        .map((line) => line.split('='))\n        .forEach(([key, value]) => {\n          this.ghostValues[key] = value;\n        });\n    }\n    return this.ghostValues;\n  }\n\n  /**\n   * Parse a (Geo)TIFF file from the given source.\n   *\n   * @param {*} source The source of data to parse from.\n   * @param {GeoTIFFOptions} [options] Additional options.\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   */\n  static async fromSource(source, options, signal) {\n    const headerData = (await source.fetch([{ offset: 0, length: 1024 }], signal))[0];\n    const dataView = new DataView64(headerData);\n\n    const BOM = dataView.getUint16(0, 0);\n    let littleEndian;\n    if (BOM === 0x4949) {\n      littleEndian = true;\n    } else if (BOM === 0x4D4D) {\n      littleEndian = false;\n    } else {\n      throw new TypeError('Invalid byte order value.');\n    }\n\n    const magicNumber = dataView.getUint16(2, littleEndian);\n    let bigTiff;\n    if (magicNumber === 42) {\n      bigTiff = false;\n    } else if (magicNumber === 43) {\n      bigTiff = true;\n      const offsetByteSize = dataView.getUint16(4, littleEndian);\n      if (offsetByteSize !== 8) {\n        throw new Error('Unsupported offset byte-size.');\n      }\n    } else {\n      throw new TypeError('Invalid magic number.');\n    }\n\n    const firstIFDOffset = bigTiff\n      ? dataView.getUint64(8, littleEndian)\n      : dataView.getUint32(4, littleEndian);\n    return new GeoTIFF(source, littleEndian, bigTiff, firstIFDOffset, options);\n  }\n\n  /**\n   * Closes the underlying file buffer\n   * N.B. After the GeoTIFF has been completely processed it needs\n   * to be closed but only if it has been constructed from a file.\n   */\n  close() {\n    if (typeof this.source.close === 'function') {\n      return this.source.close();\n    }\n    return false;\n  }\n}\n\nexport { GeoTIFF };\nexport default GeoTIFF;\n\n/**\n * Wrapper for GeoTIFF files that have external overviews.\n * @augments GeoTIFFBase\n */\nclass MultiGeoTIFF extends GeoTIFFBase {\n  /**\n   * Construct a new MultiGeoTIFF from a main and several overview files.\n   * @param {GeoTIFF} mainFile The main GeoTIFF file.\n   * @param {GeoTIFF[]} overviewFiles An array of overview files.\n   */\n  constructor(mainFile, overviewFiles) {\n    super();\n    this.mainFile = mainFile;\n    this.overviewFiles = overviewFiles;\n    this.imageFiles = [mainFile].concat(overviewFiles);\n\n    this.fileDirectoriesPerFile = null;\n    this.fileDirectoriesPerFileParsing = null;\n    this.imageCount = null;\n  }\n\n  async parseFileDirectoriesPerFile() {\n    const requests = [this.mainFile.parseFileDirectoryAt(this.mainFile.firstIFDOffset)]\n      .concat(this.overviewFiles.map((file) => file.parseFileDirectoryAt(file.firstIFDOffset)));\n\n    this.fileDirectoriesPerFile = await Promise.all(requests);\n    return this.fileDirectoriesPerFile;\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    await this.getImageCount();\n    await this.parseFileDirectoriesPerFile();\n    let visited = 0;\n    let relativeIndex = 0;\n    for (let i = 0; i < this.imageFiles.length; i++) {\n      const imageFile = this.imageFiles[i];\n      for (let ii = 0; ii < this.imageCounts[i]; ii++) {\n        if (index === visited) {\n          const ifd = await imageFile.requestIFD(relativeIndex);\n          return new GeoTIFFImage(\n            ifd.fileDirectory, ifd.geoKeyDirectory,\n            imageFile.dataView, imageFile.littleEndian, imageFile.cache, imageFile.source,\n          );\n        }\n        visited++;\n        relativeIndex++;\n      }\n      relativeIndex = 0;\n    }\n\n    throw new RangeError('Invalid image index');\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    if (this.imageCount !== null) {\n      return this.imageCount;\n    }\n    const requests = [this.mainFile.getImageCount()]\n      .concat(this.overviewFiles.map((file) => file.getImageCount()));\n    this.imageCounts = await Promise.all(requests);\n    this.imageCount = this.imageCounts.reduce((count, ifds) => count + ifds, 0);\n    return this.imageCount;\n  }\n}\n\nexport { MultiGeoTIFF };\n\n/**\n * Creates a new GeoTIFF from a remote URL.\n * @param {string} url The URL to access the image from\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromUrl(url, options = {}, signal) {\n  return GeoTIFF.fromSource(makeRemoteSource(url, options), signal);\n}\n\n/**\n * Creates a new GeoTIFF from a custom {@link BaseClient}.\n * @param {BaseClient} client The client.\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromCustomClient(client, options = {}, signal) {\n  return GeoTIFF.fromSource(makeCustomSource(client, options), signal);\n}\n\n/**\n * Construct a new GeoTIFF from an\n * [ArrayBuffer]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer}.\n * @param {ArrayBuffer} arrayBuffer The data to read the file from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromArrayBuffer(arrayBuffer, signal) {\n  return GeoTIFF.fromSource(makeBufferSource(arrayBuffer), signal);\n}\n\n/**\n * Construct a GeoTIFF from a local file path. This uses the node\n * [filesystem API]{@link https://nodejs.org/api/fs.html} and is\n * not available on browsers.\n *\n * N.B. After the GeoTIFF has been completely processed it needs\n * to be closed but only if it has been constructed from a file.\n * @param {string} path The file path to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromFile(path, signal) {\n  return GeoTIFF.fromSource(makeFileSource(path), signal);\n}\n\n/**\n * Construct a GeoTIFF from an HTML\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob} or\n * [File]{@link https://developer.mozilla.org/en-US/docs/Web/API/File}\n * object.\n * @param {Blob|File} blob The Blob or File object to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromBlob(blob, signal) {\n  return GeoTIFF.fromSource(makeFileReaderSource(blob), signal);\n}\n\n/**\n * Construct a MultiGeoTIFF from the given URLs.\n * @param {string} mainUrl The URL for the main file.\n * @param {string[]} overviewUrls An array of URLs for the overview images.\n * @param {Object} [options] Additional options to pass to the source.\n *                           See [makeRemoteSource]{@link module:source.makeRemoteSource}\n *                           for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<MultiGeoTIFF>} The resulting MultiGeoTIFF file.\n */\nexport async function fromUrls(mainUrl, overviewUrls = [], options = {}, signal) {\n  const mainFile = await GeoTIFF.fromSource(makeRemoteSource(mainUrl, options), signal);\n  const overviewFiles = await Promise.all(\n    overviewUrls.map((url) => GeoTIFF.fromSource(makeRemoteSource(url, options))),\n  );\n\n  return new MultiGeoTIFF(mainFile, overviewFiles);\n}\n\n/**\n * Main creating function for GeoTIFF files.\n * @param {(Array)} array of pixel values\n * @returns {metadata} metadata\n */\nexport function writeArrayBuffer(values, metadata) {\n  return writeGeotiff(values, metadata);\n}\n\nexport { Pool };\nexport { GeoTIFFImage };\nexport { BaseClient, BaseResponse };\n","export function fromWhiteIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = 256 - (raster[i] / max * 256);\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromBlackIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = raster[i] / max * 256;\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromPalette(raster, colorMap) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  const greenOffset = colorMap.length / 3;\n  const blueOffset = colorMap.length / 3 * 2;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    const mapIndex = raster[i];\n    rgbRaster[j] = colorMap[mapIndex] / 65536 * 256;\n    rgbRaster[j + 1] = colorMap[mapIndex + greenOffset] / 65536 * 256;\n    rgbRaster[j + 2] = colorMap[mapIndex + blueOffset] / 65536 * 256;\n  }\n  return rgbRaster;\n}\n\nexport function fromCMYK(cmykRaster) {\n  const { width, height } = cmykRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  for (let i = 0, j = 0; i < cmykRaster.length; i += 4, j += 3) {\n    const c = cmykRaster[i];\n    const m = cmykRaster[i + 1];\n    const y = cmykRaster[i + 2];\n    const k = cmykRaster[i + 3];\n\n    rgbRaster[j] = 255 * ((255 - c) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 1] = 255 * ((255 - m) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 2] = 255 * ((255 - y) / 256) * ((255 - k) / 256);\n  }\n  return rgbRaster;\n}\n\nexport function fromYCbCr(yCbCrRaster) {\n  const { width, height } = yCbCrRaster;\n  const rgbRaster = new Uint8ClampedArray(width * height * 3);\n  for (let i = 0, j = 0; i < yCbCrRaster.length; i += 3, j += 3) {\n    const y = yCbCrRaster[i];\n    const cb = yCbCrRaster[i + 1];\n    const cr = yCbCrRaster[i + 2];\n\n    rgbRaster[j] = (y + (1.40200 * (cr - 0x80)));\n    rgbRaster[j + 1] = (y - (0.34414 * (cb - 0x80)) - (0.71414 * (cr - 0x80)));\n    rgbRaster[j + 2] = (y + (1.77200 * (cb - 0x80)));\n  }\n  return rgbRaster;\n}\n\nconst Xn = 0.95047;\nconst Yn = 1.00000;\nconst Zn = 1.08883;\n\n// from https://github.com/antimatter15/rgb-lab/blob/master/color.js\n\nexport function fromCIELab(cieLabRaster) {\n  const { width, height } = cieLabRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n\n  for (let i = 0, j = 0; i < cieLabRaster.length; i += 3, j += 3) {\n    const L = cieLabRaster[i + 0];\n    const a_ = cieLabRaster[i + 1] << 24 >> 24; // conversion from uint8 to int8\n    const b_ = cieLabRaster[i + 2] << 24 >> 24; // same\n\n    let y = (L + 16) / 116;\n    let x = (a_ / 500) + y;\n    let z = y - (b_ / 200);\n    let r;\n    let g;\n    let b;\n\n    x = Xn * ((x * x * x > 0.008856) ? x * x * x : (x - (16 / 116)) / 7.787);\n    y = Yn * ((y * y * y > 0.008856) ? y * y * y : (y - (16 / 116)) / 7.787);\n    z = Zn * ((z * z * z > 0.008856) ? z * z * z : (z - (16 / 116)) / 7.787);\n\n    r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n    g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n    b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n    r = (r > 0.0031308) ? ((1.055 * (r ** (1 / 2.4))) - 0.055) : 12.92 * r;\n    g = (g > 0.0031308) ? ((1.055 * (g ** (1 / 2.4))) - 0.055) : 12.92 * g;\n    b = (b > 0.0031308) ? ((1.055 * (b ** (1 / 2.4))) - 0.055) : 12.92 * b;\n\n    rgbRaster[j] = Math.max(0, Math.min(1, r)) * 255;\n    rgbRaster[j + 1] = Math.max(0, Math.min(1, g)) * 255;\n    rgbRaster[j + 2] = Math.max(0, Math.min(1, b)) * 255;\n  }\n  return rgbRaster;\n}\n","/**\n * @module resample\n */\n\nfunction copyNewSize(array, width, height, samplesPerPixel = 1) {\n  return new (Object.getPrototypeOf(array).constructor)(width * height * samplesPerPixel);\n}\n\n/**\n * Resample the input arrays using nearest neighbor value selection.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const cy = Math.min(Math.round(relY * y), inHeight - 1);\n      for (let x = 0; x < outWidth; ++x) {\n        const cx = Math.min(Math.round(relX * x), inWidth - 1);\n        const value = array[(cy * inWidth) + cx];\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n// simple linear interpolation, code from:\n// https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\nfunction lerp(v0, v1, t) {\n  return ((1 - t) * v0) + (t * v1);\n}\n\n/**\n * Resample the input arrays using bilinear interpolation.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const rawY = relY * y;\n\n      const yl = Math.floor(rawY);\n      const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n      for (let x = 0; x < outWidth; ++x) {\n        const rawX = relX * x;\n        const tx = rawX % 1;\n\n        const xl = Math.floor(rawX);\n        const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n        const ll = array[(yl * inWidth) + xl];\n        const hl = array[(yl * inWidth) + xh];\n        const lh = array[(yh * inWidth) + xl];\n        const hh = array[(yh * inWidth) + xh];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n/**\n * Resample the input arrays using the selected resampling method.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resample(valueArrays, inWidth, inHeight, outWidth, outHeight, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n\n/**\n * Resample the pixel interleaved input array using nearest neighbor value selection.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleNearestInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const cy = Math.min(Math.round(relY * y), inHeight - 1);\n    for (let x = 0; x < outWidth; ++x) {\n      const cx = Math.min(Math.round(relX * x), inWidth - 1);\n      for (let i = 0; i < samples; ++i) {\n        const value = valueArray[(cy * inWidth * samples) + (cx * samples) + i];\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using bilinear interpolation.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleBilinearInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const rawY = relY * y;\n\n    const yl = Math.floor(rawY);\n    const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n    for (let x = 0; x < outWidth; ++x) {\n      const rawX = relX * x;\n      const tx = rawX % 1;\n\n      const xl = Math.floor(rawX);\n      const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n      for (let i = 0; i < samples; ++i) {\n        const ll = valueArray[(yl * inWidth * samples) + (xl * samples) + i];\n        const hl = valueArray[(yl * inWidth * samples) + (xh * samples) + i];\n        const lh = valueArray[(yh * inWidth * samples) + (xl * samples) + i];\n        const hh = valueArray[(yh * inWidth * samples) + (xh * samples) + i];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using the selected resampling method.\n * @param {TypedArray} valueArray The input array to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                                 interleaved data\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray} The resampled rasters\n */\nexport function resampleInterleaved(valueArray, inWidth, inHeight, outWidth, outHeight, samples, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearestInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinearInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n","/** @module geotiffimage */\nimport { getFloat16 } from '@petamoriken/float16';\nimport getAttribute from 'xml-utils/get-attribute.js';\nimport findTagsByName from 'xml-utils/find-tags-by-name.js';\n\nimport { photometricInterpretations, ExtraSamplesValues } from './globals.js';\nimport { fromWhiteIsZero, fromBlackIsZero, fromPalette, fromCMYK, fromYCbCr, fromCIELab } from './rgb.js';\nimport { getDecoder } from './compression/index.js';\nimport { resample, resampleInterleaved } from './resample.js';\n\n/**\n * @typedef {Object} ReadRasterOptions\n * @property {Array<number>} [window=whole window] the subset to read data from in pixels.\n * @property {Array<number>} [bbox=whole image] the subset to read data from in\n *                                           geographical coordinates.\n * @property {Array<number>} [samples=all samples] the selection of samples to read from. Default is all samples.\n * @property {boolean} [interleave=false] whether the data shall be read\n *                                             in one single array or separate\n *                                             arrays.\n * @property {Pool} [pool=null] The optional decoder pool to use.\n * @property {number} [width] The desired width of the output. When the width is not the\n *                                 same as the images, resampling will be performed.\n * @property {number} [height] The desired height of the output. When the width is not the\n *                                  same as the images, resampling will be performed.\n * @property {string} [resampleMethod='nearest'] The desired resampling method.\n * @property {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                                       to be aborted\n * @property {number|number[]} [fillValue] The value to use for parts of the image\n *                                              outside of the images extent. When multiple\n *                                              samples are requested, an array of fill values\n *                                              can be passed.\n */\n\n/** @typedef {import(\"./geotiff.js\").TypedArray} TypedArray */\n/** @typedef {import(\"./geotiff.js\").ReadRasterResult} ReadRasterResult */\n\nfunction sum(array, start, end) {\n  let s = 0;\n  for (let i = start; i < end; ++i) {\n    s += array[i];\n  }\n  return s;\n}\n\nfunction arrayForType(format, bitsPerSample, size) {\n  switch (format) {\n    case 1: // unsigned integer data\n      if (bitsPerSample <= 8) {\n        return new Uint8Array(size);\n      } else if (bitsPerSample <= 16) {\n        return new Uint16Array(size);\n      } else if (bitsPerSample <= 32) {\n        return new Uint32Array(size);\n      }\n      break;\n    case 2: // twos complement signed integer data\n      if (bitsPerSample === 8) {\n        return new Int8Array(size);\n      } else if (bitsPerSample === 16) {\n        return new Int16Array(size);\n      } else if (bitsPerSample === 32) {\n        return new Int32Array(size);\n      }\n      break;\n    case 3: // floating point data\n      switch (bitsPerSample) {\n        case 16:\n        case 32:\n          return new Float32Array(size);\n        case 64:\n          return new Float64Array(size);\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  throw Error('Unsupported data format/bitsPerSample');\n}\n\nfunction needsNormalization(format, bitsPerSample) {\n  if ((format === 1 || format === 2) && bitsPerSample <= 32 && bitsPerSample % 8 === 0) {\n    return false;\n  } else if (format === 3 && (bitsPerSample === 16 || bitsPerSample === 32 || bitsPerSample === 64)) {\n    return false;\n  }\n  return true;\n}\n\nfunction normalizeArray(inBuffer, format, planarConfiguration, samplesPerPixel, bitsPerSample, tileWidth, tileHeight) {\n  // const inByteArray = new Uint8Array(inBuffer);\n  const view = new DataView(inBuffer);\n  const outSize = planarConfiguration === 2\n    ? tileHeight * tileWidth\n    : tileHeight * tileWidth * samplesPerPixel;\n  const samplesToTransfer = planarConfiguration === 2\n    ? 1 : samplesPerPixel;\n  const outArray = arrayForType(format, bitsPerSample, outSize);\n  // let pixel = 0;\n\n  const bitMask = parseInt('1'.repeat(bitsPerSample), 2);\n\n  if (format === 1) { // unsigned integer\n    // translation of https://github.com/OSGeo/gdal/blob/master/gdal/frmts/gtiff/geotiff.cpp#L7337\n    let pixelBitSkip;\n    // let sampleBitOffset = 0;\n    if (planarConfiguration === 1) {\n      pixelBitSkip = samplesPerPixel * bitsPerSample;\n      // sampleBitOffset = (samplesPerPixel - 1) * bitsPerSample;\n    } else {\n      pixelBitSkip = bitsPerSample;\n    }\n\n    // Bits per line rounds up to next byte boundary.\n    let bitsPerLine = tileWidth * pixelBitSkip;\n    if ((bitsPerLine & 7) !== 0) {\n      bitsPerLine = (bitsPerLine + 7) & (~7);\n    }\n\n    for (let y = 0; y < tileHeight; ++y) {\n      const lineBitOffset = y * bitsPerLine;\n      for (let x = 0; x < tileWidth; ++x) {\n        const pixelBitOffset = lineBitOffset + (x * samplesToTransfer * bitsPerSample);\n        for (let i = 0; i < samplesToTransfer; ++i) {\n          const bitOffset = pixelBitOffset + (i * bitsPerSample);\n          const outIndex = (((y * tileWidth) + x) * samplesToTransfer) + i;\n\n          const byteOffset = Math.floor(bitOffset / 8);\n          const innerBitOffset = bitOffset % 8;\n          if (innerBitOffset + bitsPerSample <= 8) {\n            outArray[outIndex] = (view.getUint8(byteOffset) >> (8 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 16) {\n            outArray[outIndex] = (view.getUint16(byteOffset) >> (16 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 24) {\n            const raw = (view.getUint16(byteOffset) << 8) | (view.getUint8(byteOffset + 2));\n            outArray[outIndex] = (raw >> (24 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else {\n            outArray[outIndex] = (view.getUint32(byteOffset) >> (32 - bitsPerSample) - innerBitOffset) & bitMask;\n          }\n\n          // let outWord = 0;\n          // for (let bit = 0; bit < bitsPerSample; ++bit) {\n          //   if (inByteArray[bitOffset >> 3]\n          //     & (0x80 >> (bitOffset & 7))) {\n          //     outWord |= (1 << (bitsPerSample - 1 - bit));\n          //   }\n          //   ++bitOffset;\n          // }\n\n          // outArray[outIndex] = outWord;\n          // outArray[pixel] = outWord;\n          // pixel += 1;\n        }\n        // bitOffset = bitOffset + pixelBitSkip - bitsPerSample;\n      }\n    }\n  } else if (format === 3) { // floating point\n    // Float16 is handled elsewhere\n    // normalize 16/24 bit floats to 32 bit floats in the array\n    // console.time();\n    // if (bitsPerSample === 16) {\n    //   for (let byte = 0, outIndex = 0; byte < inBuffer.byteLength; byte += 2, ++outIndex) {\n    //     outArray[outIndex] = getFloat16(view, byte);\n    //   }\n    // }\n    // console.timeEnd()\n  }\n\n  return outArray.buffer;\n}\n\n/**\n * GeoTIFF sub-file image.\n */\nclass GeoTIFFImage {\n  /**\n   * @constructor\n   * @param {Object} fileDirectory The parsed file directory\n   * @param {Object} geoKeys The parsed geo-keys\n   * @param {DataView} dataView The DataView for the underlying file.\n   * @param {Boolean} littleEndian Whether the file is encoded in little or big endian\n   * @param {Boolean} cache Whether or not decoded tiles shall be cached\n   * @param {import('./source/basesource').BaseSource} source The datasource to read from\n   */\n  constructor(fileDirectory, geoKeys, dataView, littleEndian, cache, source) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeys = geoKeys;\n    this.dataView = dataView;\n    this.littleEndian = littleEndian;\n    this.tiles = cache ? {} : null;\n    this.isTiled = !fileDirectory.StripOffsets;\n    const planarConfiguration = fileDirectory.PlanarConfiguration;\n    this.planarConfiguration = (typeof planarConfiguration === 'undefined') ? 1 : planarConfiguration;\n    if (this.planarConfiguration !== 1 && this.planarConfiguration !== 2) {\n      throw new Error('Invalid planar configuration.');\n    }\n\n    this.source = source;\n  }\n\n  /**\n   * Returns the associated parsed file directory.\n   * @returns {Object} the parsed file directory\n   */\n  getFileDirectory() {\n    return this.fileDirectory;\n  }\n\n  /**\n   * Returns the associated parsed geo keys.\n   * @returns {Object} the parsed geo keys\n   */\n  getGeoKeys() {\n    return this.geoKeys;\n  }\n\n  /**\n   * Returns the width of the image.\n   * @returns {Number} the width of the image\n   */\n  getWidth() {\n    return this.fileDirectory.ImageWidth;\n  }\n\n  /**\n   * Returns the height of the image.\n   * @returns {Number} the height of the image\n   */\n  getHeight() {\n    return this.fileDirectory.ImageLength;\n  }\n\n  /**\n   * Returns the number of samples per pixel.\n   * @returns {Number} the number of samples per pixel\n   */\n  getSamplesPerPixel() {\n    return typeof this.fileDirectory.SamplesPerPixel !== 'undefined'\n      ? this.fileDirectory.SamplesPerPixel : 1;\n  }\n\n  /**\n   * Returns the width of each tile.\n   * @returns {Number} the width of each tile\n   */\n  getTileWidth() {\n    return this.isTiled ? this.fileDirectory.TileWidth : this.getWidth();\n  }\n\n  /**\n   * Returns the height of each tile.\n   * @returns {Number} the height of each tile\n   */\n  getTileHeight() {\n    if (this.isTiled) {\n      return this.fileDirectory.TileLength;\n    }\n    if (typeof this.fileDirectory.RowsPerStrip !== 'undefined') {\n      return Math.min(this.fileDirectory.RowsPerStrip, this.getHeight());\n    }\n    return this.getHeight();\n  }\n\n  getBlockWidth() {\n    return this.getTileWidth();\n  }\n\n  getBlockHeight(y) {\n    if (this.isTiled || (y + 1) * this.getTileHeight() <= this.getHeight()) {\n      return this.getTileHeight();\n    } else {\n      return this.getHeight() - (y * this.getTileHeight());\n    }\n  }\n\n  /**\n   * Calculates the number of bytes for each pixel across all samples. Only full\n   * bytes are supported, an exception is thrown when this is not the case.\n   * @returns {Number} the bytes per pixel\n   */\n  getBytesPerPixel() {\n    let bytes = 0;\n    for (let i = 0; i < this.fileDirectory.BitsPerSample.length; ++i) {\n      bytes += this.getSampleByteSize(i);\n    }\n    return bytes;\n  }\n\n  getSampleByteSize(i) {\n    if (i >= this.fileDirectory.BitsPerSample.length) {\n      throw new RangeError(`Sample index ${i} is out of range.`);\n    }\n    return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n  }\n\n  getReaderForSample(sampleIndex) {\n    const format = this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n    const bitsPerSample = this.fileDirectory.BitsPerSample[sampleIndex];\n    switch (format) {\n      case 1: // unsigned integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getUint8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getUint16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getUint32;\n        }\n        break;\n      case 2: // twos complement signed integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getInt8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getInt16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getInt32;\n        }\n        break;\n      case 3:\n        switch (bitsPerSample) {\n          case 16:\n            return function (offset, littleEndian) {\n              return getFloat16(this, offset, littleEndian);\n            };\n          case 32:\n            return DataView.prototype.getFloat32;\n          case 64:\n            return DataView.prototype.getFloat64;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    throw Error('Unsupported data format/bitsPerSample');\n  }\n\n  getSampleFormat(sampleIndex = 0) {\n    return this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n  }\n\n  getBitsPerSample(sampleIndex = 0) {\n    return this.fileDirectory.BitsPerSample[sampleIndex];\n  }\n\n  getArrayForSample(sampleIndex, size) {\n    const format = this.getSampleFormat(sampleIndex);\n    const bitsPerSample = this.getBitsPerSample(sampleIndex);\n    return arrayForType(format, bitsPerSample, size);\n  }\n\n  /**\n   * Returns the decoded strip or tile.\n   * @param {Number} x the strip or tile x-offset\n   * @param {Number} y the tile y-offset (0 for stripped images)\n   * @param {Number} sample the sample to get for separated samples\n   * @param {import(\"./geotiff\").Pool|import(\"./geotiff\").BaseDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise.<ArrayBuffer>}\n   */\n  async getTileOrStrip(x, y, sample, poolOrDecoder, signal) {\n    const numTilesPerRow = Math.ceil(this.getWidth() / this.getTileWidth());\n    const numTilesPerCol = Math.ceil(this.getHeight() / this.getTileHeight());\n    let index;\n    const { tiles } = this;\n    if (this.planarConfiguration === 1) {\n      index = (y * numTilesPerRow) + x;\n    } else if (this.planarConfiguration === 2) {\n      index = (sample * numTilesPerRow * numTilesPerCol) + (y * numTilesPerRow) + x;\n    }\n\n    let offset;\n    let byteCount;\n    if (this.isTiled) {\n      offset = this.fileDirectory.TileOffsets[index];\n      byteCount = this.fileDirectory.TileByteCounts[index];\n    } else {\n      offset = this.fileDirectory.StripOffsets[index];\n      byteCount = this.fileDirectory.StripByteCounts[index];\n    }\n    const slice = (await this.source.fetch([{ offset, length: byteCount }], signal))[0];\n\n    let request;\n    if (tiles === null || !tiles[index]) {\n    // resolve each request by potentially applying array normalization\n      request = (async () => {\n        let data = await poolOrDecoder.decode(this.fileDirectory, slice);\n        const sampleFormat = this.getSampleFormat();\n        const bitsPerSample = this.getBitsPerSample();\n        if (needsNormalization(sampleFormat, bitsPerSample)) {\n          data = normalizeArray(\n            data,\n            sampleFormat,\n            this.planarConfiguration,\n            this.getSamplesPerPixel(),\n            bitsPerSample,\n            this.getTileWidth(),\n            this.getBlockHeight(y),\n          );\n        }\n        return data;\n      })();\n\n      // set the cache\n      if (tiles !== null) {\n        tiles[index] = request;\n      }\n    } else {\n      // get from the cache\n      request = tiles[index];\n    }\n\n    // cache the tile request\n    return { x, y, sample, data: await request };\n  }\n\n  /**\n   * Internal read function.\n   * @private\n   * @param {Array} imageWindow The image window in pixel coordinates\n   * @param {Array} samples The selected samples (0-based indices)\n   * @param {TypedArray|TypedArray[]} valueArrays The array(s) to write into\n   * @param {Boolean} interleave Whether or not to write in an interleaved manner\n   * @param {import(\"./geotiff\").Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {number} width the width of window to be read into\n   * @param {number} height the height of window to be read into\n   * @param {number} resampleMethod the resampling method to be used when interpolating\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise<ReadRasterResult>}\n   */\n  async _readRaster(imageWindow, samples, valueArrays, interleave, poolOrDecoder, width,\n    height, resampleMethod, signal) {\n    const tileWidth = this.getTileWidth();\n    const tileHeight = this.getTileHeight();\n    const imageWidth = this.getWidth();\n    const imageHeight = this.getHeight();\n\n    const minXTile = Math.max(Math.floor(imageWindow[0] / tileWidth), 0);\n    const maxXTile = Math.min(\n      Math.ceil(imageWindow[2] / tileWidth),\n      Math.ceil(imageWidth / tileWidth),\n    );\n    const minYTile = Math.max(Math.floor(imageWindow[1] / tileHeight), 0);\n    const maxYTile = Math.min(\n      Math.ceil(imageWindow[3] / tileHeight),\n      Math.ceil(imageHeight / tileHeight),\n    );\n    const windowWidth = imageWindow[2] - imageWindow[0];\n\n    let bytesPerPixel = this.getBytesPerPixel();\n\n    const srcSampleOffsets = [];\n    const sampleReaders = [];\n    for (let i = 0; i < samples.length; ++i) {\n      if (this.planarConfiguration === 1) {\n        srcSampleOffsets.push(sum(this.fileDirectory.BitsPerSample, 0, samples[i]) / 8);\n      } else {\n        srcSampleOffsets.push(0);\n      }\n      sampleReaders.push(this.getReaderForSample(samples[i]));\n    }\n\n    const promises = [];\n    const { littleEndian } = this;\n\n    for (let yTile = minYTile; yTile < maxYTile; ++yTile) {\n      for (let xTile = minXTile; xTile < maxXTile; ++xTile) {\n        let getPromise;\n        if (this.planarConfiguration === 1) {\n          getPromise = this.getTileOrStrip(xTile, yTile, 0, poolOrDecoder, signal);\n        }\n        for (let sampleIndex = 0; sampleIndex < samples.length; ++sampleIndex) {\n          const si = sampleIndex;\n          const sample = samples[sampleIndex];\n          if (this.planarConfiguration === 2) {\n            bytesPerPixel = this.getSampleByteSize(sample);\n            getPromise = this.getTileOrStrip(xTile, yTile, sample, poolOrDecoder, signal);\n          }\n          const promise = getPromise.then((tile) => {\n            const buffer = tile.data;\n            const dataView = new DataView(buffer);\n            const blockHeight = this.getBlockHeight(tile.y);\n            const firstLine = tile.y * tileHeight;\n            const firstCol = tile.x * tileWidth;\n            const lastLine = firstLine + blockHeight;\n            const lastCol = (tile.x + 1) * tileWidth;\n            const reader = sampleReaders[si];\n\n            const ymax = Math.min(blockHeight, blockHeight - (lastLine - imageWindow[3]), imageHeight - firstLine);\n            const xmax = Math.min(tileWidth, tileWidth - (lastCol - imageWindow[2]), imageWidth - firstCol);\n\n            for (let y = Math.max(0, imageWindow[1] - firstLine); y < ymax; ++y) {\n              for (let x = Math.max(0, imageWindow[0] - firstCol); x < xmax; ++x) {\n                const pixelOffset = ((y * tileWidth) + x) * bytesPerPixel;\n                const value = reader.call(\n                  dataView, pixelOffset + srcSampleOffsets[si], littleEndian,\n                );\n                let windowCoordinate;\n                if (interleave) {\n                  windowCoordinate = ((y + firstLine - imageWindow[1]) * windowWidth * samples.length)\n                    + ((x + firstCol - imageWindow[0]) * samples.length)\n                    + si;\n                  valueArrays[windowCoordinate] = value;\n                } else {\n                  windowCoordinate = (\n                    (y + firstLine - imageWindow[1]) * windowWidth\n                  ) + x + firstCol - imageWindow[0];\n                  valueArrays[si][windowCoordinate] = value;\n                }\n              }\n            }\n          });\n          promises.push(promise);\n        }\n      }\n    }\n    await Promise.all(promises);\n\n    if ((width && (imageWindow[2] - imageWindow[0]) !== width)\n        || (height && (imageWindow[3] - imageWindow[1]) !== height)) {\n      let resampled;\n      if (interleave) {\n        resampled = resampleInterleaved(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          samples.length,\n          resampleMethod,\n        );\n      } else {\n        resampled = resample(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          resampleMethod,\n        );\n      }\n      resampled.width = width;\n      resampled.height = height;\n      return resampled;\n    }\n\n    valueArrays.width = width || imageWindow[2] - imageWindow[0];\n    valueArrays.height = height || imageWindow[3] - imageWindow[1];\n\n    return valueArrays;\n  }\n\n  /**\n   * Reads raster data from the image. This function reads all selected samples\n   * into separate arrays of the correct type for that sample or into a single\n   * combined array when `interleave` is set. When provided, only a subset\n   * of the raster is read for each sample.\n   *\n   * @param {ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise<ReadRasterResult>} the decoded arrays as a promise\n   */\n  async readRasters({\n    window: wnd, samples = [], interleave, pool = null,\n    width, height, resampleMethod, fillValue, signal,\n  } = {}) {\n    const imageWindow = wnd || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const imageWindowWidth = imageWindow[2] - imageWindow[0];\n    const imageWindowHeight = imageWindow[3] - imageWindow[1];\n    const numPixels = imageWindowWidth * imageWindowHeight;\n    const samplesPerPixel = this.getSamplesPerPixel();\n\n    if (!samples || !samples.length) {\n      for (let i = 0; i < samplesPerPixel; ++i) {\n        samples.push(i);\n      }\n    } else {\n      for (let i = 0; i < samples.length; ++i) {\n        if (samples[i] >= samplesPerPixel) {\n          return Promise.reject(new RangeError(`Invalid sample index '${samples[i]}'.`));\n        }\n      }\n    }\n    let valueArrays;\n    if (interleave) {\n      const format = this.fileDirectory.SampleFormat\n        ? Math.max.apply(null, this.fileDirectory.SampleFormat) : 1;\n      const bitsPerSample = Math.max.apply(null, this.fileDirectory.BitsPerSample);\n      valueArrays = arrayForType(format, bitsPerSample, numPixels * samples.length);\n      if (fillValue) {\n        valueArrays.fill(fillValue);\n      }\n    } else {\n      valueArrays = [];\n      for (let i = 0; i < samples.length; ++i) {\n        const valueArray = this.getArrayForSample(samples[i], numPixels);\n        if (Array.isArray(fillValue) && i < fillValue.length) {\n          valueArray.fill(fillValue[i]);\n        } else if (fillValue && !Array.isArray(fillValue)) {\n          valueArray.fill(fillValue);\n        }\n        valueArrays.push(valueArray);\n      }\n    }\n\n    const poolOrDecoder = pool || await getDecoder(this.fileDirectory);\n\n    const result = await this._readRaster(\n      imageWindow, samples, valueArrays, interleave, poolOrDecoder, width, height, resampleMethod, signal,\n    );\n    return result;\n  }\n\n  /**\n   * Reads raster data from the image as RGB. The result is always an\n   * interleaved typed array.\n   * Colorspaces other than RGB will be transformed to RGB, color maps expanded.\n   * When no other method is applicable, the first sample is used to produce a\n   * grayscale image.\n   * When provided, only a subset of the raster is read for each sample.\n   *\n   * @param {Object} [options] optional parameters\n   * @param {Array<number>} [options.window] the subset to read data from in pixels.\n   * @param {boolean} [options.interleave=true] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {import(\"./geotiff\").Pool} [options.pool=null] The optional decoder pool to use.\n   * @param {number} [options.width] The desired width of the output. When the width is no the\n   *                                 same as the images, resampling will be performed.\n   * @param {number} [options.height] The desired height of the output. When the width is no the\n   *                                  same as the images, resampling will be performed.\n   * @param {string} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {boolean} [options.enableAlpha=false] Enable reading alpha channel if present.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @returns {Promise<ReadRasterResult>} the RGB array as a Promise\n   */\n  async readRGB({ window, interleave = true, pool = null, width, height,\n    resampleMethod, enableAlpha = false, signal } = {}) {\n    const imageWindow = window || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const pi = this.fileDirectory.PhotometricInterpretation;\n\n    if (pi === photometricInterpretations.RGB) {\n      let s = [0, 1, 2];\n      if ((!(this.fileDirectory.ExtraSamples === ExtraSamplesValues.Unspecified)) && enableAlpha) {\n        s = [];\n        for (let i = 0; i < this.fileDirectory.BitsPerSample.length; i += 1) {\n          s.push(i);\n        }\n      }\n      return this.readRasters({\n        window,\n        interleave,\n        samples: s,\n        pool,\n        width,\n        height,\n        resampleMethod,\n        signal,\n      });\n    }\n\n    let samples;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n      case photometricInterpretations.BlackIsZero:\n      case photometricInterpretations.Palette:\n        samples = [0];\n        break;\n      case photometricInterpretations.CMYK:\n        samples = [0, 1, 2, 3];\n        break;\n      case photometricInterpretations.YCbCr:\n      case photometricInterpretations.CIELab:\n        samples = [0, 1, 2];\n        break;\n      default:\n        throw new Error('Invalid or unsupported photometric interpretation.');\n    }\n\n    const subOptions = {\n      window: imageWindow,\n      interleave: true,\n      samples,\n      pool,\n      width,\n      height,\n      resampleMethod,\n      signal,\n    };\n    const { fileDirectory } = this;\n    const raster = await this.readRasters(subOptions);\n\n    const max = 2 ** this.fileDirectory.BitsPerSample[0];\n    let data;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n        data = fromWhiteIsZero(raster, max);\n        break;\n      case photometricInterpretations.BlackIsZero:\n        data = fromBlackIsZero(raster, max);\n        break;\n      case photometricInterpretations.Palette:\n        data = fromPalette(raster, fileDirectory.ColorMap);\n        break;\n      case photometricInterpretations.CMYK:\n        data = fromCMYK(raster);\n        break;\n      case photometricInterpretations.YCbCr:\n        data = fromYCbCr(raster);\n        break;\n      case photometricInterpretations.CIELab:\n        data = fromCIELab(raster);\n        break;\n      default:\n        throw new Error('Unsupported photometric interpretation.');\n    }\n\n    // if non-interleaved data is requested, we must split the channels\n    // into their respective arrays\n    if (!interleave) {\n      const red = new Uint8Array(data.length / 3);\n      const green = new Uint8Array(data.length / 3);\n      const blue = new Uint8Array(data.length / 3);\n      for (let i = 0, j = 0; i < data.length; i += 3, ++j) {\n        red[j] = data[i];\n        green[j] = data[i + 1];\n        blue[j] = data[i + 2];\n      }\n      data = [red, green, blue];\n    }\n\n    data.width = raster.width;\n    data.height = raster.height;\n    return data;\n  }\n\n  /**\n   * Returns an array of tiepoints.\n   * @returns {Object[]}\n   */\n  getTiePoints() {\n    if (!this.fileDirectory.ModelTiepoint) {\n      return [];\n    }\n\n    const tiePoints = [];\n    for (let i = 0; i < this.fileDirectory.ModelTiepoint.length; i += 6) {\n      tiePoints.push({\n        i: this.fileDirectory.ModelTiepoint[i],\n        j: this.fileDirectory.ModelTiepoint[i + 1],\n        k: this.fileDirectory.ModelTiepoint[i + 2],\n        x: this.fileDirectory.ModelTiepoint[i + 3],\n        y: this.fileDirectory.ModelTiepoint[i + 4],\n        z: this.fileDirectory.ModelTiepoint[i + 5],\n      });\n    }\n    return tiePoints;\n  }\n\n  /**\n   * Returns the parsed GDAL metadata items.\n   *\n   * If sample is passed to null, dataset-level metadata will be returned.\n   * Otherwise only metadata specific to the provided sample will be returned.\n   *\n   * @param {number} [sample=null] The sample index.\n   * @returns {Object}\n   */\n  getGDALMetadata(sample = null) {\n    const metadata = {};\n    if (!this.fileDirectory.GDAL_METADATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_METADATA;\n\n    let items = findTagsByName(string, 'Item');\n\n    if (sample === null) {\n      items = items.filter((item) => getAttribute(item, 'sample') === undefined);\n    } else {\n      items = items.filter((item) => Number(getAttribute(item, 'sample')) === sample);\n    }\n\n    for (let i = 0; i < items.length; ++i) {\n      const item = items[i];\n      metadata[getAttribute(item, 'name')] = item.inner;\n    }\n    return metadata;\n  }\n\n  /**\n   * Returns the GDAL nodata value\n   * @returns {number|null}\n   */\n  getGDALNoData() {\n    if (!this.fileDirectory.GDAL_NODATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_NODATA;\n    return Number(string.substring(0, string.length - 1));\n  }\n\n  /**\n   * Returns the image origin as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @returns {Array<number>} The origin as a vector\n   */\n  getOrigin() {\n    const tiePoints = this.fileDirectory.ModelTiepoint;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n    if (tiePoints && tiePoints.length === 6) {\n      return [\n        tiePoints[3],\n        tiePoints[4],\n        tiePoints[5],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[3],\n        modelTransformation[7],\n        modelTransformation[11],\n      ];\n    }\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns the image resolution as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @param {GeoTIFFImage} [referenceImage=null] A reference image to calculate the resolution from\n   *                                             in cases when the current image does not have the\n   *                                             required tags on its own.\n   * @returns {Array<number>} The resolution as a vector\n   */\n  getResolution(referenceImage = null) {\n    const modelPixelScale = this.fileDirectory.ModelPixelScale;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n\n    if (modelPixelScale) {\n      return [\n        modelPixelScale[0],\n        -modelPixelScale[1],\n        modelPixelScale[2],\n      ];\n    }\n    if (modelTransformation) {\n      if (modelTransformation[1] === 0 && modelTransformation[4] === 0) {\n        return [\n          modelTransformation[0],\n          -modelTransformation[5],\n          modelTransformation[10],\n        ];\n      }\n      return [\n        Math.sqrt((modelTransformation[0] * modelTransformation[0])\n          + (modelTransformation[4] * modelTransformation[4])),\n        -Math.sqrt((modelTransformation[1] * modelTransformation[1])\n          + (modelTransformation[5] * modelTransformation[5])),\n        modelTransformation[10]];\n    }\n\n    if (referenceImage) {\n      const [refResX, refResY, refResZ] = referenceImage.getResolution();\n      return [\n        refResX * referenceImage.getWidth() / this.getWidth(),\n        refResY * referenceImage.getHeight() / this.getHeight(),\n        refResZ * referenceImage.getWidth() / this.getWidth(),\n      ];\n    }\n\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns whether or not the pixels of the image depict an area (or point).\n   * @returns {Boolean} Whether the pixels are a point\n   */\n  pixelIsArea() {\n    return this.geoKeys.GTRasterTypeGeoKey === 1;\n  }\n\n  /**\n   * Returns the image bounding box as an array of 4 values: min-x, min-y,\n   * max-x and max-y. When the image has no affine transformation, then an\n   * exception is thrown.\n   * @param {boolean} [tilegrid=false] If true return extent for a tilegrid\n   *                                   without adjustment for ModelTransformation.\n   * @returns {Array<number>} The bounding box\n   */\n  getBoundingBox(tilegrid = false) {\n    const height = this.getHeight();\n    const width = this.getWidth();\n\n    if (this.fileDirectory.ModelTransformation && !tilegrid) {\n      // eslint-disable-next-line no-unused-vars\n      const [a, b, c, d, e, f, g, h] = this.fileDirectory.ModelTransformation;\n\n      const corners = [\n        [0, 0],\n        [0, height],\n        [width, 0],\n        [width, height],\n      ];\n\n      const projected = corners.map(([I, J]) => [\n        d + (a * I) + (b * J),\n        h + (e * I) + (f * J),\n      ]);\n\n      const xs = projected.map((pt) => pt[0]);\n      const ys = projected.map((pt) => pt[1]);\n\n      return [\n        Math.min(...xs),\n        Math.min(...ys),\n        Math.max(...xs),\n        Math.max(...ys),\n      ];\n    } else {\n      const origin = this.getOrigin();\n      const resolution = this.getResolution();\n\n      const x1 = origin[0];\n      const y1 = origin[1];\n\n      const x2 = x1 + (resolution[0] * width);\n      const y2 = y1 + (resolution[1] * height);\n\n      return [\n        Math.min(x1, x2),\n        Math.min(y1, y2),\n        Math.max(x1, x2),\n        Math.max(y1, y2),\n      ];\n    }\n  }\n}\n\nexport default GeoTIFFImage;\n","export const fieldTagNames = {\n  // TIFF Baseline\n  0x013B: 'Artist',\n  0x0102: 'BitsPerSample',\n  0x0109: 'CellLength',\n  0x0108: 'CellWidth',\n  0x0140: 'ColorMap',\n  0x0103: 'Compression',\n  0x8298: 'Copyright',\n  0x0132: 'DateTime',\n  0x0152: 'ExtraSamples',\n  0x010A: 'FillOrder',\n  0x0121: 'FreeByteCounts',\n  0x0120: 'FreeOffsets',\n  0x0123: 'GrayResponseCurve',\n  0x0122: 'GrayResponseUnit',\n  0x013C: 'HostComputer',\n  0x010E: 'ImageDescription',\n  0x0101: 'ImageLength',\n  0x0100: 'ImageWidth',\n  0x010F: 'Make',\n  0x0119: 'MaxSampleValue',\n  0x0118: 'MinSampleValue',\n  0x0110: 'Model',\n  0x00FE: 'NewSubfileType',\n  0x0112: 'Orientation',\n  0x0106: 'PhotometricInterpretation',\n  0x011C: 'PlanarConfiguration',\n  0x0128: 'ResolutionUnit',\n  0x0116: 'RowsPerStrip',\n  0x0115: 'SamplesPerPixel',\n  0x0131: 'Software',\n  0x0117: 'StripByteCounts',\n  0x0111: 'StripOffsets',\n  0x00FF: 'SubfileType',\n  0x0107: 'Threshholding',\n  0x011A: 'XResolution',\n  0x011B: 'YResolution',\n\n  // TIFF Extended\n  0x0146: 'BadFaxLines',\n  0x0147: 'CleanFaxData',\n  0x0157: 'ClipPath',\n  0x0148: 'ConsecutiveBadFaxLines',\n  0x01B1: 'Decode',\n  0x01B2: 'DefaultImageColor',\n  0x010D: 'DocumentName',\n  0x0150: 'DotRange',\n  0x0141: 'HalftoneHints',\n  0x015A: 'Indexed',\n  0x015B: 'JPEGTables',\n  0x011D: 'PageName',\n  0x0129: 'PageNumber',\n  0x013D: 'Predictor',\n  0x013F: 'PrimaryChromaticities',\n  0x0214: 'ReferenceBlackWhite',\n  0x0153: 'SampleFormat',\n  0x0154: 'SMinSampleValue',\n  0x0155: 'SMaxSampleValue',\n  0x022F: 'StripRowCounts',\n  0x014A: 'SubIFDs',\n  0x0124: 'T4Options',\n  0x0125: 'T6Options',\n  0x0145: 'TileByteCounts',\n  0x0143: 'TileLength',\n  0x0144: 'TileOffsets',\n  0x0142: 'TileWidth',\n  0x012D: 'TransferFunction',\n  0x013E: 'WhitePoint',\n  0x0158: 'XClipPathUnits',\n  0x011E: 'XPosition',\n  0x0211: 'YCbCrCoefficients',\n  0x0213: 'YCbCrPositioning',\n  0x0212: 'YCbCrSubSampling',\n  0x0159: 'YClipPathUnits',\n  0x011F: 'YPosition',\n\n  // EXIF\n  0x9202: 'ApertureValue',\n  0xA001: 'ColorSpace',\n  0x9004: 'DateTimeDigitized',\n  0x9003: 'DateTimeOriginal',\n  0x8769: 'Exif IFD',\n  0x9000: 'ExifVersion',\n  0x829A: 'ExposureTime',\n  0xA300: 'FileSource',\n  0x9209: 'Flash',\n  0xA000: 'FlashpixVersion',\n  0x829D: 'FNumber',\n  0xA420: 'ImageUniqueID',\n  0x9208: 'LightSource',\n  0x927C: 'MakerNote',\n  0x9201: 'ShutterSpeedValue',\n  0x9286: 'UserComment',\n\n  // IPTC\n  0x83BB: 'IPTC',\n\n  // ICC\n  0x8773: 'ICC Profile',\n\n  // XMP\n  0x02BC: 'XMP',\n\n  // GDAL\n  0xA480: 'GDAL_METADATA',\n  0xA481: 'GDAL_NODATA',\n\n  // Photoshop\n  0x8649: 'Photoshop',\n\n  // GeoTiff\n  0x830E: 'ModelPixelScale',\n  0x8482: 'ModelTiepoint',\n  0x85D8: 'ModelTransformation',\n  0x87AF: 'GeoKeyDirectory',\n  0x87B0: 'GeoDoubleParams',\n  0x87B1: 'GeoAsciiParams',\n\n  // LERC\n  0xC5F2: 'LercParameters',\n};\n\nexport const fieldTags = {};\nfor (const key in fieldTagNames) {\n  if (fieldTagNames.hasOwnProperty(key)) {\n    fieldTags[fieldTagNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const fieldTagTypes = {\n  256: 'SHORT',\n  257: 'SHORT',\n  258: 'SHORT',\n  259: 'SHORT',\n  262: 'SHORT',\n  273: 'LONG',\n  274: 'SHORT',\n  277: 'SHORT',\n  278: 'LONG',\n  279: 'LONG',\n  282: 'RATIONAL',\n  283: 'RATIONAL',\n  284: 'SHORT',\n  286: 'SHORT',\n  287: 'RATIONAL',\n  296: 'SHORT',\n  297: 'SHORT',\n  305: 'ASCII',\n  306: 'ASCII',\n  338: 'SHORT',\n  339: 'SHORT',\n  513: 'LONG',\n  514: 'LONG',\n  1024: 'SHORT',\n  1025: 'SHORT',\n  2048: 'SHORT',\n  2049: 'ASCII',\n  3072: 'SHORT',\n  3073: 'ASCII',\n  33550: 'DOUBLE',\n  33922: 'DOUBLE',\n  34264: 'DOUBLE',\n  34665: 'LONG',\n  34735: 'SHORT',\n  34736: 'DOUBLE',\n  34737: 'ASCII',\n  42113: 'ASCII',\n};\n\nexport const arrayFields = [\n  fieldTags.BitsPerSample,\n  fieldTags.ExtraSamples,\n  fieldTags.SampleFormat,\n  fieldTags.StripByteCounts,\n  fieldTags.StripOffsets,\n  fieldTags.StripRowCounts,\n  fieldTags.TileByteCounts,\n  fieldTags.TileOffsets,\n  fieldTags.SubIFDs,\n];\n\nexport const fieldTypeNames = {\n  0x0001: 'BYTE',\n  0x0002: 'ASCII',\n  0x0003: 'SHORT',\n  0x0004: 'LONG',\n  0x0005: 'RATIONAL',\n  0x0006: 'SBYTE',\n  0x0007: 'UNDEFINED',\n  0x0008: 'SSHORT',\n  0x0009: 'SLONG',\n  0x000A: 'SRATIONAL',\n  0x000B: 'FLOAT',\n  0x000C: 'DOUBLE',\n  // IFD offset, suggested by https://owl.phy.queensu.ca/~phil/exiftool/standards.html\n  0x000D: 'IFD',\n  // introduced by BigTIFF\n  0x0010: 'LONG8',\n  0x0011: 'SLONG8',\n  0x0012: 'IFD8',\n};\n\nexport const fieldTypes = {};\nfor (const key in fieldTypeNames) {\n  if (fieldTypeNames.hasOwnProperty(key)) {\n    fieldTypes[fieldTypeNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const photometricInterpretations = {\n  WhiteIsZero: 0,\n  BlackIsZero: 1,\n  RGB: 2,\n  Palette: 3,\n  TransparencyMask: 4,\n  CMYK: 5,\n  YCbCr: 6,\n\n  CIELab: 8,\n  ICCLab: 9,\n};\n\nexport const ExtraSamplesValues = {\n  Unspecified: 0,\n  Assocalpha: 1,\n  Unassalpha: 2,\n};\n\nexport const LercParameters = {\n  Version: 0,\n  AddCompression: 1,\n};\n\nexport const LercAddCompression = {\n  None: 0,\n  Deflate: 1,\n  Zstandard: 2,\n};\n\nexport const geoKeyNames = {\n  1024: 'GTModelTypeGeoKey',\n  1025: 'GTRasterTypeGeoKey',\n  1026: 'GTCitationGeoKey',\n  2048: 'GeographicTypeGeoKey',\n  2049: 'GeogCitationGeoKey',\n  2050: 'GeogGeodeticDatumGeoKey',\n  2051: 'GeogPrimeMeridianGeoKey',\n  2052: 'GeogLinearUnitsGeoKey',\n  2053: 'GeogLinearUnitSizeGeoKey',\n  2054: 'GeogAngularUnitsGeoKey',\n  2055: 'GeogAngularUnitSizeGeoKey',\n  2056: 'GeogEllipsoidGeoKey',\n  2057: 'GeogSemiMajorAxisGeoKey',\n  2058: 'GeogSemiMinorAxisGeoKey',\n  2059: 'GeogInvFlatteningGeoKey',\n  2060: 'GeogAzimuthUnitsGeoKey',\n  2061: 'GeogPrimeMeridianLongGeoKey',\n  2062: 'GeogTOWGS84GeoKey',\n  3072: 'ProjectedCSTypeGeoKey',\n  3073: 'PCSCitationGeoKey',\n  3074: 'ProjectionGeoKey',\n  3075: 'ProjCoordTransGeoKey',\n  3076: 'ProjLinearUnitsGeoKey',\n  3077: 'ProjLinearUnitSizeGeoKey',\n  3078: 'ProjStdParallel1GeoKey',\n  3079: 'ProjStdParallel2GeoKey',\n  3080: 'ProjNatOriginLongGeoKey',\n  3081: 'ProjNatOriginLatGeoKey',\n  3082: 'ProjFalseEastingGeoKey',\n  3083: 'ProjFalseNorthingGeoKey',\n  3084: 'ProjFalseOriginLongGeoKey',\n  3085: 'ProjFalseOriginLatGeoKey',\n  3086: 'ProjFalseOriginEastingGeoKey',\n  3087: 'ProjFalseOriginNorthingGeoKey',\n  3088: 'ProjCenterLongGeoKey',\n  3089: 'ProjCenterLatGeoKey',\n  3090: 'ProjCenterEastingGeoKey',\n  3091: 'ProjCenterNorthingGeoKey',\n  3092: 'ProjScaleAtNatOriginGeoKey',\n  3093: 'ProjScaleAtCenterGeoKey',\n  3094: 'ProjAzimuthAngleGeoKey',\n  3095: 'ProjStraightVertPoleLongGeoKey',\n  3096: 'ProjRectifiedGridAngleGeoKey',\n  4096: 'VerticalCSTypeGeoKey',\n  4097: 'VerticalCitationGeoKey',\n  4098: 'VerticalDatumGeoKey',\n  4099: 'VerticalUnitsGeoKey',\n};\n\nexport const geoKeys = {};\nfor (const key in geoKeyNames) {\n  if (geoKeyNames.hasOwnProperty(key)) {\n    geoKeys[geoKeyNames[key]] = parseInt(key, 10);\n  }\n}\n"],"names":["$defineProperty","$SyntaxError","$TypeError","gopd","module","exports","obj","property","value","arguments","length","nonEnumerable","nonWritable","nonConfigurable","loose","desc","configurable","enumerable","writable","GetIntrinsic","e","EvalError","Error","RangeError","ReferenceError","SyntaxError","TypeError","URIError","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ProcessEmitWarning","warning","console","warn","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","EventEmitter","init","this","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","emit","unshift","push","warned","w","String","name","emitter","count","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","Array","i","spliceOne","list","index","pop","ret","Promise","resolve","reject","errorListener","err","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","handler","flags","on","addEventListener","wrapListener","arg","removeEventListener","defineProperty","get","set","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","key","keys","rawListeners","eventNames","equal","a","b","constructor","isArray","Map","size","entries","has","Set","ArrayBuffer","isView","RegExp","source","valueOf","toString","hasOwnProperty","data","opts","cmp","cycles","f","node","aobj","bobj","seen","stringify","toJSON","isFinite","JSON","out","indexOf","seenIndex","sort","splice","ERROR_MESSAGE","toStr","max","Math","funcType","concatty","j","slicy","arrLike","offset","joiny","joiner","str","bound","binder","result","boundLength","boundArgs","Empty","implementation","$Error","$EvalError","$RangeError","$ReferenceError","$URIError","$Function","getEvalledConstructor","expressionSyntax","$gOPD","getOwnPropertyDescriptor","throwTypeError","ThrowTypeError","calleeThrows","gOPDthrows","hasSymbols","hasProto","getProto","x","__proto__","needsEval","TypedArray","Uint8Array","INTRINSICS","AggregateError","Symbol","iterator","Atomics","BigInt","BigInt64Array","BigUint64Array","Boolean","DataView","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","parseFloat","parseInt","Proxy","SharedArrayBuffer","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","WeakRef","WeakSet","errorProto","doEval","fn","gen","LEGACY_ALIASES","hasOwn","$concat","$spliceApply","$replace","replace","$strSlice","$exec","exec","rePropName","reEscapeChar","stringToPath","string","first","last","match","number","quote","subString","getBaseIntrinsic","allowMissing","alias","intrinsicName","parts","intrinsicBaseName","intrinsic","intrinsicRealName","skipFurtherCaching","isOwn","part","hasPropertyDescriptors","hasArrayLengthDefineBug","test","foo","$Object","origSymbol","hasSymbolSham","sym","symObj","symVal","syms","propertyIsEnumerable","descriptor","$hasOwn","read","buffer","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","pow","write","c","rt","abs","floor","log","LN2","ctor","superCtor","super_","TempCtor","traverse","schema","cb","pre","post","_traverse","jsonPtr","rootSchema","parentJsonPtr","parentKeyword","parentSchema","keyIndex","sch","arrayKeywords","propsKeywords","prop","escapeJsonPtr","keywords","allKeys","skipKeywords","additionalItems","items","contains","additionalProperties","propertyNames","not","allOf","anyOf","oneOf","definitions","properties","patternProperties","dependencies","default","enum","const","required","maximum","minimum","exclusiveMaximum","exclusiveMinimum","multipleOf","maxLength","minLength","pattern","format","maxItems","minItems","uniqueItems","maxProperties","minProperties","registry","addDecoder","cases","importFn","forEach","async","getDecoder","fileDirectory","Compression","Decoder","then","zstd","DataView64","arrayBuffer","_dataView","getUint64","littleEndian","left","getUint32","right","combined","isSafeInteger","getInt64","isNegative","getUint8","carrying","byte","getInt8","getUint16","getInt16","getInt32","getFloat16","getFloat32","getFloat64","DataSlice","sliceOffset","bigTiff","_sliceOffset","_littleEndian","_bigTiff","sliceTop","byteLength","covers","readUint8","readInt8","readUint16","readInt16","readUint32","readInt32","readFloat32","readFloat64","readUint64","readInt64","readOffset","CRLFCRLF","itemsToObject","fromEntries","toLowerCase","parseHeaders","text","split","map","line","kv","trim","parseContentType","rawContentType","rawParams","paramsItems","param","params","parseContentRange","rawContentRange","start","end","total","parseByteRanges","responseArrayBuffer","boundary","decoder","TextDecoder","startBoundary","endBoundary","decode","min","startsWith","innerText","substr","endOfHeaders","headers","startOfData","fileSize","BaseSource","fetch","slices","signal","all","fetchSlice","close","wait","milliseconds","setTimeout","zip","A","from","B","k","AbortError","super","captureStackTrace","CustomAggregateError","errors","Block","top","BlockGroup","blockIds","BlockedSource","blockSize","cacheSize","blockCache","maxSize","onEviction","blockId","block","evictedBlocks","blockRequests","blockIdsToFetch","abortedBlockIds","missingBlockIds","allBlockIds","clear","firstBlockOffset","current","add","fetchBlocks","missingRequests","allSettled","abortedBlockRequests","filter","id","aborted","blocks","failedBlocks","requiredBlocks","readSliceData","groups","groupBlocks","groupRequests","groupIndex","group","response","blockOffset","o","t","delete","sortedBlockIds","lastBlockId","blockIdLow","blockIdHigh","sliceData","sliceView","delta","topDelta","usedBlockLength","blockInnerOffset","rangeInnerOffset","blockView","BaseResponse","ok","status","getHeader","headerName","getData","BaseClient","url","request","FetchResponse","FetchClient","credentials","XHRResponse","xhr","getResponseHeader","XHRClient","constructRequest","XMLHttpRequest","open","responseType","setRequestHeader","onload","onerror","onabort","send","abort","HttpResponse","dataPromise","statusCode","HttpClient","parsedUrl","httpApi","protocol","resolveData","chunks","chunk","Buffer","destroy","RemoteSource","client","maxRanges","allowFullFile","_fileSize","fetchSlices","Range","join","byteRanges","others","maybeWrapInBlockedSource","makeFetchSource","blockOptions","makeXHRSource","makeHttpSource","makeRemoteSource","forceXHR","clientOptions","FileReaderSource","file","blob","reader","FileReader","event","readAsArrayBuffer","makeFileReaderSource","getFieldTypeLength","fieldType","BYTE","ASCII","SBYTE","UNDEFINED","SHORT","SSHORT","LONG","SLONG","FLOAT","IFD","RATIONAL","SRATIONAL","DOUBLE","LONG8","SLONG8","IFD8","parseGeoKeyDirectory","rawGeoKeyDirectory","GeoKeyDirectory","geoKeyDirectory","location","substring","subarray","getValues","dataSlice","values","readMethod","fieldTypeLength","ImageFileDirectory","nextIFDByteOffset","GeoTIFFImageIndexError","GeoTIFFBase","readRasters","options","window","imageWindow","width","height","resX","resY","bbox","firstImage","getImage","usedImage","imageCount","getImageCount","imgBBox","getBoundingBox","oX","oY","getOrigin","rX","rY","getResolution","usedBBox","allImages","image","SubfileType","subfileType","NewSubfileType","newSubfileType","getWidth","imgResX","imgResY","getHeight","wnd","imageResX","imageResY","round","GeoTIFF","firstIFDOffset","cache","ifdRequests","ghostValues","getSlice","fallbackSize","parseFileDirectoryAt","entrySize","offsetSize","numDirEntries","byteSize","entryCount","fieldTag","typeCount","fieldValues","valueOffset","actualOffset","fieldDataSlice","requestIFD","previousIfd","ifd","dataView","hasNext","getGhostValues","detectionString","heuristicAreaSize","valuesString","firstLine","metadataSize","fullString","fromSource","headerData","BOM","magicNumber","offsetByteSize","MultiGeoTIFF","mainFile","overviewFiles","imageFiles","fileDirectoriesPerFile","fileDirectoriesPerFileParsing","parseFileDirectoriesPerFile","requests","visited","relativeIndex","imageFile","ii","imageCounts","reduce","ifds","fromUrl","fromBlob","fromUrls","mainUrl","overviewUrls","fromWhiteIsZero","raster","rgbRaster","fromBlackIsZero","fromPalette","colorMap","greenOffset","blueOffset","mapIndex","fromCMYK","cmykRaster","y","fromYCbCr","yCbCrRaster","cr","Xn","Yn","Zn","fromCIELab","cieLabRaster","L","a_","b_","r","g","z","copyNewSize","array","samplesPerPixel","resampleNearest","valueArrays","inWidth","inHeight","outWidth","outHeight","relX","relY","newArray","cy","cx","lerp","v0","v1","resampleBilinear","rawY","yl","yh","ceil","rawX","tx","xl","xh","ll","hl","lh","hh","resample","method","resampleNearestInterleaved","valueArray","samples","resampleBilinearInterleaved","resampleInterleaved","sum","arrayForType","bitsPerSample","needsNormalization","normalizeArray","inBuffer","planarConfiguration","tileWidth","tileHeight","view","outSize","samplesToTransfer","outArray","bitMask","repeat","pixelBitSkip","bitsPerLine","lineBitOffset","pixelBitOffset","bitOffset","outIndex","byteOffset","innerBitOffset","raw","GeoTIFFImage","geoKeys","tiles","isTiled","StripOffsets","PlanarConfiguration","getFileDirectory","getGeoKeys","ImageWidth","ImageLength","getSamplesPerPixel","SamplesPerPixel","getTileWidth","TileWidth","getTileHeight","TileLength","RowsPerStrip","getBlockWidth","getBlockHeight","getBytesPerPixel","bytes","BitsPerSample","getSampleByteSize","getReaderForSample","sampleIndex","SampleFormat","getSampleFormat","getBitsPerSample","getArrayForSample","getTileOrStrip","sample","poolOrDecoder","numTilesPerRow","numTilesPerCol","byteCount","TileOffsets","TileByteCounts","StripByteCounts","sampleFormat","_readRaster","interleave","resampleMethod","imageWidth","imageHeight","minXTile","maxXTile","minYTile","maxYTile","windowWidth","bytesPerPixel","srcSampleOffsets","sampleReaders","promises","yTile","xTile","getPromise","si","promise","tile","blockHeight","firstCol","lastLine","lastCol","ymax","xmax","pixelOffset","windowCoordinate","resampled","pool","fillValue","imageWindowWidth","imageWindowHeight","numPixels","fill","readRGB","enableAlpha","pi","PhotometricInterpretation","RGB","ExtraSamples","Unspecified","WhiteIsZero","BlackIsZero","Palette","CMYK","YCbCr","CIELab","subOptions","ColorMap","red","green","blue","getTiePoints","ModelTiepoint","tiePoints","getGDALMetadata","metadata","GDAL_METADATA","item","inner","getGDALNoData","GDAL_NODATA","modelTransformation","ModelTransformation","referenceImage","modelPixelScale","ModelPixelScale","sqrt","refResX","refResY","refResZ","pixelIsArea","GTRasterTypeGeoKey","tilegrid","h","corners","projected","I","J","xs","pt","ys","origin","resolution","x1","y1","x2","y2","fieldTagNames","fieldTags","arrayFields","StripRowCounts","SubIFDs","fieldTypeNames","fieldTypes","photometricInterpretations","TransparencyMask","ICCLab","ExtraSamplesValues","Assocalpha","Unassalpha","LercParameters","Version","AddCompression","LercAddCompression","None","Deflate","Zstandard","geoKeyNames"],"sourceRoot":""}
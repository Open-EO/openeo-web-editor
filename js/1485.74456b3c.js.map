{"version":3,"file":"js/1485.74456b3c.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/core-js/internals/not-a-nan.js","webpack://@openeo/web-editor/./node_modules/core-js/modules/es.iterator.drop.js","webpack://@openeo/web-editor/./src/components/maps/osmgeocoder.js","webpack://@openeo/web-editor/src/components/maps/GeocoderMixin.vue","webpack://@openeo/web-editor/./src/components/maps/GeocoderMixin.vue?9845","webpack://@openeo/web-editor/./src/components/maps/GeocoderMixin.vue","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue","webpack://@openeo/web-editor/src/components/maps/TextControl.vue","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue?1df8","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue?c848","webpack://@openeo/web-editor/./node_modules/@kirtandesai/ol-geocoder/dist/ol-geocoder.js","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue","webpack://@openeo/web-editor/./src/components/maps/AddDataControl.vue","webpack://@openeo/web-editor/src/components/maps/AddDataControl.vue","webpack://@openeo/web-editor/./src/components/maps/AddDataControl.vue?91fa","webpack://@openeo/web-editor/./src/components/maps/AddDataControl.vue?3c55","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue","webpack://@openeo/web-editor/src/components/maps/ChannelControl.vue","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue?bc38","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue?9e5e","webpack://@openeo/web-editor/./node_modules/ol/xml.js","webpack://@openeo/web-editor/./node_modules/ol/format/XML.js","webpack://@openeo/web-editor/./node_modules/ol/format/xlink.js","webpack://@openeo/web-editor/./node_modules/ol/format/xsd.js","webpack://@openeo/web-editor/./node_modules/ol/format/OWS.js","webpack://@openeo/web-editor/./node_modules/ol/format/WMTSCapabilities.js","webpack://@openeo/web-editor/./node_modules/ol/uri.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/WMTS.js","webpack://@openeo/web-editor/./node_modules/ol/source/WMTS.js","webpack://@openeo/web-editor/./node_modules/ol-ext/control/Timeline.js","webpack://@openeo/web-editor/src/components/maps/WebServiceMixin.vue","webpack://@openeo/web-editor/./src/components/maps/WebServiceMixin.vue?c34d","webpack://@openeo/web-editor/./src/components/maps/WebServiceMixin.vue","webpack://@openeo/web-editor/./src/components/maps/geotiff/state.js","webpack://@openeo/web-editor/./src/components/maps/geotiff/fix.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/styleparser.js","webpack://@openeo/web-editor/./node_modules/ol/layer/WebGLTile.js","webpack://@openeo/web-editor/./node_modules/ol/source/DataTile.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/pool.js","webpack://@openeo/web-editor/./node_modules/ol/source/GeoTIFF.js","webpack://@openeo/web-editor/./src/components/maps/Swipe.js","webpack://@openeo/web-editor/src/components/viewer/MapViewer.vue","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue?dbd2","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue?e73e","webpack://@openeo/web-editor/./node_modules/core-js/internals/to-positive-integer.js"],"sourcesContent":["'use strict';\nvar $RangeError = RangeError;\n\nmodule.exports = function (it) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  if (it === it) return it;\n  throw new $RangeError('NaN is not allowed');\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar notANaN = require('../internals/not-a-nan');\nvar toPositiveInteger = require('../internals/to-positive-integer');\nvar iteratorClose = require('../internals/iterator-close');\nvar createIteratorProxy = require('../internals/iterator-create-proxy');\nvar iteratorHelperThrowsOnInvalidIterator = require('../internals/iterator-helper-throws-on-invalid-iterator');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\nvar IS_PURE = require('../internals/is-pure');\n\nvar DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR = !IS_PURE && !iteratorHelperThrowsOnInvalidIterator('drop', 0);\nvar dropWithoutClosingOnEarlyError = !IS_PURE && !DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR\n  && iteratorHelperWithoutClosingOnEarlyError('drop', RangeError);\n\nvar FORCED = IS_PURE || DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR || dropWithoutClosingOnEarlyError;\n\nvar IteratorProxy = createIteratorProxy(function () {\n  var iterator = this.iterator;\n  var next = this.next;\n  var result, done;\n  while (this.remaining) {\n    this.remaining--;\n    result = anObject(call(next, iterator));\n    done = this.done = !!result.done;\n    if (done) return;\n  }\n  result = anObject(call(next, iterator));\n  done = this.done = !!result.done;\n  if (!done) return result.value;\n});\n\n// `Iterator.prototype.drop` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.drop\n$({ target: 'Iterator', proto: true, real: true, forced: FORCED }, {\n  drop: function drop(limit) {\n    anObject(this);\n    var remaining;\n    try {\n      remaining = toPositiveInteger(notANaN(+limit));\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (dropWithoutClosingOnEarlyError) return call(dropWithoutClosingOnEarlyError, this, remaining);\n\n    return new IteratorProxy(getIteratorDirect(this), {\n      remaining: remaining\n    });\n  }\n});\n","export default class OSMGeocoder {\n\tconstructor(url, geojson = false) {\n\t\tthis.url = url;\n\t\tthis.geojson = geojson;\n\t}\n\n\tgetParameters(opt) {\n\t\treturn {\n\t\t\turl: this.url,\n\t\t\tparams: {\n\t\t\t\tq: opt.query,\n\t\t\t\tformat: 'json',\n\t\t\t\tlimit: 10,\n\t\t\t\t'accept-language': 'en',\n\t\t\t\tpolygon_geojson: this.geojson ? 1 : 0,\n\t\t\t\tpolygon_threshold: 0.001,\n\t\t\t},\n\t\t};\n\t}\n\n\thandleResponse(results) {\n\t\tif (results.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\treturn results\n\t\t\t.filter(result => [\"boundary\", \"geological\", \"leisure\", \"natural\", \"place\", \"water\", \"waterway\"].includes(result.class))\n\t\t\t.map(result => ({\n\t\t\t\tlon: result.lon,\n\t\t\t\tlat: result.lat,\n\t\t\t\tbbox: result.boundingbox,\n\t\t\t\taddress: {\n\t\t\t\t\tname: result.display_name\n\t\t\t\t},\n\t\t\t\toriginal: {\n\t\t\t\t\tformatted: result.display_name,\n\t\t\t\t\tdetails: result.address,\n\t\t\t\t\tgeojson: result.geojson\n\t\t\t\t}\n\t\t\t}));\n\t}\n}","<script>\nimport Geocoder from '@kirtandesai/ol-geocoder';\nimport OSMGeocoder from './osmgeocoder';\n\nexport default {\n\tmethods: {\n\t\taddGeocoder(callback, geojson = false) {\n\t\t\tif (!this.$config.geocoder) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst options = {\n\t\t\t\tprovider: new OSMGeocoder(this.$config.geocoder, geojson),\n\t\t\t\tplaceholder: 'Search for ...',\n\t\t\t\tkeepOpen: true,\n\t\t\t\tpreventDefault: true\n\t\t\t};\n\t\t\tconst geocoder = new Geocoder('nominatim', options);\n\t\t\tgeocoder.on('addresschosen', event => {\n\t\t\t\tif (geojson) {\n\t\t\t\t\tcallback(event.place?.original?.geojson, event);\n\t\t\t\t}\n\t\t\t\telse if (event.place.bbox) {\n\t\t\t\t\tlet bbox = event.place.bbox.map(i => parseFloat(i));\n\t\t\t\t\tlet bboxOpenEO = {\n\t\t\t\t\t\twest: bbox[2],\n\t\t\t\t\t\teast: bbox[3],\n\t\t\t\t\t\tnorth: bbox[1],\n\t\t\t\t\t\tsouth: bbox[0]\n\t\t\t\t\t}\n\t\t\t\t\tcallback(bboxOpenEO, event);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallback(null, event);\t\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.map.addControl(geocoder);\n\t\t}\n\t}\n}\n</script>\n\n<style src=\"@kirtandesai/ol-geocoder/dist/ol-geocoder.min.css\"></style>\n\n<style lang=\"scss\">\n.ol-geocoder.gcd-gl-container {\n\tz-index: 0;\n\tleft: calc(0.5em - 1px) !important;\n\ttop: calc(6.125em + 8px) !important;\n\n\t.ol-control {\n\t\tbackground-color: transparent;\n\t}\n\t\n\tul.gcd-gl-result > li:nth-child(odd) {\n\t\tbackground-color: #f9f9f9;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeocoderMixin.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeocoderMixin.vue?vue&type=script&lang=js\"","var render, staticRenderFns\nimport script from \"./GeocoderMixin.vue?vue&type=script&lang=js\"\nexport * from \"./GeocoderMixin.vue?vue&type=script&lang=js\"\nimport style0 from \"@kirtandesai/ol-geocoder/dist/ol-geocoder.min.css?vue&type=style&index=0&prod&lang=css&external\"\nimport style1 from \"./GeocoderMixin.vue?vue&type=style&index=1&id=643f6883&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.texts.length > 0)?_c('div',{staticClass:\"ol-unselectable ol-control value\",class:{pointer: _vm.texts.length > 1},on:{\"click\":_vm.toggle}},[_vm._v(_vm._s(_vm.current))]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div v-if=\"texts.length > 0\" class=\"ol-unselectable ol-control value\" @click=\"toggle\" :class=\"{pointer: texts.length > 1}\">{{ current }}</div>\n</template>\n\n<script>\nimport ControlMixin from './ControlMixin';\n\nexport default {\n\tname: 'TextControl',\n\tmixins: [\n\t\tControlMixin\n\t],\n\tdata() {\n\t\treturn {\n\t\t\ti: 0\n\t\t};\t\n\t},\n\tcomputed: {\n\t\ttexts() {\n\t\t\tif (Array.isArray(this.text)) {\n\t\t\t\treturn this.text;\n\t\t\t}\n\t\t\telse if (typeof this.text === 'string' && this.text.length > 0) {\n\t\t\t\treturn [this.text];\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\tcurrent() {\n\t\t\tif (this.texts.length === 0) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn this.texts[this.i % this.text.length];\n\t\t\t}\n\t\t}\n\t},\n\tprops: {\n\t\ttext: {\n\t\t\ttype: [\n\t\t\t\tString,\n\t\t\t\tArray\n\t\t\t],\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggle() {\n\t\t\tthis.i++;\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.value {\n\tposition: absolute;\n\ttop: 0.5em;\n\tleft: calc(2.375em + 6px);\n\tmax-width: calc(100% - 2*(2.375em + 6px));\n\tbox-sizing: border-box;\n\tbackground-color: rgba(255,255,255,0.6);\n\twhite-space: pre-wrap;\n\tfont-family: monospace;\n\tpadding: 0.2em;\n}\n.pointer {\n\tcursor: pointer;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TextControl.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TextControl.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TextControl.vue?vue&type=template&id=b1521986&scoped=true\"\nimport script from \"./TextControl.vue?vue&type=script&lang=js\"\nexport * from \"./TextControl.vue?vue&type=script&lang=js\"\nimport style0 from \"./TextControl.vue?vue&type=style&index=0&id=b1521986&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b1521986\",\n  null\n  \n)\n\nexport default component.exports","/*!\n * @kirtandesai/ol-geocoder - v5.0.3\n * A geocoder extension compatible with OpenLayers v7.\n * https://github.com/kirtan-desai/ol-geocoder\n * Built: Thu Nov 17 2022 14:58:35 GMT-0500 (Eastern Standard Time)\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"ol/control/Control\"),require(\"ol/style/Style\"),require(\"ol/style/Icon\"),require(\"ol/layer/Vector\"),require(\"ol/source/Vector\"),require(\"ol/geom/Point\"),require(\"ol/Feature\"),require(\"ol/proj\")):\"function\"==typeof define&&define.amd?define([\"ol/control/Control\",\"ol/style/Style\",\"ol/style/Icon\",\"ol/layer/Vector\",\"ol/source/Vector\",\"ol/geom/Point\",\"ol/Feature\",\"ol/proj\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).Geocoder=t(e.ol.control.Control,e.ol.style.Style,e.ol.style.Icon,e.ol.layer.Vector,e.ol.source.Vector,e.ol.geom.Point,e.ol.Feature,e.ol.proj)}(this,(function(e,t,s,r,n,o,a,i){\"use strict\";function l(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var c=l(e),d=l(t),u=l(s),p=l(r),h=l(n),m=l(o),g=l(a),y=l(i),f=\"gcd-container\",b=\"gcd-button-control\",w=\"gcd-input-query\",v=\"gcd-input-reset\",$={namespace:\"ol-geocoder\",spin:\"gcd-pseudo-rotate\",hidden:\"gcd-hidden\",address:\"gcd-address\",country:\"gcd-country\",city:\"gcd-city\",road:\"gcd-road\",olControl:\"ol-control\",glass:{container:\"gcd-gl-container\",control:\"gcd-gl-control\",button:\"gcd-gl-btn\",input:\"gcd-gl-input\",expanded:\"gcd-gl-expanded\",reset:\"gcd-gl-reset\",result:\"gcd-gl-result\"},inputText:{container:\"gcd-txt-container\",control:\"gcd-txt-control\",input:\"gcd-txt-input\",reset:\"gcd-txt-reset\",icon:\"gcd-txt-glass\",result:\"gcd-txt-result\"}},k={containerId:f,buttonControlId:b,inputQueryId:w,inputResetId:v,cssClasses:$};const x=Object.freeze({__proto__:null,containerId:f,buttonControlId:b,inputQueryId:w,inputResetId:v,cssClasses:$,default:k}),q=\"addresschosen\",C=\"nominatim\",S=\"reverse\",L=\"glass-button\",j=\"text-input\",E=\"osm\",T=\"mapquest\",N=\"photon\",R=\"bing\",A=\"opencage\",P={provider:E,placeholder:\"Search for an address\",featureStyle:null,targetType:L,lang:\"en-US\",limit:5,keepOpen:!1,preventDefault:!1,autoComplete:!1,autoCompleteMinLength:2,autoCompleteTimeout:200,debug:!1};function I(e,t=\"Assertion failed\"){if(!e){if(\"undefined\"!=typeof Error)throw new Error(t);throw t}}function _(e){const t=function(){if(\"performance\"in window==0&&(window.performance={}),\"now\"in window.performance==0){let e=Date.now();performance.timing&&performance.timing.navigationStart&&(e=performance.timing.navigationStart),window.performance.now=()=>Date.now()-e}return window.performance.now()}().toString(36);return e?e+t:t}function M(e){return/^\\d+$/u.test(e)}function O(e,t,s){if(Array.isArray(e))return void e.forEach((e=>O(e,t)));const r=Array.isArray(t)?t:t.split(/\\s+/u);let n=r.length;for(;n--;)V(e,r[n])||U(e,r[n],s)}function F(e,t,s){if(Array.isArray(e))return void e.forEach((e=>F(e,t,s)));const r=Array.isArray(t)?t:t.split(/\\s+/u);let n=r.length;for(;n--;)V(e,r[n])&&G(e,r[n],s)}function V(e,t){return e.classList?e.classList.contains(t):B(t).test(e.className)}function D(e,t){return e.replace(/\\{\\s*([\\w-]+)\\s*\\}/gu,((e,s)=>{const r=void 0===t[s]?\"\":t[s];return String(r).replaceAll(\"&\",\"&amp;\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\").replaceAll('\"',\"&quot;\").replaceAll(\"'\",\"&#039;\")}))}function Q(e,t){let s;if(Array.isArray(e)){if(s=document.createElement(e[0]),e[1].id&&(s.id=e[1].id),e[1].classname&&(s.className=e[1].classname),e[1].attr){const{attr:t}=e[1];if(Array.isArray(t)){let e=-1;for(;++e<t.length;)s.setAttribute(t[e].name,t[e].value)}else s.setAttribute(t.name,t.value)}}else s=document.createElement(e);s.innerHTML=t;const r=document.createDocumentFragment();for(;s.childNodes[0];)r.append(s.childNodes[0]);return s.append(r),s}function B(e){return new RegExp(`(^|\\\\s+) ${e} (\\\\s+|$)`,\"u\")}function U(e,t,s){e.classList?e.classList.add(t):e.className=`${e.className} ${t}`.trim(),s&&M(s)&&window.setTimeout((()=>G(e,t)),s)}function G(e,t,s){e.classList?e.classList.remove(t):e.className=e.className.replace(B(t),\" \").trim(),s&&M(s)&&window.setTimeout((()=>U(e,t)),s)}const z=x.cssClasses;class H{constructor(e){this.options=e,this.els=this.createControl()}createControl(){let e,t,s;return this.options.targetType===j?(t=`${z.namespace} ${z.inputText.container}`,e=Q([\"div\",{id:x.containerId,classname:t}],H.input),s={container:e,control:e.querySelector(`.${z.inputText.control}`),input:e.querySelector(`.${z.inputText.input}`),reset:e.querySelector(`.${z.inputText.reset}`),result:e.querySelector(`.${z.inputText.result}`)}):(t=`${z.namespace} ${z.glass.container}`,e=Q([\"div\",{id:x.containerId,classname:t}],H.glass),s={container:e,control:e.querySelector(`.${z.glass.control}`),button:e.querySelector(`.${z.glass.button}`),input:e.querySelector(`.${z.glass.input}`),reset:e.querySelector(`.${z.glass.reset}`),result:e.querySelector(`.${z.glass.result}`)}),s.input.placeholder=this.options.placeholder,s}}H.glass=`\\n  <div class=\"${z.glass.control} ${z.olControl}\">\\n    <button type=\"button\" id=\"${x.buttonControlId}\" class=\"${z.glass.button}\"></button>\\n    <input type=\"text\" id=\"${x.inputQueryId}\" class=\"${z.glass.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\\n    <a id=\"${x.inputResetId}\" class=\"${z.glass.reset} ${z.hidden}\"></a>\\n  </div>\\n  <ul class=\"${z.glass.result}\"></ul>\\n`,H.input=`\\n  <div class=\"${z.inputText.control}\">\\n    <input type=\"text\" id=\"${x.inputQueryId}\" class=\"${z.inputText.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\\n    <span class=\"${z.inputText.icon}\"></span>\\n    <button type=\"button\" id=\"${x.inputResetId}\" class=\"${z.inputText.reset} ${z.hidden}\"></button>\\n  </div>\\n  <ul class=\"${z.inputText.result}\"></ul>\\n`;class K{constructor(){this.settings={url:\"https://photon.komoot.io/api/\",params:{q:\"\",limit:10,lang:\"en\"},langs:[\"de\",\"it\",\"fr\",\"en\"]}}getParameters(e){return e.lang=e.lang.toLowerCase(),{url:this.settings.url,params:{q:e.query,limit:e.limit||this.settings.params.limit,lang:this.settings.langs.includes(e.lang)?e.lang:this.settings.params.lang}}}handleResponse(e){return 0===e.features.length?[]:e.features.map((e=>({lon:e.geometry.coordinates[0],lat:e.geometry.coordinates[1],address:{name:e.properties.name,postcode:e.properties.postcode,city:e.properties.city,state:e.properties.state,country:e.properties.country},original:{formatted:e.properties.name,details:e.properties}})))}}class J{constructor(){this.settings={url:\"https://nominatim.openstreetmap.org/search/\",params:{q:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,format:this.settings.params.format,addressdetails:this.settings.params.addressdetails,limit:e.limit||this.settings.params.limit,countrycodes:e.countrycodes||this.settings.params.countrycodes,\"accept-language\":e.lang||this.settings.params[\"accept-language\"]}}}handleResponse(e){return 0===e.length?[]:e.map((e=>({lon:e.lon,lat:e.lat,bbox:e.boundingbox,address:{name:e.display_name,road:e.address.road||\"\",houseNumber:e.address.house_number||\"\",postcode:e.address.postcode,city:e.address.city||e.address.town,state:e.address.state,country:e.address.country},original:{formatted:e.display_name,details:e.address}})))}}class W{constructor(){this.settings={url:\"https://open.mapquestapi.com/nominatim/v1/search.php\",params:{q:\"\",key:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,key:e.key,format:\"json\",addressdetails:1,limit:e.limit||this.settings.params.limit,countrycodes:e.countrycodes||this.settings.params.countrycodes,\"accept-language\":e.lang||this.settings.params[\"accept-language\"]}}}handleResponse(e){return 0===e.length?[]:e.map((e=>({lon:e.lon,lat:e.lat,address:{name:e.address.neighbourhood||\"\",road:e.address.road||\"\",postcode:e.address.postcode,city:e.address.city||e.address.town,state:e.address.state,country:e.address.country},original:{formatted:e.display_name,details:e.address}})))}}class X{constructor(){this.settings={url:\"https://dev.virtualearth.net/REST/v1/Locations\",callbackName:\"jsonp\",params:{query:\"\",key:\"\",includeNeighborhood:0,maxResults:10}}}getParameters(e){return{url:this.settings.url,callbackName:this.settings.callbackName,params:{query:e.query,key:e.key,includeNeighborhood:e.includeNeighborhood||this.settings.params.includeNeighborhood,maxResults:e.maxResults||this.settings.params.maxResults}}}handleResponse(e){const{resources:t}=e.resourceSets[0];return 0===t.length?[]:t.map((e=>({lon:e.point.coordinates[1],lat:e.point.coordinates[0],address:{name:e.name},original:{formatted:e.address.formattedAddress,details:e.address}})))}}class Y{constructor(){this.settings={url:\"https://api.opencagedata.com/geocode/v1/json?\",params:{q:\"\",key:\"\",limit:10,countrycode:\"\",pretty:1,no_annotations:1}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,key:e.key,limit:e.limit||this.settings.params.limit,countrycode:e.countrycodes||this.settings.params.countrycodes}}}handleResponse(e){return 0===e.results.length?[]:e.results.map((e=>({lon:e.geometry.lng,lat:e.geometry.lat,address:{name:e.components.house_number||\"\",road:e.components.road||\"\",postcode:e.components.postcode,city:e.components.city||e.components.town,state:e.components.state,country:e.components.country},original:{formatted:e.formatted,details:e.components}})))}}function Z(e){return new Promise(((t,s)=>{const r=function(e,t){t&&\"object\"==typeof t&&(e+=(/\\?/u.test(e)?\"&\":\"?\")+ee(t));return e}(e.url,e.data),n={method:\"GET\",mode:\"cors\",credentials:\"same-origin\"};e.jsonp?function(e,t,s){const{head:r}=document,n=document.createElement(\"script\"),o=`f${Math.round(Math.random()*Date.now())}`;n.setAttribute(\"src\",`${e+(e.indexOf(\"?\")>0?\"&\":\"?\")+t}=${o}`),window[o]=e=>{window[o]=void 0,setTimeout((()=>r.removeChild(n)),0),s(e)},r.append(n)}(r,e.callbackName,t):fetch(r,n).then((e=>e.json())).then(t).catch(s)}))}function ee(e){return Object.keys(e).reduce(((t,s)=>(t.push(\"object\"==typeof e[s]?ee(e[s]):`${encodeURIComponent(s)}=${encodeURIComponent(e[s])}`),t)),[]).join(\"&\")}const te=x.cssClasses;class se{constructor(e,t){this.Base=e,this.layerName=_(\"geocoder-layer-\"),this.layer=new p.default({name:this.layerName,source:new h.default}),this.options=e.options,this.options.provider=\"string\"==typeof this.options.provider?this.options.provider.toLowerCase():this.options.provider,this.provider=this.newProvider(),this.els=t,this.lastQuery=\"\",this.container=this.els.container,this.registeredListeners={mapClick:!1},this.setListeners()}setListeners(){let e,t;const s=e=>{e.stopPropagation(),V(this.els.control,te.glass.expanded)?this.collapse():this.expand()};this.els.input.addEventListener(\"keypress\",(e=>{const t=e.target.value.trim();(e.key?\"Enter\"===e.key:e.which?13===e.which:!!e.keyCode&&13===e.keyCode)&&(e.preventDefault(),this.query(t))}),!1),this.els.input.addEventListener(\"click\",(e=>e.stopPropagation()),!1),this.els.input.addEventListener(\"input\",(s=>{const r=s.target.value.trim();0!==r.length?F(this.els.reset,te.hidden):O(this.els.reset,te.hidden),this.options.autoComplete&&r!==t&&(t=r,e&&clearTimeout(e),e=setTimeout((()=>{r.length>=this.options.autoCompleteMinLength&&this.query(r)}),this.options.autoCompleteTimeout))}),!1),this.els.reset.addEventListener(\"click\",(e=>{this.els.input.focus(),this.els.input.value=\"\",this.lastQuery=\"\",O(this.els.reset,te.hidden),this.clearResults()}),!1),this.options.targetType===L&&this.els.button.addEventListener(\"click\",s,!1)}query(e){this.provider||(this.provider=this.newProvider());const t=this.provider.getParameters({query:e,key:this.options.key,lang:this.options.lang,countrycodes:this.options.countrycodes,limit:this.options.limit});if(this.lastQuery===e&&this.els.result.firstChild)return;this.lastQuery=e,this.clearResults(),O(this.els.reset,te.spin);const s={url:t.url,data:t.params};t.callbackName&&(s.jsonp=!0,s.callbackName=t.callbackName),Z(s).then((e=>{this.options.debug&&console.info(e),F(this.els.reset,te.spin);const t=this.provider.handleResponse(e);t&&(this.createList(t),this.listenMapClick())})).catch((e=>{F(this.els.reset,te.spin);const t=Q(\"li\",\"<h5>Error! No internet connection?</h5>\");this.els.result.append(t)}))}createList(e){const t=this.els.result;e.forEach((e=>{let s;if(this.options.provider===E)s=`<span class=\"${te.road}\">${e.address.name}</span>`;else s=this.addressTemplate(e.address);const r=Q(\"li\",`<a href=\"#\">${s}</a>`);r.addEventListener(\"click\",(t=>{t.preventDefault(),this.chosen(e,s,e.address,e.original)}),!1),t.append(r)}))}chosen(e,t,s,r){const n=this.Base.getMap(),o=[Number.parseFloat(e.lon),Number.parseFloat(e.lat)],a=n.getView().getProjection(),i=y.default.transform(o,\"EPSG:4326\",a);let{bbox:l}=e;l&&(l=y.default.transformExtent([l[2],l[1],l[3],l[0]],\"EPSG:4326\",a));const c={formatted:t,details:s,original:r};if(!1===this.options.keepOpen&&this.clearResults(!0),!0===this.options.preventDefault)this.Base.dispatchEvent({type:q,address:c,coordinate:i,bbox:l,place:e});else{l?n.getView().fit(l,{duration:500}):function(e,t,s=500,r=2.388657133911758){e.getView().animate({duration:s,resolution:r},{duration:s,center:t})}(n,i);const t=this.createFeature(i,c);this.Base.dispatchEvent({type:q,address:c,feature:t,coordinate:i,bbox:l,place:e})}}createFeature(e){const t=new g.default(new m.default(e));return this.addLayer(),t.setStyle(this.options.featureStyle),t.setId(_(\"geocoder-ft-\")),this.getSource().addFeature(t),t}addressTemplate(e){const t=[];return e.name&&t.push(['<span class=\"',te.road,'\">{name}</span>'].join(\"\")),(e.road||e.building||e.house_number)&&t.push(['<span class=\"',te.road,'\">{building} {road} {house_number}</span>'].join(\"\")),(e.city||e.town||e.village)&&t.push(['<span class=\"',te.city,'\">{postcode} {city} {town} {village}</span>'].join(\"\")),(e.state||e.country)&&t.push(['<span class=\"',te.country,'\">{state} {country}</span>'].join(\"\")),D(t.join(\"<br>\"),e)}newProvider(){switch(this.options.provider){case E:return new J;case T:return new W;case N:return new K;case R:return new X;case A:return new Y;default:return this.options.provider}}expand(){F(this.els.input,te.spin),O(this.els.control,te.glass.expanded),window.setTimeout((()=>this.els.input.focus()),100),this.listenMapClick()}collapse(){this.els.input.value=\"\",this.els.input.blur(),O(this.els.reset,te.hidden),F(this.els.control,te.glass.expanded),this.clearResults()}listenMapClick(){if(this.registeredListeners.mapClick)return;const e=this,t=this.Base.getMap().getTargetElement();this.registeredListeners.mapClick=!0,t.addEventListener(\"click\",{handleEvent(s){e.clearResults(!0),t.removeEventListener(s.type,this,!1),e.registeredListeners.mapClick=!1}},!1)}clearResults(e){e&&this.options.targetType===L?this.collapse():function(e){for(;e.firstChild;)e.firstChild.remove()}(this.els.result)}getSource(){return this.layer.getSource()}addLayer(){let e=!1;const t=this.Base.getMap();t.getLayers().forEach((t=>{t===this.layer&&(e=!0)})),e||t.addLayer(this.layer)}}class re extends c.default{constructor(e=C,t={}){let s,r;I(\"string\"==typeof e,\"@param `type` should be string!\"),I(e===C||e===S,`@param 'type' should be '${C}'\\n      or '${S}'!`),I(\"object\"==typeof t,\"@param `options` should be object!\"),P.featureStyle=[new d.default({image:new u.default({scale:.7,src:\"//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png\"})})];const n=new H(t);if(e===C&&(s=n.els.container),super({element:s}),!(this instanceof re))return new re;this.options=function(e,t){const s={};return Object.keys(e).forEach((t=>{Object.prototype.hasOwnProperty.call(e,t)&&(s[t]=e[t])})),Object.keys(t).forEach((e=>{Object.prototype.hasOwnProperty.call(t,e)&&(s[e]=t[e])})),s}(P,t),this.container=s,e===C&&(r=new se(this,n.els),this.layer=r.layer)}getLayer(){return this.layer}getSource(){return this.getLayer().getSource()}setProvider(e){this.options.provider=e}setProviderKey(e){this.options.key=e}}return re}));\n//# sourceMappingURL=ol-geocoder.js.map\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Splitpanes',{staticClass:\"default-theme\",attrs:{\"horizontal\":\"\"}},[_c('Pane',{attrs:{\"id\":\"map\"}},[_c('div',{staticClass:\"map-viewer\",attrs:{\"id\":_vm.id}},[_c('ProgressControl',{ref:\"progress\",attrs:{\"map\":_vm.map}}),_c('UserLocationControl',{attrs:{\"map\":_vm.map}}),_c('AddDataControl',{attrs:{\"map\":_vm.map},on:{\"add\":_vm.addData}}),(_vm.isGeoTiff)?[_c('TextControl',{attrs:{\"text\":_vm.textControlText}}),_c('div',{staticClass:\"ol-unselectable ol-control geotiff-channels\"},[_vm._l((_vm.geotiffs),function(state){return [(!state.colorMap)?_c('ChannelControl',{key:state.layer.id,attrs:{\"bands\":state.bands,\"defaultChannels\":state.defaultChannels,\"title\":_vm.geotiffs.length > 1 ? state.layer.get('title') : ''},on:{\"update\":(type, data) => _vm.updateGeoTiffStyle(state, type, data)}}):_vm._e()]})],2)]:_vm._e(),(_vm.loading)?_c('div',{staticClass:\"map-loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_c('span',[_vm._v(\"Loading map...\")])]):_vm._e()],2)]),(_vm.chart)?_c('Pane',{attrs:{\"id\":\"chart\",\"size\":33}},[_c('span',{staticClass:\"close\",on:{\"click\":_vm.closeChart}},[_c('i',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('ScatterChart',_vm._b({attrs:{\"height\":220}},'ScatterChart',_vm.chart,false))],1):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"ol-add-data ol-unselectable ol-control\",staticStyle:{\"pointer-events\":\"auto\"}},[_c('button',{attrs:{\"type\":\"button\",\"title\":\"Add external data source\"},on:{\"click\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.openModal.apply(null, arguments)}}},[_c('i',{staticClass:\"fas fa-image\"})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"ol-add-data ol-unselectable ol-control\" style=\"pointer-events: auto;\">\n\t\t<button type=\"button\" @click.prevent.stop=\"openModal\" title=\"Add external data source\">\n\t\t\t<i class=\"fas fa-image\"></i>\n\t\t</button>\n\t</div>\n</template>\n\n<script>\nimport ControlMixin from './ControlMixin';\nimport EventBusMixin from '../EventBusMixin';\n\nexport default {\n\tname: 'AddDataControl',\n\tmixins: [\n\t\tControlMixin,\n\t\tEventBusMixin\n\t],\n\tmethods: {\n\t\topenModal() {\n\t\t\tlet events = {\n\t\t\t\tsave: this.addLayer\n\t\t\t};\n\t\t\tthis.broadcast('showModal', 'AddMapDataModal', {}, events);\n\t\t},\n\t\taddLayer(file) {\n\t\t\tthis.$emit('add', file);\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.ol-add-data {\n\tz-index: 0;\n\tright: 0.5em;\n\ttop: 4.875em\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AddDataControl.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AddDataControl.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddDataControl.vue?vue&type=template&id=046026ef&scoped=true\"\nimport script from \"./AddDataControl.vue?vue&type=script&lang=js\"\nexport * from \"./AddDataControl.vue?vue&type=script&lang=js\"\nimport style0 from \"./AddDataControl.vue?vue&type=style&index=0&id=046026ef&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"046026ef\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.channels.length > 0),expression:\"channels.length > 0\"}],staticClass:\"channels\"},[_c('table',[_c('thead',[(_vm.title)?_c('tr',[_c('th',{attrs:{\"colspan\":_vm.cols}},[_vm._v(_vm._s(_vm.title))])]):_vm._e(),_c('tr',[(!_vm.isGray)?_c('th',[_vm._v(\"Channel\")]):_vm._e(),(_vm.multiBand)?_c('th',[_vm._v(\"Band\")]):_vm._e(),_c('th',[_vm._v(\"Min\")]),_c('th',[_vm._v(\"Max\")])])]),_c('tbody',_vm._l((_vm.channels),function(channel,i){return _c('tr',{key:i},[(!_vm.isGray)?_c('th',[_vm._v(_vm._s(_vm.labels[i]))]):_vm._e(),(_vm.multiBand)?_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.id),expression:\"channel.id\",modifiers:{\"number\":true}}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(channel, \"id\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.bands),function(band){return _c('option',{key:band.id,domProps:{\"value\":band.id}},[_vm._v(_vm._s(band.name || band.id))])}),0)]):_vm._e(),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.min),expression:\"channel.min\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"required\":\"\"},domProps:{\"value\":(channel.min)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(channel, \"min\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.max),expression:\"channel.max\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"required\":\"\"},domProps:{\"value\":(channel.max)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(channel, \"max\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})])])}),0),(_vm.multiBand)?_c('tfoot',[_c('tr',[_c('td',{attrs:{\"colspan\":_vm.cols}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isGray),expression:\"isGray\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.isGray)?_vm._i(_vm.isGray,null)>-1:(_vm.isGray)},on:{\"change\":function($event){var $$a=_vm.isGray,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isGray=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isGray=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isGray=$$c}}}}),_vm._v(\" Grayscale \")])])]):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div v-show=\"channels.length > 0\" class=\"channels\">\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr v-if=\"title\">\n\t\t\t\t\t<th :colspan=\"cols\">{{ title }}</th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th v-if=\"!isGray\">Channel</th>\n\t\t\t\t\t<th v-if=\"multiBand\">Band</th>\n\t\t\t\t\t<th>Min</th>\n\t\t\t\t\t<th>Max</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr v-for=\"(channel, i) in channels\" :key=\"i\">\n\t\t\t\t\t<th v-if=\"!isGray\">{{ labels[i] }}</th>\n\t\t\t\t\t<td v-if=\"multiBand\">\n\t\t\t\t\t\t<select v-model.number=\"channel.id\">\n\t\t\t\t\t\t\t<option v-for=\"band in bands\" :key=\"band.id\" :value=\"band.id\">{{ band.name || band.id }}</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td><input type=\"number\" v-model.number=\"channel.min\" required /></td>\n\t\t\t\t\t<td><input type=\"number\" v-model.number=\"channel.max\" required /></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t\t<tfoot v-if=\"multiBand\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td :colspan=\"cols\">\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"isGray\" /> Grayscale\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tfoot>\n\t\t</table>\n\t</div>\n</template>\n\n<script>\nimport ControlMixin from './ControlMixin';\n\nexport default {\n\tname: 'ChannelControl',\n\tmixins: [\n\t\tControlMixin\n\t],\n\tprops: {\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\tdefault: ''\n\t\t},\n\t\tbands: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t},\n\t\tdefaultChannels: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t}\n\t},\n\tcomputed: {\n\t\tmultiBand() {\n\t\t\treturn this.bands.length > 1;\n\t\t},\n\t\tcols() {\n\t\t\tif (this.isGray) {\n\t\t\t\treturn this.multiBand ? 3 : 2;\n\t\t\t}\n\t\t\treturn 4;\n\t\t},\n\t\tlabels() {\n\t\t\treturn this.isGray ? ['Grayscale'] : ['Red', 'Green', 'Blue'];\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tchannels: this.defaultChannels,\n\t\t\tisGray: this.defaultChannels.length === 1 || this.bands.length === 1\n\t\t}\n\t},\n\tmounted() {\n\t\t//this.emit();\n\t},\n\twatch: {\n\t\tbands: {\n\t\t\timmediate: true,\n\t\t\thandler() {\n\t\t\t\tif (this.bands.length === 1) {\n\t\t\t\t\tthis.isGray = true;\n\t\t\t\t}\n\t\t\t\tthis.updateChannels();\n\t\t\t}\n\t\t},\n\t\tisGray() {\n\t\t\tthis.updateChannels();\n\t\t\tthis.emit();\n\t\t},\n\t\tchannels: {\n\t\t\tdeep: true,\n\t\t\thandler() {\n\t\t\t\tthis.emit();\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tisValid(value) {\n\t\t\treturn (typeof value === 'number');\n\t\t},\n\t\tupdateChannels() {\n\t\t\tif (this.defaultChannels.length > 0) {\n\t\t\t\tthis.channels = this.defaultChannels;\n\t\t\t\tif (this.defaultChannels.length === 1) {\n\t\t\t\t\tthis.isGray = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.channels = this.bands\n\t\t\t\t\t.slice(0, this.isGray ? 1 : 3)\n\t\t\t\t\t.map(band => Object.assign({}, band));\n\t\t\t}\n\t\t\t// If only two channels are available, add a third one so that we have enough for RGB\n\t\t\t// If we only have one channel it is grayscale\n\t\t\tif (this.channels.length === 2) {\n\t\t\t\tthis.channels.push(Object.assign({}, this.channels[1]));\n\t\t\t}\n\t\t},\n\t\temit() {\n\t\t\tif (this.channels.filter(c => this.isValid(c.min) && this.isValid(c.max)).length > 0) {\n\t\t\t\tthis.$emit('update', 'channels', this.channels);\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.channels {\n\tinput {\n\t\tmax-width: 4em;\n\t}\n\tselect {\n\t\tmax-width: 10em;\n\t}\n\ttable {\n\t\tth {\n\t\t\tfont-weight: 600;\n\t\t\tfont-family: monospace;\n\t\t}\n\t\tth, td {\n\t\t\tpadding: 2px;\n\t\t}\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChannelControl.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChannelControl.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ChannelControl.vue?vue&type=template&id=5223a7ca&scoped=true\"\nimport script from \"./ChannelControl.vue?vue&type=script&lang=js\"\nexport * from \"./ChannelControl.vue?vue&type=script&lang=js\"\nimport style0 from \"./ChannelControl.vue?vue&type=style&index=0&id=5223a7ca&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5223a7ca\",\n  null\n  \n)\n\nexport default component.exports","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack,\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\r\nimport ol_source_Vector from 'ol/source/Vector.js'\r\nimport ol_control_Control from 'ol/control/Control.js'\r\nimport ol_ext_element from '../util/element.js'\r\n\r\n/** Timeline control\r\n *\r\n * @constructor\r\n * @extends {ol.control.Control}\r\n * @fires select\r\n * @fires scroll\r\n * @fires collapse\r\n * @param {Object=} options Control options.\r\n *\t@param {String} options.className class of the control\r\n *\t@param {Array<ol.Feature>} options.features Features to show in the timeline\r\n *\t@param {ol.SourceImageOptions.vector} options.source class of the control\r\n *\t@param {Number} options.interval time interval length in ms or a text with a format d, h, mn, s (31 days = '31d'), default none\r\n *\t@param {String} options.maxWidth width of the time line in px, default 2000px\r\n *\t@param {String} options.minDate minimum date \r\n *\t@param {String} options.maxDate maximum date \r\n *\t@param {Number} options.minZoom Minimum zoom for the line, default .2\r\n *\t@param {Number} options.maxZoom Maximum zoom for the line, default 4\r\n *\t@param {boolean} options.zoomButton Are zoom buttons avaliable, default false\r\n *\t@param {function} options.getHTML a function that takes a feature and returns the html to display\r\n *\t@param {function} options.getFeatureDate a function that takes a feature and returns its date, default the date propertie\r\n *\t@param {function} options.endFeatureDate a function that takes a feature and returns its end date, default no end date\r\n *\t@param {String} options.graduation day|month to show month or day graduation, default show only years\r\n *\t@param {String} options.scrollTimeout Time in milliseconds to get a scroll event, default 15ms\r\n */\r\nvar ol_control_Timeline = class olcontrolTimeline extends ol_control_Control {\r\n  constructor(options) {\r\n\r\n    var element = ol_ext_element.create('DIV', {\r\n      className: (options.className || '') + ' ol-timeline'\r\n        + (options.target ? '' : ' ol-unselectable ol-control')\r\n        + (options.zoomButton ? ' ol-hasbutton' : '')\r\n    });\r\n\r\n    // Initialize\r\n    super({\r\n      element: element,\r\n      target: options.target\r\n    });\r\n\r\n    // Scroll div\r\n    this._scrollDiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-scroll',\r\n      parent: this.element\r\n    });\r\n\r\n    // Add a button bar\r\n    this._buttons = ol_ext_element.create('DIV', {\r\n      className: 'ol-buttons',\r\n      parent: this.element\r\n    });\r\n    // Zoom buttons\r\n    if (options.zoomButton) {\r\n      // Zoom in\r\n      this.addButton({\r\n        className: 'ol-zoom-in',\r\n        handleClick: function () {\r\n          var zoom = this.get('zoom');\r\n          if (zoom >= 1) {\r\n            zoom++;\r\n          } else {\r\n            zoom = Math.min(1, zoom + 0.1);\r\n          }\r\n          zoom = Math.round(zoom * 100) / 100;\r\n          this.refresh(zoom);\r\n        }.bind(this)\r\n      });\r\n      // Zoom out\r\n      this.addButton({\r\n        className: 'ol-zoom-out',\r\n        handleClick: function () {\r\n          var zoom = this.get('zoom');\r\n          if (zoom > 1) {\r\n            zoom--;\r\n          } else {\r\n            zoom -= 0.1;\r\n          }\r\n          zoom = Math.round(zoom * 100) / 100;\r\n          this.refresh(zoom);\r\n        }.bind(this)\r\n      });\r\n    }\r\n\r\n    // Draw center date\r\n    this._intervalDiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-center-date',\r\n      parent: this.element\r\n    });\r\n\r\n    // Remove selection\r\n    this.element.addEventListener('mouseover', function () {\r\n      if (this._select)\r\n        this._select.elt.classList.remove('ol-select');\r\n    }.bind(this));\r\n\r\n    // Trigger scroll event\r\n    var scrollListener = null;\r\n    this._scrollDiv.addEventListener('scroll', function () {\r\n      this._setScrollLeft();\r\n      if (scrollListener) {\r\n        clearTimeout(scrollListener);\r\n        scrollListener = null;\r\n      }\r\n      scrollListener = setTimeout(function () {\r\n        this.dispatchEvent({\r\n          type: 'scroll',\r\n          date: this.getDate(),\r\n          dateStart: this.getDate('start'),\r\n          dateEnd: this.getDate('end')\r\n        });\r\n      }.bind(this), options.scrollTimeout || 15);\r\n    }.bind(this));\r\n    // Magic to give \"live\" scroll events on touch devices\r\n    // this._scrollDiv.addEventListener('gesturechange', function() {});\r\n    // Scroll timeline\r\n    ol_ext_element.scrollDiv(this._scrollDiv, {\r\n      onmove: function (b) {\r\n        // Prevent selection on moving\r\n        this._moving = b;\r\n      }.bind(this)\r\n    });\r\n\r\n    this._tline = [];\r\n\r\n    // Parameters\r\n    this._scrollLeft = 0;\r\n    this.set('maxWidth', options.maxWidth || 2000);\r\n    this.set('minDate', options.minDate || Infinity);\r\n    this.set('maxDate', options.maxDate || -Infinity);\r\n    this.set('graduation', options.graduation);\r\n    this.set('minZoom', options.minZoom || .2);\r\n    this.set('maxZoom', options.maxZoom || 4);\r\n    this.setInterval(options.interval);\r\n    if (options.getHTML)\r\n      this._getHTML = options.getHTML;\r\n    if (options.getFeatureDate)\r\n      this._getFeatureDate = options.getFeatureDate;\r\n    if (options.endFeatureDate)\r\n      this._endFeatureDate = options.endFeatureDate;\r\n\r\n    // Feature source \r\n    this.setFeatures(options.features || options.source, options.zoom);\r\n  }\r\n  /**\r\n   * Set the map instance the control is associated with\r\n   * and add interaction attached to it to this map.\r\n   * @param {_ol_Map_} map The map instance.\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    this.refresh(this.get('zoom') || 1, true);\r\n  }\r\n  /** Add a button on the timeline\r\n   * @param {*} button\r\n   *  @param {string} button.className\r\n   *  @param {title} button.className\r\n   *  @param {Element|string} button.html Content of the element\r\n   *  @param {function} button.click a function called when the button is clicked\r\n   */\r\n  addButton(button) {\r\n    this.element.classList.add('ol-hasbutton');\r\n    ol_ext_element.create('BUTTON', {\r\n      className: button.className || undefined,\r\n      title: button.title,\r\n      html: button.html,\r\n      click: button.handleClick,\r\n      parent: this._buttons\r\n    });\r\n  }\r\n  /** Set an interval\r\n   * @param {number|string} length the interval length in ms or a farmatted text ie. end with y, 1d, h, mn, s (31 days = '31d'), default none\r\n   */\r\n  setInterval(length) {\r\n    if (typeof (length) === 'string') {\r\n      if (/s$/.test(length)) {\r\n        length = parseFloat(length) * 1000;\r\n      } else if (/mn$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 60;\r\n      } else if (/h$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600;\r\n      } else if (/d$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600 * 24;\r\n      } else if (/y$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600 * 24 * 365;\r\n      } else {\r\n        length = 0;\r\n      }\r\n    }\r\n    this.set('interval', length || 0);\r\n    if (length)\r\n      this.element.classList.add('ol-interval');\r\n    else\r\n      this.element.classList.remove('ol-interval');\r\n    this.refresh(this.get('zoom'));\r\n  }\r\n  /** Default html to show in the line\r\n   * @param {ol.Feature} feature\r\n   * @return {DOMElement|string}\r\n   * @private\r\n   */\r\n  _getHTML(feature) {\r\n    return feature.get('name') || '';\r\n  }\r\n  /** Default function to get the date of a feature, returns the date attribute\r\n   * @param {ol.Feature} feature\r\n   * @return {Data|string}\r\n   * @private\r\n   */\r\n  _getFeatureDate(feature) {\r\n    return (feature && feature.get) ? feature.get('date') : null;\r\n  }\r\n  /** Default function to get the end date of a feature, return undefined\r\n   * @param {ol.Feature} feature\r\n   * @return {Data|string}\r\n   * @private\r\n   */\r\n  _endFeatureDate( /* feature */) {\r\n    return undefined;\r\n  }\r\n  /** Is the line collapsed\r\n   * @return {boolean}\r\n   */\r\n  isCollapsed() {\r\n    return this.element.classList.contains('ol-collapsed');\r\n  }\r\n  /** Collapse the line\r\n   * @param {boolean} b\r\n   */\r\n  collapse(b) {\r\n    if (b)\r\n      this.element.classList.add('ol-collapsed');\r\n    else\r\n      this.element.classList.remove('ol-collapsed');\r\n    this.dispatchEvent({ type: 'collapse', collapsed: this.isCollapsed() });\r\n  }\r\n  /** Collapse the line\r\n   */\r\n  toggle() {\r\n    this.element.classList.toggle('ol-collapsed');\r\n    this.dispatchEvent({ type: 'collapse', collapsed: this.isCollapsed() });\r\n  }\r\n  /** Set the features to display in the timeline\r\n   * @param {Array<ol.Features>|ol.source.Vector} features An array of features or a vector source\r\n   * @param {number} zoom zoom to draw the line default 1\r\n   */\r\n  setFeatures(features, zoom) {\r\n    this._features = this._source = null;\r\n    if (features instanceof ol_source_Vector)\r\n      this._source = features;\r\n    else if (features instanceof Array)\r\n      this._features = features;\r\n    else\r\n      this._features = [];\r\n    this.refresh(zoom);\r\n  }\r\n  /**\r\n   * Get features\r\n   * @return {Array<ol.Feature>}\r\n   */\r\n  getFeatures() {\r\n    return this._features || this._source.getFeatures();\r\n  }\r\n  /**\r\n   * Refresh the timeline with new data\r\n   * @param {Number} zoom Zoom factor from 0.25 to 10, default 1\r\n   */\r\n  refresh(zoom, first) {\r\n    if (!this.getMap())\r\n      return;\r\n    if (!zoom)\r\n      zoom = this.get('zoom');\r\n    zoom = Math.min(this.get('maxZoom'), Math.max(this.get('minZoom'), zoom || 1));\r\n    this.set('zoom', zoom);\r\n    this._scrollDiv.innerHTML = '';\r\n    var features = this.getFeatures();\r\n    var d, d2;\r\n\r\n    // Get features sorted by date\r\n    var tline = this._tline = [];\r\n    features.forEach(function (f) {\r\n      if (d = this._getFeatureDate(f)) {\r\n        if (!(d instanceof Date)) {\r\n          d = new Date(d);\r\n        }\r\n        if (this._endFeatureDate) {\r\n          d2 = this._endFeatureDate(f);\r\n          if (!(d2 instanceof Date)) {\r\n            d2 = new Date(d2);\r\n          }\r\n        }\r\n        if (!isNaN(d)) {\r\n          tline.push({\r\n            date: d,\r\n            end: isNaN(d2) ? null : d2,\r\n            feature: f\r\n          });\r\n        }\r\n      }\r\n    }.bind(this));\r\n\r\n    tline.sort(function (a, b) {\r\n      return (a.date < b.date ? -1 : (a.date === b.date ? 0 : 1));\r\n    });\r\n\r\n    // Draw\r\n    var div = ol_ext_element.create('DIV', {\r\n      parent: this._scrollDiv\r\n    });\r\n\r\n    // Calculate width\r\n    var min = this._minDate = Math.min(this.get('minDate'), tline.length ? tline[0].date : Infinity);\r\n    var max = this._maxDate = Math.max(this.get('maxDate'), tline.length ? tline[tline.length - 1].date : -Infinity);\r\n    if (!isFinite(min))\r\n      this._minDate = min = new Date();\r\n    if (!isFinite(max))\r\n      this._maxDate = max = new Date();\r\n    var delta = (max - min);\r\n    var maxWidth = this.get('maxWidth');\r\n    var scale = this._scale = (delta > maxWidth ? maxWidth / delta : 1) * zoom;\r\n    // Leave 10px on right\r\n    min = this._minDate = this._minDate - 10 / scale;\r\n    delta = (max - min) * scale;\r\n    ol_ext_element.setStyle(div, {\r\n      width: delta,\r\n      maxWidth: 'unset'\r\n    });\r\n\r\n    // Draw time's bar\r\n    this._drawTime(div, min, max, scale);\r\n\r\n    // Set interval\r\n    if (this.get('interval')) {\r\n      ol_ext_element.setStyle(this._intervalDiv, { width: this.get('interval') * scale });\r\n    } else {\r\n      ol_ext_element.setStyle(this._intervalDiv, { width: '' });\r\n    }\r\n\r\n    // Draw features\r\n    var line = [];\r\n    var lineHeight = ol_ext_element.getStyle(this._scrollDiv, 'lineHeight');\r\n\r\n    // Wrapper\r\n    var fdiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-features',\r\n      parent: div\r\n    });\r\n\r\n    // Add features on the line\r\n    tline.forEach(function (f) {\r\n      var d = f.date;\r\n      var t = f.elt = ol_ext_element.create('DIV', {\r\n        className: 'ol-feature',\r\n        style: {\r\n          left: Math.round((d - min) * scale),\r\n        },\r\n        html: this._getHTML(f.feature),\r\n        parent: fdiv\r\n      });\r\n      // Prevent image dragging\r\n      var img = t.querySelectorAll('img');\r\n      for (var i = 0; i < img.length; i++) {\r\n        img[i].ondragstart = function () { return false; };\r\n      }\r\n\r\n      // Calculate image width\r\n      if (f.end) {\r\n        ol_ext_element.setStyle(t, {\r\n          minWidth: (f.end - d) * scale,\r\n          width: (f.end - d) * scale,\r\n          maxWidth: 'unset'\r\n        });\r\n      }\r\n      var left = ol_ext_element.getStyle(t, 'left');\r\n      // Select on click\r\n      t.addEventListener('click', function () {\r\n        if (!this._moving) {\r\n          this.dispatchEvent({ type: 'select', feature: f.feature });\r\n        }\r\n      }.bind(this));\r\n\r\n      // Find first free Y position\r\n      var pos, l;\r\n      for (pos = 0; l = line[pos]; pos++) {\r\n        if (left > l) {\r\n          break;\r\n        }\r\n      }\r\n      line[pos] = left + ol_ext_element.getStyle(t, 'width');\r\n      ol_ext_element.setStyle(t, { top: pos * lineHeight });\r\n    }.bind(this));\r\n    this._nbline = line.length;\r\n\r\n    if (first)\r\n      this.setDate(this._minDate, { anim: false, position: 'start' });\r\n    // Dispatch scroll event\r\n    this.dispatchEvent({\r\n      type: 'scroll',\r\n      date: this.getDate(),\r\n      dateStart: this.getDate('start'),\r\n      dateEnd: this.getDate('end')\r\n    });\r\n  }\r\n  /** Get offset given a date\r\n   * @param {Date} date\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getOffsetFromDate(date) {\r\n    return (date - this._minDate) * this._scale;\r\n  }\r\n  /** Get date given an offset\r\n   * @param {Date} date\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getDateFromOffset(offset) {\r\n    return offset / this._scale + this._minDate;\r\n  }\r\n  /** Set the current position\r\n   * @param {number} scrollLeft current position (undefined when scrolling)\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _setScrollLeft(scrollLeft) {\r\n    this._scrollLeft = scrollLeft;\r\n    if (scrollLeft !== undefined) {\r\n      this._scrollDiv.scrollLeft = scrollLeft;\r\n    }\r\n  }\r\n  /** Get the current position\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getScrollLeft() {\r\n    // Unset when scrolling\r\n    if (this._scrollLeft === undefined) {\r\n      return this._scrollDiv.scrollLeft;\r\n    } else {\r\n      // St by user\r\n      return this._scrollLeft;\r\n    }\r\n  }\r\n  /**\r\n   * Draw dates on line\r\n   * @private\r\n   */\r\n  _drawTime(div, min, max, scale) {\r\n    // Times div\r\n    var tdiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-times',\r\n      parent: div\r\n    });\r\n    var d, dt, month, dmonth;\r\n    var dx = ol_ext_element.getStyle(tdiv, 'left');\r\n    var heigth = ol_ext_element.getStyle(tdiv, 'height');\r\n    // Year\r\n    var year = (new Date(this._minDate)).getFullYear();\r\n    dt = ((new Date(0)).setFullYear(String(year)) - new Date(0).setFullYear(String(year - 1))) * scale;\r\n    var dyear = Math.round(2 * heigth / dt) + 1;\r\n    while (true) {\r\n      d = new Date(0).setFullYear(year);\r\n      if (d > this._maxDate)\r\n        break;\r\n      ol_ext_element.create('DIV', {\r\n        className: 'ol-time ol-year',\r\n        style: {\r\n          left: this._getOffsetFromDate(d) - dx\r\n        },\r\n        html: year,\r\n        parent: tdiv\r\n      });\r\n      year += dyear;\r\n    }\r\n    // Month\r\n    if (/day|month/.test(this.get('graduation'))) {\r\n      dt = ((new Date(0, 0, 1)).setFullYear(String(year)) - new Date(0, 0, 1).setFullYear(String(year - 1))) * scale;\r\n      dmonth = Math.max(1, Math.round(12 / Math.round(dt / heigth / 2)));\r\n      if (dmonth < 12) {\r\n        year = (new Date(this._minDate)).getFullYear();\r\n        month = dmonth + 1;\r\n        while (true) {\r\n          d = new Date(0, 0, 1);\r\n          d.setFullYear(year);\r\n          d.setMonth(month - 1);\r\n          if (d > this._maxDate)\r\n            break;\r\n          ol_ext_element.create('DIV', {\r\n            className: 'ol-time ol-month',\r\n            style: {\r\n              left: this._getOffsetFromDate(d) - dx\r\n            },\r\n            html: d.toLocaleDateString(undefined, { month: 'short' }),\r\n            parent: tdiv\r\n          });\r\n          month += dmonth;\r\n          if (month > 12) {\r\n            year++;\r\n            month = dmonth + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Day\r\n    if (this.get('graduation') === 'day') {\r\n      dt = (new Date(0, 1, 1) - new Date(0, 0, 1)) * scale;\r\n      var dday = Math.max(1, Math.round(31 / Math.round(dt / heigth / 2)));\r\n      if (dday < 31) {\r\n        year = (new Date(this._minDate)).getFullYear();\r\n        month = 0;\r\n        var day = dday;\r\n        while (true) {\r\n          d = new Date(0, 0, 1);\r\n          d.setFullYear(year);\r\n          d.setMonth(month);\r\n          d.setDate(day);\r\n          if (isNaN(d)) {\r\n            month++;\r\n            if (month > 12) {\r\n              month = 1;\r\n              year++;\r\n            }\r\n            day = dday;\r\n          } else {\r\n            if (d > this._maxDate)\r\n              break;\r\n            if (day > 1) {\r\n              var offdate = this._getOffsetFromDate(d);\r\n              if (this._getOffsetFromDate(new Date(year, month + 1, 1)) - offdate > heigth) {\r\n                ol_ext_element.create('DIV', {\r\n                  className: 'ol-time ol-day',\r\n                  style: {\r\n                    left: offdate - dx\r\n                  },\r\n                  html: day,\r\n                  parent: tdiv\r\n                });\r\n              }\r\n            }\r\n            year = d.getFullYear();\r\n            month = d.getMonth();\r\n            day = d.getDate() + dday;\r\n            if (day > new Date(year, month + 1, 0).getDate()) {\r\n              month++;\r\n              day = dday;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /** Center timeline on a date\r\n   * @param {Date|String|ol.feature} feature a date or a feature with a date\r\n   * @param {Object} options\r\n   *  @param {boolean} options.anim animate scroll\r\n   *  @param {string} options.position start, end or middle, default middle\r\n   */\r\n  setDate(feature, options) {\r\n    var date;\r\n    options = options || {};\r\n    // It's a date\r\n    if (feature instanceof Date) {\r\n      date = feature;\r\n    } else {\r\n      // Get date from Feature\r\n      if (this.getFeatures().indexOf(feature) >= 0) {\r\n        date = this._getFeatureDate(feature);\r\n      }\r\n      if (date && !(date instanceof Date)) {\r\n        date = new Date(date);\r\n      }\r\n      if (!date || isNaN(date)) {\r\n        date = new Date(String(feature));\r\n      }\r\n    }\r\n    if (!isNaN(date)) {\r\n      if (options.anim === false)\r\n        this._scrollDiv.classList.add('ol-move');\r\n      var scrollLeft = this._getOffsetFromDate(date);\r\n      if (options.position === 'start') {\r\n        scrollLeft += ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n      } else if (options.position === 'end') {\r\n        scrollLeft -= ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n      }\r\n      this._setScrollLeft(scrollLeft);\r\n      if (options.anim === false)\r\n        this._scrollDiv.classList.remove('ol-move');\r\n      if (feature) {\r\n        for (var i = 0, f; f = this._tline[i]; i++) {\r\n          if (f.feature === feature) {\r\n            f.elt.classList.add('ol-select');\r\n            this._select = f;\r\n          } else {\r\n            f.elt.classList.remove('ol-select');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /** Get round date (sticked to mn, hour day or month)\r\n   * @param {Date} d\r\n   * @param {string} stick sticking option to stick date to: 'mn', 'hour', 'day', 'month', default no stick\r\n   * @return {Date}\r\n   */\r\n  roundDate(d, stick) {\r\n    switch (stick) {\r\n      case 'mn': {\r\n        return new Date(this._roundTo(d, 60 * 1000));\r\n      }\r\n      case 'hour': {\r\n        return new Date(this._roundTo(d, 60 * 60 * 1000));\r\n      }\r\n      case 'day': {\r\n        return new Date(this._roundTo(d, 24 * 60 * 60 * 1000));\r\n      }\r\n      case 'month': {\r\n        d = new Date(this._roundTo(d, 24 * 60 * 60 * 1000));\r\n        if (d.getDate() > 15) {\r\n          d = new Date(d.setMonth(d.getMonth() + 1));\r\n        }\r\n        d = d.setDate(1);\r\n        return new Date(d);\r\n      }\r\n      default: return new Date(d);\r\n    }\r\n  }\r\n  /** Get the date of the center\r\n   * @param {string} position position to get 'start', 'end' or 'middle', default middle\r\n   * @param {string} stick sticking option to stick date to: 'mn', 'hour', 'day', 'month', default no stick\r\n   * @return {Date}\r\n   */\r\n  getDate(position, stick) {\r\n    var pos;\r\n    if (!stick)\r\n      stick = position;\r\n    switch (position) {\r\n      case 'start': {\r\n        if (this.get('interval')) {\r\n          pos = -ol_ext_element.getStyle(this._intervalDiv, 'width') / 2 + ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        } else {\r\n          pos = -ol_ext_element.outerWidth(this._scrollDiv) / 2 + ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        }\r\n        break;\r\n      }\r\n      case 'end': {\r\n        if (this.get('interval')) {\r\n          pos = ol_ext_element.getStyle(this._intervalDiv, 'width') / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        } else {\r\n          pos = ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        pos = 0;\r\n        break;\r\n      }\r\n    }\r\n    var d = this._getDateFromOffset(this._getScrollLeft() + pos);\r\n    d = this.roundDate(d, stick);\r\n    return new Date(d);\r\n  }\r\n  /** Round number to\r\n   * @param {number} d\r\n   * @param {number} r\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _roundTo(d, r) {\r\n    return Math.round(d / r) * r;\r\n  }\r\n  /** Get the start date of the control\r\n   * @return {Date}\r\n   */\r\n  getStartDate() {\r\n    return new Date(this.get('minDate'));\r\n  }\r\n  /** Get the end date of the control\r\n   * @return {Date}\r\n   */\r\n  getEndDate() {\r\n    return new Date(this.get('maxDate'));\r\n  }\r\n}\r\n\r\nexport default ol_control_Timeline","<script>\nimport Utils from '../../utils.js';\n\nimport Collection from 'ol/Collection';\nimport LayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport WMTS, {optionsFromCapabilities} from 'ol/source/WMTS';\n\nimport 'ol-ext/control/Timeline.css';\nimport Timeline from 'ol-ext/control/Timeline';\n\nimport ExtentMixin from './ExtentMixin.vue';\n\nexport default {\n\tmixins: [ExtentMixin],\n\tdata() {\n\t\treturn {\n\t\t\tWMTSCapabilities: {},\n\t\t\ttimeline: null,\n\t\t}\n\t},\n\tmethods: {\n\t\tasync addWebService(service) {\n\t\t\tswitch(service.type.toLowerCase()) {\n\t\t\t\tcase 'xyz':\n\t\t\t\t\treturn this.updateXYZLayer(service);\n\t\t\t\tcase 'wmts':\n\t\t\t\t\treturn await this.updateWMTSLayer(service);\n\t\t\t\tdefault:\n\t\t\t\t\tUtils.error(this, 'Sorry, this web service type is not supported.');\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\tgetWMTSTimes(capabilities, layerId) {\n\t\t\tconst layers = capabilities.Contents.Layer || [];\n\t\t\tlet layer = layers.find(l => l.Identifier == layerId);\n\t\t\tif (!layer || !layer.Dimension) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tlet timeDimension = layer.Dimension.find(d => d.Identifier === 'TIME');\n\t\t\tif (!timeDimension) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn timeDimension.Value.sort();\n\t\t},\n\n\t\tasync initWMTSLayer(service) {\n\t\t\tif (!this.WMTSCapabilities[service.url]) {\n\t\t\t\ttry {\n\t\t\t\t\tlet url = new URL(service.url);\n\t\t\t\t\turl.searchParams.set('service', 'wmts');\n\t\t\t\t\turl.searchParams.set('request', 'GetCapabilities');\n\t\t\t\t\tlet response = await Utils.axios().get(url.toString(), { responseType: 'text' });\n\t\t\t\t\tvar parser = new WMTSCapabilities();\n\t\t\t\t\tthis.WMTSCapabilities[service.url] = parser.read(response.data);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tUtils.exception(this, error, \"WMTS Discovery failed\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.WMTSCapabilities[service.url];\n\t\t},\n\n\t\tasync updateWMTSLayer(service, prefix = \"Service\") {\n\t\t\tlet attrs = service.attributes || {};\n\n\t\t\tlet capabilities = await this.initWMTSLayer(service);\n\t\t\tif (!capabilities) {\n\t\t\t\tUtils.exception(this, error, \"WMTS Discovery failed\");\n\t\t\t}\n\n\t\t\tlet minDate = null;\n\t\t\tlet maxDate = null;\n\t\t\tlet defaultDate = null;\n\t\t\tlet source = null;\n\t\t\tlet title = Utils.getResourceTitle(service, prefix);\n\t\t\tlet layerCollection = new Collection();\n\t\t\tlet layerNames;\n\t\t\tif (Array.isArray(attrs.layers)) {\n\t\t\t\tlayerNames = attrs.layers;\n\t\t\t}\n\t\t\telse if (Array.isArray(capabilities.Contents.Layer)) {\n\t\t\t\tlayerNames = layers.map(l => l.Identifier);\n\t\t\t}\n\t\t\tfor(let layer of layerNames) {\n\t\t\t\tif (!layer) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet options = optionsFromCapabilities(capabilities, {\n\t\t\t\t\tlayer,\n\t\t\t\t\tmatrixSet: 'EPSG:3857'\n\t\t\t\t});\n\t\t\t\tif (!defaultDate) {\n\t\t\t\t\tdefaultDate = new Date(options.dimensions.TIME);\n\t\t\t\t}\n\n\t\t\t\tlet times = this.getWMTSTimes(capabilities, layer);\n\t\t\t\tif (times.length) {\n\t\t\t\t\tlet min = new Date(times[0]);\n\t\t\t\t\tlet max = new Date(times[times.length -1]);\n\t\t\t\t\tif (!minDate || min < minDate) {\n\t\t\t\t\t\tminDate = min;\n\t\t\t\t\t}\n\t\t\t\t\tif (!maxDate || max > maxDate) {\n\t\t\t\t\t\tmaxDate = max;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Utils.isObject(attrs.dimensions)) {\n\t\t\t\t\tObject.assign(options.dimensions, service.attributes.dimensions);\n\t\t\t\t}\n\t\t\t\tsource = new WMTS(options);\n\t\t\t\tvar mapLayer = new TileLayer({\n\t\t\t\t\ttitle,\n\t\t\t\t\tsource: this.trackTileProgress(source),\n\t\t\t\t\tnoSwitcherDelete: true\n\t\t\t\t});\n\t\t\t\tlayerCollection.push(mapLayer);\n\t\t\t}\n\n\t\t\tif (minDate && maxDate) {\n\t\t\t\tthis.timeline = new Timeline({\n\t\t\t\t\tclassName: 'ol-pointer',\n\t\t\t\t\tgraduation: 'day',\n\t\t\t\t\tminDate: minDate,\n\t\t\t\t\tmaxDate: maxDate\n\t\t\t\t});\n\t\t\t\tlet run;\n\t\t\t\tthis.timeline.on('scroll', function(e) {\n\t\t\t\t\tif (!e.date || e.date > maxDate || e.date < minDate) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (run) {\n\t\t\t\t\t\twindow.clearTimeout(run);\n\t\t\t\t\t}\n\t\t\t\t\trun = window.setTimeout(() => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet date = e.date.toISOString().substr(0, 10);\n\t\t\t\t\t\t\tsource.updateDimensions({\n\t\t\t\t\t\t\t\tTIME: date\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet btns = document.getElementsByClassName('timeline-date-label');\n\t\t\t\t\t\t\tbtns[0].innerText = date;\n\t\t\t\t\t\t\tbtns[0].disabled = true;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trun = null;\n\t\t\t\t\t}, 500);\n\t\t\t\t});\n\t\t\t\tthis.map.addControl(this.timeline);\n\n\t\t\t\tthis.timeline.addButton({\n\t\t\t\t\tclassName: 'timeline-date-label',\n\t\t\t\t\ttitle: `The date that is shown on the map for the collection '${title}'`,\n\t\t\t\t\thtml: 'No date'\n\t\t\t\t});\n\t\t\t\tthis.timeline.setDate(defaultDate);\n\t\t\t}\n\n\t\t\tlet group = new LayerGroup({\n\t\t\t\tid: service.id,\n\t\t\t\ttitle,\n\t\t\t\tlayers: layerCollection\n\t\t\t});\n\t\t\tgroup.on('change:visible',  () => {\n\t\t\t\tif (this.timeline && this.timeline.element) {\n\t\t\t\t\t// Remove time selector on Map if not required any more https://github.com/Open-EO/openeo-web-editor/issues/207\n\t\t\t\t\tthis.timeline.element.style.display = group.getVisible() ? 'block' : 'none';\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.addLayerToMap(group);\n\n\t\t\tif (this.timeline) {\n\t\t\t\tthis.map.getLayers().on('remove', event => {\n\t\t\t\t\tif (event.element === group) {\n\t\t\t\t\t\tthis.map.removeControl(this.timeline);\n\t\t\t\t\t\tthis.timeline = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn group;\n\t\t},\n\n\t\tupdateXYZLayer(service, prefix = \"Service\") {\n\t\t\t// Replace/add a query parameter with a unique ID so that OpenLayers doesn't load tiles from cache\n\t\t\tlet url = Utils.replaceParam(service.url, '__editorSessionId', new Date().getTime()).replace(/%7B/g, '{').replace(/%7D/g, '}');\n\t\t\tlet title = Utils.getResourceTitle(service, prefix);\n\t\t\tlet layer = new TileLayer({\n\t\t\t\ttitle,\n\t\t\t\tsource: this.trackTileProgress(new XYZ({\n\t\t\t\t\turl\n\t\t\t\t})),\n\t\t\t\tnoSwitcherDelete: true\n\t\t\t});\n\t\t\tlet group = new LayerGroup({\n\t\t\t\tid: service.id,\n\t\t\t\ttitle,\n\t\t\t\tlayers: [\n\t\t\t\t\tlayer\n\t\t\t\t]\n\t\t\t});\n\t\t\tthis.addLayerToMap(group);\n\n\t\t\t// Try to detect a bounding box and fit the view to it\n\t\t\tif (Utils.isObject(service.process) && Utils.isObject(service.process.process_graph)) {\n\t\t\t\tconst crs84 = \"urn:ogc:def:crs:OGC:1.3:CRS84\";\n\t\t\t\tconst e4326 = \"EPSG:4326\";\n\t\t\t\tObject.values(service.process.process_graph)\n\t\t\t\t\t.filter(node => node.process_id === 'load_collection' && Utils.isObject(node.arguments) && node.arguments.spatial_extent)\n\t\t\t\t\t.forEach(node => {\n\t\t\t\t\t\tlet e = node.arguments.spatial_extent;\n\t\t\t\t\t\tlet isBBox = (e.west || e.east || e.south || e.north) && (!e.crs || e.crs === 4326 || e.crs === e4326);\n\t\t\t\t\t\tlet isGeoJSON = e.type && (!e.crs || (Utils.isObject(e.crs) && e.crs.type === \"name\" && (e.crs.properties?.name === e4326 || e.properties?.name === crs84)));\n\t\t\t\t\t\tif (isBBox || isGeoJSON) {\n\t\t\t\t\t\t\tthis.addExtent(e, false);\n\t\t\t\t\t\t\t// ToDo: This should be combined into just a single call to addExtent to fit the view to the full extents\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn group;\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WebServiceMixin.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WebServiceMixin.vue?vue&type=script&lang=js\"","var render, staticRenderFns\nimport script from \"./WebServiceMixin.vue?vue&type=script&lang=js\"\nexport * from \"./WebServiceMixin.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default class GeoTiffState {\n\n\tconstructor(geotiff) {\n\t\tthis.layer = null;\n\t\tthis.colorMap = geotiff.getColorMap();\n\t\tthis.noData = geotiff.getNoData();\n\t\tthis.bands = geotiff.getBands();\n\t\tthis.defaultChannels = this.bands.slice(0, 3);\n\t\tthis.channels = this.bands.slice(0, 3);\n    this.file = geotiff;\n\t}\n\n\tgetBandVar(i) {\n\t\treturn ['band', ['var', `${i}band`]];\n\t}\n\n\tgetFormula(i) {\n\t\tlet min = ['var', `${i}min`];\n\t\tlet max = ['var', `${i}max`];\n\t\tlet x = this.getBandVar(i);\n\t\tlet scale = ['*', ['/', ['-', x, min], ['-', max, min]], 255]; // Linear scaling from min - max to 0 - 255\n\t\treturn ['clamp', scale, 0, 255]; // clamp values in case we get cales < 0 or > 255\n\t}\n\n\tgetNoDataFormula() {\n\t\tlet band = this.getBandVar('alpha');\n\t\t// https://github.com/openlayers/openlayers/issues/13588#issuecomment-1125317573\n\t\t// return ['clamp', band, 0, 1];\n\t\t// return ['/', band, 255];\n\t\treturn ['case', ['==', band, 0], 0, 1];\n\t}\n\n\tsetStyle() {\n\t\tif (!this.layer) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Compute variables\n\t\tlet variables = {};\n\t\tfor(let i in this.channels) {\n\t\t\tlet channel = this.channels[i];\n\t\t\tvariables[`${i}band`] = channel.id;\n\t\t\tvariables[`${i}min`] = channel.min;\n\t\t\tvariables[`${i}max`] = channel.max;\n\t\t}\n\t\tvariables.alphaband = this.bands.length + 1;\n\n\t\t// Create style\n\t\tlet color = [];\n\t\tif (this.colorMap) {\n\t\t\tcolor.push('palette');\n\t\t\tcolor.push(['band', 1]);\n\t\t\tcolor.push(this.colorMap);\n\t\t}\n\t\telse if (this.channels.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\telse if (this.channels.length === 1) {\n\t\t\tcolor.push('color');\n\t\t\tlet formula = this.getFormula(0);\n\t\t\tcolor.push(formula);\n\t\t\tcolor.push(formula);\n\t\t\tcolor.push(formula);\n\t\t\tif (this.noData.length > 0) {\n\t\t\t\tcolor.push(this.getNoDataFormula());\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tcolor.push('color');\n\t\t\tcolor.push(this.getFormula(0));\n\t\t\tcolor.push(this.getFormula(1));\n\t\t\tcolor.push(this.getFormula(2));\n\t\t\tif (this.noData.length > 0) {\n\t\t\t\tcolor.push(this.getNoDataFormula());\n\t\t\t}\n\t\t}\n\n\t\t// Set style\n\t\tthis.layer.setStyle({variables, color});\n\t}\n\n}\n","import { GeoTIFFImage } from 'geotiff';\n\n// Integrate changes/fixes from https://github.com/geotiffjs/geotiff.js/pull/303 until released/integrated by geotiff.js\nGeoTIFFImage.prototype.getSampleByteSize = function(i) {\n  if (!this.fileDirectory.BitsPerSample || this.fileDirectory.BitsPerSample.length === 0) {\n    return;\n  }\n  if (i >= this.fileDirectory.BitsPerSample.length) {\n    i = 0;\n  }\n  return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n};\n\nGeoTIFFImage.prototype.getReaderForSample = function(sampleIndex) {\n  const format = this.getSampleFormat(sampleIndex);\n  const bitsPerSample = this.getBitsPerSample(sampleIndex);\n  switch (format) {\n    case 1: // unsigned integer data\n      if (bitsPerSample <= 8) {\n        return DataView.prototype.getUint8;\n      } else if (bitsPerSample <= 16) {\n        return DataView.prototype.getUint16;\n      } else if (bitsPerSample <= 32) {\n        return DataView.prototype.getUint32;\n      }\n      break;\n    case 2: // twos complement signed integer data\n      if (bitsPerSample <= 8) {\n        return DataView.prototype.getInt8;\n      } else if (bitsPerSample <= 16) {\n        return DataView.prototype.getInt16;\n      } else if (bitsPerSample <= 32) {\n        return DataView.prototype.getInt32;\n      }\n      break;\n    case 3:\n      switch (bitsPerSample) {\n        case 16:\n          return function (offset, littleEndian) {\n            return getFloat16(this, offset, littleEndian);\n          };\n        case 32:\n          return DataView.prototype.getFloat32;\n        case 64:\n          return DataView.prototype.getFloat64;\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  throw Error('Unsupported data format/bitsPerSample');\n};\n\nGeoTIFFImage.prototype.getSampleFormat = function(sampleIndex = 0) {\n  if (!this.fileDirectory.SampleFormat || this.fileDirectory.SampleFormat.length === 0) {\n    return 1;\n  }\n  return typeof this.fileDirectory.SampleFormat[sampleIndex] !== 'undefined'\n    ? this.fileDirectory.SampleFormat[sampleIndex] : this.fileDirectory.SampleFormat[0];\n};\n\nGeoTIFFImage.prototype.getBitsPerSample = function(sampleIndex = 0) {\n  if (!this.fileDirectory.BitsPerSample || this.fileDirectory.BitsPerSample.length === 0) {\n    return;\n  }\n  return typeof this.fileDirectory.BitsPerSample[sampleIndex] !== 'undefined'\n    ? this.fileDirectory.BitsPerSample[sampleIndex] : this.fileDirectory.BitsPerSample[0];\n};\n// End of geotiff.js fixes","/**\n * Utilities for parsing literal style objects\n * @module ol/webgl/styleparser\n */\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  SizeType,\n  StringType,\n  newParsingContext,\n} from '../expr/expression.js';\nimport {ShaderBuilder} from './ShaderBuilder.js';\nimport {\n  arrayToGlsl,\n  buildExpression,\n  getStringNumberEquivalent,\n  stringToGlsl,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {asArray} from '../color.js';\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a compilation context that\n * will be read and modified during the parsing operation.\n * @param {import(\"../expr/gpu.js\").CompilationContext} compilationContext Compilation context\n * @param {import(\"../expr/expression.js\").EncodedExpression} value Value\n * @param {number} [expectedType] Expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(compilationContext, value, expectedType) {\n  const parsingContext = newParsingContext();\n  parsingContext.style = compilationContext.style;\n  return buildExpression(\n    value,\n    expectedType,\n    parsingContext,\n    compilationContext,\n  );\n}\n\n/**\n * Packs all components of a color into a two-floats array\n * @param {import(\"../color.js\").Color|string} color Color as array of numbers or string\n * @return {Array<number>} Vec2 array containing the color in compressed form\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256;\n  const g = array[1];\n  const b = array[2] * 256;\n  const a = Math.round(array[3] * 255);\n  return [r + g, b + a];\n}\n\nconst UNPACK_COLOR_FN = `vec4 unpackColor(vec2 packedColor) {\n  return fract(packedColor[1] / 256.0) * vec4(\n    fract(floor(packedColor[0] / 256.0) / 256.0),\n    fract(packedColor[0] / 256.0),\n    fract(floor(packedColor[1] / 256.0) / 256.0),\n    1.0\n  );\n}`;\n\n/**\n * @param {number} type Value type\n * @return {1|2|3|4} The amount of components for this value\n */\nfunction getGlslSizeFromType(type) {\n  if (type === ColorType || type === SizeType) {\n    return 2;\n  }\n  if (type === NumberArrayType) {\n    return 4;\n  }\n  return 1;\n}\n\n/**\n * @param {number} type Value type\n * @return {'float'|'vec2'|'vec3'|'vec4'} The corresponding GLSL type for this value\n */\nfunction getGlslTypeFromType(type) {\n  const size = getGlslSizeFromType(type);\n  if (size > 1) {\n    return /** @type {'vec2'|'vec3'|'vec4'} */ (`vec${size}`);\n  }\n  return 'float';\n}\n\n/**\n * see https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\n * @param {Object|string} input The hash input, either an object or string\n * @return {string} Hash (if the object cannot be serialized, it is based on `getUid`)\n */\nexport function computeHash(input) {\n  const hash = JSON.stringify(input)\n    .split('')\n    .reduce((prev, curr) => (prev << 5) - prev + curr.charCodeAt(0), 0);\n  return (hash >>> 0).toString();\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {'shape-'|'circle-'|'icon-'} prefix Properties prefix\n */\nfunction parseCommonSymbolProperties(style, builder, vertContext, prefix) {\n  if (`${prefix}radius` in style && prefix !== 'icon-') {\n    let radius = expressionToGlsl(\n      vertContext,\n      style[`${prefix}radius`],\n      NumberType,\n    );\n    if (`${prefix}radius2` in style) {\n      const radius2 = expressionToGlsl(\n        vertContext,\n        style[`${prefix}radius2`],\n        NumberType,\n      );\n      radius = `max(${radius}, ${radius2})`;\n    }\n    if (`${prefix}stroke-width` in style) {\n      radius = `(${radius} + ${expressionToGlsl(\n        vertContext,\n        style[`${prefix}stroke-width`],\n        NumberType,\n      )} * 0.5)`;\n    }\n    builder.setSymbolSizeExpression(`vec2(${radius} * 2. + 0.5)`); // adding some padding for antialiasing\n  }\n  if (`${prefix}scale` in style) {\n    const scale = expressionToGlsl(\n      vertContext,\n      style[`${prefix}scale`],\n      SizeType,\n    );\n    builder.setSymbolSizeExpression(\n      `${builder.getSymbolSizeExpression()} * ${scale}`,\n    );\n  }\n  if (`${prefix}displacement` in style) {\n    builder.setSymbolOffsetExpression(\n      expressionToGlsl(\n        vertContext,\n        style[`${prefix}displacement`],\n        NumberArrayType,\n      ),\n    );\n  }\n  if (`${prefix}rotation` in style) {\n    builder.setSymbolRotationExpression(\n      expressionToGlsl(vertContext, style[`${prefix}rotation`], NumberType),\n    );\n  }\n  if (`${prefix}rotate-with-view` in style) {\n    builder.setSymbolRotateWithView(!!style[`${prefix}rotate-with-view`]);\n  }\n}\n\n/**\n * @param {string} distanceField The distance field expression\n * @param {string|null} fillColor The fill color expression; null if no fill\n * @param {string|null} strokeColor The stroke color expression; null if no stroke\n * @param {string|null} strokeWidth The stroke width expression; null if no stroke\n * @param {string|null} opacity The opacity expression; null if no stroke\n * @return {string} The final color expression, based on the distance field and given params\n */\nfunction getColorFromDistanceField(\n  distanceField,\n  fillColor,\n  strokeColor,\n  strokeWidth,\n  opacity,\n) {\n  let color = 'vec4(0.)';\n  if (fillColor !== null) {\n    color = fillColor;\n  }\n  if (strokeColor !== null && strokeWidth !== null) {\n    const strokeFillRatio = `smoothstep(-${strokeWidth} + 0.63, -${strokeWidth} - 0.58, ${distanceField})`;\n    color = `mix(${strokeColor}, ${color}, ${strokeFillRatio})`;\n  }\n  const shapeOpacity = `(1.0 - smoothstep(-0.63, 0.58, ${distanceField}))`;\n  let result = `${color} * ${shapeOpacity}`;\n  if (opacity !== null) {\n    result = `${result} * ${opacity}`;\n  }\n  return result;\n}\n\n/**\n * This will parse an image property provided by `<prefix>-src`\n * The image size expression in GLSL will be returned\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {string} textureId A identifier that will be used in the generated uniforms: `sample2d u_texture<id>` and `vec2 u_texture<id>_size`\n * @return {string} The image size expression\n */\nfunction parseImageProperties(style, builder, uniforms, prefix, textureId) {\n  const image = new Image();\n  let size;\n  image.crossOrigin =\n    style[`${prefix}cross-origin`] === undefined\n      ? 'anonymous'\n      : style[`${prefix}cross-origin`];\n  image.src = style[`${prefix}src`];\n\n  if (image.complete && image.width && image.height) {\n    size = arrayToGlsl([image.width, image.height]);\n  } else {\n    // the size is provided asynchronously using a uniform\n    uniforms[`u_texture${textureId}_size`] = () => {\n      return image.complete ? [image.width, image.height] : [0, 0];\n    };\n    builder.addUniform(`vec2 u_texture${textureId}_size`);\n    size = `u_texture${textureId}_size`;\n  }\n  uniforms[`u_texture${textureId}`] = image;\n  builder.addUniform(`sampler2D u_texture${textureId}`);\n  return size;\n}\n\n/**\n * This will parse an image's offset properties provided by `<prefix>-offset`, `<prefix>-offset-origin` and `<prefix>-size`\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {import(\"../expr/gpu.js\").CompilationContext} context Shader compilation context (vertex or fragment)\n * @param {string} imageSize Pixel size of the full image as a GLSL expression\n * @param {string} sampleSize Pixel size of the sample in the image as a GLSL expression\n * @return {string} The offset expression\n */\nfunction parseImageOffsetProperties(\n  style,\n  prefix,\n  context,\n  imageSize,\n  sampleSize,\n) {\n  let offsetExpression = expressionToGlsl(\n    context,\n    style[`${prefix}offset`],\n    NumberArrayType,\n  );\n  if (`${prefix}offset-origin` in style) {\n    switch (style[`${prefix}offset-origin`]) {\n      case 'top-right':\n        offsetExpression = `vec2(${imageSize}.x, 0.) + ${sampleSize} * vec2(-1., 0.) + ${offsetExpression} * vec2(-1., 1.)`;\n        break;\n      case 'bottom-left':\n        offsetExpression = `vec2(0., ${imageSize}.y) + ${sampleSize} * vec2(0., -1.) + ${offsetExpression} * vec2(1., -1.)`;\n        break;\n      case 'bottom-right':\n        offsetExpression = `${imageSize} - ${sampleSize} - ${offsetExpression}`;\n        break;\n      default: // pass\n    }\n  }\n  return offsetExpression;\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseCircleProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  // this function takes in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the circle, positive outside, values in pixels)\n  fragContext.functions['circleDistanceField'] =\n    `float circleDistanceField(vec2 point, float radius) {\n  return length(point) - radius;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'circle-');\n\n  // OPACITY\n  let opacity = null;\n  if ('circle-opacity' in style) {\n    opacity = expressionToGlsl(\n      fragContext,\n      style['circle-opacity'],\n      NumberType,\n    );\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('circle-scale' in style) {\n    const scale = expressionToGlsl(\n      fragContext,\n      style['circle-scale'],\n      SizeType,\n    );\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('circle-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['circle-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('circle-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // RADIUS\n  let radius = expressionToGlsl(\n    fragContext,\n    style['circle-radius'],\n    NumberType,\n  );\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('circle-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-width'],\n      NumberType,\n    );\n    radius = `(${radius} + ${strokeWidth} * 0.5)`;\n  }\n\n  // FINAL COLOR\n  const distanceField = `circleDistanceField(${currentPoint}, ${radius})`;\n  const colorExpression = getColorFromDistanceField(\n    distanceField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseShapeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  fragContext.functions['round'] = `float round(float v) {\n  return sign(v) * floor(abs(v) + 0.5);\n}`;\n\n  // these functions take in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the polygon, positive outside, values in pixels)\n  // inspired by https://github.com/zranger1/PixelblazePatterns/blob/master/Toolkit/sdf2d.md#n-sided-regular-polygon\n  fragContext.functions['starDistanceField'] =\n    `float starDistanceField(vec2 point, float numPoints, float radius, float radius2, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round(beta / alpha) * alpha; // angle in sector\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  vec2 tipToPoint = inSector + vec2(-radius, 0.);\n  vec2 edgeNormal = vec2(radius2 * sin(alpha * 0.5), -radius2 * cos(alpha * 0.5) + radius);\n  return dot(normalize(edgeNormal), tipToPoint);\n}`;\n  fragContext.functions['regularDistanceField'] =\n    `float regularDistanceField(vec2 point, float numPoints, float radius, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float radiusIn = radius * cos(PI / numPoints);\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round((beta - alpha * 0.5) / alpha) * alpha + alpha * 0.5; // angle in sector from mid\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  return inSector.x - radiusIn;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'shape-');\n\n  // OPACITY\n  let opacity = null;\n  if ('shape-opacity' in style) {\n    opacity = expressionToGlsl(fragContext, style['shape-opacity'], NumberType);\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('shape-scale' in style) {\n    const scale = expressionToGlsl(fragContext, style['shape-scale'], SizeType);\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('shape-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['shape-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('shape-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('shape-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-width'],\n      NumberType,\n    );\n  }\n\n  // SHAPE TYPE\n  const numPoints = expressionToGlsl(\n    fragContext,\n    style['shape-points'],\n    NumberType,\n  );\n  let angle = '0.';\n  if ('shape-angle' in style) {\n    angle = expressionToGlsl(fragContext, style['shape-angle'], NumberType);\n  }\n  let shapeField;\n  let radius = expressionToGlsl(fragContext, style['shape-radius'], NumberType);\n  if (strokeWidth !== null) {\n    radius = `${radius} + ${strokeWidth} * 0.5`;\n  }\n  if ('shape-radius2' in style) {\n    let radius2 = expressionToGlsl(\n      fragContext,\n      style['shape-radius2'],\n      NumberType,\n    );\n    if (strokeWidth !== null) {\n      radius2 = `${radius2} + ${strokeWidth} * 0.5`;\n    }\n    shapeField = `starDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${radius2}, ${angle})`;\n  } else {\n    shapeField = `regularDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${angle})`;\n  }\n\n  // FINAL COLOR\n  const colorExpression = getColorFromDistanceField(\n    shapeField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseIconProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  // COLOR\n  let color = 'vec4(1.0)';\n  if ('icon-color' in style) {\n    color = expressionToGlsl(fragContext, style['icon-color'], ColorType);\n  }\n\n  // OPACITY\n  if ('icon-opacity' in style) {\n    color = `${color} * ${expressionToGlsl(\n      fragContext,\n      style['icon-opacity'],\n      NumberType,\n    )}`;\n  }\n\n  // IMAGE & SIZE\n  const textureId = computeHash(style['icon-src']);\n  const sizeExpression = parseImageProperties(\n    style,\n    builder,\n    uniforms,\n    'icon-',\n    textureId,\n  );\n  builder\n    .setSymbolColorExpression(\n      `${color} * samplePremultiplied(u_texture${textureId}, v_texCoord)`,\n    )\n    .setSymbolSizeExpression(sizeExpression);\n\n  // override size if width/height were specified\n  if ('icon-width' in style && 'icon-height' in style) {\n    builder.setSymbolSizeExpression(\n      `vec2(${expressionToGlsl(\n        vertContext,\n        style['icon-width'],\n        NumberType,\n      )}, ${expressionToGlsl(vertContext, style['icon-height'], NumberType)})`,\n    );\n  }\n\n  // tex coord\n  if ('icon-offset' in style && 'icon-size' in style) {\n    const sampleSize = expressionToGlsl(\n      vertContext,\n      style['icon-size'],\n      NumberArrayType,\n    );\n    const fullsize = builder.getSymbolSizeExpression();\n    builder.setSymbolSizeExpression(sampleSize);\n    const offset = parseImageOffsetProperties(\n      style,\n      'icon-',\n      vertContext,\n      'v_quadSizePx',\n      sampleSize,\n    );\n    builder.setTextureCoordinateExpression(\n      `(vec4((${offset}).xyxy) + vec4(0., 0., ${sampleSize})) / (${fullsize}).xyxy`,\n    );\n  }\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'icon-');\n\n  if ('icon-anchor' in style) {\n    const anchor = expressionToGlsl(\n      vertContext,\n      style['icon-anchor'],\n      NumberArrayType,\n    );\n    let scale = `1.0`;\n    if (`icon-scale` in style) {\n      scale = expressionToGlsl(vertContext, style[`icon-scale`], SizeType);\n    }\n    let shiftPx;\n    if (\n      style['icon-anchor-x-units'] === 'pixels' &&\n      style['icon-anchor-y-units'] === 'pixels'\n    ) {\n      shiftPx = `${anchor} * ${scale}`;\n    } else if (style['icon-anchor-x-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(vec2(${scale}).x, v_quadSizePx.y)`;\n    } else if (style['icon-anchor-y-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(v_quadSizePx.x, vec2(${scale}).x)`;\n    } else {\n      shiftPx = `${anchor} * v_quadSizePx`;\n    }\n    // default origin is top-left\n    let offsetPx = `v_quadSizePx * vec2(0.5, -0.5) + ${shiftPx} * vec2(-1., 1.)`;\n    if ('icon-anchor-origin' in style) {\n      switch (style['icon-anchor-origin']) {\n        case 'top-right':\n          offsetPx = `v_quadSizePx * -0.5 + ${shiftPx}`;\n          break;\n        case 'bottom-left':\n          offsetPx = `v_quadSizePx * 0.5 - ${shiftPx}`;\n          break;\n        case 'bottom-right':\n          offsetPx = `v_quadSizePx * vec2(-0.5, 0.5) + ${shiftPx} * vec2(1., -1.)`;\n          break;\n        default: // pass\n      }\n    }\n    builder.setSymbolOffsetExpression(\n      `${builder.getSymbolOffsetExpression()} + ${offsetPx}`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseStrokeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  if ('stroke-color' in style) {\n    builder.setStrokeColorExpression(\n      expressionToGlsl(fragContext, style['stroke-color'], ColorType),\n    );\n  }\n  if ('stroke-pattern-src' in style) {\n    const textureId = computeHash(style['stroke-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'stroke-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('stroke-pattern-offset' in style && 'stroke-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`stroke-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'stroke-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    let spacingExpression = '0.';\n    if ('stroke-pattern-spacing' in style) {\n      spacingExpression = expressionToGlsl(\n        fragContext,\n        style['stroke-pattern-spacing'],\n        NumberType,\n      );\n    }\n    fragContext.functions['sampleStrokePattern'] =\n      `vec4 sampleStrokePattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, float spacingPx, float currentLengthPx, float currentRadiusRatio, float lineWidth) {\n  float currentLengthScaled = currentLengthPx * sampleSize.y / lineWidth;\n  float spacingScaled = spacingPx * sampleSize.y / lineWidth;\n  float uCoordPx = mod(currentLengthScaled, (sampleSize.x + spacingScaled));\n  // make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  uCoordPx = clamp(uCoordPx, 0.5, sampleSize.x - 0.5);\n  float vCoordPx = (-currentRadiusRatio * 0.5 + 0.5) * sampleSize.y;\n  vec2 texCoord = (vec2(uCoordPx, vCoordPx) + textureOffset) / textureSize;\n  return samplePremultiplied(texture, texCoord);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('stroke-color' in style) {\n      tintExpression = builder.getStrokeColorExpression();\n    }\n    builder.setStrokeColorExpression(\n      `${tintExpression} * sampleStrokePattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, ${spacingExpression}, currentLengthPx, currentRadiusRatio, v_width)`,\n    );\n  }\n\n  if ('stroke-width' in style) {\n    builder.setStrokeWidthExpression(\n      expressionToGlsl(vertContext, style['stroke-width'], NumberType),\n    );\n  }\n\n  if ('stroke-offset' in style) {\n    builder.setStrokeOffsetExpression(\n      expressionToGlsl(vertContext, style['stroke-offset'], NumberType),\n    );\n  }\n\n  if ('stroke-line-cap' in style) {\n    builder.setStrokeCapExpression(\n      expressionToGlsl(vertContext, style['stroke-line-cap'], StringType),\n    );\n  }\n\n  if ('stroke-line-join' in style) {\n    builder.setStrokeJoinExpression(\n      expressionToGlsl(vertContext, style['stroke-line-join'], StringType),\n    );\n  }\n\n  if ('stroke-miter-limit' in style) {\n    builder.setStrokeMiterLimitExpression(\n      expressionToGlsl(vertContext, style['stroke-miter-limit'], NumberType),\n    );\n  }\n\n  if ('stroke-line-dash' in style) {\n    fragContext.functions['getSingleDashDistance'] =\n      `float getSingleDashDistance(float distance, float radius, float dashOffset, float dashLength, float dashLengthTotal, float capType) {\n  float localDistance = mod(distance, dashLengthTotal);\n  float distanceSegment = abs(localDistance - dashOffset - dashLength * 0.5) - dashLength * 0.5;\n  distanceSegment = min(distanceSegment, dashLengthTotal - localDistance);\n  if (capType == ${stringToGlsl('square')}) {\n    distanceSegment -= v_width * 0.5;\n  } else if (capType == ${stringToGlsl('round')}) {\n    distanceSegment = min(distanceSegment, sqrt(distanceSegment * distanceSegment + radius * radius) - v_width * 0.5);\n  }\n  return distanceSegment;\n}`;\n\n    let dashPattern = style['stroke-line-dash'].map((v) =>\n      expressionToGlsl(fragContext, v, NumberType),\n    );\n    // if pattern has odd length, concatenate it with itself to be even\n    if (dashPattern.length % 2 === 1) {\n      dashPattern = [...dashPattern, ...dashPattern];\n    }\n\n    let offsetExpression = '0.';\n    if ('stroke-line-dash-offset' in style) {\n      offsetExpression = expressionToGlsl(\n        vertContext,\n        style['stroke-line-dash-offset'],\n        NumberType,\n      );\n    }\n\n    // define a function for this dash specifically\n    const uniqueDashKey = computeHash(style['stroke-line-dash']);\n    const dashFunctionName = `dashDistanceField_${uniqueDashKey}`;\n\n    const dashLengthsDef = dashPattern.map(\n      (v, i) => `float dashLength${i} = ${v};`,\n    );\n    const totalLengthDef = dashPattern\n      .map((v, i) => `dashLength${i}`)\n      .join(' + ');\n    let currentDashOffset = '0.';\n    let distanceExpression = `getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength0, totalDashLength, capType)`;\n    for (let i = 2; i < dashPattern.length; i += 2) {\n      currentDashOffset = `${currentDashOffset} + dashLength${\n        i - 2\n      } + dashLength${i - 1}`;\n      distanceExpression = `min(${distanceExpression}, getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength${i}, totalDashLength, capType))`;\n    }\n\n    fragContext.functions[dashFunctionName] =\n      `float ${dashFunctionName}(float distance, float radius, float capType) {\n  ${dashLengthsDef.join('\\n  ')}\n  float totalDashLength = ${totalLengthDef};\n  return ${distanceExpression};\n}`;\n    builder.setStrokeDistanceFieldExpression(\n      `${dashFunctionName}(currentLengthPx + ${offsetExpression}, currentRadiusPx, capType)`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseFillProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  if ('fill-color' in style) {\n    builder.setFillColorExpression(\n      expressionToGlsl(fragContext, style['fill-color'], ColorType),\n    );\n  }\n  if ('fill-pattern-src' in style) {\n    const textureId = computeHash(style['fill-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'fill-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('fill-pattern-offset' in style && 'fill-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`fill-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'fill-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    fragContext.functions['sampleFillPattern'] =\n      `vec4 sampleFillPattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, vec2 pxOrigin, vec2 pxPosition) {\n  float scaleRatio = pow(2., mod(u_zoom + 0.5, 1.) - 0.5);\n  vec2 pxRelativePos = pxPosition - pxOrigin;\n  // rotate the relative position from origin by the current view rotation\n  pxRelativePos = vec2(pxRelativePos.x * cos(u_rotation) - pxRelativePos.y * sin(u_rotation), pxRelativePos.x * sin(u_rotation) + pxRelativePos.y * cos(u_rotation));\n  // sample position is computed according to the sample offset & size\n  vec2 samplePos = mod(pxRelativePos / scaleRatio, sampleSize);\n  // also make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  samplePos = clamp(samplePos, vec2(0.5), sampleSize - vec2(0.5));\n  samplePos.y = sampleSize.y - samplePos.y; // invert y axis so that images appear upright\n  return samplePremultiplied(texture, (samplePos + textureOffset) / textureSize);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('fill-color' in style) {\n      tintExpression = builder.getFillColorExpression();\n    }\n    builder.setFillColorExpression(\n      `${tintExpression} * sampleFillPattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, pxOrigin, pxPos)`,\n    );\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").UniformDefinitions} uniforms Uniform definitions\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").AttributeDefinitions} attributes Attribute definitions\n */\n\n/**\n * Parses a {@link import(\"../style/webgl.js\").WebGLStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const vertContext = {\n    inFragmentShader: false,\n    properties: {},\n    variables: {},\n    functions: {},\n    style,\n  };\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const fragContext = {\n    inFragmentShader: true,\n    variables: vertContext.variables,\n    properties: {},\n    functions: {},\n    style,\n  };\n\n  const builder = new ShaderBuilder();\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  if ('icon-src' in style) {\n    parseIconProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('shape-points' in style) {\n    parseShapeProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('circle-radius' in style) {\n    parseCircleProperties(style, builder, uniforms, vertContext, fragContext);\n  }\n  parseStrokeProperties(style, builder, uniforms, vertContext, fragContext);\n  parseFillProperties(style, builder, uniforms, vertContext, fragContext);\n\n  if (style.filter) {\n    const parsedFilter = expressionToGlsl(\n      fragContext,\n      style.filter,\n      BooleanType,\n    );\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  // define one uniform per variable\n  Object.keys(fragContext.variables).forEach(function (varName) {\n    const variable = fragContext.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n    builder.addUniform(`${getGlslTypeFromType(variable.type)} ${uniformName}`);\n\n    let callback;\n    if (variable.type === StringType) {\n      callback = () =>\n        getStringNumberEquivalent(\n          /** @type {string} */ (style.variables[variable.name]),\n        );\n    } else if (variable.type === ColorType) {\n      callback = () =>\n        packColor([\n          ...asArray(\n            /** @type {string|Array<number>} */ (\n              style.variables[variable.name]\n            ) || '#eee',\n          ),\n        ]);\n    } else if (variable.type === BooleanType) {\n      callback = () =>\n        /** @type {boolean} */ (style.variables[variable.name]) ? 1.0 : 0.0;\n    } else {\n      callback = () => /** @type {number} */ (style.variables[variable.name]);\n    }\n    uniforms[uniformName] = callback;\n  });\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  Object.keys(fragContext.properties).forEach(function (propName) {\n    const property = fragContext.properties[propName];\n    if (!vertContext.properties[propName]) {\n      vertContext.properties[propName] = property;\n    }\n    let type = getGlslTypeFromType(property.type);\n    let expression = `a_prop_${property.name}`;\n    if (property.type === ColorType) {\n      type = 'vec4';\n      expression = `unpackColor(${expression})`;\n      builder.addVertexShaderFunction(UNPACK_COLOR_FN);\n    }\n    builder.addVarying(`v_prop_${property.name}`, type, expression);\n  });\n\n  // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n  Object.keys(vertContext.properties).forEach(function (propName) {\n    const property = vertContext.properties[propName];\n    builder.addAttribute(\n      `${getGlslTypeFromType(property.type)} a_prop_${property.name}`,\n    );\n  });\n\n  const attributes = Object.keys(vertContext.properties).map(\n    function (propName) {\n      const property = vertContext.properties[propName];\n      let callback;\n      if (property.evaluator) {\n        callback = property.evaluator;\n      } else if (property.type === StringType) {\n        callback = (feature) =>\n          getStringNumberEquivalent(feature.get(property.name));\n      } else if (property.type === ColorType) {\n        callback = (feature) =>\n          packColor([...asArray(feature.get(property.name) || '#eee')]);\n      } else if (property.type === BooleanType) {\n        callback = (feature) => (feature.get(property.name) ? 1.0 : 0.0);\n      } else {\n        callback = (feature) => feature.get(property.name);\n      }\n\n      return {\n        name: property.name,\n        size: getGlslSizeFromType(property.type),\n        callback,\n      };\n    },\n  );\n\n  // add functions that were collected in the compilation contexts\n  for (const functionName in vertContext.functions) {\n    builder.addVertexShaderFunction(vertContext.functions[functionName]);\n  }\n  for (const functionName in fragContext.functions) {\n    builder.addFragmentShaderFunction(fragContext.functions[functionName]);\n  }\n\n  return {\n    builder: builder,\n    attributes: attributes.reduce(\n      (prev, curr) => ({\n        ...prev,\n        [curr.name]: {callback: curr.callback, size: curr.size},\n      }),\n      {},\n    ),\n    uniforms: uniforms,\n  };\n}\n","/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {ColorType, NumberType} from '../expr/expression.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  getStringNumberEquivalent,\n  newCompilationContext,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {expressionToGlsl} from '../webgl/styleparser.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../expr/expression.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const context = {\n    ...newCompilationContext(),\n    inFragmentShader: true,\n    bandCount: bandCount,\n    style: style,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ColorType);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(context, style.contrast, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(context, style.exposure, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(context, style.saturation, NumberType);\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, NumberType);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(context, style.brightness, NumberType);\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = Object.keys(context.variables).length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`,\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variable = context.variables[Object.keys(context.variables)[i]];\n    if (!(variable.name in style.variables)) {\n      throw new Error(`Missing '${variable.name}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variable.name);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variable.name];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`,\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`,\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(\n    function (name) {\n      return context.functions[name];\n    },\n  );\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n        ? [source]\n        : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_,\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions,\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions,\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","import { getDecoder } from './compression/index.js';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 2) : 2;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} [size] The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {function(): Worker} [createWorker] A function that creates the decoder worker.\n   * Defaults to a worker with all decoders that ship with geotiff.js. The `createWorker()`\n   * function is expected to return a `Worker` compatible with Web Workers. For code that\n   * runs in Node, [web-worker](https://www.npmjs.com/package/web-worker) is a good choice.\n   *\n   * A worker that uses a custom lzw decoder would look like this `my-custom-worker.js` file:\n   * ```js\n   * import { addDecoder, getDecoder } from 'geotiff';\n   * addDecoder(5, () => import ('./my-custom-lzw').then((m) => m.default));\n   * self.addEventListener('message', async (e) => {\n   *   const { id, fileDirectory, buffer } = e.data;\n   *   const decoder = await getDecoder(fileDirectory);\n   *   const decoded = await decoder.decode(fileDirectory, buffer);\n   *   self.postMessage({ decoded, id }, [decoded]);\n   * });\n   * ```\n   * The way the above code is built into a worker by the `createWorker()` function\n   * depends on the used bundler. For most bundlers, something like this will work:\n   * ```js\n   * function createWorker() {\n   *   return new Worker(new URL('./my-custom-worker.js', import.meta.url));\n   * }\n   * ```\n   */\n  constructor(size = defaultPoolSize, createWorker) {\n    this.workers = null;\n    this._awaitingDecoder = null;\n    this.size = size;\n    this.messageId = 0;\n    if (size) {\n      this._awaitingDecoder = createWorker ? Promise.resolve(createWorker) : new Promise((resolve) => {\n        import('./worker/decoder.js').then((module) => {\n          resolve(module.create);\n        });\n      });\n      this._awaitingDecoder.then((create) => {\n        this._awaitingDecoder = null;\n        this.workers = [];\n        for (let i = 0; i < size; i++) {\n          this.workers.push({ worker: create(), idle: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    if (this._awaitingDecoder) {\n      await this._awaitingDecoder;\n    }\n    return this.size === 0\n      ? getDecoder(fileDirectory).then((decoder) => decoder.decode(fileDirectory, buffer))\n      : new Promise((resolve) => {\n        const worker = this.workers.find((candidate) => candidate.idle)\n          || this.workers[Math.floor(Math.random() * this.size)];\n        worker.idle = false;\n        const id = this.messageId++;\n        const onMessage = (e) => {\n          if (e.data.id === id) {\n            worker.idle = true;\n            resolve(e.data.decoded);\n            worker.worker.removeEventListener('message', onMessage);\n          }\n        };\n        worker.worker.addEventListener('message', onMessage);\n        worker.worker.postMessage({ fileDirectory, buffer, id }, [buffer]);\n      });\n  }\n\n  destroy() {\n    if (this.workers) {\n      this.workers.forEach((worker) => {\n        worker.worker.terminate();\n      });\n      this.workers = null;\n    }\n  }\n}\n\nexport default Pool;\n","/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {\n  Pool,\n  globals as geotiffGlobals,\n  fromBlob as tiffFromBlob,\n  fromUrl as tiffFromUrl,\n  fromUrls as tiffFromUrls,\n} from 'geotiff';\nimport {\n  Projection,\n  get as getCachedProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {clamp} from '../math.js';\nimport {getCenter, getIntersection} from '../extent.js';\nimport {error as logError} from '../console.js';\nimport {fromCode as unitsFromCode} from '../proj/Units.js';\n\n/**\n * Determine if an image type is a mask.\n * See https://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} The image is a mask.\n */\nfunction isMask(image) {\n  const fileDirectory = image.fileDirectory;\n  const type = fileDirectory.NewSubfileType || 0;\n  return (type & 4) === 4;\n}\n\n/**\n * @param {true|false|'auto'} preference The convertToRGB option.\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} Use the `image.readRGB()` method.\n */\nfunction readRGB(preference, image) {\n  if (!preference) {\n    return false;\n  }\n  if (preference === true) {\n    return true;\n  }\n  if (image.getSamplesPerPixel() !== 3) {\n    return false;\n  }\n  const interpretation = image.fileDirectory.PhotometricInterpretation;\n  const interpretations = geotiffGlobals.photometricInterpretations;\n  return (\n    interpretation === interpretations.CMYK ||\n    interpretation === interpretations.YCbCr ||\n    interpretation === interpretations.CIELab ||\n    interpretation === interpretations.ICCLab\n  );\n}\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\n\nconst STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nconst STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n\nconst defaultTileSize = 256;\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\n\nlet workerPool;\nfunction getWorkerPool() {\n  if (!workerPool) {\n    workerPool = new Pool();\n  }\n  return workerPool;\n}\n\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n  try {\n    return image.getBoundingBox();\n  } catch (_) {\n    return [0, 0, image.getWidth(), image.getHeight()];\n  }\n}\n\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n  try {\n    return image.getOrigin().slice(0, 2);\n  } catch (_) {\n    return [0, image.getHeight()];\n  }\n}\n\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n  try {\n    return image.getResolution(referenceImage);\n  } catch (_) {\n    return [\n      referenceImage.getWidth() / image.getWidth(),\n      referenceImage.getHeight() / image.getHeight(),\n    ];\n  }\n}\n\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n  const geoKeys = image.geoKeys;\n  if (!geoKeys) {\n    return null;\n  }\n\n  if (\n    geoKeys.ProjectedCSTypeGeoKey &&\n    geoKeys.ProjectedCSTypeGeoKey !== 32767\n  ) {\n    const code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  if (geoKeys.GeographicTypeGeoKey && geoKeys.GeographicTypeGeoKey !== 32767) {\n    const code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  return null;\n}\n\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n  return tiff.getImageCount().then(function (count) {\n    const requests = new Array(count);\n    for (let i = 0; i < count; ++i) {\n      requests[i] = tiff.getImage(i);\n    }\n    return Promise.all(requests);\n  });\n}\n\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n  let request;\n  if (source.blob) {\n    request = tiffFromBlob(source.blob);\n  } else if (source.overviews) {\n    request = tiffFromUrls(source.url, source.overviews, options);\n  } else {\n    request = tiffFromUrl(source.url, options);\n  }\n  return request.then(getImagesForTIFF);\n}\n\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n  if (Array.isArray(expected)) {\n    const length = expected.length;\n    if (!Array.isArray(got) || length != got.length) {\n      const error = new Error(message);\n      rejector(error);\n      throw error;\n    }\n    for (let i = 0; i < length; ++i) {\n      assertEqual(expected[i], got[i], tolerance, message, rejector);\n    }\n    return;\n  }\n\n  got = /** @type {number} */ (got);\n  if (Math.abs(expected - got) > tolerance * expected) {\n    throw new Error(message);\n  }\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n  if (array instanceof Int8Array) {\n    return -128;\n  }\n  if (array instanceof Int16Array) {\n    return -32768;\n  }\n  if (array instanceof Int32Array) {\n    return -2147483648;\n  }\n  if (array instanceof Float32Array) {\n    return 1.2e-38;\n  }\n  return 0;\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n  if (array instanceof Int8Array) {\n    return 127;\n  }\n  if (array instanceof Uint8Array) {\n    return 255;\n  }\n  if (array instanceof Uint8ClampedArray) {\n    return 255;\n  }\n  if (array instanceof Int16Array) {\n    return 32767;\n  }\n  if (array instanceof Uint16Array) {\n    return 65535;\n  }\n  if (array instanceof Int32Array) {\n    return 2147483647;\n  }\n  if (array instanceof Uint32Array) {\n    return 4294967295;\n  }\n  if (array instanceof Float32Array) {\n    return 3.4e38;\n  }\n  return 255;\n}\n\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {true|false|'auto'} [convertToRGB=false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.  Setting the option to `'auto'` will make it so CMYK, YCbCr,\n * CIELab, and ICCLab images will automatically be converted to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Source projection.  If not provided, the GeoTIFF metadata\n * will be read for projection information.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * **Note for users of the full build**: The `GeoTIFF` source requires the\n * [geotiff.js](https://github.com/geotiffjs/geotiff.js) library to be loaded as well.\n *\n * @api\n */\nclass GeoTIFFSource extends DataTile {\n  /**\n   * @param {Options} options Data tile options.\n   */\n  constructor(options) {\n    super({\n      state: 'loading',\n      tileGrid: null,\n      projection: options.projection || null,\n      opaque: options.opaque,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {Array<SourceInfo>}\n     * @private\n     */\n    this.sourceInfo_ = options.sources;\n\n    const numSources = this.sourceInfo_.length;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.sourceOptions_ = options.sourceOptions;\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceImagery_ = new Array(numSources);\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceMasks_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.resolutionFactors_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.samplesPerPixel_;\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.nodataValues_;\n\n    /**\n     * @type {Array<Array<GDALMetadata>>}\n     * @private\n     */\n    this.metadata_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.normalize_ = options.normalize !== false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.addAlpha_ = false;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {true|false|'auto'}\n     */\n    this.convertToRGB_ = options.convertToRGB || false;\n\n    this.setKey(this.sourceInfo_.map((source) => source.url).join(','));\n\n    const self = this;\n    const requests = new Array(numSources);\n    for (let i = 0; i < numSources; ++i) {\n      requests[i] = getImagesForSource(\n        this.sourceInfo_[i],\n        this.sourceOptions_,\n      );\n    }\n    Promise.all(requests)\n      .then(function (sources) {\n        self.configure_(sources);\n      })\n      .catch(function (error) {\n        logError(error);\n        self.error_ = error;\n        self.setState('error');\n      });\n  }\n\n  /**\n   * @return {Error} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * geotiffSource.on('change', () => {\n   *   if (geotiffSource.getState() === 'error') {\n   *     console.error(geotiffSource.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Determine the projection of the images in this GeoTIFF.\n   * The default implementation looks at the ProjectedCSTypeGeoKey and the GeographicTypeGeoKey\n   * of each image in turn.\n   * You can override this method in a subclass to support more projections.\n   *\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   */\n  determineProjection(sources) {\n    const firstSource = sources[0];\n    for (let i = firstSource.length - 1; i >= 0; --i) {\n      const image = firstSource[i];\n      const projection = getProjection(image);\n      if (projection) {\n        this.projection = projection;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n   * must have the same internal tiled structure.\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   * @private\n   */\n  configure_(sources) {\n    let extent;\n    let origin;\n    let commonRenderTileSizes;\n    let commonSourceTileSizes;\n    let resolutions;\n    const samplesPerPixel = new Array(sources.length);\n    const nodataValues = new Array(sources.length);\n    const metadata = new Array(sources.length);\n    let minZoom = 0;\n\n    const sourceCount = sources.length;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const images = [];\n      const masks = [];\n      sources[sourceIndex].forEach((item) => {\n        if (isMask(item)) {\n          masks.push(item);\n        } else {\n          images.push(item);\n        }\n      });\n\n      const imageCount = images.length;\n      if (masks.length > 0 && masks.length !== imageCount) {\n        throw new Error(\n          `Expected one mask per image found ${masks.length} masks and ${imageCount} images`,\n        );\n      }\n\n      let sourceExtent;\n      let sourceOrigin;\n      const sourceTileSizes = new Array(imageCount);\n      const renderTileSizes = new Array(imageCount);\n      const sourceResolutions = new Array(imageCount);\n\n      nodataValues[sourceIndex] = new Array(imageCount);\n      metadata[sourceIndex] = new Array(imageCount);\n\n      for (let imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n        const image = images[imageIndex];\n        const nodataValue = image.getGDALNoData();\n        metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n        nodataValues[sourceIndex][imageIndex] = nodataValue;\n\n        const wantedSamples = this.sourceInfo_[sourceIndex].bands;\n        samplesPerPixel[sourceIndex] = wantedSamples\n          ? wantedSamples.length\n          : image.getSamplesPerPixel();\n        const level = imageCount - (imageIndex + 1);\n\n        if (!sourceExtent) {\n          sourceExtent = getBoundingBox(image);\n        }\n\n        if (!sourceOrigin) {\n          sourceOrigin = getOrigin(image);\n        }\n\n        const imageResolutions = getResolutions(image, images[0]);\n        sourceResolutions[level] = imageResolutions[0];\n\n        const sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n\n        // request larger blocks for untiled layouts\n        if (\n          sourceTileSize[0] !== sourceTileSize[1] &&\n          sourceTileSize[1] < defaultTileSize\n        ) {\n          sourceTileSize[0] = defaultTileSize;\n          sourceTileSize[1] = defaultTileSize;\n        }\n\n        sourceTileSizes[level] = sourceTileSize;\n\n        const aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n        renderTileSizes[level] = [\n          sourceTileSize[0],\n          sourceTileSize[1] / aspectRatio,\n        ];\n      }\n\n      if (!extent) {\n        extent = sourceExtent;\n      } else {\n        getIntersection(extent, sourceExtent, extent);\n      }\n\n      if (!origin) {\n        origin = sourceOrigin;\n      } else {\n        const message = `Origin mismatch for source ${sourceIndex}, got [${sourceOrigin}] but expected [${origin}]`;\n        assertEqual(origin, sourceOrigin, 0, message, this.viewRejector);\n      }\n\n      if (!resolutions) {\n        resolutions = sourceResolutions;\n        this.resolutionFactors_[sourceIndex] = 1;\n      } else {\n        if (resolutions.length - minZoom > sourceResolutions.length) {\n          minZoom = resolutions.length - sourceResolutions.length;\n        }\n        const resolutionFactor =\n          resolutions[resolutions.length - 1] /\n          sourceResolutions[sourceResolutions.length - 1];\n        this.resolutionFactors_[sourceIndex] = resolutionFactor;\n        const scaledSourceResolutions = sourceResolutions.map(\n          (resolution) => (resolution *= resolutionFactor),\n        );\n        const message = `Resolution mismatch for source ${sourceIndex}, got [${scaledSourceResolutions}] but expected [${resolutions}]`;\n        assertEqual(\n          resolutions.slice(minZoom, resolutions.length),\n          scaledSourceResolutions,\n          0.02,\n          message,\n          this.viewRejector,\n        );\n      }\n\n      if (!commonRenderTileSizes) {\n        commonRenderTileSizes = renderTileSizes;\n      } else {\n        assertEqual(\n          commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length),\n          renderTileSizes,\n          0.01,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector,\n        );\n      }\n\n      if (!commonSourceTileSizes) {\n        commonSourceTileSizes = sourceTileSizes;\n      } else {\n        assertEqual(\n          commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length),\n          sourceTileSizes,\n          0,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector,\n        );\n      }\n\n      this.sourceImagery_[sourceIndex] = images.reverse();\n      this.sourceMasks_[sourceIndex] = masks.reverse();\n    }\n\n    for (let i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n      const sourceImagery = this.sourceImagery_[i];\n      while (sourceImagery.length < resolutions.length) {\n        sourceImagery.unshift(undefined);\n      }\n    }\n\n    if (!this.getProjection()) {\n      this.determineProjection(sources);\n    }\n\n    this.samplesPerPixel_ = samplesPerPixel;\n    this.nodataValues_ = nodataValues;\n    this.metadata_ = metadata;\n\n    // decide if we need to add an alpha band to handle nodata\n    outer: for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      // option 1: source is configured with a nodata value\n      if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n        this.addAlpha_ = true;\n        break;\n      }\n      if (this.sourceMasks_[sourceIndex].length) {\n        this.addAlpha_ = true;\n        break;\n      }\n\n      const values = nodataValues[sourceIndex];\n\n      // option 2: check image metadata for limited bands\n      const bands = this.sourceInfo_[sourceIndex].bands;\n      if (bands) {\n        for (let i = 0; i < bands.length; ++i) {\n          if (values[bands[i] - 1] !== null) {\n            this.addAlpha_ = true;\n            break outer;\n          }\n        }\n        continue;\n      }\n\n      // option 3: check image metadata for all bands\n      for (let imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n        if (values[imageIndex] !== null) {\n          this.addAlpha_ = true;\n          break outer;\n        }\n      }\n    }\n\n    let bandCount = this.addAlpha_ ? 1 : 0;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      bandCount += samplesPerPixel[sourceIndex];\n    }\n    this.bandCount = bandCount;\n\n    const tileGrid = new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: resolutions,\n      tileSizes: commonRenderTileSizes,\n    });\n\n    this.tileGrid = tileGrid;\n    this.setTileSizes(commonSourceTileSizes);\n\n    this.setLoader(this.loadTile_.bind(this));\n    this.setState('ready');\n\n    const zoom = 1;\n    if (resolutions.length === 2) {\n      resolutions = [resolutions[0], resolutions[1], resolutions[1] / 2];\n    } else if (resolutions.length === 1) {\n      resolutions = [resolutions[0] * 2, resolutions[0], resolutions[0] / 2];\n    }\n\n    this.viewResolver({\n      showFullExtent: true,\n      projection: this.projection,\n      resolutions: resolutions,\n      center: toUserCoordinate(getCenter(extent), this.projection),\n      extent: toUserExtent(extent, this.projection),\n      zoom: zoom,\n    });\n  }\n\n  /**\n   * @param {number} z The z tile index.\n   * @param {number} x The x tile index.\n   * @param {number} y The y tile index.\n   * @return {Promise} The composed tile data.\n   * @private\n   */\n  loadTile_(z, x, y) {\n    const sourceTileSize = this.getTileSize(z);\n    const sourceCount = this.sourceImagery_.length;\n    const requests = new Array(sourceCount * 2);\n    const nodataValues = this.nodataValues_;\n    const sourceInfo = this.sourceInfo_;\n    const pool = getWorkerPool();\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const source = sourceInfo[sourceIndex];\n      const resolutionFactor = this.resolutionFactors_[sourceIndex];\n      const pixelBounds = [\n        Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n        Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n        Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n        Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n      ];\n      const image = this.sourceImagery_[sourceIndex][z];\n      let samples;\n      if (source.bands) {\n        samples = source.bands.map(function (bandNumber) {\n          return bandNumber - 1;\n        });\n      }\n\n      /** @type {number|Array<number>} */\n      let fillValue;\n      if ('nodata' in source && source.nodata !== null) {\n        fillValue = source.nodata;\n      } else {\n        if (!samples) {\n          fillValue = nodataValues[sourceIndex];\n        } else {\n          fillValue = samples.map(function (sampleIndex) {\n            return nodataValues[sourceIndex][sampleIndex];\n          });\n        }\n      }\n\n      const readOptions = {\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: samples,\n        fillValue: fillValue,\n        pool: pool,\n        interleave: false,\n      };\n      if (readRGB(this.convertToRGB_, image)) {\n        requests[sourceIndex] = image.readRGB(readOptions);\n      } else {\n        requests[sourceIndex] = image.readRasters(readOptions);\n      }\n\n      // requests after `sourceCount` are for mask data (if any)\n      const maskIndex = sourceCount + sourceIndex;\n      const mask = this.sourceMasks_[sourceIndex][z];\n      if (!mask) {\n        requests[maskIndex] = Promise.resolve(null);\n        continue;\n      }\n\n      requests[maskIndex] = mask.readRasters({\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: [0],\n        pool: pool,\n        interleave: false,\n      });\n    }\n\n    return Promise.all(requests)\n      .then(this.composeTile_.bind(this, sourceTileSize))\n      .catch(function (error) {\n        logError(error);\n        throw error;\n      });\n  }\n\n  /**\n   * @param {import(\"../size.js\").Size} sourceTileSize The source tile size.\n   * @param {Array} sourceSamples The source samples.\n   * @return {import(\"../DataTile.js\").Data} The composed tile data.\n   * @private\n   */\n  composeTile_(sourceTileSize, sourceSamples) {\n    const metadata = this.metadata_;\n    const sourceInfo = this.sourceInfo_;\n    const sourceCount = this.sourceImagery_.length;\n    const bandCount = this.bandCount;\n    const samplesPerPixel = this.samplesPerPixel_;\n    const nodataValues = this.nodataValues_;\n    const normalize = this.normalize_;\n    const addAlpha = this.addAlpha_;\n\n    const pixelCount = sourceTileSize[0] * sourceTileSize[1];\n    const dataLength = pixelCount * bandCount;\n\n    /** @type {Uint8Array|Float32Array} */\n    let data;\n    if (normalize) {\n      data = new Uint8Array(dataLength);\n    } else {\n      data = new Float32Array(dataLength);\n    }\n\n    let dataIndex = 0;\n    for (let pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n      let transparent = addAlpha;\n      for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n        const source = sourceInfo[sourceIndex];\n\n        let min = source.min;\n        let max = source.max;\n        let gain, bias;\n        if (normalize) {\n          const stats = metadata[sourceIndex][0];\n          if (min === undefined) {\n            if (stats && STATISTICS_MINIMUM in stats) {\n              min = parseFloat(stats[STATISTICS_MINIMUM]);\n            } else {\n              min = getMinForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n          if (max === undefined) {\n            if (stats && STATISTICS_MAXIMUM in stats) {\n              max = parseFloat(stats[STATISTICS_MAXIMUM]);\n            } else {\n              max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n\n          gain = 255 / (max - min);\n          bias = -min * gain;\n        }\n\n        for (\n          let sampleIndex = 0;\n          sampleIndex < samplesPerPixel[sourceIndex];\n          ++sampleIndex\n        ) {\n          const sourceValue =\n            sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n\n          let value;\n          if (normalize) {\n            value = clamp(gain * sourceValue + bias, 0, 255);\n          } else {\n            value = sourceValue;\n          }\n\n          if (!addAlpha) {\n            data[dataIndex] = value;\n          } else {\n            let nodata = source.nodata;\n            if (nodata === undefined) {\n              let bandIndex;\n              if (source.bands) {\n                bandIndex = source.bands[sampleIndex] - 1;\n              } else {\n                bandIndex = sampleIndex;\n              }\n              nodata = nodataValues[sourceIndex][bandIndex];\n            }\n\n            const nodataIsNaN = isNaN(nodata);\n            if (\n              (!nodataIsNaN && sourceValue !== nodata) ||\n              (nodataIsNaN && !isNaN(sourceValue))\n            ) {\n              transparent = false;\n              data[dataIndex] = value;\n            }\n          }\n          dataIndex++;\n        }\n        if (!transparent) {\n          const maskIndex = sourceCount + sourceIndex;\n          const mask = sourceSamples[maskIndex];\n          if (mask && !mask[0][pixelIndex]) {\n            transparent = true;\n          }\n        }\n      }\n      if (addAlpha) {\n        if (!transparent) {\n          data[dataIndex] = 255;\n        }\n        dataIndex++;\n      }\n    }\n\n    return data;\n  }\n}\n\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\n\nexport default GeoTIFFSource;\n","// Use this separately until https://github.com/Viglino/ol-ext/pull/1087 is released\n/*\n  Copyright (c) 2015 Jean-Marc VIGLINO,\n  released under the CeCILL-B license (French BSD license)\n  (http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.txt).\n*/\n\nimport ol_control_Control from 'ol/control/Control.js'\n\n/**\n * @classdesc Swipe Control.\n * @fires moving\n * @constructor\n * @extends {ol_control_Control}\n * @param {Object=} Control options.\n *  @param {ol.layer|Array<ol.layer>} options.layers layers to swipe\n *  @param {ol.layer|Array<ol.layer>} options.rightLayers layers to swipe on right side\n *  @param {string} options.className control class name\n *  @param {number} options.position position property of the swipe [0,1], default 0.5\n *  @param {string} options.orientation orientation property (vertical|horizontal), default vertical\n */\nvar ol_control_Swipe = class olcontrolSwipe extends ol_control_Control {\n  constructor(options) {\n    options = options || {};\n\n    var element = document.createElement('div');\n    super({\n      element: element\n    });\n    \n    element.className = (options.className || 'ol-swipe') + ' ol-unselectable ol-control';\n    var button = document.createElement('button');\n    element.appendChild(button);\n\n    element.addEventListener('mousedown', this.move.bind(this));\n    element.addEventListener('touchstart', this.move.bind(this));\n\n    // An array of listener on layer postcompose\n    this.precomposeRight_ = this.precomposeRight.bind(this);\n    this.precomposeLeft_ = this.precomposeLeft.bind(this);\n    this.postcompose_ = this.postcompose.bind(this);\n\n    this.layers = [];\n    if (options.layers)\n      this.addLayer(options.layers, false);\n    if (options.rightLayers)\n      this.addLayer(options.rightLayers, true);\n\n    this.on('propertychange', function (e) {\n      if (this.getMap()) {\n        try { this.getMap().renderSync(); } catch (e) { /* ok */ }\n      }\n      if (this.get('orientation') === \"horizontal\") {\n        this.element.style.top = this.get('position') * 100 + \"%\";\n        this.element.style.left = \"\";\n      } else {\n        if (this.get('orientation') !== \"vertical\")\n          this.set('orientation', \"vertical\");\n        this.element.style.left = this.get('position') * 100 + \"%\";\n        this.element.style.top = \"\";\n      }\n      if (e.key === 'orientation') {\n        this.element.classList.remove(\"horizontal\", \"vertical\");\n        this.element.classList.add(this.get('orientation'));\n      }\n      // Force VectorImage to refresh\n      if (!this.isMoving) {\n        this.layers.forEach(function (l) {\n          if (l.layer.getImageRatio)\n            l.layer.changed();\n        });\n      }\n    }.bind(this));\n\n    this.set('position', options.position || 0.5);\n    this.set('orientation', options.orientation || 'vertical');\n  }\n  /**\n   * Set the map instance the control associated with.\n   * @param {_ol_Map_} map The map instance.\n   */\n  setMap(map) {\n    var i;\n    var l;\n\n    if (this.getMap()) {\n      for (i = 0; i < this.layers.length; i++) {\n        l = this.layers[i];\n        if (l.right)\n          l.layer.un(['precompose', 'prerender'], this.precomposeRight_);\n        else\n          l.layer.un(['precompose', 'prerender'], this.precomposeLeft_);\n        l.layer.un(['postcompose', 'postrender'], this.postcompose_);\n      }\n      try { this.getMap().renderSync(); } catch (e) { /* ok */ }\n    }\n\n    super.setMap(map);\n\n    if (map) {\n      this._listener = [];\n      for (i = 0; i < this.layers.length; i++) {\n        l = this.layers[i];\n        if (l.right)\n          l.layer.on(['precompose', 'prerender'], this.precomposeRight_);\n        else\n          l.layer.on(['precompose', 'prerender'], this.precomposeLeft_);\n        l.layer.on(['postcompose', 'postrender'], this.postcompose_);\n      }\n      try { map.renderSync(); } catch (e) { /* ok */ }\n    }\n  }\n  /** @private\n  */\n  isLayer_(layer) {\n    for (var k = 0; k < this.layers.length; k++) {\n      if (this.layers[k].layer === layer)\n        return k;\n    }\n    return -1;\n  }\n  /** Add a layer to clip\n   *\t@param {ol.layer|Array<ol.layer>} layer to clip\n   *\t@param {bool} add layer in the right part of the map, default left.\n   */\n  addLayer(layers, right) {\n    if (!(layers instanceof Array))\n      layers = [layers];\n    for (var i = 0; i < layers.length; i++) {\n      var l = layers[i];\n      if (this.isLayer_(l) < 0) {\n        this.layers.push({ layer: l, right: right });\n        if (this.getMap()) {\n          if (right)\n            l.on(['precompose', 'prerender'], this.precomposeRight_);\n          else\n            l.on(['precompose', 'prerender'], this.precomposeLeft_);\n          l.on(['postcompose', 'postrender'], this.postcompose_);\n          try { this.getMap().renderSync(); } catch (e) { /* ok */ }\n        }\n      }\n    }\n  }\n  /** Remove all layers\n   */\n  removeLayers() {\n    var layers = [];\n    this.layers.forEach(function (l) { layers.push(l.layer); });\n    this.removeLayer(layers);\n  }\n  /** Remove a layer to clip\n   *\t@param {ol.layer|Array<ol.layer>} layer to clip\n   */\n  removeLayer(layers) {\n    if (!(layers instanceof Array))\n      layers = [layers];\n    for (var i = 0; i < layers.length; i++) {\n      var k = this.isLayer_(layers[i]);\n      if (k >= 0 && this.getMap()) {\n        if (this.layers[k].right)\n          layers[i].un(['precompose', 'prerender'], this.precomposeRight_);\n        else\n          layers[i].un(['precompose', 'prerender'], this.precomposeLeft_);\n        layers[i].un(['postcompose', 'postrender'], this.postcompose_);\n        this.layers.splice(k, 1);\n      }\n    }\n    if (this.getMap()) {\n      try { this.getMap().renderSync(); } catch (e) { /* ok */ }\n    }\n  }\n  /** Get visible rectangle\n   * @returns {ol.extent}\n   */\n  getRectangle() {\n    var s;\n    if (this.get('orientation') === 'vertical') {\n      s = this.getMap().getSize();\n      return [0, 0, s[0] * this.get('position'), s[1]];\n    } else {\n      s = this.getMap().getSize();\n      return [0, 0, s[0], s[1] * this.get('position')];\n    }\n  }\n  /** @private\n   */\n  move(e) {\n    var self = this;\n    var l;\n    if (!this._movefn)\n      this._movefn = this.move.bind(this);\n    switch (e.type) {\n      case 'touchcancel':\n      case 'touchend':\n      case 'mouseup': {\n        self.isMoving = false;\n        [\"mouseup\", \"mousemove\", \"touchend\", \"touchcancel\", \"touchmove\"]\n          .forEach(function (eventName) {\n            document.removeEventListener(eventName, self._movefn);\n          });\n        // Force VectorImage to refresh\n        this.layers.forEach(function (l) {\n          if (l.layer.getImageRatio)\n            l.layer.changed();\n        });\n        break;\n      }\n      case 'mousedown':\n      case 'touchstart': {\n        self.isMoving = true;\n        [\"mouseup\", \"mousemove\", \"touchend\", \"touchcancel\", \"touchmove\"]\n          .forEach(function (eventName) {\n            document.addEventListener(eventName, self._movefn);\n          });\n      }\n      // fallthrough\n      case 'mousemove':\n      case 'touchmove': {\n        if (self.isMoving) {\n          if (self.get('orientation') === 'vertical') {\n            var pageX = e.pageX\n              || (e.touches && e.touches.length && e.touches[0].pageX)\n              || (e.changedTouches && e.changedTouches.length && e.changedTouches[0].pageX);\n            if (!pageX)\n              break;\n            pageX -= self.getMap().getTargetElement().getBoundingClientRect().left +\n              window.pageXOffset - document.documentElement.clientLeft;\n\n            l = self.getMap().getSize()[0];\n            var w = l - Math.min(Math.max(0, l - pageX), l);\n            l = w / l;\n            self.set('position', l);\n            self.dispatchEvent({ type: 'moving', size: [w, self.getMap().getSize()[1]], position: [l, 0] });\n          } else {\n            var pageY = e.pageY\n              || (e.touches && e.touches.length && e.touches[0].pageY)\n              || (e.changedTouches && e.changedTouches.length && e.changedTouches[0].pageY);\n            if (!pageY)\n              break;\n            pageY -= self.getMap().getTargetElement().getBoundingClientRect().top +\n              window.pageYOffset - document.documentElement.clientTop;\n\n            l = self.getMap().getSize()[1];\n            var h = l - Math.min(Math.max(0, l - pageY), l);\n            l = h / l;\n            self.set('position', l);\n            self.dispatchEvent({ type: 'moving', size: [self.getMap().getSize()[0], h], position: [0, l] });\n          }\n        }\n        break;\n      }\n      default: break;\n    }\n  }\n  /** @private\n   */\n  _transformPt(e, pt) {\n    var tr = e.inversePixelTransform;\n    var x = pt[0];\n    var y = pt[1];\n    pt[0] = tr[0] * x + tr[2] * y + tr[4];\n    pt[1] = tr[1] * x + tr[3] * y + tr[5];\n    return pt;\n  }\n  /** @private\n   */\n  _drawRect(e, pts) {\n    var tr = e.inversePixelTransform;\n    if (tr) {\n      var r = [\n        [pts[0][0], pts[0][1]],\n        [pts[0][0], pts[1][1]],\n        [pts[1][0], pts[1][1]],\n        [pts[1][0], pts[0][1]],\n        [pts[0][0], pts[0][1]]\n      ];\n      e.context.save();\n      // Rotate VectorImages \n      if (e.target.getImageRatio) {\n        var rot = -Math.atan2(e.frameState.pixelToCoordinateTransform[1], e.frameState.pixelToCoordinateTransform[0]);\n        e.context.translate(e.frameState.size[0] / 2, e.frameState.size[1] / 2);\n        e.context.rotate(rot);\n        e.context.translate(-e.frameState.size[0] / 2, -e.frameState.size[1] / 2);\n      }\n      r.forEach(function (pt, i) {\n        pt = [\n          (pt[0] * tr[0] - pt[1] * tr[1] + tr[4]),\n          (-pt[0] * tr[2] + pt[1] * tr[3] + tr[5])\n        ];\n        if (!i) {\n          e.context.moveTo(pt[0], pt[1]);\n        } else {\n          e.context.lineTo(pt[0], pt[1]);\n        }\n      });\n      e.context.restore();\n    } else {\n      var ratio = e.frameState.pixelRatio;\n      e.context.rect(pts[0][0] * ratio, pts[0][1] * ratio, pts[1][0] * ratio, pts[1][1] * ratio);\n    }\n  }\n  /** @private\n  */\n  precomposeLeft(e) {\n    var ctx = e.context;\n    if (ctx instanceof WebGLRenderingContext) {\n      if (e.type === 'prerender') {\n        // Clear\n        if (this._lefttime != e.frameState.time) {\n          ctx.clearColor(0, 0, 0, 0);\n          ctx.clear(ctx.COLOR_BUFFER_BIT);\n          this._lefttime = e.frameState.time;\n        }\n\n        // Clip\n        ctx.enable(ctx.SCISSOR_TEST);\n\n        var mapSize = this.getMap().getSize(); // [width, height] in CSS pixels\n\n\n        // get render coordinates and dimensions given CSS coordinates\n        var bottomLeft = this._transformPt(e, [0, mapSize[1]]);\n        var topRight = this._transformPt(e, [mapSize[0], 0]);\n\n        var fullWidth = topRight[0] - bottomLeft[0];\n        var fullHeight = topRight[1] - bottomLeft[1];\n        var width, height;\n        if (this.get('orientation') === \"vertical\") {\n          width = Math.round(fullWidth * this.get('position'));\n          height = fullHeight;\n        } else {\n          width = fullWidth;\n          height = Math.round((fullHeight * this.get('position')));\n          bottomLeft[1] += fullHeight - height;\n        }\n        ctx.scissor(bottomLeft[0], bottomLeft[1], width, height);\n        ctx.clearColor(0, 0, 0, 0);\n        ctx.clear(ctx.COLOR_BUFFER_BIT);\n      }\n    } else {\n      var size = e.frameState.size;\n      ctx.save();\n      ctx.beginPath();\n      var pts = [[0, 0], [size[0], size[1]]];\n      if (this.get('orientation') === \"vertical\") {\n        pts[1] = [\n          size[0] * .5 + this.getMap().getSize()[0] * (this.get('position') - .5),\n          size[1]\n        ];\n      } else {\n        pts[1] = [\n          size[0],\n          size[1] * .5 + this.getMap().getSize()[1] * (this.get('position') - .5)\n        ];\n      }\n      this._drawRect(e, pts);\n      ctx.clip();\n    }\n  }\n  /** @private\n  */\n  precomposeRight(e) {\n    var ctx = e.context;\n    if (ctx instanceof WebGLRenderingContext) {\n      if (e.type === 'prerender') {\n        // Clear\n        if (this._righttime != e.frameState.time) {\n          ctx.clearColor(0, 0, 0, 0);\n          ctx.clear(ctx.COLOR_BUFFER_BIT);\n          this._righttime = e.frameState.time;\n        }\n\n        // Clip\n        ctx.enable(ctx.SCISSOR_TEST);\n\n        var mapSize = this.getMap().getSize(); // [width, height] in CSS pixels\n\n\n        // get render coordinates and dimensions given CSS coordinates\n        var bottomLeft = this._transformPt(e, [0, mapSize[1]]);\n        var topRight = this._transformPt(e, [mapSize[0], 0]);\n\n        var fullWidth = topRight[0] - bottomLeft[0];\n        var fullHeight = topRight[1] - bottomLeft[1];\n        var width, height;\n        if (this.get('orientation') === \"vertical\") {\n          height = fullHeight;\n          width = Math.round(fullWidth * (1 - this.get('position')));\n          bottomLeft[0] += fullWidth - width;\n        } else {\n          width = fullWidth;\n          height = Math.round(fullHeight * (1 - this.get('position')));\n        }\n        ctx.scissor(bottomLeft[0], bottomLeft[1], width, height);\n        ctx.clearColor(0, 0, 0, 0);\n        ctx.clear(ctx.COLOR_BUFFER_BIT);\n      }\n    } else {\n      var size = e.frameState.size;\n      ctx.save();\n      ctx.beginPath();\n      var pts = [[0, 0], [size[0], size[1]]];\n      if (this.get('orientation') === \"vertical\") {\n        pts[0] = [\n          size[0] * .5 + this.getMap().getSize()[0] * (this.get('position') - .5),\n          0\n        ];\n      } else {\n        pts[0] = [\n          0,\n          size[1] * .5 + this.getMap().getSize()[1] * (this.get('position') - .5)\n        ];\n      }\n      this._drawRect(e, pts);\n      ctx.clip();\n    }\n  }\n  /** @private\n  */\n  postcompose(e) {\n    if (e.context instanceof WebGLRenderingContext) {\n      if (e.type === 'postrender') {\n        var gl = e.context;\n        gl.disable(gl.SCISSOR_TEST);\n      }\n    } else {\n      // restore context when decluttering is done (ol>=6)\n      // https://github.com/openlayers/openlayers/issues/10096\n      if (e.target.getClassName && e.target.getClassName() !== 'ol-layer' && e.target.get('declutter')) {\n        setTimeout(function () {\n          e.context.restore();\n        }, 0);\n      } else {\n        e.context.restore();\n      }\n    }\n  }\n}\n\nexport default ol_control_Swipe\n","<template>\n\t<Splitpanes horizontal class=\"default-theme\">\n\t\t<Pane id=\"map\">\n\t\t\t<div :id=\"id\" class=\"map-viewer\">\n\t\t\t\t<ProgressControl ref=\"progress\" :map=\"map\" />\n\t\t\t\t<UserLocationControl :map=\"map\" />\n\t\t\t\t<AddDataControl :map=\"map\" @add=\"addData\" />\n\t\t\t\t<template v-if=\"isGeoTiff\">\n\t\t\t\t\t<TextControl :text=\"textControlText\" />\n\t\t\t\t\t<div class=\"ol-unselectable ol-control geotiff-channels\">\n\t\t\t\t\t\t<template v-for=\"state in geotiffs\">\n\t\t\t\t\t\t\t<ChannelControl\n\t\t\t\t\t\t\t\tv-if=\"!state.colorMap\" :key=\"state.layer.id\"\n\t\t\t\t\t\t\t\t:bands=\"state.bands\" :defaultChannels=\"state.defaultChannels\"\n\t\t\t\t\t\t\t\t:title=\"geotiffs.length > 1 ? state.layer.get('title') : ''\"\n\t\t\t\t\t\t\t\t@update=\"(type, data) => updateGeoTiffStyle(state, type, data)\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t\t<div v-if=\"loading\" class=\"map-loading\">\n\t\t\t\t\t<i class=\"fas fa-spinner fa-spin\"></i>\n\t\t\t\t\t<span>Loading map...</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Pane>\n\t\t<Pane v-if=\"chart\" id=\"chart\" :size=\"33\">\n\t\t\t<span class=\"close\" @click=\"closeChart\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\n\t\t\t<ScatterChart v-bind=\"chart\" :height=\"220\" />\n\t\t</Pane>\n\t</Splitpanes>\n</template>\n\n<script>\nimport Utils from '../../utils.js';\nimport { default as GeoTiffFile } from '../../formats/geotiff';\nimport JSON_ from '../../formats/json';\n\nimport { Splitpanes, Pane } from 'splitpanes';\n\nimport ScatterChart from './ScatterChart.vue';\nimport AddDataControl from '../maps/AddDataControl.vue';\nimport ChannelControl from '../maps/ChannelControl.vue';\nimport ExtentMixin from '../maps/ExtentMixin.vue';\nimport GeocoderMixin from '../maps/GeocoderMixin.vue';\nimport MapMixin from '../maps/MapMixin.vue';\nimport TextControl from '../maps/TextControl.vue';\nimport WebServiceMixin from '../maps/WebServiceMixin.vue';\nimport GeoTiffState from '../maps/geotiff/state';\nimport '../maps/geotiff/fix';\n\nimport { Service } from '@openeo/js-client';\n\nimport Feature from 'ol/Feature';\nimport { fromExtent as PolygonFromExtent } from 'ol/geom/Polygon';\nimport { transformExtent } from 'ol/proj';\nimport VectorLayer from 'ol/layer/Vector';\nimport TileLayer from 'ol/layer/WebGLTile';\nimport { default as OlGeoTiff } from 'ol/source/GeoTIFF';\nimport VectorSource from 'ol/source/Vector';\n\nimport 'ol-ext/control/Swipe.css';\nimport Swipe from '../maps/Swipe.js';\n\nexport default {\n\tname: 'MapViewer',\n\tmixins: [\n\t\tExtentMixin,\n\t\tGeocoderMixin,\n\t\tMapMixin,\n\t\tWebServiceMixin\n\t],\n\tcomponents: {\n\t\tAddDataControl,\n\t\tChannelControl,\n\t\tPane,\n\t\tScatterChart,\n\t\tSplitpanes,\n\t\tTextControl\n\t},\n\tprops: {\n\t\tdata: {}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\ttextControlText: 'Value: -',\n\t\t\tloading: true,\n\t\t\tchart: null,\n\t\t\tgeotiffs: [],\n\t\t\tswipe: null,\n\t\t\tlayerId: 0\n\t\t};\n\t},\n\tcomputed: {\n\t\t...Utils.mapState(['connection']),\n\t\t...Utils.mapState('editor', ['appMode']),\n\t\tisWebService() {\n\t\t\treturn this.data instanceof Service && typeof this.data.type === 'string';\n\t\t},\n\t\tisGeoTiff() {\n\t\t\treturn this.data instanceof GeoTiffFile;\n\t\t},\n\t\tisGeoJson() {\n\t\t\treturn this.data instanceof JSON_ && this.data.isGeoJson;\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.$emit('mounted', this);\n\t},\n\tmethods: {\n\t\tasync renderMap() {\n\t\t\ttry {\n\t\t\t\tlet view;\n\t\t\t\tlet data;\n\t\t\t\tif (this.isGeoJson) {\n\t\t\t\t\tdata = await this.data.loadData(this.connection);\n\t\t\t\t}\n\t\t\t\telse if (this.isGeoTiff) {\n\t\t\t\t\tdata = await this.data.loadData(this.connection);\n\t\t\t\t\tlet projection = data.getProjection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tview = projection;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isWebService && Utils.isMapServiceSupported(this.data.type)) {\n\t\t\t\t\tif (this.data.type.toLowerCase() === 'wmts') {\n\t\t\t\t\t\tlet capabilities = await this.initWMTSLayer(this.data);\n\t\t\t\t\t\t// ToDo: Right now we assume Web Mercator is always available, better check the capabilities...\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(\"Sorry, the given data can't be shown on a web map.\");\n\t\t\t\t}\n\n\t\t\t\tawait this.createMap(view);\n\n\t\t\t\tconst layers = this.map.getLayers();\n\t\t\t\tlayers.on('add', evt => {\n\t\t\t\t\tconst state = evt.element.get('geotiff');\n\t\t\t\t\tif (state) {\n\t\t\t\t\t\tthis.geotiffs.push(state);\n\t\t\t\t\t\tthis.updateSwiper();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlayers.on('remove', evt => {\n\t\t\t\t\tconst state = evt.element.get('geotiff');\n\t\t\t\t\tconst index = this.geotiffs.indexOf(state);\n\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\tthis.geotiffs.splice(index, 1);\n\t\t\t\t\t\tthis.updateSwiper();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.addLayerSwitcher();\n\t\t\t\tthis.addGeocoder(data => {\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet extent = this.toExtent(data);\n\t\t\t\t\textent = transformExtent(extent, 'EPSG:4326', this.map.getView().getProjection());\n\t\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions());\n\t\t\t\t});\n\n\t\t\t\tif (this.isGeoJson) {\n\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\tthis.addGeoJson(data, true);\n\t\t\t\t}\n\t\t\t\telse if (this.isGeoTiff) {\n\t\t\t\t\tlet proj = this.map.getView().getProjection();\n\t\t\t\t\tif (proj.basemap || ['EPSG:3857', 'EPSG:4326'].includes(proj.getCode())) {\n\t\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\t}\n\t\t\t\t\tthis.addGeoTiff(data, data.title);\n\t\t\t\t\tlet stac = this.data.getContext();\n\t\t\t\t\tif (stac) {\n\t\t\t\t\t\tthis.addExtent(stac, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isWebService && Utils.isMapServiceSupported(this.data.type)) {\n\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\tthis.addWebService(this.data);\n\t\t\t\t}\n\n\t\t\t\tif (this.$listeners && this.$listeners.drop) {\n\t\t\t\t\tthis.map.getViewport().addEventListener('dragover', event => event.preventDefault());\n\t\t\t\t\tthis.map.getViewport().addEventListener('drop', this.$listeners.drop);\n\t\t\t\t}\n\n\t\t\t\tthis.map.on('pointermove', this.onPointerMove);\n\t\t\t\tthis.map.on('click', this.onClick);\n\t\t\t} catch (error) {\n\t\t\t\tUtils.exception(this, error);\n\t\t\t}\n\n\t\t\tthis.loading = false;\n\t\t},\n\n\t\tasync addCollection() {\n\t\t\tlet layer = this.showWebService(this.data);\n\t\t\t// Fit to extent of collection\n\t\t\ttry {\n\t\t\t\tlet bbox = service.attributes.bbox;\n\t\t\t\tlet extent = [...this.fromLonLat([bbox.west, bbox.south]), ...this.fromLonLat([bbox.east, bbox.north])];\n\t\t\t\tlet extentLayer = new VectorLayer({\n\t\t\t\t\ttitle: \"Extent\",\n\t\t\t\t\tnoSwitcherDelete: true,\n\t\t\t\t\tsource: new VectorSource({\n\t\t\t\t\t\tfeatures: [\n\t\t\t\t\t\t\tnew Feature(PolygonFromExtent(extent))\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprojection: \"EPSG:4326\",\n\t\t\t\t\t\twrapX: false\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\n\t\t\t\tthis.removeLayerFill(extentLayer);\n\t\t\t\tlayer.getLayers().push(extentLayer);\n\n\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions(10));\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelValues(pixel) {\n\t\t\treturn this.geotiffs.map(state => {\n\t\t\t\tconst layer = state.layer;\n\t\t\t\t// Get data into an array\n\t\t\t\tlet data = layer.getData(pixel);\n\t\t\t\tdata = data ? Array.from(data) : [];\n\t\t\t\t\n\t\t\t\t// Handle transparency / no-data\n\t\t\t\tconst noData = state.noData;\n\t\t\t\tconst alpha = noData.length > 0 ? data.pop() : undefined;\n\t\t\t\tdata = data.map(x => ((alpha === 0 || noData.includes(x)) ? NaN : x));\n\n\t\t\t\t// Get labels\n\t\t\t\tconst labels = data.map((_, i) => {\n\t\t\t\t\tconst band = state.bands[i];\n\t\t\t\t\tif (band) {\n\t\t\t\t\t\tconst name = String(band.name || band.id);\n\t\t\t\t\t\tif (name.length > 0) {\n\t\t\t\t\t\t\treturn name;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn String(i);\n\t\t\t\t});\n\n\t\t\t\t// Collection information and add to array\n\t\t\t\treturn {\n\t\t\t\t\ttitle: layer.get('title'),\n\t\t\t\t\tdata,\n\t\t\t\t\tlabels\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tformatCoords(coords) {\n\t\t\treturn coords.map(x => String(parseFloat(x.toFixed(6)))).join(', ');\n\t\t},\n\t\tformatValue({data}) {\n\t\t\tif (!Array.isArray(data) || data.length === 0) {\n\t\t\t\treturn '-';\n\t\t\t}\n\t\t\treturn data\n\t\t\t\t.map(x => {\n\t\t\t\t\tx = parseFloat(x.toFixed(6));\n\t\t\t\t\tif (isNaN(x)) {\n\t\t\t\t\t\treturn 'no data';\n\t\t\t\t\t}\n\t\t\t\t\treturn x;\n\t\t\t\t})\n\t\t\t\t.join(' / ');\n\t\t},\n\t\tonPointerMove(evt) {\n\t\t\tconst values = this.getPixelValues(evt.pixel);\n\t\t\tlet text = '-';\n\t\t\tif (values.length === 1) {\n\t\t\t\ttext = this.formatValue(values[0]);\n\t\t\t}\n\t\t\telse if (values.length > 1) {\n\t\t\t\ttext = values.map(x => `\\r\\n- ${x.title}: ${this.formatValue(x)}`).join('');\n\t\t\t}\n\t\t\tconst plural = values.length > 1 ? 's' : '';\n\t\t\tconst coords = this.formatCoords(evt.coordinate);\n\t\t\tthis.textControlText = [\n\t\t\t\t`Value${plural}: ${text}`,\n\t\t\t\t`Pixel Value${plural}: ${text}\\r\\nCoordinate: ${coords}`\n\t\t\t];\n\t\t},\n\t\tonClick(evt) {\n\t\t\tconst data = this.getPixelValues(evt.pixel);\n\n\t\t\tconst validValues = data\n\t\t\t\t.map(x => x.data)\n\t\t\t\t.flat()\n\t\t\t\t.filter(x => isFinite(x));\n\t\t\t\n\t\t\tif (validValues.length < 2) {\n\t\t\t\tthis.chart = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet labels = data.map(x => x.labels).flat();\n\t\t\tlabels = Array.from(new Set(labels));\n\n\t\t\tconst datasets = data.map(x => {\n\t\t\t\tconst map = {};\n\t\t\t\tfor (let i in x.data) {\n\t\t\t\t\tmap[x.labels[i]] = x.data[i];\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tlabel: x.title,\n\t\t\t\t\tdata: map\n\t\t\t\t};\n\t\t\t});\n\n\t\t\tconst coords = this.formatCoords(evt.coordinate);\n\t\t\tthis.chart = {\n\t\t\t\ttitle: `Coordinate: ${coords}`,\n\t\t\t\tlabels,\n\t\t\t\tdatasets\n\t\t\t};\n\t\t},\n\t\tcloseChart() {\n\t\t\tthis.chart = null;\n\t\t},\n\n\t\tasync addGeoTiff(geotiff, title = \"GeoTiff\") {\n\t\t\tconst tiffState = new GeoTiffState(geotiff);\n\t\t\tconst sourceOpts = {\n\t\t\t\tnodata: tiffState.noData[0] // OL only supports passing one no data value\n\t\t\t};\n\t\t\tif (geotiff.getBlob()) {\n\t\t\t\tsourceOpts.blob = geotiff.getBlob();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsourceOpts.url = geotiff.getUrl();\n\t\t\t}\n\n\t\t\tconst source = new OlGeoTiff({\n\t\t\t\tinterpolate: false,\n\t\t\t\tnormalize: false,\n\t\t\t\tconvertToRGB: geotiff.convertToRGB,\n\t\t\t\tsources: [sourceOpts]\n\t\t\t});\n\n\t\t\tconst layer = new TileLayer({\n\t\t\t\tid: geotiff.getUrl(),\n\t\t\t\ttitle,\n\t\t\t\tsource: source,\n\t\t\t\tclassName: `geotiff${this.layerId++}`, // https://github.com/Viglino/ol-ext/issues/1047 (for Swipe)\n\t\t\t\tcacheSize: 2048 // https://github.com/openlayers/openlayers/issues/13670\n\t\t\t});\n\t\t\ttiffState.layer = layer;\n\t\t\tlayer.set('geotiff', tiffState);\n\t\t\tlayer.once('prerender', () => tiffState.setStyle());\n\t\t\tlayer.on('change:visible', () => this.updateSwiper());\n\t\t\tthis.addLayerToMap(layer);\n\n\t\t\tlet extent = geotiff.getExtent();\n\t\t\tif (extent) {\n\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions(10));\n\t\t\t}\n\n\t\t\treturn layer;\n\t\t},\n\n\t\tasync addData(files) {\n\t\t\tif (files.length > 5 && !Utils.confirmOpenAll(files)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tconst promises = files.map(async (file) => {\n\t\t\t\tawait file.loadData(this.connection);\n\t\t\t\tif (file instanceof GeoTiffFile) {\n\t\t\t\t\treturn await this.addGeoTiff(file, file.title);\n\t\t\t\t}\n\t\t\t\telse if (file instanceof JSON_ && file.isGeoJson) {\n\t\t\t\t\treturn await this.addGeoJson(file, false, file.title);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tUtils.error(this, new Error(`Sorry, the given data at ${file.href} is not supported.`));\n\t\t\t\t}\n\t\t\t});\n\t\t\tawait Promise.all(promises);\n\t\t},\n\n\t\tupdateSwiper() {\n\t\t\tconst layers = this.map.getLayers().getArray()\n\t\t\t\t.filter(layer => layer.get('geotiff') && layer.getVisible());\n\t\t\tif (layers.length === 2) {\n\t\t\t\tif (this.swipe && layers.every((l, i) => l === this.swipe.layers[i])) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst opts = {\n\t\t\t\t\tlayers: layers[0],\n\t\t\t\t\trightLayers: layers[1]\n\t\t\t\t};\n\t\t\t\tconst control = new Swipe(opts);\n\t\t\t\tthis.swipe = { control, layers };\n\t\t\t\tthis.map.addControl(control);\n\t\t\t}\n\t\t\telse if (layers.length !== 2 && this.swipe) {\n\t\t\t\tthis.map.removeControl(this.swipe.control);\n\t\t\t\tthis.swipe = null;\n\t\t\t}\n\t\t},\n\n\t\tupdateGeoTiffStyle(state, type, data) {\n\t\t\tswitch(type) {\n\t\t\t\tcase 'channels':\n\t\t\t\t\tstate.channels = data;\n\t\t\t\t\tthis.setOptions('channels', data);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tstate.setStyle();\n\t\t}\n\t\t\n\t}\n\n}\n</script>\n\n<style src=\"../maps/MapMixin.scss\" lang=\"scss\"></style>\n\n<style lang=\"scss\">\n.map-viewer {\n\tposition: relative;\n\n\t.map-loading {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbackground-color: rgba(0,0,0,0.6);\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tz-index: 9999;\n\t\tcolor: white;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\n\t\t> i {\n\t\t\tfont-size: 2em;\n\t\t}\n\t}\n}\n\n.ol-control.geotiff-channels {\n\tbottom: calc(22px + 1em);\n  right: 8px;\n\tposition: absolute;\n\tmax-height: 150px;\n\toverflow-y: auto;\n}\n\n#chart {\n\tposition: relative;\n\n\t.close {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0.5em;\n\t\tpadding: 0.5em;\n\t\tcursor: pointer;\n\t\tcolor: black;\n\n\t\t&:hover {\n\t\t\tcolor: red;\n\t\t}\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapViewer.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapViewer.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MapViewer.vue?vue&type=template&id=76347783\"\nimport script from \"./MapViewer.vue?vue&type=script&lang=js\"\nexport * from \"./MapViewer.vue?vue&type=script&lang=js\"\nimport style0 from \"../maps/MapMixin.scss?vue&type=style&index=0&prod&lang=scss&external\"\nimport style1 from \"./MapViewer.vue?vue&type=style&index=1&id=76347783&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar $RangeError = RangeError;\n\nmodule.exports = function (it) {\n  var result = toIntegerOrInfinity(it);\n  if (result < 0) throw new $RangeError(\"The argument can't be less than 0\");\n  return result;\n};\n"],"names":["$RangeError","RangeError","module","exports","it","$","call","anObject","getIteratorDirect","notANaN","toPositiveInteger","iteratorClose","createIteratorProxy","iteratorHelperThrowsOnInvalidIterator","iteratorHelperWithoutClosingOnEarlyError","IS_PURE","DROP_WITHOUT_THROWING_ON_INVALID_ITERATOR","dropWithoutClosingOnEarlyError","FORCED","IteratorProxy","result","done","iterator","this","next","remaining","value","target","proto","real","forced","drop","limit","error","OSMGeocoder","constructor","url","geojson","getParameters","opt","params","q","query","format","polygon_geojson","polygon_threshold","handleResponse","results","length","filter","includes","class","map","lon","lat","bbox","boundingbox","address","name","display_name","original","formatted","details","methods","addGeocoder","callback","$config","geocoder","options","provider","placeholder","keepOpen","preventDefault","Geocoder","on","event","place","i","parseFloat","bboxOpenEO","west","east","north","south","addControl","render","staticRenderFns","component","_vm","_c","_self","texts","staticClass","pointer","toggle","_v","_s","current","_e","mixins","ControlMixin","data","computed","Array","isArray","text","props","type","String","default","e","t","s","r","n","o","a","l","c","d","u","p","h","m","g","y","f","b","w","v","namespace","spin","hidden","country","city","road","olControl","glass","container","control","button","input","expanded","reset","inputText","icon","k","containerId","buttonControlId","inputQueryId","inputResetId","cssClasses","x","Object","freeze","__proto__","C","S","L","j","E","T","N","R","A","P","featureStyle","targetType","lang","autoComplete","autoCompleteMinLength","autoCompleteTimeout","debug","I","Error","_","window","performance","Date","now","timing","navigationStart","toString","M","test","O","forEach","split","V","U","F","G","classList","contains","B","className","D","replace","replaceAll","Q","document","createElement","id","classname","attr","setAttribute","innerHTML","createDocumentFragment","childNodes","append","RegExp","add","trim","setTimeout","remove","z","H","els","createControl","querySelector","K","settings","langs","toLowerCase","features","geometry","coordinates","properties","postcode","state","J","addressdetails","countrycodes","houseNumber","house_number","town","W","key","neighbourhood","X","callbackName","includeNeighborhood","maxResults","resources","resourceSets","point","formattedAddress","Y","countrycode","pretty","no_annotations","lng","components","Z","Promise","ee","method","mode","credentials","jsonp","head","Math","round","random","indexOf","removeChild","fetch","then","json","catch","keys","reduce","push","encodeURIComponent","join","te","se","Base","layerName","layer","source","newProvider","lastQuery","registeredListeners","mapClick","setListeners","stopPropagation","collapse","expand","addEventListener","which","keyCode","clearTimeout","focus","clearResults","firstChild","console","info","createList","listenMapClick","addressTemplate","chosen","getMap","Number","getView","getProjection","transform","transformExtent","dispatchEvent","coordinate","fit","duration","animate","resolution","center","createFeature","feature","addLayer","setStyle","setId","getSource","addFeature","building","village","blur","getTargetElement","handleEvent","removeEventListener","getLayers","re","image","scale","src","super","element","prototype","hasOwnProperty","getLayer","setProvider","setProviderKey","attrs","ref","addData","isGeoTiff","textControlText","_l","geotiffs","colorMap","bands","defaultChannels","get","update","updateGeoTiffStyle","loading","chart","closeChart","_b","staticStyle","$event","openModal","apply","arguments","EventBusMixin","events","save","broadcast","file","$emit","directives","rawName","channels","expression","title","cols","isGray","multiBand","channel","labels","modifiers","$$selectedVal","selected","val","_value","_n","$set","multiple","band","domProps","min","composing","$forceUpdate","max","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","slice","mounted","watch","immediate","handler","updateChannels","emit","deep","isValid","assign","createElementNS","namespaceURI","qualifiedName","node","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","object","parse","xml","DOMParser","parseFromString","makeArrayPusher","valueReader","thisArg","objectStack","undefined","array","makeObjectPropertyPusher","property","localName","makeObjectPropertySetter","makeSimpleNodeFactory","fixedNodeName","fixedNamespaceURI","newNodeName","context","nodeName","makeStructureNS","namespaceURIs","structure","structureNS","ii","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","pop","document_","implementation","createDocument","XML","read","doc","readFromDocument","readFromNode","ELEMENT_NODE","NAMESPACE_URI","readHref","getAttributeNS","readDecimal","readDecimalString","string","exec","readPositiveInteger","readNonNegativeIntegerString","parseInt","readString","NAMESPACE_URIS","PARSERS","readServiceIdentification","readServiceProvider","readOperationsMetadata","OWS","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","readValue","CONSTRAINT_PARSERS","readAllowedValues","CONTACT_INFO_PARSERS","readPhone","readAddress","DCP_PARSERS","readHttp","HTTP_PARSERS","readGet","OPERATION_PARSERS","readDcp","OPERATIONS_METADATA_PARSERS","readOperation","PHONE_PARSERS","REQUEST_METHOD_PARSERS","readConstraint","SERVICE_CONTACT_PARSERS","readContactInfo","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","readServiceContact","getAttribute","href","OWS_NAMESPACE_URIS","readContents","WMTSCapabilities","owsParser_","version","WMTSCapabilityObject","CONTENTS_PARSERS","readLayer","readTileMatrixSet","LAYER_PARSERS","readStyle","readTileMatrixSetLink","readDimensions","readResourceUrl","readBoundingBox","readBoundingBoxWithCrs","STYLE_PARSERS","readLegendUrl","TMS_LINKS_PARSERS","readTileMatrixLimitsList","TMS_LIMITS_LIST_PARSERS","readTileMatrixLimits","TMS_LIMITS_PARSERS","DIMENSION_PARSERS","WGS84_BBOX_READERS","readCoordinates","TMS_PARSERS","readTileMatrix","TM_PARSERS","style","isDefault","template","resourceType","resource","crs","extent","legend","isNaN","appendParams","uri","keyParams","qs","WMTSTileGrid","TileGrid","origin","origins","resolutions","tileSize","tileSizes","sizes","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","code","projection","metersPerUnit","getMetersPerUnit","switchOriginXY","getAxisOrientation","substr","sort","elt","matrixAvailable","find","elt_ml","tileWidth","tileHeight","TileImage","requestEncoding","tileGrid","urls","attributions","attributionsCollapsible","cacheSize","crossOrigin","interpolate","reprojectionErrorThreshold","tileClass","tileLoadFunction","tilePixelRatio","wrapX","transition","zDirection","version_","format_","dimensions_","dimensions","layer_","matrixSet_","style_","requestEncoding_","setKey","getKeyForDimensions_","tileUrlFunction","createFromWMTSTemplate","bind","setUrls","setTileUrlFunction","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","tileCoord","pixelRatio","localContext","optionsFromCapabilities","wmtsCap","config","layers","tileMatrixSets","idx","findIndex","tileMatrixSet","el","supportedCRS","proj1","proj2","equivalent","index","matrixSets","matrixSetObj","projConfig","switchXY","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","getExtent","wgs84MatrixSetExtent","gets","constraint","encodings","ol_control_Timeline","create","zoomButton","_scrollDiv","parent","_buttons","addButton","handleClick","zoom","refresh","_intervalDiv","_select","scrollListener","_setScrollLeft","date","getDate","dateStart","dateEnd","scrollTimeout","scrollDiv","onmove","_moving","_tline","_scrollLeft","set","maxWidth","minDate","Infinity","maxDate","graduation","minZoom","maxZoom","setInterval","interval","getHTML","_getHTML","getFeatureDate","_getFeatureDate","endFeatureDate","_endFeatureDate","setFeatures","setMap","html","click","isCollapsed","collapsed","_features","_source","getFeatures","first","d2","tline","end","div","_minDate","_maxDate","isFinite","delta","_scale","width","_drawTime","line","lineHeight","fdiv","left","img","querySelectorAll","ondragstart","minWidth","pos","top","_nbline","setDate","anim","position","_getOffsetFromDate","_getDateFromOffset","offset","scrollLeft","_getScrollLeft","dt","month","dmonth","tdiv","dx","heigth","year","getFullYear","setFullYear","dyear","setMonth","toLocaleDateString","dday","day","offdate","getMonth","outerWidth","roundDate","stick","_roundTo","getStartDate","getEndDate","ExtentMixin","timeline","addWebService","service","updateXYZLayer","updateWMTSLayer","Utils","getWMTSTimes","capabilities","layerId","Contents","Layer","Dimension","timeDimension","Value","initWMTSLayer","URL","searchParams","response","axios","responseType","exception","prefix","attributes","layerNames","defaultDate","getResourceTitle","layerCollection","Collection","TIME","times","isObject","WMTS","mapLayer","TileLayer","trackTileProgress","noSwitcherDelete","run","Timeline","toISOString","btns","getElementsByClassName","innerText","disabled","log","group","LayerGroup","display","getVisible","addLayerToMap","removeControl","replaceParam","getTime","XYZ","process","process_graph","crs84","e4326","values","process_id","spatial_extent","isBBox","isGeoJSON","addExtent","GeoTiffState","geotiff","getColorMap","noData","getNoData","getBands","getBandVar","getFormula","getNoDataFormula","variables","alphaband","color","formula","GeoTIFFImage","getSampleByteSize","fileDirectory","BitsPerSample","ceil","getReaderForSample","sampleIndex","getSampleFormat","bitsPerSample","getBitsPerSample","DataView","getUint8","getUint16","getUint32","getInt8","getInt16","getInt32","littleEndian","getFloat16","getFloat32","getFloat64","SampleFormat","expressionToGlsl","compilationContext","expectedType","parsingContext","parseStyle","bandCount","vertexShader","TEXTURE_COORD","TILE_TRANSFORM","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","DEPTH","inFragmentShader","pipeline","contrast","exposure","saturation","gamma","brightness","uniforms","numVariables","variable","uniformName","uniformDeclarations","textureCount","TILE_TEXTURE_ARRAY","paletteTextures","functionDefintions","functions","fragmentShader","RENDER_EXTENT","TRANSITION_ALPHA","RESOLUTION","ZOOM","WebGLTileLayer","BaseTile","sources_","sources","renderedSource_","renderedResolution_","NaN","cacheSize_","styleVariables_","addChangeListener","SOURCE","handleSourceUpdate_","getSources","getRenderSource","getSourceState","getState","hasRenderer","getRenderer","clearCache","getSourceBandCount_","MAX_SAFE_INTEGER","createRenderer","parsedStyle","renderSources","frameState","layerRenderer","canvas","prepareFrame","renderFrame","rendered","viewState","ready","sourceState","onChange","changed","renderComplete","altSources","renderer","updateStyleVariables","dispose","DataTileSource","maxResolution","opaque","gutter_","gutter","tileSize_","tileSizes_","tileLoadingKeys_","loader_","loader","handleTileChange_","tileGridForProjection_","tileCacheForProjection_","setTileSizes","getTileSize","getTileGrid","getGutterForProjection","thisProj","setLoader","getReprojTile_","targetProj","sourceProj","cache","getTileCacheForProjection","tileCoordKey","containsKey","tile","getKey","reprojTilePixelRatio","getResolutions","textureSize","sourceTileGrid","getTileGridForProjection","targetTileGrid","wrappedTileCoord","getTileCoordForTileUrlFunction","getTileFunction","getTile","tileOptions","newTile","sourceProjection","size","tileCache","sourceLoader","DataTile","EventType","CHANGE","uid","tileState","TileState","LOADING","TileEventType","TILELOADSTART","ERROR","TILELOADERROR","LOADED","TILELOADEND","projKey","setTileGridForProjection","tilegrid","proj","TileCache","expireCache","usedTiles","usedTileCache","clear","defaultPoolSize","navigator","hardwareConcurrency","Pool","createWorker","workers","_awaitingDecoder","messageId","resolve","worker","idle","decode","buffer","decoder","candidate","floor","onMessage","decoded","postMessage","destroy","terminate","isMask","NewSubfileType","readRGB","preference","getSamplesPerPixel","interpretation","PhotometricInterpretation","interpretations","CMYK","YCbCr","CIELab","ICCLab","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","defaultTileSize","workerPool","getWorkerPool","getBoundingBox","getWidth","getHeight","getOrigin","referenceImage","getResolution","geoKeys","ProjectedCSTypeGeoKey","units","ProjLinearUnitsGeoKey","Projection","GeographicTypeGeoKey","GeogAngularUnitsGeoKey","getImagesForTIFF","tiff","getImageCount","count","requests","getImage","all","getImagesForSource","request","blob","overviews","assertEqual","expected","got","tolerance","message","rejector","abs","getMinForDataType","Int8Array","Int16Array","Int32Array","Float32Array","getMaxForDataType","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","GeoTIFFSource","sourceInfo_","numSources","sourceOptions_","sourceOptions","sourceImagery_","sourceMasks_","resolutionFactors_","samplesPerPixel_","nodataValues_","metadata_","normalize_","normalize","addAlpha_","error_","convertToRGB_","convertToRGB","self","configure_","setState","getError","determineProjection","firstSource","commonRenderTileSizes","commonSourceTileSizes","samplesPerPixel","nodataValues","metadata","sourceCount","sourceIndex","images","masks","item","imageCount","sourceExtent","sourceOrigin","sourceTileSizes","renderTileSizes","sourceResolutions","imageIndex","nodataValue","getGDALNoData","getGDALMetadata","wantedSamples","level","imageResolutions","sourceTileSize","getTileWidth","getTileHeight","aspectRatio","viewRejector","resolutionFactor","scaledSourceResolutions","reverse","sourceImagery","unshift","outer","nodata","loadTile_","viewResolver","showFullExtent","toUserCoordinate","toUserExtent","sourceInfo","pool","pixelBounds","samples","fillValue","bandNumber","readOptions","height","interleave","readRasters","maskIndex","mask","composeTile_","sourceSamples","addAlpha","pixelCount","dataLength","dataIndex","pixelIndex","transparent","gain","bias","stats","sourceValue","bandIndex","nodataIsNaN","ol_control_Swipe","ol_control_Control","appendChild","move","precomposeRight_","precomposeRight","precomposeLeft_","precomposeLeft","postcompose_","postcompose","rightLayers","renderSync","isMoving","getImageRatio","orientation","right","un","_listener","isLayer_","removeLayers","removeLayer","splice","getRectangle","getSize","_movefn","eventName","pageX","touches","changedTouches","getBoundingClientRect","pageXOffset","documentElement","clientLeft","pageY","pageYOffset","clientTop","_transformPt","pt","tr","inversePixelTransform","_drawRect","pts","rot","atan2","pixelToCoordinateTransform","translate","rotate","lineTo","moveTo","restore","ratio","rect","ctx","WebGLRenderingContext","_lefttime","time","clearColor","COLOR_BUFFER_BIT","enable","SCISSOR_TEST","mapSize","bottomLeft","topRight","fullWidth","fullHeight","scissor","beginPath","clip","_righttime","gl","disable","getClassName","GeocoderMixin","MapMixin","WebServiceMixin","AddDataControl","ChannelControl","Pane","ScatterChart","Splitpanes","TextControl","swipe","mapState","isWebService","Service","GeoTiffFile","isGeoJson","JSON_","renderMap","view","loadData","connection","isMapServiceSupported","createMap","evt","updateSwiper","addLayerSwitcher","toExtent","getFitOptions","addBasemaps","addGeoJson","basemap","getCode","addGeoTiff","stac","getContext","$listeners","getViewport","onPointerMove","onClick","addCollection","showWebService","fromLonLat","extentLayer","VectorLayer","VectorSource","Feature","PolygonFromExtent","removeLayerFill","getPixelValues","pixel","getData","from","alpha","formatCoords","coords","toFixed","formatValue","plural","validValues","flat","Set","datasets","label","tiffState","sourceOpts","getBlob","getUrl","OlGeoTiff","once","files","confirmOpenAll","promises","getArray","every","opts","Swipe","setOptions","toIntegerOrInfinity"],"sourceRoot":""}
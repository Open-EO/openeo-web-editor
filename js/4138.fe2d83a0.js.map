{"version":3,"file":"js/4138.fe2d83a0.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/@kirtandesai/ol-geocoder/dist/ol-geocoder.js","webpack://@openeo/web-editor/./node_modules/ol-ext/control/Timeline.js","webpack://@openeo/web-editor/./node_modules/ol/DataTile.js","webpack://@openeo/web-editor/./node_modules/ol/xml.js","webpack://@openeo/web-editor/./node_modules/ol/format/XML.js","webpack://@openeo/web-editor/./node_modules/ol/format/xlink.js","webpack://@openeo/web-editor/./node_modules/ol/format/xsd.js","webpack://@openeo/web-editor/./node_modules/ol/format/OWS.js","webpack://@openeo/web-editor/./node_modules/ol/format/WMTSCapabilities.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/BaseTileRepresentation.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/TileTexture.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/webgl/TileLayerBase.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/webgl/TileLayer.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/PaletteTexture.js","webpack://@openeo/web-editor/./node_modules/ol/style/expressions.js","webpack://@openeo/web-editor/./node_modules/ol/layer/WebGLTile.js","webpack://@openeo/web-editor/./node_modules/ol/reproj/DataTile.js","webpack://@openeo/web-editor/./node_modules/ol/source/DataTile.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/pool.js","webpack://@openeo/web-editor/./node_modules/ol/source/GeoTIFF.js","webpack://@openeo/web-editor/./node_modules/ol/uri.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/WMTS.js","webpack://@openeo/web-editor/./node_modules/ol/source/WMTS.js"],"sourcesContent":["/*!\n * @kirtandesai/ol-geocoder - v5.0.3\n * A geocoder extension compatible with OpenLayers v7.\n * https://github.com/kirtan-desai/ol-geocoder\n * Built: Thu Nov 17 2022 14:58:35 GMT-0500 (Eastern Standard Time)\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"ol/control/Control\"),require(\"ol/style/Style\"),require(\"ol/style/Icon\"),require(\"ol/layer/Vector\"),require(\"ol/source/Vector\"),require(\"ol/geom/Point\"),require(\"ol/Feature\"),require(\"ol/proj\")):\"function\"==typeof define&&define.amd?define([\"ol/control/Control\",\"ol/style/Style\",\"ol/style/Icon\",\"ol/layer/Vector\",\"ol/source/Vector\",\"ol/geom/Point\",\"ol/Feature\",\"ol/proj\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).Geocoder=t(e.ol.control.Control,e.ol.style.Style,e.ol.style.Icon,e.ol.layer.Vector,e.ol.source.Vector,e.ol.geom.Point,e.ol.Feature,e.ol.proj)}(this,(function(e,t,s,r,n,o,a,i){\"use strict\";function l(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var c=l(e),d=l(t),u=l(s),p=l(r),h=l(n),m=l(o),g=l(a),y=l(i),f=\"gcd-container\",b=\"gcd-button-control\",w=\"gcd-input-query\",v=\"gcd-input-reset\",$={namespace:\"ol-geocoder\",spin:\"gcd-pseudo-rotate\",hidden:\"gcd-hidden\",address:\"gcd-address\",country:\"gcd-country\",city:\"gcd-city\",road:\"gcd-road\",olControl:\"ol-control\",glass:{container:\"gcd-gl-container\",control:\"gcd-gl-control\",button:\"gcd-gl-btn\",input:\"gcd-gl-input\",expanded:\"gcd-gl-expanded\",reset:\"gcd-gl-reset\",result:\"gcd-gl-result\"},inputText:{container:\"gcd-txt-container\",control:\"gcd-txt-control\",input:\"gcd-txt-input\",reset:\"gcd-txt-reset\",icon:\"gcd-txt-glass\",result:\"gcd-txt-result\"}},k={containerId:f,buttonControlId:b,inputQueryId:w,inputResetId:v,cssClasses:$};const x=Object.freeze({__proto__:null,containerId:f,buttonControlId:b,inputQueryId:w,inputResetId:v,cssClasses:$,default:k}),q=\"addresschosen\",C=\"nominatim\",S=\"reverse\",L=\"glass-button\",j=\"text-input\",E=\"osm\",T=\"mapquest\",N=\"photon\",R=\"bing\",A=\"opencage\",P={provider:E,placeholder:\"Search for an address\",featureStyle:null,targetType:L,lang:\"en-US\",limit:5,keepOpen:!1,preventDefault:!1,autoComplete:!1,autoCompleteMinLength:2,autoCompleteTimeout:200,debug:!1};function I(e,t=\"Assertion failed\"){if(!e){if(\"undefined\"!=typeof Error)throw new Error(t);throw t}}function _(e){const t=function(){if(\"performance\"in window==0&&(window.performance={}),\"now\"in window.performance==0){let e=Date.now();performance.timing&&performance.timing.navigationStart&&(e=performance.timing.navigationStart),window.performance.now=()=>Date.now()-e}return window.performance.now()}().toString(36);return e?e+t:t}function M(e){return/^\\d+$/u.test(e)}function O(e,t,s){if(Array.isArray(e))return void e.forEach((e=>O(e,t)));const r=Array.isArray(t)?t:t.split(/\\s+/u);let n=r.length;for(;n--;)V(e,r[n])||U(e,r[n],s)}function F(e,t,s){if(Array.isArray(e))return void e.forEach((e=>F(e,t,s)));const r=Array.isArray(t)?t:t.split(/\\s+/u);let n=r.length;for(;n--;)V(e,r[n])&&G(e,r[n],s)}function V(e,t){return e.classList?e.classList.contains(t):B(t).test(e.className)}function D(e,t){return e.replace(/\\{\\s*([\\w-]+)\\s*\\}/gu,((e,s)=>{const r=void 0===t[s]?\"\":t[s];return String(r).replaceAll(\"&\",\"&amp;\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\").replaceAll('\"',\"&quot;\").replaceAll(\"'\",\"&#039;\")}))}function Q(e,t){let s;if(Array.isArray(e)){if(s=document.createElement(e[0]),e[1].id&&(s.id=e[1].id),e[1].classname&&(s.className=e[1].classname),e[1].attr){const{attr:t}=e[1];if(Array.isArray(t)){let e=-1;for(;++e<t.length;)s.setAttribute(t[e].name,t[e].value)}else s.setAttribute(t.name,t.value)}}else s=document.createElement(e);s.innerHTML=t;const r=document.createDocumentFragment();for(;s.childNodes[0];)r.append(s.childNodes[0]);return s.append(r),s}function B(e){return new RegExp(`(^|\\\\s+) ${e} (\\\\s+|$)`,\"u\")}function U(e,t,s){e.classList?e.classList.add(t):e.className=`${e.className} ${t}`.trim(),s&&M(s)&&window.setTimeout((()=>G(e,t)),s)}function G(e,t,s){e.classList?e.classList.remove(t):e.className=e.className.replace(B(t),\" \").trim(),s&&M(s)&&window.setTimeout((()=>U(e,t)),s)}const z=x.cssClasses;class H{constructor(e){this.options=e,this.els=this.createControl()}createControl(){let e,t,s;return this.options.targetType===j?(t=`${z.namespace} ${z.inputText.container}`,e=Q([\"div\",{id:x.containerId,classname:t}],H.input),s={container:e,control:e.querySelector(`.${z.inputText.control}`),input:e.querySelector(`.${z.inputText.input}`),reset:e.querySelector(`.${z.inputText.reset}`),result:e.querySelector(`.${z.inputText.result}`)}):(t=`${z.namespace} ${z.glass.container}`,e=Q([\"div\",{id:x.containerId,classname:t}],H.glass),s={container:e,control:e.querySelector(`.${z.glass.control}`),button:e.querySelector(`.${z.glass.button}`),input:e.querySelector(`.${z.glass.input}`),reset:e.querySelector(`.${z.glass.reset}`),result:e.querySelector(`.${z.glass.result}`)}),s.input.placeholder=this.options.placeholder,s}}H.glass=`\\n  <div class=\"${z.glass.control} ${z.olControl}\">\\n    <button type=\"button\" id=\"${x.buttonControlId}\" class=\"${z.glass.button}\"></button>\\n    <input type=\"text\" id=\"${x.inputQueryId}\" class=\"${z.glass.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\\n    <a id=\"${x.inputResetId}\" class=\"${z.glass.reset} ${z.hidden}\"></a>\\n  </div>\\n  <ul class=\"${z.glass.result}\"></ul>\\n`,H.input=`\\n  <div class=\"${z.inputText.control}\">\\n    <input type=\"text\" id=\"${x.inputQueryId}\" class=\"${z.inputText.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\\n    <span class=\"${z.inputText.icon}\"></span>\\n    <button type=\"button\" id=\"${x.inputResetId}\" class=\"${z.inputText.reset} ${z.hidden}\"></button>\\n  </div>\\n  <ul class=\"${z.inputText.result}\"></ul>\\n`;class K{constructor(){this.settings={url:\"https://photon.komoot.io/api/\",params:{q:\"\",limit:10,lang:\"en\"},langs:[\"de\",\"it\",\"fr\",\"en\"]}}getParameters(e){return e.lang=e.lang.toLowerCase(),{url:this.settings.url,params:{q:e.query,limit:e.limit||this.settings.params.limit,lang:this.settings.langs.includes(e.lang)?e.lang:this.settings.params.lang}}}handleResponse(e){return 0===e.features.length?[]:e.features.map((e=>({lon:e.geometry.coordinates[0],lat:e.geometry.coordinates[1],address:{name:e.properties.name,postcode:e.properties.postcode,city:e.properties.city,state:e.properties.state,country:e.properties.country},original:{formatted:e.properties.name,details:e.properties}})))}}class J{constructor(){this.settings={url:\"https://nominatim.openstreetmap.org/search/\",params:{q:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,format:this.settings.params.format,addressdetails:this.settings.params.addressdetails,limit:e.limit||this.settings.params.limit,countrycodes:e.countrycodes||this.settings.params.countrycodes,\"accept-language\":e.lang||this.settings.params[\"accept-language\"]}}}handleResponse(e){return 0===e.length?[]:e.map((e=>({lon:e.lon,lat:e.lat,bbox:e.boundingbox,address:{name:e.display_name,road:e.address.road||\"\",houseNumber:e.address.house_number||\"\",postcode:e.address.postcode,city:e.address.city||e.address.town,state:e.address.state,country:e.address.country},original:{formatted:e.display_name,details:e.address}})))}}class W{constructor(){this.settings={url:\"https://open.mapquestapi.com/nominatim/v1/search.php\",params:{q:\"\",key:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,key:e.key,format:\"json\",addressdetails:1,limit:e.limit||this.settings.params.limit,countrycodes:e.countrycodes||this.settings.params.countrycodes,\"accept-language\":e.lang||this.settings.params[\"accept-language\"]}}}handleResponse(e){return 0===e.length?[]:e.map((e=>({lon:e.lon,lat:e.lat,address:{name:e.address.neighbourhood||\"\",road:e.address.road||\"\",postcode:e.address.postcode,city:e.address.city||e.address.town,state:e.address.state,country:e.address.country},original:{formatted:e.display_name,details:e.address}})))}}class X{constructor(){this.settings={url:\"https://dev.virtualearth.net/REST/v1/Locations\",callbackName:\"jsonp\",params:{query:\"\",key:\"\",includeNeighborhood:0,maxResults:10}}}getParameters(e){return{url:this.settings.url,callbackName:this.settings.callbackName,params:{query:e.query,key:e.key,includeNeighborhood:e.includeNeighborhood||this.settings.params.includeNeighborhood,maxResults:e.maxResults||this.settings.params.maxResults}}}handleResponse(e){const{resources:t}=e.resourceSets[0];return 0===t.length?[]:t.map((e=>({lon:e.point.coordinates[1],lat:e.point.coordinates[0],address:{name:e.name},original:{formatted:e.address.formattedAddress,details:e.address}})))}}class Y{constructor(){this.settings={url:\"https://api.opencagedata.com/geocode/v1/json?\",params:{q:\"\",key:\"\",limit:10,countrycode:\"\",pretty:1,no_annotations:1}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,key:e.key,limit:e.limit||this.settings.params.limit,countrycode:e.countrycodes||this.settings.params.countrycodes}}}handleResponse(e){return 0===e.results.length?[]:e.results.map((e=>({lon:e.geometry.lng,lat:e.geometry.lat,address:{name:e.components.house_number||\"\",road:e.components.road||\"\",postcode:e.components.postcode,city:e.components.city||e.components.town,state:e.components.state,country:e.components.country},original:{formatted:e.formatted,details:e.components}})))}}function Z(e){return new Promise(((t,s)=>{const r=function(e,t){t&&\"object\"==typeof t&&(e+=(/\\?/u.test(e)?\"&\":\"?\")+ee(t));return e}(e.url,e.data),n={method:\"GET\",mode:\"cors\",credentials:\"same-origin\"};e.jsonp?function(e,t,s){const{head:r}=document,n=document.createElement(\"script\"),o=`f${Math.round(Math.random()*Date.now())}`;n.setAttribute(\"src\",`${e+(e.indexOf(\"?\")>0?\"&\":\"?\")+t}=${o}`),window[o]=e=>{window[o]=void 0,setTimeout((()=>r.removeChild(n)),0),s(e)},r.append(n)}(r,e.callbackName,t):fetch(r,n).then((e=>e.json())).then(t).catch(s)}))}function ee(e){return Object.keys(e).reduce(((t,s)=>(t.push(\"object\"==typeof e[s]?ee(e[s]):`${encodeURIComponent(s)}=${encodeURIComponent(e[s])}`),t)),[]).join(\"&\")}const te=x.cssClasses;class se{constructor(e,t){this.Base=e,this.layerName=_(\"geocoder-layer-\"),this.layer=new p.default({name:this.layerName,source:new h.default}),this.options=e.options,this.options.provider=\"string\"==typeof this.options.provider?this.options.provider.toLowerCase():this.options.provider,this.provider=this.newProvider(),this.els=t,this.lastQuery=\"\",this.container=this.els.container,this.registeredListeners={mapClick:!1},this.setListeners()}setListeners(){let e,t;const s=e=>{e.stopPropagation(),V(this.els.control,te.glass.expanded)?this.collapse():this.expand()};this.els.input.addEventListener(\"keypress\",(e=>{const t=e.target.value.trim();(e.key?\"Enter\"===e.key:e.which?13===e.which:!!e.keyCode&&13===e.keyCode)&&(e.preventDefault(),this.query(t))}),!1),this.els.input.addEventListener(\"click\",(e=>e.stopPropagation()),!1),this.els.input.addEventListener(\"input\",(s=>{const r=s.target.value.trim();0!==r.length?F(this.els.reset,te.hidden):O(this.els.reset,te.hidden),this.options.autoComplete&&r!==t&&(t=r,e&&clearTimeout(e),e=setTimeout((()=>{r.length>=this.options.autoCompleteMinLength&&this.query(r)}),this.options.autoCompleteTimeout))}),!1),this.els.reset.addEventListener(\"click\",(e=>{this.els.input.focus(),this.els.input.value=\"\",this.lastQuery=\"\",O(this.els.reset,te.hidden),this.clearResults()}),!1),this.options.targetType===L&&this.els.button.addEventListener(\"click\",s,!1)}query(e){this.provider||(this.provider=this.newProvider());const t=this.provider.getParameters({query:e,key:this.options.key,lang:this.options.lang,countrycodes:this.options.countrycodes,limit:this.options.limit});if(this.lastQuery===e&&this.els.result.firstChild)return;this.lastQuery=e,this.clearResults(),O(this.els.reset,te.spin);const s={url:t.url,data:t.params};t.callbackName&&(s.jsonp=!0,s.callbackName=t.callbackName),Z(s).then((e=>{this.options.debug&&console.info(e),F(this.els.reset,te.spin);const t=this.provider.handleResponse(e);t&&(this.createList(t),this.listenMapClick())})).catch((e=>{F(this.els.reset,te.spin);const t=Q(\"li\",\"<h5>Error! No internet connection?</h5>\");this.els.result.append(t)}))}createList(e){const t=this.els.result;e.forEach((e=>{let s;if(this.options.provider===E)s=`<span class=\"${te.road}\">${e.address.name}</span>`;else s=this.addressTemplate(e.address);const r=Q(\"li\",`<a href=\"#\">${s}</a>`);r.addEventListener(\"click\",(t=>{t.preventDefault(),this.chosen(e,s,e.address,e.original)}),!1),t.append(r)}))}chosen(e,t,s,r){const n=this.Base.getMap(),o=[Number.parseFloat(e.lon),Number.parseFloat(e.lat)],a=n.getView().getProjection(),i=y.default.transform(o,\"EPSG:4326\",a);let{bbox:l}=e;l&&(l=y.default.transformExtent([l[2],l[1],l[3],l[0]],\"EPSG:4326\",a));const c={formatted:t,details:s,original:r};if(!1===this.options.keepOpen&&this.clearResults(!0),!0===this.options.preventDefault)this.Base.dispatchEvent({type:q,address:c,coordinate:i,bbox:l,place:e});else{l?n.getView().fit(l,{duration:500}):function(e,t,s=500,r=2.388657133911758){e.getView().animate({duration:s,resolution:r},{duration:s,center:t})}(n,i);const t=this.createFeature(i,c);this.Base.dispatchEvent({type:q,address:c,feature:t,coordinate:i,bbox:l,place:e})}}createFeature(e){const t=new g.default(new m.default(e));return this.addLayer(),t.setStyle(this.options.featureStyle),t.setId(_(\"geocoder-ft-\")),this.getSource().addFeature(t),t}addressTemplate(e){const t=[];return e.name&&t.push(['<span class=\"',te.road,'\">{name}</span>'].join(\"\")),(e.road||e.building||e.house_number)&&t.push(['<span class=\"',te.road,'\">{building} {road} {house_number}</span>'].join(\"\")),(e.city||e.town||e.village)&&t.push(['<span class=\"',te.city,'\">{postcode} {city} {town} {village}</span>'].join(\"\")),(e.state||e.country)&&t.push(['<span class=\"',te.country,'\">{state} {country}</span>'].join(\"\")),D(t.join(\"<br>\"),e)}newProvider(){switch(this.options.provider){case E:return new J;case T:return new W;case N:return new K;case R:return new X;case A:return new Y;default:return this.options.provider}}expand(){F(this.els.input,te.spin),O(this.els.control,te.glass.expanded),window.setTimeout((()=>this.els.input.focus()),100),this.listenMapClick()}collapse(){this.els.input.value=\"\",this.els.input.blur(),O(this.els.reset,te.hidden),F(this.els.control,te.glass.expanded),this.clearResults()}listenMapClick(){if(this.registeredListeners.mapClick)return;const e=this,t=this.Base.getMap().getTargetElement();this.registeredListeners.mapClick=!0,t.addEventListener(\"click\",{handleEvent(s){e.clearResults(!0),t.removeEventListener(s.type,this,!1),e.registeredListeners.mapClick=!1}},!1)}clearResults(e){e&&this.options.targetType===L?this.collapse():function(e){for(;e.firstChild;)e.firstChild.remove()}(this.els.result)}getSource(){return this.layer.getSource()}addLayer(){let e=!1;const t=this.Base.getMap();t.getLayers().forEach((t=>{t===this.layer&&(e=!0)})),e||t.addLayer(this.layer)}}class re extends c.default{constructor(e=C,t={}){let s,r;I(\"string\"==typeof e,\"@param `type` should be string!\"),I(e===C||e===S,`@param 'type' should be '${C}'\\n      or '${S}'!`),I(\"object\"==typeof t,\"@param `options` should be object!\"),P.featureStyle=[new d.default({image:new u.default({scale:.7,src:\"//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png\"})})];const n=new H(t);if(e===C&&(s=n.els.container),super({element:s}),!(this instanceof re))return new re;this.options=function(e,t){const s={};return Object.keys(e).forEach((t=>{Object.prototype.hasOwnProperty.call(e,t)&&(s[t]=e[t])})),Object.keys(t).forEach((e=>{Object.prototype.hasOwnProperty.call(t,e)&&(s[e]=t[e])})),s}(P,t),this.container=s,e===C&&(r=new se(this,n.els),this.layer=r.layer)}getLayer(){return this.layer}getSource(){return this.getLayer().getSource()}setProvider(e){this.options.provider=e}setProviderKey(e){this.options.key=e}}return re}));\n//# sourceMappingURL=ol-geocoder.js.map\n","/*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\r\nimport ol_source_Vector from 'ol/source/Vector.js'\r\nimport ol_control_Control from 'ol/control/Control.js'\r\nimport ol_ext_element from '../util/element.js'\r\n\r\n/** Timeline control\r\n *\r\n * @constructor\r\n * @extends {ol.control.Control}\r\n * @fires select\r\n * @fires scroll\r\n * @fires collapse\r\n * @param {Object=} options Control options.\r\n *\t@param {String} options.className class of the control\r\n *\t@param {Array<ol.Feature>} options.features Features to show in the timeline\r\n *\t@param {ol.SourceImageOptions.vector} options.source class of the control\r\n *\t@param {Number} options.interval time interval length in ms or a text with a format d, h, mn, s (31 days = '31d'), default none\r\n *\t@param {String} options.maxWidth width of the time line in px, default 2000px\r\n *\t@param {String} options.minDate minimum date \r\n *\t@param {String} options.maxDate maximum date \r\n *\t@param {Number} options.minZoom Minimum zoom for the line, default .2\r\n *\t@param {Number} options.maxZoom Maximum zoom for the line, default 4\r\n *\t@param {boolean} options.zoomButton Are zoom buttons avaliable, default false\r\n *\t@param {function} options.getHTML a function that takes a feature and returns the html to display\r\n *\t@param {function} options.getFeatureDate a function that takes a feature and returns its date, default the date propertie\r\n *\t@param {function} options.endFeatureDate a function that takes a feature and returns its end date, default no end date\r\n *\t@param {String} options.graduation day|month to show month or day graduation, default show only years\r\n *\t@param {String} options.scrollTimeout Time in milliseconds to get a scroll event, default 15ms\r\n */\r\nvar ol_control_Timeline = class olcontrolTimeline extends ol_control_Control {\r\n  constructor(options) {\r\n\r\n    var element = ol_ext_element.create('DIV', {\r\n      className: (options.className || '') + ' ol-timeline'\r\n        + (options.target ? '' : ' ol-unselectable ol-control')\r\n        + (options.zoomButton ? ' ol-hasbutton' : '')\r\n    });\r\n\r\n    // Initialize\r\n    super({\r\n      element: element,\r\n      target: options.target\r\n    });\r\n\r\n    // Scroll div\r\n    this._scrollDiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-scroll',\r\n      parent: this.element\r\n    });\r\n\r\n    // Add a button bar\r\n    this._buttons = ol_ext_element.create('DIV', {\r\n      className: 'ol-buttons',\r\n      parent: this.element\r\n    });\r\n    // Zoom buttons\r\n    if (options.zoomButton) {\r\n      // Zoom in\r\n      this.addButton({\r\n        className: 'ol-zoom-in',\r\n        handleClick: function () {\r\n          var zoom = this.get('zoom');\r\n          if (zoom >= 1) {\r\n            zoom++;\r\n          } else {\r\n            zoom = Math.min(1, zoom + 0.1);\r\n          }\r\n          zoom = Math.round(zoom * 100) / 100;\r\n          this.refresh(zoom);\r\n        }.bind(this)\r\n      });\r\n      // Zoom out\r\n      this.addButton({\r\n        className: 'ol-zoom-out',\r\n        handleClick: function () {\r\n          var zoom = this.get('zoom');\r\n          if (zoom > 1) {\r\n            zoom--;\r\n          } else {\r\n            zoom -= 0.1;\r\n          }\r\n          zoom = Math.round(zoom * 100) / 100;\r\n          this.refresh(zoom);\r\n        }.bind(this)\r\n      });\r\n    }\r\n\r\n    // Draw center date\r\n    this._intervalDiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-center-date',\r\n      parent: this.element\r\n    });\r\n\r\n    // Remove selection\r\n    this.element.addEventListener('mouseover', function () {\r\n      if (this._select)\r\n        this._select.elt.classList.remove('ol-select');\r\n    }.bind(this));\r\n\r\n    // Trigger scroll event\r\n    var scrollListener = null;\r\n    this._scrollDiv.addEventListener('scroll', function () {\r\n      this._setScrollLeft();\r\n      if (scrollListener) {\r\n        clearTimeout(scrollListener);\r\n        scrollListener = null;\r\n      }\r\n      scrollListener = setTimeout(function () {\r\n        this.dispatchEvent({\r\n          type: 'scroll',\r\n          date: this.getDate(),\r\n          dateStart: this.getDate('start'),\r\n          dateEnd: this.getDate('end')\r\n        });\r\n      }.bind(this), options.scrollTimeout || 15);\r\n    }.bind(this));\r\n    // Magic to give \"live\" scroll events on touch devices\r\n    // this._scrollDiv.addEventListener('gesturechange', function() {});\r\n    // Scroll timeline\r\n    ol_ext_element.scrollDiv(this._scrollDiv, {\r\n      onmove: function (b) {\r\n        // Prevent selection on moving\r\n        this._moving = b;\r\n      }.bind(this)\r\n    });\r\n\r\n    this._tline = [];\r\n\r\n    // Parameters\r\n    this._scrollLeft = 0;\r\n    this.set('maxWidth', options.maxWidth || 2000);\r\n    this.set('minDate', options.minDate || Infinity);\r\n    this.set('maxDate', options.maxDate || -Infinity);\r\n    this.set('graduation', options.graduation);\r\n    this.set('minZoom', options.minZoom || .2);\r\n    this.set('maxZoom', options.maxZoom || 4);\r\n    this.setInterval(options.interval);\r\n    if (options.getHTML)\r\n      this._getHTML = options.getHTML;\r\n    if (options.getFeatureDate)\r\n      this._getFeatureDate = options.getFeatureDate;\r\n    if (options.endFeatureDate)\r\n      this._endFeatureDate = options.endFeatureDate;\r\n\r\n    // Feature source \r\n    this.setFeatures(options.features || options.source, options.zoom);\r\n  }\r\n  /**\r\n   * Set the map instance the control is associated with\r\n   * and add interaction attached to it to this map.\r\n   * @param {_ol_Map_} map The map instance.\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    this.refresh(this.get('zoom') || 1, true);\r\n  }\r\n  /** Add a button on the timeline\r\n   * @param {*} button\r\n   *  @param {string} button.className\r\n   *  @param {title} button.className\r\n   *  @param {Element|string} button.html Content of the element\r\n   *  @param {function} button.click a function called when the button is clicked\r\n   */\r\n  addButton(button) {\r\n    this.element.classList.add('ol-hasbutton');\r\n    ol_ext_element.create('BUTTON', {\r\n      className: button.className || undefined,\r\n      title: button.title,\r\n      html: button.html,\r\n      click: button.handleClick,\r\n      parent: this._buttons\r\n    });\r\n  }\r\n  /** Set an interval\r\n   * @param {number|string} length the interval length in ms or a farmatted text ie. end with y, 1d, h, mn, s (31 days = '31d'), default none\r\n   */\r\n  setInterval(length) {\r\n    if (typeof (length) === 'string') {\r\n      if (/s$/.test(length)) {\r\n        length = parseFloat(length) * 1000;\r\n      } else if (/mn$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 60;\r\n      } else if (/h$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600;\r\n      } else if (/d$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600 * 24;\r\n      } else if (/y$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600 * 24 * 365;\r\n      } else {\r\n        length = 0;\r\n      }\r\n    }\r\n    this.set('interval', length || 0);\r\n    if (length)\r\n      this.element.classList.add('ol-interval');\r\n    else\r\n      this.element.classList.remove('ol-interval');\r\n    this.refresh(this.get('zoom'));\r\n  }\r\n  /** Default html to show in the line\r\n   * @param {ol.Feature} feature\r\n   * @return {DOMElement|string}\r\n   * @private\r\n   */\r\n  _getHTML(feature) {\r\n    return feature.get('name') || '';\r\n  }\r\n  /** Default function to get the date of a feature, returns the date attribute\r\n   * @param {ol.Feature} feature\r\n   * @return {Data|string}\r\n   * @private\r\n   */\r\n  _getFeatureDate(feature) {\r\n    return (feature && feature.get) ? feature.get('date') : null;\r\n  }\r\n  /** Default function to get the end date of a feature, return undefined\r\n   * @param {ol.Feature} feature\r\n   * @return {Data|string}\r\n   * @private\r\n   */\r\n  _endFeatureDate( /* feature */) {\r\n    return undefined;\r\n  }\r\n  /** Is the line collapsed\r\n   * @return {boolean}\r\n   */\r\n  isCollapsed() {\r\n    return this.element.classList.contains('ol-collapsed');\r\n  }\r\n  /** Collapse the line\r\n   * @param {boolean} b\r\n   */\r\n  collapse(b) {\r\n    if (b)\r\n      this.element.classList.add('ol-collapsed');\r\n    else\r\n      this.element.classList.remove('ol-collapsed');\r\n    this.dispatchEvent({ type: 'collapse', collapsed: this.isCollapsed() });\r\n  }\r\n  /** Collapse the line\r\n   */\r\n  toggle() {\r\n    this.element.classList.toggle('ol-collapsed');\r\n    this.dispatchEvent({ type: 'collapse', collapsed: this.isCollapsed() });\r\n  }\r\n  /** Set the features to display in the timeline\r\n   * @param {Array<ol.Features>|ol.source.Vector} features An array of features or a vector source\r\n   * @param {number} zoom zoom to draw the line default 1\r\n   */\r\n  setFeatures(features, zoom) {\r\n    this._features = this._source = null;\r\n    if (features instanceof ol_source_Vector)\r\n      this._source = features;\r\n    else if (features instanceof Array)\r\n      this._features = features;\r\n    else\r\n      this._features = [];\r\n    this.refresh(zoom);\r\n  }\r\n  /**\r\n   * Get features\r\n   * @return {Array<ol.Feature>}\r\n   */\r\n  getFeatures() {\r\n    return this._features || this._source.getFeatures();\r\n  }\r\n  /**\r\n   * Refresh the timeline with new data\r\n   * @param {Number} zoom Zoom factor from 0.25 to 10, default 1\r\n   */\r\n  refresh(zoom, first) {\r\n    if (!this.getMap())\r\n      return;\r\n    if (!zoom)\r\n      zoom = this.get('zoom');\r\n    zoom = Math.min(this.get('maxZoom'), Math.max(this.get('minZoom'), zoom || 1));\r\n    this.set('zoom', zoom);\r\n    this._scrollDiv.innerHTML = '';\r\n    var features = this.getFeatures();\r\n    var d, d2;\r\n\r\n    // Get features sorted by date\r\n    var tline = this._tline = [];\r\n    features.forEach(function (f) {\r\n      if (d = this._getFeatureDate(f)) {\r\n        if (!(d instanceof Date)) {\r\n          d = new Date(d);\r\n        }\r\n        if (this._endFeatureDate) {\r\n          d2 = this._endFeatureDate(f);\r\n          if (!(d2 instanceof Date)) {\r\n            d2 = new Date(d2);\r\n          }\r\n        }\r\n        if (!isNaN(d)) {\r\n          tline.push({\r\n            date: d,\r\n            end: isNaN(d2) ? null : d2,\r\n            feature: f\r\n          });\r\n        }\r\n      }\r\n    }.bind(this));\r\n\r\n    tline.sort(function (a, b) {\r\n      return (a.date < b.date ? -1 : (a.date === b.date ? 0 : 1));\r\n    });\r\n\r\n    // Draw\r\n    var div = ol_ext_element.create('DIV', {\r\n      parent: this._scrollDiv\r\n    });\r\n\r\n    // Calculate width\r\n    var min = this._minDate = Math.min(this.get('minDate'), tline.length ? tline[0].date : Infinity);\r\n    var max = this._maxDate = Math.max(this.get('maxDate'), tline.length ? tline[tline.length - 1].date : -Infinity);\r\n    if (!isFinite(min))\r\n      this._minDate = min = new Date();\r\n    if (!isFinite(max))\r\n      this._maxDate = max = new Date();\r\n    var delta = (max - min);\r\n    var maxWidth = this.get('maxWidth');\r\n    var scale = this._scale = (delta > maxWidth ? maxWidth / delta : 1) * zoom;\r\n    // Leave 10px on right\r\n    min = this._minDate = this._minDate - 10 / scale;\r\n    delta = (max - min) * scale;\r\n    ol_ext_element.setStyle(div, {\r\n      width: delta,\r\n      maxWidth: 'unset'\r\n    });\r\n\r\n    // Draw time's bar\r\n    this._drawTime(div, min, max, scale);\r\n\r\n    // Set interval\r\n    if (this.get('interval')) {\r\n      ol_ext_element.setStyle(this._intervalDiv, { width: this.get('interval') * scale });\r\n    } else {\r\n      ol_ext_element.setStyle(this._intervalDiv, { width: '' });\r\n    }\r\n\r\n    // Draw features\r\n    var line = [];\r\n    var lineHeight = ol_ext_element.getStyle(this._scrollDiv, 'lineHeight');\r\n\r\n    // Wrapper\r\n    var fdiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-features',\r\n      parent: div\r\n    });\r\n\r\n    // Add features on the line\r\n    tline.forEach(function (f) {\r\n      var d = f.date;\r\n      var t = f.elt = ol_ext_element.create('DIV', {\r\n        className: 'ol-feature',\r\n        style: {\r\n          left: Math.round((d - min) * scale),\r\n        },\r\n        html: this._getHTML(f.feature),\r\n        parent: fdiv\r\n      });\r\n      // Prevent image dragging\r\n      var img = t.querySelectorAll('img');\r\n      for (var i = 0; i < img.length; i++) {\r\n        img[i].ondragstart = function () { return false; };\r\n      }\r\n\r\n      // Calculate image width\r\n      if (f.end) {\r\n        ol_ext_element.setStyle(t, {\r\n          minWidth: (f.end - d) * scale,\r\n          width: (f.end - d) * scale,\r\n          maxWidth: 'unset'\r\n        });\r\n      }\r\n      var left = ol_ext_element.getStyle(t, 'left');\r\n      // Select on click\r\n      t.addEventListener('click', function () {\r\n        if (!this._moving) {\r\n          this.dispatchEvent({ type: 'select', feature: f.feature });\r\n        }\r\n      }.bind(this));\r\n\r\n      // Find first free Y position\r\n      var pos, l;\r\n      for (pos = 0; l = line[pos]; pos++) {\r\n        if (left > l) {\r\n          break;\r\n        }\r\n      }\r\n      line[pos] = left + ol_ext_element.getStyle(t, 'width');\r\n      ol_ext_element.setStyle(t, { top: pos * lineHeight });\r\n    }.bind(this));\r\n    this._nbline = line.length;\r\n\r\n    if (first)\r\n      this.setDate(this._minDate, { anim: false, position: 'start' });\r\n    // Dispatch scroll event\r\n    this.dispatchEvent({\r\n      type: 'scroll',\r\n      date: this.getDate(),\r\n      dateStart: this.getDate('start'),\r\n      dateEnd: this.getDate('end')\r\n    });\r\n  }\r\n  /** Get offset given a date\r\n   * @param {Date} date\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getOffsetFromDate(date) {\r\n    return (date - this._minDate) * this._scale;\r\n  }\r\n  /** Get date given an offset\r\n   * @param {Date} date\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getDateFromOffset(offset) {\r\n    return offset / this._scale + this._minDate;\r\n  }\r\n  /** Set the current position\r\n   * @param {number} scrollLeft current position (undefined when scrolling)\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _setScrollLeft(scrollLeft) {\r\n    this._scrollLeft = scrollLeft;\r\n    if (scrollLeft !== undefined) {\r\n      this._scrollDiv.scrollLeft = scrollLeft;\r\n    }\r\n  }\r\n  /** Get the current position\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getScrollLeft() {\r\n    // Unset when scrolling\r\n    if (this._scrollLeft === undefined) {\r\n      return this._scrollDiv.scrollLeft;\r\n    } else {\r\n      // St by user\r\n      return this._scrollLeft;\r\n    }\r\n  }\r\n  /**\r\n   * Draw dates on line\r\n   * @private\r\n   */\r\n  _drawTime(div, min, max, scale) {\r\n    // Times div\r\n    var tdiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-times',\r\n      parent: div\r\n    });\r\n    var d, dt, month, dmonth;\r\n    var dx = ol_ext_element.getStyle(tdiv, 'left');\r\n    var heigth = ol_ext_element.getStyle(tdiv, 'height');\r\n    // Year\r\n    var year = (new Date(this._minDate)).getFullYear();\r\n    dt = ((new Date(0)).setFullYear(String(year)) - new Date(0).setFullYear(String(year - 1))) * scale;\r\n    var dyear = Math.round(2 * heigth / dt) + 1;\r\n    while (true) {\r\n      d = new Date(0).setFullYear(year);\r\n      if (d > this._maxDate)\r\n        break;\r\n      ol_ext_element.create('DIV', {\r\n        className: 'ol-time ol-year',\r\n        style: {\r\n          left: this._getOffsetFromDate(d) - dx\r\n        },\r\n        html: year,\r\n        parent: tdiv\r\n      });\r\n      year += dyear;\r\n    }\r\n    // Month\r\n    if (/day|month/.test(this.get('graduation'))) {\r\n      dt = ((new Date(0, 0, 1)).setFullYear(String(year)) - new Date(0, 0, 1).setFullYear(String(year - 1))) * scale;\r\n      dmonth = Math.max(1, Math.round(12 / Math.round(dt / heigth / 2)));\r\n      if (dmonth < 12) {\r\n        year = (new Date(this._minDate)).getFullYear();\r\n        month = dmonth + 1;\r\n        while (true) {\r\n          d = new Date(0, 0, 1);\r\n          d.setFullYear(year);\r\n          d.setMonth(month - 1);\r\n          if (d > this._maxDate)\r\n            break;\r\n          ol_ext_element.create('DIV', {\r\n            className: 'ol-time ol-month',\r\n            style: {\r\n              left: this._getOffsetFromDate(d) - dx\r\n            },\r\n            html: d.toLocaleDateString(undefined, { month: 'short' }),\r\n            parent: tdiv\r\n          });\r\n          month += dmonth;\r\n          if (month > 12) {\r\n            year++;\r\n            month = dmonth + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Day\r\n    if (this.get('graduation') === 'day') {\r\n      dt = (new Date(0, 1, 1) - new Date(0, 0, 1)) * scale;\r\n      var dday = Math.max(1, Math.round(31 / Math.round(dt / heigth / 2)));\r\n      if (dday < 31) {\r\n        year = (new Date(this._minDate)).getFullYear();\r\n        month = 0;\r\n        var day = dday;\r\n        while (true) {\r\n          d = new Date(0, 0, 1);\r\n          d.setFullYear(year);\r\n          d.setMonth(month);\r\n          d.setDate(day);\r\n          if (isNaN(d)) {\r\n            month++;\r\n            if (month > 12) {\r\n              month = 1;\r\n              year++;\r\n            }\r\n            day = dday;\r\n          } else {\r\n            if (d > this._maxDate)\r\n              break;\r\n            if (day > 1) {\r\n              var offdate = this._getOffsetFromDate(d);\r\n              if (this._getOffsetFromDate(new Date(year, month + 1, 1)) - offdate > heigth) {\r\n                ol_ext_element.create('DIV', {\r\n                  className: 'ol-time ol-day',\r\n                  style: {\r\n                    left: offdate - dx\r\n                  },\r\n                  html: day,\r\n                  parent: tdiv\r\n                });\r\n              }\r\n            }\r\n            year = d.getFullYear();\r\n            month = d.getMonth();\r\n            day = d.getDate() + dday;\r\n            if (day > new Date(year, month + 1, 0).getDate()) {\r\n              month++;\r\n              day = dday;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /** Center timeline on a date\r\n   * @param {Date|String|ol.feature} feature a date or a feature with a date\r\n   * @param {Object} options\r\n   *  @param {boolean} options.anim animate scroll\r\n   *  @param {string} options.position start, end or middle, default middle\r\n   */\r\n  setDate(feature, options) {\r\n    var date;\r\n    options = options || {};\r\n    // It's a date\r\n    if (feature instanceof Date) {\r\n      date = feature;\r\n    } else {\r\n      // Get date from Feature\r\n      if (this.getFeatures().indexOf(feature) >= 0) {\r\n        date = this._getFeatureDate(feature);\r\n      }\r\n      if (date && !(date instanceof Date)) {\r\n        date = new Date(date);\r\n      }\r\n      if (!date || isNaN(date)) {\r\n        date = new Date(String(feature));\r\n      }\r\n    }\r\n    if (!isNaN(date)) {\r\n      if (options.anim === false)\r\n        this._scrollDiv.classList.add('ol-move');\r\n      var scrollLeft = this._getOffsetFromDate(date);\r\n      if (options.position === 'start') {\r\n        scrollLeft += ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n      } else if (options.position === 'end') {\r\n        scrollLeft -= ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n      }\r\n      this._setScrollLeft(scrollLeft);\r\n      if (options.anim === false)\r\n        this._scrollDiv.classList.remove('ol-move');\r\n      if (feature) {\r\n        for (var i = 0, f; f = this._tline[i]; i++) {\r\n          if (f.feature === feature) {\r\n            f.elt.classList.add('ol-select');\r\n            this._select = f;\r\n          } else {\r\n            f.elt.classList.remove('ol-select');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /** Get round date (sticked to mn, hour day or month)\r\n   * @param {Date} d\r\n   * @param {string} stick sticking option to stick date to: 'mn', 'hour', 'day', 'month', default no stick\r\n   * @return {Date}\r\n   */\r\n  roundDate(d, stick) {\r\n    switch (stick) {\r\n      case 'mn': {\r\n        return new Date(this._roundTo(d, 60 * 1000));\r\n      }\r\n      case 'hour': {\r\n        return new Date(this._roundTo(d, 60 * 60 * 1000));\r\n      }\r\n      case 'day': {\r\n        return new Date(this._roundTo(d, 24 * 60 * 60 * 1000));\r\n      }\r\n      case 'month': {\r\n        d = new Date(this._roundTo(d, 24 * 60 * 60 * 1000));\r\n        if (d.getDate() > 15) {\r\n          d = new Date(d.setMonth(d.getMonth() + 1));\r\n        }\r\n        d = d.setDate(1);\r\n        return new Date(d);\r\n      }\r\n      default: return new Date(d);\r\n    }\r\n  }\r\n  /** Get the date of the center\r\n   * @param {string} position position to get 'start', 'end' or 'middle', default middle\r\n   * @param {string} stick sticking option to stick date to: 'mn', 'hour', 'day', 'month', default no stick\r\n   * @return {Date}\r\n   */\r\n  getDate(position, stick) {\r\n    var pos;\r\n    if (!stick)\r\n      stick = position;\r\n    switch (position) {\r\n      case 'start': {\r\n        if (this.get('interval')) {\r\n          pos = -ol_ext_element.getStyle(this._intervalDiv, 'width') / 2 + ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        } else {\r\n          pos = -ol_ext_element.outerWidth(this._scrollDiv) / 2 + ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        }\r\n        break;\r\n      }\r\n      case 'end': {\r\n        if (this.get('interval')) {\r\n          pos = ol_ext_element.getStyle(this._intervalDiv, 'width') / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        } else {\r\n          pos = ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        pos = 0;\r\n        break;\r\n      }\r\n    }\r\n    var d = this._getDateFromOffset(this._getScrollLeft() + pos);\r\n    d = this.roundDate(d, stick);\r\n    return new Date(d);\r\n  }\r\n  /** Round number to\r\n   * @param {number} d\r\n   * @param {number} r\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _roundTo(d, r) {\r\n    return Math.round(d / r) * r;\r\n  }\r\n  /** Get the start date of the control\r\n   * @return {Date}\r\n   */\r\n  getStartDate() {\r\n    return new Date(this.get('minDate'));\r\n  }\r\n  /** Get the end date of the control\r\n   * @return {Date}\r\n   */\r\n  getEndDate() {\r\n    return new Date(this.get('maxDate'));\r\n  }\r\n}\r\n\r\nexport default ol_control_Timeline","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true}\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {}\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      []\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  })\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  })\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/webgl/BaseTileRepresentation\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {import(\"../Tile.js\").default} BaseTileType\n */\n\n/**\n * @template {BaseTileType} TileType\n * @typedef {Object} TileRepresentationOptions\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\n\n/**\n * @classdesc\n * Base class for representing a tile in a webgl context\n * @template {import(\"../Tile.js\").default} TileType\n * @abstract\n */\nclass BaseTileRepresentation extends EventTarget {\n  /**\n   * @param {TileRepresentationOptions<TileType>} options The tile representation options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @type {TileType}\n     */\n    this.tile;\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.gutter_ = options.gutter || 0;\n\n    /**\n     * @type {import(\"../webgl/Helper.js\").default}\n     * @protected\n     */\n    this.helper_ = options.helper;\n\n    this.loaded = false;\n    this.ready = false;\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   */\n  setTile(tile) {\n    if (tile !== this.tile) {\n      if (this.tile) {\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n      this.tile = tile;\n      this.loaded = tile.getState() === TileState.LOADED;\n      if (this.loaded) {\n        this.uploadTile();\n      } else {\n        if (tile instanceof ImageTile) {\n          const image = tile.getImage();\n          if (image instanceof Image && !image.crossOrigin) {\n            image.crossOrigin = 'anonymous';\n          }\n        }\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n      }\n    }\n  }\n\n  /**\n   * @abstract\n   * @protected\n   */\n  uploadTile() {\n    abstract();\n  }\n\n  setReady() {\n    this.ready = true;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  handleTileChange_() {\n    if (this.tile.getState() === TileState.LOADED) {\n      this.loaded = true;\n      this.uploadTile();\n    }\n  }\n\n  disposeInternal() {\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n}\n\nexport default BaseTileRepresentation;\n","/**\n * @module ol/webgl/TileTexture\n */\n\nimport BaseTileRepresentation from './BaseTileRepresentation.js';\nimport DataTile, {asArrayLike, asImageLike} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport {ARRAY_BUFFER, STATIC_DRAW} from '../webgl.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n  const resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ImageLike} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n  bindAndConfigure(gl, texture, interpolate);\n\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").ArrayLike} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(\n  helper,\n  texture,\n  data,\n  size,\n  bandCount,\n  interpolate\n) {\n  const gl = helper.getGL();\n  let textureType;\n  let canInterpolate;\n  if (data instanceof Float32Array) {\n    textureType = gl.FLOAT;\n    helper.getExtension('OES_texture_float');\n    const extension = helper.getExtension('OES_texture_float_linear');\n    canInterpolate = extension !== null;\n  } else {\n    textureType = gl.UNSIGNED_BYTE;\n    canInterpolate = true;\n  }\n  bindAndConfigure(gl, texture, interpolate && canInterpolate);\n\n  const bytesPerRow = data.byteLength / size[1];\n  let unpackAlignment = 1;\n  if (bytesPerRow % 8 === 0) {\n    unpackAlignment = 8;\n  } else if (bytesPerRow % 4 === 0) {\n    unpackAlignment = 4;\n  } else if (bytesPerRow % 2 === 0) {\n    unpackAlignment = 2;\n  }\n\n  let format;\n  switch (bandCount) {\n    case 1: {\n      format = gl.LUMINANCE;\n      break;\n    }\n    case 2: {\n      format = gl.LUMINANCE_ALPHA;\n      break;\n    }\n    case 3: {\n      format = gl.RGB;\n      break;\n    }\n    case 4: {\n      format = gl.RGBA;\n      break;\n    }\n    default: {\n      throw new Error(`Unsupported number of bands: ${bandCount}`);\n    }\n  }\n\n  const oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    format,\n    size[0],\n    size[1],\n    0,\n    format,\n    textureType,\n    data\n  );\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n\n/**\n * @extends {BaseTileRepresentation<TileType>}\n */\nclass TileTexture extends BaseTileRepresentation {\n  /**\n   * @param {import(\"./BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options The tile texture options.\n   */\n  constructor(options) {\n    super(options);\n\n    /**\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures = [];\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.renderSize_ = toSize(\n      options.grid.getTileSize(options.tile.tileCoord[0])\n    );\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = NaN;\n\n    const coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n    coords.fromArray([\n      0, // P0\n      1,\n      1, // P1\n      1,\n      1, // P2\n      0,\n      0, // P3\n      0,\n    ]);\n    this.helper_.flushBufferData(coords);\n\n    /**\n     * @type {WebGLArrayBuffer}\n     */\n    this.coords = coords;\n\n    this.setTile(options.tile);\n  }\n\n  uploadTile() {\n    const helper = this.helper_;\n    const gl = helper.getGL();\n    const tile = this.tile;\n\n    this.textures.length = 0;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     */\n    let data;\n\n    if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n      data = tile.getImage();\n    } else {\n      data = tile.getData();\n    }\n\n    const image = asImageLike(data);\n    if (image) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      this.bandCount = 4;\n      uploadImageTexture(gl, texture, image, tile.interpolate);\n      this.setReady();\n      return;\n    }\n\n    data = asArrayLike(data);\n\n    const sourceTileSize = /** @type {DataTile} */ (tile).getSize();\n    const pixelSize = [\n      sourceTileSize[0] + 2 * this.gutter_,\n      sourceTileSize[1] + 2 * this.gutter_,\n    ];\n    const isFloat = data instanceof Float32Array;\n    const pixelCount = pixelSize[0] * pixelSize[1];\n    const DataType = isFloat ? Float32Array : Uint8Array;\n    const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n    const bytesPerRow = data.byteLength / pixelSize[1];\n\n    this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n    const textureCount = Math.ceil(this.bandCount / 4);\n\n    if (textureCount === 1) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n      uploadDataTexture(\n        helper,\n        texture,\n        data,\n        pixelSize,\n        this.bandCount,\n        tile.interpolate\n      );\n      this.setReady();\n      return;\n    }\n\n    const textureDataArrays = new Array(textureCount);\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = gl.createTexture();\n      this.textures.push(texture);\n\n      const bandCount =\n        textureIndex < textureCount - 1 ? 4 : ((this.bandCount - 1) % 4) + 1;\n      textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n    }\n\n    let dataIndex = 0;\n    let rowOffset = 0;\n    const colCount = pixelSize[0] * this.bandCount;\n    for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n      for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n        const dataValue = data[rowOffset + colIndex];\n\n        const pixelIndex = Math.floor(dataIndex / this.bandCount);\n        const bandIndex = colIndex % this.bandCount;\n        const textureIndex = Math.floor(bandIndex / 4);\n        const textureData = textureDataArrays[textureIndex];\n        const bandCount = textureData.length / pixelCount;\n        const textureBandIndex = bandIndex % 4;\n        textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n\n        ++dataIndex;\n      }\n      rowOffset += bytesPerRow / bytesPerElement;\n    }\n\n    for (let textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n      const texture = this.textures[textureIndex];\n      const textureData = textureDataArrays[textureIndex];\n      const bandCount = textureData.length / pixelCount;\n      uploadDataTexture(\n        helper,\n        texture,\n        textureData,\n        pixelSize,\n        bandCount,\n        tile.interpolate\n      );\n    }\n\n    this.setReady();\n  }\n\n  disposeInternal() {\n    const gl = this.helper_.getGL();\n    this.helper_.deleteBuffer(this.coords);\n    for (let i = 0; i < this.textures.length; ++i) {\n      gl.deleteTexture(this.textures[i]);\n    }\n    this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ImageLike} image The image.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {Uint8ClampedArray|null} The data.\n   * @private\n   */\n  getImagePixelData_(image, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    const sourceWidth = image.width;\n    const sourceHeight = image.height;\n\n    const sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n    const sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    let data;\n    try {\n      pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../DataTile.js\").ArrayLike} data The data.\n   * @param {import(\"../size.js\").Size} sourceSize The size.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   * @private\n   */\n  getArrayPixelData_(data, sourceSize, renderCol, renderRow) {\n    const gutter = this.gutter_;\n    const renderWidth = this.renderSize_[0];\n    const renderHeight = this.renderSize_[1];\n\n    const sourceWidthWithoutGutter = sourceSize[0];\n    const sourceHeightWithoutGutter = sourceSize[1];\n    const sourceWidth = sourceWidthWithoutGutter + 2 * gutter;\n    const sourceHeight = sourceHeightWithoutGutter + 2 * gutter;\n\n    const sourceCol =\n      gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n\n    const sourceRow =\n      gutter +\n      Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n\n    if (data instanceof DataView) {\n      const bytesPerPixel = data.byteLength / (sourceWidth * sourceHeight);\n      const offset = bytesPerPixel * (sourceRow * sourceWidth + sourceCol);\n      const buffer = data.buffer.slice(offset, offset + bytesPerPixel);\n      return new DataView(buffer);\n    }\n\n    const offset = this.bandCount * (sourceRow * sourceWidth + sourceCol);\n    return data.slice(offset, offset + this.bandCount);\n  }\n\n  /**\n   * Get data for a pixel.  If the tile is not loaded, null is returned.\n   * @param {number} renderCol The column index (in rendered tile space).\n   * @param {number} renderRow The row index (in rendered tile space).\n   * @return {import(\"../DataTile.js\").ArrayLike|null} The data.\n   */\n  getPixelData(renderCol, renderRow) {\n    if (!this.loaded) {\n      return null;\n    }\n\n    if (this.tile instanceof DataTile) {\n      const data = this.tile.getData();\n      const arrayData = asArrayLike(data);\n      if (arrayData) {\n        const sourceSize = this.tile.getSize();\n        return this.getArrayPixelData_(\n          arrayData,\n          sourceSize,\n          renderCol,\n          renderRow\n        );\n      }\n      return this.getImagePixelData_(asImageLike(data), renderCol, renderRow);\n    }\n\n    return this.getImagePixelData_(this.tile.getImage(), renderCol, renderRow);\n  }\n}\n\nexport default TileTexture;\n","/**\n * @module ol/renderer/webgl/TileLayerBase\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {abstract, getUid} from '../../util.js';\nimport {create as createMat4} from '../../vec/mat4.js';\nimport {\n  createOrUpdate as createTileCoord,\n  getKey as getTileCoordKey,\n} from '../../tilecoord.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {descending} from '../../array.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  TILE_TRANSFORM: 'u_tileTransform',\n  TRANSITION_ALPHA: 'u_transitionAlpha',\n  DEPTH: 'u_depth',\n  RENDER_EXTENT: 'u_renderExtent', // intersection of layer, source, and view extent\n  RESOLUTION: 'u_resolution',\n  ZOOM: 'u_zoom',\n  GLOBAL_ALPHA: 'u_globalAlpha',\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  SCREEN_TO_WORLD_MATRIX: 'u_screenToWorldMatrix',\n};\n\n/**\n * @type {Object<string, boolean>}\n */\nconst empty = {};\n\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n  return 1 / (z + 2);\n}\n\n/**\n * @typedef {import(\"../../webgl/BaseTileRepresentation.js\").default<import(\"../../Tile.js\").default>} AbstractTileRepresentation\n */\n/**\n * @typedef {Object} TileRepresentationLookup\n * @property {Set<string>} tileIds The set of tile ids in the lookup.\n * @property {Object<number, Set<AbstractTileRepresentation>>} representationsByZ Tile representations by zoom level.\n */\n\n/**\n * @return {TileRepresentationLookup} A new tile representation lookup.\n */\nexport function newTileRepresentationLookup() {\n  return {tileIds: new Set(), representationsByZ: {}};\n}\n\n/**\n * Check if a tile is already in the tile representation lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @return {boolean} The tile is already in the lookup.\n */\nfunction lookupHasTile(tileRepresentationLookup, tile) {\n  return tileRepresentationLookup.tileIds.has(getUid(tile));\n}\n\n/**\n * Add a tile representation to the lookup.\n * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of tile representations by zoom level.\n * @param {AbstractTileRepresentation} tileRepresentation A tile representation.\n * @param {number} z The zoom level.\n */\nfunction addTileRepresentationToLookup(\n  tileRepresentationLookup,\n  tileRepresentation,\n  z\n) {\n  const representationsByZ = tileRepresentationLookup.representationsByZ;\n  if (!(z in representationsByZ)) {\n    representationsByZ[z] = new Set();\n  }\n  representationsByZ[z].add(tileRepresentation);\n  tileRepresentationLookup.tileIds.add(getUid(tileRepresentation.tile));\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection)\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\nexport function getCacheKey(source, tileCoord) {\n  return `${source.getKey()},${getTileCoordKey(tileCoord)}`;\n}\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {number} [cacheSize=512] The tile representation cache size.\n * @property {Array<import('./Layer.js').PostProcessesOptions>} [postProcesses] Post-processes definitions.\n */\n\n/**\n * @typedef {import(\"../../layer/BaseTile.js\").default} BaseLayerType\n */\n\n/**\n * @classdesc\n * Base WebGL renderer for tile layers.\n * @template {BaseLayerType} LayerType\n * @template {import(\"../../Tile.js\").default} TileType\n * @template {import(\"../../webgl/BaseTileRepresentation.js\").default<TileType>} TileRepresentation\n * @extends {WebGLLayerRenderer<LayerType>}\n */\nclass WebGLBaseTileLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, {\n      uniforms: options.uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * This transform converts representation coordinates to screen coordinates.\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.tileTransform_ = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.tempMat4 = createMat4();\n\n    /**\n     * @type {import(\"../../TileRange.js\").default}\n     * @private\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    /**\n     * @type {import(\"../../size.js\").Size}\n     * @private\n     */\n    this.tempSize_ = [0, 0];\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<TileRepresentation>}\n     * @protected\n     */\n    this.tileRepresentationCache = new LRUCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.projection_ = undefined;\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset({\n      uniforms: options.uniforms,\n    });\n  }\n\n  /**\n   * @param {TileType} tile Tile.\n   * @return {boolean} Tile is drawable.\n   * @private\n   */\n  isDrawableTile_(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * Determine whether renderFrame should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrameInternal(frameState) {\n    if (!this.projection_) {\n      this.projection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.projection_) {\n      this.clearCache();\n      this.projection_ = frameState.viewState.projection;\n    }\n\n    const layer = this.getLayer();\n    const source = layer.getRenderSource();\n    if (!source) {\n      return false;\n    }\n\n    if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n      return false;\n    }\n    return source.getState() === 'ready';\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/BaseTileRepresentation.js\").TileRepresentationOptions<TileType>} options tile representation options\n   * @return {TileRepresentation} A new tile representation\n   * @protected\n   */\n  createTileRepresentation(options) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup The zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(\n    frameState,\n    extent,\n    initialZ,\n    tileRepresentationLookup,\n    preload\n  ) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileRepresentationCache = this.tileRepresentationCache;\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0)\n        ),\n        tileSource.zDirection\n      )\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n          const cacheKey = getCacheKey(tileSource, tileCoord);\n\n          /** @type {TileRepresentation} */\n          let tileRepresentation;\n\n          /** @type {TileType} */\n          let tile;\n\n          if (tileRepresentationCache.containsKey(cacheKey)) {\n            tileRepresentation = tileRepresentationCache.get(cacheKey);\n            tile = tileRepresentation.tile;\n          }\n          if (\n            !tileRepresentation ||\n            tileRepresentation.tile.key !== tileSource.getKey()\n          ) {\n            tile = tileSource.getTile(\n              z,\n              x,\n              y,\n              frameState.pixelRatio,\n              viewState.projection\n            );\n          }\n\n          if (lookupHasTile(tileRepresentationLookup, tile)) {\n            continue;\n          }\n\n          if (!tileRepresentation) {\n            tileRepresentation = this.createTileRepresentation({\n              tile: tile,\n              grid: tileGrid,\n              helper: this.helper,\n              gutter: gutter,\n            });\n            tileRepresentationCache.set(cacheKey, tileRepresentation);\n          } else {\n            if (this.isDrawableTile_(tile)) {\n              tileRepresentation.setTile(tile);\n            } else {\n              const interimTile = /** @type {TileType} */ (\n                tile.getInterimTile()\n              );\n              tileRepresentation.setTile(interimTile);\n            }\n          }\n\n          addTileRepresentationToLookup(\n            tileRepresentationLookup,\n            tileRepresentation,\n            z\n          );\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} tilesWithAlpha True if at least one of the rendered tiles has alpha\n   * @protected\n   */\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    this.helper.prepareDraw(this.frameState, !tilesWithAlpha, true);\n  }\n\n  /**\n   * @param {TileRepresentation} tileRepresentation Tile representation\n   * @param {import(\"../../transform.js\").Transform} tileTransform Tile transform\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state\n   * @param {import(\"../../extent.js\").Extent} renderExtent Render extent\n   * @param {number} tileResolution Tile resolution\n   * @param {import(\"../../size.js\").Size} tileSize Tile size\n   * @param {import(\"../../coordinate.js\").Coordinate} tileOrigin Tile origin\n   * @param {import(\"../../extent.js\").Extent} tileExtent tile Extent\n   * @param {number} depth Depth\n   * @param {number} gutter Gutter\n   * @param {number} alpha Alpha\n   * @protected\n   */\n  renderTile(\n    tileRepresentation,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {}\n\n  drawTile_(\n    frameState,\n    tileRepresentation,\n    tileZ,\n    gutter,\n    extent,\n    alphaLookup,\n    tileGrid\n  ) {\n    if (!tileRepresentation.loaded) {\n      return;\n    }\n    const tile = tileRepresentation.tile;\n    const tileCoord = tile.tileCoord;\n    const tileCoordKey = getTileCoordKey(tileCoord);\n    const alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n\n    const tileResolution = tileGrid.getResolution(tileZ);\n    const tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n    const tileOrigin = tileGrid.getOrigin(tileZ);\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord);\n    // tiles with alpha are rendered last to allow blending\n    const depth = alpha < 1 ? -1 : depthForZ(tileZ);\n    if (alpha < 1) {\n      frameState.animate = true;\n    }\n\n    const viewState = frameState.viewState;\n    const centerX = viewState.center[0];\n    const centerY = viewState.center[1];\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n\n    const centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n    const centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n\n    const tileScale = viewState.resolution / tileResolution;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    resetTransform(this.tileTransform_);\n    scaleTransform(\n      this.tileTransform_,\n      2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter),\n      -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter)\n    );\n    rotateTransform(this.tileTransform_, viewState.rotation);\n    scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n    translateTransform(\n      this.tileTransform_,\n      (tileSize[0] * (tileCenterI - centerI) - gutter) / tileWidthWithGutter,\n      (tileSize[1] * (tileCenterJ - centerJ) - gutter) / tileHeightWithGutter\n    );\n\n    this.renderTile(\n      /** @type {TileRepresentation} */ (tileRepresentation),\n      this.tileTransform_,\n      frameState,\n      extent,\n      tileResolution,\n      tileSize,\n      tileOrigin,\n      tileExtent,\n      depth,\n      gutter,\n      alpha\n    );\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.frameState = frameState;\n    this.renderComplete = true;\n    const gl = this.helper.getGL();\n    this.preRender(gl, frameState);\n\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const gutter = tileSource.getGutterForProjection(viewState.projection);\n    const extent = getRenderExtent(frameState, frameState.extent);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    /**\n     * @type {TileRepresentationLookup}\n     */\n    const tileRepresentationLookup = newTileRepresentationLookup();\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(\n        frameState,\n        nextExtent,\n        targetZ,\n        tileRepresentationLookup,\n        preload\n      );\n    }\n\n    this.enqueueTiles(frameState, extent, z, tileRepresentationLookup, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          extent,\n          z - 1,\n          tileRepresentationLookup,\n          preload - 1\n        );\n      }, 0);\n    }\n\n    /**\n     * A lookup of alpha values for tiles at the target rendering resolution\n     * for tiles that are in transition.  If a tile coord key is absent from\n     * this lookup, the tile should be rendered at alpha 1.\n     * @type {Object<string, number>}\n     */\n    const alphaLookup = {};\n\n    const uid = getUid(this);\n    const time = frameState.time;\n    let blend = false;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tileRepresentation of tileRepresentationLookup\n      .representationsByZ[z]) {\n      const tile = tileRepresentation.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileRepresentation.loaded) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n        blend = true;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        alphaLookup[tileCoordKey] = alpha;\n      }\n      this.renderComplete = false;\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tileRepresentationLookup\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tileRepresentationLookup\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    this.beforeTilesRender(frameState, blend);\n\n    const representationsByZ = tileRepresentationLookup.representationsByZ;\n    const zs = Object.keys(representationsByZ).map(Number).sort(descending);\n    for (let j = 0, jj = zs.length; j < jj; ++j) {\n      const tileZ = zs[j];\n      for (const tileRepresentation of representationsByZ[tileZ]) {\n        const tileCoord = tileRepresentation.tile.tileCoord;\n        const tileCoordKey = getTileCoordKey(tileCoord);\n        if (tileCoordKey in alphaLookup) {\n          continue;\n        }\n\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          tileZ,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    for (const tileRepresentation of representationsByZ[z]) {\n      const tileCoord = tileRepresentation.tile.tileCoord;\n      const tileCoordKey = getTileCoordKey(tileCoord);\n      if (tileCoordKey in alphaLookup) {\n        this.drawTile_(\n          frameState,\n          tileRepresentation,\n          z,\n          gutter,\n          extent,\n          alphaLookup,\n          tileGrid\n        );\n      }\n    }\n\n    this.helper.finalizeDraw(\n      frameState,\n      this.dispatchPreComposeEvent,\n      this.dispatchPostComposeEvent\n    );\n\n    const canvas = this.helper.getCanvas();\n\n    const tileRepresentationCache = this.tileRepresentationCache;\n    while (tileRepresentationCache.canExpireCache()) {\n      const tileRepresentation = tileRepresentationCache.pop();\n      tileRepresentation.dispose();\n    }\n\n    // TODO: let the renderers manage their own cache instead of managing the source cache\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function (map, frameState) {\n      tileSource.updateCacheSize(0.1, frameState.viewState.projection);\n      tileSource.expireCache(frameState.viewState.projection, empty);\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    this.postRender(gl, frameState);\n    return canvas;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile representation lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileRepresentationLookup} tileRepresentationLookup Lookup of\n   * tile representations by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tileRepresentationLookup) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileRepresentationCache = this.tileRepresentationCache;\n    const source = this.getLayer().getRenderSource();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, [altZ, x, y]);\n        let loaded = false;\n        if (tileRepresentationCache.containsKey(cacheKey)) {\n          const tileRepresentation = tileRepresentationCache.get(cacheKey);\n          if (\n            tileRepresentation.loaded &&\n            !lookupHasTile(tileRepresentationLookup, tileRepresentation.tile)\n          ) {\n            addTileRepresentationToLookup(\n              tileRepresentationLookup,\n              tileRepresentation,\n              altZ\n            );\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  clearCache() {\n    const tileRepresentationCache = this.tileRepresentationCache;\n    tileRepresentationCache.forEach((tileRepresentation) =>\n      tileRepresentation.dispose()\n    );\n    tileRepresentationCache.clear();\n  }\n\n  removeHelper() {\n    if (this.helper) {\n      this.clearCache();\n    }\n\n    super.removeHelper();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    super.disposeInternal();\n    delete this.frameState;\n  }\n}\n\nexport default WebGLBaseTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLBaseTileLayerRenderer, {\n  Uniforms as BaseUniforms,\n  getCacheKey,\n} from './TileLayerBase.js';\nimport {AttributeType} from '../../webgl/Helper.js';\nimport {ELEMENT_ARRAY_BUFFER, STATIC_DRAW} from '../../webgl.js';\nimport {apply as applyTransform} from '../../transform.js';\nimport {\n  boundingExtent,\n  containsCoordinate,\n  getIntersection,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {fromTransform as mat4FromTransform} from '../../vec/mat4.js';\nimport {toSize} from '../../size.js';\n\nexport const Uniforms = {\n  ...BaseUniforms,\n  TILE_TEXTURE_ARRAY: 'u_tileTextures',\n  TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n  TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n  TEXTURE_RESOLUTION: 'u_textureResolution', // map units per texture pixel\n  TEXTURE_ORIGIN_X: 'u_textureOriginX', // map x coordinate of left edge of texture\n  TEXTURE_ORIGIN_Y: 'u_textureOriginY', // map y coordinate of top edge of texture\n};\n\nexport const Attributes = {\n  TEXTURE_COORD: 'a_textureCoord',\n};\n\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nconst attributeDescriptions = [\n  {\n    name: Attributes.TEXTURE_COORD,\n    size: 2,\n    type: AttributeType.FLOAT,\n  },\n];\n\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").TileType} TileTextureType\n */\n/**\n * @typedef {import(\"../../webgl/TileTexture.js\").default} TileTextureRepresentation\n */\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLBaseTileLayerRenderer<LayerType, TileTextureType, TileTextureRepresentation>}\n * @api\n */\nclass WebGLTileLayerRenderer extends WebGLBaseTileLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} options Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer, options);\n\n    /**\n     * @type {WebGLProgram}\n     * @private\n     */\n    this.program_;\n\n    /**\n     * @private\n     */\n    this.vertexShader_ = options.vertexShader;\n\n    /**\n     * @private\n     */\n    this.fragmentShader_ = options.fragmentShader;\n\n    /**\n     * Tiles are rendered as a quad with the following structure:\n     *\n     *  [P3]---------[P2]\n     *   |`           |\n     *   |  `     B   |\n     *   |    `       |\n     *   |      `     |\n     *   |   A    `   |\n     *   |          ` |\n     *  [P0]---------[P1]\n     *\n     * Triangle A: P0, P1, P3\n     * Triangle B: P1, P2, P3\n     *\n     * @private\n     */\n    this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n    this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n\n    /**\n     * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n     * @private\n     */\n    this.paletteTextures_ = options.paletteTextures || [];\n  }\n\n  /**\n   * @param {Options} options Options.\n   */\n  reset(options) {\n    super.reset(options);\n\n    this.vertexShader_ = options.vertexShader;\n    this.fragmentShader_ = options.fragmentShader;\n\n    if (this.helper) {\n      this.program_ = this.helper.getProgram(\n        this.fragmentShader_,\n        this.vertexShader_\n      );\n    }\n  }\n\n  afterHelperCreated() {\n    this.program_ = this.helper.getProgram(\n      this.fragmentShader_,\n      this.vertexShader_\n    );\n    this.helper.flushBufferData(this.indices_);\n  }\n\n  createTileRepresentation(options) {\n    return new TileTexture(options);\n  }\n\n  beforeTilesRender(frameState, tilesWithAlpha) {\n    super.beforeTilesRender(frameState, tilesWithAlpha);\n    this.helper.useProgram(this.program_, frameState);\n  }\n\n  renderTile(\n    tileTexture,\n    tileTransform,\n    frameState,\n    renderExtent,\n    tileResolution,\n    tileSize,\n    tileOrigin,\n    tileExtent,\n    depth,\n    gutter,\n    alpha\n  ) {\n    const gl = this.helper.getGL();\n    this.helper.bindBuffer(tileTexture.coords);\n    this.helper.bindBuffer(this.indices_);\n    this.helper.enableAttributes(attributeDescriptions);\n\n    let textureSlot = 0;\n    while (textureSlot < tileTexture.textures.length) {\n      const uniformName = `${Uniforms.TILE_TEXTURE_ARRAY}[${textureSlot}]`;\n      this.helper.bindTexture(\n        tileTexture.textures[textureSlot],\n        textureSlot,\n        uniformName\n      );\n      ++textureSlot;\n    }\n\n    for (\n      let paletteIndex = 0;\n      paletteIndex < this.paletteTextures_.length;\n      ++paletteIndex\n    ) {\n      const paletteTexture = this.paletteTextures_[paletteIndex];\n      const texture = paletteTexture.getTexture(gl);\n      this.helper.bindTexture(texture, textureSlot, paletteTexture.name);\n      ++textureSlot;\n    }\n\n    const viewState = frameState.viewState;\n\n    const tileWidthWithGutter = tileSize[0] + 2 * gutter;\n    const tileHeightWithGutter = tileSize[1] + 2 * gutter;\n\n    const tile = tileTexture.tile;\n    const tileCoord = tile.tileCoord;\n\n    const tileCenterI = tileCoord[1];\n    const tileCenterJ = tileCoord[2];\n\n    this.helper.setUniformMatrixValue(\n      Uniforms.TILE_TRANSFORM,\n      mat4FromTransform(this.tempMat4, tileTransform)\n    );\n\n    this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n    this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n\n    let gutterExtent = renderExtent;\n    if (gutter > 0) {\n      gutterExtent = tileExtent;\n      getIntersection(gutterExtent, renderExtent, gutterExtent);\n    }\n    this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n\n    this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n    this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_WIDTH,\n      tileWidthWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_PIXEL_HEIGHT,\n      tileHeightWithGutter\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_RESOLUTION,\n      tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_X,\n      tileOrigin[0] +\n        tileCenterI * tileSize[0] * tileResolution -\n        gutter * tileResolution\n    );\n    this.helper.setUniformFloatValue(\n      Uniforms.TEXTURE_ORIGIN_Y,\n      tileOrigin[1] -\n        tileCenterJ * tileSize[1] * tileResolution +\n        gutter * tileResolution\n    );\n\n    this.helper.drawElements(0, this.indices_.getSize());\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n   */\n  getData(pixel) {\n    const gl = this.helper.getGL();\n    if (!gl) {\n      return null;\n    }\n\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const viewState = frameState.viewState;\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (\n        !containsCoordinate(\n          fromUserExtent(layerExtent, viewState.projection),\n          coordinate\n        )\n      ) {\n        return null;\n      }\n    }\n\n    // determine last source suitable for rendering at coordinate\n    const sources = layer.getSources(\n      boundingExtent([coordinate]),\n      viewState.resolution\n    );\n    let i, source, tileGrid;\n    for (i = sources.length - 1; i >= 0; --i) {\n      source = sources[i];\n      if (source.getState() === 'ready') {\n        tileGrid = source.getTileGridForProjection(viewState.projection);\n        if (source.getWrapX()) {\n          break;\n        }\n        const gridExtent = tileGrid.getExtent();\n        if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n          break;\n        }\n      }\n    }\n    if (i < 0) {\n      return null;\n    }\n\n    const tileTextureCache = this.tileRepresentationCache;\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const cacheKey = getCacheKey(source, tileCoord);\n      if (!tileTextureCache.containsKey(cacheKey)) {\n        continue;\n      }\n      const tileTexture = tileTextureCache.get(cacheKey);\n      const tile = tileTexture.tile;\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tile.getState() === TileState.EMPTY\n      ) {\n        return null;\n      }\n      if (!tileTexture.loaded) {\n        continue;\n      }\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col =\n        (coordinate[0] - tileOrigin[0]) / tileResolution -\n        tileCoord[1] * tileSize[0];\n\n      const row =\n        (tileOrigin[1] - coordinate[1]) / tileResolution -\n        tileCoord[2] * tileSize[1];\n\n      return tileTexture.getPixelData(col, row);\n    }\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    const helper = this.helper;\n    if (helper) {\n      const gl = helper.getGL();\n      gl.deleteProgram(this.program_);\n      delete this.program_;\n      helper.deleteBuffer(this.indices_);\n    }\n    super.disposeInternal();\n    delete this.indices_;\n  }\n}\n\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/webgl/PaletteTexture\n */\n\nclass PaletteTexture {\n  /**\n   * @param {string} name The name of the texture.\n   * @param {Uint8Array} data The texture data.\n   */\n  constructor(name, data) {\n    this.name = name;\n    this.data = data;\n\n    /**\n     * @type {WebGLTexture}\n     * @private\n     */\n    this.texture_ = null;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl Rendering context.\n   * @return {WebGLTexture} The texture.\n   */\n  getTexture(gl) {\n    if (!this.texture_) {\n      const texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,\n        gl.RGBA,\n        this.data.length / 4,\n        1,\n        0,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data\n      );\n      this.texture_ = texture;\n    }\n    return this.texture_;\n  }\n}\n\nexport default PaletteTexture;\n","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\n\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport {Uniforms} from '../renderer/webgl/TileLayer.js';\nimport {asArray, fromString, isStringColor} from '../color.js';\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport const ValueTypes = {\n  NUMBER: 0b00001,\n  STRING: 0b00010,\n  COLOR: 0b00100,\n  BOOLEAN: 0b01000,\n  NUMBER_ARRAY: 0b10000,\n  ANY: 0b11111,\n  NONE: 0,\n};\n\n/**\n * @param {string} typeHint Type hint\n * @return {ValueTypes} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return ValueTypes.STRING;\n    case 'color':\n      return ValueTypes.COLOR;\n    case 'number':\n      return ValueTypes.NUMBER;\n    case 'boolean':\n      return ValueTypes.BOOLEAN;\n    case 'number[]':\n      return ValueTypes.NUMBER_ARRAY;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes): string} toGlsl Returns a GLSL-compatible string\n * given a parsing context, an array of arguments and an expected type.\n * Note: the expected type can be a combination such as ValueTypes.NUMBER | ValueTypes.STRING or ValueTypes.ANY for instance\n */\n\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport const Operators = {};\n\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n  if (typeof value === 'number') {\n    return ValueTypes.NUMBER;\n  }\n  if (typeof value === 'boolean') {\n    return ValueTypes.BOOLEAN;\n  }\n  if (typeof value === 'string') {\n    if (isStringColor(value)) {\n      return ValueTypes.COLOR | ValueTypes.STRING;\n    }\n    return ValueTypes.STRING;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error(`Unhandled value type: ${JSON.stringify(value)}`);\n  }\n  const valueArr = /** @type {Array<*>} */ (value);\n  const onlyNumbers = valueArr.every(function (v) {\n    return typeof v === 'number';\n  });\n  if (onlyNumbers) {\n    if (valueArr.length === 3 || valueArr.length === 4) {\n      return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n    }\n    return ValueTypes.NUMBER_ARRAY;\n  }\n  if (typeof valueArr[0] !== 'string') {\n    throw new Error(\n      `Expected an expression operator but received: ${JSON.stringify(\n        valueArr\n      )}`\n    );\n  }\n  const operator = Operators[valueArr[0]];\n  if (operator === undefined) {\n    throw new Error(\n      `Unrecognized expression operator: ${JSON.stringify(valueArr)}`\n    );\n  }\n  return operator.getReturnType(valueArr.slice(1));\n}\n\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n  return Math.log2(valueType) % 1 === 0;\n}\n\n/**\n * Print types as a readable string\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {string} Types\n */\nfunction printTypes(valueType) {\n  const result = [];\n  if ((valueType & ValueTypes.NUMBER) > 0) {\n    result.push('number');\n  }\n  if ((valueType & ValueTypes.COLOR) > 0) {\n    result.push('color');\n  }\n  if ((valueType & ValueTypes.BOOLEAN) > 0) {\n    result.push('boolean');\n  }\n  if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n    result.push('number[]');\n  }\n  if ((valueType & ValueTypes.STRING) > 0) {\n    result.push('string');\n  }\n  return result.length > 0 ? result.join(', ') : '(no type)';\n}\n\n/**\n * @typedef {Object} ParsingContextExternal\n * @property {string} name Name, unprefixed\n * @property {ValueTypes} type One of the value types constants\n * @property {function(import(\"../Feature.js\").FeatureLike): *} [callback] Function used for computing the attribute value;\n *   if undefined, `feature.get(attribute.name)` will be used\n */\n\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<ParsingContextExternal>} variables External variables used in the expression\n * @property {Array<ParsingContextExternal>} attributes External attributes used in the expression\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n * @property {import(\"../style/literal\").LiteralStyle} style The style being parsed\n */\n\n/**\n * @param {string} operator Operator\n * @param {ParsingContext} context Parsing context\n * @return {string} A function name based on the operator, unique in the given context\n */\nfunction computeOperatorFunctionName(operator, context) {\n  return `operator_${operator}_${Object.keys(context.functions).length}`;\n}\n\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n  const s = v.toString();\n  return s.includes('.') ? s : s + '.0';\n}\n\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n  if (array.length < 2 || array.length > 4) {\n    throw new Error(\n      '`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.'\n    );\n  }\n  return `vec${array.length}(${array.map(numberToGlsl).join(', ')})`;\n}\n\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n  const array = asArray(color);\n  const alpha = array.length > 3 ? array[3] : 1;\n  // all components are premultiplied with alpha value\n  return arrayToGlsl([\n    (array[0] / 255) * alpha,\n    (array[1] / 255) * alpha,\n    (array[2] / 255) * alpha,\n    alpha,\n  ]);\n}\n\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n  if (context.stringLiteralsMap[string] === undefined) {\n    context.stringLiteralsMap[string] = Object.keys(\n      context.stringLiteralsMap\n    ).length;\n  }\n  return context.stringLiteralsMap[string];\n}\n\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n  return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [expectedType] Expected final type (can be several types combined)\n * If omitted, defaults to ValueTypes.NUMBER\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, expectedType) {\n  const returnType =\n    expectedType !== undefined ? expectedType : ValueTypes.NUMBER;\n  // operator\n  if (Array.isArray(value) && typeof value[0] === 'string') {\n    const operator = Operators[value[0]];\n    if (operator === undefined) {\n      throw new Error(\n        `Unrecognized expression operator: ${JSON.stringify(value)}`\n      );\n    }\n    return operator.toGlsl(context, value.slice(1), returnType);\n  }\n\n  const possibleType = getValueType(value) & returnType;\n  assertNotEmptyType(value, possibleType, '');\n\n  if ((possibleType & ValueTypes.NUMBER) > 0) {\n    return numberToGlsl(/** @type {number} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.BOOLEAN) > 0) {\n    return value.toString();\n  }\n\n  if ((possibleType & ValueTypes.STRING) > 0) {\n    return stringToGlsl(context, value.toString());\n  }\n\n  if ((possibleType & ValueTypes.COLOR) > 0) {\n    return colorToGlsl(/** @type {Array<number> | string} */ (value));\n  }\n\n  if ((possibleType & ValueTypes.NUMBER_ARRAY) > 0) {\n    return arrayToGlsl(/** @type {Array<number>} */ (value));\n  }\n\n  throw new Error(\n    `Unexpected expression ${value} (expected type ${printTypes(returnType)})`\n  );\n}\n\nfunction assertNumber(value) {\n  if ((getValueType(value) & ValueTypes.NUMBER) === 0) {\n    throw new Error(\n      `A numeric value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertNumbers(values) {\n  for (let i = 0; i < values.length; i++) {\n    assertNumber(values[i]);\n  }\n}\nfunction assertString(value) {\n  if ((getValueType(value) & ValueTypes.STRING) === 0) {\n    throw new Error(\n      `A string value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertBoolean(value) {\n  if ((getValueType(value) & ValueTypes.BOOLEAN) === 0) {\n    throw new Error(\n      `A boolean value was expected, got ${JSON.stringify(value)} instead`\n    );\n  }\n}\nfunction assertArgsCount(args, count) {\n  if (args.length !== count) {\n    throw new Error(\n      `Exactly ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMinCount(args, count) {\n  if (args.length < count) {\n    throw new Error(\n      `At least ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsMaxCount(args, count) {\n  if (args.length > count) {\n    throw new Error(\n      `At most ${count} arguments were expected, got ${args.length} instead`\n    );\n  }\n}\nfunction assertArgsEven(args) {\n  if (args.length % 2 !== 0) {\n    throw new Error(\n      `An even amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertArgsOdd(args) {\n  if (args.length % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected, got ${JSON.stringify(\n        args\n      )} instead`\n    );\n  }\n}\nfunction assertNotEmptyType(args, types, descriptor) {\n  if (types === ValueTypes.NONE) {\n    throw new Error(\n      `No matching type was found for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}`\n    );\n  }\n}\nfunction assertSingleType(args, types, descriptor) {\n  assertNotEmptyType(args, types, descriptor);\n  if (!isTypeUnique(types)) {\n    throw new Error(\n      `Expected to have a unique type for the following expression ${descriptor}: ${JSON.stringify(\n        args\n      )}\nGot the following types instead: ${printTypes(types)}`\n    );\n  }\n}\nfunction assertOfType(args, types, expectedTypes, descriptor) {\n  if ((types & expectedTypes) === ValueTypes.NONE) {\n    throw new Error(\n      `Expected the ${descriptor} type of the following expression: ${JSON.stringify(\n        args\n      )} to be of the following types: ${printTypes(expectedTypes)}\nGot these types instead: ${printTypes(types)}`\n    );\n  }\n}\n\nOperators['get'] = {\n  getReturnType: function (args) {\n    if (args.length === 2) {\n      const hint = args[1];\n      return getTypeFromHint(/** @type {string} */ (hint));\n    }\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertString(args[0]);\n    const outputType = expectedType & Operators['get'].getReturnType(args);\n    assertSingleType(['get', ...args], outputType, '');\n    const name = args[0].toString();\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following attribute was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n  return 'u_var_' + variableName;\n}\n\nOperators['var'] = {\n  getReturnType: function () {\n    return ValueTypes.ANY;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsCount(args, 1);\n    assertString(args[0]);\n    const name = args[0].toString();\n    if (\n      !context.style.variables ||\n      context.style.variables[name] === undefined\n    ) {\n      throw new Error(\n        `The following variable is missing from the style: ${name}`\n      );\n    }\n    const initialValue = context.style.variables[name];\n    const outputType = expectedType & getValueType(initialValue);\n    assertSingleType(['var', ...args], outputType, '');\n    const existing = context.variables.find((a) => a.name === name);\n    if (!existing) {\n      context.variables.push({\n        name: name,\n        type: outputType,\n      });\n    } else if (outputType !== existing.type) {\n      throw new Error(\n        `The following variable was used in different places with incompatible types: ${name}\nTypes were: ${printTypes(existing.type)} and ${printTypes(outputType)}`\n      );\n    }\n    return uniformNameForVariable(name);\n  },\n};\n\nexport const PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n\n// ['palette', index, colors]\nOperators['palette'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumber(args[0]);\n    const index = expressionToGlsl(context, args[0]);\n    const colors = args[1];\n    if (!Array.isArray(colors)) {\n      throw new Error('The second argument of palette must be an array');\n    }\n    const numColors = colors.length;\n    const palette = new Uint8Array(numColors * 4);\n    for (let i = 0; i < numColors; i++) {\n      const candidate = colors[i];\n      /**\n       * @type {import('../color.js').Color}\n       */\n      let color;\n      if (typeof candidate === 'string') {\n        color = fromString(candidate);\n      } else {\n        if (!Array.isArray(candidate)) {\n          throw new Error(\n            'The second argument of palette must be an array of strings or colors'\n          );\n        }\n        const length = candidate.length;\n        if (length === 4) {\n          color = candidate;\n        } else {\n          if (length !== 3) {\n            throw new Error(\n              `Expected palette color to have 3 or 4 values, got ${length}`\n            );\n          }\n          color = [candidate[0], candidate[1], candidate[2], 1];\n        }\n      }\n      const offset = i * 4;\n      palette[offset] = color[0];\n      palette[offset + 1] = color[1];\n      palette[offset + 2] = color[2];\n      palette[offset + 3] = color[3] * 255;\n    }\n    if (!context.paletteTextures) {\n      context.paletteTextures = [];\n    }\n    const paletteName = `${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}]`;\n    const paletteTexture = new PaletteTexture(paletteName, palette);\n    context.paletteTextures.push(paletteTexture);\n    return `texture2D(${paletteName}, vec2((${index} + 0.5) / ${numColors}.0, 0.5))`;\n  },\n};\n\nconst GET_BAND_VALUE_FUNC = 'getBandValue';\n\nOperators['band'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 3);\n    const band = args[0];\n\n    if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n      let ifBlocks = '';\n      const bandCount = context.bandCount || 1;\n      for (let i = 0; i < bandCount; i++) {\n        const colorIndex = Math.floor(i / 4);\n        let bandIndex = i % 4;\n        if (i === bandCount - 1 && bandIndex === 1) {\n          // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n          bandIndex = 3;\n        }\n        const textureName = `${Uniforms.TILE_TEXTURE_ARRAY}[${colorIndex}]`;\n        ifBlocks += `\n          if (band == ${i + 1}.0) {\n            return texture2D(${textureName}, v_textureCoord + vec2(dx, dy))[${bandIndex}];\n          }\n        `;\n      }\n\n      context.functions[GET_BAND_VALUE_FUNC] = `\n        float getBandValue(float band, float xOffset, float yOffset) {\n          float dx = xOffset / ${Uniforms.TEXTURE_PIXEL_WIDTH};\n          float dy = yOffset / ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n          ${ifBlocks}\n        }\n      `;\n    }\n\n    const bandExpression = expressionToGlsl(context, band);\n    const xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n    const yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n    return `${GET_BAND_VALUE_FUNC}(${bandExpression}, ${xOffsetExpression}, ${yOffsetExpression})`;\n  },\n};\n\nOperators['time'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_time';\n  },\n};\n\nOperators['zoom'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_zoom';\n  },\n};\n\nOperators['resolution'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    return 'u_resolution';\n  },\n};\n\nOperators['geometry-type'] = {\n  getReturnType: function () {\n    return ValueTypes.STRING;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 0);\n    const name = 'geometryType';\n    const computeType = (geometry) => {\n      const type = geometry.getType();\n      switch (type) {\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n          return type;\n        case 'MultiPoint':\n        case 'MultiLineString':\n        case 'MultiPolygon':\n          return type.substring(5);\n        case 'Circle':\n          return 'Polygon';\n        case 'GeometryCollection':\n          return computeType(geometry.getGeometries()[0]);\n        default:\n      }\n    };\n    const existing = context.attributes.find((a) => a.name === name);\n    if (!existing) {\n      context.attributes.push({\n        name: name,\n        type: ValueTypes.STRING,\n        callback: (feature) => {\n          return computeType(feature.getGeometry());\n        },\n      });\n    }\n    const prefix = context.inFragmentShader ? 'v_' : 'a_';\n    return prefix + name;\n  },\n};\n\nOperators['*'] = {\n  getReturnType: function (args) {\n    let outputType = ValueTypes.NUMBER | ValueTypes.COLOR;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    return outputType;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsMinCount(args, 2);\n    let outputType = expectedType;\n    for (let i = 0; i < args.length; i++) {\n      outputType = outputType & getValueType(args[i]);\n    }\n    assertOfType(\n      args,\n      outputType,\n      ValueTypes.NUMBER | ValueTypes.COLOR,\n      'output'\n    );\n    return `(${args\n      .map((arg) => expressionToGlsl(context, arg, outputType))\n      .join(' * ')})`;\n  },\n};\n\nOperators['/'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} / ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['+'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertNumbers(args);\n    return `(${args.map((arg) => expressionToGlsl(context, arg)).join(' + ')})`;\n  },\n};\n\nOperators['-'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} - ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['clamp'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    return `clamp(${expressionToGlsl(context, args[0])}, ${min}, ${max})`;\n  },\n};\n\nOperators['%'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `mod(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['^'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `pow(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['abs'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `abs(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['floor'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['round'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `floor(${expressionToGlsl(context, args[0])} + 0.5)`;\n  },\n};\n\nOperators['ceil'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `ceil(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sin'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sin(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['cos'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `cos(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['atan'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 1);\n    assertArgsMaxCount(args, 2);\n    assertNumbers(args);\n    return args.length === 2\n      ? `atan(${expressionToGlsl(context, args[0])}, ${expressionToGlsl(\n          context,\n          args[1]\n        )})`\n      : `atan(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['sqrt'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertNumbers(args);\n    return `sqrt(${expressionToGlsl(context, args[0])})`;\n  },\n};\n\nOperators['>'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} > ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['>='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} >= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} < ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nOperators['<='] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    assertNumbers(args);\n    return `(${expressionToGlsl(context, args[0])} <= ${expressionToGlsl(\n      context,\n      args[1]\n    )})`;\n  },\n};\n\nfunction getEqualOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsCount(args, 2);\n\n      // find common type\n      let type = ValueTypes.ANY;\n      for (let i = 0; i < args.length; i++) {\n        type &= getValueType(args[i]);\n      }\n      if (type === ValueTypes.NONE) {\n        throw new Error(\n          `All arguments should be of compatible type, got ${JSON.stringify(\n            args\n          )} instead`\n        );\n      }\n\n      // Since it's not possible to have color types here, we can leave it out\n      // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n      type &= ~ValueTypes.COLOR;\n\n      return `(${expressionToGlsl(\n        context,\n        args[0],\n        type\n      )} ${operator} ${expressionToGlsl(context, args[1], type)})`;\n    },\n  };\n}\n\nOperators['=='] = getEqualOperator('==');\n\nOperators['!='] = getEqualOperator('!=');\n\nOperators['!'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 1);\n    assertBoolean(args[0]);\n    return `(!${expressionToGlsl(context, args[0], ValueTypes.BOOLEAN)})`;\n  },\n};\n\nfunction getDecisionOperator(operator) {\n  return {\n    getReturnType: function () {\n      return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n      assertArgsMinCount(args, 2);\n      for (let i = 0; i < args.length; i++) {\n        assertBoolean(args[i]);\n      }\n      let result = args\n        .map((arg) => expressionToGlsl(context, arg, ValueTypes.BOOLEAN))\n        .join(` ${operator} `);\n      result = `(${result})`;\n      return result;\n    },\n  };\n}\n\nOperators['all'] = getDecisionOperator('&&');\n\nOperators['any'] = getDecisionOperator('||');\n\nOperators['between'] = {\n  getReturnType: function () {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 3);\n    assertNumbers(args);\n    const min = expressionToGlsl(context, args[1]);\n    const max = expressionToGlsl(context, args[2]);\n    const value = expressionToGlsl(context, args[0]);\n    return `(${value} >= ${min} && ${value} <= ${max})`;\n  },\n};\n\nOperators['array'] = {\n  getReturnType: function () {\n    return ValueTypes.NUMBER_ARRAY;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 2);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args.map(function (val) {\n      return expressionToGlsl(context, val);\n    });\n    return `vec${args.length}(${parsedArgs.join(', ')})`;\n  },\n};\n\nOperators['color'] = {\n  getReturnType: function () {\n    return ValueTypes.COLOR;\n  },\n  toGlsl: function (context, args) {\n    assertArgsMinCount(args, 3);\n    assertArgsMaxCount(args, 4);\n    assertNumbers(args);\n    const parsedArgs = args\n      .slice(0, 3)\n      .map((val) => `${expressionToGlsl(context, val)} / 255.0`);\n    if (args.length === 3) {\n      return `vec4(${parsedArgs.join(', ')}, 1.0)`;\n    }\n    const alpha = expressionToGlsl(context, args[3]);\n    return `(${alpha} * vec4(${parsedArgs.join(', ')}, 1.0))`;\n  },\n};\n\nOperators['interpolate'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.COLOR | ValueTypes.NUMBER;\n    for (let i = 3; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 6);\n\n    // validate interpolation type\n    const type = args[0];\n    let interpolation;\n    switch (type[0]) {\n      case 'linear':\n        interpolation = 1;\n        break;\n      case 'exponential':\n        interpolation = type[1];\n        break;\n      default:\n        interpolation = null;\n    }\n    if (!interpolation) {\n      throw new Error(\n        `Invalid interpolation type for \"interpolate\" operator, received: ${JSON.stringify(\n          type\n        )}`\n      );\n    }\n\n    // compute input/output types\n    const inputType = ValueTypes.NUMBER;\n    const outputType =\n      Operators['interpolate'].getReturnType(args) & expectedType;\n    assertSingleType(['interpolate', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[1], inputType);\n    const exponent = numberToGlsl(interpolation);\n\n    let result = '';\n    for (let i = 2; i < args.length - 2; i += 2) {\n      const stop1 = expressionToGlsl(context, args[i], inputType);\n      const output1 =\n        result || expressionToGlsl(context, args[i + 1], outputType);\n      const stop2 = expressionToGlsl(context, args[i + 2], inputType);\n      const output2 = expressionToGlsl(context, args[i + 3], outputType);\n      let ratio;\n      if (interpolation === 1) {\n        ratio = `(${input} - ${stop1}) / (${stop2} - ${stop1})`;\n      } else {\n        ratio = `(pow(${exponent}, (${input} - ${stop1})) - 1.0) / (pow(${exponent}, (${stop2} - ${stop1})) - 1.0)`;\n      }\n      result = `mix(${output1}, ${output2}, clamp(${ratio}, 0.0, 1.0))`;\n    }\n    return result;\n  },\n};\n\nOperators['match'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 2; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsEven(args);\n    assertArgsMinCount(args, 4);\n\n    let inputType = getValueType(args[0]);\n    for (let i = 1; i < args.length - 1; i += 2) {\n      inputType = inputType & getValueType(args[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const outputType = Operators['match'].getReturnType(args) & expectedType;\n    assertSingleType(['match', ...args], outputType, 'output');\n\n    const input = expressionToGlsl(context, args[0], inputType);\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 1; i -= 2) {\n      const match = expressionToGlsl(context, args[i], inputType);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${input} == ${match} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['case'] = {\n  getReturnType: function (args) {\n    let type = ValueTypes.ANY;\n    for (let i = 1; i < args.length; i += 2) {\n      type = type & getValueType(args[i]);\n    }\n    type = type & getValueType(args[args.length - 1]);\n    return type;\n  },\n  toGlsl: function (context, args, expectedType) {\n    assertArgsOdd(args);\n    assertArgsMinCount(args, 3);\n\n    const outputType = Operators['case'].getReturnType(args) & expectedType;\n    assertSingleType(['case', ...args], outputType, 'output');\n    for (let i = 0; i < args.length - 1; i += 2) {\n      assertBoolean(args[i]);\n    }\n\n    const fallback = expressionToGlsl(\n      context,\n      args[args.length - 1],\n      outputType\n    );\n    let result = null;\n    for (let i = args.length - 3; i >= 0; i -= 2) {\n      const condition = expressionToGlsl(context, args[i], ValueTypes.BOOLEAN);\n      const output = expressionToGlsl(context, args[i + 1], outputType);\n      result = `(${condition} ? ${output} : ${result || fallback})`;\n    }\n    return result;\n  },\n};\n\nOperators['in'] = {\n  getReturnType: function (args) {\n    return ValueTypes.BOOLEAN;\n  },\n  toGlsl: function (context, args) {\n    assertArgsCount(args, 2);\n    const needle = args[0];\n    let haystack = args[1];\n    if (!Array.isArray(haystack)) {\n      throw new Error(\n        `The \"in\" operator expects an array literal as its second argument.`\n      );\n    }\n    if (typeof haystack[0] === 'string') {\n      if (haystack[0] !== 'literal') {\n        throw new Error(\n          `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n        );\n      }\n      if (!Array.isArray(haystack[1])) {\n        throw new Error(\n          `The \"in\" operator was provided a literal value which was not an array as second argument.`\n        );\n      }\n      haystack = haystack[1];\n    }\n\n    let inputType = getValueType(needle);\n    for (let i = 0; i < haystack.length - 1; i += 1) {\n      inputType = inputType & getValueType(haystack[i]);\n    }\n    assertOfType(\n      ['match', ...args],\n      inputType,\n      ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN,\n      'input'\n    );\n    inputType =\n      (ValueTypes.STRING | ValueTypes.NUMBER | ValueTypes.BOOLEAN) & inputType;\n\n    const funcName = computeOperatorFunctionName('in', context);\n    const tests = [];\n    for (let i = 0; i < haystack.length; i += 1) {\n      tests.push(\n        `  if (inputValue == ${expressionToGlsl(\n          context,\n          haystack[i],\n          inputType\n        )}) { return true; }`\n      );\n    }\n    context.functions[funcName] = `bool ${funcName}(float inputValue) {\n${tests.join('\\n')}\n  return false;\n}`;\n    return `${funcName}(${expressionToGlsl(context, needle, inputType)})`;\n  },\n};\n","/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  ValueTypes,\n  expressionToGlsl,\n  getStringNumberEquivalent,\n  uniformNameForVariable,\n} from '../style/expressions.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../style/expressions.js\").ParsingContext}\n   */\n  const context = {\n    inFragmentShader: true,\n    variables: [],\n    attributes: [],\n    stringLiteralsMap: {},\n    functions: {},\n    bandCount: bandCount,\n    style: style,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(\n      context,\n      style.contrast,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(\n      context,\n      style.exposure,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(\n      context,\n      style.saturation,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(\n      context,\n      style.brightness,\n      ValueTypes.NUMBER\n    );\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = context.variables.length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variable = context.variables[i];\n    if (!(variable.name in style.variables)) {\n      throw new Error(`Missing '${variable.name}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variable.name);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variable.name];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(context, value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(function (\n    name\n  ) {\n    return context.functions[name];\n  });\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n      ? [source]\n      : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8Array(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<DataTile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n      const getTile = options.getTileFunction;\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8Array;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0]\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      dataSources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        data: new Uint8Array(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const targetWidth = typeof size === 'number' ? size : size[0];\n      const targetHeight = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      let dataR, dataU;\n\n      const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n      const reprojs = Math.ceil(bytesPerPixel / 3);\n      for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n        const sources = [];\n        for (let i = 0, len = dataSources.length; i < len; ++i) {\n          const dataSource = dataSources[i];\n          const buffer = dataSource.data;\n          const pixelSize = dataSource.pixelSize;\n          const width = pixelSize[0];\n          const height = pixelSize[1];\n          const context = createCanvasContext2D(width, height, canvasPool);\n          const imageData = context.createImageData(width, height);\n          const data = imageData.data;\n          let offset = reproj * 3;\n          for (let j = 0, len = data.length; j < len; j += 4) {\n            data[j] = buffer[offset];\n            data[j + 1] = buffer[offset + 1];\n            data[j + 2] = buffer[offset + 2];\n            data[j + 3] = 255;\n            offset += bytesPerPixel;\n          }\n          context.putImageData(imageData, 0, 0);\n          sources.push({\n            extent: dataSource.extent,\n            image: context.canvas,\n          });\n        }\n\n        const canvas = renderReprojected(\n          targetWidth,\n          targetHeight,\n          this.pixelRatio_,\n          sourceResolution,\n          this.sourceTileGrid_.getExtent(),\n          targetResolution,\n          targetExtent,\n          this.triangulation_,\n          sources,\n          this.gutter_,\n          false,\n          false\n        );\n\n        for (let i = 0, len = sources.length; i < len; ++i) {\n          const canvas = sources[i].image;\n          const context = canvas.getContext('2d');\n          releaseCanvas(context);\n          canvasPool.push(context.canvas);\n        }\n\n        const context = canvas.getContext('2d');\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        releaseCanvas(context);\n        canvasPool.push(canvas);\n\n        if (!dataR) {\n          dataU = new Uint8Array(\n            bytesPerPixel * imageData.width * imageData.height\n          );\n          dataR = new dataSources[0].dataType(dataU.buffer);\n        }\n\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let i = 0, len = data.length; i < len; i += 4) {\n          if (data[i + 3] === 255) {\n            dataU[offset] = data[i];\n            dataU[offset + 1] = data[i + 1];\n            dataU[offset + 2] = data[i + 2];\n          } else {\n            dataU[offset] = 0;\n            dataU[offset + 1] = 0;\n            dataU[offset + 2] = 0;\n          }\n          offset += bytesPerPixel;\n        }\n      }\n\n      this.reprojData_ = dataR;\n      this.reprojSize_ = [\n        Math.round(targetWidth * this.pixelRatio_),\n        Math.round(targetHeight * this.pixelRatio_),\n      ];\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach((tile) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(\n        tile,\n        EventType.CHANGE,\n        function () {\n          const state = tile.getState();\n          if (\n            state == TileState.LOADED ||\n            state == TileState.ERROR ||\n            state == TileState.EMPTY\n          ) {\n            unlistenByKey(sourceListenKey);\n            leftToLoad--;\n            if (leftToLoad === 0) {\n              this.unlistenSources_();\n              this.reproject_();\n            }\n          }\n        },\n        this\n      );\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function (tile) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1]\n        );\n      })\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","import { getDecoder } from './compression/index.js';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 2) : 2;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} [size] The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {function(): Worker} [createWorker] A function that creates the decoder worker.\n   * Defaults to a worker with all decoders that ship with geotiff.js. The `createWorker()`\n   * function is expected to return a `Worker` compatible with Web Workers. For code that\n   * runs in Node, [web-worker](https://www.npmjs.com/package/web-worker) is a good choice.\n   *\n   * A worker that uses a custom lzw decoder would look like this `my-custom-worker.js` file:\n   * ```js\n   * import { addDecoder, getDecoder } from 'geotiff';\n   * addDecoder(5, () => import ('./my-custom-lzw').then((m) => m.default));\n   * self.addEventListener('message', async (e) => {\n   *   const { id, fileDirectory, buffer } = e.data;\n   *   const decoder = await getDecoder(fileDirectory);\n   *   const decoded = await decoder.decode(fileDirectory, buffer);\n   *   self.postMessage({ decoded, id }, [decoded]);\n   * });\n   * ```\n   * The way the above code is built into a worker by the `createWorker()` function\n   * depends on the used bundler. For most bundlers, something like this will work:\n   * ```js\n   * function createWorker() {\n   *   return new Worker(new URL('./my-custom-worker.js', import.meta.url));\n   * }\n   * ```\n   */\n  constructor(size = defaultPoolSize, createWorker) {\n    this.workers = null;\n    this._awaitingDecoder = null;\n    this.size = size;\n    this.messageId = 0;\n    if (size) {\n      this._awaitingDecoder = createWorker ? Promise.resolve(createWorker) : new Promise((resolve) => {\n        import('./worker/decoder.js').then((module) => {\n          resolve(module.create);\n        });\n      });\n      this._awaitingDecoder.then((create) => {\n        this._awaitingDecoder = null;\n        this.workers = [];\n        for (let i = 0; i < size; i++) {\n          this.workers.push({ worker: create(), idle: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    if (this._awaitingDecoder) {\n      await this._awaitingDecoder;\n    }\n    return this.size === 0\n      ? getDecoder(fileDirectory).then((decoder) => decoder.decode(fileDirectory, buffer))\n      : new Promise((resolve) => {\n        const worker = this.workers.find((candidate) => candidate.idle)\n          || this.workers[Math.floor(Math.random() * this.size)];\n        worker.idle = false;\n        const id = this.messageId++;\n        const onMessage = (e) => {\n          if (e.data.id === id) {\n            worker.idle = true;\n            resolve(e.data.decoded);\n            worker.worker.removeEventListener('message', onMessage);\n          }\n        };\n        worker.worker.addEventListener('message', onMessage);\n        worker.worker.postMessage({ fileDirectory, buffer, id }, [buffer]);\n      });\n  }\n\n  destroy() {\n    if (this.workers) {\n      this.workers.forEach((worker) => {\n        worker.worker.terminate();\n      });\n      this.workers = null;\n    }\n  }\n}\n\nexport default Pool;\n","/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {\n  Pool,\n  globals as geotiffGlobals,\n  fromBlob as tiffFromBlob,\n  fromUrl as tiffFromUrl,\n  fromUrls as tiffFromUrls,\n} from 'geotiff';\nimport {\n  Projection,\n  get as getCachedProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {clamp} from '../math.js';\nimport {getCenter, getIntersection} from '../extent.js';\nimport {error as logError} from '../console.js';\nimport {fromCode as unitsFromCode} from '../proj/Units.js';\n\n/**\n * Determine if an image type is a mask.\n * See https://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} The image is a mask.\n */\nfunction isMask(image) {\n  const fileDirectory = image.fileDirectory;\n  const type = fileDirectory.NewSubfileType || 0;\n  return (type & 4) === 4;\n}\n\n/**\n * @param {true|false|'auto'} preference The convertToRGB option.\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} Use the `image.readRGB()` method.\n */\nfunction readRGB(preference, image) {\n  if (!preference) {\n    return false;\n  }\n  if (preference === true) {\n    return true;\n  }\n  if (image.getSamplesPerPixel() !== 3) {\n    return false;\n  }\n  const interpretation = image.fileDirectory.PhotometricInterpretation;\n  const interpretations = geotiffGlobals.photometricInterpretations;\n  return (\n    interpretation === interpretations.CMYK ||\n    interpretation === interpretations.YCbCr ||\n    interpretation === interpretations.CIELab ||\n    interpretation === interpretations.ICCLab\n  );\n}\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\n\nconst STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nconst STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n\nconst defaultTileSize = 256;\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\n\nlet workerPool;\nfunction getWorkerPool() {\n  if (!workerPool) {\n    workerPool = new Pool();\n  }\n  return workerPool;\n}\n\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n  try {\n    return image.getBoundingBox();\n  } catch (_) {\n    return [0, 0, image.getWidth(), image.getHeight()];\n  }\n}\n\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n  try {\n    return image.getOrigin().slice(0, 2);\n  } catch (_) {\n    return [0, image.getHeight()];\n  }\n}\n\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n  try {\n    return image.getResolution(referenceImage);\n  } catch (_) {\n    return [\n      referenceImage.getWidth() / image.getWidth(),\n      referenceImage.getHeight() / image.getHeight(),\n    ];\n  }\n}\n\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n  const geoKeys = image.geoKeys;\n  if (!geoKeys) {\n    return null;\n  }\n\n  if (\n    geoKeys.ProjectedCSTypeGeoKey &&\n    geoKeys.ProjectedCSTypeGeoKey !== 32767\n  ) {\n    const code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  if (geoKeys.GeographicTypeGeoKey && geoKeys.GeographicTypeGeoKey !== 32767) {\n    const code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  return null;\n}\n\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n  return tiff.getImageCount().then(function (count) {\n    const requests = new Array(count);\n    for (let i = 0; i < count; ++i) {\n      requests[i] = tiff.getImage(i);\n    }\n    return Promise.all(requests);\n  });\n}\n\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n  let request;\n  if (source.blob) {\n    request = tiffFromBlob(source.blob);\n  } else if (source.overviews) {\n    request = tiffFromUrls(source.url, source.overviews, options);\n  } else {\n    request = tiffFromUrl(source.url, options);\n  }\n  return request.then(getImagesForTIFF);\n}\n\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n  if (Array.isArray(expected)) {\n    const length = expected.length;\n    if (!Array.isArray(got) || length != got.length) {\n      const error = new Error(message);\n      rejector(error);\n      throw error;\n    }\n    for (let i = 0; i < length; ++i) {\n      assertEqual(expected[i], got[i], tolerance, message, rejector);\n    }\n    return;\n  }\n\n  got = /** @type {number} */ (got);\n  if (Math.abs(expected - got) > tolerance * expected) {\n    throw new Error(message);\n  }\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n  if (array instanceof Int8Array) {\n    return -128;\n  }\n  if (array instanceof Int16Array) {\n    return -32768;\n  }\n  if (array instanceof Int32Array) {\n    return -2147483648;\n  }\n  if (array instanceof Float32Array) {\n    return 1.2e-38;\n  }\n  return 0;\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n  if (array instanceof Int8Array) {\n    return 127;\n  }\n  if (array instanceof Uint8Array) {\n    return 255;\n  }\n  if (array instanceof Uint8ClampedArray) {\n    return 255;\n  }\n  if (array instanceof Int16Array) {\n    return 32767;\n  }\n  if (array instanceof Uint16Array) {\n    return 65535;\n  }\n  if (array instanceof Int32Array) {\n    return 2147483647;\n  }\n  if (array instanceof Uint32Array) {\n    return 4294967295;\n  }\n  if (array instanceof Float32Array) {\n    return 3.4e38;\n  }\n  return 255;\n}\n\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {true|false|'auto'} [convertToRGB=false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.  Setting the option to `'auto'` will make it so CMYK, YCbCr,\n * CIELab, and ICCLab images will automatically be converted to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * **Note for users of the full build**: The `GeoTIFF` source requires the\n * [geotiff.js](https://github.com/geotiffjs/geotiff.js) library to be loaded as well.\n *\n * @api\n */\nclass GeoTIFFSource extends DataTile {\n  /**\n   * @param {Options} options Data tile options.\n   */\n  constructor(options) {\n    super({\n      state: 'loading',\n      tileGrid: null,\n      projection: null,\n      opaque: options.opaque,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {Array<SourceInfo>}\n     * @private\n     */\n    this.sourceInfo_ = options.sources;\n\n    const numSources = this.sourceInfo_.length;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.sourceOptions_ = options.sourceOptions;\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceImagery_ = new Array(numSources);\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceMasks_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.resolutionFactors_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.samplesPerPixel_;\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.nodataValues_;\n\n    /**\n     * @type {Array<Array<GDALMetadata>>}\n     * @private\n     */\n    this.metadata_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.normalize_ = options.normalize !== false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.addAlpha_ = false;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {true|false|'auto'}\n     */\n    this.convertToRGB_ = options.convertToRGB || false;\n\n    this.setKey(this.sourceInfo_.map((source) => source.url).join(','));\n\n    const self = this;\n    const requests = new Array(numSources);\n    for (let i = 0; i < numSources; ++i) {\n      requests[i] = getImagesForSource(\n        this.sourceInfo_[i],\n        this.sourceOptions_\n      );\n    }\n    Promise.all(requests)\n      .then(function (sources) {\n        self.configure_(sources);\n      })\n      .catch(function (error) {\n        logError(error);\n        self.error_ = error;\n        self.setState('error');\n      });\n  }\n\n  /**\n   * @return {Error} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * geotiffSource.on('change', () => {\n   *   if (geotiffSource.getState() === 'error') {\n   *     console.error(geotiffSource.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Determine the projection of the images in this GeoTIFF.\n   * The default implementation looks at the ProjectedCSTypeGeoKey and the GeographicTypeGeoKey\n   * of each image in turn.\n   * You can override this method in a subclass to support more projections.\n   *\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   */\n  determineProjection(sources) {\n    const firstSource = sources[0];\n    for (let i = firstSource.length - 1; i >= 0; --i) {\n      const image = firstSource[i];\n      const projection = getProjection(image);\n      if (projection) {\n        this.projection = projection;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n   * must have the same internal tiled structure.\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   * @private\n   */\n  configure_(sources) {\n    let extent;\n    let origin;\n    let commonRenderTileSizes;\n    let commonSourceTileSizes;\n    let resolutions;\n    const samplesPerPixel = new Array(sources.length);\n    const nodataValues = new Array(sources.length);\n    const metadata = new Array(sources.length);\n    let minZoom = 0;\n\n    const sourceCount = sources.length;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const images = [];\n      const masks = [];\n      sources[sourceIndex].forEach((item) => {\n        if (isMask(item)) {\n          masks.push(item);\n        } else {\n          images.push(item);\n        }\n      });\n\n      const imageCount = images.length;\n      if (masks.length > 0 && masks.length !== imageCount) {\n        throw new Error(\n          `Expected one mask per image found ${masks.length} masks and ${imageCount} images`\n        );\n      }\n\n      let sourceExtent;\n      let sourceOrigin;\n      const sourceTileSizes = new Array(imageCount);\n      const renderTileSizes = new Array(imageCount);\n      const sourceResolutions = new Array(imageCount);\n\n      nodataValues[sourceIndex] = new Array(imageCount);\n      metadata[sourceIndex] = new Array(imageCount);\n\n      for (let imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n        const image = images[imageIndex];\n        const nodataValue = image.getGDALNoData();\n        metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n        nodataValues[sourceIndex][imageIndex] = nodataValue;\n\n        const wantedSamples = this.sourceInfo_[sourceIndex].bands;\n        samplesPerPixel[sourceIndex] = wantedSamples\n          ? wantedSamples.length\n          : image.getSamplesPerPixel();\n        const level = imageCount - (imageIndex + 1);\n\n        if (!sourceExtent) {\n          sourceExtent = getBoundingBox(image);\n        }\n\n        if (!sourceOrigin) {\n          sourceOrigin = getOrigin(image);\n        }\n\n        const imageResolutions = getResolutions(image, images[0]);\n        sourceResolutions[level] = imageResolutions[0];\n\n        const sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n\n        // request larger blocks for untiled layouts\n        if (\n          sourceTileSize[0] !== sourceTileSize[1] &&\n          sourceTileSize[1] < defaultTileSize\n        ) {\n          sourceTileSize[0] = defaultTileSize;\n          sourceTileSize[1] = defaultTileSize;\n        }\n\n        sourceTileSizes[level] = sourceTileSize;\n\n        const aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n        renderTileSizes[level] = [\n          sourceTileSize[0],\n          sourceTileSize[1] / aspectRatio,\n        ];\n      }\n\n      if (!extent) {\n        extent = sourceExtent;\n      } else {\n        getIntersection(extent, sourceExtent, extent);\n      }\n\n      if (!origin) {\n        origin = sourceOrigin;\n      } else {\n        const message = `Origin mismatch for source ${sourceIndex}, got [${sourceOrigin}] but expected [${origin}]`;\n        assertEqual(origin, sourceOrigin, 0, message, this.viewRejector);\n      }\n\n      if (!resolutions) {\n        resolutions = sourceResolutions;\n        this.resolutionFactors_[sourceIndex] = 1;\n      } else {\n        if (resolutions.length - minZoom > sourceResolutions.length) {\n          minZoom = resolutions.length - sourceResolutions.length;\n        }\n        const resolutionFactor =\n          resolutions[resolutions.length - 1] /\n          sourceResolutions[sourceResolutions.length - 1];\n        this.resolutionFactors_[sourceIndex] = resolutionFactor;\n        const scaledSourceResolutions = sourceResolutions.map(\n          (resolution) => (resolution *= resolutionFactor)\n        );\n        const message = `Resolution mismatch for source ${sourceIndex}, got [${scaledSourceResolutions}] but expected [${resolutions}]`;\n        assertEqual(\n          resolutions.slice(minZoom, resolutions.length),\n          scaledSourceResolutions,\n          0.02,\n          message,\n          this.viewRejector\n        );\n      }\n\n      if (!commonRenderTileSizes) {\n        commonRenderTileSizes = renderTileSizes;\n      } else {\n        assertEqual(\n          commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length),\n          renderTileSizes,\n          0.01,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      if (!commonSourceTileSizes) {\n        commonSourceTileSizes = sourceTileSizes;\n      } else {\n        assertEqual(\n          commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length),\n          sourceTileSizes,\n          0,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      this.sourceImagery_[sourceIndex] = images.reverse();\n      this.sourceMasks_[sourceIndex] = masks.reverse();\n    }\n\n    for (let i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n      const sourceImagery = this.sourceImagery_[i];\n      while (sourceImagery.length < resolutions.length) {\n        sourceImagery.unshift(undefined);\n      }\n    }\n\n    if (!this.getProjection()) {\n      this.determineProjection(sources);\n    }\n\n    this.samplesPerPixel_ = samplesPerPixel;\n    this.nodataValues_ = nodataValues;\n    this.metadata_ = metadata;\n\n    // decide if we need to add an alpha band to handle nodata\n    outer: for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      // option 1: source is configured with a nodata value\n      if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n        this.addAlpha_ = true;\n        break;\n      }\n      if (this.sourceMasks_[sourceIndex].length) {\n        this.addAlpha_ = true;\n        break;\n      }\n\n      const values = nodataValues[sourceIndex];\n\n      // option 2: check image metadata for limited bands\n      const bands = this.sourceInfo_[sourceIndex].bands;\n      if (bands) {\n        for (let i = 0; i < bands.length; ++i) {\n          if (values[bands[i] - 1] !== null) {\n            this.addAlpha_ = true;\n            break outer;\n          }\n        }\n        continue;\n      }\n\n      // option 3: check image metadata for all bands\n      for (let imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n        if (values[imageIndex] !== null) {\n          this.addAlpha_ = true;\n          break outer;\n        }\n      }\n    }\n\n    let bandCount = this.addAlpha_ ? 1 : 0;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      bandCount += samplesPerPixel[sourceIndex];\n    }\n    this.bandCount = bandCount;\n\n    const tileGrid = new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: resolutions,\n      tileSizes: commonRenderTileSizes,\n    });\n\n    this.tileGrid = tileGrid;\n    this.setTileSizes(commonSourceTileSizes);\n\n    this.setLoader(this.loadTile_.bind(this));\n    this.setState('ready');\n\n    const zoom = 1;\n    if (resolutions.length === 2) {\n      resolutions = [resolutions[0], resolutions[1], resolutions[1] / 2];\n    } else if (resolutions.length === 1) {\n      resolutions = [resolutions[0] * 2, resolutions[0], resolutions[0] / 2];\n    }\n\n    this.viewResolver({\n      showFullExtent: true,\n      projection: this.projection,\n      resolutions: resolutions,\n      center: toUserCoordinate(getCenter(extent), this.projection),\n      extent: toUserExtent(extent, this.projection),\n      zoom: zoom,\n    });\n  }\n\n  /**\n   * @param {number} z The z tile index.\n   * @param {number} x The x tile index.\n   * @param {number} y The y tile index.\n   * @return {Promise} The composed tile data.\n   * @private\n   */\n  loadTile_(z, x, y) {\n    const sourceTileSize = this.getTileSize(z);\n    const sourceCount = this.sourceImagery_.length;\n    const requests = new Array(sourceCount * 2);\n    const nodataValues = this.nodataValues_;\n    const sourceInfo = this.sourceInfo_;\n    const pool = getWorkerPool();\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const source = sourceInfo[sourceIndex];\n      const resolutionFactor = this.resolutionFactors_[sourceIndex];\n      const pixelBounds = [\n        Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n        Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n        Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n        Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n      ];\n      const image = this.sourceImagery_[sourceIndex][z];\n      let samples;\n      if (source.bands) {\n        samples = source.bands.map(function (bandNumber) {\n          return bandNumber - 1;\n        });\n      }\n\n      /** @type {number|Array<number>} */\n      let fillValue;\n      if ('nodata' in source && source.nodata !== null) {\n        fillValue = source.nodata;\n      } else {\n        if (!samples) {\n          fillValue = nodataValues[sourceIndex];\n        } else {\n          fillValue = samples.map(function (sampleIndex) {\n            return nodataValues[sourceIndex][sampleIndex];\n          });\n        }\n      }\n\n      const readOptions = {\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: samples,\n        fillValue: fillValue,\n        pool: pool,\n        interleave: false,\n      };\n      if (readRGB(this.convertToRGB_, image)) {\n        requests[sourceIndex] = image.readRGB(readOptions);\n      } else {\n        requests[sourceIndex] = image.readRasters(readOptions);\n      }\n\n      // requests after `sourceCount` are for mask data (if any)\n      const maskIndex = sourceCount + sourceIndex;\n      const mask = this.sourceMasks_[sourceIndex][z];\n      if (!mask) {\n        requests[maskIndex] = Promise.resolve(null);\n        continue;\n      }\n\n      requests[maskIndex] = mask.readRasters({\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: [0],\n        pool: pool,\n        interleave: false,\n      });\n    }\n\n    return Promise.all(requests)\n      .then(this.composeTile_.bind(this, sourceTileSize))\n      .catch(function (error) {\n        logError(error);\n        throw error;\n      });\n  }\n\n  /**\n   * @param {import(\"../size.js\").Size} sourceTileSize The source tile size.\n   * @param {Array} sourceSamples The source samples.\n   * @return {import(\"../DataTile.js\").Data} The composed tile data.\n   * @private\n   */\n  composeTile_(sourceTileSize, sourceSamples) {\n    const metadata = this.metadata_;\n    const sourceInfo = this.sourceInfo_;\n    const sourceCount = this.sourceImagery_.length;\n    const bandCount = this.bandCount;\n    const samplesPerPixel = this.samplesPerPixel_;\n    const nodataValues = this.nodataValues_;\n    const normalize = this.normalize_;\n    const addAlpha = this.addAlpha_;\n\n    const pixelCount = sourceTileSize[0] * sourceTileSize[1];\n    const dataLength = pixelCount * bandCount;\n\n    /** @type {Uint8Array|Float32Array} */\n    let data;\n    if (normalize) {\n      data = new Uint8Array(dataLength);\n    } else {\n      data = new Float32Array(dataLength);\n    }\n\n    let dataIndex = 0;\n    for (let pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n      let transparent = addAlpha;\n      for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n        const source = sourceInfo[sourceIndex];\n\n        let min = source.min;\n        let max = source.max;\n        let gain, bias;\n        if (normalize) {\n          const stats = metadata[sourceIndex][0];\n          if (min === undefined) {\n            if (stats && STATISTICS_MINIMUM in stats) {\n              min = parseFloat(stats[STATISTICS_MINIMUM]);\n            } else {\n              min = getMinForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n          if (max === undefined) {\n            if (stats && STATISTICS_MAXIMUM in stats) {\n              max = parseFloat(stats[STATISTICS_MAXIMUM]);\n            } else {\n              max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n\n          gain = 255 / (max - min);\n          bias = -min * gain;\n        }\n\n        for (\n          let sampleIndex = 0;\n          sampleIndex < samplesPerPixel[sourceIndex];\n          ++sampleIndex\n        ) {\n          const sourceValue =\n            sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n\n          let value;\n          if (normalize) {\n            value = clamp(gain * sourceValue + bias, 0, 255);\n          } else {\n            value = sourceValue;\n          }\n\n          if (!addAlpha) {\n            data[dataIndex] = value;\n          } else {\n            let nodata = source.nodata;\n            if (nodata === undefined) {\n              let bandIndex;\n              if (source.bands) {\n                bandIndex = source.bands[sampleIndex] - 1;\n              } else {\n                bandIndex = sampleIndex;\n              }\n              nodata = nodataValues[sourceIndex][bandIndex];\n            }\n\n            const nodataIsNaN = isNaN(nodata);\n            if (\n              (!nodataIsNaN && sourceValue !== nodata) ||\n              (nodataIsNaN && !isNaN(sourceValue))\n            ) {\n              transparent = false;\n              data[dataIndex] = value;\n            }\n          }\n          dataIndex++;\n        }\n        if (!transparent) {\n          const maskIndex = sourceCount + sourceIndex;\n          const mask = sourceSamples[maskIndex];\n          if (mask && !mask[0][pixelIndex]) {\n            transparent = true;\n          }\n        }\n      }\n      if (addAlpha) {\n        if (!transparent) {\n          data[dataIndex] = 255;\n        }\n        dataIndex++;\n      }\n    }\n\n    return data;\n  }\n}\n\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\n\nexport default GeoTIFFSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n"],"names":["e","t","module","exports","this","s","r","n","o","a","i","l","default","c","d","u","p","h","m","g","y","f","b","w","v","$","namespace","spin","hidden","address","country","city","road","olControl","glass","container","control","button","input","expanded","reset","result","inputText","icon","k","containerId","buttonControlId","inputQueryId","inputResetId","cssClasses","x","Object","freeze","__proto__","q","C","S","L","j","E","T","N","R","A","P","provider","placeholder","featureStyle","targetType","lang","limit","keepOpen","preventDefault","autoComplete","autoCompleteMinLength","autoCompleteTimeout","debug","I","Error","_","window","performance","Date","now","timing","navigationStart","toString","M","test","O","Array","isArray","forEach","split","length","V","U","F","G","classList","contains","B","className","D","replace","String","replaceAll","Q","document","createElement","id","classname","attr","setAttribute","name","value","innerHTML","createDocumentFragment","childNodes","append","RegExp","add","trim","setTimeout","remove","z","H","constructor","options","els","createControl","querySelector","K","settings","url","params","langs","getParameters","toLowerCase","query","includes","handleResponse","features","map","lon","geometry","coordinates","lat","properties","postcode","state","original","formatted","details","J","format","addressdetails","countrycodes","bbox","boundingbox","display_name","houseNumber","house_number","town","W","key","neighbourhood","X","callbackName","includeNeighborhood","maxResults","resources","resourceSets","point","formattedAddress","Y","countrycode","pretty","no_annotations","results","lng","components","Z","Promise","ee","data","method","mode","credentials","jsonp","head","Math","round","random","indexOf","removeChild","fetch","then","json","catch","keys","reduce","push","encodeURIComponent","join","te","se","Base","layerName","layer","source","newProvider","lastQuery","registeredListeners","mapClick","setListeners","stopPropagation","collapse","expand","addEventListener","target","which","keyCode","clearTimeout","focus","clearResults","firstChild","console","info","createList","listenMapClick","addressTemplate","chosen","getMap","Number","parseFloat","getView","getProjection","transform","transformExtent","dispatchEvent","type","coordinate","place","fit","duration","animate","resolution","center","createFeature","feature","addLayer","setStyle","setId","getSource","addFeature","building","village","blur","getTargetElement","handleEvent","removeEventListener","getLayers","re","image","scale","src","super","element","prototype","hasOwnProperty","call","getLayer","setProvider","setProviderKey","ol_control_Timeline","create","zoomButton","_scrollDiv","parent","_buttons","addButton","handleClick","zoom","get","min","refresh","bind","_intervalDiv","_select","elt","scrollListener","_setScrollLeft","date","getDate","dateStart","dateEnd","scrollTimeout","scrollDiv","onmove","_moving","_tline","_scrollLeft","set","maxWidth","minDate","Infinity","maxDate","graduation","minZoom","maxZoom","setInterval","interval","getHTML","_getHTML","getFeatureDate","_getFeatureDate","endFeatureDate","_endFeatureDate","setFeatures","setMap","undefined","title","html","click","isCollapsed","collapsed","toggle","_features","_source","getFeatures","first","max","d2","tline","isNaN","end","sort","div","_minDate","_maxDate","isFinite","delta","_scale","width","_drawTime","line","lineHeight","getStyle","fdiv","style","left","img","querySelectorAll","ondragstart","minWidth","pos","top","_nbline","setDate","anim","position","_getOffsetFromDate","_getDateFromOffset","offset","scrollLeft","_getScrollLeft","dt","month","dmonth","tdiv","dx","heigth","year","getFullYear","setFullYear","dyear","setMonth","toLocaleDateString","dday","day","offdate","getMonth","outerWidth","roundDate","stick","_roundTo","getStartDate","getEndDate","asImageLike","Image","HTMLCanvasElement","HTMLVideoElement","asArrayLike","Uint8Array","Uint8ClampedArray","Float32Array","DataView","sharedContext","toArray","height","willReadFrequently","canvas","clearRect","drawImage","getImageData","defaultSize","DataTile","IDLE","tileCoord","transition","interpolate","loader_","loader","data_","error_","size_","size","getSize","imageData","getData","getError","load","ERROR","LOADING","changed","self","LOADED","error","createElementNS","namespaceURI","qualifiedName","node","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","object","parse","xml","DOMParser","parseFromString","makeArrayPusher","valueReader","thisArg","objectStack","array","makeObjectPropertyPusher","property","localName","makeObjectPropertySetter","makeSimpleNodeFactory","fixedNodeName","fixedNamespaceURI","newNodeName","context","nodeName","makeStructureNS","namespaceURIs","structure","structureNS","ii","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","pop","document_","implementation","createDocument","XML","read","doc","readFromDocument","readFromNode","ELEMENT_NODE","NAMESPACE_URI","readHref","getAttributeNS","readDecimal","readDecimalString","string","exec","readPositiveInteger","readNonNegativeIntegerString","parseInt","readString","NAMESPACE_URIS","PARSERS","readServiceIdentification","readServiceProvider","readOperationsMetadata","OWS","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","readValue","CONSTRAINT_PARSERS","readAllowedValues","CONTACT_INFO_PARSERS","readPhone","readAddress","DCP_PARSERS","readHttp","HTTP_PARSERS","readGet","OPERATION_PARSERS","readDcp","OPERATIONS_METADATA_PARSERS","readOperation","PHONE_PARSERS","REQUEST_METHOD_PARSERS","readConstraint","SERVICE_CONTACT_PARSERS","readContactInfo","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","readServiceContact","getAttribute","href","OWS_NAMESPACE_URIS","readContents","WMTSCapabilities","owsParser_","version","WMTSCapabilityObject","CONTENTS_PARSERS","readLayer","readTileMatrixSet","LAYER_PARSERS","readStyle","readTileMatrixSetLink","readDimensions","readResourceUrl","readBoundingBox","STYLE_PARSERS","readLegendUrl","TMS_LINKS_PARSERS","readTileMatrixLimitsList","TMS_LIMITS_LIST_PARSERS","readTileMatrixLimits","TMS_LIMITS_PARSERS","DIMENSION_PARSERS","WGS84_BBOX_READERS","readCoordinates","TMS_PARSERS","readTileMatrix","TM_PARSERS","isDefault","template","resourceType","resource","legend","BaseTileRepresentation","tile","handleTileChange_","gutter_","gutter","helper_","helper","loaded","ready","setTile","EventType","CHANGE","getState","TileState","uploadTile","ImageTile","getImage","crossOrigin","setReady","disposeInternal","bindAndConfigure","gl","texture","resampleFilter","LINEAR","NEAREST","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","uploadImageTexture","texImage2D","RGBA","UNSIGNED_BYTE","uploadDataTexture","bandCount","getGL","textureType","canInterpolate","FLOAT","getExtension","extension","bytesPerRow","byteLength","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","pixelContext","createPixelContext","TileTexture","textures","renderSize_","grid","getTileSize","NaN","coords","fromArray","flushBufferData","createTexture","sourceTileSize","pixelSize","isFloat","pixelCount","DataType","bytesPerElement","BYTES_PER_ELEMENT","floor","textureCount","ceil","textureDataArrays","textureIndex","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataValue","pixelIndex","bandIndex","textureData","textureBandIndex","deleteBuffer","deleteTexture","getImagePixelData_","renderCol","renderRow","renderWidth","renderHeight","sourceWidth","sourceHeight","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","err","getArrayPixelData_","sourceSize","bytesPerPixel","buffer","slice","getPixelData","arrayData","Uniforms","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","RENDER_EXTENT","RESOLUTION","ZOOM","GLOBAL_ALPHA","PROJECTION_MATRIX","SCREEN_TO_WORLD_MATRIX","empty","depthForZ","newTileRepresentationLookup","tileIds","Set","representationsByZ","lookupHasTile","tileRepresentationLookup","has","addTileRepresentationToLookup","tileRepresentation","getRenderExtent","frameState","extent","layerState","layerStatesArray","layerIndex","fromUserExtent","viewState","projection","getRenderSource","getWrapX","gridExtent","getTileGridForProjection","getExtent","getCacheKey","getKey","WebGLBaseTileLayerRenderer","tileLayer","uniforms","postProcesses","renderComplete","tileTransform_","tempMat4","tempTileRange_","TileRange","tempTileCoord_","tempSize_","cacheSize","tileRepresentationCache","LRUCache","projection_","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","EMPTY","prepareFrameInternal","clearCache","createTileRepresentation","enqueueTiles","initialZ","preload","tileSource","tileGrid","getGutterForProjection","tileSourceKey","wantedTiles","getMapInternal","minZ","getMinZoom","getZForResolution","getMaxResolution","getResolutionForZoom","getResolution","zDirection","tileRange","getTileRangeForExtentAndZ","tileResolution","minX","maxX","minY","maxY","cacheKey","containsKey","getTile","pixelRatio","interimTile","getInterimTile","tileQueueKey","tileQueue","isKeyQueued","enqueue","getTileCoordCenter","beforeTilesRender","tilesWithAlpha","prepareDraw","renderTile","tileTransform","renderExtent","tileSize","tileOrigin","tileExtent","depth","alpha","drawTile_","tileZ","alphaLookup","tileCoordKey","getOrigin","getTileCoordExtent","centerX","centerY","tileWidthWithGutter","tileHeightWithGutter","aspectRatio","centerI","centerJ","tileScale","tileCenterI","tileCenterJ","rotation","renderFrame","preRender","getPreload","nextExtent","targetZ","nextResolution","uid","time","blend","getAlpha","endTransition","coveredByChildren","findAltTiles_","parentZ","coveredByParent","zs","jj","finalizeDraw","dispatchPreComposeEvent","dispatchPostComposeEvent","getCanvas","canExpireCache","dispose","postRenderFunction","updateCacheSize","expireCache","postRenderFunctions","postRender","altZ","getTileRangeForTileCoordAndZ","covered","clear","removeHelper","TILE_TEXTURE_ARRAY","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","Attributes","TEXTURE_COORD","attributeDescriptions","WebGLTileLayerRenderer","program_","vertexShader_","vertexShader","fragmentShader_","fragmentShader","indices_","paletteTextures_","paletteTextures","getProgram","afterHelperCreated","useProgram","tileTexture","bindBuffer","enableAttributes","textureSlot","uniformName","paletteIndex","paletteTexture","getTexture","setUniformMatrixValue","mat4","setUniformFloatValue","gutterExtent","setUniformFloatVec4","drawElements","pixel","pixelToCoordinateTransform","layerExtent","sources","getSources","tileTextureCache","getTileCoordForCoordAndZ","col","row","deleteProgram","PaletteTexture","texture_","ValueTypes","NUMBER","STRING","COLOR","BOOLEAN","NUMBER_ARRAY","ANY","NONE","getTypeFromHint","typeHint","Operators","getValueType","JSON","stringify","valueArr","onlyNumbers","every","operator","getReturnType","isTypeUnique","valueType","log2","printTypes","computeOperatorFunctionName","functions","numberToGlsl","arrayToGlsl","colorToGlsl","color","getStringNumberEquivalent","stringLiteralsMap","stringToGlsl","expressionToGlsl","expectedType","returnType","toGlsl","possibleType","assertNotEmptyType","assertNumber","assertNumbers","values","assertString","assertBoolean","assertArgsCount","args","count","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertArgsOdd","types","descriptor","assertSingleType","assertOfType","expectedTypes","uniformNameForVariable","variableName","hint","outputType","existing","attributes","find","prefix","inFragmentShader","variables","initialValue","PALETTE_TEXTURE_ARRAY","index","colors","numColors","palette","candidate","paletteName","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","arg","parseStyle","pipeline","contrast","exposure","saturation","gamma","brightness","numVariables","variable","uniformDeclarations","functionDefintions","band","ifBlocks","colorIndex","textureName","bandExpression","xOffsetExpression","yOffsetExpression","computeType","getType","substring","getGeometries","callback","getGeometry","parsedArgs","val","interpolation","inputType","exponent","stop1","output1","stop2","output2","ratio","fallback","match","output","condition","needle","haystack","funcName","tests","WebGLTileLayer","BaseTile","assign","sources_","renderedSource_","renderedResolution_","style_","cacheSize_","styleVariables_","addChangeListener","SOURCE","handleSourceUpdate_","getSourceState","hasRenderer","getRenderer","getSourceBandCount_","MAX_SAFE_INTEGER","createRenderer","parsedStyle","renderSources","layerRenderer","prepareFrame","render","rendered","sourceState","onChange","altSources","filter","renderer","updateStyleVariables","ReprojDataTile","resolve","pixelRatio_","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","wrappedTileCoord","sourceTiles_","sourcesListenerKeys_","sourceZ_","targetExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProj","sourceProjExtent","targetResolution","targetProj","sourceResolution","errorThresholdInPixels","errorThreshold","triangulation_","getTriangles","sourceExtent","calculateSourceExtent","canWrapX","sourceRange","getTileFunction","srcX","srcY","reproject_","dataSources","tileData","tileDataR","packedLength","packedData","dataType","targetWidth","targetHeight","dataR","dataU","reprojs","reproj","len","dataSource","createImageData","putImageData","getContext","leftToLoad","sourceListenKey","unlistenSources_","DataTileSource","Tile","maxResolution","attributions","attributionsCollapsible","opaque","wrapX","tileSize_","tileSizes_","tileLoadingKeys_","tileGridForProjection_","tileCacheForProjection_","setTileSizes","tileSizes","getTileGrid","thisProj","equivalent","setLoader","getReprojTile_","cache","getTileCacheForProjection","reprojTilePixelRatio","apply","getResolutions","textureSize","getTileCoordForTileUrlFunction","tileOptions","newTile","sourceProjection","tileCache","sourceLoader","event","TileEventType","TILELOADSTART","TILELOADERROR","TILELOADEND","projKey","setTileGridForProjection","tilegrid","proj","TileCache","usedTiles","usedTileCache","defaultPoolSize","navigator","hardwareConcurrency","Pool","createWorker","workers","_awaitingDecoder","messageId","worker","idle","decode","fileDirectory","decoder","onMessage","decoded","postMessage","destroy","terminate","isMask","NewSubfileType","readRGB","preference","getSamplesPerPixel","interpretation","PhotometricInterpretation","interpretations","CMYK","YCbCr","CIELab","ICCLab","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","defaultTileSize","workerPool","getWorkerPool","getBoundingBox","getWidth","getHeight","referenceImage","geoKeys","ProjectedCSTypeGeoKey","code","units","ProjLinearUnitsGeoKey","Projection","GeographicTypeGeoKey","GeogAngularUnitsGeoKey","getImagesForTIFF","tiff","getImageCount","requests","all","getImagesForSource","request","blob","overviews","assertEqual","expected","got","tolerance","message","rejector","abs","getMinForDataType","Int8Array","Int16Array","Int32Array","getMaxForDataType","Uint16Array","Uint32Array","GeoTIFFSource","sourceInfo_","numSources","sourceOptions_","sourceOptions","sourceImagery_","sourceMasks_","resolutionFactors_","samplesPerPixel_","nodataValues_","metadata_","normalize_","normalize","addAlpha_","convertToRGB_","convertToRGB","setKey","configure_","setState","determineProjection","firstSource","origin","commonRenderTileSizes","commonSourceTileSizes","resolutions","samplesPerPixel","nodataValues","metadata","sourceCount","sourceIndex","images","masks","item","imageCount","sourceOrigin","sourceTileSizes","renderTileSizes","sourceResolutions","imageIndex","nodataValue","getGDALNoData","getGDALMetadata","wantedSamples","bands","level","imageResolutions","getTileWidth","getTileHeight","viewRejector","resolutionFactor","scaledSourceResolutions","reverse","sourceImagery","unshift","outer","nodata","TileGrid","loadTile_","viewResolver","showFullExtent","toUserCoordinate","toUserExtent","sourceInfo","pool","pixelBounds","samples","fillValue","bandNumber","sampleIndex","readOptions","interleave","readRasters","maskIndex","mask","composeTile_","sourceSamples","addAlpha","dataLength","transparent","gain","bias","stats","sourceValue","nodataIsNaN","appendParams","uri","keyParams","qs","WMTSTileGrid","origins","sizes","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","metersPerUnit","getMetersPerUnit","switchOriginXY","getAxisOrientation","substr","matrixAvailable","elt_ml","tileWidth","tileHeight","TileImage","requestEncoding","urls","reprojectionErrorThreshold","tileClass","tileLoadFunction","tilePixelRatio","version_","format_","dimensions_","dimensions","layer_","matrixSet_","requestEncoding_","getKeyForDimensions_","tileUrlFunction","createFromWMTSTemplate","setUrls","setTileUrlFunction","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getVersion","res","updateDimensions","localContext","optionsFromCapabilities","wmtsCap","config","layers","tileMatrixSets","idx","findIndex","tileMatrixSet","el","supportedCRS","proj1","proj2","matrixSets","matrixSetObj","projConfig","switchXY","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","constraint","encodings"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/entities/lib/encode.js","webpack:///./node_modules/@radiantearth/stac-fields/formatters.js","webpack:///./node_modules/entities/lib/decode_codepoint.js","webpack:///./node_modules/entities/lib/index.js","webpack:///./node_modules/@openeo/vue-components/components/internal/StacFields.vue?3a1f","webpack:///./node_modules/entities/lib/decode.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/commonmark/lib/node.js","webpack:///./node_modules/commonmark/lib/from-code-point.js","webpack:///./node_modules/commonmark/lib/common.js","webpack:///./node_modules/commonmark/lib/inlines.js","webpack:///./node_modules/commonmark/lib/blocks.js","webpack:///./node_modules/commonmark/lib/render/renderer.js","webpack:///./node_modules/commonmark/lib/render/html.js","webpack:///./node_modules/commonmark/lib/render/xml.js","webpack:///./node_modules/string.prototype.repeat/repeat.js","webpack:///./node_modules/@openeo/vue-components/components/internal/StacFields.vue?b56c","webpack:///node_modules/@openeo/vue-components/components/internal/StacFields.vue","webpack:///./node_modules/@openeo/vue-components/components/internal/StacFields.vue?1809","webpack:///./node_modules/@openeo/vue-components/components/internal/StacFields.vue"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","escape","encodeHTML","encodeXML","xml_json_1","inverseXML","getInverseObj","default","xmlReplacer","getInverseReplacer","getInverse","entities_json_1","inverseHTML","htmlReplacer","obj","keys","sort","reduce","inverse","name","single","multiple","_i","_a","length","k","push","start","end","charCodeAt","count","splice","unshift","join","RegExp","reNonASCII","singleCharReplacer","c","codePointAt","toString","toUpperCase","re","data","replace","reXmlChars","Registry","externalRenderer","prefix","spec","Fields","extensions","_","normalizeField","field","metadata","links","assets","specs","key","addMetadataField","type","str","String","arr","formatter","list","tag","slice","map","DataTypes","null","url","title","rel","target","x","e","html","label","formatKey","Array","isArray","split","part","substr","fields","parts","alias","assign","format","Formatters","isObject","items","itemOrder","i1","i2","id","order","localeCompare","item","hexString","Error","Uint8Array","match","byte","parseInt","bytes","padStart","objectList","o","a","indexOf","unit","toList","v","toObject","num","parseFloat","toLocaleString","undefined","maximumFractionDigits","bool","boolean","number","string","array","object","context","parent","toLink","toLowerCase","Date","timeZone","timeZoneName","error","day","month","year","licenses","filter","link","href","provider","roles","description","r","formatCommonMark","commonmark","reader","Parser","writer","HtmlRenderer","safe","smart","render","parse","software","version","Utils","authority","code","formatEPSG","shorten","formatDate","formatTimestamp","date","sortExtents","b","formatTemporalExtent","formatted","indent","keyword","tabs","repeat","fileSizeUnits","i","Math","floor","log","pow","toFixed","multihash","meta","decode","hexToUint8","hex","uint8ToHex","digest","fileDataTypes","rows","chunk","formatCSV","numeric","find","formatGrouped","coreKey","groups","ext","getSpecification","isSummarizedListWithKeys","listWithKeys","itemFieldNames","temp","values","keysFromListOfObjects","fieldName","includes","forEach","explain","minimum","formatExtent","maximum","result","custom","console","warn","extension","properties","formatAsset","asset","formatLink","formatSummaries","collection","summaries","formatCollection","formatItemProperties","mapping","callback","p","formattedValues","normalizeFields","module","Helper","decode_json_1","decodeCodePoint","codePoint","output","fromCharCode","encode","decodeStrict","decode_1","encode_1","level","decodeXML","decodeHTML","decodeHTMLStrict","encode_2","enumerable","get","decode_2","legacy_json_1","decode_codepoint_1","getStrictDecoder","getReplacer","sorter","charAt","secondChar","legacy","j","replacer","encodeCache","getEncodeCache","exclude","ch","cache","test","keepEscaped","l","nextCode","defaultChars","encodeURIComponent","componentChars","isContainer","node","_type","resumeAt","entering","current","cur","container","_firstChild","root","_next","_parent","NodeWalker","next","Node","nodeType","sourcepos","_lastChild","_prev","_sourcepos","_lastLineBlank","_lastLineChecked","_open","_string_content","_literal","_listData","_info","_destination","_title","_isFenced","_fenceChar","_fenceLength","_fenceOffset","_level","_onEnter","_onExit","proto","prototype","set","s","t","tight","n","delimiter","delim","appendChild","child","unlink","prependChild","insertAfter","sibling","insertBefore","walker","_fromCodePoint","C_BACKSLASH","ENTITY","TAGNAME","ATTRIBUTENAME","UNQUOTEDVALUE","SINGLEQUOTEDVALUE","DOUBLEQUOTEDVALUE","ATTRIBUTEVALUE","ATTRIBUTEVALUESPEC","ATTRIBUTE","OPENTAG","CLOSETAG","HTMLCOMMENT","PROCESSINGINSTRUCTION","DECLARATION","CDATA","HTMLTAG","reHtmlTag","reBackslashOrAmp","ESCAPABLE","reEntityOrEscapedChar","XMLSPECIAL","reXmlSpecial","unescapeChar","unescapeString","normalizeURI","uri","err","replaceUnsafeChar","escapeXml","fromCodePoint","RangeError","stringFromCharCode","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","index","arguments","Number","isFinite","apply","C_NEWLINE","C_ASTERISK","C_UNDERSCORE","C_BACKTICK","C_OPEN_BRACKET","C_CLOSE_BRACKET","C_LESSTHAN","C_BANG","C_AMPERSAND","C_OPEN_PAREN","C_CLOSE_PAREN","C_COLON","C_SINGLEQUOTE","C_DOUBLEQUOTE","ESCAPED_CHAR","rePunctuation","reLinkTitle","reLinkDestinationBraces","reEscapable","reEntityHere","reTicks","reTicksHere","reEllipses","reDash","reEmailAutolink","reAutolink","reSpnl","reWhitespaceChar","reUnicodeWhitespaceChar","reFinalSpace","reInitialSpace","reSpaceAtEndOfLine","reLinkLabel","reMain","normalizeReference","trim","m","exec","subject","pos","peek","spnl","parseBackticks","block","ticks","matched","contents","afterOpenTicks","parseBackslash","subj","parseAutolink","dest","parseHtmlTag","scanDelims","cc","char_before","char_after","cc_after","left_flanking","right_flanking","can_open","can_close","after_is_whitespace","after_is_punctuation","before_is_whitespace","before_is_punctuation","numdelims","startpos","handleDelim","res","options","delimiters","origdelims","previous","removeDelimiter","removeDelimitersBetween","bottom","top","processEmphasis","stack_bottom","opener","closer","old_closer","opener_inl","closer_inl","tempstack","use_delims","tmp","opener_found","openers_bottom","odd_match","closercc","emph","literal","parseLinkTitle","parseLinkDestination","savepos","openparens","parseLinkLabel","parseOpenBracket","addBracket","parseBang","parseCloseBracket","is_image","reflabel","brackets","active","removeBracket","image","beforelabel","bracketAfter","refmap","destination","previousDelimiter","parseEntity","parseString","chars","enCount","emCount","parseNewline","lastc","hardbreak","parseReference","rawlabel","matchChars","beforetitle","atLineEnd","normlabel","parseInline","parseInlines","InlineParser","CODE_INDENT","C_TAB","C_GREATERTHAN","C_SPACE","reHtmlBlockOpen","reHtmlBlockClose","reThematicBreak","reMaybeSpecial","reNonSpace","reBulletListMarker","reOrderedListMarker","reATXHeadingMarker","reCodeFence","reClosingCodeFence","reSetextHeadingLine","reLineEnding","isBlank","isSpaceOrTab","ln","endsWithBlankLine","addLine","partiallyConsumedTab","offset","charsToTab","column","tip","currentLine","addChild","blocks","canContain","finalize","lineNumber","column_number","newBlock","parseListMarker","parser","nextc","spacesStartCol","spacesStartOffset","rest","nextNonspace","bulletChar","padding","markerOffset","advanceNextNonspace","advanceOffset","blank_item","spaces_after_marker","listsMatch","list_data","item_data","closeUnmatchedBlocks","allClosed","oldtip","lastMatchedContainer","document","continue","acceptsLines","subitem","block_quote","indented","blank","heading","thematic_break","code_block","lastLineLength","content","newlinePos","firstLine","info","html_block","_htmlBlockType","paragraph","hasReferenceDefs","inlineParser","blockStarts","fenceLength","blockType","columns","charsToAdvance","nextNonspaceColumn","findNextNonspace","cols","incorporateLine","lastChild","all_matched","doc","matchedLeaf","starts","startsLen","lastLineBlank","cont","above","processInlines","event","Document","input","time","lines","len","timeEnd","Renderer","ast","buffer","lastOut","lit","cr","out","esc","reUnsafeProtocol","reSafeDataProtocol","potentiallyUnsafe","attrs","selfclosing","disableTags","attrib","softbreak","linebreak","strong","grandparent","listTight","tagname","info_words","listType","listStart","html_inline","custom_inline","onEnter","onExit","custom_block","att","create","text","reXMLTag","toTagName","XmlRenderer","indentLevel","selfClosing","nodetype","listDelimiter","delimword","$defineProperty","TypeError","Infinity","_vm","_h","$createElement","_c","_self","staticClass","_l","group","headingTag","domProps","_s","prop","class","wrap","Boolean","_t","_e","_v","col","row","staticRenderFns","StacFields","components","Process","props","ignore","required","computed","ignoreFn","methods","component"],"mappings":"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","file":"js/chunk-539b3a1a.1adbd055.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escape = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\nexports.encodeXML = getInverse(inverseXML, xmlReplacer);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nfunction singleCharReplacer(c) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return \"&#x\" + c.codePointAt(0).toString(16).toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reXmlChars = getInverseReplacer(inverseXML);\nfunction escape(data) {\n    return data\n        .replace(reXmlChars, singleCharReplacer)\n        .replace(reNonASCII, singleCharReplacer);\n}\nexports.escape = escape;\n","var Registry = {\r\n\r\n\texternalRenderer: false,\r\n\r\n\taddExtension(prefix, spec) {\r\n\t\tFields.extensions[prefix] = _.normalizeField(spec, Fields.extensions);\r\n\t},\r\n\r\n\taddMetadataField(field, spec) {\r\n\t\tFields.metadata[field] = _.normalizeField(spec, Fields.metadata);\r\n\t},\r\n\r\n\taddLinkField(field, spec) {\r\n\t\tFields.links[field] = _.normalizeField(spec, Fields.links);\r\n\t},\r\n\r\n\taddAssetField(field, spec) {\r\n\t\tFields.assets[field] = _.normalizeField(spec, Fields.assets);\r\n\t},\r\n\r\n\taddMetadataFields(specs) {\r\n\t\tfor(var key in specs) {\r\n\t\t\tRegistry.addMetadataField(key, specs[key]);\r\n\t\t}\r\n\t},\r\n\r\n\tgetSpecification(field, type = null) {\r\n\t\tlet spec = {};\r\n\t\tif (type === 'assets' && Fields.assets[field]) {\r\n\t\t\tspec = Fields.assets[field];\r\n\t\t}\r\n\t\telse if (type === 'links' && Fields.links[field]) {\r\n\t\t\tspec = Fields.links[field];\r\n\t\t}\r\n\t\telse if (Fields.metadata[field]) {\r\n\t\t\tspec = Fields.metadata[field];\r\n\t\t}\r\n\t\treturn spec;\r\n\t}\r\n\r\n};\r\n\r\nvar _ = {\r\n\r\n\te(str) {\r\n\t\tif (typeof str !== 'string') {\r\n\t\t\tstr = String(str);\r\n\t\t}\r\n\t\treturn str.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, '&apos;');\r\n\t},\r\n\r\n\ttoList(arr, sort = false, formatter = null) {\r\n\t\tlet list = arr;\r\n\t\tlet tag = 'ul';\r\n\t\tif (sort) {\r\n\t\t\tlist = list.slice(0);\r\n\t\t\tif (typeof sort === 'function') {\r\n\t\t\t\tlist.sort(sort);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.sort();\r\n\t\t\t}\r\n\t\t\ttag = 'ol';\r\n\t\t}\r\n\t\tif (typeof formatter === 'function') {\r\n\t\t\tlist = list.map(formatter);\r\n\t\t}\r\n\t\tif (list.length === 0) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t\telse if (list.length === 1) {\r\n\t\t\treturn list[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<${tag}><li>${list.join(\"</li><li>\")}</li></${tag}>`;\r\n\t\t}\r\n\t},\r\n\r\n\ttoLink(url, title = \"\", rel = \"\", target = \"_blank\") {\r\n\t\tif (!title) {\r\n\t\t\tif (url.length > 50) {\r\n\t\t\t\ttitle = url.replace(/^\\w+:\\/\\/([^\\/]+)((\\/[^\\/\\?]+)*\\/([^\\/\\?]+)(\\?.*)?)?$/ig, function(...x) {\r\n\t\t\t\t\tif (x[4]) {\r\n\t\t\t\t\t\treturn x[1] + '​/[…]/​' + x[4]; // There are invisible zero-width whitespaces after and before the slashes. It allows breaking the link in the browser. Be careful when editing.\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn x[1];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle = url.replace(/^\\w+:\\/\\//i, '');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn `<a href=\"${_.e(url)}\" rel=\"${_.e(rel)}\" target=\"${_.e(target)}\">${_.e(title)}</a>`;\r\n\t},\r\n\r\n\ttoObject(obj, formatter = null) {\r\n\t\tlet html = '<dl>';\r\n\t\tfor(let key in obj) {\r\n\t\t\t// ToDo: also convert CamelCase? but not abbreviations like \"USA\".\r\n\t\t\tlet label = _.formatKey(key, true);\r\n\t\t\tlet value = obj[key];\r\n\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\tvalue = formatter(value, key, obj);\r\n\t\t\t}\r\n\t\t\t// TODO: Format label (also in arrays)\r\n\t\t\thtml += `<dt>${label}</dt><dd>${value}</dd>`;\r\n\t\t}\r\n\t\thtml += `</dl>`;\r\n\t\treturn html;\r\n\t},\r\n\r\n\tisObject(obj) {\r\n\t\treturn (typeof obj === 'object' && obj === Object(obj) && !Array.isArray(obj));\r\n\t},\r\n\r\n\tformatKey(key, prefix = false) {\r\n\t\tif (prefix === false) {\r\n\t\t\tkey = key.replace(/^\\w+:/i, '');\r\n\t\t}\r\n\t\treturn _.e(key).split(/[:_\\-\\s]/g).map(part => part.substr(0, 1).toUpperCase() + part.substr(1)).join(' ');\r\n\t},\r\n\r\n\tnormalizeFields(fields) {\r\n\t\tlet parts = ['extensions', 'metadata', 'links', 'assets'];\r\n\t\tfor (let part of parts) {\r\n\t\t\tfor(let key in fields[part]) {\r\n\t\t\t\tfields[part][key] = _.normalizeField(fields[part][key], fields[part]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn fields;\r\n\t},\r\n\r\n\tnormalizeField(spec, fields = {}) {\r\n\t\t// If just a string label is given, make a normal object with a label from it\r\n\t\tif (typeof spec === 'string') {\r\n\t\t\treturn {\r\n\t\t\t\tlabel: spec\r\n\t\t\t};\r\n\t\t}\r\n\t\t// Resolve alias\r\n\t\tif (typeof spec.alias === 'string') {\r\n\t\t\t// As we don't know whether the alias has been resolved so far, resolve it here, too.\r\n\t\t\treturn Object.assign(spec, _.normalizeField(fields[spec.alias], fields));\r\n\t\t}\r\n\r\n\t\t// Add formatting callback as `formatter`\r\n\t\tif (typeof spec.format === 'string') {\r\n\t\t\tspec.formatter = Formatters[`format${spec.format}`];\r\n\t\t}\r\n\r\n\t\t// Normalize items\r\n\t\tif (_.isObject(spec.items)) {\r\n\t\tlet itemOrder = [];\r\n\t\t\tfor(let key in spec.items) {\r\n\t\t\t\tspec.items[key] = _.normalizeField(spec.items[key], fields);\r\n\t\t\t\titemOrder.push(Object.assign({key}, spec.items[key]));\r\n\t\t\t}\r\n\r\n\t\t\tspec.itemOrder = itemOrder\r\n\t\t\t\t.sort((i1, i2) => {\r\n\t\t\t\t\tif (i1.id === true) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (i2.id === true) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (typeof i1.order === 'number' && typeof i2.order === 'number') {\r\n\t\t\t\t\t\treturn i1.order - i2.order;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn i1.label.localeCompare(i2.label);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.map(item => item.key);\r\n\t\t}\r\n\r\n\t\treturn spec;\r\n\t},\r\n\r\n\thexToUint8(hexString) {\r\n\t\tif(hexString.length === 0 || hexString.length % 2 !== 0){\r\n\t\t\tthrow new Error(`The string \"${hexString}\" is not valid hex.`)\r\n\t\t}\r\n  \t\treturn new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\r\n\t},\r\n\r\n\tuint8ToHex(bytes) {\r\n\t\treturn bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\r\n\t},\r\n\r\n\tkeysFromListOfObjects(objectList) {\r\n\t\treturn objectList.reduce(\r\n\t\t\t(arr, o) => Object.keys(o).reduce(\r\n\t\t\t\t(a, k) => {\r\n\t\t\t\t\tif (a.indexOf(k) == -1) {\r\n\t\t\t\t\t\ta.push(k);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn a;\r\n\t\t\t\t},\r\n\t\t\t\tarr\r\n\t\t\t),\r\n\t\t\t[]\r\n\t\t);\r\n\t},\r\n\r\n\tunit(value, unit = '') {\r\n\t\tif (typeof unit === 'string' && unit.length > 0) {\r\n\t\t\treturn `${value}&nbsp;<span class=\"unit\">${unit}</unit>`;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n};\r\n\r\nvar DataTypes = {\r\n\r\n\tarray(arr, sort = false, unit = '') {\r\n\t\treturn _.toList(arr, sort, v => DataTypes.format(v, unit));\r\n\t},\r\n\t\r\n\tobject(obj) {\r\n\t\treturn _.toObject(obj, v => DataTypes.format(v));\r\n\t},\r\n\t\r\n\tnull(label = 'n/a') {\r\n\t\treturn `<i class=\"null\">${label}</i>`;\r\n\t},\r\n\t\r\n\tnumber(num, unit = '') {\r\n\t\tif (typeof num !== 'number') {\r\n\t\t\tnum = parseFloat(num);\r\n\t\t}\r\n\t\treturn _.unit(num.toLocaleString(undefined, {maximumFractionDigits: 10}), unit);\r\n\t},\r\n\r\n\tstring(str, unit = '') {\r\n\t\treturn _.unit(_.e(str).replace(/(\\r\\n|\\r|\\n){2,}/g, '<br />'), unit);\r\n\t},\r\n\t\r\n\tboolean(bool) {\r\n\t\treturn bool ? '✔️' : '❌';\r\n\t},\r\n\t\r\n\tformat(value, unit = '') {\r\n\t\tif (typeof value === 'boolean') {\r\n\t\t\treturn DataTypes.boolean(value);\r\n\t\t}\r\n\t\telse if (typeof value === 'number') {\r\n\t\t\treturn DataTypes.number(value, unit);\r\n\t\t}\r\n\t\telse if (typeof value === 'string') {\r\n\t\t\treturn DataTypes.string(value, unit);\r\n\t\t}\r\n\t\telse if (Array.isArray(value)) {\r\n\t\t\treturn DataTypes.array(value, unit);\r\n\t\t}\r\n\t\telse if (_.isObject(value)) {\r\n\t\t\treturn DataTypes.object(value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nvar Formatters = {\r\n\r\n\tformatUrl(value, field, spec, context = null, parent = null) {\r\n\t\tlet title = _.isObject(parent) && typeof parent === 'string' ? parent.title : value;\r\n\t\treturn _.toLink(value, title, parent.rel || \"\");\r\n\t},\r\n\r\n\tformatMediaType(value) {\r\n\t\tif (typeof value !== 'string') {\r\n\t\t\treturn DataTypes.null('Unknown');\r\n\t\t}\r\n\t\tswitch(value.toLowerCase()) {\r\n\t\t\tcase 'image/tiff':\r\n\t\t\t\treturn 'TIFF image';\r\n\t\t\tcase 'image/tiff; application=geotiff':\r\n\t\t\t\treturn 'GeoTIFF image';\r\n\t\t\tcase 'image/tiff; application=geotiff; profile=cloud-optimized':\r\n\t\t\t\treturn 'Cloud-optimized GeoTIFF image';\r\n\t\t\tcase 'image/jp2':\r\n\t\t\t\treturn 'JPEG 2000 image';\r\n\t\t\tcase 'image/png':\r\n\t\t\tcase 'image/apng':\r\n\t\t\tcase 'image/vnd.mozilla.apng':\r\n\t\t\t\treturn 'PNG image';\r\n\t\t\tcase 'image/gif':\r\n\t\t\t\treturn 'GIF image';\r\n\t\t\tcase 'image/jpeg':\r\n\t\t\tcase 'image/jpg':\r\n\t\t\t\treturn 'JPEG image';\r\n\t\t\tcase 'image/webp':\r\n\t\t\t\treturn 'WebP image';\r\n\t\t\tcase 'image/bmp':\r\n\t\t\tcase 'image/x-bmp':\r\n\t\t\tcase 'image/x-ms-bmp':\r\n\t\t\tcase 'image/wbmp':\r\n\t\t\t\treturn 'Bitmap image';\r\n\t\t\tcase 'image/svg+xml':\r\n\t\t\t\treturn 'SVG vector image';\r\n\t\t\tcase 'text/csv':\r\n\t\t\t\treturn 'Comma-separated values (CSV)';\r\n\t\t\tcase 'text/xml':\r\n\t\t\tcase 'application/xml':\r\n\t\t\t\treturn 'XML';\r\n\t\t\tcase 'text/json':\r\n\t\t\tcase 'application/json':\r\n\t\t\t\treturn 'JSON';\r\n\t\t\tcase 'text/yaml':\r\n\t\t\tcase 'text/vnd.yaml':\r\n\t\t\tcase 'text/x-yaml':\r\n\t\t\tcase 'application/x-yaml':\r\n\t\t\t\treturn 'YAML';\r\n\t\t\tcase 'application/geo+json':\r\n\t\t\t\treturn 'GeoJSON';\r\n\t\t\tcase 'application/geopackage+vnd.sqlite3':\r\n\t\t\tcase 'application/geopackage+sqlite3':\r\n\t\t\t\treturn 'GeoPackage';\r\n\t\t\tcase 'text/html':\r\n\t\t\tcase 'application/xhtml+xml':\r\n\t\t\t\treturn 'HTML (Website)';\r\n\t\t\tcase 'text/plain':\r\n\t\t\t\treturn 'Text document';\r\n\t\t\tcase 'text/markdown':\r\n\t\t\t\treturn 'Markdown document';\r\n\t\t\tcase 'application/pdf':\r\n\t\t\t\treturn 'PDF document';\r\n\t\t\tcase 'application/zip':\r\n\t\t\t\treturn 'ZIP archive';\r\n\t\t\tcase 'application/gzip':\r\n\t\t\t\treturn 'GZIP archive';\r\n\t\t\tcase 'application/x-hdf':\r\n\t\t\t\treturn 'HDF';\r\n\t\t\tcase 'application/x-netcdf':\r\n\t\t\t\treturn 'NetCDF';\r\n\t\t\tcase 'application/octet-stream':\r\n\t\t\t\treturn 'Binary file';\r\n\t\t\tdefault:\r\n\t\t\t\tlet parts = value.toLowerCase().match(/^(\\w+)\\/(?:vnd.|x.)?([\\w-\\+\\.]+)$/);\r\n\t\t\t\tif (Array.isArray(parts) && parts.length >= 2) {\r\n\t\t\t\t\tlet format = _.formatKey(parts[2]);\r\n\t\t\t\t\tswitch(parts[1]) {\r\n\t\t\t\t\t\tcase 'audio':\r\n\t\t\t\t\t\t\treturn `${format} audio`;\r\n\t\t\t\t\t\tcase 'image':\r\n\t\t\t\t\t\t\treturn `${format} image`;\r\n\t\t\t\t\t\tcase 'font':\r\n\t\t\t\t\t\t\treturn `Font`;\r\n\t\t\t\t\t\tcase 'model':\r\n\t\t\t\t\t\t\treturn `${format} 3D model`;\r\n\t\t\t\t\t\tcase 'video':\r\n\t\t\t\t\t\t\treturn `${format} video`;\r\n\t\t\t\t\t\tcase 'text':\r\n\t\t\t\t\t\tcase 'application':\r\n\t\t\t\t\t\t\treturn format;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn _.e(value);\r\n\t\t}\r\n\t},\r\n\r\n\tformatTimestamp(value) {\r\n\t\tif (typeof value === 'string') {\r\n\t\t\ttry {\r\n\t\t\t\treturn new Date(value).toLocaleString([], {\r\n\t\t\t\t\ttimeZone: \"UTC\",\r\n\t\t\t\t\ttimeZoneName: \"short\"\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {}\r\n\t\t}\r\n\t\treturn DataTypes.null();\r\n\t},\r\n\r\n\tformatDate(value) {\r\n\t\tif (typeof value === 'string') {\r\n\t\t\ttry {\r\n\t\t\t\treturn new Date(value).toLocaleString([], {\r\n\t\t\t\t\tday: 'numeric',\r\n\t\t\t\t\tmonth: 'numeric',\r\n\t\t\t\t\tyear: 'numeric'\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {}\r\n\t\t}\r\n\t\treturn DataTypes.null();\r\n\t},\r\n\r\n\tformatLicense(value, field, spec, context = null) {\r\n\t\tif (typeof value !== 'string' || value.length === 0) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\r\n\t\t// We could use the spdx-license-ids and/or spdx-to-html packages previously used in STAC Browser,\r\n\t\t// but let's try it without additional dependency for now.\r\n\t\tif (value !== 'proprietary' && value !== 'various' && value.match(/^[\\w\\.\\-]+$/i)) { // SPDX\r\n\t\t\treturn _.toLink(`https://spdx.org/licenses/${value}.html`, value, \"license\");\r\n\t\t}\r\n\t\t\r\n\t\tlet licenses = Array.isArray(context.links) ? context.links.filter(link => (_.isObject(link) && typeof link.href === 'string' && link.rel === 'license')) : [];\r\n\t\tif (licenses.length > 0) {\r\n\t\t\treturn _.toList(licenses, false, link => _.toLink(link.href, link.title || value, \"license\"));\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.string(value);\r\n\t\t}\r\n\t},\r\n\r\n\tformatProviders(value) {\r\n\t\treturn _.toList(value, false, provider => {\r\n\t\t\tlet name = provider.name;\r\n\t\t\tlet roles = '';\r\n\t\t\tlet description = '';\r\n\t\t\tif (typeof provider.url === 'string' && provider.url.length > 0) {\r\n\t\t\t\tname = _.toLink(provider.url, name);\r\n\t\t\t}\r\n\t\t\tif (Array.isArray(provider.roles) && provider.roles.length > 0) {\r\n\t\t\t\troles = provider.roles.map(r => _.e(r)).join(', ');\r\n\t\t\t\troles = ` (<em>${roles}</em>)`;\r\n\t\t\t}\r\n\t\t\tif (typeof provider.description === 'string' && provider.description.length > 0) {\r\n\t\t\t\tdescription = Formatters.formatCommonMark(provider.description);\r\n\t\t\t}\r\n\t\t\treturn `${name}${roles}${description}`;\r\n\t\t});\r\n\t},\r\n\r\n\tformatCommonMark(value) {\r\n\t\tif (typeof value !== 'string' || value.length === 0) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t\tconst commonmark = require('commonmark');\r\n\t\tlet reader = new commonmark.Parser();\r\n\t\tlet writer = new commonmark.HtmlRenderer({safe: true, smart: true});\r\n\t\tlet html = writer.render(reader.parse(value));\r\n\t\treturn `<div class=\"description\">${html}</div>`;\r\n\t},\r\n\r\n\tformatSoftware(value) {\r\n\t\tif (!_.isObject(value)) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\r\n\t\tlet list = [];\r\n\t\tfor(let software in value) {\r\n\t\t\tlet version = value[software];\r\n\t\t\tif ((typeof version === 'string' && version.length > 0) || typeof version === 'number') {\r\n\t\t\t\tlist.push(`${software} (${version})`);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.push(software);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn _.toList(list, true);\r\n\t},\r\n\r\n\tformatDOI(value) {\r\n\t\tvalue = _.e(value);\r\n\t\treturn _.toLink(`http://doi.org/${value}`, value);\r\n\t},\r\n\r\n\tformatCRS(value) {\r\n\t\treturn _.toList(value, false, value => {\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\tlet title = value\r\n\t\t\t\t\t.replace(/^https?:\\/\\/www\\.opengis\\.net\\/def\\/crs\\//i, '') // HTTP(s) URI\r\n\t\t\t\t\t.replace(/^urn:ogc:def:crs:/i, ''); // OGC URN\r\n\t\t\t\treturn _.toLink(value, title);\r\n\t\t\t}\r\n\t\t\treturn _.e(value);\r\n\t\t});\r\n\t},\r\n\r\n\tformatEPSG(value) {\r\n\t\t// Remove leading 'epsg:' which people sometimes prepend\r\n\t\tif (typeof value === 'string') {\r\n\t\t\tvalue = value.replace(/^epsg:/i, '');\r\n\t\t}\r\n\t\tvalue = parseInt(value, 10);\r\n\t\tif (value > 0) {\r\n\t\t\treturn _.toLink(`http://epsg.io/${value}`, value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t},\r\n\r\n\tformatExtent(value, unit = '') {\r\n\t\tif (!Array.isArray(value) || value.length < 2 || (value[0] === null && value[1] === null)) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t\telse if (value[0] === null) {\r\n\t\t\treturn `Until ${DataTypes.format(value[1], unit)}`;\r\n\t\t}\r\n\t\telse if (value[1] === null) {\r\n\t\t\treturn `From ${DataTypes.format(value[0], unit)}`;\r\n\t\t}\r\n\t\telse if (value[0] === value[1]) {\r\n\t\t\treturn DataTypes.format(value[0], unit);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value.map(v => DataTypes.format(v, unit)).join(' – ');\r\n\t\t}\r\n\t},\r\n\r\n\tformatPROJJSON(value) {\r\n\t\tif (!Utils.isObject(value)) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t\tif (Utils.isObject(value.id) && value.id.authority === 'EPSG' && typeof value.code === 'number' && value.code > 0) {\r\n\t\t\treturn 'EPSG ' + Formatters.formatEPSG(value);\r\n\t\t}\r\n\t\telse if (typeof value.name === 'string') {\r\n\t\t\treturn DataTypes.string(value.name);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.object(value);\r\n\t\t}\r\n\t},\r\n\r\n\tformatTemporalExtent(value, shorten = false) {\r\n\t\tlet formatter = shorten ? Formatters.formatDate : Formatters.formatTimestamp;\r\n\t\tif (!Array.isArray(value) || value.length < 2 || (typeof value[0] !== 'string' && typeof value[1] !== 'string')) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t\telse if (typeof value[0] !== 'string') {\r\n\t\t\treturn `Until ${formatter(value[1])}`;\r\n\t\t}\r\n\t\telse if (typeof value[1] !== 'string') {\r\n\t\t\treturn `${formatter(value[0])} until present`;\r\n\t\t}\r\n\t\telse if (value[0] === value[1]) {\r\n\t\t\treturn Formatters.formatTimestamp(value[0]);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value.map(date => formatter(date)).join(' - ');\r\n\t\t}\r\n\t},\r\n\r\n\tformatTemporalExtents(value) {\r\n\t\tlet sortExtents = (a,b) => {\r\n\t\t\tif (a[0] === null) {\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn a[0].localeCompare(b[0]);\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn _.toList(value, sortExtents, Formatters.formatTemporalExtent);\r\n\t},\r\n\r\n\tformatWKT2(value) {\r\n\t\tif (typeof value !== 'string') {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t\t\r\n\t\t// This is a VERY simplistic WKT2 formatter, which may fail to render properly in some cases.\r\n\t\tlet indent = -1;\r\n\t\tlet formatted;\r\n\t\ttry {\r\n\t\t\tformatted = value.replace(/([A-Z]+)\\[|\\]/g, (match, keyword) => {\r\n\t\t\t\tif (match === ']') {\r\n\t\t\t\t\tindent--;\r\n\t\t\t\t\treturn match;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tindent++;\r\n\t\t\t\t\tlet tabs = \"  \".repeat(indent);\r\n\t\t\t\t\treturn `\\n${tabs}${keyword}[`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\t// In case the formatting did not work properly\r\n\t\t\t// (usually the number of [ and ] doesn't match)\r\n\t\t\t// just return the unformatted value\r\n\t\t\tformatted = value;\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\treturn `<pre>${formatted}</pre>`;\r\n\t},\r\n\r\n\tfileSizeUnits: ['B', 'kB', 'MB', 'GB', 'TB'],\r\n\r\n\tformatFileSize(value) {\r\n\t\tif (typeof value !== 'number') {\r\n\t\t\treturn _.e(value);\r\n\t\t}\r\n\t\tvar i = value == 0 ? 0 : Math.floor( Math.log(value) / Math.log(1024) );\r\n\t\treturn _.unit(( value / Math.pow(1024, i) ).toFixed(2) * 1, Formatters.fileSizeUnits[i]);\r\n\t},\r\n\r\n\tformatChecksum(value) {\r\n\t\tif (typeof value !== 'string') {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst multihash = require('multihashes');\r\n\t\t\tconst meta = multihash.decode(_.hexToUint8(value));\r\n\t\t\tconst name = _.e(meta.name);\r\n\t\t\tconst hex = _.e(_.uint8ToHex(meta.digest));\r\n\t\t\treturn `<div class=\"checksum\"><input class=\"checksum-input\" size=\"32\" value=\"${hex}\" readonly /><br /><span class=\"checksum-algo\">Hashing algorithm: <strong>${name}</strong></span></div>`;\r\n\t\t} catch (error) {\r\n\t\t\treturn DataTypes.null();\r\n\t\t}\r\n\t},\r\n\r\n\tfileDataTypes: {\r\n\t\t\"int8\": \"8-bit integer\",\r\n\t\t\"int16\": \"16-bit integer\",\r\n\t\t\"int32\": \"32-bit integer\",\r\n\t\t\"int64\": \"64-bit integer\",\r\n\t\t\"uint8\": \"unsigned 8-bit integer\",\r\n\t\t\"uint16\": \"unsigned 16-bit integer\",\r\n\t\t\"uint32\": \"unsigned 32-bit integer\",\r\n\t\t\"uint64\": \"unsigned 64-bit integer\",\r\n\t\t\"float16\": \"16-bit float\",\r\n\t\t\"float32\": \"32-bit float\",\r\n\t\t\"float64\": \"64-big float\",\r\n\t\t\"cint16\": \"16-bit complex integer\",\r\n\t\t\"cint32\": \"32-bit complex integer\",\r\n\t\t\"cfloat32\": \"32-bit complex float\",\r\n\t\t\"cfloat64\": \"64-bit complex float\",\r\n\t\t\"other\": \"Other\"\r\n\t},\r\n\r\n\tformatFileDataType(value) {\r\n\t\tif (typeof value === 'string' && value in Formatters.fileDataTypes) {\r\n\t\t\treturn `<abbr title=\"${Formatters.fileDataTypes[value]}\">${value}</abbr>`;\r\n\t\t}\r\n\r\n\t\treturn DataTypes.null();\r\n\t},\r\n\r\n\tformatTransform(value) {\r\n\t\tif (Array.isArray(value) && value.length % 3 === 0) {\r\n\t\t\tlet rows = [];\r\n\t\t\tfor (let i = 0; i < value.length; i = i+3) {\r\n\t\t\t\tlet chunk = value.slice(i, i + 3);\r\n\t\t\t\trows.push(`[${Formatters.formatCSV(chunk)}]`);\r\n\t\t\t}\r\n\t\t\treturn rows.join('<br />');\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn Formatters.formatCSV(value);\r\n\t\t}\r\n\t},\r\n\r\n\tformatShape(value) {\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\treturn value.map(_.e).join(' × ');\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.format(value);\r\n\t\t}\r\n\t},\r\n\r\n\tformatCSV(value) {\r\n\t\tif (Array.isArray(value)) {\r\n\t\t\tlet numeric = value.find(v => typeof v === 'number') !== undefined;\r\n\t\t\t// If there's potentially a comma in the values (decimal or thousand separators in numbers), use semicolon instead of comma.\r\n\t\t\treturn value.map(_.e).join(numeric ? '; ' : ', ');\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn DataTypes.format(value);\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\nfunction formatGrouped(context, data, type, filter, coreKey) {\r\n\t// Group fields into extensions\r\n\tlet groups = {};\r\n\tfor(let field in data) {\r\n\t\tlet value;\r\n\t\ttry {\r\n\t\t\tlet parts = field.split(':', 2);\r\n\t\t\tif (parts.length === 1) {\r\n\t\t\t\tparts.unshift(coreKey);\r\n\t\t\t}\r\n\t\t\tlet ext = parts[0];\r\n\t\t\tif (typeof filter === 'function' && !filter(field)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tvalue = data[field];\r\n\t\t\tlet spec = Registry.getSpecification(field, type);\r\n\r\n\t\t\t// Move to another extension (e.g. if no prefix is provided)\r\n\t\t\tif (spec.ext) {\r\n\t\t\t\text = spec.ext;\r\n\t\t\t}\r\n\r\n\t\t\t// Special handling for summaries that contain a list with keys (e.g. cube:dimensions, gee:schema)\r\n\t\t\t// There's usually just a single object included, so get that as value\r\n\t\t\tlet isSummarizedListWithKeys = false;\r\n\t\t\tif (type === 'summaries' && spec.listWithKeys && Array.isArray(value) && value.length > 0) {\r\n\t\t\t\tvalue = value[0];\r\n\t\t\t\tisSummarizedListWithKeys = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Fill items with missing properties\r\n\t\t\tlet items = null;\r\n\t\t\tlet itemOrder = [];\r\n\t\t\tif (_.isObject(spec.items)) {\r\n\t\t\t\tlet temp = value;\r\n\t\t\t\t// Ignore keys for lists that are stored as object (e.g. cube:dimensions)\r\n\t\t\t\tif (spec.listWithKeys) {\r\n\t\t\t\t\ttemp = Object.values(temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet itemFieldNames;\r\n\t\t\t\tif (Array.isArray(temp)) {\r\n\t\t\t\t\titemFieldNames = _.keysFromListOfObjects(temp);\r\n\t\t\t\t}\r\n\t\t\t\telse if (_.isObject(temp)) {\r\n\t\t\t\t\titemFieldNames = Object.keys(temp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\titems = {};\r\n\t\t\t\t// Remove fields from list that are not available in the data\r\n\t\t\t\titemOrder = spec.itemOrder.filter(fieldName => itemFieldNames.includes(fieldName));\r\n\r\n\t\t\t\titemFieldNames.forEach(key => {\r\n\t\t\t\t\tif (typeof spec.items[key] === 'undefined') {\r\n\t\t\t\t\t\t// Add fields that are not specified in fields.json\r\n\t\t\t\t\t\titems[key] = {\r\n\t\t\t\t\t\t\tlabel: _.formatKey(key),\r\n\t\t\t\t\t\t\texplain: key\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t// Place non-specified fields at the end\r\n\t\t\t\t\t\titemOrder.push(key);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// Copy field spec from fields.json\r\n\t\t\t\t\t\titems[key] = spec.items[key];\r\n\t\t\t\t\t\titems[key].label = label(key, spec.items[key]);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Format values\r\n\t\t\tlet formatted;\r\n\r\n\t\t\t// Handle summaries\r\n\t\t\tif (type === 'summaries') {\r\n\t\t\t\tif (!isSummarizedListWithKeys && _.isObject(value)) {\r\n\t\t\t\t\tif (typeof value.minimum !== 'undefined' && typeof value.minimum !== 'undefined') {\r\n\t\t\t\t\t\tformatted = Formatters.formatExtent([value.minimum, value.maximum], spec.unit);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tformatted = DataTypes.object(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (Registry.externalRenderer && items) {\r\n\t\t\t\t\tlet formatted = isSummarizedListWithKeys ? Object.assign({}, value) : value.slice(0);\r\n\t\t\t\t\t// Go through each field's summary\r\n\t\t\t\t\tfor(let i in formatted) {\r\n\t\t\t\t\t\tlet result = _.isObject(formatted[i]) ? {} : [];\r\n\t\t\t\t\t\t// Go through each entry in a field's summary (this is besically a single value as defined in the Item spec)\r\n\t\t\t\t\t\tfor(let key in items) {\r\n\t\t\t\t\t\t\tresult[key] = format(formatted[i][key], key, context, data, items[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tformatted[i] = result;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (Array.isArray(value)) {\r\n\t\t\t\t\tformatted = _.toList(value, !spec.custom && !spec.items, v => format(v, field, context, data, spec));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.warn(`Invalid summary value: ${value}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Fallback to \"normal\" rendering if not handled by summaries yet\r\n\t\t\tif (typeof formatted === 'undefined') {\r\n\t\t\t\tformatted = format(value, field, context, data, spec);\r\n\t\t\t}\r\n\r\n\t\t\t// Add group if missing\r\n\t\t\tif (!_.isObject(groups[ext])) {\r\n\t\t\t\tgroups[ext] = {\r\n\t\t\t\t\textension: ext,\r\n\t\t\t\t\tlabel: extension(ext),\r\n\t\t\t\t\tproperties: {}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tgroups[ext].properties[field] = {\r\n\t\t\t\tlabel: label(field, spec),\r\n\t\t\t\tvalue,\r\n\t\t\t\tformatted,\r\n\t\t\t\titems,\r\n\t\t\t\titemOrder,\r\n\t\t\t\tspec\r\n\t\t\t};\r\n\t\t} catch(error) {\r\n\t\t\tconsole.error(`Field '${field}' with value '${value}' resulted in an error`, error);\r\n\t\t}\r\n\t}\r\n\treturn Object.values(groups).sort((a,b) => a.extension.localeCompare(b.extension));\r\n\r\n}\r\n\r\n// For assets (item and collection) and item-assets (extension)\r\nfunction formatAsset(asset, context, filter = null, coreKey = '') {\r\n\treturn formatGrouped(context, asset, 'assets', filter, coreKey);\r\n}\r\n\r\n// For links\r\nfunction formatLink(link, context, filter = null, coreKey = '') {\r\n\treturn formatGrouped(context, link, 'links', filter, coreKey);\r\n}\r\n\r\n// For Collection summaries\r\nfunction formatSummaries(collection, filter = null, coreKey = '') {\r\n\treturn formatGrouped(collection, collection.summaries, 'summaries', filter, coreKey);\r\n}\r\n\r\n// For Collections\r\nfunction formatCollection(collection, filter = null, coreKey = '') {\r\n\treturn formatGrouped(collection, collection, 'collection', filter, coreKey);\r\n}\r\n\r\n// For item properties\r\nfunction formatItemProperties(item, filter = null, coreKey = '') {\r\n\treturn formatGrouped(item, item.properties, 'metadata', filter, coreKey);\r\n}\r\n\r\nfunction format(value, field, context = null, parent = null, spec = null) {\r\n\tif (!_.isObject(spec)) {\r\n\t\tspec = Fields.metadata[field] || {};\r\n\t}\r\n\r\n\tif (typeof spec.formatter === 'function') {\r\n\t\treturn spec.formatter(value, field, spec, context, parent);\r\n\t}\r\n\telse if (_.isObject(spec.mapping)) {\r\n\t\tlet key = String(value).toLowerCase();\r\n\t\tif (typeof spec.mapping[key] !== 'undefined') {\r\n\t\t\tvalue = spec.mapping[key];\r\n\t\t}\r\n\t\treturn DataTypes.format(value, spec.unit);\r\n\t}\r\n\telse if (value === null && spec.null) {\r\n\t\treturn DataTypes.null(spec.null);\r\n\t}\r\n\telse if (Array.isArray(value)) {\r\n\t\tlet callback = v => format(v, field, context, parent, spec);\r\n\t\tif (Registry.externalRenderer && (spec.custom || spec.items)) {\r\n\t\t\treturn value.map(callback);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn _.toList(value, false, callback);\r\n\t\t}\r\n\t}\r\n\telse if (_.isObject(value) && _.isObject(spec.items)) {\r\n\t\tlet callback = (v, k, p) => format(v, k, context, p, spec.listWithKeys ? Object.assign({}, spec, {listWithKeys: false}) : spec.items[k]);\r\n\t\tif (Registry.externalRenderer && (spec.custom || spec.items)) {\r\n\t\t\tlet formattedValues = {};\r\n\t\t\tfor(let key in value) {\r\n\t\t\t\tformattedValues[key] = callback(value[key], key, value);\r\n\t\t\t}\r\n\t\t\treturn formattedValues;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn _.toObject(value, callback);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\treturn DataTypes.format(value, spec.unit);\r\n\t}\r\n}\r\n\r\nfunction label(key, spec = null) {\r\n\tif (!_.isObject(spec)) {\r\n\t\tspec = Fields.metadata[key] || {};\r\n\t}\r\n\tif (_.isObject(spec) && typeof spec.label === 'string') {\r\n\t\tif (typeof spec.explain === 'string') {\r\n\t\t\treturn `<abbr title=\"${_.e(spec.explain)}\">${spec.label}</abbr>`;\r\n\t\t}\r\n\t\telse if (typeof spec.label === 'string') {\r\n\t\t\treturn spec.label;\r\n\t\t}\r\n\t}\r\n\treturn _.formatKey(key);\r\n}\r\n\r\nfunction extension(key) {\r\n\treturn label(key, Fields.extensions[key]);\r\n}\r\n\r\nvar Fields = _.normalizeFields(require('./fields.json'));\r\n\r\nmodule.exports = {\r\n\tformat,\r\n\tlabel,\r\n\textension,\r\n\tformatCollection,\r\n\tformatSummaries,\r\n\tformatItemProperties,\r\n\tformatAsset,\r\n\tformatLink,\r\n\tFields,\r\n\tRegistry,\r\n\tHelper: _,\r\n\tDataTypes,\r\n\tFormatters\r\n};","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    var output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n}\nexports.default = decodeCodePoint;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\n// Legacy aliases\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","export * from \"-!../../../../mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../vue-loader/lib/loaders/stylePostLoader.js!../../../../postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../cache-loader/dist/cjs.js??ref--1-0!../../../../vue-loader/lib/index.js??vue-loader-options!./StacFields.vue?vue&type=style&index=0&lang=scss&\"","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var keys = Object.keys(map).join(\"|\");\n    var replace = getReplacer(map);\n    keys += \"|#[xX][\\\\da-fA-F]+|#\\\\d+\";\n    var re = new RegExp(\"&(?:\" + keys + \");\", \"g\");\n    return function (str) { return String(str).replace(re, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    //TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        return map[str.slice(1, -1)];\n    };\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\"use strict\";\n\nfunction isContainer(node) {\n    switch (node._type) {\n        case \"document\":\n        case \"block_quote\":\n        case \"list\":\n        case \"item\":\n        case \"paragraph\":\n        case \"heading\":\n        case \"emph\":\n        case \"strong\":\n        case \"link\":\n        case \"image\":\n        case \"custom_inline\":\n        case \"custom_block\":\n            return true;\n        default:\n            return false;\n    }\n}\n\nvar resumeAt = function(node, entering) {\n    this.current = node;\n    this.entering = entering === true;\n};\n\nvar next = function() {\n    var cur = this.current;\n    var entering = this.entering;\n\n    if (cur === null) {\n        return null;\n    }\n\n    var container = isContainer(cur);\n\n    if (entering && container) {\n        if (cur._firstChild) {\n            this.current = cur._firstChild;\n            this.entering = true;\n        } else {\n            // stay on node but exit\n            this.entering = false;\n        }\n    } else if (cur === this.root) {\n        this.current = null;\n    } else if (cur._next === null) {\n        this.current = cur._parent;\n        this.entering = false;\n    } else {\n        this.current = cur._next;\n        this.entering = true;\n    }\n\n    return { entering: entering, node: cur };\n};\n\nvar NodeWalker = function(root) {\n    return {\n        current: root,\n        root: root,\n        entering: true,\n        next: next,\n        resumeAt: resumeAt\n    };\n};\n\nvar Node = function(nodeType, sourcepos) {\n    this._type = nodeType;\n    this._parent = null;\n    this._firstChild = null;\n    this._lastChild = null;\n    this._prev = null;\n    this._next = null;\n    this._sourcepos = sourcepos;\n    this._lastLineBlank = false;\n    this._lastLineChecked = false;\n    this._open = true;\n    this._string_content = null;\n    this._literal = null;\n    this._listData = {};\n    this._info = null;\n    this._destination = null;\n    this._title = null;\n    this._isFenced = false;\n    this._fenceChar = null;\n    this._fenceLength = 0;\n    this._fenceOffset = null;\n    this._level = null;\n    this._onEnter = null;\n    this._onExit = null;\n};\n\nvar proto = Node.prototype;\n\nObject.defineProperty(proto, \"isContainer\", {\n    get: function() {\n        return isContainer(this);\n    }\n});\n\nObject.defineProperty(proto, \"type\", {\n    get: function() {\n        return this._type;\n    }\n});\n\nObject.defineProperty(proto, \"firstChild\", {\n    get: function() {\n        return this._firstChild;\n    }\n});\n\nObject.defineProperty(proto, \"lastChild\", {\n    get: function() {\n        return this._lastChild;\n    }\n});\n\nObject.defineProperty(proto, \"next\", {\n    get: function() {\n        return this._next;\n    }\n});\n\nObject.defineProperty(proto, \"prev\", {\n    get: function() {\n        return this._prev;\n    }\n});\n\nObject.defineProperty(proto, \"parent\", {\n    get: function() {\n        return this._parent;\n    }\n});\n\nObject.defineProperty(proto, \"sourcepos\", {\n    get: function() {\n        return this._sourcepos;\n    }\n});\n\nObject.defineProperty(proto, \"literal\", {\n    get: function() {\n        return this._literal;\n    },\n    set: function(s) {\n        this._literal = s;\n    }\n});\n\nObject.defineProperty(proto, \"destination\", {\n    get: function() {\n        return this._destination;\n    },\n    set: function(s) {\n        this._destination = s;\n    }\n});\n\nObject.defineProperty(proto, \"title\", {\n    get: function() {\n        return this._title;\n    },\n    set: function(s) {\n        this._title = s;\n    }\n});\n\nObject.defineProperty(proto, \"info\", {\n    get: function() {\n        return this._info;\n    },\n    set: function(s) {\n        this._info = s;\n    }\n});\n\nObject.defineProperty(proto, \"level\", {\n    get: function() {\n        return this._level;\n    },\n    set: function(s) {\n        this._level = s;\n    }\n});\n\nObject.defineProperty(proto, \"listType\", {\n    get: function() {\n        return this._listData.type;\n    },\n    set: function(t) {\n        this._listData.type = t;\n    }\n});\n\nObject.defineProperty(proto, \"listTight\", {\n    get: function() {\n        return this._listData.tight;\n    },\n    set: function(t) {\n        this._listData.tight = t;\n    }\n});\n\nObject.defineProperty(proto, \"listStart\", {\n    get: function() {\n        return this._listData.start;\n    },\n    set: function(n) {\n        this._listData.start = n;\n    }\n});\n\nObject.defineProperty(proto, \"listDelimiter\", {\n    get: function() {\n        return this._listData.delimiter;\n    },\n    set: function(delim) {\n        this._listData.delimiter = delim;\n    }\n});\n\nObject.defineProperty(proto, \"onEnter\", {\n    get: function() {\n        return this._onEnter;\n    },\n    set: function(s) {\n        this._onEnter = s;\n    }\n});\n\nObject.defineProperty(proto, \"onExit\", {\n    get: function() {\n        return this._onExit;\n    },\n    set: function(s) {\n        this._onExit = s;\n    }\n});\n\nNode.prototype.appendChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._lastChild) {\n        this._lastChild._next = child;\n        child._prev = this._lastChild;\n        this._lastChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.prependChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._firstChild) {\n        this._firstChild._prev = child;\n        child._next = this._firstChild;\n        this._firstChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.unlink = function() {\n    if (this._prev) {\n        this._prev._next = this._next;\n    } else if (this._parent) {\n        this._parent._firstChild = this._next;\n    }\n    if (this._next) {\n        this._next._prev = this._prev;\n    } else if (this._parent) {\n        this._parent._lastChild = this._prev;\n    }\n    this._parent = null;\n    this._next = null;\n    this._prev = null;\n};\n\nNode.prototype.insertAfter = function(sibling) {\n    sibling.unlink();\n    sibling._next = this._next;\n    if (sibling._next) {\n        sibling._next._prev = sibling;\n    }\n    sibling._prev = this;\n    this._next = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._next) {\n        sibling._parent._lastChild = sibling;\n    }\n};\n\nNode.prototype.insertBefore = function(sibling) {\n    sibling.unlink();\n    sibling._prev = this._prev;\n    if (sibling._prev) {\n        sibling._prev._next = sibling;\n    }\n    sibling._next = this;\n    this._prev = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._prev) {\n        sibling._parent._firstChild = sibling;\n    }\n};\n\nNode.prototype.walker = function() {\n    var walker = new NodeWalker(this);\n    return walker;\n};\n\nexport default Node;\n\n/* Example of use of walker:\n\n var walker = w.walker();\n var event;\n\n while (event = walker.next()) {\n console.log(event.entering, event.node.type);\n }\n\n */\n","\"use strict\";\n\n// derived from https://github.com/mathiasbynens/String.fromCodePoint\n/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\n\nvar _fromCodePoint;\n\nexport default function fromCodePoint(_) {\n    return _fromCodePoint(_);\n}\n\nif (String.fromCodePoint) {\n    _fromCodePoint = function(_) {\n        try {\n            return String.fromCodePoint(_);\n        } catch (e) {\n            if (e instanceof RangeError) {\n                return String.fromCharCode(0xfffd);\n            }\n            throw e;\n        }\n    };\n} else {\n    var stringFromCharCode = String.fromCharCode;\n    var floor = Math.floor;\n    _fromCodePoint = function() {\n        var MAX_SIZE = 0x4000;\n        var codeUnits = [];\n        var highSurrogate;\n        var lowSurrogate;\n        var index = -1;\n        var length = arguments.length;\n        if (!length) {\n            return \"\";\n        }\n        var result = \"\";\n        while (++index < length) {\n            var codePoint = Number(arguments[index]);\n            if (\n                !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                codePoint < 0 || // not a valid Unicode code point\n                codePoint > 0x10ffff || // not a valid Unicode code point\n                floor(codePoint) !== codePoint // not an integer\n            ) {\n                return String.fromCharCode(0xfffd);\n            }\n            if (codePoint <= 0xffff) {\n                // BMP code point\n                codeUnits.push(codePoint);\n            } else {\n                // Astral code point; split in surrogate halves\n                // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n                codePoint -= 0x10000;\n                highSurrogate = (codePoint >> 10) + 0xd800;\n                lowSurrogate = (codePoint % 0x400) + 0xdc00;\n                codeUnits.push(highSurrogate, lowSurrogate);\n            }\n            if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n                result += stringFromCharCode.apply(null, codeUnits);\n                codeUnits.length = 0;\n            }\n        }\n        return result;\n    };\n}\n","\"use strict\";\n\nimport encode from \"mdurl/encode.js\";\nimport { decodeHTML } from \"entities\";\n\nvar C_BACKSLASH = 92;\n\nvar ENTITY = \"&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});\";\n\nvar TAGNAME = \"[A-Za-z][A-Za-z0-9-]*\";\nvar ATTRIBUTENAME = \"[a-zA-Z_:][a-zA-Z0-9:._-]*\";\nvar UNQUOTEDVALUE = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\nvar SINGLEQUOTEDVALUE = \"'[^']*'\";\nvar DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\nvar ATTRIBUTEVALUE =\n    \"(?:\" +\n    UNQUOTEDVALUE +\n    \"|\" +\n    SINGLEQUOTEDVALUE +\n    \"|\" +\n    DOUBLEQUOTEDVALUE +\n    \")\";\nvar ATTRIBUTEVALUESPEC = \"(?:\" + \"\\\\s*=\" + \"\\\\s*\" + ATTRIBUTEVALUE + \")\";\nvar ATTRIBUTE = \"(?:\" + \"\\\\s+\" + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\nvar OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\" + \"\\\\s*/?>\";\nvar CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\nvar HTMLCOMMENT = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\nvar PROCESSINGINSTRUCTION = \"[<][?][\\\\s\\\\S]*?[?][>]\";\nvar DECLARATION = \"<![A-Z]+\" + \"\\\\s+[^>]*>\";\nvar CDATA = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\nvar HTMLTAG =\n    \"(?:\" +\n    OPENTAG +\n    \"|\" +\n    CLOSETAG +\n    \"|\" +\n    HTMLCOMMENT +\n    \"|\" +\n    PROCESSINGINSTRUCTION +\n    \"|\" +\n    DECLARATION +\n    \"|\" +\n    CDATA +\n    \")\";\nvar reHtmlTag = new RegExp(\"^\" + HTMLTAG);\n\nvar reBackslashOrAmp = /[\\\\&]/;\n\nvar ESCAPABLE = \"[!\\\"#$%&'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]\";\n\nvar reEntityOrEscapedChar = new RegExp(\"\\\\\\\\\" + ESCAPABLE + \"|\" + ENTITY, \"gi\");\n\nvar XMLSPECIAL = '[&<>\"]';\n\nvar reXmlSpecial = new RegExp(XMLSPECIAL, \"g\");\n\nvar unescapeChar = function(s) {\n    if (s.charCodeAt(0) === C_BACKSLASH) {\n        return s.charAt(1);\n    } else {\n        return decodeHTML(s);\n    }\n};\n\n// Replace entities and backslash escapes with literal characters.\nvar unescapeString = function(s) {\n    if (reBackslashOrAmp.test(s)) {\n        return s.replace(reEntityOrEscapedChar, unescapeChar);\n    } else {\n        return s;\n    }\n};\n\nvar normalizeURI = function(uri) {\n    try {\n        return encode(uri);\n    } catch (err) {\n        return uri;\n    }\n};\n\nvar replaceUnsafeChar = function(s) {\n    switch (s) {\n        case \"&\":\n            return \"&amp;\";\n        case \"<\":\n            return \"&lt;\";\n        case \">\":\n            return \"&gt;\";\n        case '\"':\n            return \"&quot;\";\n        default:\n            return s;\n    }\n};\n\nvar escapeXml = function(s) {\n    if (reXmlSpecial.test(s)) {\n        return s.replace(reXmlSpecial, replaceUnsafeChar);\n    } else {\n        return s;\n    }\n};\n\nexport {\n    unescapeString,\n    normalizeURI,\n    escapeXml,\n    reHtmlTag,\n    OPENTAG,\n    CLOSETAG,\n    ENTITY,\n    ESCAPABLE\n};\n","\"use strict\";\n\nimport Node from \"./node.js\";\nimport * as common from \"./common.js\";\nimport fromCodePoint from \"./from-code-point.js\";\nimport { decodeHTML } from \"entities\";\nimport \"string.prototype.repeat\"; // Polyfill for String.prototype.repeat\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString;\n\n// Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\n\n// Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = \"\\\\\\\\\" + ESCAPABLE;\n\nvar ENTITY = common.ENTITY;\nvar reHtmlTag = common.reHtmlTag;\n\nvar rePunctuation = new RegExp(\n    /[!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n);\n\nvar reLinkTitle = new RegExp(\n    '^(?:\"(' +\n        ESCAPED_CHAR +\n        '|[^\"\\\\x00])*\"' +\n        \"|\" +\n        \"'(\" +\n        ESCAPED_CHAR +\n        \"|[^'\\\\x00])*'\" +\n        \"|\" +\n        \"\\\\((\" +\n        ESCAPED_CHAR +\n        \"|[^()\\\\x00])*\\\\))\"\n);\n\nvar reLinkDestinationBraces = /^(?:<(?:[^<>\\n\\\\\\x00]|\\\\.)*>)/;\n\nvar reEscapable = new RegExp(\"^\" + ESCAPABLE);\n\nvar reEntityHere = new RegExp(\"^\" + ENTITY, \"i\");\n\nvar reTicks = /`+/;\n\nvar reTicksHere = /^`+/;\n\nvar reEllipses = /\\.\\.\\./g;\n\nvar reDash = /--+/g;\n\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\nvar reAutolink = /^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\\x00-\\x20]*>/i;\n\nvar reSpnl = /^ *(?:\\n *)?/;\n\nvar reWhitespaceChar = /^[ \\t\\n\\x0b\\x0c\\x0d]/;\n\nvar reUnicodeWhitespaceChar = /^\\s/;\n\nvar reFinalSpace = / *$/;\n\nvar reInitialSpace = /^ */;\n\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\nvar reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\.){0,1000}\\]/;\n\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function(s) {\n    var node = new Node(\"text\");\n    node._literal = s;\n    return node;\n};\n\n// normalize a reference in reference link (remove []s, trim,\n// collapse internal space, unicode case fold.\n// See commonmark/commonmark.js#168.\nvar normalizeReference = function(string) {\n    return string\n        .slice(1, string.length - 1)\n        .trim()\n        .replace(/[ \\t\\r\\n]+/, \" \")\n        .toLowerCase()\n        .toUpperCase();\n};\n\n// INLINE PARSER\n\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\nvar match = function(re) {\n    var m = re.exec(this.subject.slice(this.pos));\n    if (m === null) {\n        return null;\n    } else {\n        this.pos += m.index + m[0].length;\n        return m[0];\n    }\n};\n\n// Returns the code for the character at the current subject position, or -1\n// there are no more characters.\nvar peek = function() {\n    if (this.pos < this.subject.length) {\n        return this.subject.charCodeAt(this.pos);\n    } else {\n        return -1;\n    }\n};\n\n// Parse zero or more space characters, including at most one newline\nvar spnl = function() {\n    this.match(reSpnl);\n    return true;\n};\n\n// All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\nvar parseBackticks = function(block) {\n    var ticks = this.match(reTicksHere);\n    if (ticks === null) {\n        return false;\n    }\n    var afterOpenTicks = this.pos;\n    var matched;\n    var node;\n    var contents;\n    while ((matched = this.match(reTicks)) !== null) {\n        if (matched === ticks) {\n            node = new Node(\"code\");\n            contents = this.subject\n                .slice(afterOpenTicks, this.pos - ticks.length)\n                .replace(/\\n/gm, \" \");\n            if (\n                contents.length > 0 &&\n                contents.match(/[^ ]/) !== null &&\n                contents[0] == \" \" &&\n                contents[contents.length - 1] == \" \"\n            ) {\n                node._literal = contents.slice(1, contents.length - 1);\n            } else {\n                node._literal = contents;\n            }\n            block.appendChild(node);\n            return true;\n        }\n    }\n    // If we got here, we didn't match a closing backtick sequence.\n    this.pos = afterOpenTicks;\n    block.appendChild(text(ticks));\n    return true;\n};\n\n// Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\nvar parseBackslash = function(block) {\n    var subj = this.subject;\n    var node;\n    this.pos += 1;\n    if (this.peek() === C_NEWLINE) {\n        this.pos += 1;\n        node = new Node(\"linebreak\");\n        block.appendChild(node);\n    } else if (reEscapable.test(subj.charAt(this.pos))) {\n        block.appendChild(text(subj.charAt(this.pos)));\n        this.pos += 1;\n    } else {\n        block.appendChild(text(\"\\\\\"));\n    }\n    return true;\n};\n\n// Attempt to parse an autolink (URL or email in pointy brackets).\nvar parseAutolink = function(block) {\n    var m;\n    var dest;\n    var node;\n    if ((m = this.match(reEmailAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node(\"link\");\n        node._destination = normalizeURI(\"mailto:\" + dest);\n        node._title = \"\";\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else if ((m = this.match(reAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node(\"link\");\n        node._destination = normalizeURI(dest);\n        node._title = \"\";\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Attempt to parse a raw HTML tag.\nvar parseHtmlTag = function(block) {\n    var m = this.match(reHtmlTag);\n    if (m === null) {\n        return false;\n    } else {\n        var node = new Node(\"html_inline\");\n        node._literal = m;\n        block.appendChild(node);\n        return true;\n    }\n};\n\n// Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\nvar scanDelims = function(cc) {\n    var numdelims = 0;\n    var char_before, char_after, cc_after;\n    var startpos = this.pos;\n    var left_flanking, right_flanking, can_open, can_close;\n    var after_is_whitespace,\n        after_is_punctuation,\n        before_is_whitespace,\n        before_is_punctuation;\n\n    if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        numdelims++;\n        this.pos++;\n    } else {\n        while (this.peek() === cc) {\n            numdelims++;\n            this.pos++;\n        }\n    }\n\n    if (numdelims === 0) {\n        return null;\n    }\n\n    char_before = startpos === 0 ? \"\\n\" : this.subject.charAt(startpos - 1);\n\n    cc_after = this.peek();\n    if (cc_after === -1) {\n        char_after = \"\\n\";\n    } else {\n        char_after = fromCodePoint(cc_after);\n    }\n\n    after_is_whitespace = reUnicodeWhitespaceChar.test(char_after);\n    after_is_punctuation = rePunctuation.test(char_after);\n    before_is_whitespace = reUnicodeWhitespaceChar.test(char_before);\n    before_is_punctuation = rePunctuation.test(char_before);\n\n    left_flanking =\n        !after_is_whitespace &&\n        (!after_is_punctuation ||\n            before_is_whitespace ||\n            before_is_punctuation);\n    right_flanking =\n        !before_is_whitespace &&\n        (!before_is_punctuation || after_is_whitespace || after_is_punctuation);\n    if (cc === C_UNDERSCORE) {\n        can_open = left_flanking && (!right_flanking || before_is_punctuation);\n        can_close = right_flanking && (!left_flanking || after_is_punctuation);\n    } else if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        can_open = left_flanking && !right_flanking;\n        can_close = right_flanking;\n    } else {\n        can_open = left_flanking;\n        can_close = right_flanking;\n    }\n    this.pos = startpos;\n    return { numdelims: numdelims, can_open: can_open, can_close: can_close };\n};\n\n// Handle a delimiter marker for emphasis or a quote.\nvar handleDelim = function(cc, block) {\n    var res = this.scanDelims(cc);\n    if (!res) {\n        return false;\n    }\n    var numdelims = res.numdelims;\n    var startpos = this.pos;\n    var contents;\n\n    this.pos += numdelims;\n    if (cc === C_SINGLEQUOTE) {\n        contents = \"\\u2019\";\n    } else if (cc === C_DOUBLEQUOTE) {\n        contents = \"\\u201C\";\n    } else {\n        contents = this.subject.slice(startpos, this.pos);\n    }\n    var node = text(contents);\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    if (\n        (res.can_open || res.can_close) &&\n        (this.options.smart || (cc !== C_SINGLEQUOTE && cc !== C_DOUBLEQUOTE))\n    ) {\n        this.delimiters = {\n            cc: cc,\n            numdelims: numdelims,\n            origdelims: numdelims,\n            node: node,\n            previous: this.delimiters,\n            next: null,\n            can_open: res.can_open,\n            can_close: res.can_close\n        };\n        if (this.delimiters.previous !== null) {\n            this.delimiters.previous.next = this.delimiters;\n        }\n    }\n\n    return true;\n};\n\nvar removeDelimiter = function(delim) {\n    if (delim.previous !== null) {\n        delim.previous.next = delim.next;\n    }\n    if (delim.next === null) {\n        // top of stack\n        this.delimiters = delim.previous;\n    } else {\n        delim.next.previous = delim.previous;\n    }\n};\n\nvar removeDelimitersBetween = function(bottom, top) {\n    if (bottom.next !== top) {\n        bottom.next = top;\n        top.previous = bottom;\n    }\n};\n\nvar processEmphasis = function(stack_bottom) {\n    var opener, closer, old_closer;\n    var opener_inl, closer_inl;\n    var tempstack;\n    var use_delims;\n    var tmp, next;\n    var opener_found;\n    var openers_bottom = [[], [], []];\n    var odd_match = false;\n\n    for (var i = 0; i < 3; i++) {\n        openers_bottom[i][C_UNDERSCORE] = stack_bottom;\n        openers_bottom[i][C_ASTERISK] = stack_bottom;\n        openers_bottom[i][C_SINGLEQUOTE] = stack_bottom;\n        openers_bottom[i][C_DOUBLEQUOTE] = stack_bottom;\n    }\n    // find first closer above stack_bottom:\n    closer = this.delimiters;\n    while (closer !== null && closer.previous !== stack_bottom) {\n        closer = closer.previous;\n    }\n    // move forward, looking for closers, and handling each\n    while (closer !== null) {\n        var closercc = closer.cc;\n        if (!closer.can_close) {\n            closer = closer.next;\n        } else {\n            // found emphasis closer. now look back for first matching opener:\n            opener = closer.previous;\n            opener_found = false;\n            while (\n                opener !== null &&\n                opener !== stack_bottom &&\n                opener !== openers_bottom[closer.origdelims % 3][closercc]\n            ) {\n                odd_match =\n                    (closer.can_open || opener.can_close) &&\n                    closer.origdelims % 3 !== 0 &&\n                    (opener.origdelims + closer.origdelims) % 3 === 0;\n                if (opener.cc === closer.cc && opener.can_open && !odd_match) {\n                    opener_found = true;\n                    break;\n                }\n                opener = opener.previous;\n            }\n            old_closer = closer;\n\n            if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                if (!opener_found) {\n                    closer = closer.next;\n                } else {\n                    // calculate actual number of delimiters used from closer\n                    use_delims =\n                        closer.numdelims >= 2 && opener.numdelims >= 2 ? 2 : 1;\n\n                    opener_inl = opener.node;\n                    closer_inl = closer.node;\n\n                    // remove used delimiters from stack elts and inlines\n                    opener.numdelims -= use_delims;\n                    closer.numdelims -= use_delims;\n                    opener_inl._literal = opener_inl._literal.slice(\n                        0,\n                        opener_inl._literal.length - use_delims\n                    );\n                    closer_inl._literal = closer_inl._literal.slice(\n                        0,\n                        closer_inl._literal.length - use_delims\n                    );\n\n                    // build contents for new emph element\n                    var emph = new Node(use_delims === 1 ? \"emph\" : \"strong\");\n\n                    tmp = opener_inl._next;\n                    while (tmp && tmp !== closer_inl) {\n                        next = tmp._next;\n                        tmp.unlink();\n                        emph.appendChild(tmp);\n                        tmp = next;\n                    }\n\n                    opener_inl.insertAfter(emph);\n\n                    // remove elts between opener and closer in delimiters stack\n                    removeDelimitersBetween(opener, closer);\n\n                    // if opener has 0 delims, remove it and the inline\n                    if (opener.numdelims === 0) {\n                        opener_inl.unlink();\n                        this.removeDelimiter(opener);\n                    }\n\n                    if (closer.numdelims === 0) {\n                        closer_inl.unlink();\n                        tempstack = closer.next;\n                        this.removeDelimiter(closer);\n                        closer = tempstack;\n                    }\n                }\n            } else if (closercc === C_SINGLEQUOTE) {\n                closer.node._literal = \"\\u2019\";\n                if (opener_found) {\n                    opener.node._literal = \"\\u2018\";\n                }\n                closer = closer.next;\n            } else if (closercc === C_DOUBLEQUOTE) {\n                closer.node._literal = \"\\u201D\";\n                if (opener_found) {\n                    opener.node.literal = \"\\u201C\";\n                }\n                closer = closer.next;\n            }\n            if (!opener_found) {\n                // Set lower bound for future searches for openers:\n                openers_bottom[old_closer.origdelims % 3][closercc] =\n                    old_closer.previous;\n                if (!old_closer.can_open) {\n                    // We can remove a closer that can't be an opener,\n                    // once we've seen there's no matching opener:\n                    this.removeDelimiter(old_closer);\n                }\n            }\n        }\n    }\n\n    // remove all delimiters\n    while (this.delimiters !== null && this.delimiters !== stack_bottom) {\n        this.removeDelimiter(this.delimiters);\n    }\n};\n\n// Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\nvar parseLinkTitle = function() {\n    var title = this.match(reLinkTitle);\n    if (title === null) {\n        return null;\n    } else {\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    }\n};\n\n// Attempt to parse link destination, returning the string or\n// null if no match.\nvar parseLinkDestination = function() {\n    var res = this.match(reLinkDestinationBraces);\n    if (res === null) {\n        if (this.peek() === C_LESSTHAN) {\n            return null;\n        }\n        // TODO handrolled parser; res should be null or the string\n        var savepos = this.pos;\n        var openparens = 0;\n        var c;\n        while ((c = this.peek()) !== -1) {\n            if (\n                c === C_BACKSLASH &&\n                reEscapable.test(this.subject.charAt(this.pos + 1))\n            ) {\n                this.pos += 1;\n                if (this.peek() !== -1) {\n                    this.pos += 1;\n                }\n            } else if (c === C_OPEN_PAREN) {\n                this.pos += 1;\n                openparens += 1;\n            } else if (c === C_CLOSE_PAREN) {\n                if (openparens < 1) {\n                    break;\n                } else {\n                    this.pos += 1;\n                    openparens -= 1;\n                }\n            } else if (reWhitespaceChar.exec(fromCodePoint(c)) !== null) {\n                break;\n            } else {\n                this.pos += 1;\n            }\n        }\n        if (this.pos === savepos && c !== C_CLOSE_PAREN) {\n            return null;\n        }\n        if (openparens !== 0) {\n            return null;\n        }\n        res = this.subject.substr(savepos, this.pos - savepos);\n        return normalizeURI(unescapeString(res));\n    } else {\n        // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    }\n};\n\n// Attempt to parse a link label, returning number of characters parsed.\nvar parseLinkLabel = function() {\n    var m = this.match(reLinkLabel);\n    if (m === null || m.length > 1001) {\n        return 0;\n    } else {\n        return m.length;\n    }\n};\n\n// Add open bracket to delimiter stack and add a text node to block's children.\nvar parseOpenBracket = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n\n    var node = text(\"[\");\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.addBracket(node, startpos, false);\n    return true;\n};\n\n// IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\nvar parseBang = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n    if (this.peek() === C_OPEN_BRACKET) {\n        this.pos += 1;\n\n        var node = text(\"![\");\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.addBracket(node, startpos + 1, true);\n    } else {\n        block.appendChild(text(\"!\"));\n    }\n    return true;\n};\n\n// Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\nvar parseCloseBracket = function(block) {\n    var startpos;\n    var is_image;\n    var dest;\n    var title;\n    var matched = false;\n    var reflabel;\n    var opener;\n\n    this.pos += 1;\n    startpos = this.pos;\n\n    // get last [ or ![\n    opener = this.brackets;\n\n    if (opener === null) {\n        // no matched opener, just return a literal\n        block.appendChild(text(\"]\"));\n        return true;\n    }\n\n    if (!opener.active) {\n        // no matched opener, just return a literal\n        block.appendChild(text(\"]\"));\n        // take opener off brackets stack\n        this.removeBracket();\n        return true;\n    }\n\n    // If we got here, open is a potential opener\n    is_image = opener.image;\n\n    // Check to see if we have a link/image\n\n    var savepos = this.pos;\n\n    // Inline link?\n    if (this.peek() === C_OPEN_PAREN) {\n        this.pos++;\n        if (\n            this.spnl() &&\n            (dest = this.parseLinkDestination()) !== null &&\n            this.spnl() &&\n            // make sure there's a space before the title:\n            ((reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n                (title = this.parseLinkTitle())) ||\n                true) &&\n            this.spnl() &&\n            this.peek() === C_CLOSE_PAREN\n        ) {\n            this.pos += 1;\n            matched = true;\n        } else {\n            this.pos = savepos;\n        }\n    }\n\n    if (!matched) {\n        // Next, see if there's a link label\n        var beforelabel = this.pos;\n        var n = this.parseLinkLabel();\n        if (n > 2) {\n            reflabel = this.subject.slice(beforelabel, beforelabel + n);\n        } else if (!opener.bracketAfter) {\n            // Empty or missing second label means to use the first label as the reference.\n            // The reference must not contain a bracket. If we know there's a bracket, we don't even bother checking it.\n            reflabel = this.subject.slice(opener.index, startpos);\n        }\n        if (n === 0) {\n            // If shortcut reference link, rewind before spaces we skipped.\n            this.pos = savepos;\n        }\n\n        if (reflabel) {\n            // lookup rawlabel in refmap\n            var link = this.refmap[normalizeReference(reflabel)];\n            if (link) {\n                dest = link.destination;\n                title = link.title;\n                matched = true;\n            }\n        }\n    }\n\n    if (matched) {\n        var node = new Node(is_image ? \"image\" : \"link\");\n        node._destination = dest;\n        node._title = title || \"\";\n\n        var tmp, next;\n        tmp = opener.node._next;\n        while (tmp) {\n            next = tmp._next;\n            tmp.unlink();\n            node.appendChild(tmp);\n            tmp = next;\n        }\n        block.appendChild(node);\n        this.processEmphasis(opener.previousDelimiter);\n        this.removeBracket();\n        opener.node.unlink();\n\n        // We remove this bracket and processEmphasis will remove later delimiters.\n        // Now, for a link, we also deactivate earlier link openers.\n        // (no links in links)\n        if (!is_image) {\n            opener = this.brackets;\n            while (opener !== null) {\n                if (!opener.image) {\n                    opener.active = false; // deactivate this opener\n                }\n                opener = opener.previous;\n            }\n        }\n\n        return true;\n    } else {\n        // no match\n\n        this.removeBracket(); // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text(\"]\"));\n        return true;\n    }\n};\n\nvar addBracket = function(node, index, image) {\n    if (this.brackets !== null) {\n        this.brackets.bracketAfter = true;\n    }\n    this.brackets = {\n        node: node,\n        previous: this.brackets,\n        previousDelimiter: this.delimiters,\n        index: index,\n        image: image,\n        active: true\n    };\n};\n\nvar removeBracket = function() {\n    this.brackets = this.brackets.previous;\n};\n\n// Attempt to parse an entity.\nvar parseEntity = function(block) {\n    var m;\n    if ((m = this.match(reEntityHere))) {\n        block.appendChild(text(decodeHTML(m)));\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\nvar parseString = function(block) {\n    var m;\n    if ((m = this.match(reMain))) {\n        if (this.options.smart) {\n            block.appendChild(\n                text(\n                    m\n                        .replace(reEllipses, \"\\u2026\")\n                        .replace(reDash, function(chars) {\n                            var enCount = 0;\n                            var emCount = 0;\n                            if (chars.length % 3 === 0) {\n                                // If divisible by 3, use all em dashes\n                                emCount = chars.length / 3;\n                            } else if (chars.length % 2 === 0) {\n                                // If divisible by 2, use all en dashes\n                                enCount = chars.length / 2;\n                            } else if (chars.length % 3 === 2) {\n                                // If 2 extra dashes, use en dash for last 2; em dashes for rest\n                                enCount = 1;\n                                emCount = (chars.length - 2) / 3;\n                            } else {\n                                // Use en dashes for last 4 hyphens; em dashes for rest\n                                enCount = 2;\n                                emCount = (chars.length - 4) / 3;\n                            }\n                            return (\n                                \"\\u2014\".repeat(emCount) +\n                                \"\\u2013\".repeat(enCount)\n                            );\n                        })\n                )\n            );\n        } else {\n            block.appendChild(text(m));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\nvar parseNewline = function(block) {\n    this.pos += 1; // assume we're at a \\n\n    // check previous node for trailing spaces\n    var lastc = block._lastChild;\n    if (\n        lastc &&\n        lastc.type === \"text\" &&\n        lastc._literal[lastc._literal.length - 1] === \" \"\n    ) {\n        var hardbreak = lastc._literal[lastc._literal.length - 2] === \" \";\n        lastc._literal = lastc._literal.replace(reFinalSpace, \"\");\n        block.appendChild(new Node(hardbreak ? \"linebreak\" : \"softbreak\"));\n    } else {\n        block.appendChild(new Node(\"softbreak\"));\n    }\n    this.match(reInitialSpace); // gobble leading spaces in next line\n    return true;\n};\n\n// Attempt to parse a link reference, modifying refmap.\nvar parseReference = function(s, refmap) {\n    this.subject = s;\n    this.pos = 0;\n    var rawlabel;\n    var dest;\n    var title;\n    var matchChars;\n    var startpos = this.pos;\n\n    // label:\n    matchChars = this.parseLinkLabel();\n    if (matchChars === 0) {\n        return 0;\n    } else {\n        rawlabel = this.subject.substr(0, matchChars);\n    }\n\n    // colon:\n    if (this.peek() === C_COLON) {\n        this.pos++;\n    } else {\n        this.pos = startpos;\n        return 0;\n    }\n\n    //  link url\n    this.spnl();\n\n    dest = this.parseLinkDestination();\n    if (dest === null) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var beforetitle = this.pos;\n    this.spnl();\n    if (this.pos !== beforetitle) {\n        title = this.parseLinkTitle();\n    }\n    if (title === null) {\n        title = \"\";\n        // rewind before spaces\n        this.pos = beforetitle;\n    }\n\n    // make sure we're at line end:\n    var atLineEnd = true;\n    if (this.match(reSpaceAtEndOfLine) === null) {\n        if (title === \"\") {\n            atLineEnd = false;\n        } else {\n            // the potential title we found is not at the line end,\n            // but it could still be a legal link reference if we\n            // discard the title\n            title = \"\";\n            // rewind before spaces\n            this.pos = beforetitle;\n            // and instead check if the link URL is at the line end\n            atLineEnd = this.match(reSpaceAtEndOfLine) !== null;\n        }\n    }\n\n    if (!atLineEnd) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var normlabel = normalizeReference(rawlabel);\n    if (normlabel === \"\") {\n        // label must contain non-whitespace characters\n        this.pos = startpos;\n        return 0;\n    }\n\n    if (!refmap[normlabel]) {\n        refmap[normlabel] = { destination: dest, title: title };\n    }\n    return this.pos - startpos;\n};\n\n// Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\nvar parseInline = function(block) {\n    var res = false;\n    var c = this.peek();\n    if (c === -1) {\n        return false;\n    }\n    switch (c) {\n        case C_NEWLINE:\n            res = this.parseNewline(block);\n            break;\n        case C_BACKSLASH:\n            res = this.parseBackslash(block);\n            break;\n        case C_BACKTICK:\n            res = this.parseBackticks(block);\n            break;\n        case C_ASTERISK:\n        case C_UNDERSCORE:\n            res = this.handleDelim(c, block);\n            break;\n        case C_SINGLEQUOTE:\n        case C_DOUBLEQUOTE:\n            res = this.options.smart && this.handleDelim(c, block);\n            break;\n        case C_OPEN_BRACKET:\n            res = this.parseOpenBracket(block);\n            break;\n        case C_BANG:\n            res = this.parseBang(block);\n            break;\n        case C_CLOSE_BRACKET:\n            res = this.parseCloseBracket(block);\n            break;\n        case C_LESSTHAN:\n            res = this.parseAutolink(block) || this.parseHtmlTag(block);\n            break;\n        case C_AMPERSAND:\n            res = this.parseEntity(block);\n            break;\n        default:\n            res = this.parseString(block);\n            break;\n    }\n    if (!res) {\n        this.pos += 1;\n        block.appendChild(text(fromCodePoint(c)));\n    }\n\n    return true;\n};\n\n// Parse string content in block into inline children,\n// using refmap to resolve references.\nvar parseInlines = function(block) {\n    this.subject = block._string_content.trim();\n    this.pos = 0;\n    this.delimiters = null;\n    this.brackets = null;\n    while (this.parseInline(block)) {}\n    block._string_content = null; // allow raw string to be garbage collected\n    this.processEmphasis(null);\n};\n\n// The InlineParser object.\nfunction InlineParser(options) {\n    return {\n        subject: \"\",\n        delimiters: null, // used by handleDelim method\n        brackets: null,\n        pos: 0,\n        refmap: {},\n        match: match,\n        peek: peek,\n        spnl: spnl,\n        parseBackticks: parseBackticks,\n        parseBackslash: parseBackslash,\n        parseAutolink: parseAutolink,\n        parseHtmlTag: parseHtmlTag,\n        scanDelims: scanDelims,\n        handleDelim: handleDelim,\n        parseLinkTitle: parseLinkTitle,\n        parseLinkDestination: parseLinkDestination,\n        parseLinkLabel: parseLinkLabel,\n        parseOpenBracket: parseOpenBracket,\n        parseBang: parseBang,\n        parseCloseBracket: parseCloseBracket,\n        addBracket: addBracket,\n        removeBracket: removeBracket,\n        parseEntity: parseEntity,\n        parseString: parseString,\n        parseNewline: parseNewline,\n        parseReference: parseReference,\n        parseInline: parseInline,\n        processEmphasis: processEmphasis,\n        removeDelimiter: removeDelimiter,\n        options: options || {},\n        parse: parseInlines\n    };\n}\n\nexport default InlineParser;\n","\"use strict\";\n\nimport Node from \"./node.js\";\nimport { unescapeString, OPENTAG, CLOSETAG } from \"./common.js\";\nimport InlineParser from \"./inlines.js\";\n\nvar CODE_INDENT = 4;\n\nvar C_TAB = 9;\nvar C_NEWLINE = 10;\nvar C_GREATERTHAN = 62;\nvar C_LESSTHAN = 60;\nvar C_SPACE = 32;\nvar C_OPEN_BRACKET = 91;\n\nvar reHtmlBlockOpen = [\n    /./, // dummy for 0\n    /^<(?:script|pre|textarea|style)(?:\\s|>|$)/i,\n    /^<!--/,\n    /^<[?]/,\n    /^<![A-Z]/,\n    /^<!\\[CDATA\\[/,\n    /^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\\s|[/]?[>]|$)/i,\n    new RegExp(\"^(?:\" + OPENTAG + \"|\" + CLOSETAG + \")\\\\s*$\", \"i\")\n];\n\nvar reHtmlBlockClose = [\n    /./, // dummy for 0\n    /<\\/(?:script|pre|textarea|style)>/i,\n    /-->/,\n    /\\?>/,\n    />/,\n    /\\]\\]>/\n];\n\nvar reThematicBreak = /^(?:(?:\\*[ \\t]*){3,}|(?:_[ \\t]*){3,}|(?:-[ \\t]*){3,})[ \\t]*$/;\n\nvar reMaybeSpecial = /^[#`~*+_=<>0-9-]/;\n\nvar reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\n\nvar reBulletListMarker = /^[*+-]/;\n\nvar reOrderedListMarker = /^(\\d{1,9})([.)])/;\n\nvar reATXHeadingMarker = /^#{1,6}(?:[ \\t]+|$)/;\n\nvar reCodeFence = /^`{3,}(?!.*`)|^~{3,}/;\n\nvar reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\n\nvar reSetextHeadingLine = /^(?:=+|-+)[ \\t]*$/;\n\nvar reLineEnding = /\\r\\n|\\n|\\r/;\n\n// Returns true if string contains only space characters.\nvar isBlank = function(s) {\n    return !reNonSpace.test(s);\n};\n\nvar isSpaceOrTab = function(c) {\n    return c === C_SPACE || c === C_TAB;\n};\n\nvar peek = function(ln, pos) {\n    if (pos < ln.length) {\n        return ln.charCodeAt(pos);\n    } else {\n        return -1;\n    }\n};\n\n// DOC PARSER\n\n// These are methods of a Parser object, defined below.\n\n// Returns true if block ends with a blank line, descending if needed\n// into lists and sublists.\nvar endsWithBlankLine = function(block) {\n    while (block) {\n        if (block._lastLineBlank) {\n            return true;\n        }\n        var t = block.type;\n        if (!block._lastLineChecked && (t === \"list\" || t === \"item\")) {\n            block._lastLineChecked = true;\n            block = block._lastChild;\n        } else {\n            block._lastLineChecked = true;\n            break;\n        }\n    }\n    return false;\n};\n\n// Add a line to the block at the tip.  We assume the tip\n// can accept lines -- that check should be done before calling this.\nvar addLine = function() {\n    if (this.partiallyConsumedTab) {\n        this.offset += 1; // skip over tab\n        // add space characters:\n        var charsToTab = 4 - (this.column % 4);\n        this.tip._string_content += \" \".repeat(charsToTab);\n    }\n    this.tip._string_content += this.currentLine.slice(this.offset) + \"\\n\";\n};\n\n// Add block of type tag as a child of the tip.  If the tip can't\n// accept children, close and finalize it and try its parent,\n// and so on til we find a block that can accept children.\nvar addChild = function(tag, offset) {\n    while (!this.blocks[this.tip.type].canContain(tag)) {\n        this.finalize(this.tip, this.lineNumber - 1);\n    }\n\n    var column_number = offset + 1; // offset 0 = column 1\n    var newBlock = new Node(tag, [\n        [this.lineNumber, column_number],\n        [0, 0]\n    ]);\n    newBlock._string_content = \"\";\n    this.tip.appendChild(newBlock);\n    this.tip = newBlock;\n    return newBlock;\n};\n\n// Parse a list marker and return data on the marker (type,\n// start, delimiter, bullet character, padding) or null.\nvar parseListMarker = function(parser, container) {\n    var rest = parser.currentLine.slice(parser.nextNonspace);\n    var match;\n    var nextc;\n    var spacesStartCol;\n    var spacesStartOffset;\n    var data = {\n        type: null,\n        tight: true, // lists are tight by default\n        bulletChar: null,\n        start: null,\n        delimiter: null,\n        padding: null,\n        markerOffset: parser.indent\n    };\n    if (parser.indent >= 4) {\n        return null;\n    }\n    if ((match = rest.match(reBulletListMarker))) {\n        data.type = \"bullet\";\n        data.bulletChar = match[0][0];\n    } else if (\n        (match = rest.match(reOrderedListMarker)) &&\n        (container.type !== \"paragraph\" || match[1] === \"1\")\n    ) {\n        data.type = \"ordered\";\n        data.start = parseInt(match[1]);\n        data.delimiter = match[2];\n    } else {\n        return null;\n    }\n    // make sure we have spaces after\n    nextc = peek(parser.currentLine, parser.nextNonspace + match[0].length);\n    if (!(nextc === -1 || nextc === C_TAB || nextc === C_SPACE)) {\n        return null;\n    }\n\n    // if it interrupts paragraph, make sure first line isn't blank\n    if (\n        container.type === \"paragraph\" &&\n        !parser.currentLine\n            .slice(parser.nextNonspace + match[0].length)\n            .match(reNonSpace)\n    ) {\n        return null;\n    }\n\n    // we've got a match! advance offset and calculate padding\n    parser.advanceNextNonspace(); // to start of marker\n    parser.advanceOffset(match[0].length, true); // to end of marker\n    spacesStartCol = parser.column;\n    spacesStartOffset = parser.offset;\n    do {\n        parser.advanceOffset(1, true);\n        nextc = peek(parser.currentLine, parser.offset);\n    } while (parser.column - spacesStartCol < 5 && isSpaceOrTab(nextc));\n    var blank_item = peek(parser.currentLine, parser.offset) === -1;\n    var spaces_after_marker = parser.column - spacesStartCol;\n    if (spaces_after_marker >= 5 || spaces_after_marker < 1 || blank_item) {\n        data.padding = match[0].length + 1;\n        parser.column = spacesStartCol;\n        parser.offset = spacesStartOffset;\n        if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n            parser.advanceOffset(1, true);\n        }\n    } else {\n        data.padding = match[0].length + spaces_after_marker;\n    }\n    return data;\n};\n\n// Returns true if the two list items are of the same type,\n// with the same delimiter and bullet character.  This is used\n// in agglomerating list items into lists.\nvar listsMatch = function(list_data, item_data) {\n    return (\n        list_data.type === item_data.type &&\n        list_data.delimiter === item_data.delimiter &&\n        list_data.bulletChar === item_data.bulletChar\n    );\n};\n\n// Finalize and close any unmatched blocks.\nvar closeUnmatchedBlocks = function() {\n    if (!this.allClosed) {\n        // finalize any blocks not matched\n        while (this.oldtip !== this.lastMatchedContainer) {\n            var parent = this.oldtip._parent;\n            this.finalize(this.oldtip, this.lineNumber - 1);\n            this.oldtip = parent;\n        }\n        this.allClosed = true;\n    }\n};\n\n// 'finalize' is run when the block is closed.\n// 'continue' is run to check whether the block is continuing\n// at a certain line and offset (e.g. whether a block quote\n// contains a `>`.  It returns 0 for matched, 1 for not matched,\n// and 2 for \"we've dealt with this line completely, go to next.\"\nvar blocks = {\n    document: {\n        continue: function() {\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    list: {\n        continue: function() {\n            return 0;\n        },\n        finalize: function(parser, block) {\n            var item = block._firstChild;\n            while (item) {\n                // check for non-final list item ending with blank line:\n                if (endsWithBlankLine(item) && item._next) {\n                    block._listData.tight = false;\n                    break;\n                }\n                // recurse into children of list item, to see if there are\n                // spaces between any of them:\n                var subitem = item._firstChild;\n                while (subitem) {\n                    if (\n                        endsWithBlankLine(subitem) &&\n                        (item._next || subitem._next)\n                    ) {\n                        block._listData.tight = false;\n                        break;\n                    }\n                    subitem = subitem._next;\n                }\n                item = item._next;\n            }\n        },\n        canContain: function(t) {\n            return t === \"item\";\n        },\n        acceptsLines: false\n    },\n    block_quote: {\n        continue: function(parser) {\n            var ln = parser.currentLine;\n            if (\n                !parser.indented &&\n                peek(ln, parser.nextNonspace) === C_GREATERTHAN\n            ) {\n                parser.advanceNextNonspace();\n                parser.advanceOffset(1, false);\n                if (isSpaceOrTab(peek(ln, parser.offset))) {\n                    parser.advanceOffset(1, true);\n                }\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    item: {\n        continue: function(parser, container) {\n            if (parser.blank) {\n                if (container._firstChild == null) {\n                    // Blank line after empty list item\n                    return 1;\n                } else {\n                    parser.advanceNextNonspace();\n                }\n            } else if (\n                parser.indent >=\n                container._listData.markerOffset + container._listData.padding\n            ) {\n                parser.advanceOffset(\n                    container._listData.markerOffset +\n                        container._listData.padding,\n                    true\n                );\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function(t) {\n            return t !== \"item\";\n        },\n        acceptsLines: false\n    },\n    heading: {\n        continue: function() {\n            // a heading can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: false\n    },\n    thematic_break: {\n        continue: function() {\n            // a thematic break can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() {\n            return;\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: false\n    },\n    code_block: {\n        continue: function(parser, container) {\n            var ln = parser.currentLine;\n            var indent = parser.indent;\n            if (container._isFenced) {\n                // fenced\n                var match =\n                    indent <= 3 &&\n                    ln.charAt(parser.nextNonspace) === container._fenceChar &&\n                    ln.slice(parser.nextNonspace).match(reClosingCodeFence);\n                if (match && match[0].length >= container._fenceLength) {\n                    // closing fence - we're at end of line, so we can return\n                    parser.lastLineLength =\n                        parser.offset + indent + match[0].length;\n                    parser.finalize(container, parser.lineNumber);\n                    return 2;\n                } else {\n                    // skip optional spaces of fence offset\n                    var i = container._fenceOffset;\n                    while (i > 0 && isSpaceOrTab(peek(ln, parser.offset))) {\n                        parser.advanceOffset(1, true);\n                        i--;\n                    }\n                }\n            } else {\n                // indented\n                if (indent >= CODE_INDENT) {\n                    parser.advanceOffset(CODE_INDENT, true);\n                } else if (parser.blank) {\n                    parser.advanceNextNonspace();\n                } else {\n                    return 1;\n                }\n            }\n            return 0;\n        },\n        finalize: function(parser, block) {\n            if (block._isFenced) {\n                // fenced\n                // first line becomes info string\n                var content = block._string_content;\n                var newlinePos = content.indexOf(\"\\n\");\n                var firstLine = content.slice(0, newlinePos);\n                var rest = content.slice(newlinePos + 1);\n                block.info = unescapeString(firstLine.trim());\n                block._literal = rest;\n            } else {\n                // indented\n                block._literal = block._string_content.replace(\n                    /(\\n *)+$/,\n                    \"\\n\"\n                );\n            }\n            block._string_content = null; // allow GC\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    },\n    html_block: {\n        continue: function(parser, container) {\n            return parser.blank &&\n                (container._htmlBlockType === 6 ||\n                    container._htmlBlockType === 7)\n                ? 1\n                : 0;\n        },\n        finalize: function(parser, block) {\n            block._literal = block._string_content.replace(/(\\n *)+$/, \"\");\n            block._string_content = null; // allow GC\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    },\n    paragraph: {\n        continue: function(parser) {\n            return parser.blank ? 1 : 0;\n        },\n        finalize: function(parser, block) {\n            var pos;\n            var hasReferenceDefs = false;\n\n            // try parsing the beginning as link reference definitions:\n            while (\n                peek(block._string_content, 0) === C_OPEN_BRACKET &&\n                (pos = parser.inlineParser.parseReference(\n                    block._string_content,\n                    parser.refmap\n                ))\n            ) {\n                block._string_content = block._string_content.slice(pos);\n                hasReferenceDefs = true;\n            }\n            if (hasReferenceDefs && isBlank(block._string_content)) {\n                block.unlink();\n            }\n        },\n        canContain: function() {\n            return false;\n        },\n        acceptsLines: true\n    }\n};\n\n// block start functions.  Return values:\n// 0 = no match\n// 1 = matched container, keep going\n// 2 = matched leaf, no more block starts\nvar blockStarts = [\n    // block quote\n    function(parser) {\n        if (\n            !parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN\n        ) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(1, false);\n            // optional following space\n            if (isSpaceOrTab(peek(parser.currentLine, parser.offset))) {\n                parser.advanceOffset(1, true);\n            }\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"block_quote\", parser.nextNonspace);\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // ATX heading\n    function(parser) {\n        var match;\n        if (\n            !parser.indented &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reATXHeadingMarker))\n        ) {\n            parser.advanceNextNonspace();\n            parser.advanceOffset(match[0].length, false);\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild(\"heading\", parser.nextNonspace);\n            container.level = match[0].trim().length; // number of #s\n            // remove trailing ###s:\n            container._string_content = parser.currentLine\n                .slice(parser.offset)\n                .replace(/^[ \\t]*#+[ \\t]*$/, \"\")\n                .replace(/[ \\t]+#+[ \\t]*$/, \"\");\n            parser.advanceOffset(parser.currentLine.length - parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // Fenced code block\n    function(parser) {\n        var match;\n        if (\n            !parser.indented &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reCodeFence))\n        ) {\n            var fenceLength = match[0].length;\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild(\"code_block\", parser.nextNonspace);\n            container._isFenced = true;\n            container._fenceLength = fenceLength;\n            container._fenceChar = match[0][0];\n            container._fenceOffset = parser.indent;\n            parser.advanceNextNonspace();\n            parser.advanceOffset(fenceLength, false);\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // HTML block\n    function(parser, container) {\n        if (\n            !parser.indented &&\n            peek(parser.currentLine, parser.nextNonspace) === C_LESSTHAN\n        ) {\n            var s = parser.currentLine.slice(parser.nextNonspace);\n            var blockType;\n\n            for (blockType = 1; blockType <= 7; blockType++) {\n                if (\n                    reHtmlBlockOpen[blockType].test(s) &&\n                    (blockType < 7 || container.type !== \"paragraph\")\n                ) {\n                    parser.closeUnmatchedBlocks();\n                    // We don't adjust parser.offset;\n                    // spaces are part of the HTML block:\n                    var b = parser.addChild(\"html_block\", parser.offset);\n                    b._htmlBlockType = blockType;\n                    return 2;\n                }\n            }\n        }\n\n        return 0;\n    },\n\n    // Setext heading\n    function(parser, container) {\n        var match;\n        if (\n            !parser.indented &&\n            container.type === \"paragraph\" &&\n            (match = parser.currentLine\n                .slice(parser.nextNonspace)\n                .match(reSetextHeadingLine))\n        ) {\n            parser.closeUnmatchedBlocks();\n            // resolve reference link definitiosn\n            var pos;\n            while (\n                peek(container._string_content, 0) === C_OPEN_BRACKET &&\n                (pos = parser.inlineParser.parseReference(\n                    container._string_content,\n                    parser.refmap\n                ))\n            ) {\n                container._string_content = container._string_content.slice(\n                    pos\n                );\n            }\n            if (container._string_content.length > 0) {\n                var heading = new Node(\"heading\", container.sourcepos);\n                heading.level = match[0][0] === \"=\" ? 1 : 2;\n                heading._string_content = container._string_content;\n                container.insertAfter(heading);\n                container.unlink();\n                parser.tip = heading;\n                parser.advanceOffset(\n                    parser.currentLine.length - parser.offset,\n                    false\n                );\n                return 2;\n            } else {\n                return 0;\n            }\n        } else {\n            return 0;\n        }\n    },\n\n    // thematic break\n    function(parser) {\n        if (\n            !parser.indented &&\n            reThematicBreak.test(parser.currentLine.slice(parser.nextNonspace))\n        ) {\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"thematic_break\", parser.nextNonspace);\n            parser.advanceOffset(\n                parser.currentLine.length - parser.offset,\n                false\n            );\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // list item\n    function(parser, container) {\n        var data;\n\n        if (\n            (!parser.indented || container.type === \"list\") &&\n            (data = parseListMarker(parser, container))\n        ) {\n            parser.closeUnmatchedBlocks();\n\n            // add the list if needed\n            if (\n                parser.tip.type !== \"list\" ||\n                !listsMatch(container._listData, data)\n            ) {\n                container = parser.addChild(\"list\", parser.nextNonspace);\n                container._listData = data;\n            }\n\n            // add the list item\n            container = parser.addChild(\"item\", parser.nextNonspace);\n            container._listData = data;\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // indented code block\n    function(parser) {\n        if (\n            parser.indented &&\n            parser.tip.type !== \"paragraph\" &&\n            !parser.blank\n        ) {\n            // indented code\n            parser.advanceOffset(CODE_INDENT, true);\n            parser.closeUnmatchedBlocks();\n            parser.addChild(\"code_block\", parser.offset);\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n];\n\nvar advanceOffset = function(count, columns) {\n    var currentLine = this.currentLine;\n    var charsToTab, charsToAdvance;\n    var c;\n    while (count > 0 && (c = currentLine[this.offset])) {\n        if (c === \"\\t\") {\n            charsToTab = 4 - (this.column % 4);\n            if (columns) {\n                this.partiallyConsumedTab = charsToTab > count;\n                charsToAdvance = charsToTab > count ? count : charsToTab;\n                this.column += charsToAdvance;\n                this.offset += this.partiallyConsumedTab ? 0 : 1;\n                count -= charsToAdvance;\n            } else {\n                this.partiallyConsumedTab = false;\n                this.column += charsToTab;\n                this.offset += 1;\n                count -= 1;\n            }\n        } else {\n            this.partiallyConsumedTab = false;\n            this.offset += 1;\n            this.column += 1; // assume ascii; block starts are ascii\n            count -= 1;\n        }\n    }\n};\n\nvar advanceNextNonspace = function() {\n    this.offset = this.nextNonspace;\n    this.column = this.nextNonspaceColumn;\n    this.partiallyConsumedTab = false;\n};\n\nvar findNextNonspace = function() {\n    var currentLine = this.currentLine;\n    var i = this.offset;\n    var cols = this.column;\n    var c;\n\n    while ((c = currentLine.charAt(i)) !== \"\") {\n        if (c === \" \") {\n            i++;\n            cols++;\n        } else if (c === \"\\t\") {\n            i++;\n            cols += 4 - (cols % 4);\n        } else {\n            break;\n        }\n    }\n    this.blank = c === \"\\n\" || c === \"\\r\" || c === \"\";\n    this.nextNonspace = i;\n    this.nextNonspaceColumn = cols;\n    this.indent = this.nextNonspaceColumn - this.column;\n    this.indented = this.indent >= CODE_INDENT;\n};\n\n// Analyze a line of text and update the document appropriately.\n// We parse markdown text by calling this on each line of input,\n// then finalizing the document.\nvar incorporateLine = function(ln) {\n    var all_matched = true;\n    var t;\n\n    var container = this.doc;\n    this.oldtip = this.tip;\n    this.offset = 0;\n    this.column = 0;\n    this.blank = false;\n    this.partiallyConsumedTab = false;\n    this.lineNumber += 1;\n\n    // replace NUL characters for security\n    if (ln.indexOf(\"\\u0000\") !== -1) {\n        ln = ln.replace(/\\0/g, \"\\uFFFD\");\n    }\n\n    this.currentLine = ln;\n\n    // For each containing block, try to parse the associated line start.\n    // Bail out on failure: container will point to the last matching block.\n    // Set all_matched to false if not all containers match.\n    var lastChild;\n    while ((lastChild = container._lastChild) && lastChild._open) {\n        container = lastChild;\n\n        this.findNextNonspace();\n\n        switch (this.blocks[container.type].continue(this, container)) {\n            case 0: // we've matched, keep going\n                break;\n            case 1: // we've failed to match a block\n                all_matched = false;\n                break;\n            case 2: // we've hit end of line for fenced code close and can return\n                return;\n            default:\n                throw \"continue returned illegal value, must be 0, 1, or 2\";\n        }\n        if (!all_matched) {\n            container = container._parent; // back up to last matching block\n            break;\n        }\n    }\n\n    this.allClosed = container === this.oldtip;\n    this.lastMatchedContainer = container;\n\n    var matchedLeaf =\n        container.type !== \"paragraph\" && blocks[container.type].acceptsLines;\n    var starts = this.blockStarts;\n    var startsLen = starts.length;\n    // Unless last matched container is a code block, try new container starts,\n    // adding children to the last matched container:\n    while (!matchedLeaf) {\n        this.findNextNonspace();\n\n        // this is a little performance optimization:\n        if (\n            !this.indented &&\n            !reMaybeSpecial.test(ln.slice(this.nextNonspace))\n        ) {\n            this.advanceNextNonspace();\n            break;\n        }\n\n        var i = 0;\n        while (i < startsLen) {\n            var res = starts[i](this, container);\n            if (res === 1) {\n                container = this.tip;\n                break;\n            } else if (res === 2) {\n                container = this.tip;\n                matchedLeaf = true;\n                break;\n            } else {\n                i++;\n            }\n        }\n\n        if (i === startsLen) {\n            // nothing matched\n            this.advanceNextNonspace();\n            break;\n        }\n    }\n\n    // What remains at the offset is a text line.  Add the text to the\n    // appropriate container.\n\n    // First check for a lazy paragraph continuation:\n    if (!this.allClosed && !this.blank && this.tip.type === \"paragraph\") {\n        // lazy paragraph continuation\n        this.addLine();\n    } else {\n        // not a lazy continuation\n\n        // finalize any blocks not matched\n        this.closeUnmatchedBlocks();\n        if (this.blank && container.lastChild) {\n            container.lastChild._lastLineBlank = true;\n        }\n\n        t = container.type;\n\n        // Block quote lines are never blank as they start with >\n        // and we don't count blanks in fenced code for purposes of tight/loose\n        // lists or breaking out of lists.  We also don't set _lastLineBlank\n        // on an empty list item, or if we just closed a fenced block.\n        var lastLineBlank =\n            this.blank &&\n            !(\n                t === \"block_quote\" ||\n                (t === \"code_block\" && container._isFenced) ||\n                (t === \"item\" &&\n                    !container._firstChild &&\n                    container.sourcepos[0][0] === this.lineNumber)\n            );\n\n        // propagate lastLineBlank up through parents:\n        var cont = container;\n        while (cont) {\n            cont._lastLineBlank = lastLineBlank;\n            cont = cont._parent;\n        }\n\n        if (this.blocks[t].acceptsLines) {\n            this.addLine();\n            // if HtmlBlock, check for end condition\n            if (\n                t === \"html_block\" &&\n                container._htmlBlockType >= 1 &&\n                container._htmlBlockType <= 5 &&\n                reHtmlBlockClose[container._htmlBlockType].test(\n                    this.currentLine.slice(this.offset)\n                )\n            ) {\n                this.lastLineLength = ln.length;\n                this.finalize(container, this.lineNumber);\n            }\n        } else if (this.offset < ln.length && !this.blank) {\n            // create paragraph container for line\n            container = this.addChild(\"paragraph\", this.offset);\n            this.advanceNextNonspace();\n            this.addLine();\n        }\n    }\n    this.lastLineLength = ln.length;\n};\n\n// Finalize a block.  Close it and do any necessary postprocessing,\n// e.g. creating string_content from strings, setting the 'tight'\n// or 'loose' status of a list, and parsing the beginnings\n// of paragraphs for reference definitions.  Reset the tip to the\n// parent of the closed block.\nvar finalize = function(block, lineNumber) {\n    var above = block._parent;\n    block._open = false;\n    block.sourcepos[1] = [lineNumber, this.lastLineLength];\n\n    this.blocks[block.type].finalize(this, block);\n\n    this.tip = above;\n};\n\n// Walk through a block & children recursively, parsing string content\n// into inline content where appropriate.\nvar processInlines = function(block) {\n    var node, event, t;\n    var walker = block.walker();\n    this.inlineParser.refmap = this.refmap;\n    this.inlineParser.options = this.options;\n    while ((event = walker.next())) {\n        node = event.node;\n        t = node.type;\n        if (!event.entering && (t === \"paragraph\" || t === \"heading\")) {\n            this.inlineParser.parse(node);\n        }\n    }\n};\n\nvar Document = function() {\n    var doc = new Node(\"document\", [\n        [1, 1],\n        [0, 0]\n    ]);\n    return doc;\n};\n\n// The main parsing function.  Returns a parsed document AST.\nvar parse = function(input) {\n    this.doc = new Document();\n    this.tip = this.doc;\n    this.refmap = {};\n    this.lineNumber = 0;\n    this.lastLineLength = 0;\n    this.offset = 0;\n    this.column = 0;\n    this.lastMatchedContainer = this.doc;\n    this.currentLine = \"\";\n    if (this.options.time) {\n        console.time(\"preparing input\");\n    }\n    var lines = input.split(reLineEnding);\n    var len = lines.length;\n    if (input.charCodeAt(input.length - 1) === C_NEWLINE) {\n        // ignore last blank line created by final newline\n        len -= 1;\n    }\n    if (this.options.time) {\n        console.timeEnd(\"preparing input\");\n    }\n    if (this.options.time) {\n        console.time(\"block parsing\");\n    }\n    for (var i = 0; i < len; i++) {\n        this.incorporateLine(lines[i]);\n    }\n    while (this.tip) {\n        this.finalize(this.tip, len);\n    }\n    if (this.options.time) {\n        console.timeEnd(\"block parsing\");\n    }\n    if (this.options.time) {\n        console.time(\"inline parsing\");\n    }\n    this.processInlines(this.doc);\n    if (this.options.time) {\n        console.timeEnd(\"inline parsing\");\n    }\n    return this.doc;\n};\n\n// The Parser object.\nfunction Parser(options) {\n    return {\n        doc: new Document(),\n        blocks: blocks,\n        blockStarts: blockStarts,\n        tip: this.doc,\n        oldtip: this.doc,\n        currentLine: \"\",\n        lineNumber: 0,\n        offset: 0,\n        column: 0,\n        nextNonspace: 0,\n        nextNonspaceColumn: 0,\n        indent: 0,\n        indented: false,\n        blank: false,\n        partiallyConsumedTab: false,\n        allClosed: true,\n        lastMatchedContainer: this.doc,\n        refmap: {},\n        lastLineLength: 0,\n        inlineParser: new InlineParser(options),\n        findNextNonspace: findNextNonspace,\n        advanceOffset: advanceOffset,\n        advanceNextNonspace: advanceNextNonspace,\n        addLine: addLine,\n        addChild: addChild,\n        incorporateLine: incorporateLine,\n        finalize: finalize,\n        processInlines: processInlines,\n        closeUnmatchedBlocks: closeUnmatchedBlocks,\n        parse: parse,\n        options: options || {}\n    };\n}\n\nexport default Parser;\n","\"use strict\";\n\nfunction Renderer() {}\n\n/**\n *  Walks the AST and calls member methods for each Node type.\n *\n *  @param ast {Node} The root of the abstract syntax tree.\n */\nfunction render(ast) {\n    var walker = ast.walker(),\n        event,\n        type;\n\n    this.buffer = \"\";\n    this.lastOut = \"\\n\";\n\n    while ((event = walker.next())) {\n        type = event.node.type;\n        if (this[type]) {\n            this[type](event.node, event.entering);\n        }\n    }\n    return this.buffer;\n}\n\n/**\n *  Concatenate a literal string to the buffer.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction lit(str) {\n    this.buffer += str;\n    this.lastOut = str;\n}\n\n/**\n *  Output a newline to the buffer.\n */\nfunction cr() {\n    if (this.lastOut !== \"\\n\") {\n        this.lit(\"\\n\");\n    }\n}\n\n/**\n *  Concatenate a string to the buffer possibly escaping the content.\n *\n *  Concrete renderer implementations should override this method.\n *\n *  @param str {String} The string to concatenate.\n */\nfunction out(str) {\n    this.lit(str);\n}\n\n/**\n *  Escape a string for the target renderer.\n *\n *  Abstract function that should be implemented by concrete\n *  renderer implementations.\n *\n *  @param str {String} The string to escape.\n */\nfunction esc(str) {\n    return str;\n}\n\nRenderer.prototype.render = render;\nRenderer.prototype.out = out;\nRenderer.prototype.lit = lit;\nRenderer.prototype.cr = cr;\nRenderer.prototype.esc = esc;\n\nexport default Renderer;\n","\"use strict\";\n\nimport { escapeXml } from \"../common.js\";\nimport Renderer from \"./renderer.js\";\n\nvar reUnsafeProtocol = /^javascript:|vbscript:|file:|data:/i;\nvar reSafeDataProtocol = /^data:image\\/(?:png|gif|jpeg|webp)/i;\n\nvar potentiallyUnsafe = function(url) {\n    return reUnsafeProtocol.test(url) && !reSafeDataProtocol.test(url);\n};\n\n// Helper function to produce an HTML tag.\nfunction tag(name, attrs, selfclosing) {\n    if (this.disableTags > 0) {\n        return;\n    }\n    this.buffer += \"<\" + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            this.buffer += \" \" + attrib[0] + '=\"' + attrib[1] + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        this.buffer += \" /\";\n    }\n    this.buffer += \">\";\n    this.lastOut = \">\";\n}\n\nfunction HtmlRenderer(options) {\n    options = options || {};\n    // by default, soft breaks are rendered as newlines in HTML\n    options.softbreak = options.softbreak || \"\\n\";\n    // set to \"<br />\" to make them hard breaks\n    // set to \" \" if you want to ignore line wrapping in source\n\n    this.disableTags = 0;\n    this.lastOut = \"\\n\";\n    this.options = options;\n}\n\n/* Node methods */\n\nfunction text(node) {\n    this.out(node.literal);\n}\n\nfunction softbreak() {\n    this.lit(this.options.softbreak);\n}\n\nfunction linebreak() {\n    this.tag(\"br\", [], true);\n    this.cr();\n}\n\nfunction link(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        if (!(this.options.safe && potentiallyUnsafe(node.destination))) {\n            attrs.push([\"href\", this.esc(node.destination)]);\n        }\n        if (node.title) {\n            attrs.push([\"title\", this.esc(node.title)]);\n        }\n        this.tag(\"a\", attrs);\n    } else {\n        this.tag(\"/a\");\n    }\n}\n\nfunction image(node, entering) {\n    if (entering) {\n        if (this.disableTags === 0) {\n            if (this.options.safe && potentiallyUnsafe(node.destination)) {\n                this.lit('<img src=\"\" alt=\"');\n            } else {\n                this.lit('<img src=\"' + this.esc(node.destination) + '\" alt=\"');\n            }\n        }\n        this.disableTags += 1;\n    } else {\n        this.disableTags -= 1;\n        if (this.disableTags === 0) {\n            if (node.title) {\n                this.lit('\" title=\"' + this.esc(node.title));\n            }\n            this.lit('\" />');\n        }\n    }\n}\n\nfunction emph(node, entering) {\n    this.tag(entering ? \"em\" : \"/em\");\n}\n\nfunction strong(node, entering) {\n    this.tag(entering ? \"strong\" : \"/strong\");\n}\n\nfunction paragraph(node, entering) {\n    var grandparent = node.parent.parent,\n        attrs = this.attrs(node);\n    if (grandparent !== null && grandparent.type === \"list\") {\n        if (grandparent.listTight) {\n            return;\n        }\n    }\n    if (entering) {\n        this.cr();\n        this.tag(\"p\", attrs);\n    } else {\n        this.tag(\"/p\");\n        this.cr();\n    }\n}\n\nfunction heading(node, entering) {\n    var tagname = \"h\" + node.level,\n        attrs = this.attrs(node);\n    if (entering) {\n        this.cr();\n        this.tag(tagname, attrs);\n    } else {\n        this.tag(\"/\" + tagname);\n        this.cr();\n    }\n}\n\nfunction code(node) {\n    this.tag(\"code\");\n    this.out(node.literal);\n    this.tag(\"/code\");\n}\n\nfunction code_block(node) {\n    var info_words = node.info ? node.info.split(/\\s+/) : [],\n        attrs = this.attrs(node);\n    if (info_words.length > 0 && info_words[0].length > 0) {\n        attrs.push([\"class\", \"language-\" + this.esc(info_words[0])]);\n    }\n    this.cr();\n    this.tag(\"pre\");\n    this.tag(\"code\", attrs);\n    this.out(node.literal);\n    this.tag(\"/code\");\n    this.tag(\"/pre\");\n    this.cr();\n}\n\nfunction thematic_break(node) {\n    var attrs = this.attrs(node);\n    this.cr();\n    this.tag(\"hr\", attrs, true);\n    this.cr();\n}\n\nfunction block_quote(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        this.cr();\n        this.tag(\"blockquote\", attrs);\n        this.cr();\n    } else {\n        this.cr();\n        this.tag(\"/blockquote\");\n        this.cr();\n    }\n}\n\nfunction list(node, entering) {\n    var tagname = node.listType === \"bullet\" ? \"ul\" : \"ol\",\n        attrs = this.attrs(node);\n\n    if (entering) {\n        var start = node.listStart;\n        if (start !== null && start !== 1) {\n            attrs.push([\"start\", start.toString()]);\n        }\n        this.cr();\n        this.tag(tagname, attrs);\n        this.cr();\n    } else {\n        this.cr();\n        this.tag(\"/\" + tagname);\n        this.cr();\n    }\n}\n\nfunction item(node, entering) {\n    var attrs = this.attrs(node);\n    if (entering) {\n        this.tag(\"li\", attrs);\n    } else {\n        this.tag(\"/li\");\n        this.cr();\n    }\n}\n\nfunction html_inline(node) {\n    if (this.options.safe) {\n        this.lit(\"<!-- raw HTML omitted -->\");\n    } else {\n        this.lit(node.literal);\n    }\n}\n\nfunction html_block(node) {\n    this.cr();\n    if (this.options.safe) {\n        this.lit(\"<!-- raw HTML omitted -->\");\n    } else {\n        this.lit(node.literal);\n    }\n    this.cr();\n}\n\nfunction custom_inline(node, entering) {\n    if (entering && node.onEnter) {\n        this.lit(node.onEnter);\n    } else if (!entering && node.onExit) {\n        this.lit(node.onExit);\n    }\n}\n\nfunction custom_block(node, entering) {\n    this.cr();\n    if (entering && node.onEnter) {\n        this.lit(node.onEnter);\n    } else if (!entering && node.onExit) {\n        this.lit(node.onExit);\n    }\n    this.cr();\n}\n\n/* Helper methods */\n\nfunction out(s) {\n    this.lit(this.esc(s));\n}\n\nfunction attrs(node) {\n    var att = [];\n    if (this.options.sourcepos) {\n        var pos = node.sourcepos;\n        if (pos) {\n            att.push([\n                \"data-sourcepos\",\n                String(pos[0][0]) +\n                    \":\" +\n                    String(pos[0][1]) +\n                    \"-\" +\n                    String(pos[1][0]) +\n                    \":\" +\n                    String(pos[1][1])\n            ]);\n        }\n    }\n    return att;\n}\n\n// quick browser-compatible inheritance\nHtmlRenderer.prototype = Object.create(Renderer.prototype);\n\nHtmlRenderer.prototype.text = text;\nHtmlRenderer.prototype.html_inline = html_inline;\nHtmlRenderer.prototype.html_block = html_block;\nHtmlRenderer.prototype.softbreak = softbreak;\nHtmlRenderer.prototype.linebreak = linebreak;\nHtmlRenderer.prototype.link = link;\nHtmlRenderer.prototype.image = image;\nHtmlRenderer.prototype.emph = emph;\nHtmlRenderer.prototype.strong = strong;\nHtmlRenderer.prototype.paragraph = paragraph;\nHtmlRenderer.prototype.heading = heading;\nHtmlRenderer.prototype.code = code;\nHtmlRenderer.prototype.code_block = code_block;\nHtmlRenderer.prototype.thematic_break = thematic_break;\nHtmlRenderer.prototype.block_quote = block_quote;\nHtmlRenderer.prototype.list = list;\nHtmlRenderer.prototype.item = item;\nHtmlRenderer.prototype.custom_inline = custom_inline;\nHtmlRenderer.prototype.custom_block = custom_block;\n\nHtmlRenderer.prototype.esc = escapeXml;\n\nHtmlRenderer.prototype.out = out;\nHtmlRenderer.prototype.tag = tag;\nHtmlRenderer.prototype.attrs = attrs;\n\nexport default HtmlRenderer;\n","\"use strict\";\n\nimport Renderer from \"./renderer.js\";\nimport { escapeXml } from \"../common.js\";\n\nvar reXMLTag = /\\<[^>]*\\>/;\n\nfunction toTagName(s) {\n    return s.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n}\n\nfunction XmlRenderer(options) {\n    options = options || {};\n\n    this.disableTags = 0;\n    this.lastOut = \"\\n\";\n\n    this.indentLevel = 0;\n    this.indent = \"  \";\n\n    this.options = options;\n}\n\nfunction render(ast) {\n    this.buffer = \"\";\n\n    var attrs;\n    var tagname;\n    var walker = ast.walker();\n    var event, node, entering;\n    var container;\n    var selfClosing;\n    var nodetype;\n\n    var options = this.options;\n\n    if (options.time) {\n        console.time(\"rendering\");\n    }\n\n    this.buffer += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n    this.buffer += '<!DOCTYPE document SYSTEM \"CommonMark.dtd\">\\n';\n\n    while ((event = walker.next())) {\n        entering = event.entering;\n        node = event.node;\n        nodetype = node.type;\n\n        container = node.isContainer;\n\n        selfClosing =\n            nodetype === \"thematic_break\" ||\n            nodetype === \"linebreak\" ||\n            nodetype === \"softbreak\";\n\n        tagname = toTagName(nodetype);\n\n        if (entering) {\n            attrs = [];\n\n            switch (nodetype) {\n                case \"document\":\n                    attrs.push([\"xmlns\", \"http://commonmark.org/xml/1.0\"]);\n                    break;\n                case \"list\":\n                    if (node.listType !== null) {\n                        attrs.push([\"type\", node.listType.toLowerCase()]);\n                    }\n                    if (node.listStart !== null) {\n                        attrs.push([\"start\", String(node.listStart)]);\n                    }\n                    if (node.listTight !== null) {\n                        attrs.push([\n                            \"tight\",\n                            node.listTight ? \"true\" : \"false\"\n                        ]);\n                    }\n                    var delim = node.listDelimiter;\n                    if (delim !== null) {\n                        var delimword = \"\";\n                        if (delim === \".\") {\n                            delimword = \"period\";\n                        } else {\n                            delimword = \"paren\";\n                        }\n                        attrs.push([\"delimiter\", delimword]);\n                    }\n                    break;\n                case \"code_block\":\n                    if (node.info) {\n                        attrs.push([\"info\", node.info]);\n                    }\n                    break;\n                case \"heading\":\n                    attrs.push([\"level\", String(node.level)]);\n                    break;\n                case \"link\":\n                case \"image\":\n                    attrs.push([\"destination\", node.destination]);\n                    attrs.push([\"title\", node.title]);\n                    break;\n                case \"custom_inline\":\n                case \"custom_block\":\n                    attrs.push([\"on_enter\", node.onEnter]);\n                    attrs.push([\"on_exit\", node.onExit]);\n                    break;\n                default:\n                    break;\n            }\n            if (options.sourcepos) {\n                var pos = node.sourcepos;\n                if (pos) {\n                    attrs.push([\n                        \"sourcepos\",\n                        String(pos[0][0]) +\n                            \":\" +\n                            String(pos[0][1]) +\n                            \"-\" +\n                            String(pos[1][0]) +\n                            \":\" +\n                            String(pos[1][1])\n                    ]);\n                }\n            }\n\n            this.cr();\n            this.out(this.tag(tagname, attrs, selfClosing));\n            if (container) {\n                this.indentLevel += 1;\n            } else if (!container && !selfClosing) {\n                var lit = node.literal;\n                if (lit) {\n                    this.out(this.esc(lit));\n                }\n                this.out(this.tag(\"/\" + tagname));\n            }\n        } else {\n            this.indentLevel -= 1;\n            this.cr();\n            this.out(this.tag(\"/\" + tagname));\n        }\n    }\n    if (options.time) {\n        console.timeEnd(\"rendering\");\n    }\n    this.buffer += \"\\n\";\n    return this.buffer;\n}\n\nfunction out(s) {\n    if (this.disableTags > 0) {\n        this.buffer += s.replace(reXMLTag, \"\");\n    } else {\n        this.buffer += s;\n    }\n    this.lastOut = s;\n}\n\nfunction cr() {\n    if (this.lastOut !== \"\\n\") {\n        this.buffer += \"\\n\";\n        this.lastOut = \"\\n\";\n        for (var i = this.indentLevel; i > 0; i--) {\n            this.buffer += this.indent;\n        }\n    }\n}\n\n// Helper function to produce an XML tag.\nfunction tag(name, attrs, selfclosing) {\n    var result = \"<\" + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            result += \" \" + attrib[0] + '=\"' + this.esc(attrib[1]) + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        result += \" /\";\n    }\n    result += \">\";\n    return result;\n}\n\n// quick browser-compatible inheritance\nXmlRenderer.prototype = Object.create(Renderer.prototype);\n\nXmlRenderer.prototype.render = render;\nXmlRenderer.prototype.out = out;\nXmlRenderer.prototype.cr = cr;\nXmlRenderer.prototype.tag = tag;\nXmlRenderer.prototype.esc = escapeXml;\n\nexport default XmlRenderer;\n","/*! http://mths.be/repeat v0.2.0 by @mathias */\nif (!String.prototype.repeat) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar repeat = function(count) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\t// `ToInteger`\n\t\t\tvar n = count ? Number(count) : 0;\n\t\t\tif (n != n) { // better `isNaN`\n\t\t\t\tn = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices\n\t\t\tif (n < 0 || n == Infinity) {\n\t\t\t\tthrow RangeError();\n\t\t\t}\n\t\t\tvar result = '';\n\t\t\twhile (n) {\n\t\t\t\tif (n % 2 == 1) {\n\t\t\t\t\tresult += string;\n\t\t\t\t}\n\t\t\t\tif (n > 1) {\n\t\t\t\t\tstring += string;\n\t\t\t\t}\n\t\t\t\tn >>= 1;\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'repeat', {\n\t\t\t\t'value': repeat,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.repeat = repeat;\n\t\t}\n\t}());\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"vue-component stac stac-fields metadata\"},[_vm._l((_vm.fields),function(group){return [_c(_vm.headingTag,{key:group.extension,tag:\"component\",domProps:{\"innerHTML\":_vm._s(group.label || 'General')}}),_c('section',{key:(\"section_\" + (group.extension)),staticClass:\"group\"},_vm._l((group.properties),function(prop,field){return _c('div',{key:group.extension + field,staticClass:\"tabular\",class:{wrap: Boolean(prop.custom || prop.items)},attrs:{\"id\":'field_' + field}},[_c('label',{attrs:{\"title\":field},domProps:{\"innerHTML\":_vm._s(prop.label)}}),_c('div',{staticClass:\"value\"},[_vm._t(field,function(){return [(prop.items)?_c('table',{staticClass:\"table\"},[_c('thead',[_c('tr',[(!Array.isArray(prop.formatted))?_c('th',[_vm._v(\" \")]):_vm._e(),_vm._l((prop.itemOrder),function(col){return _c('th',{key:col,domProps:{\"innerHTML\":_vm._s(prop.items[col].label)}})})],2)]),_c('tbody',_vm._l((prop.formatted),function(row,r){return _c('tr',{key:r},[(!Array.isArray(prop.formatted))?_c('th',[_vm._v(_vm._s(r))]):_vm._e(),_vm._l((prop.itemOrder),function(col){return _c('td',{key:(col + \"_\" + r),domProps:{\"innerHTML\":_vm._s(row[col])}})})],2)}),0)]):(field === 'card4l:processing_chain')?_c('Process',{staticClass:\"inline\",attrs:{\"process\":prop.value,\"provideDownload\":false,\"showGraph\":true}}):(prop.formatted)?_c('div',{staticClass:\"formatted\",domProps:{\"innerHTML\":_vm._s(prop.formatted)}}):[_vm._v(_vm._s(prop.value))]]},{\"prop\":prop,\"field\":field})],2)])}),0)]})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\t<section class=\"vue-component stac stac-fields metadata\">\r\n\t\t<template v-for=\"group in fields\">\r\n\t\t\t<component :is=\"headingTag\" v-html=\"group.label || 'General'\" :key=\"group.extension\" />\r\n\t\t\t<section class=\"group\" :key=\"`section_${group.extension}`\">\r\n\t\t\t\t<div v-for=\"(prop, field) in group.properties\" :key=\"group.extension + field\" :id=\"'field_' + field\" class=\"tabular\" :class=\"{wrap: Boolean(prop.custom || prop.items)}\">\r\n\t\t\t\t\t<label :title=\"field\" v-html=\"prop.label\" />\r\n\t\t\t\t\t<div class=\"value\">\r\n\t\t\t\t\t\t<slot :name=\"field\" :prop=\"prop\" :field=\"field\">\r\n\t\t\t\t\t\t\t<table v-if=\"prop.items\" class=\"table\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th v-if=\"!Array.isArray(prop.formatted)\">&nbsp;</th>\r\n\t\t\t\t\t\t\t\t\t\t<th v-for=\"col in prop.itemOrder\" :key=\"col\" v-html=\"prop.items[col].label\"></th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr v-for=\"(row, r) in prop.formatted\" :key=\"r\">\r\n\t\t\t\t\t\t\t\t\t\t<th v-if=\"!Array.isArray(prop.formatted)\">{{ r }}</th>\r\n\t\t\t\t\t\t\t\t\t\t<td v-for=\"col in prop.itemOrder\" :key=\"`${col}_${r}`\" v-html=\"row[col]\" />\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<Process v-else-if=\"field === 'card4l:processing_chain'\" class=\"inline\" :process=\"prop.value\" :provideDownload=\"false\" :showGraph=\"true\" />\r\n\t\t\t\t\t\t\t<div class=\"formatted\" v-else-if=\"prop.formatted\" v-html=\"prop.formatted\" />\r\n\t\t\t\t\t\t\t<template v-else>{{ prop.value }}</template>\r\n\t\t\t\t\t\t</slot>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</template>\r\n\t</section>\r\n</template>\r\n\r\n<script>\r\nimport StacFields from '@radiantearth/stac-fields';\r\nimport Utils from '../../utils'\r\n\r\nStacFields.Registry.externalRenderer = true;\r\n//StacFields.Registry.addMetadataFields({});\r\n\r\nexport default {\r\n\tname: 'StacFields',\r\n\tcomponents: {\r\n\t\tProcess: () => import('../Process.vue')\r\n\t},\r\n\tprops: {\r\n\t\tmetadata: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t},\r\n\t\theadingTag: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'h3'\r\n\t\t},\r\n\t\tignore: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: () => ([])\r\n\t\t},\r\n\t\ttype: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tcontext: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: () => ({})\r\n\t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\tignoreFn() {\r\n\t\t\tif (this.ignore.length > 0) {\r\n\t\t\t\treturn key => !this.ignore.includes(key);\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\tfields() {\r\n\t\t\tif (this.type === 'Collection') {\r\n\t\t\t\tlet data = Utils.deepClone(this.metadata);\r\n\t\t\t\tif (!Utils.isObject(data.summaries)) {\r\n\t\t\t\t\tdata.summaries = {};\r\n\t\t\t\t}\r\n\t\t\t\tfor(let key in data) {\r\n\t\t\t\t\t// Copy all custom top-level fields to summaries for easier visualization\r\n\t\t\t\t\tif (key === 'version' || (key !== 'cube:dimensions' && key.includes(':'))) {\r\n\t\t\t\t\t\tdata.summaries[key] = [data[key]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn StacFields.formatSummaries(data, this.ignoreFn);\r\n\t\t\t}\r\n\t\t\telse if (this.type === 'Item') {\r\n\t\t\t\treturn StacFields.formatItemProperties(this.metadata, this.ignoreFn);\r\n\t\t\t}\r\n\t\t\telse if (this.type === 'Asset') {\r\n\t\t\t\treturn StacFields.formatAsset(this.metadata, this.context, this.ignoreFn);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error('Not implemented yet');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\tlabel(key, specs = {}) {\r\n\t\t\treturn StacFields.label(key, specs);\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../base.scss';\r\n.vue-component.stac-fields {\r\n\t> .group {\r\n\t\tmargin-left: 1em;\r\n\t}\r\n\t.table {\r\n\t\twidth: 100%;\r\n\t\tborder-collapse: collapse;\r\n\t\tfont-size: 0.9em;\r\n\r\n\t\tth {\r\n\t\t\ttext-align: left;\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.05);\r\n\t\t}\r\n\t\ttd, th {\r\n\t\t\tborder: 1px solid rgba(0, 0, 0, 0.2);\r\n\t\t\tpadding: 3px;\r\n\t\t}\r\n\t\ttd {\r\n\t\t\tvertical-align: top;\r\n\t\t}\r\n\t\ttbody tr:hover,\r\n\t\ttbody tr:hover th {\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.1);\r\n\t\t}\r\n\t}\r\n\t.description {\r\n\t\tp {\r\n\t\t\t&:first-of-type {\r\n\t\t\t\tmargin-top: 0;\r\n\t\t\t}\r\n\t\t\t&:last-of-type {\r\n\t\t\t\tmargin-bottom: 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</style>","import mod from \"-!../../../../cache-loader/dist/cjs.js??ref--13-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--1-0!../../../../vue-loader/lib/index.js??vue-loader-options!./StacFields.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../cache-loader/dist/cjs.js??ref--13-0!../../../../thread-loader/dist/cjs.js!../../../../babel-loader/lib/index.js!../../../../cache-loader/dist/cjs.js??ref--1-0!../../../../vue-loader/lib/index.js??vue-loader-options!./StacFields.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StacFields.vue?vue&type=template&id=9b8daa3c&\"\nimport script from \"./StacFields.vue?vue&type=script&lang=js&\"\nexport * from \"./StacFields.vue?vue&type=script&lang=js&\"\nimport style0 from \"./StacFields.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
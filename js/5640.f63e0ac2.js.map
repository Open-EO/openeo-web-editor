{"version":3,"file":"js/5640.f63e0ac2.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/ol/render/canvas.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Builder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Executor.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Instruction.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/TextBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Immediate.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/hitdetect.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/style.js","webpack://@openeo/web-editor/./node_modules/ol/render/webgl/constants.js","webpack://@openeo/web-editor/./node_modules/ol/render/webgl/utils.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Map.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Composite.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Layer.js"],"sourcesContent":["/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 8; // base attributes: x0, y0, x1, y1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n"],"names":["defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","retries","size","referenceFonts","len","length","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","i","referenceFont","measureTextWidth","width","check","done","fonts","getKeys","ii","font","get","apply","this","split","undefined","set","clearInterval","fontSpec","families","family","key","style","weight","setInterval","measureTextHeight","measureElement","height","metrics","measureText","lineHeight","isNaN","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","document","createElement","innerHTML","minHeight","maxHeight","padding","border","position","display","left","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","cache","reduce","prev","curr","Math","max","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","push","currentWidth","currentHeight","drawImageOrLabel","context","transform","opacity","labelOrImage","originX","originY","w","h","x","y","scale","save","globalAlpha","contextInstructions","translate","executeLabelInstructions","drawImage","restore","label","Array","isArray","CanvasBuilder","constructor","tolerance","maxExtent","resolution","pixelRatio","super","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","map","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","offset","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","INTERSECTING","drawCustomCoordinates_","ends","builderEnds","builderEnd","drawCustom","geometry","feature","renderer","hitDetectionRenderer","index","beginGeometry","type","getType","getStride","builderBegin","builderEndss","getOrientedFlatCoordinates","endss","getEndss","myEnds","CUSTOM","getFlatCoordinates","getEnds","endGeometry","BEGIN_GEOMETRY","finish","reverseHitDetectionInstructions","reverse","n","instruction","begin","END_GEOMETRY","setFillStrokeStyle","fillStyle","strokeStyle","fillStyleColor","getColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","lineDash","slice","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","image_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterMode_","declutterImageWithText_","drawPoint","pointGeometry","myBegin","DRAW_IMAGE","ceil","drawMultiPoint","multiPointGeometry","filteredFlatCoordinates","setImageStyle","imageStyle","sharedData","anchor","getAnchor","getSize","origin","getOrigin","getPixelRatio","getHitDetectionImage","getImage","getOpacity","getRotateWithView","getRotation","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","fill","stroke","numEnds","drawCircle","circleGeometry","setFillStrokeStyles_","circleInstruction","CIRCLE","drawPolygon","polygonGeometry","drawMultiPolygon","multiPolygonGeometry","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","toString","replays","replay","Constructor","tmpExtent","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","String","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","zIndexContext_","ZIndexContext","getZIndexContext","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","justify","textAlign","strokeWidth","renderWidth","floor","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","prototype","replayTextBackground_","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","rotation","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","min","round","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","value","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","intersects","alignAndScale","repeatSize","rotate","setLineDash","drawLabelWithPointPlacement_","baseline","textBaseline","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","dd","declutterMode","prevX","prevY","roundX","roundY","image","d","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","atan2","batchSize","currentGeometry","getGeometry","getExtent","BEGIN_PATH","NaN","x1","y1","x2","y2","dx","dy","r","sqrt","arc","PI","CLOSE_PATH","closePath","fn","coords","rotateWithView","declutterImageWithText","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","args","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","collides","render","insert","DRAW_CHARS","overflow","maxAngle","measurePixelRatio","offsetY","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","abs","startM","parts","drawChars","c","cc","chars","part","load","result","FILL","STROKE","execute","executeHitDetection","canvas","ALL","DECLUTTER","NON_DECLUTTER","filter","includes","ExecutorGroup","allInstructions","renderBuffer","overlaps_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","willReadFrequently","clearRect","indexes","getPixelIndexArray","imageData","getImageData","data","idx","zs","Object","keys","j","executor","sort","isEmpty","targetContext","builderTypes","maxBuilderTypes","jj","getContext","requireClip","pushFunction","getDeferredZIndexContexts","getRenderedContext","renderDeferred","deferredZIndexContexts","forEach","draw","clear","circlePixelIndexArrayCache","radius","maxDistanceSq","distances","distanceSq","distance","pixelIndex","Instruction","beginPathInstruction","closePathInstruction","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","drawText","geometryType","placement","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p","repeat","flatOffset","o","oo","chunk","chunkBegin","chunkEnd","range","drawChars_","setTextStyle","textStyle","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","join","instructions_","offset_","context_","Proxy","target","property","pushMethodArgs_","instructionsAtIndex","instructionAtIndex","CanvasImmediateRenderer","VectorContext","squaredTolerance","userTransform","extent_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simplifyTransformed","setStyle","setTransform","drawGeometry","drawGeometryCollection","drawFeature","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","t","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","styleFunction","projection","userExtent","toUserExtent","imageSmoothingEnabled","getTransformFromProjections","getUserProjection","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","styles","color","padStart","originalStyle","clone","setColor","setText","imgSize","getImageSize","imgContext","img","fillRect","setImage","Icon","anchorXUnits","anchorYUnits","getScale","getZIndex","byGeometryType","getGeometriesArrayRecursive","replace","zIndexKeys","geomAndStyle","k","kk","hitDetect","pixel","resultFeatures","g","b","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","properties","getPropertiesInternal","featureId","id","getId","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","Error","JSON","stringify","empty","setFill","setStroke","setZIndex","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","setWidth","setLineCap","setLineJoin","setLineDashOffset","setMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","optionalDeclutterMode","setBackgroundFill","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","setPlacement","setRepeat","setScale","setRotateWithView","setRotation","setTextAlign","setJustify","setTextBaseline","setPadding","buildIcon","buildShape","buildCircle","srcName","src","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","crossOrigin","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","setOpacity","setDisplacement","setAnchor","pointsName","radiusName","points","requireNumber","radius2","angle","shape","evaluateRadius","circle","setRadius","name","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","array","requireSize","requireSizeLike","encoded","WebGLWorkerMessageType","GENERATE_POLYGON_BUFFERS","GENERATE_POINT_BUFFERS","GENERATE_LINE_STRING_BUFFERS","LINESTRING_ANGLE_COSINE_CUTOFF","colorEncodeId","radix","divide","colorDecodeId","mult","MapRenderer","Disposable","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","center","checkWrapped","thisArg","layerFilter","thisArg2","managed","layer","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","getWrapX","bind","order","m","a","some","hasFeatureAtCoordinate","hasFeature","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","CompositeMapRenderer","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","dispatchEvent","disposeInternal","parentNode","PRECOMPOSE","declutter","BaseVector","getDeclutter","renderedLayerStates","previousElement","layerIndex","sourceState","getSourceState","unrender","element","POSTCOMPOSE","renderDeclutter","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","getFeatures","getData","prepareFrame","loadedTileCallback","tiles","zoom","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","handleFontsChanged","getState","LOADED","ERROR","renderIfReadyAndVisible","loadImage","imageState","addEventListener","CHANGE","IDLE","getVisible","changed"],"sourceRoot":""}
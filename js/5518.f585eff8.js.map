{"version":3,"file":"js/5518.f585eff8.js","mappings":"yKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAQF,EAAII,YAAYC,OAAS,EAAGH,EAAG,UAAU,CAACI,YAAY,8DAA8D,CAACJ,EAAG,SAAS,CAACI,YAAY,UAAU,CAACN,EAAIO,GAAG,gBAAgBL,EAAG,IAAI,CAACF,EAAIO,GAAG,QAAQP,EAAIQ,GAAGR,EAAIS,QAAQ,0EAA0EP,EAAG,KAAKF,EAAIU,GAAIV,EAAY,UAAE,SAASW,GAAS,OAAOT,EAAG,KAAK,CAACU,IAAID,EAAQE,KAAK,CAACX,EAAG,MAAM,CAACI,YAAY,cAAc,CAACJ,EAAG,SAAS,CAACI,YAAY,aAAa,CAACN,EAAIO,GAAGP,EAAIQ,GAAGG,EAAQG,UAAUZ,EAAG,KAAK,CAACI,YAAY,uBAAuB,CAAqB,YAAnBK,EAAQI,OAAsBb,EAAG,KAAK,CAACI,YAAY,aAAa,CAACN,EAAIO,GAAG,aAAaL,EAAG,KAAK,CAACI,YAAY,eAAe,CAACN,EAAIO,GAAG,iBAAiB,IAAG,KAAKP,EAAIgB,IAClvB,EACIC,EAAkB,G,sBCoBtB,SACCC,KAAM,mBACNC,OAAQ,CACPC,EAAA,GAEDC,MAAO,CACNZ,OAAQ,CACPa,KAAMC,OACNC,QAAS,YAEVC,SAAU,CACTH,KAAMI,MACNF,QAAS,OAIPJ,EAAA,SAEJO,SAAU,CACTvB,cACC,GAAoC,IAAhC,SAAWH,KAAK2B,YACnB,OAAO3B,KAAKwB,SAER,CACJ,IAAII,EAAMC,OAAOC,KAAK9B,KAAK2B,YACvBI,EAAYN,MAAMO,QAAQhC,KAAKwB,UAAYxB,KAAKwB,SAAWI,EAC/D,OAAOA,EAAIK,QAAOC,IAAOH,EAAUI,SAASD,IAC7C,CACD,EACAE,WACC,OAAOpC,KAAKwB,SAASa,KAAIH,IACxB,IAAII,EAAO,CACVzB,MAAOqB,GAKR,OAHI,aAAelC,KAAK2B,aAAeO,KAAMlC,KAAK2B,YACjDE,OAAOU,OAAOD,EAAMtC,KAAK2B,WAAWO,IAE9BI,CAAI,GAEb,IC7DoI,I,cCQlIE,GAAY,OACd,EACA1C,EACAkB,GACA,EACA,KACA,KACA,MAIF,QAAewB,EAAiB,O","sources":["webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/internal/FederationNotice.vue?e466","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/internal/FederationNotice.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/internal/FederationNotice.vue?ec9b","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/internal/FederationNotice.vue"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.unsupported.length > 0)?_c('section',{staticClass:\"vue-component message-block federation federation-backends\"},[_c('strong',{staticClass:\"header\"},[_vm._v(\"Federation\")]),_c('p',[_vm._v(\"This \"+_vm._s(_vm.entity)+\" is only available through the following services in the federation:\")]),_c('ul',_vm._l((_vm.services),function(service){return _c('li',{key:service.url},[_c('div',{staticClass:\"fed-header\"},[_c('strong',{staticClass:\"fed-title\"},[_vm._v(_vm._s(service.title))]),_c('ul',{staticClass:\"badges small inline\"},[(service.status === 'offline')?_c('li',{staticClass:\"badge red\"},[_vm._v(\"offline\")]):_c('li',{staticClass:\"badge green\"},[_vm._v(\"online\")])])])])}),0)]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\t<section v-if=\"unsupported.length > 0\" class=\"vue-component message-block federation federation-backends\">\r\n\t\t<strong class=\"header\">Federation</strong>\r\n\t\t<p>This {{ entity }} is only available through the following services in the federation:</p>\r\n\t\t<ul>\r\n\t\t\t<li v-for=\"service in services\" :key=\"service.url\">\r\n\t\t\t\t<div class=\"fed-header\">\r\n\t\t\t\t\t<strong class=\"fed-title\">{{ service.title }}</strong>\r\n\t\t\t\t\t<ul class=\"badges small inline\">\r\n\t\t\t\t\t\t<li class=\"badge red\" v-if=\"service.status === 'offline'\">offline</li>\r\n\t\t\t\t\t\t<li class=\"badge green\" v-else>online</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</section>\r\n</template>\r\n\r\n<script>\r\nimport FederationMixin from './FederationMixin.js';\r\nimport Utils from '../../utils';\r\n\r\nexport default {\r\n\tname: 'FederationNotice',\r\n\tmixins: [\r\n\t\tFederationMixin\r\n\t],\r\n\tprops: {\r\n\t\tentity: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'resource'\r\n\t\t},\r\n\t\tbackends: {\r\n\t\t\ttype: Array,\r\n\t\t\tdefault: []\r\n\t\t},\r\n\t\t// Mixins don't work properly in web components,\r\n\t\t// see https://github.com/vuejs/vue-web-component-wrapper/issues/30,\r\n\t\t...FederationMixin.props\r\n\t},\r\n\tcomputed: {\r\n\t\tunsupported() {\r\n\t\t\tif (Utils.size(this.federation) === 0) {\r\n\t\t\t\treturn this.backends;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet all = Object.keys(this.federation);\r\n\t\t\t\tlet supported = Array.isArray(this.backends) ? this.backends : all;\r\n\t\t\t\treturn all.filter(id => !supported.includes(id));\r\n\t\t\t}\r\n\t\t},\r\n\t\tservices() {\r\n\t\t\treturn this.backends.map(id => {\r\n\t\t\t\tlet base = {\r\n\t\t\t\t\ttitle: id\r\n\t\t\t\t};\r\n\t\t\t\tif (Utils.isObject(this.federation) && id in this.federation) {\r\n\t\t\t\t\tObject.assign(base, this.federation[id]);\r\n\t\t\t\t}\r\n\t\t\t\treturn base;\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import '../base.scss';\r\n\r\n.vue-component.federation-backends {\r\n\tbackground-color: rgba(184, 134, 11, 0.1);\r\n\tborder: 1px solid darkgoldenrod;\r\n\r\n\t> .header {\r\n\t\tcolor: darkgoldenrod;\r\n\t}\r\n\r\n\t.fed-title {\r\n\t\tfont-weight: normal;\r\n\t}\r\n}\r\n</style>","import mod from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FederationNotice.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./FederationNotice.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FederationNotice.vue?vue&type=template&id=79871801&\"\nimport script from \"./FederationNotice.vue?vue&type=script&lang=js&\"\nexport * from \"./FederationNotice.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FederationNotice.vue?vue&type=style&index=0&id=79871801&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","unsupported","length","staticClass","_v","_s","entity","_l","service","key","url","title","status","_e","staticRenderFns","name","mixins","FederationMixin","props","type","String","default","backends","Array","computed","federation","all","Object","keys","supported","isArray","filter","id","includes","services","map","base","assign","component"],"sourceRoot":""}
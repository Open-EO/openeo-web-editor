{"version":3,"file":"js/1253.4dac9058.js","mappings":"8KAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,IAAI,CAACF,EAAIK,GAAG,iEAAiEH,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,gBAAgB,MAAQN,EAAIO,MAAM,aAAeP,EAAIQ,eAAeC,GAAG,CAAC,MAAQT,EAAIU,aAA4B,OAAdV,EAAIW,MAAgBT,EAAG,IAAI,CAACA,EAAG,QAAQ,CAACU,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUP,MAAOP,EAAIe,SAAUC,WAAW,aAAaV,MAAM,CAAC,KAAO,WAAW,GAAK,SAASW,SAAS,CAAC,QAAUC,MAAMC,QAAQnB,EAAIe,UAAUf,EAAIoB,GAAGpB,EAAIe,SAAS,OAAO,EAAGf,EAAIe,UAAWN,GAAG,CAAC,OAAS,SAASY,GAAQ,IAAIC,EAAItB,EAAIe,SAASQ,EAAKF,EAAOG,OAAOC,IAAIF,EAAKG,QAAuB,GAAGR,MAAMC,QAAQG,GAAK,CAAC,IAAIK,EAAI,KAAKC,EAAI5B,EAAIoB,GAAGE,EAAIK,GAAQJ,EAAKG,QAASE,EAAI,IAAI5B,EAAIe,SAASO,EAAIO,OAAO,CAACF,KAAYC,GAAK,IAAI5B,EAAIe,SAASO,EAAIQ,MAAM,EAAEF,GAAKC,OAAOP,EAAIQ,MAAMF,EAAI,IAAK,MAAM5B,EAAIe,SAASU,CAAI,KAAKzB,EAAIK,GAAG,MAAMH,EAAG,QAAQ,CAACI,MAAM,CAAC,IAAM,UAAU,CAACN,EAAIK,GAAG,wFAAwFL,EAAI+B,MAAM,EACxhC,EACIC,EAAkB,G,WCYtB,SACAnB,KAAAA,eACAoB,WAAAA,CACAC,UAAAA,EAAAA,YAEAC,MAAAA,CACA5B,MAAAA,CACA6B,KAAAA,OACAC,QAAAA,MAEA1B,MAAAA,CACAyB,KAAAA,QACAC,QAAAA,MAEAC,YAAAA,CACAF,KAAAA,OACAC,QAAAA,OAGAE,SAAAA,CACAxB,SAAAA,CACAyB,MACA,iBACA,EACAC,IAAAA,GACA,4BACA,GAEAjC,gBACA,wBAGA,8GAFA,IAGA,GAEAkC,QAAAA,CACAhC,UAAAA,GACA,gFACA,qBACA,ICrD8Q,I,cCO1QiC,GAAY,OACd,EACA5C,EACAiC,GACA,EACA,KACA,KACA,MAIF,QAAeW,EAAiB,O,mFCjBzB,MAAMC,EAAYC,EAAAA,EAAAA,gBAAsBC,EAAQ,QAAyDC,YACnGC,EAAe,CAC3B,SACA,UACA,SACA,UACA,QACA,S","sources":["webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseFormat.vue","webpack://@openeo/web-editor/src/components/wizards/tabs/ChooseFormat.vue","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseFormat.vue?de7b","webpack://@openeo/web-editor/./src/components/wizards/tabs/ChooseFormat.vue?365b","webpack://@openeo/web-editor/./src/components/datatypes/api.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"step choose-format\"},[_c('p',[_vm._v(\"Please select the file format you want to download data in.\")]),_c('SelectBox',{attrs:{\"type\":\"output-format\",\"value\":_vm.value,\"optionFilter\":_vm.filterFormats},on:{\"input\":_vm.setFormat}}),(_vm.scale !== null)?_c('p',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.scaleBox),expression:\"scaleBox\"}],attrs:{\"type\":\"checkbox\",\"id\":\"scale\"},domProps:{\"checked\":Array.isArray(_vm.scaleBox)?_vm._i(_vm.scaleBox,null)>-1:(_vm.scaleBox)},on:{\"change\":function($event){var $$a=_vm.scaleBox,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.scaleBox=$$a.concat([$$v]))}else{$$i>-1&&(_vm.scaleBox=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.scaleBox=$$c}}}}),_vm._v(\"Â  \"),_c('label',{attrs:{\"for\":\"scale\"}},[_vm._v(\"Scale the values from [-1, 1] to [0, 255] (often required for PNG, GIF or JPEG).\")])]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"step choose-format\">\n\t\t<p>Please select the file format you want to download data in.</p>\n\t\t<SelectBox type=\"output-format\" :value=\"value\" @input=\"setFormat\" :optionFilter=\"filterFormats\" />\n\t\t<p v-if=\"scale !== null\">\n\t\t\t<input type=\"checkbox\" id=\"scale\" v-model=\"scaleBox\" />&nbsp;\n\t\t\t<label for=\"scale\">Scale the values from [-1, 1] to [0, 255] (often required for PNG, GIF or JPEG).</label>\n\t\t</p> \n\t</div>\n</template>\n\n<script>\nimport SelectBox from '../../datatypes/SelectBox.vue';\n\nexport default {\n\tname: 'ChooseFormat',\n\tcomponents: {\n\t\tSelectBox\n\t},\n\tprops: {\n\t\tvalue: {\n\t\t\ttype: String,\n\t\t\tdefault: null\n\t\t},\n\t\tscale: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: null\n\t\t},\n\t\tgisDataType: {\n\t\t\ttype: String,\n\t\t\tdefault: null\n\t\t}\n\t},\n\tcomputed: {\n\t\tscaleBox: {\n\t\t\tget() {\n\t\t\t\treturn this.scale;\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tthis.$emit('update:scale', value);\n\t\t\t}\n\t\t},\n\t\tfilterFormats() {\n\t\t\tif (!this.gisDataType) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn format => !Array.isArray(format.gis_data_types) || format.gis_data_types.length === 0 || format.gis_data_types.includes(this.gisDataType);\n\t\t}\n\t},\n\tmethods: {\n\t\tsetFormat(format) {\n\t\t\tthis.scaleBox = ['bmp', 'gif', 'jpeg', 'jpg', 'png', 'webp'].includes(format.toLowerCase());\n\t\t\tthis.$emit('input', format);\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseFormat.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChooseFormat.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChooseFormat.vue?vue&type=template&id=399a88f0&\"\nimport script from \"./ChooseFormat.vue?vue&type=script&lang=js&\"\nexport * from \"./ChooseFormat.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Utils from '../../utils';\nexport const API_TYPES = Utils.resolveJsonRefs(require('@openeo/js-processgraphs/assets/subtype-schemas.json')).definitions;\nexport const NATIVE_TYPES = [\n\t'string',\n\t'integer',\n\t'number',\n\t'boolean',\n\t'array',\n\t'object'\n];"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","value","filterFormats","on","setFormat","scale","directives","name","rawName","scaleBox","expression","domProps","Array","isArray","_i","$event","$$a","$$el","target","$$c","checked","$$v","$$i","concat","slice","_e","staticRenderFns","components","SelectBox","props","type","default","gisDataType","computed","get","set","methods","component","API_TYPES","Utils","require","definitions","NATIVE_TYPES"],"sourceRoot":""}
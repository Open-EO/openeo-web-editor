{"version":3,"file":"js/9163.782a406b.js","mappings":"4JAQA,SACEA,YAAa,cACbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,gB,4DCTjB,MAAMC,UAAkB,IAItB,WAAAC,CAAYC,GACVC,QAMAC,KAAKC,UAAY,KAMjBD,KAAKE,SAAWC,SAASC,cAAc,OACvCJ,KAAKE,SAASG,MAAMC,SAAW,WAC/BN,KAAKE,SAASG,MAAME,cAAgB,OACpCP,KAAKE,SAASJ,UAAY,UAAYA,EAMtCE,KAAKQ,KAAO,KAMZR,KAAKS,YAAc,KAMnBT,KAAKU,UAAY,IACnB,CAKA,eAAAC,GACEX,KAAKY,OAAO,KACd,CAKA,OAAAC,GACE,MAAMC,EAAad,KAAKS,YAClBM,EAAWf,KAAKU,UAChBM,EAAK,KACLX,EAAQL,KAAKE,SAASG,MAC5BA,EAAMY,KAAOC,KAAKC,IAAIL,EAAW,GAAIC,EAAS,IAAMC,EACpDX,EAAMe,IAAMF,KAAKC,IAAIL,EAAW,GAAIC,EAAS,IAAMC,EACnDX,EAAMgB,MAAQH,KAAKI,IAAIP,EAAS,GAAKD,EAAW,IAAME,EACtDX,EAAMkB,OAASL,KAAKI,IAAIP,EAAS,GAAKD,EAAW,IAAME,CACzD,CAKA,MAAAJ,CAAOY,GACL,GAAIxB,KAAKQ,KAAM,CACbR,KAAKQ,KAAKiB,sBAAsBC,YAAY1B,KAAKE,UACjD,MAAMG,EAAQL,KAAKE,SAASG,MAC5BA,EAAMY,KAAO,UACbZ,EAAMe,IAAM,UACZf,EAAMgB,MAAQ,UACdhB,EAAMkB,OAAS,SACjB,CACAvB,KAAKQ,KAAOgB,EACRxB,KAAKQ,MACPR,KAAKQ,KAAKiB,sBAAsBE,YAAY3B,KAAKE,SAErD,CAMA,SAAA0B,CAAUd,EAAYC,GACpBf,KAAKS,YAAcK,EACnBd,KAAKU,UAAYK,EACjBf,KAAK6B,yBACL7B,KAAKa,SACP,CAKA,sBAAAgB,GACE,MAAMf,EAAad,KAAKS,YAClBM,EAAWf,KAAKU,UAChBoB,EAAS,CACbhB,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAErBiB,EAAcD,EAAON,IACzBxB,KAAKQ,KAAKwB,+BACVhC,KAAKQ,MAGPuB,EAAY,GAAKA,EAAY,GAAGE,QAC3BjC,KAAKC,UAGRD,KAAKC,UAAUiC,eAAe,CAACH,IAF/B/B,KAAKC,UAAY,IAAI,KAAQ,CAAC8B,GAIlC,CAKA,WAAAI,GACE,OAAOnC,KAAKC,SACd,EAGF,S,gDC7HA,MAAMmC,UAAoB,KAQxB,WAAAvC,CAAYwC,EAAMC,EAAuBC,EAAYC,GACnDzC,MAAMsC,GAQNrC,KAAKsC,sBAAwBA,EAO7BtC,KAAKuC,WAAaA,EASlBvC,KAAKwC,QAAUA,CACjB,EAGF,S,mCCpCA,SAMEC,UAAW,YAOXC,WAAY,aASZC,WAAY,aASZC,YAAa,cASbC,eAAgB,iB,mCCrClB,MAAMC,EASJ,UAAAC,CAAWC,EAAUC,EAASC,EAAUC,GAAuB,CAO/D,YAAAC,CAAaJ,GAAW,CAOxB,QAAAK,CAAShD,GAAQ,CAMjB,UAAAiD,CAAWC,EAAgBN,GAAU,CAMrC,WAAAO,CAAYP,EAAS5C,GAAQ,CAM7B,sBAAAoD,CAAuBC,EAA4BT,GAAU,CAM7D,cAAAU,CAAeC,EAAoBX,GAAU,CAM7C,mBAAAY,CAAoBC,EAAyBb,GAAU,CAMvD,cAAAc,CAAeC,EAAoBf,GAAU,CAM7C,gBAAAgB,CAAiBC,EAAsBjB,GAAU,CAMjD,SAAAkB,CAAUC,EAAenB,GAAU,CAMnC,WAAAoB,CAAYC,EAAiBrB,GAAU,CAMvC,QAAAsB,CAASvB,EAAUC,GAAU,CAM7B,kBAAAuB,CAAmBC,EAAWC,GAAc,CAM5C,aAAAC,CAAcC,EAAYC,GAAyB,CAMnD,YAAAC,CAAaC,EAAWF,GAAyB,EAGnD,S,+OCvBO,MAAMG,EAAc,kBAMdC,EAAmB,OAMnBC,EAAiB,QAMjBC,EAAkB,GAMlBC,EAAwB,EAMxBC,EAAkB,QAMlBC,EAAoB,GAMpBC,EAAqB,OAMrBC,EAAmB,SAMnBC,EAAsB,SAMtBC,EAAiB,CAAC,EAAG,EAAG,EAAG,GAM3BC,EAAmB,EAKnBC,EAAe,IAAI,IAKhC,IAKIC,EALAC,EAAiB,KAUd,MAAMC,EAAc,CAAC,EAMfC,EAAe,WAC1B,MAAMC,EAAU,IACVC,EAAO,QACPC,EAAiB,CAAC,YAAa,SAC/BC,EAAMD,EAAeE,OACrBC,EAAO,2BACb,IAAIC,EAAUC,EAQd,SAASC,EAAYC,EAAWC,EAAYC,GAC1C,IAAIC,GAAY,EAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIV,IAAOU,EAAG,CAC5B,MAAMC,EAAgBZ,EAAeW,GAKrC,GAJAN,EAAiBQ,EACfN,EAAY,IAAMC,EAAa,IAAMT,EAAOa,EAC5CT,GAEEM,GAAcG,EAAe,CAC/B,MAAM1F,EAAQ2F,EACZN,EACE,IACAC,EACA,IACAT,EACAU,EACA,IACAG,EACFT,GAIFO,EAAYA,GAAaxF,GAASmF,CACpC,CACF,CACA,QAAIK,CAIN,CAEA,SAASI,IACP,IAAIC,GAAO,EACX,MAAMC,EAAQvB,EAAawB,UAC3B,IAAK,IAAIN,EAAI,EAAGO,EAAKF,EAAMd,OAAQS,EAAIO,IAAMP,EAAG,CAC9C,MAAMQ,EAAOH,EAAML,GACflB,EAAa2B,IAAID,GAAQrB,IACvBQ,EAAYe,MAAMxH,KAAMsH,EAAKG,MAAM,SACrC,OAAM1B,GAEND,EAAiB,KACjBD,OAAc6B,EACd9B,EAAa+B,IAAIL,EAAMrB,KAEvBL,EAAa+B,IAAIL,EAAM1B,EAAa2B,IAAID,GAAQ,GAAG,GACnDJ,GAAO,GAGb,CACIA,IACFU,cAAcrB,GACdA,OAAWmB,EAEf,CAEA,OAAO,SAAUG,GACf,MAAMP,GAAO,OAAkBO,GAC/B,IAAKP,EACH,OAEF,MAAMQ,EAAWR,EAAKQ,SACtB,IAAK,IAAIhB,EAAI,EAAGO,EAAKS,EAASzB,OAAQS,EAAIO,IAAMP,EAAG,CACjD,MAAMiB,EAASD,EAAShB,GAClBkB,EAAMV,EAAKjH,MAAQ,KAAOiH,EAAKW,OAAS,KAAOF,OACvBL,IAA1B9B,EAAa2B,IAAIS,KACnBpC,EAAa+B,IAAIK,EAAK/B,GAAS,GAC1BQ,EAAYa,EAAKjH,MAAOiH,EAAKW,OAAQF,KACxCnC,EAAa+B,IAAIK,EAAK,GAAG,QACRN,IAAbnB,IACFA,EAAW2B,YAAYjB,EAAO,MAItC,CACF,CACD,CAzF2B,GA+FfkB,EAAoB,WAI/B,IAAIC,EACJ,OAAO,SAAUP,GACf,IAAItG,EAASwE,EAAY8B,GACzB,QAAcH,GAAVnG,EAAqB,CACvB,GAAI,KAAyB,CAC3B,MAAM+F,GAAO,OAAkBO,GACzBQ,EAAUC,EAAYT,EAAU,MAChCU,EAAaC,MAAMC,OAAOnB,EAAKiB,aACjC,IACAE,OAAOnB,EAAKiB,YAChBhH,EACEgH,GACCF,EAAQK,wBAA0BL,EAAQM,yBAC/C,MACOP,IACHA,EAAiBjI,SAASC,cAAc,OACxCgI,EAAeQ,UAAY,IAC3BR,EAAe/H,MAAMwI,UAAY,IACjCT,EAAe/H,MAAMyI,UAAY,OACjCV,EAAe/H,MAAMkB,OAAS,OAC9B6G,EAAe/H,MAAM0I,QAAU,IAC/BX,EAAe/H,MAAM2I,OAAS,OAC9BZ,EAAe/H,MAAMC,SAAW,WAChC8H,EAAe/H,MAAM4I,QAAU,QAC/Bb,EAAe/H,MAAMY,KAAO,YAE9BmH,EAAe/H,MAAMiH,KAAOO,EAC5B1H,SAAS+I,KAAKvH,YAAYyG,GAC1B7G,EAAS6G,EAAee,aACxBhJ,SAAS+I,KAAKxH,YAAY0G,GAE5BrC,EAAY8B,GAAYtG,CAC1B,CACA,OAAOA,CACT,CACD,CAvCgC,GA8CjC,SAAS+G,EAAYhB,EAAMhB,GAQzB,OAPKR,IACHA,GAAiB,QAAsB,EAAG,IAExCwB,GAAQzB,IACVC,EAAewB,KAAOA,EACtBzB,EAAcC,EAAewB,MAExBxB,EAAewC,YAAYhC,EACpC,CAOO,SAASU,EAAiBM,EAAMhB,GACrC,OAAOgC,EAAYhB,EAAMhB,GAAMjF,KACjC,CASO,SAAS+H,EAAyB9B,EAAMhB,EAAM+C,GACnD,GAAI/C,KAAQ+C,EACV,OAAOA,EAAM/C,GAEf,MAAMjF,EAAQiF,EACXmB,MAAM,MACN6B,QAAO,CAACC,EAAMC,IAAStI,KAAKuI,IAAIF,EAAMvC,EAAiBM,EAAMkC,KAAQ,GAExE,OADAH,EAAM/C,GAAQjF,EACPA,CACT,CAOO,SAASqI,EAAkBC,EAAWC,GAC3C,MAAMC,EAAS,GACTC,EAAU,GACVC,EAAa,GACnB,IAAI1I,EAAQ,EACR2I,EAAY,EACZzI,EAAS,EACTgH,EAAa,EACjB,IAAK,IAAIzB,EAAI,EAAGO,EAAKuC,EAAOvD,OAAQS,GAAKO,EAAIP,GAAK,EAAG,CACnD,MAAMR,EAAOsD,EAAO9C,GACpB,GAAa,OAATR,GAAiBQ,IAAMO,EAAI,CAC7BhG,EAAQH,KAAKuI,IAAIpI,EAAO2I,GACxBD,EAAWE,KAAKD,GAChBA,EAAY,EACZzI,GAAUgH,EACV,QACF,CACA,MAAMjB,EAAOsC,EAAO9C,EAAI,IAAM6C,EAAUrC,KAClC4C,EAAelD,EAAiBM,EAAMhB,GAC5CuD,EAAOI,KAAKC,GACZF,GAAaE,EACb,MAAMC,EAAgBhC,EAAkBb,GACxCwC,EAAQG,KAAKE,GACb5B,EAAarH,KAAKuI,IAAIlB,EAAY4B,EACpC,CACA,MAAO,CAAC9I,QAAOE,SAAQsI,SAAQC,UAASC,aAC1C,CA6BO,SAASK,EACd5H,EACA6H,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAtI,EAAQuI,OAEQ,IAAZT,IACF9H,EAAQwI,aAAeV,GAErBD,GACF7H,EAAQyI,aAAazD,MAAMhF,EAAS6H,GAGjB,EAAea,qBAElC1I,EAAQ2I,UAAUP,EAAGC,GACrBrI,EAAQsI,MAAMA,EAAM,GAAIA,EAAM,IAC9BM,EAA8C,EAAgB5I,IACrDsI,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCtI,EAAQ2I,UAAUP,EAAGC,GACrBrI,EAAQsI,MAAMA,EAAM,GAAIA,EAAM,IAC9BtI,EAAQ6I,UAC6D,EAGnEb,EACAC,EACAC,EACAC,EACA,EACA,EACAD,EACAC,IAIFnI,EAAQ6I,UAC6D,EAGnEb,EACAC,EACAC,EACAC,EACAC,EACAC,EACAH,EAAII,EAAM,GACVH,EAAIG,EAAM,IAIdtI,EAAQ8I,SACV,CAMA,SAASF,EAAyBG,EAAO/I,GACvC,MAAM0I,EAAsBK,EAAML,oBAClC,IAAK,IAAIpE,EAAI,EAAGO,EAAK6D,EAAoB7E,OAAQS,EAAIO,EAAIP,GAAK,EACxD0E,MAAMC,QAAQP,EAAoBpE,EAAI,IACxCtE,EAAQ0I,EAAoBpE,IAAIU,MAC9BhF,EACA0I,EAAoBpE,EAAI,IAG1BtE,EAAQ0I,EAAoBpE,IAAMoE,EAAoBpE,EAAI,EAGhE,C,+HCxdA,MAAM4E,UAAsB,IAO1B,WAAA7L,CAAY8L,EAAWC,EAAWC,EAAYC,GAC5C/L,QAMAC,KAAK2L,UAAYA,EAOjB3L,KAAK4L,UAAYA,EAMjB5L,KAAK8L,WAAaA,EAMlB9L,KAAK+L,aAAe,EAOpB/L,KAAK6L,WAAaA,EAMlB7L,KAAKgM,2BAA6B,KAMlChM,KAAKiM,2BAA6B,KAMlCjM,KAAKkM,mBAAqB,KAM1BlM,KAAKmM,aAAe,GAMpBnM,KAAK+B,YAAc,GAMnB/B,KAAKoM,eAAiB,GAMtBpM,KAAKqM,yBAA2B,GAMhCrM,KAAKsM,MAA8D,CAAG,CACxE,CAOA,eAAAC,CAAgBC,GACd,MAAMV,EAAa9L,KAAK8L,WACxB,OAAqB,GAAdA,EACHU,EACAA,EAAUhL,KAAI,SAAUiL,GACtB,OAAOA,EAAOX,CAChB,GACN,CAQA,0BAAAY,CAA2BC,EAAiBC,GAC1C,MAAMC,EAAS7M,KAAK8M,uBACdC,EAAW/M,KAAKoM,eAChBrK,EAAc/B,KAAK+B,YACzB,IAAIiL,EAAQjL,EAAYsE,OACxB,IAAK,IAAIS,EAAI,EAAGO,EAAKsF,EAAgBtG,OAAQS,EAAIO,EAAIP,GAAK8F,EACxDG,EAAS,GAAKJ,EAAgB7F,GAC9BiG,EAAS,GAAKJ,EAAgB7F,EAAI,IAC9B,QAAmB+F,EAAQE,KAC7BhL,EAAYiL,KAAWD,EAAS,GAChChL,EAAYiL,KAAWD,EAAS,IAGpC,OAAOC,CACT,CAYA,yBAAAC,CACEN,EACAO,EACAC,EACAP,EACAQ,EACAC,GAEA,MAAMtL,EAAc/B,KAAK+B,YACzB,IAAIiL,EAAQjL,EAAYsE,OACxB,MAAMwG,EAAS7M,KAAK8M,uBAChBO,IACFH,GAAUN,GAEZ,IAAIU,EAAaX,EAAgBO,GAC7BK,EAAaZ,EAAgBO,EAAS,GAC1C,MAAMM,EAAYxN,KAAKoM,eACvB,IAEItF,EAAG2G,EAASC,EAFZC,GAAU,EAGd,IAAK7G,EAAIoG,EAASN,EAAQ9F,EAAIqG,EAAKrG,GAAK8F,EACtCY,EAAU,GAAKb,EAAgB7F,GAC/B0G,EAAU,GAAKb,EAAgB7F,EAAI,GACnC4G,GAAU,QAAuBb,EAAQW,GACrCE,IAAYD,GACVE,IACF5L,EAAYiL,KAAWM,EACvBvL,EAAYiL,KAAWO,EACvBI,GAAU,GAEZ5L,EAAYiL,KAAWQ,EAAU,GACjCzL,EAAYiL,KAAWQ,EAAU,IACxBE,IAAY,IAAaE,cAClC7L,EAAYiL,KAAWQ,EAAU,GACjCzL,EAAYiL,KAAWQ,EAAU,GACjCG,GAAU,GAEVA,GAAU,EAEZL,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBC,EAAUC,EAQZ,OAJKN,GAAUO,GAAY7G,IAAMoG,EAASN,KACxC7K,EAAYiL,KAAWM,EACvBvL,EAAYiL,KAAWO,GAElBP,CACT,CAUA,sBAAAa,CAAuBlB,EAAiBO,EAAQY,EAAMlB,EAAQmB,GAC5D,IAAK,IAAIjH,EAAI,EAAGO,EAAKyG,EAAKzH,OAAQS,EAAIO,IAAMP,EAAG,CAC7C,MAAMqG,EAAMW,EAAKhH,GACXkH,EAAahO,KAAKiN,0BACtBN,EACAO,EACAC,EACAP,GACA,GACA,GAEFmB,EAAY9D,KAAK+D,GACjBd,EAASC,CACX,CACA,OAAOD,CACT,CAQA,UAAAnK,CAAWC,EAAUC,EAASC,EAAUC,GACtCnD,KAAKiO,cAAcjL,EAAUC,GAE7B,MAAMZ,EAAOW,EAASkL,UAChBtB,EAAS5J,EAASmL,YAClBC,EAAepO,KAAK+B,YAAYsE,OAEtC,IAAIsG,EAAiBqB,EAAYD,EAAaM,EAC1CnB,EAEJ,OAAQ7K,GACN,IAAK,eACHsK,EAC8D,EAE1D2B,6BACJD,EAAe,GACf,MAAME,EACwD,EAE1DC,WACJtB,EAAS,EACT,IAAK,IAAIpG,EAAI,EAAGO,EAAKkH,EAAMlI,OAAQS,EAAIO,IAAMP,EAAG,CAC9C,MAAM2H,EAAS,GACfvB,EAASlN,KAAK6N,uBACZlB,EACAO,EACAqB,EAAMzH,GACN8F,EACA6B,GAEFJ,EAAapE,KAAKwE,EACpB,CACAzO,KAAKmM,aAAalC,KAAK,CACrB,KAAkByE,OAClBN,EACAC,EACArL,EACAE,EACA,OAEFlD,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkByE,OAClBN,EACAC,EACArL,EACAG,GAAwBD,EACxB,OAEF,MACF,IAAK,UACL,IAAK,kBACH6K,EAAc,GACdpB,EACU,WAARtK,EAC2D,EAErDiM,6BACFtL,EAAS2L,qBACfzB,EAASlN,KAAK6N,uBACZlB,EACA,EACuG,EAErGiC,UACFhC,EACAmB,GAEF/N,KAAKmM,aAAalC,KAAK,CACrB,KAAkByE,OAClBN,EACAL,EACA/K,EACAE,EACA,OAEFlD,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkByE,OAClBN,EACAL,EACA/K,EACAG,GAAwBD,EACxB,OAEF,MACF,IAAK,aACL,IAAK,SACHyJ,EAAkB3J,EAAS2L,qBAC3BX,EAAahO,KAAKiN,0BAChBN,EACA,EACAA,EAAgBtG,OAChBuG,GACA,GACA,GAEF5M,KAAKmM,aAAalC,KAAK,CACrB,KAAkByE,OAClBN,EACAJ,EACAhL,EACAE,EACA,OAEFlD,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkByE,OAClBN,EACAJ,EACAhL,EACAG,GAAwBD,EACxB,OAEF,MACF,IAAK,aACHyJ,EAAkB3J,EAAS2L,qBAC3BX,EAAahO,KAAK0M,2BAA2BC,EAAiBC,GAE1DoB,EAAaI,IACfpO,KAAKmM,aAAalC,KAAK,CACrB,KAAkByE,OAClBN,EACAJ,EACAhL,EACAE,EACA,OAEFlD,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkByE,OAClBN,EACAJ,EACAhL,EACAG,GAAwBD,EACxB,QAGJ,MACF,IAAK,QACHyJ,EAAkB3J,EAAS2L,qBAC3B3O,KAAK+B,YAAYkI,KAAK0C,EAAgB,GAAIA,EAAgB,IAC1DqB,EAAahO,KAAK+B,YAAYsE,OAE9BrG,KAAKmM,aAAalC,KAAK,CACrB,KAAkByE,OAClBN,EACAJ,EACAhL,EACAE,IAEFlD,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkByE,OAClBN,EACAJ,EACAhL,EACAG,GAAwBD,IAE1B,MACF,SAEFlD,KAAK6O,YAAY5L,EACnB,CAOA,aAAAgL,CAAcjL,EAAUC,GACtBjD,KAAKgM,2BAA6B,CAChC,KAAkB8C,eAClB7L,EACA,EACAD,GAEFhD,KAAKmM,aAAalC,KAAKjK,KAAKgM,4BAC5BhM,KAAKiM,2BAA6B,CAChC,KAAkB6C,eAClB7L,EACA,EACAD,GAEFhD,KAAKqM,yBAAyBpC,KAAKjK,KAAKiM,2BAC1C,CAKA,MAAA8C,GACE,MAAO,CACL5C,aAAcnM,KAAKmM,aACnBE,yBAA0BrM,KAAKqM,yBAC/BtK,YAAa/B,KAAK+B,YAEtB,CAKA,+BAAAiN,GACE,MAAM3C,EAA2BrM,KAAKqM,yBAItC,IAAIvF,EAFJuF,EAAyB4C,UAGzB,MAAMC,EAAI7C,EAAyBhG,OACnC,IAAI8I,EACA9M,EACA+M,GAAS,EACb,IAAKtI,EAAI,EAAGA,EAAIoI,IAAKpI,EACnBqI,EAAc9C,EAAyBvF,GACvCzE,EAA0D8M,EAAY,GAClE9M,GAAQ,KAAkBgN,aAC5BD,EAAQtI,EACCzE,GAAQ,KAAkByM,iBACnCK,EAAY,GAAKrI,GACjB,QAAgB9G,KAAKqM,yBAA0B+C,EAAOtI,GACtDsI,GAAS,EAGf,CAMA,kBAAA5K,CAAmBC,EAAWC,GAC5B,MAAM4H,EAAQtM,KAAKsM,MACnB,GAAI7H,EAAW,CACb,MAAM6K,EAAiB7K,EAAU8K,WACjCjD,EAAM7H,WAAY,OAChB6K,GAAkC,KAEtC,MACEhD,EAAM7H,eAAYiD,EAEpB,GAAIhD,EAAa,CACf,MAAM8K,EAAmB9K,EAAY6K,WACrCjD,EAAM5H,aAAc,OAClB8K,GAAsC,MAExC,MAAMC,EAAqB/K,EAAYgL,aACvCpD,EAAMqD,aACmBjI,IAAvB+H,EAAmCA,EAAqB,KAC1D,MAAMG,EAAsBlL,EAAYmL,cACxCvD,EAAMwD,SAAWF,EACbA,EAAoB3N,QACpB,KACJ,MAAM8N,EAA4BrL,EAAYsL,oBAC9C1D,EAAM2D,eAAiBF,GAEnB,KACJ,MAAMG,EAAsBxL,EAAYyL,cACxC7D,EAAM8D,cACoB1I,IAAxBwI,EACIA,EACA,KACN,MAAMG,EAAmB3L,EAAY4L,WACrChE,EAAMtC,eACiBtC,IAArB2I,EAAiCA,EAAmB,KACtD,MAAME,EAAwB7L,EAAY8L,gBAC1ClE,EAAMmE,gBACsB/I,IAA1B6I,EACIA,EACA,KAEFjE,EAAMtC,UAAYhK,KAAK+L,eACzB/L,KAAK+L,aAAeO,EAAMtC,UAE1BhK,KAAKkM,mBAAqB,KAE9B,MACEI,EAAM5H,iBAAcgD,EACpB4E,EAAMqD,aAAUjI,EAChB4E,EAAMwD,SAAW,KACjBxD,EAAM2D,oBAAiBvI,EACvB4E,EAAM8D,cAAW1I,EACjB4E,EAAMtC,eAAYtC,EAClB4E,EAAMmE,gBAAa/I,CAEvB,CAMA,UAAAgJ,CAAWpE,GACT,MAAM7H,EAAY6H,EAAM7H,UAElBkM,EAAkB,CAAC,KAAkBC,eAAgBnM,GAK3D,MAJyB,kBAAdA,GAETkM,EAAgB1G,MAAK,GAEhB0G,CACT,CAKA,WAAAE,CAAYvE,GACVtM,KAAKmM,aAAalC,KAAKjK,KAAK8Q,aAAaxE,GAC3C,CAMA,YAAAwE,CAAaxE,GACX,MAAO,CACL,KAAkByE,iBAClBzE,EAAM5H,YACN4H,EAAMtC,UAAYhK,KAAK8L,WACvBQ,EAAMqD,QACNrD,EAAM8D,SACN9D,EAAMmE,WACNzQ,KAAKuM,gBAAgBD,EAAMwD,UAC3BxD,EAAM2D,eAAiBjQ,KAAK8L,WAEhC,CAMA,eAAAkF,CAAgB1E,EAAOoE,GACrB,MAAMjM,EAAY6H,EAAM7H,UACC,kBAAdA,GAA0B6H,EAAM2E,kBAAoBxM,SAC3CiD,IAAdjD,GACFzE,KAAKmM,aAAalC,KAAKyG,EAAWQ,KAAKlR,KAAMsM,IAE/CA,EAAM2E,iBAAmBxM,EAE7B,CAMA,iBAAA0M,CAAkB7E,EAAOuE,GACvB,MAAMnM,EAAc4H,EAAM5H,YACpBiL,EAAUrD,EAAMqD,QAChBG,EAAWxD,EAAMwD,SACjBG,EAAiB3D,EAAM2D,eACvBG,EAAW9D,EAAM8D,SACjBpG,EAAYsC,EAAMtC,UAClByG,EAAanE,EAAMmE,YAEvBnE,EAAM8E,oBAAsB1M,GAC5B4H,EAAM+E,gBAAkB1B,GACvBG,GAAYxD,EAAMgF,mBAChB,QAAOhF,EAAMgF,gBAAiBxB,IACjCxD,EAAMiF,uBAAyBtB,GAC/B3D,EAAMkF,iBAAmBpB,GACzB9D,EAAMmF,kBAAoBzH,GAC1BsC,EAAMoF,mBAAqBjB,UAEP/I,IAAhBhD,GACFmM,EAAYK,KAAKlR,KAAMsM,GAEzBA,EAAM8E,mBAAqB1M,EAC3B4H,EAAM+E,eAAiB1B,EACvBrD,EAAMgF,gBAAkBxB,EACxBxD,EAAMiF,sBAAwBtB,EAC9B3D,EAAMkF,gBAAkBpB,EACxB9D,EAAMmF,iBAAmBzH,EACzBsC,EAAMoF,kBAAoBjB,EAE9B,CAKA,WAAA5B,CAAY5L,GACVjD,KAAKgM,2BAA2B,GAAKhM,KAAKmM,aAAa9F,OACvDrG,KAAKgM,2BAA6B,KAClChM,KAAKiM,2BAA2B,GAAKjM,KAAKqM,yBAAyBhG,OACnErG,KAAKiM,2BAA6B,KAClC,MAAM0F,EAAyB,CAAC,KAAkBtC,aAAcpM,GAChEjD,KAAKmM,aAAalC,KAAK0H,GACvB3R,KAAKqM,yBAAyBpC,KAAK0H,EACrC,CASA,oBAAA7E,GACE,IAAK9M,KAAKkM,qBACRlM,KAAKkM,oBAAqB,QAAMlM,KAAK4L,WACjC5L,KAAK+L,aAAe,GAAG,CACzB,MAAM1K,EAASrB,KAAK6L,YAAc7L,KAAK+L,aAAe,GAAM,GAC5D,QAAO/L,KAAKkM,mBAAoB7K,EAAOrB,KAAKkM,mBAC9C,CAEF,OAAOlM,KAAKkM,kBACd,EAGF,S,6DCpoBA,MAAM0F,UAA2B,IAO/B,WAAA/R,CAAY8L,EAAWC,EAAWC,EAAYC,GAC5C/L,MAAM4L,EAAWC,EAAWC,EAAYC,GAMxC9L,KAAK6R,mBAAqB,KAM1B7R,KAAK8R,OAAS,KAMd9R,KAAK+R,sBAAmBrK,EAMxB1H,KAAKgS,cAAWtK,EAMhB1H,KAAKiS,cAAWvK,EAMhB1H,KAAKkS,aAAUxK,EAMf1H,KAAKmS,cAAWzK,EAMhB1H,KAAKoS,cAAW1K,EAMhB1H,KAAKqS,cAAW3K,EAMhB1H,KAAKsS,qBAAkB5K,EAMvB1H,KAAKuS,eAAY7K,EAMjB1H,KAAKwS,YAAS9K,EAMd1H,KAAKyS,YAAS/K,EAMd1H,KAAK0S,oBAAiBhL,EAOtB1H,KAAK2S,6BAA0BjL,CACjC,CAMA,SAAAvD,CAAUC,EAAenB,GACvB,IAAKjD,KAAK8R,OACR,OAEF9R,KAAKiO,cAAc7J,EAAenB,GAClC,MAAM0J,EAAkBvI,EAAcuK,qBAChC/B,EAASxI,EAAc+J,YACvByE,EAAU5S,KAAK+B,YAAYsE,OAC3B2G,EAAQhN,KAAK0M,2BAA2BC,EAAiBC,GAC/D5M,KAAKmM,aAAalC,KAAK,CACrB,KAAkB4I,WAClBD,EACA5F,EACAhN,KAAK8R,OAEL9R,KAAKgS,SAAWhS,KAAK+R,iBACrB/R,KAAKiS,SAAWjS,KAAK+R,iBACrB7Q,KAAK4R,KAAK9S,KAAKkS,QAAUlS,KAAK+R,kBAC9B/R,KAAKmS,SACLnS,KAAKoS,SAAWpS,KAAK+R,iBACrB/R,KAAKqS,SAAWrS,KAAK+R,iBACrB/R,KAAKsS,gBACLtS,KAAKuS,UACL,CACGvS,KAAKwS,OAAO,GAAKxS,KAAK8L,WAAc9L,KAAK+R,iBACzC/R,KAAKwS,OAAO,GAAKxS,KAAK8L,WAAc9L,KAAK+R,kBAE5C7Q,KAAK4R,KAAK9S,KAAKyS,OAASzS,KAAK+R,kBAC7B/R,KAAK0S,eACL1S,KAAK2S,0BAEP3S,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB4I,WAClBD,EACA5F,EACAhN,KAAK6R,mBAEL7R,KAAKgS,SACLhS,KAAKiS,SACLjS,KAAKkS,QACL,EACAlS,KAAKoS,SACLpS,KAAKqS,SACLrS,KAAKsS,gBACLtS,KAAKuS,UACLvS,KAAKwS,OACLxS,KAAKyS,OACLzS,KAAK0S,eACL1S,KAAK2S,0BAEP3S,KAAK6O,YAAY5L,EACnB,CAMA,cAAAc,CAAeC,EAAoBf,GACjC,IAAKjD,KAAK8R,OACR,OAEF9R,KAAKiO,cAAcjK,EAAoBf,GACvC,MAAM0J,EAAkB3I,EAAmB2K,qBACrC/B,EAAS5I,EAAmBmK,YAC5ByE,EAAU5S,KAAK+B,YAAYsE,OAC3B2G,EAAQhN,KAAK0M,2BAA2BC,EAAiBC,GAC/D5M,KAAKmM,aAAalC,KAAK,CACrB,KAAkB4I,WAClBD,EACA5F,EACAhN,KAAK8R,OAEL9R,KAAKgS,SAAWhS,KAAK+R,iBACrB/R,KAAKiS,SAAWjS,KAAK+R,iBACrB7Q,KAAK4R,KAAK9S,KAAKkS,QAAUlS,KAAK+R,kBAC9B/R,KAAKmS,SACLnS,KAAKoS,SAAWpS,KAAK+R,iBACrB/R,KAAKqS,SAAWrS,KAAK+R,iBACrB/R,KAAKsS,gBACLtS,KAAKuS,UACL,CACGvS,KAAKwS,OAAO,GAAKxS,KAAK8L,WAAc9L,KAAK+R,iBACzC/R,KAAKwS,OAAO,GAAKxS,KAAK8L,WAAc9L,KAAK+R,kBAE5C7Q,KAAK4R,KAAK9S,KAAKyS,OAASzS,KAAK+R,kBAC7B/R,KAAK0S,eACL1S,KAAK2S,0BAEP3S,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB4I,WAClBD,EACA5F,EACAhN,KAAK6R,mBAEL7R,KAAKgS,SACLhS,KAAKiS,SACLjS,KAAKkS,QACL,EACAlS,KAAKoS,SACLpS,KAAKqS,SACLrS,KAAKsS,gBACLtS,KAAKuS,UACLvS,KAAKwS,OACLxS,KAAKyS,OACLzS,KAAK0S,eACL1S,KAAK2S,0BAEP3S,KAAK6O,YAAY5L,EACnB,CAKA,MAAA8L,GAgBE,OAfA/O,KAAKgP,kCAELhP,KAAKgS,cAAWtK,EAChB1H,KAAKiS,cAAWvK,EAChB1H,KAAK6R,mBAAqB,KAC1B7R,KAAK8R,OAAS,KACd9R,KAAK+R,sBAAmBrK,EACxB1H,KAAKkS,aAAUxK,EACf1H,KAAKwS,YAAS9K,EACd1H,KAAKmS,cAAWzK,EAChB1H,KAAKoS,cAAW1K,EAChB1H,KAAKqS,cAAW3K,EAChB1H,KAAKsS,qBAAkB5K,EACvB1H,KAAKuS,eAAY7K,EACjB1H,KAAKyS,YAAS/K,EACP3H,MAAMgP,QACf,CAMA,aAAApK,CAAcC,EAAYmO,GACxB,MAAMC,EAASpO,EAAWqO,YACpB/M,EAAOtB,EAAWsO,UAClBC,EAASvO,EAAWwO,YAC1BpT,KAAK+R,iBAAmBnN,EAAWyO,cAAcrT,KAAK8L,YACtD9L,KAAKgS,SAAWgB,EAAO,GACvBhT,KAAKiS,SAAWe,EAAO,GACvBhT,KAAK6R,mBAAqBjN,EAAW0O,uBACrCtT,KAAK8R,OAASlN,EAAW2O,SAASvT,KAAK8L,YACvC9L,KAAKkS,QAAUhM,EAAK,GACpBlG,KAAKmS,SAAWvN,EAAW4O,aAC3BxT,KAAKoS,SAAWe,EAAO,GACvBnT,KAAKqS,SAAWc,EAAO,GACvBnT,KAAKsS,gBAAkB1N,EAAW6O,oBAClCzT,KAAKuS,UAAY3N,EAAW8O,cAC5B1T,KAAKwS,OAAS5N,EAAW+O,gBACzB3T,KAAKyS,OAASvM,EAAK,GACnBlG,KAAK0S,eAAiB9N,EAAWgP,mBACjC5T,KAAK2S,wBAA0BI,CACjC,EAGF,U,eCpQA,MAAMc,UAAgC,IAOpC,WAAAhU,CAAY8L,EAAWC,EAAWC,EAAYC,GAC5C/L,MAAM4L,EAAWC,EAAWC,EAAYC,EAC1C,CAUA,oBAAAgI,CAAqBnH,EAAiBO,EAAQC,EAAKP,GACjD,MAAMgG,EAAU5S,KAAK+B,YAAYsE,OAC3B2G,EAAQhN,KAAKiN,0BACjBN,EACAO,EACAC,EACAP,GACA,GACA,GAEImH,EAA0B,CAC9B,KAAkBC,gBAClBpB,EACA5F,GAIF,OAFAhN,KAAKmM,aAAalC,KAAK8J,GACvB/T,KAAKqM,yBAAyBpC,KAAK8J,GAC5B5G,CACT,CAMA,cAAAxJ,CAAeC,EAAoBX,GACjC,MAAMqJ,EAAQtM,KAAKsM,MACb5H,EAAc4H,EAAM5H,YACpBsF,EAAYsC,EAAMtC,UACxB,QAAoBtC,IAAhBhD,QAA2CgD,IAAdsC,EAC/B,OAEFhK,KAAKmR,kBAAkB7E,EAAOtM,KAAK6Q,aACnC7Q,KAAKiO,cAAcrK,EAAoBX,GACvCjD,KAAKqM,yBAAyBpC,KAC5B,CACE,KAAkB8G,iBAClBzE,EAAM5H,YACN4H,EAAMtC,UACNsC,EAAMqD,QACNrD,EAAM8D,SACN9D,EAAMmE,WACN,KACA,MAEF,MAEF,MAAM9D,EAAkB/I,EAAmB+K,qBACrC/B,EAAShJ,EAAmBuK,YAClCnO,KAAK8T,qBACHnH,EACA,EACAA,EAAgBtG,OAChBuG,GAEF5M,KAAKqM,yBAAyBpC,KAAK,MACnCjK,KAAK6O,YAAY5L,EACnB,CAMA,mBAAAY,CAAoBC,EAAyBb,GAC3C,MAAMqJ,EAAQtM,KAAKsM,MACb5H,EAAc4H,EAAM5H,YACpBsF,EAAYsC,EAAMtC,UACxB,QAAoBtC,IAAhBhD,QAA2CgD,IAAdsC,EAC/B,OAEFhK,KAAKmR,kBAAkB7E,EAAOtM,KAAK6Q,aACnC7Q,KAAKiO,cAAcnK,EAAyBb,GAC5CjD,KAAKqM,yBAAyBpC,KAC5B,CACE,KAAkB8G,iBAClBzE,EAAM5H,YACN4H,EAAMtC,UACNsC,EAAMqD,QACNrD,EAAM8D,SACN9D,EAAMmE,WACN,KACA,MAEF,MAEF,MAAM3C,EAAOhK,EAAwB8K,UAC/BjC,EAAkB7I,EAAwB6K,qBAC1C/B,EAAS9I,EAAwBqK,YACvC,IAAIjB,EAAS,EACb,IAAK,IAAIpG,EAAI,EAAGO,EAAKyG,EAAKzH,OAAQS,EAAIO,IAAMP,EAC1CoG,EAASlN,KAAK8T,qBACZnH,EACAO,EACuBY,EAAKhH,GAC5B8F,GAGJ5M,KAAKqM,yBAAyBpC,KAAK,MACnCjK,KAAK6O,YAAY5L,EACnB,CAKA,MAAA8L,GACE,MAAMzC,EAAQtM,KAAKsM,MASnB,YAPsB5E,GAApB4E,EAAM2H,YACN3H,EAAM2H,YAAcjU,KAAK+B,YAAYsE,QAErCrG,KAAKmM,aAAalC,KAAK,MAEzBjK,KAAKgP,kCACLhP,KAAKsM,MAAQ,KACNvM,MAAMgP,QACf,CAKA,WAAA8B,CAAYvE,QAEY5E,GAApB4E,EAAM2H,YACN3H,EAAM2H,YAAcjU,KAAK+B,YAAYsE,SAErCrG,KAAKmM,aAAalC,KAAK,MACvBqC,EAAM2H,WAAajU,KAAK+B,YAAYsE,QAEtCiG,EAAM2H,WAAa,EACnBlU,MAAM8Q,YAAYvE,GAClBtM,KAAKmM,aAAalC,KAAK,KACzB,EAGF,U,eCjJA,MAAMiK,UAA6B,IAOjC,WAAArU,CAAY8L,EAAWC,EAAWC,EAAYC,GAC5C/L,MAAM4L,EAAWC,EAAWC,EAAYC,EAC1C,CAUA,qBAAAqI,CAAsBxH,EAAiBO,EAAQY,EAAMlB,GACnD,MAAMN,EAAQtM,KAAKsM,MACb8H,OAA2B1M,IAApB4E,EAAM7H,UACb4P,OAA+B3M,IAAtB4E,EAAM5H,YACf4P,EAAUxG,EAAKzH,OACrBrG,KAAKmM,aAAalC,KAAK,MACvBjK,KAAKqM,yBAAyBpC,KAAK,MACnC,IAAK,IAAInD,EAAI,EAAGA,EAAIwN,IAAWxN,EAAG,CAChC,MAAMqG,EAAMW,EAAKhH,GACX8L,EAAU5S,KAAK+B,YAAYsE,OAC3B2G,EAAQhN,KAAKiN,0BACjBN,EACAO,EACAC,EACAP,GACA,GACCyH,GAEGN,EAA0B,CAC9B,KAAkBC,gBAClBpB,EACA5F,GAEFhN,KAAKmM,aAAalC,KAAK8J,GACvB/T,KAAKqM,yBAAyBpC,KAAK8J,GAC/BM,IAGFrU,KAAKmM,aAAalC,KAAK,MACvBjK,KAAKqM,yBAAyBpC,KAAK,OAErCiD,EAASC,CACX,CASA,OARIiH,IACFpU,KAAKmM,aAAalC,KAAK,MACvBjK,KAAKqM,yBAAyBpC,KAAK,OAEjCoK,IACFrU,KAAKmM,aAAalC,KAAK,MACvBjK,KAAKqM,yBAAyBpC,KAAK,OAE9BiD,CACT,CAMA,UAAA5J,CAAWC,EAAgBN,GACzB,MAAMqJ,EAAQtM,KAAKsM,MACb7H,EAAY6H,EAAM7H,UAClBC,EAAc4H,EAAM5H,YAC1B,QAAkBgD,IAAdjD,QAA2CiD,IAAhBhD,EAC7B,OAEF1E,KAAKuU,uBACLvU,KAAKiO,cAAc1K,EAAgBN,QACXyE,IAApB4E,EAAM7H,WACRzE,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB2G,eAClB,YAGsBlJ,IAAtB4E,EAAM5H,aACR1E,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB8G,iBAClBzE,EAAM5H,YACN4H,EAAMtC,UACNsC,EAAMqD,QACNrD,EAAM8D,SACN9D,EAAMmE,WACN,KACA,OAGJ,MAAM9D,EAAkBpJ,EAAeoL,qBACjC/B,EAASrJ,EAAe4K,YACxByE,EAAU5S,KAAK+B,YAAYsE,OACjCrG,KAAKiN,0BACHN,EACA,EACAA,EAAgBtG,OAChBuG,GACA,GACA,GAEF,MAAM4H,EAAoB,CAAC,KAAkBC,OAAQ7B,GACrD5S,KAAKmM,aAAalC,KAAK,KAAsBuK,GAC7CxU,KAAKqM,yBAAyBpC,KAAK,KAAsBuK,QACjC9M,IAApB4E,EAAM7H,YACRzE,KAAKmM,aAAalC,KAAK,MACvBjK,KAAKqM,yBAAyBpC,KAAK,YAEXvC,IAAtB4E,EAAM5H,cACR1E,KAAKmM,aAAalC,KAAK,MACvBjK,KAAKqM,yBAAyBpC,KAAK,OAErCjK,KAAK6O,YAAY5L,EACnB,CAMA,WAAAoB,CAAYC,EAAiBrB,GAC3B,MAAMqJ,EAAQtM,KAAKsM,MACb7H,EAAY6H,EAAM7H,UAClBC,EAAc4H,EAAM5H,YAC1B,QAAkBgD,IAAdjD,QAA2CiD,IAAhBhD,EAC7B,OAEF1E,KAAKuU,uBACLvU,KAAKiO,cAAc3J,EAAiBrB,QACZyE,IAApB4E,EAAM7H,WACRzE,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB2G,eAClB,YAGsBlJ,IAAtB4E,EAAM5H,aACR1E,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB8G,iBAClBzE,EAAM5H,YACN4H,EAAMtC,UACNsC,EAAMqD,QACNrD,EAAM8D,SACN9D,EAAMmE,WACN,KACA,OAGJ,MAAM3C,EAAOxJ,EAAgBsK,UACvBjC,EAAkBrI,EAAgBgK,6BAClC1B,EAAStI,EAAgB6J,YAC/BnO,KAAKmU,sBACHxH,EACA,EAC6B,EAC7BC,GAEF5M,KAAK6O,YAAY5L,EACnB,CAMA,gBAAAgB,CAAiBC,EAAsBjB,GACrC,MAAMqJ,EAAQtM,KAAKsM,MACb7H,EAAY6H,EAAM7H,UAClBC,EAAc4H,EAAM5H,YAC1B,QAAkBgD,IAAdjD,QAA2CiD,IAAhBhD,EAC7B,OAEF1E,KAAKuU,uBACLvU,KAAKiO,cAAc/J,EAAsBjB,QACjByE,IAApB4E,EAAM7H,WACRzE,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB2G,eAClB,YAGsBlJ,IAAtB4E,EAAM5H,aACR1E,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB8G,iBAClBzE,EAAM5H,YACN4H,EAAMtC,UACNsC,EAAMqD,QACNrD,EAAM8D,SACN9D,EAAMmE,WACN,KACA,OAGJ,MAAMlC,EAAQrK,EAAqBsK,WAC7B7B,EAAkBzI,EAAqBoK,6BACvC1B,EAAS1I,EAAqBiK,YACpC,IAAIjB,EAAS,EACb,IAAK,IAAIpG,EAAI,EAAGO,EAAKkH,EAAMlI,OAAQS,EAAIO,IAAMP,EAC3CoG,EAASlN,KAAKmU,sBACZxH,EACAO,EACAqB,EAAMzH,GACN8F,GAGJ5M,KAAK6O,YAAY5L,EACnB,CAKA,MAAA8L,GACE/O,KAAKgP,kCACLhP,KAAKsM,MAAQ,KAKb,MAAMX,EAAY3L,KAAK2L,UACvB,GAAkB,IAAdA,EAAiB,CACnB,MAAM5J,EAAc/B,KAAK+B,YACzB,IAAK,IAAI+E,EAAI,EAAGO,EAAKtF,EAAYsE,OAAQS,EAAIO,IAAMP,EACjD/E,EAAY+E,IAAK,QAAK/E,EAAY+E,GAAI6E,EAE1C,CACA,OAAO5L,MAAMgP,QACf,CAKA,oBAAAwF,GACE,MAAMjI,EAAQtM,KAAKsM,MACb7H,EAAY6H,EAAM7H,eACNiD,IAAdjD,GACFzE,KAAKgR,gBAAgB1E,EAAOtM,KAAK0Q,iBAEThJ,IAAtB4E,EAAM5H,aACR1E,KAAKmR,kBAAkB7E,EAAOtM,KAAK6Q,YAEvC,EAGF,U,eCvPA,MAAM6D,EAAqB,CACzB,OAAUC,EACV,QAAWC,EAAA,EACX,MAASC,EACT,WAAcC,EACd,QAAWH,EACX,KAAQI,EAAA,GAGV,MAAMC,EAOJ,WAAAnV,CAAY8L,EAAWC,EAAWC,EAAYC,GAK5C9L,KAAKiV,WAAatJ,EAMlB3L,KAAKkV,WAAatJ,EAMlB5L,KAAKmV,YAAcrJ,EAMnB9L,KAAKoV,YAAcvJ,EAMnB7L,KAAKqV,kBAAoB,CAAC,CAC5B,CAKA,MAAAtG,GACE,MAAMuG,EAAsB,CAAC,EAC7B,IAAK,MAAMC,KAAQvV,KAAKqV,kBAAmB,CACzCC,EAAoBC,GAAQD,EAAoBC,IAAS,CAAC,EAC1D,MAAMC,EAAWxV,KAAKqV,kBAAkBE,GACxC,IAAK,MAAME,KAAcD,EAAU,CACjC,MAAME,EAAqBF,EAASC,GAAY1G,SAChDuG,EAAoBC,GAAME,GAAcC,CAC1C,CACF,CACA,OAAOJ,CACT,CAOA,UAAAK,CAAWC,EAAQC,GACjB,MAAMC,OAAuBpO,IAAXkO,EAAuBA,EAAOG,WAAa,IAC7D,IAAIC,EAAUhW,KAAKqV,kBAAkBS,QACrBpO,IAAZsO,IACFA,EAAU,CAAC,EACXhW,KAAKqV,kBAAkBS,GAAaE,GAEtC,IAAIC,EAASD,EAAQH,GACrB,QAAenO,IAAXuO,EAAsB,CACxB,MAAMC,EAAcxB,EAAmBmB,GACvCI,EAAS,IAAIC,EACXlW,KAAKiV,WACLjV,KAAKkV,WACLlV,KAAKoV,YACLpV,KAAKmV,aAEPa,EAAQH,GAAeI,CACzB,CACA,OAAOA,CACT,EAGF,S,yIC7CA,MAAME,GAAY,UAGZC,EAAK,GAELC,EAAK,GAELC,EAAK,GAELC,EAAK,GAMX,SAASC,EAAgBC,GACvB,OAAOA,EAAuB,GAAGC,YACnC,CAEA,MAAMC,EAAW,IAAIC,OAEnB,IACEC,OAAOC,aAAa,MAAW,IAAMD,OAAOC,aAAa,MACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,QAAW,IAAMD,OAAOC,aAAa,QAC3D,KASF,SAASC,EAAoBzQ,EAAM0Q,GAMjC,MALc,UAAVA,EACFA,EAAQL,EAASM,KAAK3Q,GAAQ,QAAU,OACrB,QAAV0Q,IACTA,EAAQL,EAASM,KAAK3Q,GAAQ,OAAS,SAElC,IAAW0Q,EACpB,CAQA,SAASE,EAAiBC,EAAKC,EAAMtQ,GAKnC,OAJIA,EAAI,GACNqQ,EAAIlN,KAAK,KAAM,IAEjBkN,EAAIlN,KAAKmN,EAAM,IACRD,CACT,CAEA,MAAME,EAOJ,WAAAxX,CAAYgM,EAAYC,EAAYwL,EAAUnL,GAK5CnM,KAAKsX,SAAWA,EAMhBtX,KAAK8L,WAAaA,EAOlB9L,KAAK6L,WAAaA,EAMlB7L,KAAKuX,WAMLvX,KAAKmM,aAAeA,EAAaA,aAMjCnM,KAAK+B,YAAcoK,EAAapK,YAMhC/B,KAAKwX,iBAAmB,CAAC,EAMzBxX,KAAKyX,oBAAqB,UAM1BzX,KAAKqM,yBAA2BF,EAAaE,yBAM7CrM,KAAK0X,kBAAoB,KAMzB1X,KAAK2X,cAAgB,EAKrB3X,KAAK4X,WAAazL,EAAayL,YAAc,CAAC,EAK9C5X,KAAK6X,aAAe1L,EAAa0L,cAAgB,CAAC,EAKlD7X,KAAK8X,WAAa3L,EAAa2L,YAAc,CAAC,EAM9C9X,KAAK+X,QAAU,CAAC,EAMhB/X,KAAKgY,QAAU,CAAC,CAClB,CASA,WAAAC,CAAY3R,EAAM4R,EAASC,EAASC,GAClC,MAAMpQ,EAAM1B,EAAO4R,EAAUC,EAAUC,EACvC,GAAIpY,KAAKgY,QAAQhQ,GACf,OAAOhI,KAAKgY,QAAQhQ,GAEtB,MAAMqQ,EAAcD,EAAYpY,KAAK6X,aAAaO,GAAa,KACzDE,EAAYH,EAAUnY,KAAK4X,WAAWO,GAAW,KACjDI,EAAYvY,KAAK8X,WAAWI,GAC5BpM,EAAa9L,KAAK8L,WAClBhB,EAAQ,CACZyN,EAAUzN,MAAM,GAAKgB,EACrByM,EAAUzN,MAAM,GAAKgB,GAEjB0M,EAAchN,MAAMC,QAAQnF,GAC5B0Q,EAAQuB,EAAUE,QACpB,IAAWF,EAAUE,SACrB1B,EACEvL,MAAMC,QAAQnF,GAAQA,EAAK,GAAKA,EAChCiS,EAAUG,WAAa,MAEvBC,EACJP,GAAaC,EAAYrO,UAAYqO,EAAYrO,UAAY,EAEzDJ,EAAS4O,EACXlS,EACAA,EAAKmB,MAAM,MAAM6B,OAAO4N,EAAkB,KAExC,MAAC7V,EAAK,OAAEE,EAAM,OAAEsI,EAAM,QAAEC,EAAO,WAAEC,IAAc,QACnDwO,EACA3O,GAEIgP,EAAcvX,EAAQsX,EACtBzN,EAAsB,GAEtBR,GAAKkO,EAAc,GAAK9N,EAAM,GAC9BH,GAAKpJ,EAASoX,GAAe7N,EAAM,GAEnCS,EAAQ,CACZlK,MAAOqJ,EAAI,EAAIxJ,KAAK2X,MAAMnO,GAAKxJ,KAAK4R,KAAKpI,GACzCnJ,OAAQoJ,EAAI,EAAIzJ,KAAK2X,MAAMlO,GAAKzJ,KAAK4R,KAAKnI,GAC1CO,oBAAqBA,GAEP,GAAZJ,EAAM,IAAuB,GAAZA,EAAM,IACzBI,EAAoBjB,KAAK,QAASa,GAEhCsN,IACFlN,EAAoBjB,KAAK,cAAeoO,EAAY3T,aACpDwG,EAAoBjB,KAAK,YAAa0O,GACtCzN,EAAoBjB,KAAK,UAAWoO,EAAY1I,SAChDzE,EAAoBjB,KAAK,WAAYoO,EAAYjI,UACjDlF,EAAoBjB,KAAK,aAAcoO,EAAY5H,YACnDvF,EAAoBjB,KAAK,cAAe,CAACoO,EAAYvI,WACrD5E,EAAoBjB,KAAK,iBAAkBoO,EAAYpI,iBAErDkI,GACFjN,EAAoBjB,KAAK,YAAaqO,EAAU7T,WAElDyG,EAAoBjB,KAAK,eAAgB,UACzCiB,EAAoBjB,KAAK,YAAa,UACtC,MAAM6O,EAAY,GAAM9B,EACxB,IAAIpM,EAAIoM,EAAQ4B,EAAcE,EAAYH,EAC1C,MAAMI,EAAqB,GACrBC,EAAmB,GACzB,IAIIC,EAJA1Q,EAAa,EACb2Q,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAErB,IAAK,IAAItS,EAAI,EAAGO,EAAKuC,EAAOvD,OAAQS,EAAIO,EAAIP,GAAK,EAAG,CAClD,MAAMR,EAAOsD,EAAO9C,GACpB,GAAa,OAATR,EAAe,CACjB4S,GAAc3Q,EACdA,EAAa,EACbqC,EAAIoM,EAAQ4B,EAAcE,EAAYH,IACpCS,EACF,QACF,CACA,MAAM9R,EAAOsC,EAAO9C,EAAI,IAAMyR,EAAUjR,KACpCA,IAAS2R,IACPb,GACFW,EAAmB9O,KAAK,OAAQ3C,GAE9B6Q,GACFa,EAAiB/O,KAAK,OAAQ3C,GAEhC2R,EAAe3R,GAEjBiB,EAAarH,KAAKuI,IAAIlB,EAAYuB,EAAQqP,IAC1C,MAAME,EAAiB,CACrB/S,EACAsE,EACEkO,EAAYjP,EAAOsP,GACnBnC,GAASnN,EAAOsP,GAAoBpP,EAAWqP,IACjD,IAAOT,EAAcpQ,GAAc2Q,GAErCtO,GAAKf,EAAOsP,GACRf,GACFW,EAAmB9O,KAAK,aAAcoP,GAEpClB,GACFa,EAAiB/O,KAAK,WAAYoP,KAElCF,CACJ,CAIA,OAHA3N,MAAM8N,UAAUrP,KAAKzC,MAAM0D,EAAqB6N,GAChDvN,MAAM8N,UAAUrP,KAAKzC,MAAM0D,EAAqB8N,GAChDhZ,KAAKgY,QAAQhQ,GAAOuD,EACbA,CACT,CAWA,qBAAAgO,CACE/W,EACA4T,EACAC,EACAC,EACAC,EACA5F,EACA6I,GAEAhX,EAAQiX,YACRjX,EAAQkX,OAAOlS,MAAMhF,EAAS4T,GAC9B5T,EAAQmX,OAAOnS,MAAMhF,EAAS6T,GAC9B7T,EAAQmX,OAAOnS,MAAMhF,EAAS8T,GAC9B9T,EAAQmX,OAAOnS,MAAMhF,EAAS+T,GAC9B/T,EAAQmX,OAAOnS,MAAMhF,EAAS4T,GAC1BzF,IACF3Q,KAAKuX,WAAqC5G,EAAgB,GAC1D3Q,KAAK4Z,MAAMpX,IAETgX,IACFxZ,KAAK6Z,gBACHrX,EACwB,GAE1BA,EAAQ6R,SAEZ,CAsBA,gCAAAyF,CACEC,EACAC,EACAC,EACAC,EACA7Y,EACAE,EACA4Y,EACAC,EACA5P,EACAC,EACA4P,EACAvP,EACAwP,EACAvR,EACAwR,EACAtX,GAEAkX,GAAWrP,EAAM,GACjBsP,GAAWtP,EAAM,GACjB,IAAIF,EAAIqP,EAAUE,EACdtP,EAAIqP,EAAUE,EAElB,MAAM1P,EAAIrJ,EAAQmJ,EAAUuP,EAAaA,EAAavP,EAAUnJ,EAC1DsJ,EAAIpJ,EAASkJ,EAAUuP,EAAcA,EAAcvP,EAAUlJ,EAC7DiZ,EAAOzR,EAAQ,GAAK2B,EAAII,EAAM,GAAK/B,EAAQ,GAC3C0R,EAAO1R,EAAQ,GAAK4B,EAAIG,EAAM,GAAK/B,EAAQ,GAC3C2R,EAAO9P,EAAI7B,EAAQ,GACnB4R,EAAO9P,EAAI9B,EAAQ,GAazB,IAAIsB,EAqCJ,OAhDIkQ,GAA2B,IAAbF,KAChBjE,EAAG,GAAKsE,EACRnE,EAAG,GAAKmE,EACRtE,EAAG,GAAKuE,EACRtE,EAAG,GAAKsE,EACRtE,EAAG,GAAKqE,EAAOF,EACflE,EAAG,GAAKD,EAAG,GACXC,EAAG,GAAKqE,EAAOF,EACflE,EAAG,GAAKD,EAAG,IAII,IAAb+D,GACFhQ,GAAY,SACV,UACA4P,EACAC,EACA,EACA,EACAG,GACCJ,GACAC,IAGH,QAAe7P,EAAW+L,IAC1B,QAAe/L,EAAWgM,IAC1B,QAAehM,EAAWiM,IAC1B,QAAejM,EAAWkM,IAC1B,QACErV,KAAKC,IAAIiV,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACjCrV,KAAKC,IAAIiV,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACjCrV,KAAKuI,IAAI2M,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACjCrV,KAAKuI,IAAI2M,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACjCJ,KAGF,QACEjV,KAAKC,IAAIuZ,EAAMA,EAAOF,GACtBtZ,KAAKC,IAAIwZ,EAAMA,EAAOF,GACtBvZ,KAAKuI,IAAIiR,EAAMA,EAAOF,GACtBtZ,KAAKuI,IAAIkR,EAAMA,EAAOF,GACtBtE,GAGAmE,IACF1P,EAAI1J,KAAK0Z,MAAMhQ,GACfC,EAAI3J,KAAK0Z,MAAM/P,IAEV,CACLgQ,WAAYjQ,EACZkQ,WAAYjQ,EACZkQ,WAAYrQ,EACZsQ,WAAYrQ,EACZH,QAASA,EACTC,QAASA,EACTiM,aAAc,CACZuE,KAAM9E,EAAU,GAChB+E,KAAM/E,EAAU,GAChBgF,KAAMhF,EAAU,GAChBiF,KAAMjF,EAAU,GAChBkF,MAAOpY,GAETqY,gBAAiBjR,EACjBS,MAAOA,EAEX,CAaA,mBAAAyQ,CACE/Y,EACAgZ,EACAC,EACAC,EACApR,EACAqG,EACA6I,GAEA,MAAMe,KAAgB5J,IAAmB6I,GAEnCmC,EAAMD,EAAWhF,aACjBkF,EAASpZ,EAAQoZ,OACjBC,EAAgBrC,EACjBA,EAAkB,GAAKkC,EAAW5Q,MAAM,GAAM,EAC/C,EACEgR,EACJH,EAAIV,KAAOY,GAAiBD,EAAOva,MAAQma,GAC3CG,EAAIR,KAAOU,GAAiB,GAC5BF,EAAIT,KAAOW,GAAiBD,EAAOra,OAASia,GAC5CG,EAAIP,KAAOS,GAAiB,EA4B9B,OA1BIC,IACEvB,GACFva,KAAKuZ,sBACH/W,EACA4T,EACAC,EACAC,EACAC,EACwB,EACA,IAG5B,QACE/T,EACAkZ,EAAWJ,gBACXhR,EACAmR,EACAC,EAAWlR,QACXkR,EAAWjR,QACXiR,EAAWX,WACXW,EAAWV,WACXU,EAAWb,WACXa,EAAWZ,WACXY,EAAW5Q,SAGR,CACT,CAMA,KAAA8O,CAAMpX,GACJ,GAAIxC,KAAKuX,WAAY,CACnB,MAAMpE,GAAS,QAAenT,KAAKyX,mBAAoB,CAAC,EAAG,IACrDsE,EAAa,IAAM/b,KAAK8L,WAC9BtJ,EAAQuI,OACRvI,EAAQ2I,UAAUgI,EAAO,GAAK4I,EAAY5I,EAAO,GAAK4I,GACtDvZ,EAAQwZ,OAAOhc,KAAK2X,cACtB,CACAnV,EAAQ4R,OACJpU,KAAKuX,YACP/U,EAAQ8I,SAEZ,CAOA,eAAAuO,CAAgBrX,EAAS2M,GACvB3M,EAAQ,eACiD2M,EAAY,GACrE3M,EAAQwH,UAAmCmF,EAAY,GACvD3M,EAAQmN,QAAwCR,EAAY,GAC5D3M,EAAQ4N,SAA0CjB,EAAY,GAC9D3M,EAAQiO,WAAoCtB,EAAY,GACxD3M,EAAQyN,eAAwCd,EAAY,GAC5D3M,EAAQyZ,YAA0C9M,EAAY,GAChE,CAUA,4BAAA+M,CAA6B5V,EAAM4R,EAASE,EAAWD,GACrD,MAAMI,EAAYvY,KAAK8X,WAAWI,GAE5B3M,EAAQvL,KAAKiY,YAAY3R,EAAM4R,EAASC,EAASC,GAEjDC,EAAcrY,KAAK6X,aAAaO,GAChCtM,EAAa9L,KAAK8L,WAClBkL,EAAQD,EACZvL,MAAMC,QAAQnF,GAAQA,EAAK,GAAKA,EAChCiS,EAAUG,WAAa,MAEnByD,EAAW,IAAW5D,EAAU6D,cAAgB,MAChDzD,EACJN,GAAeA,EAAYrO,UAAYqO,EAAYrO,UAAY,EAG3D3I,EAAQkK,EAAMlK,MAAQyK,EAAa,EAAIyM,EAAUzN,MAAM,GACvDqP,EAAUnD,EAAQ3V,EAAQ,GAAK,GAAM2V,GAAS2B,EAC9CyB,EACH+B,EAAW5Q,EAAMhK,OAAUuK,EAC5B,GAAK,GAAMqQ,GAAYxD,EAEzB,MAAO,CACLpN,MAAOA,EACP4O,QAASA,EACTC,QAASA,EAEb,CAgBA,QAAAiC,CACE7Z,EACAgZ,EACAnR,EACA8B,EACAmO,EACAgC,EACAC,EACAC,GAGA,IAAIC,EACAzc,KAAK0X,oBAAqB,QAAOrN,EAAWrK,KAAKyX,oBACnDgF,EAAmBzc,KAAK0X,mBAEnB1X,KAAK0X,oBACR1X,KAAK0X,kBAAoB,IAE3B+E,GAAmB,QACjBzc,KAAK+B,YACL,EACA/B,KAAK+B,YAAYsE,OACjB,EACAgE,EACArK,KAAK0X,oBAEP,QAAsB1X,KAAKyX,mBAAoBpN,IAEjD,IAAIvD,EAAI,EACR,MAAMO,EAAK8E,EAAa9F,OACxB,IACIqW,EACAvC,EACFC,EACAuC,EACAC,EACAC,EACAC,EACAC,EACAzW,EACA4R,EACAE,EACAD,EAZE6E,EAAI,EAaJC,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KAC5B,MAAMC,EAAkBrd,KAAKwX,iBACvB8F,EAAetd,KAAK2X,cACpB4F,EACJrc,KAAK0Z,MAAgD,KAA1C1Z,KAAKsc,OAAOnT,EAAU,GAAIA,EAAU,KAAc,KAEzDiC,EAAuD,CAC3D9J,QAASA,EACTsJ,WAAY9L,KAAK8L,WACjBD,WAAY7L,KAAK6L,WACjBwO,SAAUiD,GAKNG,EACJzd,KAAKmM,cAAgBA,GAAgBnM,KAAKsX,SAAW,EAAI,IAC3D,IAA0DrU,EACtD2H,EAAGC,EAAG6S,EACV,MAAO5W,EAAIO,EAAI,CACb,MAAM8H,EAAchD,EAAarF,GAC3BzE,EACJ8M,EAAY,GAEd,OAAQ9M,GACN,KAAK,KAAkByM,eACrB7L,EACEkM,EAAY,GAEduO,EAAkBvO,EAAY,GACzBlM,EAAQd,mBAGGuF,IAAd6U,IACC,QAAWA,EAAWmB,EAAgBC,eAIrC7W,EAFFA,EAA2BqI,EAAY,GAAM,EAL7CrI,EAA2BqI,EAAY,GASzC,MACF,KAAK,KAAkByO,WACjBX,EAAcQ,IAChBzd,KAAK4Z,MAAMpX,GACXya,EAAc,GAEZC,EAAgBO,IAClBjb,EAAQ6R,SACR6I,EAAgB,GAEbD,GAAgBC,IACnB1a,EAAQiX,YACRkD,EAAQkB,IACRjB,EAAQiB,OAER/W,EACF,MACF,KAAK,KAAkB2N,OACrBuI,EAA2B7N,EAAY,GACvC,MAAM2O,EAAKrB,EAAiBO,GACtBe,EAAKtB,EAAiBO,EAAI,GAC1BgB,EAAKvB,EAAiBO,EAAI,GAC1BiB,EAAKxB,EAAiBO,EAAI,GAC1BkB,EAAKF,EAAKF,EACVK,EAAKF,EAAKF,EACVK,EAAIld,KAAKmd,KAAKH,EAAKA,EAAKC,EAAKA,GACnC3b,EAAQkX,OAAOoE,EAAKM,EAAGL,GACvBvb,EAAQ8b,IAAIR,EAAIC,EAAIK,EAAG,EAAG,EAAIld,KAAKqd,IAAI,KACrCzX,EACF,MACF,KAAK,KAAkB0X,WACrBhc,EAAQic,cACN3X,EACF,MACF,KAAK,KAAkB4H,OACrBsO,EAA2B7N,EAAY,GACvCuN,EAAKvN,EAAY,GACjB,MAAMnM,EAEFmM,EAAY,GAEVjM,EAAWiM,EAAY,GACvBuP,EAA2B,GAAtBvP,EAAY9I,OAAc8I,EAAY,QAAKzH,EACtD4E,EAAMtJ,SAAWA,EACjBsJ,EAAMrJ,QAAUA,EACV6D,KAAKuW,IACTA,EAAgBvW,GAAK,IAEvB,MAAM6X,EAAStB,EAAgBvW,GAC3B4X,EACFA,EAAGjC,EAAkBO,EAAGN,EAAI,EAAGiC,IAE/BA,EAAO,GAAKlC,EAAiBO,GAC7B2B,EAAO,GAAKlC,EAAiBO,EAAI,GACjC2B,EAAOtY,OAAS,GAElBnD,EAASyb,EAAQrS,KACfxF,EACF,MACF,KAAK,KAAkB+L,WACrBmK,EAA2B7N,EAAY,GACvCuN,EAA4BvN,EAAY,GACxC4N,EAEI5N,EAAY,GAIhBgL,EAAiChL,EAAY,GAC7CiL,EAAiCjL,EAAY,GAC7C,IAAI5N,EAAgC4N,EAAY,GAChD,MAAM7E,GAAiC6E,EAAY,GAC7C3E,GAAiC2E,EAAY,GAC7C1E,GAAiC0E,EAAY,GAC7CyP,GAAyCzP,EAAY,IAC3D,IAAIkL,GAAkClL,EAAY,IAClD,MAAMrE,GACJqE,EAAY,IAEd,IAAI9N,GAA+B8N,EAAY,IAC/C,MAAM0P,GAEF1P,EAAY,IAEVtK,GAEFsK,EAAY,IAGhB,IAAK4N,GAAS5N,EAAY9I,QAAU,GAAI,CAEtCC,EAA8B6I,EAAY,IAC1C+I,EAAiC/I,EAAY,IAC7CiJ,EAAmCjJ,EAAY,IAC/CgJ,EAAiChJ,EAAY,IAC7C,MAAM2P,EAAkB9e,KAAKkc,6BAC3B5V,EACA4R,EACAE,EACAD,GAEF4E,EAAQ+B,EAAgBvT,MACxB4D,EAAY,GAAK4N,EACjB,MAAMgC,EAAqC5P,EAAY,IACvDgL,GAAW2E,EAAgB3E,QAAU4E,GAAe/e,KAAK8L,WACzDqD,EAAY,GAAKgL,EACjB,MAAM6E,EAAqC7P,EAAY,IACvDiL,GAAW0E,EAAgB1E,QAAU4E,GAAehf,KAAK8L,WACzDqD,EAAY,GAAKiL,EACjB7Y,EAASwb,EAAMxb,OACf4N,EAAY,GAAK5N,EACjBF,GAAQ0b,EAAM1b,MACd8N,EAAY,IAAM9N,EACpB,CAEA,IAAI4d,GAKAlW,GAASmW,GAAgBC,GAJzBhQ,EAAY9I,OAAS,KACvB4Y,GAAwC9P,EAAY,KAIlDA,EAAY9I,OAAS,IACvB0C,GAAwCoG,EAAY,IACpD+P,GAAyC/P,EAAY,IACrDgQ,GAA2ChQ,EAAY,MAEvDpG,GAAU,KACVmW,IAAiB,EACjBC,IAAmB,GAGjBP,IAAkBrB,EAEpBlD,IAAYiD,EACFsB,IAAmBrB,IAE7BlD,IAAYiD,GAEd,IAAI8B,GAAa,EACjB,KAAOpC,EAAIN,EAAIM,GAAK,EAAG,CACrB,GACEiC,IACAA,GAAeG,MAAgB/d,GAAQrB,KAAK8L,WAE5C,SAEF,MAAM4P,EAAa1b,KAAK8Z,iCACtBiD,EAAM1b,MACN0b,EAAMxb,OACNkb,EAAiBO,GACjBP,EAAiBO,EAAI,GACrB3b,GACAE,EACA4Y,EACAC,EACA5P,GACAC,GACA4P,GACAvP,GACAwP,EACAvR,GACAmW,IAAkBC,GAClBlc,GAGIoc,EAAO,CACX7c,EACAgZ,EACAuB,EACArB,EACApR,GACA4U,GAC4B,EACxB,KACJC,GAC4B,EACxB,MAEN,GAAI3C,EAAe,CACjB,GAAsB,SAAlBqC,GAEF,SACK,GAAsB,aAAlBA,GAA8B,CAEvCrC,EAAc8C,OAAO5D,EAAWhF,cAChC,QACF,CAAO,CACL,IAAI6I,EACAC,EACJ,GAAI3a,GAAwB,CAC1B,MAAM4a,EAAQ/C,EAAKM,EACnB,IAAKnY,GAAuB4a,GAAQ,CAElC5a,GAAuB4a,GAASJ,EAEhC,QACF,CAIA,GAHAE,EAAY1a,GAAuB4a,UAC5B5a,GAAuB4a,GAC9BD,EAAoBhJ,EAAgB+I,GAChC/C,EAAckD,SAASF,GACzB,QAEJ,CACA,GAAIhD,EAAckD,SAAShE,EAAWhF,cACpC,SAEE6I,IAEF/C,EAAc8C,OAAOE,GAErBxf,KAAKub,oBAAoB/T,MAAMxH,KAAMuf,IAEvC/C,EAAc8C,OAAO5D,EAAWhF,aAClC,CACF,CACA1W,KAAKub,oBAAoB/T,MAAMxH,KAAMqf,EACvC,GACEvY,EACF,MACF,KAAK,KAAkB6Y,WACrB,MAAMvQ,GAA+BD,EAAY,GAC3ChC,GAA6BgC,EAAY,GACzCgN,GAAkChN,EAAY,GAC9CyQ,GAAkCzQ,EAAY,GACpDgJ,EAAiChJ,EAAY,GAC7C,MAAM0Q,GAAkC1Q,EAAY,GAC9C2Q,GAA2C3Q,EAAY,GACvD4Q,GAAiC5Q,EAAY,GACnDiJ,EAAmCjJ,EAAY,GAC/C,MAAMwJ,GAAqCxJ,EAAY,IACvD7I,EAA8B6I,EAAY,IAC1C+I,EAAiC/I,EAAY,IAC7C,MAAM6Q,GAAkB,CACC7Q,EAAY,IACZA,EAAY,KAG/BoJ,GAAYvY,KAAK8X,WAAWI,GAC5B5Q,GAAOiR,GAAUjR,KACjB2Y,GAAY,CAChB1H,GAAUzN,MAAM,GAAKgV,GACrBvH,GAAUzN,MAAM,GAAKgV,IAGvB,IAAII,GACA5Y,MAAQtH,KAAK+X,QACfmI,GAAelgB,KAAK+X,QAAQzQ,KAE5B4Y,GAAe,CAAC,EAChBlgB,KAAK+X,QAAQzQ,IAAQ4Y,IAGvB,MAAMC,IAAa,OAAiB1D,EAAkBrN,GAAOjC,GAAK,GAC5DiT,GACJlf,KAAKI,IAAI2e,GAAU,KACnB,QAAyB3Y,GAAMhB,EAAM4Z,IACvC,GAAIN,IAAYQ,IAAcD,GAAY,CACxC,MAAMzH,EAAY1Y,KAAK8X,WAAWI,GAASQ,UACrC2H,GACHF,GAAaC,IAAcrJ,EAAoBzQ,EAAMoS,GAClD4H,GAAQ,OACZ7D,EACArN,GACAjC,GACA,EACA7G,EACA+Z,EACAR,GACA3e,KAAKI,IAAI2e,GAAU,IACnB,KACA3Y,GACA4Y,GACA3C,EAA4B,EAAIvd,KAAK2X,eAEvC4I,EAAW,GAAID,EAAO,CAEpB,MAAM7J,EAAyB,GAC/B,IAAI+J,EAAGC,EAAIC,EAAOnV,EAAOoV,EACzB,GAAIvI,EACF,IAAKoI,EAAI,EAAGC,EAAKH,EAAMja,OAAQma,EAAIC,IAAMD,EAAG,CAC1CG,EAAOL,EAAME,GACbE,EAA+BC,EAAK,GACpCpV,EAAQvL,KAAKiY,YAAYyI,EAAOxI,EAAS,GAAIE,GAC7C+B,EACyBwG,EAAK,IAC3BV,GAAU,GAAK,GAAKtH,GAAcA,IACrCyB,EACE+B,GAAW5Q,EAAMhK,OACG,GAAlB,GAAM4a,IAAgBxD,GAAcsH,GAAU,GAC9CA,GAAU,GACZF,GACF,MAAMrE,EAAa1b,KAAK8Z,iCACtBvO,EAAMlK,MACNkK,EAAMhK,OACNof,EAAK,GACLA,EAAK,GACLpV,EAAMlK,MACNkK,EAAMhK,OACN4Y,EACAC,EACA,EACA,EACAuG,EAAK,GACLX,IACA,EACA,MACA,EACA/c,GAEF,GACEuZ,GACAA,EAAckD,SAAShE,EAAWhF,cAElC,MAAM6J,EAER9J,EAAuBxM,KAAK,CAC1BzH,EACAgZ,EACAjQ,EACAmQ,EACA,EACA,KACA,MAEJ,CAEF,GAAIvD,EACF,IAAKqI,EAAI,EAAGC,EAAKH,EAAMja,OAAQma,EAAIC,IAAMD,EAAG,CAC1CG,EAAOL,EAAME,GACbE,EAA+BC,EAAK,GACpCpV,EAAQvL,KAAKiY,YAAYyI,EAAOxI,EAASC,EAAS,IAClDgC,EAAiCwG,EAAK,GACtCvG,EAAU+B,GAAW5Q,EAAMhK,OAASwe,GACpC,MAAMrE,EAAa1b,KAAK8Z,iCACtBvO,EAAMlK,MACNkK,EAAMhK,OACNof,EAAK,GACLA,EAAK,GACLpV,EAAMlK,MACNkK,EAAMhK,OACN4Y,EACAC,EACA,EACA,EACAuG,EAAK,GACLX,IACA,EACA,MACA,EACA/c,GAEF,GACEuZ,GACAA,EAAckD,SAAShE,EAAWhF,cAElC,MAAM6J,EAER9J,EAAuBxM,KAAK,CAC1BzH,EACAgZ,EACAjQ,EACAmQ,EACA,EACA,KACA,MAEJ,CAEEc,GACFA,EAAcoE,KAAKnK,EAAuBjV,IAAIgV,IAEhD,IAAK,IAAI1P,EAAI,EAAGO,EAAKoP,EAAuBpQ,OAAQS,EAAIO,IAAMP,EAC5D9G,KAAKub,oBAAoB/T,MAAMxH,KAAMyW,EAAuB3P,GAEhE,CACF,GACEA,EACF,MACF,KAAK,KAAkBuI,aACrB,QAAwB3H,IAApB4U,EAA+B,CACjCrZ,EACEkM,EAAY,GAEd,MAAM0R,EAASvE,EAAgBrZ,EAASya,GACxC,GAAImD,EACF,OAAOA,CAEX,GACE/Z,EACF,MACF,KAAK,KAAkBga,KACjBrD,EACFR,IAEAjd,KAAK4Z,MAAMpX,KAEXsE,EACF,MACF,KAAK,KAAkBkN,gBAYrB,IAXAgJ,EAA2B7N,EAAY,GACvCuN,EAA4BvN,EAAY,GACxCvE,EAAI6R,EAAiBO,GACrBnS,EAAI4R,EAAiBO,EAAI,GACzBH,EAAUjS,EAAI,GAAO,EACrBkS,EAAUjS,EAAI,GAAO,EACjBgS,IAAWF,GAASG,IAAWF,IACjCpa,EAAQkX,OAAO9O,EAAGC,GAClB8R,EAAQE,EACRD,EAAQE,GAELE,GAAK,EAAGA,EAAIN,EAAIM,GAAK,EACxBpS,EAAI6R,EAAiBO,GACrBnS,EAAI4R,EAAiBO,EAAI,GACzBH,EAAUjS,EAAI,GAAO,EACrBkS,EAAUjS,EAAI,GAAO,EACjBmS,GAAKN,EAAK,GAAKG,IAAWF,GAASG,IAAWF,IAChDpa,EAAQmX,OAAO/O,EAAGC,GAClB8R,EAAQE,EACRD,EAAQE,KAGVhW,EACF,MACF,KAAK,KAAkB8J,eACrBuM,EAAsBhO,EACtBnP,KAAKuX,WAAapI,EAAY,GAE1B8N,IACFjd,KAAK4Z,MAAMpX,GACXya,EAAc,EACVC,IACF1a,EAAQ6R,SACR6I,EAAgB,IAIpB1a,EAAQiC,UAEJ0K,EAAY,KAEdrI,EACF,MACF,KAAK,KAAkBiK,iBACrBqM,EAAwBjO,EACpB+N,IACF1a,EAAQ6R,SACR6I,EAAgB,GAElBld,KAAK6Z,gBAAgBrX,EAAiC,KACpDsE,EACF,MACF,KAAK,KAAkBia,OACjBtD,EACFP,IAEA1a,EAAQ6R,WAERvN,EACF,MACF,UACIA,EACF,MAEN,CACImW,GACFjd,KAAK4Z,MAAMpX,GAET0a,GACF1a,EAAQ6R,QAGZ,CAUA,OAAA2M,CACExe,EACAgZ,EACAnR,EACAiT,EACAhD,EACAkC,GAEAxc,KAAK2X,cAAgB2F,EACrBtd,KAAKqc,SACH7Z,EACAgZ,EACAnR,EACArK,KAAKmM,aACLmO,OACA5S,OACAA,EACA8U,EAEJ,CAYA,mBAAAyE,CACEze,EACA6H,EACAiT,EACAhB,EACAC,GAGA,OADAvc,KAAK2X,cAAgB2F,EACdtd,KAAKqc,SACV7Z,EACA,EACA6H,EACArK,KAAKqM,0BACL,EACAiQ,EACAC,EAEJ,EAGF,U,0BCvtCA,MAAM2E,EAAQ,CAAC,UAAW,SAAU,aAAc,QAAS,OAAQ,WAEnE,MAAMC,EAaJ,WAAAthB,CACE+L,EACAC,EACAC,EACAwL,EACA8J,EACAC,GAMArhB,KAAKkV,WAAatJ,EAMlB5L,KAAKshB,UAAYhK,EAMjBtX,KAAKmV,YAAcrJ,EAMnB9L,KAAKoV,YAAcvJ,EAMnB7L,KAAKuhB,cAAgBF,EAMrBrhB,KAAKwhB,mBAAqB,CAAC,EAM3BxhB,KAAKyhB,qBAAuB,KAM5BzhB,KAAK0hB,wBAAyB,UAE9B1hB,KAAK2hB,iBAAiBP,EACxB,CAMA,IAAAQ,CAAKpf,EAAS6H,GACZ,MAAMwX,EAAiB7hB,KAAK8hB,cAAczX,GAC1C7H,EAAQiX,YACRjX,EAAQkX,OAAOmI,EAAe,GAAIA,EAAe,IACjDrf,EAAQmX,OAAOkI,EAAe,GAAIA,EAAe,IACjDrf,EAAQmX,OAAOkI,EAAe,GAAIA,EAAe,IACjDrf,EAAQmX,OAAOkI,EAAe,GAAIA,EAAe,IACjDrf,EAAQof,MACV,CAOA,gBAAAD,CAAiBP,GACf,IAAK,MAAMxL,KAAUwL,EAAiB,CACpC,IAAIW,EAAY/hB,KAAKwhB,mBAAmB5L,QACtBlO,IAAdqa,IACFA,EAAY,CAAC,EACb/hB,KAAKwhB,mBAAmB5L,GAAUmM,GAEpC,MAAMC,EAAsBZ,EAAgBxL,GAC5C,IAAK,MAAMC,KAAemM,EAAqB,CAC7C,MAAM7V,EAAe6V,EAAoBnM,GACzCkM,EAAUlM,GAAe,IAAI,EAC3B7V,KAAKoV,YACLpV,KAAKmV,YACLnV,KAAKshB,UACLnV,EAEJ,CACF,CACF,CAMA,YAAA8V,CAAaF,GACX,IAAK,MAAMnM,KAAU5V,KAAKwhB,mBAAoB,CAC5C,MAAMU,EAAaliB,KAAKwhB,mBAAmB5L,GAC3C,IAAK,IAAI9O,EAAI,EAAGO,EAAK0a,EAAU1b,OAAQS,EAAIO,IAAMP,EAC/C,GAAIib,EAAUjb,KAAMob,EAClB,OAAO,CAGb,CACA,OAAO,CACT,CAYA,0BAAAC,CACEC,EACAvW,EACAwO,EACAgI,EACAC,EACAC,GAEAF,EAAenhB,KAAK0Z,MAAMyH,GAC1B,MAAMG,EAA6B,EAAfH,EAAmB,EACjChY,GAAY,QAChBrK,KAAK0hB,uBACLW,EAAe,GACfA,EAAe,GACf,EAAIxW,GACH,EAAIA,GACJwO,GACA+H,EAAW,IACXA,EAAW,IAGRK,GAAcziB,KAAKyhB,qBACrBgB,IACFziB,KAAKyhB,sBAAuB,QAC1Be,EACAA,OACA9a,EACA,CAACgb,oBAAoB,KAGzB,MAAMlgB,EAAUxC,KAAKyhB,qBAerB,IAAIlF,EAZF/Z,EAAQoZ,OAAOva,QAAUmhB,GACzBhgB,EAAQoZ,OAAOra,SAAWihB,GAE1BhgB,EAAQoZ,OAAOva,MAAQmhB,EACvBhgB,EAAQoZ,OAAOra,OAASihB,GACdC,GACVjgB,EAAQmgB,UAAU,EAAG,EAAGH,EAAaA,QAOZ9a,IAAvB1H,KAAKuhB,gBACPhF,GAAY,WACZ,QAAiBA,EAAW6F,IAC5B,QACE7F,EACA1Q,GAAc7L,KAAKuhB,cAAgBc,GACnC9F,IAIJ,MAAMqG,EAAUC,EAAmBR,GAEnC,IAAIxM,EAOJ,SAASyG,EAAgBrZ,EAASD,GAChC,MAAM8f,EAAYtgB,EAAQugB,aACxB,EACA,EACAP,EACAA,GACAQ,KACF,IAAK,IAAIlc,EAAI,EAAGO,EAAKub,EAAQvc,OAAQS,EAAIO,EAAIP,IAC3C,GAAIgc,EAAUF,EAAQ9b,IAAM,EAAG,CAC7B,IACGyb,GACgB,UAAhB1M,GAA2C,SAAhBA,GAC5B0M,EAAoBU,SAAShgB,GAC7B,CACA,MAAMigB,GAAON,EAAQ9b,GAAK,GAAK,EACzB8D,EAAIyX,EAAgBa,EAAMV,EAC1B3X,EAAIwX,GAAiBa,EAAMV,EAAe,GAC1C3B,EAASyB,EAASrf,EAASD,EAAU4H,EAAIA,EAAIC,EAAIA,GACvD,GAAIgW,EACF,OAAOA,CAEX,CACAre,EAAQmgB,UAAU,EAAG,EAAGH,EAAaA,GACrC,KACF,CAGJ,CAGA,MAAMW,EAAKC,OAAOC,KAAKrjB,KAAKwhB,oBAAoBhgB,IAAIiH,QAGpD,IAAI3B,EAAGwc,EAAGvB,EAAWwB,EAAU1C,EAC/B,IAHAsC,EAAGK,KAAK,MAGH1c,EAAIqc,EAAG9c,OAAS,EAAGS,GAAK,IAAKA,EAAG,CACnC,MAAMgP,EAAYqN,EAAGrc,GAAGiP,WAExB,IADAgM,EAAY/hB,KAAKwhB,mBAAmB1L,GAC/BwN,EAAIpC,EAAM7a,OAAS,EAAGid,GAAK,IAAKA,EAGnC,GAFAzN,EAAcqL,EAAMoC,GACpBC,EAAWxB,EAAUlM,QACJnO,IAAb6b,IACF1C,EAAS0C,EAAStC,oBAChBze,EACA6H,EACAgQ,EACAiC,EACAC,GAEEsE,GACF,OAAOA,CAIf,CAEF,CAMA,aAAAiB,CAAczX,GACZ,MAAMuB,EAAY5L,KAAKkV,WACvB,IAAKtJ,EACH,OAAO,KAET,MAAMqP,EAAOrP,EAAU,GACjBsP,EAAOtP,EAAU,GACjBuP,EAAOvP,EAAU,GACjBwP,EAAOxP,EAAU,GACjBiW,EAAiB,CAAC5G,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAElE,OADA,QAAY2G,EAAgB,EAAG,EAAG,EAAGxX,EAAWwX,GACzCA,CACT,CAKA,OAAA4B,GACE,OAAO,OAAQzjB,KAAKwhB,mBACtB,CAYA,OAAAR,CACExe,EACAgZ,EACAnR,EACAiT,EACAhD,EACAoJ,EACAlH,GAGA,MAAM2G,EAAKC,OAAOC,KAAKrjB,KAAKwhB,oBAAoBhgB,IAAIiH,QAWpD,IAAI3B,EAAGO,EAAIic,EAAGK,EAAI3N,EAASC,EAI3B,IAdAkN,EAAGK,KAAK,MAIJxjB,KAAKkV,aACP1S,EAAQuI,OACR/K,KAAK4hB,KAAKpf,EAAS6H,IAGrBqZ,EAAeA,GAA8BxC,EAEzC1E,GACF2G,EAAGlU,UAEAnI,EAAI,EAAGO,EAAK8b,EAAG9c,OAAQS,EAAIO,IAAMP,EAAG,CACvC,MAAMgP,EAAYqN,EAAGrc,GAAGiP,WAExB,IADAC,EAAUhW,KAAKwhB,mBAAmB1L,GAC7BwN,EAAI,EAAGK,EAAKD,EAAard,OAAQid,EAAIK,IAAML,EAAG,CACjD,MAAMzN,EAAc6N,EAAaJ,GACjCrN,EAASD,EAAQH,QACFnO,IAAXuO,GACFA,EAAO+K,QACLxe,EACAgZ,EACAnR,EACAiT,EACAhD,EACAkC,EAGN,CACF,CAEIxc,KAAKkV,YACP1S,EAAQ8I,SAEZ,EASF,MAAMsY,EAA6B,CAAC,EAS7B,SAASf,EAAmBgB,GACjC,QAA2Cnc,IAAvCkc,EAA2BC,GAC7B,OAAOD,EAA2BC,GAGpC,MAAM3d,EAAgB,EAAT2d,EAAa,EACpBC,EAAgBD,EAASA,EACzBE,EAAY,IAAIvY,MAAMsY,EAAgB,GAC5C,IAAK,IAAIhd,EAAI,EAAGA,GAAK+c,IAAU/c,EAC7B,IAAK,IAAIwc,EAAI,EAAGA,GAAKO,IAAUP,EAAG,CAChC,MAAMU,EAAald,EAAIA,EAAIwc,EAAIA,EAC/B,GAAIU,EAAaF,EACf,MAEF,IAAIG,EAAWF,EAAUC,GACpBC,IACHA,EAAW,GACXF,EAAUC,GAAcC,GAE1BA,EAASha,KAA4C,IAArC4Z,EAAS/c,GAAKZ,GAAQ2d,EAASP,IAAU,GACrDxc,EAAI,GACNmd,EAASha,KAA4C,IAArC4Z,EAAS/c,GAAKZ,GAAQ2d,EAASP,IAAU,GAEvDA,EAAI,IACNW,EAASha,KAA4C,IAArC4Z,EAAS/c,GAAKZ,GAAQ2d,EAASP,IAAU,GACrDxc,EAAI,GACNmd,EAASha,KAA4C,IAArC4Z,EAAS/c,GAAKZ,GAAQ2d,EAASP,IAAU,GAG/D,CAGF,MAAMY,EAAa,GACnB,IAAK,IAAIpd,EAAI,EAAGO,EAAK0c,EAAU1d,OAAQS,EAAIO,IAAMP,EAC3Cid,EAAUjd,IACZod,EAAWja,QAAQ8Z,EAAUjd,IAKjC,OADA8c,EAA2BC,GAAUK,EAC9BA,CACT,CAEA,S,wEChaA,MAAMC,EAAc,CAClBrV,eAAgB,EAChB8O,WAAY,EACZnJ,OAAQ,EACR+J,WAAY,EACZ9P,OAAQ,EACRiR,WAAY,EACZ9M,WAAY,EACZxD,aAAc,EACdyR,KAAM,EACN9M,gBAAiB,EACjBpD,eAAgB,GAChBG,iBAAkB,GAClBgQ,OAAQ,IAMGpQ,EAAkB,CAACwT,EAAYrD,MAK/BtH,EAAoB,CAAC2K,EAAYpD,QAKjCqD,EAAuB,CAACD,EAAYvG,YAKpCyG,EAAuB,CAACF,EAAY3F,YAEjD,G,uICdO,MAAM8F,EAAa,CACxB,KAAQ,EACR,OAAU,GACV,MAAS,EACT,IAAO,EACP,OAAU,GACV,QAAW,GACX,WAAc,GACd,YAAe,GACf,OAAU,GAGZ,MAAMC,UAA0B,IAO9B,WAAA1kB,CAAY8L,EAAWC,EAAWC,EAAYC,GAC5C/L,MAAM4L,EAAWC,EAAWC,EAAYC,GAMxC9L,KAAKgY,QAAU,KAMfhY,KAAKwkB,MAAQ,GAMbxkB,KAAKykB,aAAe,EAMpBzkB,KAAK0kB,aAAe,EAMpB1kB,KAAK2kB,yBAAsBjd,EAM3B1H,KAAK4kB,cAAgB,EAMrB5kB,KAAK6kB,eAAiB,KAKtB7kB,KAAK4X,WAAa,CAAC,EACnB5X,KAAK4X,WAAW,MAAoB,CAACnT,UAAW,MAMhDzE,KAAK8kB,iBAAmB,KAKxB9kB,KAAK6X,aAAe,CAAC,EAMrB7X,KAAK+kB,WAA6D,CAAG,EAKrE/kB,KAAK8X,WAAa,CAAC,EAMnB9X,KAAKglB,SAAW,GAMhBhlB,KAAKilB,SAAW,GAMhBjlB,KAAKklB,WAAa,GAOlBllB,KAAK2S,6BAA0BjL,CACjC,CAKA,MAAAqH,GACE,MAAM5C,EAAepM,MAAMgP,SAI3B,OAHA5C,EAAa2L,WAAa9X,KAAK8X,WAC/B3L,EAAayL,WAAa5X,KAAK4X,WAC/BzL,EAAa0L,aAAe7X,KAAK6X,aAC1B1L,CACT,CAMA,QAAA5H,CAASvB,EAAUC,GACjB,MAAMqV,EAAYtY,KAAK6kB,eACjBxM,EAAcrY,KAAK8kB,iBACnBvM,EAAYvY,KAAK+kB,WACvB,GAAmB,KAAf/kB,KAAKwkB,QAAiBjM,IAAeD,IAAcD,EACrD,OAGF,MAAMtW,EAAc/B,KAAK+B,YACzB,IAAIqN,EAAQrN,EAAYsE,OAExB,MAAM8e,EAAeniB,EAASkL,UAC9B,IAAIvB,EAAkB,KAClBC,EAAS5J,EAASmL,YAEtB,GAC0B,SAAxBoK,EAAU6M,WACO,cAAhBD,GACiB,mBAAhBA,GACgB,WAAhBA,GACgB,gBAAhBA,EAsEG,CACL,IAAIlG,EAAiB1G,EAAUqH,SAAW,KAAO,GACjD,OAAQuF,GACN,IAAK,QACL,IAAK,aACHxY,EAC4D,EAExDgC,qBACJ,MACF,IAAK,aACHhC,EAC4D,EAExD0Y,kBACJ,MACF,IAAK,SACH1Y,EACwD,EAEpD2Y,YACJ,MACF,IAAK,kBACH3Y,EACiE,EAE7D4Y,mBACJ3Y,EAAS,EACT,MACF,IAAK,UACHD,EACyD,EAErD6Y,uBACCjN,EAAUqH,UACbX,EAAehV,KAAK0C,EAAgB,GAAK3M,KAAK6L,YAEhDe,EAAS,EACT,MACF,IAAK,eACH,MAAM6Y,EACwD,EAE1DC,wBACJ/Y,EAAkB,GAClB,IAAK,IAAI7F,EAAI,EAAGO,EAAKoe,EAAepf,OAAQS,EAAIO,EAAIP,GAAK,EAClDyR,EAAUqH,UACbX,EAAehV,KAAKwb,EAAe3e,EAAI,GAAK9G,KAAK6L,YAEnDc,EAAgB1C,KAAKwb,EAAe3e,GAAI2e,EAAe3e,EAAI,IAE7D,GAA+B,IAA3B6F,EAAgBtG,OAClB,OAEFuG,EAAS,EACT,MACF,SAEF,MAAMO,EAAMnN,KAAK0M,2BAA2BC,EAAiBC,GAC7D,GAAIO,IAAQiC,EACV,OAEF,GACE6P,IACC9R,EAAMiC,GAAS,IAAMzC,EAAgBtG,OAASuG,EAC/C,CACA,IAAI+Y,EAAMvW,EAAQ,EAClB6P,EAAiBA,EAAe2G,QAAO,CAAClb,EAAG5D,KACzC,MAAM+e,EACJ9jB,EAAwB,GAAX4jB,EAAM7e,MAAY6F,EAAgB7F,EAAI8F,IACnD7K,EAAwB,GAAX4jB,EAAM7e,GAAS,KAAO6F,EAAgB7F,EAAI8F,EAAS,GAIlE,OAHKiZ,KACDF,EAEGE,CAAI,GAEf,CAEA7lB,KAAK8lB,mBAEDvN,EAAU2G,gBAAkB3G,EAAU4G,oBACxCnf,KAAKwE,mBACH+T,EAAU2G,eACV3G,EAAU4G,kBAER5G,EAAU2G,gBACZlf,KAAKgR,gBAAgBhR,KAAKsM,MAAOtM,KAAK0Q,YAEpC6H,EAAU4G,mBACZnf,KAAKmR,kBAAkBnR,KAAKsM,MAAOtM,KAAK6Q,aACxC7Q,KAAKqM,yBAAyBpC,KAAKjK,KAAK8Q,aAAa9Q,KAAKsM,UAI9DtM,KAAKiO,cAAcjL,EAAUC,GAG7B,IAAI8F,EAAUwP,EAAUxP,QACxB,GACEA,GAAW,OACVwP,EAAUzN,MAAM,GAAK,GAAKyN,EAAUzN,MAAM,GAAK,GAChD,CACA,IAAIib,EAAKxN,EAAUxP,QAAQ,GACvBqN,EAAKmC,EAAUxP,QAAQ,GACvBsN,EAAKkC,EAAUxP,QAAQ,GACvBuN,EAAKiC,EAAUxP,QAAQ,GACvBwP,EAAUzN,MAAM,GAAK,IACvBsL,GAAMA,EACNE,GAAMA,GAEJiC,EAAUzN,MAAM,GAAK,IACvBib,GAAMA,EACN1P,GAAMA,GAERtN,EAAU,CAACgd,EAAI3P,EAAIC,EAAIC,EACzB,CAKA,MAAMxK,EAAa9L,KAAK8L,WACxB9L,KAAKmM,aAAalC,KAAK,CACrB,KAAkB4I,WAClBzD,EACAjC,EACA,KACA0Q,IACAA,IACAA,IACA,EACA,EACA,EACA7d,KAAK2kB,oBACL3kB,KAAK4kB,cACL,CAAC,EAAG,GACJ/G,SACAnW,EACA1H,KAAK2S,wBACL5J,GAAW,KACP,KACAA,EAAQvH,KAAI,SAAUwkB,GACpB,OAAOA,EAAIla,CACb,MACFyM,EAAU2G,iBACV3G,EAAU4G,iBACZnf,KAAKwkB,MACLxkB,KAAKglB,SACLhlB,KAAKklB,WACLllB,KAAKilB,SACLjlB,KAAKykB,aACLzkB,KAAK0kB,aACLzF,IAEF,MAAMnU,EAAQ,EAAIgB,EAEZmF,EAAmBjR,KAAKsM,MAAM7H,UAChC8T,EAAU2G,iBACZlf,KAAKsM,MAAM7H,UAAY,KACvBzE,KAAKqM,yBAAyBpC,KAAKjK,KAAK0Q,WAAW1Q,KAAKsM,SAE1DtM,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB4I,WAClBzD,EACAjC,EACA,KACA0Q,IACAA,IACAA,IACA,EACA,EACA,EACA7d,KAAK2kB,oBACL3kB,KAAK4kB,cACL,CAAC9Z,EAAOA,GACR+S,SACAnW,EACA1H,KAAK2S,wBACL5J,IACEwP,EAAU2G,iBACV3G,EAAU4G,iBACZnf,KAAKwkB,MACLxkB,KAAKglB,SACLhlB,KAAKklB,WACLllB,KAAKilB,SAAW,KAAmBjlB,KAAKilB,SACxCjlB,KAAKykB,aACLzkB,KAAK0kB,aACLzF,IAGE1G,EAAU2G,iBACZlf,KAAKsM,MAAM7H,UAAYwM,EACvBjR,KAAKqM,yBAAyBpC,KAAKjK,KAAK0Q,WAAW1Q,KAAKsM,SAG1DtM,KAAK6O,YAAY5L,EACnB,KAxQE,CACA,KAAK,QAAWjD,KAAK8M,uBAAwB9J,EAAS2a,aACpD,OAEF,IAAI7P,EAEJ,GADAnB,EAAkB3J,EAAS2L,qBACP,cAAhBwW,EACFrX,EAAO,CAACnB,EAAgBtG,aACnB,GAAoB,mBAAhB8e,EACTrX,EAAsE,EAEpEc,eACG,GAAoB,WAAhBuW,EACTrX,EAA8D,EAC3Dc,UACA3M,MAAM,EAAG,QACP,GAAoB,gBAAhBkjB,EAAgC,CACzC,MAAM5W,EACwD,EAE1DC,WACJV,EAAO,GACP,IAAK,IAAIhH,EAAI,EAAGO,EAAKkH,EAAMlI,OAAQS,EAAIO,IAAMP,EAC3CgH,EAAK7D,KAAKsE,EAAMzH,GAAG,GAEvB,CACA9G,KAAKiO,cAAcjL,EAAUC,GAC7B,MAAMgjB,EAAS1N,EAAU0N,OACnBvN,EAAYuN,OAASve,EAAY6Q,EAAUG,UAEjD,IAAIwN,EAAa,EACjB,IAAK,IAAIC,EAAI,EAAGC,EAAKtY,EAAKzH,OAAQ8f,EAAIC,IAAMD,EAAG,CAC7C,IAAIvc,EAEFA,EADEqc,GACO,OACPA,EAASjmB,KAAK6L,WACdc,EACAuZ,EACApY,EAAKqY,GACLvZ,GAGO,CAACD,EAAgB1K,MAAMikB,EAAYpY,EAAKqY,KAEnD,IAAK,IAAI3F,EAAI,EAAGC,EAAK7W,EAAOvD,OAAQma,EAAIC,IAAMD,EAAG,CAC/C,MAAM6F,EAAQzc,EAAO4W,GACrB,IAAI8F,EAAa,EACbC,EAAWF,EAAMhgB,OACrB,QAAiBqB,GAAbgR,EAAwB,CAC1B,MAAM8N,GAAQ,OACZjO,EAAUsH,SACVwG,EACA,EACAA,EAAMhgB,OACN,GAEFigB,EAAaE,EAAM,GACnBD,EAAWC,EAAM,EACnB,CACA,IAAK,IAAI1f,EAAIwf,EAAYxf,EAAIyf,EAAUzf,GAAK8F,EAC1C7K,EAAYkI,KAAKoc,EAAMvf,GAAIuf,EAAMvf,EAAI,IAEvC,MAAMqG,EAAMpL,EAAYsE,OACxB6f,EAAapY,EAAKqY,GAClBnmB,KAAKymB,WAAWrX,EAAOjC,GACvBiC,EAAQjC,CACV,CACF,CACAnN,KAAK6O,YAAY5L,EACnB,CAoMF,CAKA,eAAA6iB,GACE,MAAMzN,EAAcrY,KAAK8kB,iBACnBvM,EAAYvY,KAAK+kB,WACjBzM,EAAYtY,KAAK6kB,eAEjBzM,EAAYpY,KAAKklB,WACnB7M,IACID,KAAapY,KAAK6X,eACtB7X,KAAK6X,aAAaO,GAAa,CAC7B1T,YAAa2T,EAAY3T,YACzBiL,QAAS0I,EAAY1I,QACrBM,eAAgBoI,EAAYpI,eAC5BjG,UAAWqO,EAAYrO,UACvBoG,SAAUiI,EAAYjI,SACtBK,WAAY4H,EAAY5H,WACxBX,SAAUuI,EAAYvI,YAI5B,MAAMoI,EAAUlY,KAAKglB,SACf9M,KAAWlY,KAAK8X,aACpB9X,KAAK8X,WAAWI,GAAW,CACzB5Q,KAAMiR,EAAUjR,KAChBoR,UAAWH,EAAUG,WAAa,KAClCD,QAASF,EAAUE,QACnB2D,aAAc7D,EAAU6D,cAAgB,KACxCtR,MAAOyN,EAAUzN,QAGrB,MAAMqN,EAAUnY,KAAKilB,SACjB3M,IACIH,KAAWnY,KAAK4X,aACpB5X,KAAK4X,WAAWO,GAAW,CACzB1T,UAAW6T,EAAU7T,YAI7B,CAOA,UAAAgiB,CAAWrX,EAAOjC,GAChB,MAAMkL,EAAcrY,KAAK8kB,iBACnBvM,EAAYvY,KAAK+kB,WAEjB3M,EAAYpY,KAAKklB,WACjBhN,EAAUlY,KAAKglB,SACf7M,EAAUnY,KAAKilB,SACrBjlB,KAAK8lB,kBAEL,MAAMha,EAAa9L,KAAK8L,WAClBqQ,EAAWmI,EAAW/L,EAAU6D,cAEhC2D,EAAU/f,KAAK0kB,aAAe5Y,EAC9BxF,EAAOtG,KAAKwkB,MACZ7L,EAAcN,EACfA,EAAYrO,UAAY9I,KAAKI,IAAIiX,EAAUzN,MAAM,IAAO,EACzD,EAEJ9K,KAAKmM,aAAalC,KAAK,CACrB,KAAkB0V,WAClBvQ,EACAjC,EACAgP,EACA5D,EAAUqH,SACVzH,EACAI,EAAUsH,SACV/T,EACAiU,EACA3H,EACAO,EAAc7M,EACdxF,EACA4R,EACA,IAEFlY,KAAKqM,yBAAyBpC,KAAK,CACjC,KAAkB0V,WAClBvQ,EACAjC,EACAgP,EACA5D,EAAUqH,SACVzH,EAAU,KAAmBA,EAC7BI,EAAUsH,SACV,EACAE,EACA3H,EACAO,EACArS,EACA4R,EACA,EAAIpM,GAER,CAMA,YAAAhH,CAAaC,EAAWgO,GACtB,IAAIwF,EAAWD,EAAWD,EAC1B,GAAKtT,EAEE,CACL,MAAM2hB,EAAgB3hB,EAAU4hB,UAC3BD,GAIHpO,EAAYtY,KAAK6kB,eACZvM,IACHA,EAA4D,CAAG,EAC/DtY,KAAK6kB,eAAiBvM,GAExBA,EAAU7T,WAAY,OACpBiiB,EAAcnX,YAAc,QAT9B+I,EAAY,KACZtY,KAAK6kB,eAAiBvM,GAYxB,MAAMsO,EAAkB7hB,EAAU8hB,YAClC,GAAKD,EAGE,CACLvO,EAAcrY,KAAK8kB,iBACdzM,IACHA,EAAgE,CAAG,EACnErY,KAAK8kB,iBAAmBzM,GAE1B,MAAMvI,EAAW8W,EAAgB/W,cAC3BI,EAAiB2W,EAAgB5W,oBACjChG,EAAY4c,EAAgBtW,WAC5BG,EAAamW,EAAgBpW,gBACnC6H,EAAY1I,QAAUiX,EAAgBlX,cAAgB,KACtD2I,EAAYvI,SAAWA,EAAWA,EAAS7N,QAAU,KACrDoW,EAAYpI,oBACSvI,IAAnBuI,EAA+B,KAAwBA,EACzDoI,EAAYjI,SAAWwW,EAAgBzW,eAAiB,KACxDkI,EAAYrO,eACItC,IAAdsC,EAA0B,KAAmBA,EAC/CqO,EAAY5H,gBACK/I,IAAf+I,EAA2B,KAAoBA,EACjD4H,EAAY3T,aAAc,OACxBkiB,EAAgBrX,YAAc,KAElC,MAxBE8I,EAAc,KACdrY,KAAK8kB,iBAAmBzM,EAyB1BE,EAAYvY,KAAK+kB,WACjB,MAAMzd,EAAOvC,EAAU+hB,WAAa,MACpC,QAAaxf,GACb,MAAM2Y,EAAYlb,EAAU4O,gBAC5B4E,EAAUqH,SAAW7a,EAAUgiB,cAC/BxO,EAAUjR,KAAOA,EACjBiR,EAAUsH,SAAW9a,EAAUiiB,cAC/BzO,EAAU6M,UAAYrgB,EAAUkiB,eAChC1O,EAAUG,UAAY3T,EAAUmiB,eAChC3O,EAAU0N,OAASlhB,EAAUoiB,YAC7B5O,EAAUE,QAAU1T,EAAUqiB,aAC9B7O,EAAU6D,aACRrX,EAAUsiB,mBAAqB,KACjC9O,EAAU2G,eAAiBna,EAAUuiB,oBACrC/O,EAAU4G,iBAAmBpa,EAAUwiB,sBACvChP,EAAUxP,QAAUhE,EAAUyiB,cAAgB,KAC9CjP,EAAUzN,WAAsBpD,IAAduY,EAA0B,CAAC,EAAG,GAAKA,EAErD,MAAMlB,EAAcha,EAAU0iB,aACxBzI,EAAcja,EAAU2iB,aACxBC,EAAqB5iB,EAAU0O,oBAC/BmU,EAAe7iB,EAAU2O,cAC/B1T,KAAKwkB,MAAQzf,EAAU8iB,WAAa,GACpC7nB,KAAKykB,kBAA+B/c,IAAhBqX,EAA4B,EAAIA,EACpD/e,KAAK0kB,kBAA+Bhd,IAAhBsX,EAA4B,EAAIA,EACpDhf,KAAK2kB,yBACoBjd,IAAvBigB,GAA2CA,EAC7C3nB,KAAK4kB,mBAAiCld,IAAjBkgB,EAA6B,EAAIA,EAEtD5nB,KAAKklB,WAAa7M,GACqB,iBAA3BA,EAAY3T,YAChB2T,EAAY3T,aACZ,QAAO2T,EAAY3T,cACvB2T,EAAY1I,QACZ0I,EAAYpI,eACZ,IACAoI,EAAYrO,UACZqO,EAAYjI,SACZiI,EAAY5H,WACZ,IACA4H,EAAYvI,SAASgY,OACrB,IACA,GACJ9nB,KAAKglB,SACHzM,EAAUjR,KACViR,EAAUzN,OACTyN,EAAUG,WAAa,MACvBH,EAAU0N,QAAU,MACpB1N,EAAUE,SAAW,MACrBF,EAAU6D,cAAgB,KAC7Bpc,KAAKilB,SAAW3M,EACkB,iBAAvBA,EAAU7T,UACf6T,EAAU7T,UACV,KAAM,QAAO6T,EAAU7T,WACzB,EACN,MApGEzE,KAAKwkB,MAAQ,GAqGfxkB,KAAK2S,wBAA0BI,CACjC,EAGF,S,4JC5mBA,MAAMgV,UAAgCjlB,EAAA,EAUpC,WAAAjD,CACE2C,EACAsJ,EACAe,EACAxC,EACAiT,EACA0K,EACAC,GAEAloB,QAMAC,KAAKkoB,SAAW1lB,EAMhBxC,KAAKmV,YAAcrJ,EAMnB9L,KAAKmoB,QAAUtb,EAMf7M,KAAKooB,WAAa/d,EAMlBrK,KAAKqoB,mBAAqBhe,GACtB,QAAQnJ,KAAKsc,MAAMnT,EAAU,GAAIA,EAAU,IAAK,IAChD,EAMJrK,KAAK2X,cAAgB2F,EAMrBtd,KAAKsoB,kBAAoBN,EAMzBhoB,KAAKuoB,eAAiBN,EAMtBjoB,KAAKwoB,kBAAoB,KAMzBxoB,KAAKyoB,oBAAsB,KAM3BzoB,KAAK0oB,kBAAoB,KAMzB1oB,KAAK2oB,WAAa,KAMlB3oB,KAAK4oB,aAAe,KAMpB5oB,KAAK8R,OAAS,KAMd9R,KAAK6oB,cAAgB,EAMrB7oB,KAAK8oB,cAAgB,EAMrB9oB,KAAK+oB,aAAe,EAMpB/oB,KAAKgpB,cAAgB,EAMrBhpB,KAAKipB,cAAgB,EAMrBjpB,KAAKkpB,cAAgB,EAMrBlpB,KAAKmpB,sBAAuB,EAM5BnpB,KAAKopB,eAAiB,EAMtBppB,KAAKqpB,YAAc,CAAC,EAAG,GAMvBrpB,KAAKspB,YAAc,EAMnBtpB,KAAKwkB,MAAQ,GAMbxkB,KAAKykB,aAAe,EAMpBzkB,KAAK0kB,aAAe,EAMpB1kB,KAAK2kB,qBAAsB,EAM3B3kB,KAAK4kB,cAAgB,EAMrB5kB,KAAKupB,WAAa,CAAC,EAAG,GAMtBvpB,KAAK6kB,eAAiB,KAMtB7kB,KAAK8kB,iBAAmB,KAMxB9kB,KAAK+kB,WAAa,KAMlB/kB,KAAK0X,kBAAoB,GAMzB1X,KAAKwpB,oBAAqB,SAC5B,CASA,WAAAC,CAAY9c,EAAiBO,EAAQC,EAAKP,GACxC,IAAK5M,KAAK8R,OACR,OAEF,MAAM2K,GAAmB,EAAApS,EAAA,IACvBsC,EACAO,EACAC,EACAP,EACA5M,KAAKooB,WACLpoB,KAAK0X,mBAEDlV,EAAUxC,KAAKkoB,SACfwB,EAAiB1pB,KAAKwpB,mBACtBG,EAAQnnB,EAAQwI,YACI,GAAtBhL,KAAKgpB,gBACPxmB,EAAQwI,YAAc2e,EAAQ3pB,KAAKgpB,eAErC,IAAI3O,EAAWra,KAAKopB,eACY,IAA5BppB,KAAKqoB,qBACPhO,GAAYra,KAAK2X,eAEf3X,KAAKmpB,uBACP9O,GAAYra,KAAK2X,eAEnB,IAAK,IAAI7Q,EAAI,EAAGO,EAAKoV,EAAiBpW,OAAQS,EAAIO,EAAIP,GAAK,EAAG,CAC5D,MAAM8D,EAAI6R,EAAiB3V,GAAK9G,KAAK6oB,cAC/Bhe,EAAI4R,EAAiB3V,EAAI,GAAK9G,KAAK8oB,cACzC,GACe,IAAbzO,GACuB,GAAvBra,KAAKqpB,YAAY,IACM,GAAvBrpB,KAAKqpB,YAAY,GACjB,CACA,MAAMpP,EAAUrP,EAAI5K,KAAK6oB,cACnB3O,EAAUrP,EAAI7K,KAAK8oB,eACzB,QACEY,EACAzP,EACAC,EACA,EACA,EACAG,GACCJ,GACAC,GAEH1X,EAAQyI,aAAazD,MAAMhF,EAASknB,GACpClnB,EAAQ2I,UAAU8O,EAASC,GAC3B1X,EAAQsI,MAAM9K,KAAKqpB,YAAY,GAAIrpB,KAAKqpB,YAAY,IACpD7mB,EAAQ6I,UACNrL,KAAK8R,OACL9R,KAAKipB,cACLjpB,KAAKkpB,cACLlpB,KAAKspB,YACLtpB,KAAK+oB,cACJ/oB,KAAK6oB,eACL7oB,KAAK8oB,cACN9oB,KAAKspB,YACLtpB,KAAK+oB,cAEPvmB,EAAQyI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACtC,MACEzI,EAAQ6I,UACNrL,KAAK8R,OACL9R,KAAKipB,cACLjpB,KAAKkpB,cACLlpB,KAAKspB,YACLtpB,KAAK+oB,aACLne,EACAC,EACA7K,KAAKspB,YACLtpB,KAAK+oB,aAGX,CAC0B,GAAtB/oB,KAAKgpB,gBACPxmB,EAAQwI,YAAc2e,EAE1B,CASA,SAAAC,CAAUjd,EAAiBO,EAAQC,EAAKP,GACtC,IAAK5M,KAAK+kB,YAA6B,KAAf/kB,KAAKwkB,MAC3B,OAEExkB,KAAK6kB,gBACP7kB,KAAK6pB,qBAAqB7pB,KAAK6kB,gBAE7B7kB,KAAK8kB,kBACP9kB,KAAK8pB,uBAAuB9pB,KAAK8kB,kBAEnC9kB,KAAK+pB,qBAAqB/pB,KAAK+kB,YAC/B,MAAMtI,GAAmB,EAAApS,EAAA,IACvBsC,EACAO,EACAC,EACAP,EACA5M,KAAKooB,WACLpoB,KAAK0X,mBAEDlV,EAAUxC,KAAKkoB,SACrB,IAAI7N,EAAWra,KAAK4kB,cAOpB,IANgC,IAA5B5kB,KAAKqoB,qBACPhO,GAAYra,KAAK2X,eAEf3X,KAAK2kB,sBACPtK,GAAYra,KAAK2X,eAEZzK,EAASC,EAAKD,GAAUN,EAAQ,CACrC,MAAMhC,EAAI6R,EAAiBvP,GAAUlN,KAAKykB,aACpC5Z,EAAI4R,EAAiBvP,EAAS,GAAKlN,KAAK0kB,aAE/B,IAAbrK,GACsB,GAAtBra,KAAKupB,WAAW,IACM,GAAtBvpB,KAAKupB,WAAW,IAEhB/mB,EAAQ2I,UAAUP,EAAI5K,KAAKykB,aAAc5Z,EAAI7K,KAAK0kB,cAClDliB,EAAQwZ,OAAO3B,GACf7X,EAAQ2I,UAAUnL,KAAKykB,aAAczkB,KAAK0kB,cAC1CliB,EAAQsI,MAAM9K,KAAKupB,WAAW,GAAIvpB,KAAKupB,WAAW,IAC9CvpB,KAAK8kB,kBACPtiB,EAAQwnB,WAAWhqB,KAAKwkB,MAAO,EAAG,GAEhCxkB,KAAK6kB,gBACPriB,EAAQynB,SAASjqB,KAAKwkB,MAAO,EAAG,GAElChiB,EAAQyI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,KAEhCjL,KAAK8kB,kBACPtiB,EAAQwnB,WAAWhqB,KAAKwkB,MAAO5Z,EAAGC,GAEhC7K,KAAK6kB,gBACPriB,EAAQynB,SAASjqB,KAAKwkB,MAAO5Z,EAAGC,GAGtC,CACF,CAWA,aAAAqf,CAAcvd,EAAiBO,EAAQC,EAAKP,EAAQud,GAClD,MAAM3nB,EAAUxC,KAAKkoB,SACfzL,GAAmB,EAAApS,EAAA,IACvBsC,EACAO,EACAC,EACAP,EACA5M,KAAKooB,WACLpoB,KAAK0X,mBAEPlV,EAAQkX,OAAO+C,EAAiB,GAAIA,EAAiB,IACrD,IAAIpW,EAASoW,EAAiBpW,OAC1B8jB,IACF9jB,GAAU,GAEZ,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAQS,GAAK,EAC/BtE,EAAQmX,OAAO8C,EAAiB3V,GAAI2V,EAAiB3V,EAAI,IAK3D,OAHIqjB,GACF3nB,EAAQic,YAEHtR,CACT,CAUA,UAAAid,CAAWzd,EAAiBO,EAAQY,EAAMlB,GACxC,IAAK,IAAI9F,EAAI,EAAGO,EAAKyG,EAAKzH,OAAQS,EAAIO,IAAMP,EAC1CoG,EAASlN,KAAKkqB,cACZvd,EACAO,EACAY,EAAKhH,GACL8F,GACA,GAGJ,OAAOM,CACT,CASA,UAAA5J,CAAWN,GAST,GARIhD,KAAKsoB,oBACPtlB,EACEA,EAASqnB,oBACPrqB,KAAKsoB,kBACLtoB,KAAKuoB,kBAIN,QAAWvoB,KAAKmoB,QAASnlB,EAAS2a,aAAvC,CAGA,GAAI3d,KAAK2oB,YAAc3oB,KAAK4oB,aAAc,CACpC5oB,KAAK2oB,YACP3oB,KAAK6pB,qBAAqB7pB,KAAK2oB,YAE7B3oB,KAAK4oB,cACP5oB,KAAK8pB,uBAAuB9pB,KAAK4oB,cAEnC,MAAMnM,GAAmB,QACvBzZ,EACAhD,KAAKooB,WACLpoB,KAAK0X,mBAEDwG,EAAKzB,EAAiB,GAAKA,EAAiB,GAC5C0B,EAAK1B,EAAiB,GAAKA,EAAiB,GAC5CoH,EAAS3iB,KAAKmd,KAAKH,EAAKA,EAAKC,EAAKA,GAClC3b,EAAUxC,KAAKkoB,SACrB1lB,EAAQiX,YACRjX,EAAQ8b,IACN7B,EAAiB,GACjBA,EAAiB,GACjBoH,EACA,EACA,EAAI3iB,KAAKqd,IAEPve,KAAK2oB,YACPnmB,EAAQ4R,OAENpU,KAAK4oB,cACPpmB,EAAQ6R,QAEZ,CACmB,KAAfrU,KAAKwkB,OACPxkB,KAAK4pB,UAAU5mB,EAASsiB,YAAa,EAAG,EAAG,EAjC7C,CAmCF,CASA,QAAAjiB,CAAShD,GACPL,KAAKwE,mBAAmBnE,EAAMsmB,UAAWtmB,EAAMwmB,aAC/C7mB,KAAK2E,cAActE,EAAMkT,YACzBvT,KAAK8E,aAAazE,EAAMwnB,UAC1B,CAKA,YAAA5c,CAAaZ,GACXrK,KAAKooB,WAAa/d,CACpB,CASA,YAAAjH,CAAaJ,GACX,MAAMX,EAAOW,EAASkL,UACtB,OAAQ7L,GACN,IAAK,QACHrC,KAAKmE,UACkD,GAEvD,MACF,IAAK,aACHnE,KAAK2D,eACuD,GAE5D,MACF,IAAK,UACH3D,KAAKqE,YACoD,GAEzD,MACF,IAAK,aACHrE,KAAK+D,eACuD,GAE5D,MACF,IAAK,kBACH/D,KAAK6D,oBAC4D,GAIjE,MACF,IAAK,eACH7D,KAAKiE,iBACyD,GAE9D,MACF,IAAK,qBACHjE,KAAKyD,uBAC+D,GAIpE,MACF,IAAK,SACHzD,KAAKsD,WACmD,GAExD,MACF,SAEJ,CAYA,WAAAE,CAAYP,EAAS5C,GACnB,MAAM2C,EAAW3C,EAAMiqB,qBAANjqB,CAA4B4C,GACxCD,IAGLhD,KAAKqD,SAAShD,GACdL,KAAKoD,aAAaJ,GACpB,CAQA,sBAAAS,CAAuBT,GACrB,MAAMunB,EAAavnB,EAASwnB,qBAC5B,IAAK,IAAI1jB,EAAI,EAAGO,EAAKkjB,EAAWlkB,OAAQS,EAAIO,IAAMP,EAChD9G,KAAKoD,aAAamnB,EAAWzjB,GAEjC,CAQA,SAAA3C,CAAUnB,GACJhD,KAAKsoB,oBACPtlB,EACEA,EAASqnB,oBACPrqB,KAAKsoB,kBACLtoB,KAAKuoB,iBAIX,MAAM5b,EAAkB3J,EAAS2L,qBAC3B/B,EAAS5J,EAASmL,YACpBnO,KAAK8R,QACP9R,KAAKypB,YAAY9c,EAAiB,EAAGA,EAAgBtG,OAAQuG,GAE5C,KAAf5M,KAAKwkB,OACPxkB,KAAK4pB,UAAUjd,EAAiB,EAAGA,EAAgBtG,OAAQuG,EAE/D,CAQA,cAAA7I,CAAef,GACThD,KAAKsoB,oBACPtlB,EACEA,EAASqnB,oBACPrqB,KAAKsoB,kBACLtoB,KAAKuoB,iBAIX,MAAM5b,EAAkB3J,EAAS2L,qBAC3B/B,EAAS5J,EAASmL,YACpBnO,KAAK8R,QACP9R,KAAKypB,YAAY9c,EAAiB,EAAGA,EAAgBtG,OAAQuG,GAE5C,KAAf5M,KAAKwkB,OACPxkB,KAAK4pB,UAAUjd,EAAiB,EAAGA,EAAgBtG,OAAQuG,EAE/D,CAQA,cAAAjJ,CAAeX,GASb,GARIhD,KAAKsoB,oBACPtlB,EACEA,EAASqnB,oBACPrqB,KAAKsoB,kBACLtoB,KAAKuoB,kBAIN,QAAWvoB,KAAKmoB,QAASnlB,EAAS2a,aAAvC,CAGA,GAAI3d,KAAK4oB,aAAc,CACrB5oB,KAAK8pB,uBAAuB9pB,KAAK4oB,cACjC,MAAMpmB,EAAUxC,KAAKkoB,SACfvb,EAAkB3J,EAAS2L,qBACjCnM,EAAQiX,YACRzZ,KAAKkqB,cACHvd,EACA,EACAA,EAAgBtG,OAChBrD,EAASmL,aACT,GAEF3L,EAAQ6R,QACV,CACA,GAAmB,KAAfrU,KAAKwkB,MAAc,CACrB,MAAMiG,EAAeznB,EAASqiB,kBAC9BrlB,KAAK4pB,UAAUa,EAAc,EAAG,EAAG,EACrC,CAlBA,CAmBF,CAQA,mBAAA5mB,CAAoBb,GACdhD,KAAKsoB,oBACPtlB,EAEIA,EAASqnB,oBACPrqB,KAAKsoB,kBACLtoB,KAAKuoB,iBAIb,MAAMmC,EAAiB1nB,EAAS2a,YAChC,IAAK,QAAW3d,KAAKmoB,QAASuC,GAA9B,CAGA,GAAI1qB,KAAK4oB,aAAc,CACrB5oB,KAAK8pB,uBAAuB9pB,KAAK4oB,cACjC,MAAMpmB,EAAUxC,KAAKkoB,SACfvb,EAAkB3J,EAAS2L,qBACjC,IAAIzB,EAAS,EACb,MAAMY,EAAqC9K,EAAS4L,UAC9ChC,EAAS5J,EAASmL,YACxB3L,EAAQiX,YACR,IAAK,IAAI3S,EAAI,EAAGO,EAAKyG,EAAKzH,OAAQS,EAAIO,IAAMP,EAC1CoG,EAASlN,KAAKkqB,cACZvd,EACAO,EACAY,EAAKhH,GACL8F,GACA,GAGJpK,EAAQ6R,QACV,CACA,GAAmB,KAAfrU,KAAKwkB,MAAc,CACrB,MAAMmG,EAAgB3nB,EAASuiB,mBAC/BvlB,KAAK4pB,UAAUe,EAAe,EAAGA,EAActkB,OAAQ,EACzD,CAvBA,CAwBF,CAQA,WAAAhC,CAAYrB,GASV,GARIhD,KAAKsoB,oBACPtlB,EACEA,EAASqnB,oBACPrqB,KAAKsoB,kBACLtoB,KAAKuoB,kBAIN,QAAWvoB,KAAKmoB,QAASnlB,EAAS2a,aAAvC,CAGA,GAAI3d,KAAK4oB,cAAgB5oB,KAAK2oB,WAAY,CACpC3oB,KAAK2oB,YACP3oB,KAAK6pB,qBAAqB7pB,KAAK2oB,YAE7B3oB,KAAK4oB,cACP5oB,KAAK8pB,uBAAuB9pB,KAAK4oB,cAEnC,MAAMpmB,EAAUxC,KAAKkoB,SACrB1lB,EAAQiX,YACRzZ,KAAKoqB,WACHpnB,EAASsL,6BACT,EAC8BtL,EAAS4L,UACvC5L,EAASmL,aAEPnO,KAAK2oB,YACPnmB,EAAQ4R,OAENpU,KAAK4oB,cACPpmB,EAAQ6R,QAEZ,CACA,GAAmB,KAAfrU,KAAKwkB,MAAc,CACrB,MAAMoG,EAAoB5nB,EAASwiB,uBACnCxlB,KAAK4pB,UAAUgB,EAAmB,EAAG,EAAG,EAC1C,CA1BA,CA2BF,CAOA,gBAAA3mB,CAAiBjB,GASf,GARIhD,KAAKsoB,oBACPtlB,EACEA,EAASqnB,oBACPrqB,KAAKsoB,kBACLtoB,KAAKuoB,kBAIN,QAAWvoB,KAAKmoB,QAASnlB,EAAS2a,aAAvC,CAGA,GAAI3d,KAAK4oB,cAAgB5oB,KAAK2oB,WAAY,CACpC3oB,KAAK2oB,YACP3oB,KAAK6pB,qBAAqB7pB,KAAK2oB,YAE7B3oB,KAAK4oB,cACP5oB,KAAK8pB,uBAAuB9pB,KAAK4oB,cAEnC,MAAMpmB,EAAUxC,KAAKkoB,SACfvb,EAAkB3J,EAASsL,6BACjC,IAAIpB,EAAS,EACb,MAAMqB,EAAQvL,EAASwL,WACjB5B,EAAS5J,EAASmL,YACxB3L,EAAQiX,YACR,IAAK,IAAI3S,EAAI,EAAGO,EAAKkH,EAAMlI,OAAQS,EAAIO,IAAMP,EAAG,CAC9C,MAAMgH,EAAOS,EAAMzH,GACnBoG,EAASlN,KAAKoqB,WAAWzd,EAAiBO,EAAQY,EAAMlB,EAC1D,CACI5M,KAAK2oB,YACPnmB,EAAQ4R,OAENpU,KAAK4oB,cACPpmB,EAAQ6R,QAEZ,CACA,GAAmB,KAAfrU,KAAKwkB,MAAc,CACrB,MAAMqG,EAAqB7nB,EAAS0iB,wBACpC1lB,KAAK4pB,UAAUiB,EAAoB,EAAGA,EAAmBxkB,OAAQ,EACnE,CA5BA,CA6BF,CAMA,oBAAAwjB,CAAqBvR,GACnB,MAAM9V,EAAUxC,KAAKkoB,SACf4C,EAAmB9qB,KAAKwoB,kBACzBsC,EAMCA,EAAiBrmB,WAAa6T,EAAU7T,YAC1CqmB,EAAiBrmB,UAAY6T,EAAU7T,UACvCjC,EAAQiC,UAAY6T,EAAU7T,YAPhCjC,EAAQiC,UAAY6T,EAAU7T,UAC9BzE,KAAKwoB,kBAAoB,CACvB/jB,UAAW6T,EAAU7T,WAQ3B,CAMA,sBAAAqlB,CAAuBzR,GACrB,MAAM7V,EAAUxC,KAAKkoB,SACf6C,EAAqB/qB,KAAKyoB,oBAC3BsC,GAkBCA,EAAmBpb,SAAW0I,EAAY1I,UAC5Cob,EAAmBpb,QAAU0I,EAAY1I,QACzCnN,EAAQmN,QAAU0I,EAAY1I,UAE3B,QAAOob,EAAmBjb,SAAUuI,EAAYvI,WACnDtN,EAAQyZ,YACL8O,EAAmBjb,SAAWuI,EAAYvI,UAG3Cib,EAAmB9a,gBAAkBoI,EAAYpI,iBACnD8a,EAAmB9a,eAAiBoI,EAAYpI,eAChDzN,EAAQyN,eAAiBoI,EAAYpI,gBAEnC8a,EAAmB3a,UAAYiI,EAAYjI,WAC7C2a,EAAmB3a,SAAWiI,EAAYjI,SAC1C5N,EAAQ4N,SAAWiI,EAAYjI,UAE7B2a,EAAmB/gB,WAAaqO,EAAYrO,YAC9C+gB,EAAmB/gB,UAAYqO,EAAYrO,UAC3CxH,EAAQwH,UAAYqO,EAAYrO,WAE9B+gB,EAAmBta,YAAc4H,EAAY5H,aAC/Csa,EAAmBta,WAAa4H,EAAY5H,WAC5CjO,EAAQiO,WAAa4H,EAAY5H,YAE/Bsa,EAAmBrmB,aAAe2T,EAAY3T,cAChDqmB,EAAmBrmB,YAAc2T,EAAY3T,YAC7ClC,EAAQkC,YAAc2T,EAAY3T,eA5CpClC,EAAQmN,QAAU0I,EAAY1I,QAC9BnN,EAAQyZ,YAAY5D,EAAYvI,UAChCtN,EAAQyN,eAAiBoI,EAAYpI,eACrCzN,EAAQ4N,SAAWiI,EAAYjI,SAC/B5N,EAAQwH,UAAYqO,EAAYrO,UAChCxH,EAAQiO,WAAa4H,EAAY5H,WACjCjO,EAAQkC,YAAc2T,EAAY3T,YAClC1E,KAAKyoB,oBAAsB,CACzB9Y,QAAS0I,EAAY1I,QACrBG,SAAUuI,EAAYvI,SACtBG,eAAgBoI,EAAYpI,eAC5BG,SAAUiI,EAAYjI,SACtBpG,UAAWqO,EAAYrO,UACvByG,WAAY4H,EAAY5H,WACxB/L,YAAa2T,EAAY3T,aAiC/B,CAMA,oBAAAqlB,CAAqBxR,GACnB,MAAM/V,EAAUxC,KAAKkoB,SACf8C,EAAmBhrB,KAAK0oB,kBACxBhQ,EAAYH,EAAUG,UACxBH,EAAUG,UACV,KACCsS,GAUCA,EAAiB1jB,MAAQiR,EAAUjR,OACrC0jB,EAAiB1jB,KAAOiR,EAAUjR,KAClC9E,EAAQ8E,KAAOiR,EAAUjR,MAEvB0jB,EAAiBtS,WAAaA,IAChCsS,EAAiBtS,UAAYA,EAC7BlW,EAAQkW,UAAYA,GAElBsS,EAAiB5O,cAAgB7D,EAAU6D,eAC7C4O,EAAiB5O,aAAe7D,EAAU6D,aAC1C5Z,EAAQ4Z,aAAe7D,EAAU6D,gBAnBnC5Z,EAAQ8E,KAAOiR,EAAUjR,KACzB9E,EAAQkW,UAAYA,EACpBlW,EAAQ4Z,aAAe7D,EAAU6D,aACjCpc,KAAK0oB,kBAAoB,CACvBphB,KAAMiR,EAAUjR,KAChBoR,UAAWA,EACX0D,aAAc7D,EAAU6D,cAgB9B,CASA,kBAAA5X,CAAmBC,EAAWC,GAC5B,GAAKD,EAEE,CACL,MAAM6K,EAAiB7K,EAAU8K,WACjCvP,KAAK2oB,WAAa,CAChBlkB,WAAW,OACT6K,GAAkC,MAGxC,MAREtP,KAAK2oB,WAAa,KASpB,GAAKjkB,EAEE,CACL,MAAM8K,EAAmB9K,EAAY6K,WAC/BE,EAAqB/K,EAAYgL,aACjCE,EAAsBlL,EAAYmL,cAClCE,EAA4BrL,EAAYsL,oBACxCE,EAAsBxL,EAAYyL,cAClCE,EAAmB3L,EAAY4L,WAC/BC,EAAwB7L,EAAY8L,gBACpCV,EAAWF,GAEb,KACJ5P,KAAK4oB,aAAe,CAClBjZ,aACyBjI,IAAvB+H,EACIA,EACA,KACNK,SACuB,IAArB9P,KAAKmV,YACDrF,EACAA,EAAStO,KAAK0N,GAAMA,EAAIlP,KAAKmV,cACnClF,gBACGF,GAEG,MAAyB/P,KAAKmV,YACpC/E,cAC0B1I,IAAxBwI,EACIA,EACA,KACNlG,gBACwBtC,IAArB2I,EACGA,EACA,MAAoBrQ,KAAKmV,YAC/B1E,gBAC4B/I,IAA1B6I,EACIA,EACA,KACN7L,aAAa,OACX8K,GAAsC,MAG5C,MAzCExP,KAAK4oB,aAAe,IA0CxB,CAQA,aAAAjkB,CAAcC,GACZ,IAAIqmB,EACJ,IAAKrmB,KAAgBqmB,EAAYrmB,EAAWsO,WAE1C,YADAlT,KAAK8R,OAAS,MAGhB,MAAMoZ,EAAkBtmB,EAAWyO,cAAcrT,KAAKmV,aAChDgW,EAAcvmB,EAAWqO,YACzBmY,EAAcxmB,EAAWwO,YAC/BpT,KAAK8R,OAASlN,EAAW2O,SAASvT,KAAKmV,aACvCnV,KAAK6oB,cAAgBsC,EAAY,GAAKD,EACtClrB,KAAK8oB,cAAgBqC,EAAY,GAAKD,EACtClrB,KAAK+oB,aAAekC,EAAU,GAAKC,EACnClrB,KAAKgpB,cAAgBpkB,EAAW4O,aAChCxT,KAAKipB,cAAgBmC,EAAY,GACjCprB,KAAKkpB,cAAgBkC,EAAY,GACjCprB,KAAKmpB,qBAAuBvkB,EAAW6O,oBACvCzT,KAAKopB,eAAiBxkB,EAAW8O,cACjC,MAAM2X,EAAazmB,EAAW+O,gBAC9B3T,KAAKqpB,YAAc,CAChBgC,EAAW,GAAKrrB,KAAKmV,YAAe+V,EACpCG,EAAW,GAAKrrB,KAAKmV,YAAe+V,GAEvClrB,KAAKspB,YAAc2B,EAAU,GAAKC,CACpC,CAQA,YAAApmB,CAAaC,GACX,GAAKA,EAEE,CACL,MAAM2hB,EAAgB3hB,EAAU4hB,UAChC,GAAKD,EAEE,CACL,MAAM4E,EAAqB5E,EAAcnX,WACzCvP,KAAK6kB,eAAiB,CACpBpgB,WAAW,OACT6mB,GAA0C,MAGhD,MAREtrB,KAAK6kB,eAAiB,KASxB,MAAM+B,EAAkB7hB,EAAU8hB,YAClC,GAAKD,EAEE,CACL,MAAM2E,EAAuB3E,EAAgBrX,WACvCic,EAAyB5E,EAAgBlX,aACzC+b,EAA0B7E,EAAgB/W,cAC1C6b,EACJ9E,EAAgB5W,oBACZ2b,EAA0B/E,EAAgBzW,cAC1Cyb,EAAuBhF,EAAgBtW,WACvCub,EAA4BjF,EAAgBpW,gBAClDxQ,KAAK8kB,iBAAmB,CACtBnV,aAC6BjI,IAA3B8jB,EACIA,EACA,KACN1b,SAAU2b,GAEN,KACJxb,eAAgByb,GAEZ,KACJtb,cAC8B1I,IAA5BikB,EACIA,EACA,KACN3hB,eAC2BtC,IAAzBkkB,EACIA,EACA,KACNnb,gBACgC/I,IAA9BmkB,EACIA,EACA,KACNnnB,aAAa,OACX6mB,GAA8C,MAGpD,MArCEvrB,KAAK8kB,iBAAmB,KAsC1B,MAAMgH,EAAW/mB,EAAU+hB,UACrB/H,EAAcha,EAAU0iB,aACxBzI,EAAcja,EAAU2iB,aACxBC,EAAqB5iB,EAAU0O,oBAC/BmU,EAAe7iB,EAAU2O,cACzBuM,EAAYlb,EAAU4O,gBACtBoY,EAAWhnB,EAAU8iB,UACrBmE,EAAgBjnB,EAAUmiB,eAC1B+E,EAAmBlnB,EAAUsiB,kBACnCrnB,KAAK+kB,WAAa,CAChBzd,UAAmBI,IAAbokB,EAAyBA,EAAW,KAC1CpT,eACoBhR,IAAlBskB,EAA8BA,EAAgB,KAChD5P,kBACuB1U,IAArBukB,EACIA,EACA,MAERjsB,KAAKwkB,WACU9c,IAAbqkB,EACIvgB,MAAMC,QAAQsgB,GACZA,EAASziB,QAAO,CAAC6N,EAAK+U,EAAGplB,IAAOqQ,GAAOrQ,EAAI,EAAI,IAAMolB,IAAI,IACzDH,EACF,GACN/rB,KAAKykB,kBACa/c,IAAhBqX,EAA4B/e,KAAKmV,YAAc4J,EAAc,EAC/D/e,KAAK0kB,kBACahd,IAAhBsX,EAA4Bhf,KAAKmV,YAAc6J,EAAc,EAC/Dhf,KAAK2kB,yBACoBjd,IAAvBigB,GAAmCA,EACrC3nB,KAAK4kB,mBAAiCld,IAAjBkgB,EAA6BA,EAAe,EACjE5nB,KAAKupB,WAAa,CAChBvpB,KAAKmV,YAAc8K,EAAU,GAC7BjgB,KAAKmV,YAAc8K,EAAU,GAEjC,MAxFEjgB,KAAKwkB,MAAQ,EAyFjB,EAGF,U,0BC9oCO,MAAM2H,EAAwB,GAgB9B,SAASC,EACdlmB,EACAmmB,EACAC,EACAC,EACA1f,EACAhB,EACAwO,GAEA,MAAMhZ,EAAQ6E,EAAK,GAAKimB,EAClB5qB,EAAS2E,EAAK,GAAKimB,EACnB3pB,GAAU,QAAsBnB,EAAOE,GAC7CiB,EAAQgqB,uBAAwB,EAChC,MAAM5Q,EAASpZ,EAAQoZ,OACjB1Y,EAAW,IAAI,EACnBV,EACA2pB,EACAtf,EACA,KACAwN,GAEIoS,EAAeH,EAASjmB,OAExBqmB,EAAcxrB,KAAK2X,MAAM,SAAwB4T,GACjDE,EAAmB,CAAC,EAC1B,IAAK,IAAI7lB,EAAI,EAAGA,GAAK2lB,IAAgB3lB,EAAG,CACtC,MAAM7D,EAAUqpB,EAASxlB,EAAI,GACvB8lB,EAAuB3pB,EAAQ4pB,oBAAsBN,EAC3D,IAAKK,EACH,SAEF,IAAIE,EAASF,EAAqB3pB,EAAS4I,GAC3C,IAAKihB,EACH,SAEGthB,MAAMC,QAAQqhB,KACjBA,EAAS,CAACA,IAEZ,MAAMrN,EAAQ3Y,EAAI4lB,EACZK,EAAQtN,EAAM1J,SAAS,IAAIiX,SAAS,EAAG,UAC7C,IAAK,IAAI1J,EAAI,EAAGK,EAAKmJ,EAAOzmB,OAAQid,EAAIK,IAAML,EAAG,CAC/C,MAAM2J,EAAgBH,EAAOxJ,GACvBtgB,EAAWiqB,EAAc3C,qBAAd2C,CAAoChqB,GACrD,IAAKD,KAAa,QAAW6J,EAAQ7J,EAAS2a,aAC5C,SAEF,MAAMtd,EAAQ4sB,EAAcC,QACtB9Y,EAAO/T,EAAMsmB,UACfvS,GACFA,EAAK+Y,SAASJ,GAEhB,MAAM1Y,EAAShU,EAAMwmB,YACjBxS,IACFA,EAAO8Y,SAASJ,GAChB1Y,EAAO4H,YAAY,OAErB5b,EAAM+sB,aAAQ1lB,GACd,MAAMqV,EAAQkQ,EAAc1Z,WAC5B,GAAIwJ,EAAO,CACT,MAAMsQ,EAAUtQ,EAAMuQ,eACtB,IAAKD,EACH,SAGF,MAAME,GAAa,QACjBF,EAAQ,GACRA,EAAQ,QACR3lB,EACA,CAACiiB,OAAO,IAEJ6D,EAAMD,EAAW3R,OACvB2R,EAAW9oB,UAAYsoB,EACvBQ,EAAWE,SAAS,EAAG,EAAGD,EAAInsB,MAAOmsB,EAAIjsB,QACzClB,EAAMqtB,SACJ,IAAIC,EAAA,WAAK,CACPH,IAAKA,EACLH,QAASA,EACTra,OAAQ+J,EAAM9J,YACd2a,aAAc,SACdC,aAAc,SACd3gB,OAAQ6P,EAAM3J,YACd9I,QAAS,EACTpE,KAAM6W,EAAM7J,UACZpI,MAAOiS,EAAM+Q,WACbzT,SAAU0C,EAAMrJ,cAChBkL,eAAgB7B,EAAMtJ,sBAG5B,CACA,MAAMmC,EAASvV,EAAM0tB,aAAe,EACpC,IAAIC,EAAiBrB,EAAiB/W,GACjCoY,IACHA,EAAiB,CAAC,EAClBrB,EAAiB/W,GAAUoY,EAC3BA,EAAe,WAAa,GAC5BA,EAAe,UAAY,GAC3BA,EAAe,cAAgB,GAC/BA,EAAe,SAAW,IAE5B,MAAM3rB,EAAOW,EAASkL,UACtB,GAAa,uBAAT7L,EAA+B,CACjC,MAAMkoB,EAC8D,EAEhE0D,8BACJ,IAAK,IAAInnB,EAAI,EAAGO,EAAKkjB,EAAWlkB,OAAQS,EAAIO,IAAMP,EAAG,CACnD,MAAM9D,EAAWunB,EAAWzjB,GAC5BknB,EAAehrB,EAASkL,UAAUggB,QAAQ,QAAS,KAAKjkB,KACtDjH,EACA3C,EAEJ,CACF,MACE2tB,EAAe3rB,EAAK6rB,QAAQ,QAAS,KAAKjkB,KAAKjH,EAAU3C,EAE7D,CACF,CAEA,MAAM8tB,EAAa/K,OAAOC,KAAKsJ,GAAkBnrB,IAAIiH,QAAQ+a,KAAK,MAClE,IAAK,IAAI1c,EAAI,EAAGO,EAAK8mB,EAAW9nB,OAAQS,EAAIO,IAAMP,EAAG,CACnD,MAAMknB,EAAiBrB,EAAiBwB,EAAWrnB,IACnD,IAAK,MAAMzE,KAAQ2rB,EAAgB,CACjC,MAAMI,EAAeJ,EAAe3rB,GACpC,IAAK,IAAIihB,EAAI,EAAGK,EAAKyK,EAAa/nB,OAAQid,EAAIK,EAAIL,GAAK,EAAG,CACxDpgB,EAASG,SAAS+qB,EAAa9K,EAAI,IACnC,IAAK,IAAI+K,EAAI,EAAGC,EAAKjC,EAAWhmB,OAAQgoB,EAAIC,IAAMD,EAChDnrB,EAAS+H,aAAaohB,EAAWgC,IACjCnrB,EAASE,aAAagrB,EAAa9K,GAEvC,CACF,CACF,CACA,OAAO9gB,EAAQugB,aAAa,EAAG,EAAGnH,EAAOva,MAAOua,EAAOra,OACzD,CAYO,SAASgtB,EAAUC,EAAOlC,EAAUxJ,GACzC,MAAM2L,EAAiB,GACvB,GAAI3L,EAAW,CACb,MAAMlY,EAAI1J,KAAK2X,MAAM3X,KAAK0Z,MAAM4T,EAAM,IAAMrC,GACtCthB,EAAI3J,KAAK2X,MAAM3X,KAAK0Z,MAAM4T,EAAM,IAAMrC,GAItC1M,EAGJ,IAFC,QAAM7U,EAAG,EAAGkY,EAAUzhB,MAAQ,IAC7B,QAAMwJ,EAAG,EAAGiY,EAAUvhB,OAAS,GAAKuhB,EAAUzhB,OAE5C+c,EAAI0E,EAAUE,KAAKvD,GACnBiP,EAAI5L,EAAUE,KAAKvD,EAAQ,GAC3BkP,EAAI7L,EAAUE,KAAKvD,EAAQ,GAC3B3Y,EAAI6nB,EAAI,KAAOD,EAAI,IAAMtQ,GACzBsO,EAAcxrB,KAAK2X,MAAM,SAAwByT,EAASjmB,QAC5DS,GAAKA,EAAI4lB,IAAgB,GAC3B+B,EAAexkB,KAAKqiB,EAASxlB,EAAI4lB,EAAc,GAEnD,CAEA,OAAO+B,CACT,C","sources":["webpack://@openeo/web-editor/./node_modules/ol/pointer/EventType.js","webpack://@openeo/web-editor/./node_modules/ol/render/Box.js","webpack://@openeo/web-editor/./node_modules/ol/render/Event.js","webpack://@openeo/web-editor/./node_modules/ol/render/EventType.js","webpack://@openeo/web-editor/./node_modules/ol/render/VectorContext.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Builder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Executor.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Instruction.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/TextBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Immediate.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/hitdetect.js"],"sourcesContent":["/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n"],"names":["POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","RenderBox","constructor","className","super","this","geometry_","element_","document","createElement","style","position","pointerEvents","map_","startPixel_","endPixel_","disposeInternal","setMap","render_","startPixel","endPixel","px","left","Math","min","top","width","abs","height","map","getOverlayContainer","removeChild","appendChild","setPixels","createOrUpdateGeometry","pixels","coordinates","getCoordinateFromPixelInternal","slice","setCoordinates","getGeometry","RenderEvent","type","inversePixelTransform","frameState","context","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","VectorContext","drawCustom","geometry","feature","renderer","hitDetectionRenderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","retries","size","referenceFonts","len","length","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","i","referenceFont","measureTextWidth","check","done","fonts","getKeys","ii","font","get","apply","split","undefined","set","clearInterval","fontSpec","families","family","key","weight","setInterval","measureTextHeight","measureElement","metrics","measureText","lineHeight","isNaN","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","body","offsetHeight","measureAndCacheTextWidth","cache","reduce","prev","curr","max","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","push","currentWidth","currentHeight","drawImageOrLabel","transform","opacity","labelOrImage","originX","originY","w","h","x","y","scale","save","globalAlpha","setTransform","contextInstructions","translate","executeLabelInstructions","drawImage","restore","label","Array","isArray","CanvasBuilder","tolerance","maxExtent","resolution","pixelRatio","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","offset","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","INTERSECTING","drawCustomCoordinates_","ends","builderEnds","builderEnd","beginGeometry","getType","getStride","builderBegin","builderEndss","getOrientedFlatCoordinates","endss","getEndss","myEnds","CUSTOM","getFlatCoordinates","getEnds","endGeometry","BEGIN_GEOMETRY","finish","reverseHitDetectionInstructions","reverse","n","instruction","begin","END_GEOMETRY","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","image_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","ceil","sharedData","anchor","getAnchor","getSize","origin","getOrigin","getPixelRatio","getHitDetectionImage","getImage","getOpacity","getRotateWithView","getRotation","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","fill","stroke","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","toString","replays","replay","Constructor","tmpExtent","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","String","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","justify","textAlign","strokeWidth","renderWidth","floor","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","prototype","replayTextBackground_","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","rotation","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","round","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","value","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","canvas","strokePadding","intersects","repeatSize","rotate","setLineDash","drawLabelWithPointPlacement_","baseline","textBaseline","execute_","featureCallback","hitExtent","declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","image","d","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","atan2","batchSize","currentGeometry","getExtent","BEGIN_PATH","NaN","x1","y1","x2","y2","dx","dy","r","sqrt","arc","PI","CLOSE_PATH","closePath","fn","coords","rotateWithView","declutterMode","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","args","insert","imageArgs","imageDeclutterBox","index","collides","DRAW_CHARS","overflow","maxAngle","measurePixelRatio","offsetY","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","startM","parts","drawChars","c","cc","chars","part","load","result","FILL","STROKE","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","renderBuffer","overlaps_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","willReadFrequently","clearRect","indexes","getPixelIndexArray","imageData","getImageData","data","includes","idx","zs","Object","keys","j","executor","sort","isEmpty","builderTypes","jj","circlePixelIndexArrayCache","radius","maxDistanceSq","distances","distanceSq","distance","pixelIndex","Instruction","beginPathInstruction","closePathInstruction","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","placement","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","filter","keep","saveTextStates_","p0","p","repeat","flatOffset","o","oo","chunk","chunkBegin","chunkEnd","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","join","CanvasImmediateRenderer","squaredTolerance","userTransform","context_","extent_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simplifyTransformed","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","t","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","styleFunction","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","styles","color","padStart","originalStyle","clone","setColor","setText","imgSize","getImageSize","imgContext","img","fillRect","setImage","Icon","anchorXUnits","anchorYUnits","getScale","getZIndex","byGeometryType","getGeometriesArrayRecursive","replace","zIndexKeys","geomAndStyle","k","kk","hitDetect","pixel","resultFeatures","g","b"],"sourceRoot":""}
{"version":3,"file":"js/5640.be796ccf.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/ol/render/webgl/constants.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Executor.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Layer.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Builder.js","webpack://@openeo/web-editor/./node_modules/ol/render/webgl/utils.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/TextBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Map.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Composite.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Immediate.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/hitdetect.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Instruction.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/style.js"],"sourcesContent":["/**\n * @module ol/render/webgl/constants\n */\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_POLYGON_BUFFERS: 'GENERATE_POLYGON_BUFFERS',\n  GENERATE_POINT_BUFFERS: 'GENERATE_POINT_BUFFERS',\n  GENERATE_LINE_STRING_BUFFERS: 'GENERATE_LINE_STRING_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {number} id Message id; will be used both in request and response as a means of identification\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions render instructions raw binary buffer.\n * @property {number} [customAttributesSize] Amount of hit detection + custom attributes count in the render instructions.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {import(\"../../transform\").Transform} [renderInstructionsTransform] Transformation matrix used to project the instructions coordinates\n */\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/webgl/utils\n */\nimport earcut from 'earcut';\nimport {apply as applyTransform} from '../../transform.js';\nimport {clamp} from '../../math.js';\n\nexport const LINESTRING_ANGLE_COSINE_CUTOFF = 0.985;\n\n/** @type {Array<number>} */\nconst tmpArray_ = [];\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\n/**\n * @param {Float32Array} buffer Buffer\n * @param {number} pos Position\n * @param {number} x X\n * @param {number} y Y\n * @param {number} index Index\n */\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesSize,\n  bufferPositions,\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesSize;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesSize;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Pushes a single quad to form a line segment; also includes a computation for the join angles with previous and next\n * segment, in order to be able to offset the vertices correctly in the shader.\n * Join angles are between 0 and 2PI.\n * This also computes the length of the current segment and the sum of the join angle tangents in order\n * to store this information on each subsequent segment along the line. This is necessary to correctly render dashes\n * and symbols along the line.\n *\n *   pB (before)                          pA (after)\n *    X             negative             X\n *     \\             offset             /\n *      \\                              /\n *       \\   join              join   /\n *        \\ angle 0          angle 1 /\n *         \\←---                ←---/      positive\n *          \\   ←--          ←--   /        offset\n *           \\     ↑       ↓      /\n *            X────┴───────┴─────X\n *            p0                  p1\n *\n * @param {Float32Array} instructions Array of render instructions for lines.s\n * @param {number} segmentStartIndex Index of the segment start point from which render instructions will be read.\n * @param {number} segmentEndIndex Index of the segment end point from which render instructions will be read.\n * @param {number|null} beforeSegmentIndex Index of the point right before the segment (null if none, e.g this is a line start)\n * @param {number|null} afterSegmentIndex Index of the point right after the segment (null if none, e.g this is a line end)\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {Array<number>} customAttributes Array of custom attributes value\n * @param {import('../../transform.js').Transform} toWorldTransform Transform matrix used to obtain world coordinates from instructions\n * @param {number} currentLength Cumulated length of segments processed so far\n * @param {number} currentAngleTangentSum Cumulated tangents of the join angles processed so far\n * @return {{length: number, angle: number}} Cumulated length with the newly processed segment (in world units), new sum of the join angle tangents\n * @private\n */\nexport function writeLineSegmentToBuffers(\n  instructions,\n  segmentStartIndex,\n  segmentEndIndex,\n  beforeSegmentIndex,\n  afterSegmentIndex,\n  vertexArray,\n  indexArray,\n  customAttributes,\n  toWorldTransform,\n  currentLength,\n  currentAngleTangentSum,\n) {\n  // compute the stride to determine how many vertices were already pushed\n  const baseVertexAttrsCount = 8; // base attributes: x0, y0, x1, y1, angle0, angle1, distance, params\n  const stride = baseVertexAttrsCount + customAttributes.length;\n  const baseIndex = vertexArray.length / stride;\n\n  // The segment is composed of two positions called P0[x0, y0] and P1[x1, y1]\n  // Depending on whether there are points before and after the segment, its final shape\n  // will be different\n  const p0 = [\n    instructions[segmentStartIndex + 0],\n    instructions[segmentStartIndex + 1],\n  ];\n  const p1 = [instructions[segmentEndIndex], instructions[segmentEndIndex + 1]];\n\n  // to compute join angles we need to reproject coordinates back in world units\n  const p0world = applyTransform(toWorldTransform, [...p0]);\n  const p1world = applyTransform(toWorldTransform, [...p1]);\n\n  /**\n   * Compute the angle between p0pA and p0pB\n   * @param {import(\"../../coordinate.js\").Coordinate} p0 Point 0\n   * @param {import(\"../../coordinate.js\").Coordinate} pA Point A\n   * @param {import(\"../../coordinate.js\").Coordinate} pB Point B\n   * @return {number} a value in [0, 2PI]\n   */\n  function angleBetween(p0, pA, pB) {\n    const lenA = Math.sqrt(\n      (pA[0] - p0[0]) * (pA[0] - p0[0]) + (pA[1] - p0[1]) * (pA[1] - p0[1]),\n    );\n    const tangentA = [(pA[0] - p0[0]) / lenA, (pA[1] - p0[1]) / lenA];\n    const orthoA = [-tangentA[1], tangentA[0]];\n    const lenB = Math.sqrt(\n      (pB[0] - p0[0]) * (pB[0] - p0[0]) + (pB[1] - p0[1]) * (pB[1] - p0[1]),\n    );\n    const tangentB = [(pB[0] - p0[0]) / lenB, (pB[1] - p0[1]) / lenB];\n\n    // this angle can be clockwise or anticlockwise; hence the computation afterwards\n    const angle =\n      lenA === 0 || lenB === 0\n        ? 0\n        : Math.acos(\n            clamp(tangentB[0] * tangentA[0] + tangentB[1] * tangentA[1], -1, 1),\n          );\n    const isClockwise = tangentB[0] * orthoA[0] + tangentB[1] * orthoA[1] > 0;\n    return !isClockwise ? Math.PI * 2 - angle : angle;\n  }\n\n  // a negative angle indicates a line cap\n  let angle0 = -1;\n  let angle1 = -1;\n  let newAngleTangentSum = currentAngleTangentSum;\n\n  const joinBefore = beforeSegmentIndex !== null;\n  const joinAfter = afterSegmentIndex !== null;\n\n  // add vertices and adapt offsets for P0 in case of join\n  if (joinBefore) {\n    // B for before\n    const pB = [\n      instructions[beforeSegmentIndex],\n      instructions[beforeSegmentIndex + 1],\n    ];\n    const pBworld = applyTransform(toWorldTransform, [...pB]);\n    angle0 = angleBetween(p0world, p1world, pBworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle0) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((angle0 - Math.PI) / 2);\n    }\n  }\n  // adapt offsets for P1 in case of join; add to angle sum\n  if (joinAfter) {\n    // A for after\n    const pA = [\n      instructions[afterSegmentIndex],\n      instructions[afterSegmentIndex + 1],\n    ];\n    const pAworld = applyTransform(toWorldTransform, [...pA]);\n    angle1 = angleBetween(p1world, p0world, pAworld);\n\n    // only add to the sum if the angle isn't too close to 0 or 2PI\n    if (Math.cos(angle1) <= LINESTRING_ANGLE_COSINE_CUTOFF) {\n      newAngleTangentSum += Math.tan((Math.PI - angle1) / 2);\n    }\n  }\n\n  /**\n   * @param {number} vertexIndex From 0 to 3, indicating position in the quad\n   * @param {number} angleSum Sum of the join angles encountered so far (used to compute distance offset\n   * @return {number} A float value containing both information\n   */\n  function computeParameters(vertexIndex, angleSum) {\n    if (angleSum === 0) {\n      return vertexIndex * 10000;\n    }\n    return Math.sign(angleSum) * (vertexIndex * 10000 + Math.abs(angleSum));\n  }\n\n  // add main segment triangles\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(0, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(1, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(2, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  vertexArray.push(\n    p0[0],\n    p0[1],\n    p1[0],\n    p1[1],\n    angle0,\n    angle1,\n    currentLength,\n    computeParameters(3, currentAngleTangentSum),\n  );\n  vertexArray.push(...customAttributes);\n\n  indexArray.push(\n    baseIndex,\n    baseIndex + 1,\n    baseIndex + 2,\n    baseIndex + 1,\n    baseIndex + 3,\n    baseIndex + 2,\n  );\n\n  return {\n    length:\n      currentLength +\n      Math.sqrt(\n        (p1world[0] - p0world[0]) * (p1world[0] - p0world[0]) +\n          (p1world[1] - p0world[1]) * (p1world[1] - p0world[1]),\n      ),\n    angle: newAngleTangentSum,\n  };\n}\n\n/**\n * Pushes several triangles to form a polygon, including holes\n * @param {Float32Array} instructions Array of render instructions for lines.\n * @param {number} polygonStartIndex Index of the polygon start point from which render instructions will be read.\n * @param {Array<number>} vertexArray Array containing vertices.\n * @param {Array<number>} indexArray Array containing indices.\n * @param {number} customAttributesSize Amount of custom attributes for each element.\n * @return {number} Next polygon instructions index\n * @private\n */\nexport function writePolygonTrianglesToBuffers(\n  instructions,\n  polygonStartIndex,\n  vertexArray,\n  indexArray,\n  customAttributesSize,\n) {\n  const instructionsPerVertex = 2; // x, y\n  const attributesPerVertex = 2 + customAttributesSize;\n  let instructionsIndex = polygonStartIndex;\n  const customAttributes = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + customAttributesSize,\n  );\n  instructionsIndex += customAttributesSize;\n  const ringsCount = instructions[instructionsIndex++];\n  let verticesCount = 0;\n  const holes = new Array(ringsCount - 1);\n  for (let i = 0; i < ringsCount; i++) {\n    verticesCount += instructions[instructionsIndex++];\n    if (i < ringsCount - 1) {\n      holes[i] = verticesCount;\n    }\n  }\n  const flatCoords = instructions.slice(\n    instructionsIndex,\n    instructionsIndex + verticesCount * instructionsPerVertex,\n  );\n\n  // pushing to vertices and indices!! this is where the magic happens\n  const result = earcut(flatCoords, holes, instructionsPerVertex);\n  for (let i = 0; i < result.length; i++) {\n    indexArray.push(result[i] + vertexArray.length / attributesPerVertex);\n  }\n  for (let i = 0; i < flatCoords.length; i += 2) {\n    vertexArray.push(flatCoords[i], flatCoords[i + 1], ...customAttributes);\n  }\n\n  return instructionsIndex + verticesCount * instructionsPerVertex;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, array) {\n  array = array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n"],"names":["WebGLWorkerMessageType","GENERATE_POLYGON_BUFFERS","GENERATE_POINT_BUFFERS","GENERATE_LINE_STRING_BUFFERS","tmpExtent","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","String","fromCharCode","horizontalTextAlign","text","align","test","createTextChunks","acc","line","i","push","Executor","constructor","resolution","pixelRatio","overlaps","instructions","deferredRendering","this","alignAndScaleFill_","coordinates","coordinateCache_","renderedTransform_","hitDetectionInstructions","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","zIndexContext_","ZIndexContext","getZIndexContext","createLabel","textKey","fillKey","strokeKey","key","strokeState","fillState","textState","scale","textIsArray","Array","isArray","justify","textAlign","strokeWidth","lineWidth","chunks","split","reduce","width","height","widths","heights","lineWidths","renderWidth","contextInstructions","w","h","label","Math","floor","ceil","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","fillStyle","leftRight","x","strokeInstructions","fillInstructions","previousFont","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","ii","length","font","max","fillStrokeArgs","prototype","apply","replayTextBackground_","context","fillInstruction","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","stroke","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","rotation","snapToPixel","padding","fillStroke","feature","y","boxW","boxH","boxX","boxY","transform","min","round","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","value","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","opacity","box","strokePadding","intersects","alignAndScale","origin","repeatSize","save","translate","rotate","fill","restore","instruction","setLineDash","drawLabelWithPointPlacement_","baseline","textBaseline","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","dd","declutterMode","prevX","prevY","roundX","roundY","image","d","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","atan2","state","batchSize","currentGeometry","type","BEGIN_GEOMETRY","getGeometry","undefined","getExtent","zIndex","BEGIN_PATH","NaN","CIRCLE","x1","y1","x2","y2","dx","dy","r","sqrt","arc","PI","CLOSE_PATH","closePath","CUSTOM","geometry","renderer","fn","coords","DRAW_IMAGE","rotateWithView","declutterImageWithText","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","args","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","index","imageDeclutter","collides","render","insert","DRAW_CHARS","begin","end","overflow","maxAngle","measurePixelRatio","offsetY","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","abs","startM","parts","drawChars","c","cc","chars","part","load","map","END_GEOMETRY","result","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","execute","executeHitDetection","canvas","ALL","DECLUTTER","NON_DECLUTTER","filter","builderType","includes","ExecutorGroup","maxExtent","allInstructions","renderBuffer","maxExtent_","overlaps_","pixelRatio_","resolution_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","willReadFrequently","clearRect","indexes","getPixelIndexArray","imageData","getImageData","data","idx","zs","Object","keys","Number","j","executor","sort","zIndexKey","toString","isEmpty","targetContext","builderTypes","maxBuilderTypes","jj","replays","reverse","replay","getContext","requireClip","pushFunction","offset","getDeferredZIndexContexts","getRenderedContext","renderDeferred","deferredZIndexContexts","forEach","draw","clear","circlePixelIndexArrayCache","radius","size","maxDistanceSq","distances","distanceSq","distance","pixelIndex","LayerRenderer","layer","super","ready","boundHandleImageChange_","handleImageChange_","bind","layer_","getFeatures","pixel","getData","prepareFrame","frameState","renderFrame","target","loadedTileCallback","tiles","zoom","tile","tileCoord","createLoadedTileFinder","source","projection","tileRange","forEachLoadedTile","matches","getLayer","handleFontsChanged","event","getState","LOADED","ERROR","renderIfReadyAndVisible","loadImage","imageState","addEventListener","CHANGE","IDLE","getVisible","getSourceState","changed","disposeInternal","CanvasBuilder","tolerance","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","INTERSECTING","drawCustomCoordinates_","ends","builderEnds","builderEnd","drawCustom","hitDetectionRenderer","beginGeometry","getType","getStride","builderBegin","builderEndss","getOrientedFlatCoordinates","endss","getEndss","myEnds","getFlatCoordinates","getEnds","endGeometry","finish","reverseHitDetectionInstructions","n","setFillStrokeStyle","fillStyleColor","getColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","slice","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","LINESTRING_ANGLE_COSINE_CUTOFF","colorEncodeId","id","array","radix","divide","colorDecodeId","color","mult","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","retries","referenceFonts","len","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","get","set","clearInterval","fontSpec","families","family","style","weight","setInterval","measureTextHeight","measureElement","metrics","measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","document","createElement","innerHTML","minHeight","maxHeight","border","position","display","left","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","cache","prev","curr","getTextDimensions","baseStyle","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","globalAlpha","executeLabelInstructions","drawImage","instructions_","offset_","context_","Proxy","property","pushMethodArgs_","instructionsAtIndex","instructionAtIndex","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","declutterMode_","declutterImageWithText_","drawText","geometryType","placement","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p","repeat","flatOffset","o","oo","chunk","chunkBegin","chunkEnd","range","drawChars_","setTextStyle","textStyle","sharedData","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getScaleArray","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","getRotateWithView","textRotation","getRotation","getText","join","getDeclutterMode","MapRenderer","Disposable","map_","dispatchRenderEvent","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","center","checkWrapped","thisArg","layerFilter","thisArg2","managed","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","layerState","hasRenderer","layerRenderer","getRenderer","getSource","getWrapX","order","m","a","b","some","hasFeatureAtCoordinate","hasFeature","getMap","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","CompositeMapRenderer","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","dispatchEvent","parentNode","PRECOMPOSE","declutter","BaseVector","getDeclutter","renderedLayerStates","previousElement","layerIndex","sourceState","unrender","element","POSTCOMPOSE","renderDeclutter","CanvasImmediateRenderer","VectorContext","squaredTolerance","userTransform","extent_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","drawCircle","simplifyTransformed","setStyle","setImageStyle","getImage","setTransform","drawGeometry","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawFeature","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageStyle","imageSize","getSize","imagePixelRatio","getPixelRatio","imageAnchor","getAnchor","imageOrigin","getOrigin","getOpacity","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","t","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","styleFunction","userExtent","toUserExtent","imageSmoothingEnabled","getTransformFromProjections","getUserProjection","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","styles","padStart","originalStyle","clone","setColor","setText","imgSize","getImageSize","imgContext","img","fillRect","setImage","Icon","anchor","anchorXUnits","anchorYUnits","getScale","getZIndex","byGeometryType","getGeometriesArrayRecursive","replace","zIndexKeys","geomAndStyle","k","kk","hitDetect","resultFeatures","g","Instruction","beginPathInstruction","closePathInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","pointGeometry","myBegin","multiPointGeometry","filteredFlatCoordinates","getHitDetectionImage","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lineStringGeometry","multiLineStringGeometry","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","circleGeometry","setFillStrokeStyles_","circleInstruction","polygonGeometry","multiPolygonGeometry","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","Constructor","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","properties","getPropertiesInternal","featureId","getId","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","nonNullCount","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","Error","JSON","stringify","empty","setFill","setStroke","setZIndex","prefix","evaluateColor","patternEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","setWidth","setLineCap","setLineJoin","setLineDashOffset","setMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","optionalDeclutterMode","setBackgroundFill","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","setPlacement","setRepeat","setScale","setRotateWithView","setRotation","setTextAlign","setJustify","setTextBaseline","setPadding","buildIcon","buildShape","buildCircle","srcName","src","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","crossOrigin","optionalString","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","setOpacity","setDisplacement","setAnchor","pointsName","radiusName","points","requireNumber","radius2","angle","shape","evaluateRadius","circle","setRadius","name","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","requireColorLike","requireNumberArray","requireSize","requireSizeLike","encoded"],"sourceRoot":""}
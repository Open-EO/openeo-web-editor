{"version":3,"file":"js/164.7a188da8.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/@kirtandesai/ol-geocoder/dist/ol-geocoder.js","webpack://@openeo/web-editor/./src/components/maps/osmgeocoder.js","webpack://@openeo/web-editor/src/components/maps/GeocoderMixin.vue","webpack://@openeo/web-editor/./src/components/maps/GeocoderMixin.vue?9845","webpack://@openeo/web-editor/./src/components/maps/GeocoderMixin.vue","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue","webpack://@openeo/web-editor/src/components/maps/TextControl.vue","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue?1df8","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue?c848","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue","webpack://@openeo/web-editor/src/components/maps/ChannelControl.vue","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue?bc38","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue?9e5e","webpack://@openeo/web-editor/./node_modules/ol/webgl/styleparser.js","webpack://@openeo/web-editor/./node_modules/ol/layer/WebGLTile.js","webpack://@openeo/web-editor/./node_modules/ol/source/DataTile.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/pool.js","webpack://@openeo/web-editor/./node_modules/ol/source/GeoTIFF.js","webpack://@openeo/web-editor/src/components/maps/GeoTiffMixin.vue","webpack://@openeo/web-editor/./src/components/maps/GeoTiffMixin.vue?cc05","webpack://@openeo/web-editor/./src/components/maps/GeoTiffMixin.vue","webpack://@openeo/web-editor/./node_modules/ol/xml.js","webpack://@openeo/web-editor/./node_modules/ol/format/XML.js","webpack://@openeo/web-editor/./node_modules/ol/format/xlink.js","webpack://@openeo/web-editor/./node_modules/ol/format/xsd.js","webpack://@openeo/web-editor/./node_modules/ol/format/OWS.js","webpack://@openeo/web-editor/./node_modules/ol/format/WMTSCapabilities.js","webpack://@openeo/web-editor/./node_modules/ol/uri.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/WMTS.js","webpack://@openeo/web-editor/./node_modules/ol/source/WMTS.js","webpack://@openeo/web-editor/./node_modules/ol-ext/control/Timeline.js","webpack://@openeo/web-editor/src/components/maps/WebServiceMixin.vue","webpack://@openeo/web-editor/./src/components/maps/WebServiceMixin.vue?c34d","webpack://@openeo/web-editor/./src/components/maps/WebServiceMixin.vue","webpack://@openeo/web-editor/src/components/viewer/MapViewer.vue","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue?dbd2","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue?e73e"],"sourcesContent":["/*!\n * @kirtandesai/ol-geocoder - v5.0.3\n * A geocoder extension compatible with OpenLayers v7.\n * https://github.com/kirtan-desai/ol-geocoder\n * Built: Thu Nov 17 2022 14:58:35 GMT-0500 (Eastern Standard Time)\n */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t(require(\"ol/control/Control\"),require(\"ol/style/Style\"),require(\"ol/style/Icon\"),require(\"ol/layer/Vector\"),require(\"ol/source/Vector\"),require(\"ol/geom/Point\"),require(\"ol/Feature\"),require(\"ol/proj\")):\"function\"==typeof define&&define.amd?define([\"ol/control/Control\",\"ol/style/Style\",\"ol/style/Icon\",\"ol/layer/Vector\",\"ol/source/Vector\",\"ol/geom/Point\",\"ol/Feature\",\"ol/proj\"],t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).Geocoder=t(e.ol.control.Control,e.ol.style.Style,e.ol.style.Icon,e.ol.layer.Vector,e.ol.source.Vector,e.ol.geom.Point,e.ol.Feature,e.ol.proj)}(this,(function(e,t,s,r,n,o,a,i){\"use strict\";function l(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var c=l(e),d=l(t),u=l(s),p=l(r),h=l(n),m=l(o),g=l(a),y=l(i),f=\"gcd-container\",b=\"gcd-button-control\",w=\"gcd-input-query\",v=\"gcd-input-reset\",$={namespace:\"ol-geocoder\",spin:\"gcd-pseudo-rotate\",hidden:\"gcd-hidden\",address:\"gcd-address\",country:\"gcd-country\",city:\"gcd-city\",road:\"gcd-road\",olControl:\"ol-control\",glass:{container:\"gcd-gl-container\",control:\"gcd-gl-control\",button:\"gcd-gl-btn\",input:\"gcd-gl-input\",expanded:\"gcd-gl-expanded\",reset:\"gcd-gl-reset\",result:\"gcd-gl-result\"},inputText:{container:\"gcd-txt-container\",control:\"gcd-txt-control\",input:\"gcd-txt-input\",reset:\"gcd-txt-reset\",icon:\"gcd-txt-glass\",result:\"gcd-txt-result\"}},k={containerId:f,buttonControlId:b,inputQueryId:w,inputResetId:v,cssClasses:$};const x=Object.freeze({__proto__:null,containerId:f,buttonControlId:b,inputQueryId:w,inputResetId:v,cssClasses:$,default:k}),q=\"addresschosen\",C=\"nominatim\",S=\"reverse\",L=\"glass-button\",j=\"text-input\",E=\"osm\",T=\"mapquest\",N=\"photon\",R=\"bing\",A=\"opencage\",P={provider:E,placeholder:\"Search for an address\",featureStyle:null,targetType:L,lang:\"en-US\",limit:5,keepOpen:!1,preventDefault:!1,autoComplete:!1,autoCompleteMinLength:2,autoCompleteTimeout:200,debug:!1};function I(e,t=\"Assertion failed\"){if(!e){if(\"undefined\"!=typeof Error)throw new Error(t);throw t}}function _(e){const t=function(){if(\"performance\"in window==0&&(window.performance={}),\"now\"in window.performance==0){let e=Date.now();performance.timing&&performance.timing.navigationStart&&(e=performance.timing.navigationStart),window.performance.now=()=>Date.now()-e}return window.performance.now()}().toString(36);return e?e+t:t}function M(e){return/^\\d+$/u.test(e)}function O(e,t,s){if(Array.isArray(e))return void e.forEach((e=>O(e,t)));const r=Array.isArray(t)?t:t.split(/\\s+/u);let n=r.length;for(;n--;)V(e,r[n])||U(e,r[n],s)}function F(e,t,s){if(Array.isArray(e))return void e.forEach((e=>F(e,t,s)));const r=Array.isArray(t)?t:t.split(/\\s+/u);let n=r.length;for(;n--;)V(e,r[n])&&G(e,r[n],s)}function V(e,t){return e.classList?e.classList.contains(t):B(t).test(e.className)}function D(e,t){return e.replace(/\\{\\s*([\\w-]+)\\s*\\}/gu,((e,s)=>{const r=void 0===t[s]?\"\":t[s];return String(r).replaceAll(\"&\",\"&amp;\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\").replaceAll('\"',\"&quot;\").replaceAll(\"'\",\"&#039;\")}))}function Q(e,t){let s;if(Array.isArray(e)){if(s=document.createElement(e[0]),e[1].id&&(s.id=e[1].id),e[1].classname&&(s.className=e[1].classname),e[1].attr){const{attr:t}=e[1];if(Array.isArray(t)){let e=-1;for(;++e<t.length;)s.setAttribute(t[e].name,t[e].value)}else s.setAttribute(t.name,t.value)}}else s=document.createElement(e);s.innerHTML=t;const r=document.createDocumentFragment();for(;s.childNodes[0];)r.append(s.childNodes[0]);return s.append(r),s}function B(e){return new RegExp(`(^|\\\\s+) ${e} (\\\\s+|$)`,\"u\")}function U(e,t,s){e.classList?e.classList.add(t):e.className=`${e.className} ${t}`.trim(),s&&M(s)&&window.setTimeout((()=>G(e,t)),s)}function G(e,t,s){e.classList?e.classList.remove(t):e.className=e.className.replace(B(t),\" \").trim(),s&&M(s)&&window.setTimeout((()=>U(e,t)),s)}const z=x.cssClasses;class H{constructor(e){this.options=e,this.els=this.createControl()}createControl(){let e,t,s;return this.options.targetType===j?(t=`${z.namespace} ${z.inputText.container}`,e=Q([\"div\",{id:x.containerId,classname:t}],H.input),s={container:e,control:e.querySelector(`.${z.inputText.control}`),input:e.querySelector(`.${z.inputText.input}`),reset:e.querySelector(`.${z.inputText.reset}`),result:e.querySelector(`.${z.inputText.result}`)}):(t=`${z.namespace} ${z.glass.container}`,e=Q([\"div\",{id:x.containerId,classname:t}],H.glass),s={container:e,control:e.querySelector(`.${z.glass.control}`),button:e.querySelector(`.${z.glass.button}`),input:e.querySelector(`.${z.glass.input}`),reset:e.querySelector(`.${z.glass.reset}`),result:e.querySelector(`.${z.glass.result}`)}),s.input.placeholder=this.options.placeholder,s}}H.glass=`\\n  <div class=\"${z.glass.control} ${z.olControl}\">\\n    <button type=\"button\" id=\"${x.buttonControlId}\" class=\"${z.glass.button}\"></button>\\n    <input type=\"text\" id=\"${x.inputQueryId}\" class=\"${z.glass.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\\n    <a id=\"${x.inputResetId}\" class=\"${z.glass.reset} ${z.hidden}\"></a>\\n  </div>\\n  <ul class=\"${z.glass.result}\"></ul>\\n`,H.input=`\\n  <div class=\"${z.inputText.control}\">\\n    <input type=\"text\" id=\"${x.inputQueryId}\" class=\"${z.inputText.input}\" autocomplete=\"off\" placeholder=\"Search ...\">\\n    <span class=\"${z.inputText.icon}\"></span>\\n    <button type=\"button\" id=\"${x.inputResetId}\" class=\"${z.inputText.reset} ${z.hidden}\"></button>\\n  </div>\\n  <ul class=\"${z.inputText.result}\"></ul>\\n`;class K{constructor(){this.settings={url:\"https://photon.komoot.io/api/\",params:{q:\"\",limit:10,lang:\"en\"},langs:[\"de\",\"it\",\"fr\",\"en\"]}}getParameters(e){return e.lang=e.lang.toLowerCase(),{url:this.settings.url,params:{q:e.query,limit:e.limit||this.settings.params.limit,lang:this.settings.langs.includes(e.lang)?e.lang:this.settings.params.lang}}}handleResponse(e){return 0===e.features.length?[]:e.features.map((e=>({lon:e.geometry.coordinates[0],lat:e.geometry.coordinates[1],address:{name:e.properties.name,postcode:e.properties.postcode,city:e.properties.city,state:e.properties.state,country:e.properties.country},original:{formatted:e.properties.name,details:e.properties}})))}}class J{constructor(){this.settings={url:\"https://nominatim.openstreetmap.org/search/\",params:{q:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,format:this.settings.params.format,addressdetails:this.settings.params.addressdetails,limit:e.limit||this.settings.params.limit,countrycodes:e.countrycodes||this.settings.params.countrycodes,\"accept-language\":e.lang||this.settings.params[\"accept-language\"]}}}handleResponse(e){return 0===e.length?[]:e.map((e=>({lon:e.lon,lat:e.lat,bbox:e.boundingbox,address:{name:e.display_name,road:e.address.road||\"\",houseNumber:e.address.house_number||\"\",postcode:e.address.postcode,city:e.address.city||e.address.town,state:e.address.state,country:e.address.country},original:{formatted:e.display_name,details:e.address}})))}}class W{constructor(){this.settings={url:\"https://open.mapquestapi.com/nominatim/v1/search.php\",params:{q:\"\",key:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,key:e.key,format:\"json\",addressdetails:1,limit:e.limit||this.settings.params.limit,countrycodes:e.countrycodes||this.settings.params.countrycodes,\"accept-language\":e.lang||this.settings.params[\"accept-language\"]}}}handleResponse(e){return 0===e.length?[]:e.map((e=>({lon:e.lon,lat:e.lat,address:{name:e.address.neighbourhood||\"\",road:e.address.road||\"\",postcode:e.address.postcode,city:e.address.city||e.address.town,state:e.address.state,country:e.address.country},original:{formatted:e.display_name,details:e.address}})))}}class X{constructor(){this.settings={url:\"https://dev.virtualearth.net/REST/v1/Locations\",callbackName:\"jsonp\",params:{query:\"\",key:\"\",includeNeighborhood:0,maxResults:10}}}getParameters(e){return{url:this.settings.url,callbackName:this.settings.callbackName,params:{query:e.query,key:e.key,includeNeighborhood:e.includeNeighborhood||this.settings.params.includeNeighborhood,maxResults:e.maxResults||this.settings.params.maxResults}}}handleResponse(e){const{resources:t}=e.resourceSets[0];return 0===t.length?[]:t.map((e=>({lon:e.point.coordinates[1],lat:e.point.coordinates[0],address:{name:e.name},original:{formatted:e.address.formattedAddress,details:e.address}})))}}class Y{constructor(){this.settings={url:\"https://api.opencagedata.com/geocode/v1/json?\",params:{q:\"\",key:\"\",limit:10,countrycode:\"\",pretty:1,no_annotations:1}}}getParameters(e){return{url:this.settings.url,params:{q:e.query,key:e.key,limit:e.limit||this.settings.params.limit,countrycode:e.countrycodes||this.settings.params.countrycodes}}}handleResponse(e){return 0===e.results.length?[]:e.results.map((e=>({lon:e.geometry.lng,lat:e.geometry.lat,address:{name:e.components.house_number||\"\",road:e.components.road||\"\",postcode:e.components.postcode,city:e.components.city||e.components.town,state:e.components.state,country:e.components.country},original:{formatted:e.formatted,details:e.components}})))}}function Z(e){return new Promise(((t,s)=>{const r=function(e,t){t&&\"object\"==typeof t&&(e+=(/\\?/u.test(e)?\"&\":\"?\")+ee(t));return e}(e.url,e.data),n={method:\"GET\",mode:\"cors\",credentials:\"same-origin\"};e.jsonp?function(e,t,s){const{head:r}=document,n=document.createElement(\"script\"),o=`f${Math.round(Math.random()*Date.now())}`;n.setAttribute(\"src\",`${e+(e.indexOf(\"?\")>0?\"&\":\"?\")+t}=${o}`),window[o]=e=>{window[o]=void 0,setTimeout((()=>r.removeChild(n)),0),s(e)},r.append(n)}(r,e.callbackName,t):fetch(r,n).then((e=>e.json())).then(t).catch(s)}))}function ee(e){return Object.keys(e).reduce(((t,s)=>(t.push(\"object\"==typeof e[s]?ee(e[s]):`${encodeURIComponent(s)}=${encodeURIComponent(e[s])}`),t)),[]).join(\"&\")}const te=x.cssClasses;class se{constructor(e,t){this.Base=e,this.layerName=_(\"geocoder-layer-\"),this.layer=new p.default({name:this.layerName,source:new h.default}),this.options=e.options,this.options.provider=\"string\"==typeof this.options.provider?this.options.provider.toLowerCase():this.options.provider,this.provider=this.newProvider(),this.els=t,this.lastQuery=\"\",this.container=this.els.container,this.registeredListeners={mapClick:!1},this.setListeners()}setListeners(){let e,t;const s=e=>{e.stopPropagation(),V(this.els.control,te.glass.expanded)?this.collapse():this.expand()};this.els.input.addEventListener(\"keypress\",(e=>{const t=e.target.value.trim();(e.key?\"Enter\"===e.key:e.which?13===e.which:!!e.keyCode&&13===e.keyCode)&&(e.preventDefault(),this.query(t))}),!1),this.els.input.addEventListener(\"click\",(e=>e.stopPropagation()),!1),this.els.input.addEventListener(\"input\",(s=>{const r=s.target.value.trim();0!==r.length?F(this.els.reset,te.hidden):O(this.els.reset,te.hidden),this.options.autoComplete&&r!==t&&(t=r,e&&clearTimeout(e),e=setTimeout((()=>{r.length>=this.options.autoCompleteMinLength&&this.query(r)}),this.options.autoCompleteTimeout))}),!1),this.els.reset.addEventListener(\"click\",(e=>{this.els.input.focus(),this.els.input.value=\"\",this.lastQuery=\"\",O(this.els.reset,te.hidden),this.clearResults()}),!1),this.options.targetType===L&&this.els.button.addEventListener(\"click\",s,!1)}query(e){this.provider||(this.provider=this.newProvider());const t=this.provider.getParameters({query:e,key:this.options.key,lang:this.options.lang,countrycodes:this.options.countrycodes,limit:this.options.limit});if(this.lastQuery===e&&this.els.result.firstChild)return;this.lastQuery=e,this.clearResults(),O(this.els.reset,te.spin);const s={url:t.url,data:t.params};t.callbackName&&(s.jsonp=!0,s.callbackName=t.callbackName),Z(s).then((e=>{this.options.debug&&console.info(e),F(this.els.reset,te.spin);const t=this.provider.handleResponse(e);t&&(this.createList(t),this.listenMapClick())})).catch((e=>{F(this.els.reset,te.spin);const t=Q(\"li\",\"<h5>Error! No internet connection?</h5>\");this.els.result.append(t)}))}createList(e){const t=this.els.result;e.forEach((e=>{let s;if(this.options.provider===E)s=`<span class=\"${te.road}\">${e.address.name}</span>`;else s=this.addressTemplate(e.address);const r=Q(\"li\",`<a href=\"#\">${s}</a>`);r.addEventListener(\"click\",(t=>{t.preventDefault(),this.chosen(e,s,e.address,e.original)}),!1),t.append(r)}))}chosen(e,t,s,r){const n=this.Base.getMap(),o=[Number.parseFloat(e.lon),Number.parseFloat(e.lat)],a=n.getView().getProjection(),i=y.default.transform(o,\"EPSG:4326\",a);let{bbox:l}=e;l&&(l=y.default.transformExtent([l[2],l[1],l[3],l[0]],\"EPSG:4326\",a));const c={formatted:t,details:s,original:r};if(!1===this.options.keepOpen&&this.clearResults(!0),!0===this.options.preventDefault)this.Base.dispatchEvent({type:q,address:c,coordinate:i,bbox:l,place:e});else{l?n.getView().fit(l,{duration:500}):function(e,t,s=500,r=2.388657133911758){e.getView().animate({duration:s,resolution:r},{duration:s,center:t})}(n,i);const t=this.createFeature(i,c);this.Base.dispatchEvent({type:q,address:c,feature:t,coordinate:i,bbox:l,place:e})}}createFeature(e){const t=new g.default(new m.default(e));return this.addLayer(),t.setStyle(this.options.featureStyle),t.setId(_(\"geocoder-ft-\")),this.getSource().addFeature(t),t}addressTemplate(e){const t=[];return e.name&&t.push(['<span class=\"',te.road,'\">{name}</span>'].join(\"\")),(e.road||e.building||e.house_number)&&t.push(['<span class=\"',te.road,'\">{building} {road} {house_number}</span>'].join(\"\")),(e.city||e.town||e.village)&&t.push(['<span class=\"',te.city,'\">{postcode} {city} {town} {village}</span>'].join(\"\")),(e.state||e.country)&&t.push(['<span class=\"',te.country,'\">{state} {country}</span>'].join(\"\")),D(t.join(\"<br>\"),e)}newProvider(){switch(this.options.provider){case E:return new J;case T:return new W;case N:return new K;case R:return new X;case A:return new Y;default:return this.options.provider}}expand(){F(this.els.input,te.spin),O(this.els.control,te.glass.expanded),window.setTimeout((()=>this.els.input.focus()),100),this.listenMapClick()}collapse(){this.els.input.value=\"\",this.els.input.blur(),O(this.els.reset,te.hidden),F(this.els.control,te.glass.expanded),this.clearResults()}listenMapClick(){if(this.registeredListeners.mapClick)return;const e=this,t=this.Base.getMap().getTargetElement();this.registeredListeners.mapClick=!0,t.addEventListener(\"click\",{handleEvent(s){e.clearResults(!0),t.removeEventListener(s.type,this,!1),e.registeredListeners.mapClick=!1}},!1)}clearResults(e){e&&this.options.targetType===L?this.collapse():function(e){for(;e.firstChild;)e.firstChild.remove()}(this.els.result)}getSource(){return this.layer.getSource()}addLayer(){let e=!1;const t=this.Base.getMap();t.getLayers().forEach((t=>{t===this.layer&&(e=!0)})),e||t.addLayer(this.layer)}}class re extends c.default{constructor(e=C,t={}){let s,r;I(\"string\"==typeof e,\"@param `type` should be string!\"),I(e===C||e===S,`@param 'type' should be '${C}'\\n      or '${S}'!`),I(\"object\"==typeof t,\"@param `options` should be object!\"),P.featureStyle=[new d.default({image:new u.default({scale:.7,src:\"//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png\"})})];const n=new H(t);if(e===C&&(s=n.els.container),super({element:s}),!(this instanceof re))return new re;this.options=function(e,t){const s={};return Object.keys(e).forEach((t=>{Object.prototype.hasOwnProperty.call(e,t)&&(s[t]=e[t])})),Object.keys(t).forEach((e=>{Object.prototype.hasOwnProperty.call(t,e)&&(s[e]=t[e])})),s}(P,t),this.container=s,e===C&&(r=new se(this,n.els),this.layer=r.layer)}getLayer(){return this.layer}getSource(){return this.getLayer().getSource()}setProvider(e){this.options.provider=e}setProviderKey(e){this.options.key=e}}return re}));\n//# sourceMappingURL=ol-geocoder.js.map\n","export default class OSMGeocoder {\n\tconstructor(url, geojson = false) {\n\t\tthis.url = url;\n\t\tthis.geojson = geojson;\n\t}\n\n\tgetParameters(opt) {\n\t\treturn {\n\t\t\turl: this.url,\n\t\t\tparams: {\n\t\t\t\tq: opt.query,\n\t\t\t\tformat: 'json',\n\t\t\t\tlimit: 10,\n\t\t\t\t'accept-language': 'en',\n\t\t\t\tpolygon_geojson: this.geojson ? 1 : 0,\n\t\t\t\tpolygon_threshold: 0.001,\n\t\t\t},\n\t\t};\n\t}\n\n\thandleResponse(results) {\n\t\tif (results.length === 0) {\n\t\t\treturn [];\n\t\t}\n\t\treturn results\n\t\t\t.filter(result => [\"boundary\", \"geological\", \"leisure\", \"natural\", \"place\", \"water\", \"waterway\"].includes(result.class))\n\t\t\t.map(result => ({\n\t\t\t\tlon: result.lon,\n\t\t\t\tlat: result.lat,\n\t\t\t\tbbox: result.boundingbox,\n\t\t\t\taddress: {\n\t\t\t\t\tname: result.display_name\n\t\t\t\t},\n\t\t\t\toriginal: {\n\t\t\t\t\tformatted: result.display_name,\n\t\t\t\t\tdetails: result.address,\n\t\t\t\t\tgeojson: result.geojson\n\t\t\t\t}\n\t\t\t}));\n\t}\n}","<script>\nimport Geocoder from '@kirtandesai/ol-geocoder';\nimport OSMGeocoder from './osmgeocoder';\n\nexport default {\n\tmethods: {\n\t\taddGeocoder(callback, geojson = false) {\n\t\t\tif (!this.$config.geocoder) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst options = {\n\t\t\t\tprovider: new OSMGeocoder(this.$config.geocoder, geojson),\n\t\t\t\tplaceholder: 'Search for ...',\n\t\t\t\tkeepOpen: true,\n\t\t\t\tpreventDefault: true\n\t\t\t};\n\t\t\tconst geocoder = new Geocoder('nominatim', options);\n\t\t\tgeocoder.on('addresschosen', event => {\n\t\t\t\tif (geojson) {\n\t\t\t\t\tcallback(event.place?.original?.geojson, event);\n\t\t\t\t}\n\t\t\t\telse if (event.place.bbox) {\n\t\t\t\t\tlet bbox = event.place.bbox.map(i => parseFloat(i));\n\t\t\t\t\tlet bboxOpenEO = {\n\t\t\t\t\t\twest: bbox[2],\n\t\t\t\t\t\teast: bbox[3],\n\t\t\t\t\t\tnorth: bbox[1],\n\t\t\t\t\t\tsouth: bbox[0]\n\t\t\t\t\t}\n\t\t\t\t\tcallback(bboxOpenEO, event);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcallback(null, event);\t\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.map.addControl(geocoder);\n\t\t}\n\t}\n}\n</script>\n\n<style src=\"@kirtandesai/ol-geocoder/dist/ol-geocoder.min.css\"></style>\n\n<style lang=\"scss\">\n.ol-geocoder.gcd-gl-container {\n\tz-index: 0;\n\tleft: calc(0.5em - 1px) !important;\n\ttop: calc(6.125em + 8px) !important;\n\n\t.ol-control {\n\t\tbackground-color: transparent;\n\t}\n\t\n\tul.gcd-gl-result > li:nth-child(odd) {\n\t\tbackground-color: #f9f9f9;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeocoderMixin.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeocoderMixin.vue?vue&type=script&lang=js\"","var render, staticRenderFns\nimport script from \"./GeocoderMixin.vue?vue&type=script&lang=js\"\nexport * from \"./GeocoderMixin.vue?vue&type=script&lang=js\"\nimport style0 from \"@kirtandesai/ol-geocoder/dist/ol-geocoder.min.css?vue&type=style&index=0&prod&lang=css&external\"\nimport style1 from \"./GeocoderMixin.vue?vue&type=style&index=1&id=643f6883&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.texts.length > 0)?_c('div',{staticClass:\"ol-unselectable ol-control value\",class:{pointer: _vm.texts.length > 1},on:{\"click\":_vm.toggle}},[_vm._v(\" \"+_vm._s(_vm.current)+\" \")]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div v-if=\"texts.length > 0\" class=\"ol-unselectable ol-control value\" @click=\"toggle\" :class=\"{pointer: texts.length > 1}\">\n\t\t{{ current }}\n\t</div>\n</template>\n\n<script>\nimport ControlMixin from './ControlMixin.vue';\n\nexport default {\n\tname: 'TextControl',\n\tmixins: [\n\t\tControlMixin\n\t],\n\tdata() {\n\t\treturn {\n\t\t\ti: 0\n\t\t};\t\n\t},\n\tcomputed: {\n\t\ttexts() {\n\t\t\tif (Array.isArray(this.text)) {\n\t\t\t\treturn this.text;\n\t\t\t}\n\t\t\telse if (typeof this.text === 'string' && this.text.length > 0) {\n\t\t\t\treturn [this.text];\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\tcurrent() {\n\t\t\tif (this.texts.length === 0) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn this.texts[this.i % this.text.length];\n\t\t\t}\n\t\t}\n\t},\n\tprops: {\n\t\ttext: {\n\t\t\ttext: [\n\t\t\t\tString,\n\t\t\t\tArray\n\t\t\t],\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggle() {\n\t\t\tthis.i++;\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.value {\n\tposition: absolute;\n\ttop: 0.5em;\n\tleft: calc(2.375em + 6px);\n\tmax-width: calc(100% - 2*(2.375em + 6px));\n\tbox-sizing: border-box;\n\tbackground-color: rgba(255,255,255,0.6);\n}\n.pointer {\n\tcursor: pointer;\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TextControl.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TextControl.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./TextControl.vue?vue&type=template&id=6d7a0f06&scoped=true\"\nimport script from \"./TextControl.vue?vue&type=script&lang=js\"\nexport * from \"./TextControl.vue?vue&type=script&lang=js\"\nimport style0 from \"./TextControl.vue?vue&type=style&index=0&id=6d7a0f06&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6d7a0f06\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Splitpanes',{staticClass:\"default-theme\",attrs:{\"horizontal\":\"\"}},[_c('Pane',{attrs:{\"id\":\"map\"}},[_c('div',{staticClass:\"map-viewer\",attrs:{\"id\":_vm.id}},[_c('ProgressControl',{ref:\"progress\",attrs:{\"map\":_vm.map}}),_c('UserLocationControl',{attrs:{\"map\":_vm.map}}),(_vm.isGeoTiff)?_c('TextControl',{attrs:{\"text\":_vm.textControlText}}):_vm._e(),(_vm.isGeoTiff && !_vm.colorMap)?_c('ChannelControl',{attrs:{\"bands\":_vm.bands,\"defaultChannels\":_vm.defaultChannels},on:{\"update\":_vm.updateGeoTiffStyle}}):_vm._e(),(_vm.loading)?_c('div',{staticClass:\"map-loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_c('span',[_vm._v(\"Loading map...\")])]):_vm._e()],1)]),(_vm.chart)?_c('Pane',{attrs:{\"id\":\"chart\",\"size\":33}},[_c('ScatterChart',_vm._b({attrs:{\"height\":220}},'ScatterChart',_vm.chart,false))],1):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.channels.length > 0),expression:\"channels.length > 0\"}],staticClass:\"ol-unselectable ol-control channels\"},[_c('table',[_c('thead',[_c('tr',[(!_vm.isGray)?_c('th',[_vm._v(\"Channel\")]):_vm._e(),(_vm.multiBand)?_c('th',[_vm._v(\"Band\")]):_vm._e(),_c('th',[_vm._v(\"Min\")]),_c('th',[_vm._v(\"Max\")])])]),_c('tbody',_vm._l((_vm.channels),function(channel,i){return _c('tr',{key:i},[(!_vm.isGray)?_c('th',[_vm._v(_vm._s(_vm.labels[i]))]):_vm._e(),(_vm.multiBand)?_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.id),expression:\"channel.id\",modifiers:{\"number\":true}}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(channel, \"id\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.bands),function(band){return _c('option',{key:band.id,domProps:{\"value\":band.id}},[_vm._v(_vm._s(band.name || band.id))])}),0)]):_vm._e(),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.min),expression:\"channel.min\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"required\":\"\"},domProps:{\"value\":(channel.min)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(channel, \"min\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.max),expression:\"channel.max\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"required\":\"\"},domProps:{\"value\":(channel.max)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(channel, \"max\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})])])}),0),(_vm.multiBand)?_c('tfoot',[_c('tr',[_c('td',{attrs:{\"colspan\":_vm.cols}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isGray),expression:\"isGray\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.isGray)?_vm._i(_vm.isGray,null)>-1:(_vm.isGray)},on:{\"change\":function($event){var $$a=_vm.isGray,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isGray=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isGray=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isGray=$$c}}}}),_vm._v(\" Grayscale \")])])]):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div v-show=\"channels.length > 0\" class=\"ol-unselectable ol-control channels\">\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th v-if=\"!isGray\">Channel</th>\n\t\t\t\t\t<th v-if=\"multiBand\">Band</th>\n\t\t\t\t\t<th>Min</th>\n\t\t\t\t\t<th>Max</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr v-for=\"(channel, i) in channels\" :key=\"i\">\n\t\t\t\t\t<th v-if=\"!isGray\">{{ labels[i] }}</th>\n\t\t\t\t\t<td v-if=\"multiBand\">\n\t\t\t\t\t\t<select v-model.number=\"channel.id\">\n\t\t\t\t\t\t\t<option v-for=\"band in bands\" :key=\"band.id\" :value=\"band.id\">{{ band.name || band.id }}</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td><input type=\"number\" v-model.number=\"channel.min\" required /></td>\n\t\t\t\t\t<td><input type=\"number\" v-model.number=\"channel.max\" required /></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t\t<tfoot v-if=\"multiBand\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td :colspan=\"cols\">\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"isGray\" /> Grayscale\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tfoot>\n\t\t</table>\n\t</div>\n</template>\n\n<script>\nimport ControlMixin from './ControlMixin.vue';\n\nexport default {\n\tname: 'ChannelControl',\n\tmixins: [\n\t\tControlMixin\n\t],\n\tprops: {\n\t\tbands: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t},\n\t\tdefaultChannels: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t}\n\t},\n\tcomputed: {\n\t\tmultiBand() {\n\t\t\treturn this.bands.length > 1;\n\t\t},\n\t\tcols() {\n\t\t\tif (this.isGray) {\n\t\t\t\treturn this.multiBand ? 3 : 2;\n\t\t\t}\n\t\t\treturn 4;\n\t\t},\n\t\tlabels() {\n\t\t\treturn this.isGray ? ['Grayscale'] : ['Red', 'Green', 'Blue'];\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tchannels: this.defaultChannels,\n\t\t\tisGray: this.defaultChannels.length === 1 || this.bands.length === 1\n\t\t}\n\t},\n\twatch: {\n\t\tbands: {\n\t\t\timmediate: true,\n\t\t\thandler() {\n\t\t\t\tif (this.bands.length === 1) {\n\t\t\t\t\tthis.isGray = true;\n\t\t\t\t}\n\t\t\t\tthis.updateChannels();\n\t\t\t}\n\t\t},\n\t\tisGray() {\n\t\t\tthis.updateChannels();\n\t\t\tthis.emit();\n\t\t},\n\t\tchannels: {\n\t\t\tdeep: true,\n\t\t\thandler() {\n\t\t\t\tthis.emit();\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tisValid(value) {\n\t\t\treturn (typeof value === 'number');\n\t\t},\n\t\tupdateChannels() {\n\t\t\tif (this.defaultChannels.length > 0) {\n\t\t\t\tthis.channels = this.defaultChannels;\n\t\t\t\tif (this.defaultChannels.length === 1) {\n\t\t\t\t\tthis.isGray = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.channels = this.bands\n\t\t\t\t\t.slice(0, this.isGray ? 1 : 3)\n\t\t\t\t\t.map(band => Object.assign({}, band));\n\t\t\t}\n\t\t\t// If only two channels are available, add a third one so that we have enough for RGB\n\t\t\t// If we only have one channel it is grayscale\n\t\t\tif (this.channels.length === 2) {\n\t\t\t\tthis.channels.push(Object.assign({}, this.channels[1]));\n\t\t\t}\n\t\t},\n\t\temit() {\n\t\t\tif (this.channels.filter(c => this.isValid(c.min) && this.isValid(c.max)).length > 0) {\n\t\t\t\tthis.$emit('update', 'channels', this.channels);\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\">\n.ol-control.channels {\n\tbottom: calc(22px + 1em);\n    right: 8px;\n\tposition: absolute;\n\n\tinput {\n\t\tmax-width: 4em;\n\t}\n\tselect {\n\t\tmax-width: 10em;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChannelControl.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChannelControl.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./ChannelControl.vue?vue&type=template&id=0b57c6f1\"\nimport script from \"./ChannelControl.vue?vue&type=script&lang=js\"\nexport * from \"./ChannelControl.vue?vue&type=script&lang=js\"\nimport style0 from \"./ChannelControl.vue?vue&type=style&index=0&id=0b57c6f1&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * Utilities for parsing literal style objects\n * @module ol/webgl/styleparser\n */\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  SizeType,\n  StringType,\n  newParsingContext,\n} from '../expr/expression.js';\nimport {ShaderBuilder} from './ShaderBuilder.js';\nimport {\n  arrayToGlsl,\n  buildExpression,\n  getStringNumberEquivalent,\n  stringToGlsl,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {asArray} from '../color.js';\n\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a compilation context that\n * will be read and modified during the parsing operation.\n * @param {import(\"../expr/gpu.js\").CompilationContext} compilationContext Compilation context\n * @param {import(\"../expr/expression.js\").EncodedExpression} value Value\n * @param {number} [expectedType] Expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(compilationContext, value, expectedType) {\n  const parsingContext = newParsingContext();\n  parsingContext.style = compilationContext.style;\n  return buildExpression(\n    value,\n    expectedType,\n    parsingContext,\n    compilationContext,\n  );\n}\n\n/**\n * Packs all components of a color into a two-floats array\n * @param {import(\"../color.js\").Color|string} color Color as array of numbers or string\n * @return {Array<number>} Vec2 array containing the color in compressed form\n */\nexport function packColor(color) {\n  const array = asArray(color);\n  const r = array[0] * 256;\n  const g = array[1];\n  const b = array[2] * 256;\n  const a = Math.round(array[3] * 255);\n  return [r + g, b + a];\n}\n\nconst UNPACK_COLOR_FN = `vec4 unpackColor(vec2 packedColor) {\n  return fract(packedColor[1] / 256.0) * vec4(\n    fract(floor(packedColor[0] / 256.0) / 256.0),\n    fract(packedColor[0] / 256.0),\n    fract(floor(packedColor[1] / 256.0) / 256.0),\n    1.0\n  );\n}`;\n\n/**\n * @param {number} type Value type\n * @return {1|2|3|4} The amount of components for this value\n */\nfunction getGlslSizeFromType(type) {\n  if (type === ColorType || type === SizeType) {\n    return 2;\n  }\n  if (type === NumberArrayType) {\n    return 4;\n  }\n  return 1;\n}\n\n/**\n * @param {number} type Value type\n * @return {'float'|'vec2'|'vec3'|'vec4'} The corresponding GLSL type for this value\n */\nfunction getGlslTypeFromType(type) {\n  const size = getGlslSizeFromType(type);\n  if (size > 1) {\n    return /** @type {'vec2'|'vec3'|'vec4'} */ (`vec${size}`);\n  }\n  return 'float';\n}\n\n/**\n * see https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript\n * @param {Object|string} input The hash input, either an object or string\n * @return {string} Hash (if the object cannot be serialized, it is based on `getUid`)\n */\nexport function computeHash(input) {\n  const hash = JSON.stringify(input)\n    .split('')\n    .reduce((prev, curr) => (prev << 5) - prev + curr.charCodeAt(0), 0);\n  return (hash >>> 0).toString();\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {'shape-'|'circle-'|'icon-'} prefix Properties prefix\n */\nfunction parseCommonSymbolProperties(style, builder, vertContext, prefix) {\n  if (`${prefix}radius` in style && prefix !== 'icon-') {\n    let radius = expressionToGlsl(\n      vertContext,\n      style[`${prefix}radius`],\n      NumberType,\n    );\n    if (`${prefix}radius2` in style) {\n      const radius2 = expressionToGlsl(\n        vertContext,\n        style[`${prefix}radius2`],\n        NumberType,\n      );\n      radius = `max(${radius}, ${radius2})`;\n    }\n    if (`${prefix}stroke-width` in style) {\n      radius = `(${radius} + ${expressionToGlsl(\n        vertContext,\n        style[`${prefix}stroke-width`],\n        NumberType,\n      )} * 0.5)`;\n    }\n    builder.setSymbolSizeExpression(`vec2(${radius} * 2. + 0.5)`); // adding some padding for antialiasing\n  }\n  if (`${prefix}scale` in style) {\n    const scale = expressionToGlsl(\n      vertContext,\n      style[`${prefix}scale`],\n      SizeType,\n    );\n    builder.setSymbolSizeExpression(\n      `${builder.getSymbolSizeExpression()} * ${scale}`,\n    );\n  }\n  if (`${prefix}displacement` in style) {\n    builder.setSymbolOffsetExpression(\n      expressionToGlsl(\n        vertContext,\n        style[`${prefix}displacement`],\n        NumberArrayType,\n      ),\n    );\n  }\n  if (`${prefix}rotation` in style) {\n    builder.setSymbolRotationExpression(\n      expressionToGlsl(vertContext, style[`${prefix}rotation`], NumberType),\n    );\n  }\n  if (`${prefix}rotate-with-view` in style) {\n    builder.setSymbolRotateWithView(!!style[`${prefix}rotate-with-view`]);\n  }\n}\n\n/**\n * @param {string} distanceField The distance field expression\n * @param {string|null} fillColor The fill color expression; null if no fill\n * @param {string|null} strokeColor The stroke color expression; null if no stroke\n * @param {string|null} strokeWidth The stroke width expression; null if no stroke\n * @param {string|null} opacity The opacity expression; null if no stroke\n * @return {string} The final color expression, based on the distance field and given params\n */\nfunction getColorFromDistanceField(\n  distanceField,\n  fillColor,\n  strokeColor,\n  strokeWidth,\n  opacity,\n) {\n  let color = 'vec4(0.)';\n  if (fillColor !== null) {\n    color = fillColor;\n  }\n  if (strokeColor !== null && strokeWidth !== null) {\n    const strokeFillRatio = `smoothstep(-${strokeWidth} + 0.63, -${strokeWidth} - 0.58, ${distanceField})`;\n    color = `mix(${strokeColor}, ${color}, ${strokeFillRatio})`;\n  }\n  const shapeOpacity = `(1.0 - smoothstep(-0.63, 0.58, ${distanceField}))`;\n  let result = `${color} * ${shapeOpacity}`;\n  if (opacity !== null) {\n    result = `${result} * ${opacity}`;\n  }\n  return result;\n}\n\n/**\n * This will parse an image property provided by `<prefix>-src`\n * The image size expression in GLSL will be returned\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {string} textureId A identifier that will be used in the generated uniforms: `sample2d u_texture<id>` and `vec2 u_texture<id>_size`\n * @return {string} The image size expression\n */\nfunction parseImageProperties(style, builder, uniforms, prefix, textureId) {\n  const image = new Image();\n  let size;\n  image.crossOrigin =\n    style[`${prefix}cross-origin`] === undefined\n      ? 'anonymous'\n      : style[`${prefix}cross-origin`];\n  image.src = style[`${prefix}src`];\n\n  if (image.complete && image.width && image.height) {\n    size = arrayToGlsl([image.width, image.height]);\n  } else {\n    // the size is provided asynchronously using a uniform\n    uniforms[`u_texture${textureId}_size`] = () => {\n      return image.complete ? [image.width, image.height] : [0, 0];\n    };\n    builder.addUniform(`vec2 u_texture${textureId}_size`);\n    size = `u_texture${textureId}_size`;\n  }\n  uniforms[`u_texture${textureId}`] = image;\n  builder.addUniform(`sampler2D u_texture${textureId}`);\n  return size;\n}\n\n/**\n * This will parse an image's offset properties provided by `<prefix>-offset`, `<prefix>-offset-origin` and `<prefix>-size`\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {'icon-'|'fill-pattern-'|'stroke-pattern-'} prefix Property prefix\n * @param {import(\"../expr/gpu.js\").CompilationContext} context Shader compilation context (vertex or fragment)\n * @param {string} imageSize Pixel size of the full image as a GLSL expression\n * @param {string} sampleSize Pixel size of the sample in the image as a GLSL expression\n * @return {string} The offset expression\n */\nfunction parseImageOffsetProperties(\n  style,\n  prefix,\n  context,\n  imageSize,\n  sampleSize,\n) {\n  let offsetExpression = expressionToGlsl(\n    context,\n    style[`${prefix}offset`],\n    NumberArrayType,\n  );\n  if (`${prefix}offset-origin` in style) {\n    switch (style[`${prefix}offset-origin`]) {\n      case 'top-right':\n        offsetExpression = `vec2(${imageSize}.x, 0.) + ${sampleSize} * vec2(-1., 0.) + ${offsetExpression} * vec2(-1., 1.)`;\n        break;\n      case 'bottom-left':\n        offsetExpression = `vec2(0., ${imageSize}.y) + ${sampleSize} * vec2(0., -1.) + ${offsetExpression} * vec2(1., -1.)`;\n        break;\n      case 'bottom-right':\n        offsetExpression = `${imageSize} - ${sampleSize} - ${offsetExpression}`;\n        break;\n      default: // pass\n    }\n  }\n  return offsetExpression;\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseCircleProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  // this function takes in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the circle, positive outside, values in pixels)\n  fragContext.functions['circleDistanceField'] =\n    `float circleDistanceField(vec2 point, float radius) {\n  return length(point) - radius;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'circle-');\n\n  // OPACITY\n  let opacity = null;\n  if ('circle-opacity' in style) {\n    opacity = expressionToGlsl(\n      fragContext,\n      style['circle-opacity'],\n      NumberType,\n    );\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('circle-scale' in style) {\n    const scale = expressionToGlsl(\n      fragContext,\n      style['circle-scale'],\n      SizeType,\n    );\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('circle-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['circle-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('circle-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // RADIUS\n  let radius = expressionToGlsl(\n    fragContext,\n    style['circle-radius'],\n    NumberType,\n  );\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('circle-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['circle-stroke-width'],\n      NumberType,\n    );\n    radius = `(${radius} + ${strokeWidth} * 0.5)`;\n  }\n\n  // FINAL COLOR\n  const distanceField = `circleDistanceField(${currentPoint}, ${radius})`;\n  const colorExpression = getColorFromDistanceField(\n    distanceField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseShapeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  fragContext.functions['round'] = `float round(float v) {\n  return sign(v) * floor(abs(v) + 0.5);\n}`;\n\n  // these functions take in screen coordinates in pixels and returns the signed distance field\n  // (0 on the boundary, negative inside the polygon, positive outside, values in pixels)\n  // inspired by https://github.com/zranger1/PixelblazePatterns/blob/master/Toolkit/sdf2d.md#n-sided-regular-polygon\n  fragContext.functions['starDistanceField'] =\n    `float starDistanceField(vec2 point, float numPoints, float radius, float radius2, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round(beta / alpha) * alpha; // angle in sector\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  vec2 tipToPoint = inSector + vec2(-radius, 0.);\n  vec2 edgeNormal = vec2(radius2 * sin(alpha * 0.5), -radius2 * cos(alpha * 0.5) + radius);\n  return dot(normalize(edgeNormal), tipToPoint);\n}`;\n  fragContext.functions['regularDistanceField'] =\n    `float regularDistanceField(vec2 point, float numPoints, float radius, float angle) {\n  float startAngle = -PI * 0.5 + angle; // tip starts upwards and rotates clockwise with angle\n  float c = cos(startAngle);\n  float s = sin(startAngle);\n  vec2 pointRotated = vec2(c * point.x - s * point.y, s * point.x + c * point.y);\n  float alpha = TWO_PI / numPoints; // the angle of one sector\n  float radiusIn = radius * cos(PI / numPoints);\n  float beta = atan(pointRotated.y, pointRotated.x);\n  float gamma = round((beta - alpha * 0.5) / alpha) * alpha + alpha * 0.5; // angle in sector from mid\n  c = cos(-gamma);\n  s = sin(-gamma);\n  vec2 inSector = vec2(c * pointRotated.x - s * pointRotated.y, abs(s * pointRotated.x + c * pointRotated.y));\n  return inSector.x - radiusIn;\n}`;\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'shape-');\n\n  // OPACITY\n  let opacity = null;\n  if ('shape-opacity' in style) {\n    opacity = expressionToGlsl(fragContext, style['shape-opacity'], NumberType);\n  }\n\n  // SCALE\n  let currentPoint = 'coordsPx';\n  if ('shape-scale' in style) {\n    const scale = expressionToGlsl(fragContext, style['shape-scale'], SizeType);\n    currentPoint = `coordsPx / ${scale}`;\n  }\n\n  // FILL COLOR\n  let fillColor = null;\n  if ('shape-fill-color' in style) {\n    fillColor = expressionToGlsl(\n      fragContext,\n      style['shape-fill-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE COLOR\n  let strokeColor = null;\n  if ('shape-stroke-color' in style) {\n    strokeColor = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-color'],\n      ColorType,\n    );\n  }\n\n  // STROKE WIDTH\n  let strokeWidth = null;\n  if ('shape-stroke-width' in style) {\n    strokeWidth = expressionToGlsl(\n      fragContext,\n      style['shape-stroke-width'],\n      NumberType,\n    );\n  }\n\n  // SHAPE TYPE\n  const numPoints = expressionToGlsl(\n    fragContext,\n    style['shape-points'],\n    NumberType,\n  );\n  let angle = '0.';\n  if ('shape-angle' in style) {\n    angle = expressionToGlsl(fragContext, style['shape-angle'], NumberType);\n  }\n  let shapeField;\n  let radius = expressionToGlsl(fragContext, style['shape-radius'], NumberType);\n  if (strokeWidth !== null) {\n    radius = `${radius} + ${strokeWidth} * 0.5`;\n  }\n  if ('shape-radius2' in style) {\n    let radius2 = expressionToGlsl(\n      fragContext,\n      style['shape-radius2'],\n      NumberType,\n    );\n    if (strokeWidth !== null) {\n      radius2 = `${radius2} + ${strokeWidth} * 0.5`;\n    }\n    shapeField = `starDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${radius2}, ${angle})`;\n  } else {\n    shapeField = `regularDistanceField(${currentPoint}, ${numPoints}, ${radius}, ${angle})`;\n  }\n\n  // FINAL COLOR\n  const colorExpression = getColorFromDistanceField(\n    shapeField,\n    fillColor,\n    strokeColor,\n    strokeWidth,\n    opacity,\n  );\n  builder.setSymbolColorExpression(colorExpression);\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseIconProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  // COLOR\n  let color = 'vec4(1.0)';\n  if ('icon-color' in style) {\n    color = expressionToGlsl(fragContext, style['icon-color'], ColorType);\n  }\n\n  // OPACITY\n  if ('icon-opacity' in style) {\n    color = `${color} * ${expressionToGlsl(\n      fragContext,\n      style['icon-opacity'],\n      NumberType,\n    )}`;\n  }\n\n  // IMAGE & SIZE\n  const textureId = computeHash(style['icon-src']);\n  const sizeExpression = parseImageProperties(\n    style,\n    builder,\n    uniforms,\n    'icon-',\n    textureId,\n  );\n  builder\n    .setSymbolColorExpression(\n      `${color} * samplePremultiplied(u_texture${textureId}, v_texCoord)`,\n    )\n    .setSymbolSizeExpression(sizeExpression);\n\n  // override size if width/height were specified\n  if ('icon-width' in style && 'icon-height' in style) {\n    builder.setSymbolSizeExpression(\n      `vec2(${expressionToGlsl(\n        vertContext,\n        style['icon-width'],\n        NumberType,\n      )}, ${expressionToGlsl(vertContext, style['icon-height'], NumberType)})`,\n    );\n  }\n\n  // tex coord\n  if ('icon-offset' in style && 'icon-size' in style) {\n    const sampleSize = expressionToGlsl(\n      vertContext,\n      style['icon-size'],\n      NumberArrayType,\n    );\n    const fullsize = builder.getSymbolSizeExpression();\n    builder.setSymbolSizeExpression(sampleSize);\n    const offset = parseImageOffsetProperties(\n      style,\n      'icon-',\n      vertContext,\n      'v_quadSizePx',\n      sampleSize,\n    );\n    builder.setTextureCoordinateExpression(\n      `(vec4((${offset}).xyxy) + vec4(0., 0., ${sampleSize})) / (${fullsize}).xyxy`,\n    );\n  }\n\n  parseCommonSymbolProperties(style, builder, vertContext, 'icon-');\n\n  if ('icon-anchor' in style) {\n    const anchor = expressionToGlsl(\n      vertContext,\n      style['icon-anchor'],\n      NumberArrayType,\n    );\n    let scale = `1.0`;\n    if (`icon-scale` in style) {\n      scale = expressionToGlsl(vertContext, style[`icon-scale`], SizeType);\n    }\n    let shiftPx;\n    if (\n      style['icon-anchor-x-units'] === 'pixels' &&\n      style['icon-anchor-y-units'] === 'pixels'\n    ) {\n      shiftPx = `${anchor} * ${scale}`;\n    } else if (style['icon-anchor-x-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(vec2(${scale}).x, v_quadSizePx.y)`;\n    } else if (style['icon-anchor-y-units'] === 'pixels') {\n      shiftPx = `${anchor} * vec2(v_quadSizePx.x, vec2(${scale}).x)`;\n    } else {\n      shiftPx = `${anchor} * v_quadSizePx`;\n    }\n    // default origin is top-left\n    let offsetPx = `v_quadSizePx * vec2(0.5, -0.5) + ${shiftPx} * vec2(-1., 1.)`;\n    if ('icon-anchor-origin' in style) {\n      switch (style['icon-anchor-origin']) {\n        case 'top-right':\n          offsetPx = `v_quadSizePx * -0.5 + ${shiftPx}`;\n          break;\n        case 'bottom-left':\n          offsetPx = `v_quadSizePx * 0.5 - ${shiftPx}`;\n          break;\n        case 'bottom-right':\n          offsetPx = `v_quadSizePx * vec2(-0.5, 0.5) + ${shiftPx} * vec2(1., -1.)`;\n          break;\n        default: // pass\n      }\n    }\n    builder.setSymbolOffsetExpression(\n      `${builder.getSymbolOffsetExpression()} + ${offsetPx}`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseStrokeProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  if ('stroke-color' in style) {\n    builder.setStrokeColorExpression(\n      expressionToGlsl(fragContext, style['stroke-color'], ColorType),\n    );\n  }\n  if ('stroke-pattern-src' in style) {\n    const textureId = computeHash(style['stroke-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'stroke-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('stroke-pattern-offset' in style && 'stroke-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`stroke-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'stroke-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    let spacingExpression = '0.';\n    if ('stroke-pattern-spacing' in style) {\n      spacingExpression = expressionToGlsl(\n        fragContext,\n        style['stroke-pattern-spacing'],\n        NumberType,\n      );\n    }\n    fragContext.functions['sampleStrokePattern'] =\n      `vec4 sampleStrokePattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, float spacingPx, float currentLengthPx, float currentRadiusRatio, float lineWidth) {\n  float currentLengthScaled = currentLengthPx * sampleSize.y / lineWidth;\n  float spacingScaled = spacingPx * sampleSize.y / lineWidth;\n  float uCoordPx = mod(currentLengthScaled, (sampleSize.x + spacingScaled));\n  // make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  uCoordPx = clamp(uCoordPx, 0.5, sampleSize.x - 0.5);\n  float vCoordPx = (-currentRadiusRatio * 0.5 + 0.5) * sampleSize.y;\n  vec2 texCoord = (vec2(uCoordPx, vCoordPx) + textureOffset) / textureSize;\n  return samplePremultiplied(texture, texCoord);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('stroke-color' in style) {\n      tintExpression = builder.getStrokeColorExpression();\n    }\n    builder.setStrokeColorExpression(\n      `${tintExpression} * sampleStrokePattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, ${spacingExpression}, currentLengthPx, currentRadiusRatio, v_width)`,\n    );\n  }\n\n  if ('stroke-width' in style) {\n    builder.setStrokeWidthExpression(\n      expressionToGlsl(vertContext, style['stroke-width'], NumberType),\n    );\n  }\n\n  if ('stroke-offset' in style) {\n    builder.setStrokeOffsetExpression(\n      expressionToGlsl(vertContext, style['stroke-offset'], NumberType),\n    );\n  }\n\n  if ('stroke-line-cap' in style) {\n    builder.setStrokeCapExpression(\n      expressionToGlsl(vertContext, style['stroke-line-cap'], StringType),\n    );\n  }\n\n  if ('stroke-line-join' in style) {\n    builder.setStrokeJoinExpression(\n      expressionToGlsl(vertContext, style['stroke-line-join'], StringType),\n    );\n  }\n\n  if ('stroke-miter-limit' in style) {\n    builder.setStrokeMiterLimitExpression(\n      expressionToGlsl(vertContext, style['stroke-miter-limit'], NumberType),\n    );\n  }\n\n  if ('stroke-line-dash' in style) {\n    fragContext.functions['getSingleDashDistance'] =\n      `float getSingleDashDistance(float distance, float radius, float dashOffset, float dashLength, float dashLengthTotal, float capType) {\n  float localDistance = mod(distance, dashLengthTotal);\n  float distanceSegment = abs(localDistance - dashOffset - dashLength * 0.5) - dashLength * 0.5;\n  distanceSegment = min(distanceSegment, dashLengthTotal - localDistance);\n  if (capType == ${stringToGlsl('square')}) {\n    distanceSegment -= v_width * 0.5;\n  } else if (capType == ${stringToGlsl('round')}) {\n    distanceSegment = min(distanceSegment, sqrt(distanceSegment * distanceSegment + radius * radius) - v_width * 0.5);\n  }\n  return distanceSegment;\n}`;\n\n    let dashPattern = style['stroke-line-dash'].map((v) =>\n      expressionToGlsl(fragContext, v, NumberType),\n    );\n    // if pattern has odd length, concatenate it with itself to be even\n    if (dashPattern.length % 2 === 1) {\n      dashPattern = [...dashPattern, ...dashPattern];\n    }\n\n    let offsetExpression = '0.';\n    if ('stroke-line-dash-offset' in style) {\n      offsetExpression = expressionToGlsl(\n        vertContext,\n        style['stroke-line-dash-offset'],\n        NumberType,\n      );\n    }\n\n    // define a function for this dash specifically\n    const uniqueDashKey = computeHash(style['stroke-line-dash']);\n    const dashFunctionName = `dashDistanceField_${uniqueDashKey}`;\n\n    const dashLengthsDef = dashPattern.map(\n      (v, i) => `float dashLength${i} = ${v};`,\n    );\n    const totalLengthDef = dashPattern\n      .map((v, i) => `dashLength${i}`)\n      .join(' + ');\n    let currentDashOffset = '0.';\n    let distanceExpression = `getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength0, totalDashLength, capType)`;\n    for (let i = 2; i < dashPattern.length; i += 2) {\n      currentDashOffset = `${currentDashOffset} + dashLength${\n        i - 2\n      } + dashLength${i - 1}`;\n      distanceExpression = `min(${distanceExpression}, getSingleDashDistance(distance, radius, ${currentDashOffset}, dashLength${i}, totalDashLength, capType))`;\n    }\n\n    fragContext.functions[dashFunctionName] =\n      `float ${dashFunctionName}(float distance, float radius, float capType) {\n  ${dashLengthsDef.join('\\n  ')}\n  float totalDashLength = ${totalLengthDef};\n  return ${distanceExpression};\n}`;\n    builder.setStrokeDistanceFieldExpression(\n      `${dashFunctionName}(currentLengthPx + ${offsetExpression}, currentRadiusPx, capType)`,\n    );\n  }\n}\n\n/**\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Style\n * @param {ShaderBuilder} builder Shader Builder\n * @param {Object<string,import(\"../webgl/Helper\").UniformValue>} uniforms Uniforms\n * @param {import(\"../expr/gpu.js\").CompilationContext} vertContext Vertex shader compilation context\n * @param {import(\"../expr/gpu.js\").CompilationContext} fragContext Fragment shader compilation context\n */\nfunction parseFillProperties(\n  style,\n  builder,\n  uniforms,\n  vertContext,\n  fragContext,\n) {\n  if ('fill-color' in style) {\n    builder.setFillColorExpression(\n      expressionToGlsl(fragContext, style['fill-color'], ColorType),\n    );\n  }\n  if ('fill-pattern-src' in style) {\n    const textureId = computeHash(style['fill-pattern-src']);\n    const sizeExpression = parseImageProperties(\n      style,\n      builder,\n      uniforms,\n      'fill-pattern-',\n      textureId,\n    );\n    let sampleSizeExpression = sizeExpression;\n    let offsetExpression = 'vec2(0.)';\n    if ('fill-pattern-offset' in style && 'fill-pattern-size' in style) {\n      sampleSizeExpression = expressionToGlsl(\n        fragContext,\n        style[`fill-pattern-size`],\n        NumberArrayType,\n      );\n      offsetExpression = parseImageOffsetProperties(\n        style,\n        'fill-pattern-',\n        fragContext,\n        sizeExpression,\n        sampleSizeExpression,\n      );\n    }\n    fragContext.functions['sampleFillPattern'] =\n      `vec4 sampleFillPattern(sampler2D texture, vec2 textureSize, vec2 textureOffset, vec2 sampleSize, vec2 pxOrigin, vec2 pxPosition) {\n  float scaleRatio = pow(2., mod(u_zoom + 0.5, 1.) - 0.5);\n  vec2 pxRelativePos = pxPosition - pxOrigin;\n  // rotate the relative position from origin by the current view rotation\n  pxRelativePos = vec2(pxRelativePos.x * cos(u_rotation) - pxRelativePos.y * sin(u_rotation), pxRelativePos.x * sin(u_rotation) + pxRelativePos.y * cos(u_rotation));\n  // sample position is computed according to the sample offset & size\n  vec2 samplePos = mod(pxRelativePos / scaleRatio, sampleSize);\n  // also make sure that we're not sampling too close to the borders to avoid interpolation with outside pixels\n  samplePos = clamp(samplePos, vec2(0.5), sampleSize - vec2(0.5));\n  samplePos.y = sampleSize.y - samplePos.y; // invert y axis so that images appear upright\n  return samplePremultiplied(texture, (samplePos + textureOffset) / textureSize);\n}`;\n    const textureName = `u_texture${textureId}`;\n    let tintExpression = '1.';\n    if ('fill-color' in style) {\n      tintExpression = builder.getFillColorExpression();\n    }\n    builder.setFillColorExpression(\n      `${tintExpression} * sampleFillPattern(${textureName}, ${sizeExpression}, ${offsetExpression}, ${sampleSizeExpression}, pxOrigin, pxPos)`,\n    );\n  }\n}\n\n/**\n * @typedef {Object} StyleParseResult\n * @property {ShaderBuilder} builder Shader builder pre-configured according to a given style\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").UniformDefinitions} uniforms Uniform definitions\n * @property {import(\"../render/webgl/VectorStyleRenderer.js\").AttributeDefinitions} attributes Attribute definitions\n */\n\n/**\n * Parses a {@link import(\"../style/webgl.js\").WebGLStyle} object and returns a {@link ShaderBuilder}\n * object that has been configured according to the given style, as well as `attributes` and `uniforms`\n * arrays to be fed to the `WebGLPointsRenderer` class.\n *\n * Also returns `uniforms` and `attributes` properties as expected by the\n * {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @param {import(\"../style/webgl.js\").WebGLStyle} style Literal style.\n * @return {StyleParseResult} Result containing shader params, attributes and uniforms.\n */\nexport function parseLiteralStyle(style) {\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const vertContext = {\n    inFragmentShader: false,\n    properties: {},\n    variables: {},\n    functions: {},\n    style,\n  };\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const fragContext = {\n    inFragmentShader: true,\n    variables: vertContext.variables,\n    properties: {},\n    functions: {},\n    style,\n  };\n\n  const builder = new ShaderBuilder();\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  if ('icon-src' in style) {\n    parseIconProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('shape-points' in style) {\n    parseShapeProperties(style, builder, uniforms, vertContext, fragContext);\n  } else if ('circle-radius' in style) {\n    parseCircleProperties(style, builder, uniforms, vertContext, fragContext);\n  }\n  parseStrokeProperties(style, builder, uniforms, vertContext, fragContext);\n  parseFillProperties(style, builder, uniforms, vertContext, fragContext);\n\n  if (style.filter) {\n    const parsedFilter = expressionToGlsl(\n      fragContext,\n      style.filter,\n      BooleanType,\n    );\n    builder.setFragmentDiscardExpression(`!${parsedFilter}`);\n  }\n\n  // define one uniform per variable\n  Object.keys(fragContext.variables).forEach(function (varName) {\n    const variable = fragContext.variables[varName];\n    const uniformName = uniformNameForVariable(variable.name);\n    builder.addUniform(`${getGlslTypeFromType(variable.type)} ${uniformName}`);\n\n    let callback;\n    if (variable.type === StringType) {\n      callback = () =>\n        getStringNumberEquivalent(\n          /** @type {string} */ (style.variables[variable.name]),\n        );\n    } else if (variable.type === ColorType) {\n      callback = () =>\n        packColor([\n          ...asArray(\n            /** @type {string|Array<number>} */ (\n              style.variables[variable.name]\n            ) || '#eee',\n          ),\n        ]);\n    } else if (variable.type === BooleanType) {\n      callback = () =>\n        /** @type {boolean} */ (style.variables[variable.name]) ? 1.0 : 0.0;\n    } else {\n      callback = () => /** @type {number} */ (style.variables[variable.name]);\n    }\n    uniforms[uniformName] = callback;\n  });\n\n  // for each feature attribute used in the fragment shader, define a varying that will be used to pass data\n  // from the vertex to the fragment shader, as well as an attribute in the vertex shader (if not already present)\n  Object.keys(fragContext.properties).forEach(function (propName) {\n    const property = fragContext.properties[propName];\n    if (!vertContext.properties[propName]) {\n      vertContext.properties[propName] = property;\n    }\n    let type = getGlslTypeFromType(property.type);\n    let expression = `a_prop_${property.name}`;\n    if (property.type === ColorType) {\n      type = 'vec4';\n      expression = `unpackColor(${expression})`;\n      builder.addVertexShaderFunction(UNPACK_COLOR_FN);\n    }\n    builder.addVarying(`v_prop_${property.name}`, type, expression);\n  });\n\n  // for each feature attribute used in the vertex shader, define an attribute in the vertex shader.\n  Object.keys(vertContext.properties).forEach(function (propName) {\n    const property = vertContext.properties[propName];\n    builder.addAttribute(\n      `${getGlslTypeFromType(property.type)} a_prop_${property.name}`,\n    );\n  });\n\n  const attributes = Object.keys(vertContext.properties).map(\n    function (propName) {\n      const property = vertContext.properties[propName];\n      let callback;\n      if (property.evaluator) {\n        callback = property.evaluator;\n      } else if (property.type === StringType) {\n        callback = (feature) =>\n          getStringNumberEquivalent(feature.get(property.name));\n      } else if (property.type === ColorType) {\n        callback = (feature) =>\n          packColor([...asArray(feature.get(property.name) || '#eee')]);\n      } else if (property.type === BooleanType) {\n        callback = (feature) => (feature.get(property.name) ? 1.0 : 0.0);\n      } else {\n        callback = (feature) => feature.get(property.name);\n      }\n\n      return {\n        name: property.name,\n        size: getGlslSizeFromType(property.type),\n        callback,\n      };\n    },\n  );\n\n  // add functions that were collected in the compilation contexts\n  for (const functionName in vertContext.functions) {\n    builder.addVertexShaderFunction(vertContext.functions[functionName]);\n  }\n  for (const functionName in fragContext.functions) {\n    builder.addFragmentShaderFunction(fragContext.functions[functionName]);\n  }\n\n  return {\n    builder: builder,\n    attributes: attributes.reduce(\n      (prev, curr) => ({\n        ...prev,\n        [curr.name]: {callback: curr.callback, size: curr.size},\n      }),\n      {},\n    ),\n    uniforms: uniforms,\n  };\n}\n","/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, {\n  Attributes,\n  Uniforms,\n} from '../renderer/webgl/TileLayer.js';\nimport {ColorType, NumberType} from '../expr/expression.js';\nimport {\n  PALETTE_TEXTURE_ARRAY,\n  getStringNumberEquivalent,\n  newCompilationContext,\n  uniformNameForVariable,\n} from '../expr/gpu.js';\nimport {expressionToGlsl} from '../webgl/styleparser.js';\n\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../expr/expression.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../expr/expression.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n  const vertexShader = `\n    attribute vec2 ${Attributes.TEXTURE_COORD};\n    uniform mat4 ${Uniforms.TILE_TRANSFORM};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.TEXTURE_RESOLUTION};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_X};\n    uniform float ${Uniforms.TEXTURE_ORIGIN_Y};\n    uniform float ${Uniforms.DEPTH};\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n\n    void main() {\n      v_textureCoord = ${Attributes.TEXTURE_COORD};\n      v_mapCoord = vec2(\n        ${Uniforms.TEXTURE_ORIGIN_X} + ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_WIDTH} * v_textureCoord[0],\n        ${Uniforms.TEXTURE_ORIGIN_Y} - ${Uniforms.TEXTURE_RESOLUTION} * ${Uniforms.TEXTURE_PIXEL_HEIGHT} * v_textureCoord[1]\n      );\n      gl_Position = ${Uniforms.TILE_TRANSFORM} * vec4(${Attributes.TEXTURE_COORD}, ${Uniforms.DEPTH}, 1.0);\n    }\n  `;\n\n  /**\n   * @type {import(\"../expr/gpu.js\").CompilationContext}\n   */\n  const context = {\n    ...newCompilationContext(),\n    inFragmentShader: true,\n    bandCount: bandCount,\n    style: style,\n  };\n\n  const pipeline = [];\n\n  if (style.color !== undefined) {\n    const color = expressionToGlsl(context, style.color, ColorType);\n    pipeline.push(`color = ${color};`);\n  }\n\n  if (style.contrast !== undefined) {\n    const contrast = expressionToGlsl(context, style.contrast, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${contrast} + 1.0) * color.rgb - (${contrast} / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  if (style.exposure !== undefined) {\n    const exposure = expressionToGlsl(context, style.exposure, NumberType);\n    pipeline.push(\n      `color.rgb = clamp((${exposure} + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  if (style.saturation !== undefined) {\n    const saturation = expressionToGlsl(context, style.saturation, NumberType);\n    pipeline.push(`\n      float saturation = ${saturation} + 1.0;\n      float sr = (1.0 - saturation) * 0.2126;\n      float sg = (1.0 - saturation) * 0.7152;\n      float sb = (1.0 - saturation) * 0.0722;\n      mat3 saturationMatrix = mat3(\n        sr + saturation, sr, sr,\n        sg, sg + saturation, sg,\n        sb, sb, sb + saturation\n      );\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\n    `);\n  }\n\n  if (style.gamma !== undefined) {\n    const gamma = expressionToGlsl(context, style.gamma, NumberType);\n    pipeline.push(`color.rgb = pow(color.rgb, vec3(1.0 / ${gamma}));`);\n  }\n\n  if (style.brightness !== undefined) {\n    const brightness = expressionToGlsl(context, style.brightness, NumberType);\n    pipeline.push(\n      `color.rgb = clamp(color.rgb + ${brightness}, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));`,\n    );\n  }\n\n  /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n  const uniforms = {};\n\n  const numVariables = Object.keys(context.variables).length;\n  if (numVariables > 1 && !style.variables) {\n    throw new Error(\n      `Missing variables in style (expected ${context.variables})`,\n    );\n  }\n\n  for (let i = 0; i < numVariables; ++i) {\n    const variable = context.variables[Object.keys(context.variables)[i]];\n    if (!(variable.name in style.variables)) {\n      throw new Error(`Missing '${variable.name}' in style variables`);\n    }\n    const uniformName = uniformNameForVariable(variable.name);\n    uniforms[uniformName] = function () {\n      let value = style.variables[variable.name];\n      if (typeof value === 'string') {\n        value = getStringNumberEquivalent(value);\n      }\n      return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n    };\n  }\n\n  const uniformDeclarations = Object.keys(uniforms).map(function (name) {\n    return `uniform float ${name};`;\n  });\n\n  const textureCount = Math.ceil(bandCount / 4);\n  uniformDeclarations.push(\n    `uniform sampler2D ${Uniforms.TILE_TEXTURE_ARRAY}[${textureCount}];`,\n  );\n\n  if (context.paletteTextures) {\n    uniformDeclarations.push(\n      `uniform sampler2D ${PALETTE_TEXTURE_ARRAY}[${context.paletteTextures.length}];`,\n    );\n  }\n\n  const functionDefintions = Object.keys(context.functions).map(\n    function (name) {\n      return context.functions[name];\n    },\n  );\n\n  const fragmentShader = `\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    #else\n    precision mediump float;\n    #endif\n\n    varying vec2 v_textureCoord;\n    varying vec2 v_mapCoord;\n    uniform vec4 ${Uniforms.RENDER_EXTENT};\n    uniform float ${Uniforms.TRANSITION_ALPHA};\n    uniform float ${Uniforms.TEXTURE_PIXEL_WIDTH};\n    uniform float ${Uniforms.TEXTURE_PIXEL_HEIGHT};\n    uniform float ${Uniforms.RESOLUTION};\n    uniform float ${Uniforms.ZOOM};\n\n    ${uniformDeclarations.join('\\n')}\n\n    ${functionDefintions.join('\\n')}\n\n    void main() {\n      if (\n        v_mapCoord[0] < ${Uniforms.RENDER_EXTENT}[0] ||\n        v_mapCoord[1] < ${Uniforms.RENDER_EXTENT}[1] ||\n        v_mapCoord[0] > ${Uniforms.RENDER_EXTENT}[2] ||\n        v_mapCoord[1] > ${Uniforms.RENDER_EXTENT}[3]\n      ) {\n        discard;\n      }\n\n      vec4 color = texture2D(${\n        Uniforms.TILE_TEXTURE_ARRAY\n      }[0],  v_textureCoord);\n\n      ${pipeline.join('\\n')}\n\n      gl_FragColor = color;\n      gl_FragColor.rgb *= gl_FragColor.a;\n      gl_FragColor *= ${Uniforms.TRANSITION_ALPHA};\n    }`;\n\n  return {\n    vertexShader: vertexShader,\n    fragmentShader: fragmentShader,\n    uniforms: uniforms,\n    paletteTextures: context.paletteTextures,\n  };\n}\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nclass WebGLTileLayer extends BaseTileLayer {\n  /**\n   * @param {Options} options Tile layer options.\n   */\n  constructor(options) {\n    options = options ? Object.assign({}, options) : {};\n\n    const style = options.style || {};\n    delete options.style;\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    super(options);\n\n    /**\n     * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n     * @private\n     */\n    this.sources_ = options.sources;\n\n    /**\n     * @type {SourceType|null}\n     * @private\n     */\n    this.renderedSource_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.style_ = style;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    /**\n     * @type {Object<string, (string|number)>}\n     * @private\n     */\n    this.styleVariables_ = this.style_.variables || {};\n\n    this.addChangeListener(LayerProperty.SOURCE, this.handleSourceUpdate_);\n  }\n\n  /**\n   * Gets the sources for this layer, for a given extent and resolution.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @return {Array<SourceType>} Sources.\n   */\n  getSources(extent, resolution) {\n    const source = this.getSource();\n    return this.sources_\n      ? typeof this.sources_ === 'function'\n        ? this.sources_(extent, resolution)\n        : this.sources_\n      : source\n        ? [source]\n        : [];\n  }\n\n  /**\n   * @return {SourceType} The source being rendered.\n   */\n  getRenderSource() {\n    return this.renderedSource_ || this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getRenderSource();\n    return source ? source.getState() : 'undefined';\n  }\n\n  /**\n   * @private\n   */\n  handleSourceUpdate_() {\n    if (this.hasRenderer()) {\n      this.getRenderer().clearCache();\n    }\n    if (this.getSource()) {\n      this.setStyle(this.style_);\n    }\n  }\n\n  /**\n   * @private\n   * @return {number} The number of source bands.\n   */\n  getSourceBandCount_() {\n    const max = Number.MAX_SAFE_INTEGER;\n    const sources = this.getSources([-max, -max, max, max], max);\n    return sources && sources.length && 'bandCount' in sources[0]\n      ? sources[0].bandCount\n      : 4;\n  }\n\n  createRenderer() {\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n\n    return new WebGLTileLayerRenderer(this, {\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      cacheSize: this.cacheSize_,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n  }\n\n  /**\n   * @param {import(\"../Map\").FrameState} frameState Frame state.\n   * @param {Array<SourceType>} sources Sources.\n   * @return {HTMLElement} Canvas.\n   */\n  renderSources(frameState, sources) {\n    const layerRenderer = this.getRenderer();\n    let canvas;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      this.renderedSource_ = sources[i];\n      if (layerRenderer.prepareFrame(frameState)) {\n        canvas = layerRenderer.renderFrame(frameState);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    this.rendered = true;\n    const viewState = frameState.viewState;\n    const sources = this.getSources(frameState.extent, viewState.resolution);\n    let ready = true;\n    for (let i = 0, ii = sources.length; i < ii; ++i) {\n      const source = sources[i];\n      const sourceState = source.getState();\n      if (sourceState == 'loading') {\n        const onChange = () => {\n          if (source.getState() == 'ready') {\n            source.removeEventListener('change', onChange);\n            this.changed();\n          }\n        };\n        source.addEventListener('change', onChange);\n      }\n      ready = ready && sourceState == 'ready';\n    }\n    const canvas = this.renderSources(frameState, sources);\n    if (this.getRenderer().renderComplete && ready) {\n      // Fully rendered, done.\n      this.renderedResolution_ = viewState.resolution;\n      return canvas;\n    }\n    // Render sources from previously fully rendered frames\n    if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n      const altSources = this.getSources(\n        frameState.extent,\n        this.renderedResolution_,\n      ).filter((source) => !sources.includes(source));\n      if (altSources.length > 0) {\n        return this.renderSources(frameState, altSources);\n      }\n    }\n    return canvas;\n  }\n\n  /**\n   * Update the layer style.  The `updateStyleVariables` function is a more efficient\n   * way to update layer rendering.  In cases where the whole style needs to be updated,\n   * this method may be called instead.  Note that calling this method will also replace\n   * any previously set variables, so the new style also needs to include new variables,\n   * if needed.\n   * @param {Style} style The new style.\n   */\n  setStyle(style) {\n    this.styleVariables_ = style.variables || {};\n    this.style_ = style;\n    const parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n    const renderer = this.getRenderer();\n    renderer.reset({\n      vertexShader: parsedStyle.vertexShader,\n      fragmentShader: parsedStyle.fragmentShader,\n      uniforms: parsedStyle.uniforms,\n      paletteTextures: parsedStyle.paletteTextures,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update any variables used by the layer style and trigger a re-render.\n   * @param {Object<string, number>} variables Variables to update.\n   * @api\n   */\n  updateStyleVariables(variables) {\n    Object.assign(this.styleVariables_, variables);\n    this.changed();\n  }\n}\n\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\n\nexport default WebGLTileLayer;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport ReprojDataTile from '../reproj/DataTile.js';\nimport TileCache from '../TileCache.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {\n  createXYZ,\n  extentFromProjection,\n  getForProjection as getTileGridForProjection,\n} from '../tilegrid.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in milliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options DataTile source options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../TileCache.js\").default>}\n     */\n    this.tileCacheForProjection_ = {};\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.gutter_;\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} targetProj The output projection.\n   * @param {import(\"../proj/Projection.js\").default} sourceProj The input projection.\n   * @return {!DataTile} Tile.\n   */\n  getReprojTile_(z, x, y, targetProj, sourceProj) {\n    const cache = this.getTileCacheForProjection(targetProj);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (cache.containsKey(tileCoordKey)) {\n      const tile = cache.get(tileCoordKey);\n      if (tile && tile.key == this.getKey()) {\n        return tile;\n      }\n    }\n\n    const tileGrid = this.getTileGrid();\n    const reprojTilePixelRatio = Math.max.apply(\n      null,\n      tileGrid.getResolutions().map((r, z) => {\n        const tileSize = toSize(tileGrid.getTileSize(z));\n        const textureSize = this.getTileSize(z);\n        return Math.max(\n          textureSize[0] / tileSize[0],\n          textureSize[1] / tileSize[1],\n        );\n      }),\n    );\n\n    const sourceTileGrid = this.getTileGridForProjection(sourceProj);\n    const targetTileGrid = this.getTileGridForProjection(targetProj);\n    const tileCoord = [z, x, y];\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      targetProj,\n    );\n\n    const options = Object.assign(\n      {\n        sourceProj,\n        sourceTileGrid,\n        targetProj,\n        targetTileGrid,\n        tileCoord,\n        wrappedTileCoord,\n        pixelRatio: reprojTilePixelRatio,\n        gutter: this.getGutterForProjection(sourceProj),\n        getTileFunction: (z, x, y, pixelRatio) =>\n          this.getTile(z, x, y, pixelRatio, sourceProj),\n      },\n      this.tileOptions,\n    );\n    const newTile = new ReprojDataTile(options);\n    newTile.key = this.getKey();\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      sourceProjection &&\n      projection &&\n      !equivalent(sourceProjection, projection)\n    ) {\n      return this.getReprojTile_(z, x, y, projection, sourceProjection);\n    }\n\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions,\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection_)) {\n      this.tileGridForProjection_[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection_[projKey];\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection_)) {\n        this.tileGridForProjection_[projKey] = tilegrid;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection_)) {\n      this.tileCacheForProjection_[projKey] = new TileCache(0.1); // don't cache\n    }\n    return this.tileCacheForProjection_[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection_) {\n      const tileCache = this.tileCacheForProjection_[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection_) {\n      this.tileCacheForProjection_[id].clear();\n    }\n  }\n}\n\nexport default DataTileSource;\n","import { getDecoder } from './compression/index.js';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 2) : 2;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} [size] The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {function(): Worker} [createWorker] A function that creates the decoder worker.\n   * Defaults to a worker with all decoders that ship with geotiff.js. The `createWorker()`\n   * function is expected to return a `Worker` compatible with Web Workers. For code that\n   * runs in Node, [web-worker](https://www.npmjs.com/package/web-worker) is a good choice.\n   *\n   * A worker that uses a custom lzw decoder would look like this `my-custom-worker.js` file:\n   * ```js\n   * import { addDecoder, getDecoder } from 'geotiff';\n   * addDecoder(5, () => import ('./my-custom-lzw').then((m) => m.default));\n   * self.addEventListener('message', async (e) => {\n   *   const { id, fileDirectory, buffer } = e.data;\n   *   const decoder = await getDecoder(fileDirectory);\n   *   const decoded = await decoder.decode(fileDirectory, buffer);\n   *   self.postMessage({ decoded, id }, [decoded]);\n   * });\n   * ```\n   * The way the above code is built into a worker by the `createWorker()` function\n   * depends on the used bundler. For most bundlers, something like this will work:\n   * ```js\n   * function createWorker() {\n   *   return new Worker(new URL('./my-custom-worker.js', import.meta.url));\n   * }\n   * ```\n   */\n  constructor(size = defaultPoolSize, createWorker) {\n    this.workers = null;\n    this._awaitingDecoder = null;\n    this.size = size;\n    this.messageId = 0;\n    if (size) {\n      this._awaitingDecoder = createWorker ? Promise.resolve(createWorker) : new Promise((resolve) => {\n        import('./worker/decoder.js').then((module) => {\n          resolve(module.create);\n        });\n      });\n      this._awaitingDecoder.then((create) => {\n        this._awaitingDecoder = null;\n        this.workers = [];\n        for (let i = 0; i < size; i++) {\n          this.workers.push({ worker: create(), idle: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    if (this._awaitingDecoder) {\n      await this._awaitingDecoder;\n    }\n    return this.size === 0\n      ? getDecoder(fileDirectory).then((decoder) => decoder.decode(fileDirectory, buffer))\n      : new Promise((resolve) => {\n        const worker = this.workers.find((candidate) => candidate.idle)\n          || this.workers[Math.floor(Math.random() * this.size)];\n        worker.idle = false;\n        const id = this.messageId++;\n        const onMessage = (e) => {\n          if (e.data.id === id) {\n            worker.idle = true;\n            resolve(e.data.decoded);\n            worker.worker.removeEventListener('message', onMessage);\n          }\n        };\n        worker.worker.addEventListener('message', onMessage);\n        worker.worker.postMessage({ fileDirectory, buffer, id }, [buffer]);\n      });\n  }\n\n  destroy() {\n    if (this.workers) {\n      this.workers.forEach((worker) => {\n        worker.worker.terminate();\n      });\n      this.workers = null;\n    }\n  }\n}\n\nexport default Pool;\n","/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {\n  Pool,\n  globals as geotiffGlobals,\n  fromBlob as tiffFromBlob,\n  fromUrl as tiffFromUrl,\n  fromUrls as tiffFromUrls,\n} from 'geotiff';\nimport {\n  Projection,\n  get as getCachedProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {clamp} from '../math.js';\nimport {getCenter, getIntersection} from '../extent.js';\nimport {error as logError} from '../console.js';\nimport {fromCode as unitsFromCode} from '../proj/Units.js';\n\n/**\n * Determine if an image type is a mask.\n * See https://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} The image is a mask.\n */\nfunction isMask(image) {\n  const fileDirectory = image.fileDirectory;\n  const type = fileDirectory.NewSubfileType || 0;\n  return (type & 4) === 4;\n}\n\n/**\n * @param {true|false|'auto'} preference The convertToRGB option.\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} Use the `image.readRGB()` method.\n */\nfunction readRGB(preference, image) {\n  if (!preference) {\n    return false;\n  }\n  if (preference === true) {\n    return true;\n  }\n  if (image.getSamplesPerPixel() !== 3) {\n    return false;\n  }\n  const interpretation = image.fileDirectory.PhotometricInterpretation;\n  const interpretations = geotiffGlobals.photometricInterpretations;\n  return (\n    interpretation === interpretations.CMYK ||\n    interpretation === interpretations.YCbCr ||\n    interpretation === interpretations.CIELab ||\n    interpretation === interpretations.ICCLab\n  );\n}\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\n\nconst STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nconst STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n\nconst defaultTileSize = 256;\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\n\nlet workerPool;\nfunction getWorkerPool() {\n  if (!workerPool) {\n    workerPool = new Pool();\n  }\n  return workerPool;\n}\n\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n  try {\n    return image.getBoundingBox();\n  } catch (_) {\n    return [0, 0, image.getWidth(), image.getHeight()];\n  }\n}\n\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n  try {\n    return image.getOrigin().slice(0, 2);\n  } catch (_) {\n    return [0, image.getHeight()];\n  }\n}\n\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n  try {\n    return image.getResolution(referenceImage);\n  } catch (_) {\n    return [\n      referenceImage.getWidth() / image.getWidth(),\n      referenceImage.getHeight() / image.getHeight(),\n    ];\n  }\n}\n\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n  const geoKeys = image.geoKeys;\n  if (!geoKeys) {\n    return null;\n  }\n\n  if (\n    geoKeys.ProjectedCSTypeGeoKey &&\n    geoKeys.ProjectedCSTypeGeoKey !== 32767\n  ) {\n    const code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  if (geoKeys.GeographicTypeGeoKey && geoKeys.GeographicTypeGeoKey !== 32767) {\n    const code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  return null;\n}\n\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n  return tiff.getImageCount().then(function (count) {\n    const requests = new Array(count);\n    for (let i = 0; i < count; ++i) {\n      requests[i] = tiff.getImage(i);\n    }\n    return Promise.all(requests);\n  });\n}\n\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n  let request;\n  if (source.blob) {\n    request = tiffFromBlob(source.blob);\n  } else if (source.overviews) {\n    request = tiffFromUrls(source.url, source.overviews, options);\n  } else {\n    request = tiffFromUrl(source.url, options);\n  }\n  return request.then(getImagesForTIFF);\n}\n\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n  if (Array.isArray(expected)) {\n    const length = expected.length;\n    if (!Array.isArray(got) || length != got.length) {\n      const error = new Error(message);\n      rejector(error);\n      throw error;\n    }\n    for (let i = 0; i < length; ++i) {\n      assertEqual(expected[i], got[i], tolerance, message, rejector);\n    }\n    return;\n  }\n\n  got = /** @type {number} */ (got);\n  if (Math.abs(expected - got) > tolerance * expected) {\n    throw new Error(message);\n  }\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n  if (array instanceof Int8Array) {\n    return -128;\n  }\n  if (array instanceof Int16Array) {\n    return -32768;\n  }\n  if (array instanceof Int32Array) {\n    return -2147483648;\n  }\n  if (array instanceof Float32Array) {\n    return 1.2e-38;\n  }\n  return 0;\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n  if (array instanceof Int8Array) {\n    return 127;\n  }\n  if (array instanceof Uint8Array) {\n    return 255;\n  }\n  if (array instanceof Uint8ClampedArray) {\n    return 255;\n  }\n  if (array instanceof Int16Array) {\n    return 32767;\n  }\n  if (array instanceof Uint16Array) {\n    return 65535;\n  }\n  if (array instanceof Int32Array) {\n    return 2147483647;\n  }\n  if (array instanceof Uint32Array) {\n    return 4294967295;\n  }\n  if (array instanceof Float32Array) {\n    return 3.4e38;\n  }\n  return 255;\n}\n\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {true|false|'auto'} [convertToRGB=false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.  Setting the option to `'auto'` will make it so CMYK, YCbCr,\n * CIELab, and ICCLab images will automatically be converted to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Source projection.  If not provided, the GeoTIFF metadata\n * will be read for projection information.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * **Note for users of the full build**: The `GeoTIFF` source requires the\n * [geotiff.js](https://github.com/geotiffjs/geotiff.js) library to be loaded as well.\n *\n * @api\n */\nclass GeoTIFFSource extends DataTile {\n  /**\n   * @param {Options} options Data tile options.\n   */\n  constructor(options) {\n    super({\n      state: 'loading',\n      tileGrid: null,\n      projection: options.projection || null,\n      opaque: options.opaque,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {Array<SourceInfo>}\n     * @private\n     */\n    this.sourceInfo_ = options.sources;\n\n    const numSources = this.sourceInfo_.length;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.sourceOptions_ = options.sourceOptions;\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceImagery_ = new Array(numSources);\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceMasks_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.resolutionFactors_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.samplesPerPixel_;\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.nodataValues_;\n\n    /**\n     * @type {Array<Array<GDALMetadata>>}\n     * @private\n     */\n    this.metadata_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.normalize_ = options.normalize !== false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.addAlpha_ = false;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {true|false|'auto'}\n     */\n    this.convertToRGB_ = options.convertToRGB || false;\n\n    this.setKey(this.sourceInfo_.map((source) => source.url).join(','));\n\n    const self = this;\n    const requests = new Array(numSources);\n    for (let i = 0; i < numSources; ++i) {\n      requests[i] = getImagesForSource(\n        this.sourceInfo_[i],\n        this.sourceOptions_,\n      );\n    }\n    Promise.all(requests)\n      .then(function (sources) {\n        self.configure_(sources);\n      })\n      .catch(function (error) {\n        logError(error);\n        self.error_ = error;\n        self.setState('error');\n      });\n  }\n\n  /**\n   * @return {Error} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * geotiffSource.on('change', () => {\n   *   if (geotiffSource.getState() === 'error') {\n   *     console.error(geotiffSource.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Determine the projection of the images in this GeoTIFF.\n   * The default implementation looks at the ProjectedCSTypeGeoKey and the GeographicTypeGeoKey\n   * of each image in turn.\n   * You can override this method in a subclass to support more projections.\n   *\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   */\n  determineProjection(sources) {\n    const firstSource = sources[0];\n    for (let i = firstSource.length - 1; i >= 0; --i) {\n      const image = firstSource[i];\n      const projection = getProjection(image);\n      if (projection) {\n        this.projection = projection;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n   * must have the same internal tiled structure.\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   * @private\n   */\n  configure_(sources) {\n    let extent;\n    let origin;\n    let commonRenderTileSizes;\n    let commonSourceTileSizes;\n    let resolutions;\n    const samplesPerPixel = new Array(sources.length);\n    const nodataValues = new Array(sources.length);\n    const metadata = new Array(sources.length);\n    let minZoom = 0;\n\n    const sourceCount = sources.length;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const images = [];\n      const masks = [];\n      sources[sourceIndex].forEach((item) => {\n        if (isMask(item)) {\n          masks.push(item);\n        } else {\n          images.push(item);\n        }\n      });\n\n      const imageCount = images.length;\n      if (masks.length > 0 && masks.length !== imageCount) {\n        throw new Error(\n          `Expected one mask per image found ${masks.length} masks and ${imageCount} images`,\n        );\n      }\n\n      let sourceExtent;\n      let sourceOrigin;\n      const sourceTileSizes = new Array(imageCount);\n      const renderTileSizes = new Array(imageCount);\n      const sourceResolutions = new Array(imageCount);\n\n      nodataValues[sourceIndex] = new Array(imageCount);\n      metadata[sourceIndex] = new Array(imageCount);\n\n      for (let imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n        const image = images[imageIndex];\n        const nodataValue = image.getGDALNoData();\n        metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n        nodataValues[sourceIndex][imageIndex] = nodataValue;\n\n        const wantedSamples = this.sourceInfo_[sourceIndex].bands;\n        samplesPerPixel[sourceIndex] = wantedSamples\n          ? wantedSamples.length\n          : image.getSamplesPerPixel();\n        const level = imageCount - (imageIndex + 1);\n\n        if (!sourceExtent) {\n          sourceExtent = getBoundingBox(image);\n        }\n\n        if (!sourceOrigin) {\n          sourceOrigin = getOrigin(image);\n        }\n\n        const imageResolutions = getResolutions(image, images[0]);\n        sourceResolutions[level] = imageResolutions[0];\n\n        const sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n\n        // request larger blocks for untiled layouts\n        if (\n          sourceTileSize[0] !== sourceTileSize[1] &&\n          sourceTileSize[1] < defaultTileSize\n        ) {\n          sourceTileSize[0] = defaultTileSize;\n          sourceTileSize[1] = defaultTileSize;\n        }\n\n        sourceTileSizes[level] = sourceTileSize;\n\n        const aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n        renderTileSizes[level] = [\n          sourceTileSize[0],\n          sourceTileSize[1] / aspectRatio,\n        ];\n      }\n\n      if (!extent) {\n        extent = sourceExtent;\n      } else {\n        getIntersection(extent, sourceExtent, extent);\n      }\n\n      if (!origin) {\n        origin = sourceOrigin;\n      } else {\n        const message = `Origin mismatch for source ${sourceIndex}, got [${sourceOrigin}] but expected [${origin}]`;\n        assertEqual(origin, sourceOrigin, 0, message, this.viewRejector);\n      }\n\n      if (!resolutions) {\n        resolutions = sourceResolutions;\n        this.resolutionFactors_[sourceIndex] = 1;\n      } else {\n        if (resolutions.length - minZoom > sourceResolutions.length) {\n          minZoom = resolutions.length - sourceResolutions.length;\n        }\n        const resolutionFactor =\n          resolutions[resolutions.length - 1] /\n          sourceResolutions[sourceResolutions.length - 1];\n        this.resolutionFactors_[sourceIndex] = resolutionFactor;\n        const scaledSourceResolutions = sourceResolutions.map(\n          (resolution) => (resolution *= resolutionFactor),\n        );\n        const message = `Resolution mismatch for source ${sourceIndex}, got [${scaledSourceResolutions}] but expected [${resolutions}]`;\n        assertEqual(\n          resolutions.slice(minZoom, resolutions.length),\n          scaledSourceResolutions,\n          0.02,\n          message,\n          this.viewRejector,\n        );\n      }\n\n      if (!commonRenderTileSizes) {\n        commonRenderTileSizes = renderTileSizes;\n      } else {\n        assertEqual(\n          commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length),\n          renderTileSizes,\n          0.01,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector,\n        );\n      }\n\n      if (!commonSourceTileSizes) {\n        commonSourceTileSizes = sourceTileSizes;\n      } else {\n        assertEqual(\n          commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length),\n          sourceTileSizes,\n          0,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector,\n        );\n      }\n\n      this.sourceImagery_[sourceIndex] = images.reverse();\n      this.sourceMasks_[sourceIndex] = masks.reverse();\n    }\n\n    for (let i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n      const sourceImagery = this.sourceImagery_[i];\n      while (sourceImagery.length < resolutions.length) {\n        sourceImagery.unshift(undefined);\n      }\n    }\n\n    if (!this.getProjection()) {\n      this.determineProjection(sources);\n    }\n\n    this.samplesPerPixel_ = samplesPerPixel;\n    this.nodataValues_ = nodataValues;\n    this.metadata_ = metadata;\n\n    // decide if we need to add an alpha band to handle nodata\n    outer: for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      // option 1: source is configured with a nodata value\n      if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n        this.addAlpha_ = true;\n        break;\n      }\n      if (this.sourceMasks_[sourceIndex].length) {\n        this.addAlpha_ = true;\n        break;\n      }\n\n      const values = nodataValues[sourceIndex];\n\n      // option 2: check image metadata for limited bands\n      const bands = this.sourceInfo_[sourceIndex].bands;\n      if (bands) {\n        for (let i = 0; i < bands.length; ++i) {\n          if (values[bands[i] - 1] !== null) {\n            this.addAlpha_ = true;\n            break outer;\n          }\n        }\n        continue;\n      }\n\n      // option 3: check image metadata for all bands\n      for (let imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n        if (values[imageIndex] !== null) {\n          this.addAlpha_ = true;\n          break outer;\n        }\n      }\n    }\n\n    let bandCount = this.addAlpha_ ? 1 : 0;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      bandCount += samplesPerPixel[sourceIndex];\n    }\n    this.bandCount = bandCount;\n\n    const tileGrid = new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: resolutions,\n      tileSizes: commonRenderTileSizes,\n    });\n\n    this.tileGrid = tileGrid;\n    this.setTileSizes(commonSourceTileSizes);\n\n    this.setLoader(this.loadTile_.bind(this));\n    this.setState('ready');\n\n    const zoom = 1;\n    if (resolutions.length === 2) {\n      resolutions = [resolutions[0], resolutions[1], resolutions[1] / 2];\n    } else if (resolutions.length === 1) {\n      resolutions = [resolutions[0] * 2, resolutions[0], resolutions[0] / 2];\n    }\n\n    this.viewResolver({\n      showFullExtent: true,\n      projection: this.projection,\n      resolutions: resolutions,\n      center: toUserCoordinate(getCenter(extent), this.projection),\n      extent: toUserExtent(extent, this.projection),\n      zoom: zoom,\n    });\n  }\n\n  /**\n   * @param {number} z The z tile index.\n   * @param {number} x The x tile index.\n   * @param {number} y The y tile index.\n   * @return {Promise} The composed tile data.\n   * @private\n   */\n  loadTile_(z, x, y) {\n    const sourceTileSize = this.getTileSize(z);\n    const sourceCount = this.sourceImagery_.length;\n    const requests = new Array(sourceCount * 2);\n    const nodataValues = this.nodataValues_;\n    const sourceInfo = this.sourceInfo_;\n    const pool = getWorkerPool();\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const source = sourceInfo[sourceIndex];\n      const resolutionFactor = this.resolutionFactors_[sourceIndex];\n      const pixelBounds = [\n        Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n        Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n        Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n        Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n      ];\n      const image = this.sourceImagery_[sourceIndex][z];\n      let samples;\n      if (source.bands) {\n        samples = source.bands.map(function (bandNumber) {\n          return bandNumber - 1;\n        });\n      }\n\n      /** @type {number|Array<number>} */\n      let fillValue;\n      if ('nodata' in source && source.nodata !== null) {\n        fillValue = source.nodata;\n      } else {\n        if (!samples) {\n          fillValue = nodataValues[sourceIndex];\n        } else {\n          fillValue = samples.map(function (sampleIndex) {\n            return nodataValues[sourceIndex][sampleIndex];\n          });\n        }\n      }\n\n      const readOptions = {\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: samples,\n        fillValue: fillValue,\n        pool: pool,\n        interleave: false,\n      };\n      if (readRGB(this.convertToRGB_, image)) {\n        requests[sourceIndex] = image.readRGB(readOptions);\n      } else {\n        requests[sourceIndex] = image.readRasters(readOptions);\n      }\n\n      // requests after `sourceCount` are for mask data (if any)\n      const maskIndex = sourceCount + sourceIndex;\n      const mask = this.sourceMasks_[sourceIndex][z];\n      if (!mask) {\n        requests[maskIndex] = Promise.resolve(null);\n        continue;\n      }\n\n      requests[maskIndex] = mask.readRasters({\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: [0],\n        pool: pool,\n        interleave: false,\n      });\n    }\n\n    return Promise.all(requests)\n      .then(this.composeTile_.bind(this, sourceTileSize))\n      .catch(function (error) {\n        logError(error);\n        throw error;\n      });\n  }\n\n  /**\n   * @param {import(\"../size.js\").Size} sourceTileSize The source tile size.\n   * @param {Array} sourceSamples The source samples.\n   * @return {import(\"../DataTile.js\").Data} The composed tile data.\n   * @private\n   */\n  composeTile_(sourceTileSize, sourceSamples) {\n    const metadata = this.metadata_;\n    const sourceInfo = this.sourceInfo_;\n    const sourceCount = this.sourceImagery_.length;\n    const bandCount = this.bandCount;\n    const samplesPerPixel = this.samplesPerPixel_;\n    const nodataValues = this.nodataValues_;\n    const normalize = this.normalize_;\n    const addAlpha = this.addAlpha_;\n\n    const pixelCount = sourceTileSize[0] * sourceTileSize[1];\n    const dataLength = pixelCount * bandCount;\n\n    /** @type {Uint8Array|Float32Array} */\n    let data;\n    if (normalize) {\n      data = new Uint8Array(dataLength);\n    } else {\n      data = new Float32Array(dataLength);\n    }\n\n    let dataIndex = 0;\n    for (let pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n      let transparent = addAlpha;\n      for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n        const source = sourceInfo[sourceIndex];\n\n        let min = source.min;\n        let max = source.max;\n        let gain, bias;\n        if (normalize) {\n          const stats = metadata[sourceIndex][0];\n          if (min === undefined) {\n            if (stats && STATISTICS_MINIMUM in stats) {\n              min = parseFloat(stats[STATISTICS_MINIMUM]);\n            } else {\n              min = getMinForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n          if (max === undefined) {\n            if (stats && STATISTICS_MAXIMUM in stats) {\n              max = parseFloat(stats[STATISTICS_MAXIMUM]);\n            } else {\n              max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n\n          gain = 255 / (max - min);\n          bias = -min * gain;\n        }\n\n        for (\n          let sampleIndex = 0;\n          sampleIndex < samplesPerPixel[sourceIndex];\n          ++sampleIndex\n        ) {\n          const sourceValue =\n            sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n\n          let value;\n          if (normalize) {\n            value = clamp(gain * sourceValue + bias, 0, 255);\n          } else {\n            value = sourceValue;\n          }\n\n          if (!addAlpha) {\n            data[dataIndex] = value;\n          } else {\n            let nodata = source.nodata;\n            if (nodata === undefined) {\n              let bandIndex;\n              if (source.bands) {\n                bandIndex = source.bands[sampleIndex] - 1;\n              } else {\n                bandIndex = sampleIndex;\n              }\n              nodata = nodataValues[sourceIndex][bandIndex];\n            }\n\n            const nodataIsNaN = isNaN(nodata);\n            if (\n              (!nodataIsNaN && sourceValue !== nodata) ||\n              (nodataIsNaN && !isNaN(sourceValue))\n            ) {\n              transparent = false;\n              data[dataIndex] = value;\n            }\n          }\n          dataIndex++;\n        }\n        if (!transparent) {\n          const maskIndex = sourceCount + sourceIndex;\n          const mask = sourceSamples[maskIndex];\n          if (mask && !mask[0][pixelIndex]) {\n            transparent = true;\n          }\n        }\n      }\n      if (addAlpha) {\n        if (!transparent) {\n          data[dataIndex] = 255;\n        }\n        dataIndex++;\n      }\n    }\n\n    return data;\n  }\n}\n\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\n\nexport default GeoTIFFSource;\n","<script>\nimport Utils from '../../utils.js';\n\nimport TextControl from './TextControl.vue';\nimport ChannelControl from './ChannelControl.vue';\n\nimport TileLayer from 'ol/layer/WebGLTile';\nimport GeoTIFF from 'ol/source/GeoTIFF';\n\nexport default {\n\tcomponents: {\n\t\tChannelControl,\n\t\tTextControl\n\t},\n\tdata() {\n\t\treturn {\n\t\t\ttextControlText: 'Pixel Value: -',\n\t\t\tlayer: null,\n\t\t\tsource: null,\n\t\t\tcolorMap: null,\n\t\t\tnoData: [],\n\t\t\tdefaultChannels: [],\n\t\t\tchannels: [],\n\t\t\tbands: []\n\t\t}\n\t},\n\tcomputed: {\n\t\t...Utils.mapState('editor', ['appMode'])\n\t},\n\tmethods: {\n\t\tgetBandVar(i) {\n\t\t\treturn ['band', ['var', `${i}band`]];\n\t\t},\n\t\tgetFormula(i) {\n\t\t\tlet min = ['var', `${i}min`];\n\t\t\tlet max = ['var', `${i}max`];\n\t\t\tlet x = this.getBandVar(i);\n\t\t\tlet scale = ['*', ['/', ['-', x, min], ['-', max, min]], 255]; // Linear scaling from min - max to 0 - 255\n\t\t\treturn ['clamp', scale, 0, 255]; // clamp values in case we get cales < 0 or > 255\n\t\t},\n\t\tgetNoDataFormula() {\n\t\t\tlet band = this.getBandVar('alpha');\n\t\t\t// https://github.com/openlayers/openlayers/issues/13588#issuecomment-1125317573\n\t\t\t// return ['clamp', band, 0, 1];\n\t\t\t// return ['/', band, 255];\n\t\t\treturn ['case', ['==', band, 0], 0, 1];\n\t\t},\n\t\tasync addGeoTiff(geotiff, title = \"GeoTiff\") {\n\t\t\tthis.bands = geotiff.getBands();\n\t\t\tif (this.appMode && this.appMode.channels) {\n\t\t\t\tthis.defaultChannels = this.appMode.channels;\n\t\t\t}\n\t\t\tthis.colorMap = geotiff.getColorMap();\n\t\t\tthis.noData = geotiff.getNoData();\n\n\t\t\tlet source = {\n\t\t\t\tnodata: this.noData[0] // OL only supports passing one no data value\n\t\t\t};\n\t\t\tif (geotiff.getBlob()) {\n\t\t\t\tsource.blob = geotiff.getBlob();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsource.url = geotiff.getUrl();\n\t\t\t}\n\n\t\t\tthis.source = new GeoTIFF({\n\t\t\t\tinterpolate: false,\n\t\t\t\tnormalize: false,\n\t\t\t\tconvertToRGB: geotiff.convertToRGB,\n\t\t\t\tsources: [source]\n\t\t\t});\n\n\t\t\tthis.layer = new TileLayer({\n\t\t\t\tid: geotiff.getUrl(),\n\t\t\t\ttitle,\n\t\t\t\tsource: this.source,\n\t\t\t\tcacheSize: 2048 // https://github.com/openlayers/openlayers/issues/13670\n\t\t\t});\n\t\t\tthis.layer.set('events', {\n\t\t\t\tpointermove: evt => {\n\t\t\t\t\tlet pixelData = this.layer.getData(evt.pixel);\n\t\t\t\t\tlet value = Utils.displayRGBA(pixelData, this.noData, this.noData.length > 0);\n\t\t\t\t\tlet valueText = `Pixel Value: ${value}`;\n\t\t\t\t\tlet coords = this.formatCoords(evt.coordinate);\n\t\t\t\t\tthis.textControlText = [valueText, `${valueText} @ ${coords}`];\n\t\t\t\t},\n\t\t\t\tclick: evt => {\n\t\t\t\t\tlet data = this.layer.getData(evt.pixel);\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\tthis.chart = null;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdata = Array.from(data).slice(0, this.bands.length);\n\t\t\t\t\tif (data.length < 2 || data.every(x => !isFinite(x))) {\n\t\t\t\t\t\tthis.chart = null;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet coords = this.formatCoords(evt.coordinate);\n\t\t\t\t\tlet label = `Coordinate: ${coords}`;\n\n\t\t\t\t\tlet datasets = [{ label, data }];\n\n\t\t\t\t\tthis.chart = {\n\t\t\t\t\t\tlabels: this.bands.map(band => String(band.name || band.id)),\n\t\t\t\t\t\tdatasets\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.addLayerToMap(this.layer);\n\n\t\t\tlet extent = geotiff.getExtent();\n\t\t\tif (extent) {\n\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions(10));\n\t\t\t}\n\n\t\t\t// Hack to get the initial style set.\n\t\t\t// Not sure yet why this needs a delay -> TODO\n\t\t\tawait new Promise(r => setTimeout(r, 1250));\n\t\t\tthis.setStyle();\n\n\t\t\treturn this.source;\n\t\t},\n\t\tformatCoords(coords) {\n\t\t\treturn coords.map(x => String(parseFloat(x.toFixed(6)))).join(', ');\n\t\t},\n\t\tupdateGeoTiffStyle(type, data) {\n\t\t\tswitch(type) {\n\t\t\t\tcase 'channels':\n\t\t\t\t\tthis.channels = data;\n\t\t\t\t\tthis.setOptions('channels', data);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.setStyle();\n\t\t},\n\t\tsetStyle() {\n\t\t\tif (!this.layer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Compute variables\n\t\t\tlet variables = {};\n\t\t\tfor(let i in this.channels) {\n\t\t\t\tlet channel = this.channels[i];\n\t\t\t\tvariables[`${i}band`] = channel.id;\n\t\t\t\tvariables[`${i}min`] = channel.min;\n\t\t\t\tvariables[`${i}max`] = channel.max;\n\t\t\t}\n\t\t\tvariables.alphaband = this.bands.length + 1;\n\n\t\t\t// Create style\n\t\t\tlet color = [];\n\t\t\tif (this.colorMap) {\n\t\t\t\tcolor.push('palette');\n\t\t\t\tcolor.push(['band', 1]);\n\t\t\t\tcolor.push(this.colorMap);\n\t\t\t}\n\t\t\telse if (this.channels.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (this.channels.length === 1) {\n\t\t\t\tcolor.push('color');\n\t\t\t\tlet formula = this.getFormula(0);\n\t\t\t\tcolor.push(formula);\n\t\t\t\tcolor.push(formula);\n\t\t\t\tcolor.push(formula);\n\t\t\t\tif (this.noData.length > 0) {\n\t\t\t\t\tcolor.push(this.getNoDataFormula());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcolor.push('color');\n\t\t\t\tcolor.push(this.getFormula(0));\n\t\t\t\tcolor.push(this.getFormula(1));\n\t\t\t\tcolor.push(this.getFormula(2));\n\t\t\t\tif (this.noData.length > 0) {\n\t\t\t\t\tcolor.push(this.getNoDataFormula());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set style\n\t\t\tthis.layer.setStyle({variables, color});\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeoTiffMixin.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeoTiffMixin.vue?vue&type=script&lang=js\"","var render, staticRenderFns\nimport script from \"./GeoTiffMixin.vue?vue&type=script&lang=js\"\nexport * from \"./GeoTiffMixin.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(\n        thisArg !== undefined ? thisArg : this,\n        node,\n        objectStack,\n      );\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return function (node, value, objectStack) {\n    nodeWriter.call(\n      thisArg !== undefined ? thisArg : this,\n      node,\n      value,\n      objectStack,\n    );\n    const parent = /** @type {NodeStackItem} */ (\n      objectStack[objectStack.length - 1]\n    );\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg !== undefined ? thisArg : this,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, getDocument} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(getDocument().createTextNode(string));\n}\n","/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\r\nimport ol_source_Vector from 'ol/source/Vector.js'\r\nimport ol_control_Control from 'ol/control/Control.js'\r\nimport ol_ext_element from '../util/element.js'\r\n\r\n/** Timeline control\r\n *\r\n * @constructor\r\n * @extends {ol.control.Control}\r\n * @fires select\r\n * @fires scroll\r\n * @fires collapse\r\n * @param {Object=} options Control options.\r\n *\t@param {String} options.className class of the control\r\n *\t@param {Array<ol.Feature>} options.features Features to show in the timeline\r\n *\t@param {ol.SourceImageOptions.vector} options.source class of the control\r\n *\t@param {Number} options.interval time interval length in ms or a text with a format d, h, mn, s (31 days = '31d'), default none\r\n *\t@param {String} options.maxWidth width of the time line in px, default 2000px\r\n *\t@param {String} options.minDate minimum date \r\n *\t@param {String} options.maxDate maximum date \r\n *\t@param {Number} options.minZoom Minimum zoom for the line, default .2\r\n *\t@param {Number} options.maxZoom Maximum zoom for the line, default 4\r\n *\t@param {boolean} options.zoomButton Are zoom buttons avaliable, default false\r\n *\t@param {function} options.getHTML a function that takes a feature and returns the html to display\r\n *\t@param {function} options.getFeatureDate a function that takes a feature and returns its date, default the date propertie\r\n *\t@param {function} options.endFeatureDate a function that takes a feature and returns its end date, default no end date\r\n *\t@param {String} options.graduation day|month to show month or day graduation, default show only years\r\n *\t@param {String} options.scrollTimeout Time in milliseconds to get a scroll event, default 15ms\r\n */\r\nvar ol_control_Timeline = class olcontrolTimeline extends ol_control_Control {\r\n  constructor(options) {\r\n\r\n    var element = ol_ext_element.create('DIV', {\r\n      className: (options.className || '') + ' ol-timeline'\r\n        + (options.target ? '' : ' ol-unselectable ol-control')\r\n        + (options.zoomButton ? ' ol-hasbutton' : '')\r\n    });\r\n\r\n    // Initialize\r\n    super({\r\n      element: element,\r\n      target: options.target\r\n    });\r\n\r\n    // Scroll div\r\n    this._scrollDiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-scroll',\r\n      parent: this.element\r\n    });\r\n\r\n    // Add a button bar\r\n    this._buttons = ol_ext_element.create('DIV', {\r\n      className: 'ol-buttons',\r\n      parent: this.element\r\n    });\r\n    // Zoom buttons\r\n    if (options.zoomButton) {\r\n      // Zoom in\r\n      this.addButton({\r\n        className: 'ol-zoom-in',\r\n        handleClick: function () {\r\n          var zoom = this.get('zoom');\r\n          if (zoom >= 1) {\r\n            zoom++;\r\n          } else {\r\n            zoom = Math.min(1, zoom + 0.1);\r\n          }\r\n          zoom = Math.round(zoom * 100) / 100;\r\n          this.refresh(zoom);\r\n        }.bind(this)\r\n      });\r\n      // Zoom out\r\n      this.addButton({\r\n        className: 'ol-zoom-out',\r\n        handleClick: function () {\r\n          var zoom = this.get('zoom');\r\n          if (zoom > 1) {\r\n            zoom--;\r\n          } else {\r\n            zoom -= 0.1;\r\n          }\r\n          zoom = Math.round(zoom * 100) / 100;\r\n          this.refresh(zoom);\r\n        }.bind(this)\r\n      });\r\n    }\r\n\r\n    // Draw center date\r\n    this._intervalDiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-center-date',\r\n      parent: this.element\r\n    });\r\n\r\n    // Remove selection\r\n    this.element.addEventListener('mouseover', function () {\r\n      if (this._select)\r\n        this._select.elt.classList.remove('ol-select');\r\n    }.bind(this));\r\n\r\n    // Trigger scroll event\r\n    var scrollListener = null;\r\n    this._scrollDiv.addEventListener('scroll', function () {\r\n      this._setScrollLeft();\r\n      if (scrollListener) {\r\n        clearTimeout(scrollListener);\r\n        scrollListener = null;\r\n      }\r\n      scrollListener = setTimeout(function () {\r\n        this.dispatchEvent({\r\n          type: 'scroll',\r\n          date: this.getDate(),\r\n          dateStart: this.getDate('start'),\r\n          dateEnd: this.getDate('end')\r\n        });\r\n      }.bind(this), options.scrollTimeout || 15);\r\n    }.bind(this));\r\n    // Magic to give \"live\" scroll events on touch devices\r\n    // this._scrollDiv.addEventListener('gesturechange', function() {});\r\n    // Scroll timeline\r\n    ol_ext_element.scrollDiv(this._scrollDiv, {\r\n      onmove: function (b) {\r\n        // Prevent selection on moving\r\n        this._moving = b;\r\n      }.bind(this)\r\n    });\r\n\r\n    this._tline = [];\r\n\r\n    // Parameters\r\n    this._scrollLeft = 0;\r\n    this.set('maxWidth', options.maxWidth || 2000);\r\n    this.set('minDate', options.minDate || Infinity);\r\n    this.set('maxDate', options.maxDate || -Infinity);\r\n    this.set('graduation', options.graduation);\r\n    this.set('minZoom', options.minZoom || .2);\r\n    this.set('maxZoom', options.maxZoom || 4);\r\n    this.setInterval(options.interval);\r\n    if (options.getHTML)\r\n      this._getHTML = options.getHTML;\r\n    if (options.getFeatureDate)\r\n      this._getFeatureDate = options.getFeatureDate;\r\n    if (options.endFeatureDate)\r\n      this._endFeatureDate = options.endFeatureDate;\r\n\r\n    // Feature source \r\n    this.setFeatures(options.features || options.source, options.zoom);\r\n  }\r\n  /**\r\n   * Set the map instance the control is associated with\r\n   * and add interaction attached to it to this map.\r\n   * @param {_ol_Map_} map The map instance.\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    this.refresh(this.get('zoom') || 1, true);\r\n  }\r\n  /** Add a button on the timeline\r\n   * @param {*} button\r\n   *  @param {string} button.className\r\n   *  @param {title} button.className\r\n   *  @param {Element|string} button.html Content of the element\r\n   *  @param {function} button.click a function called when the button is clicked\r\n   */\r\n  addButton(button) {\r\n    this.element.classList.add('ol-hasbutton');\r\n    ol_ext_element.create('BUTTON', {\r\n      className: button.className || undefined,\r\n      title: button.title,\r\n      html: button.html,\r\n      click: button.handleClick,\r\n      parent: this._buttons\r\n    });\r\n  }\r\n  /** Set an interval\r\n   * @param {number|string} length the interval length in ms or a farmatted text ie. end with y, 1d, h, mn, s (31 days = '31d'), default none\r\n   */\r\n  setInterval(length) {\r\n    if (typeof (length) === 'string') {\r\n      if (/s$/.test(length)) {\r\n        length = parseFloat(length) * 1000;\r\n      } else if (/mn$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 60;\r\n      } else if (/h$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600;\r\n      } else if (/d$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600 * 24;\r\n      } else if (/y$/.test(length)) {\r\n        length = parseFloat(length) * 1000 * 3600 * 24 * 365;\r\n      } else {\r\n        length = 0;\r\n      }\r\n    }\r\n    this.set('interval', length || 0);\r\n    if (length)\r\n      this.element.classList.add('ol-interval');\r\n    else\r\n      this.element.classList.remove('ol-interval');\r\n    this.refresh(this.get('zoom'));\r\n  }\r\n  /** Default html to show in the line\r\n   * @param {ol.Feature} feature\r\n   * @return {DOMElement|string}\r\n   * @private\r\n   */\r\n  _getHTML(feature) {\r\n    return feature.get('name') || '';\r\n  }\r\n  /** Default function to get the date of a feature, returns the date attribute\r\n   * @param {ol.Feature} feature\r\n   * @return {Data|string}\r\n   * @private\r\n   */\r\n  _getFeatureDate(feature) {\r\n    return (feature && feature.get) ? feature.get('date') : null;\r\n  }\r\n  /** Default function to get the end date of a feature, return undefined\r\n   * @param {ol.Feature} feature\r\n   * @return {Data|string}\r\n   * @private\r\n   */\r\n  _endFeatureDate( /* feature */) {\r\n    return undefined;\r\n  }\r\n  /** Is the line collapsed\r\n   * @return {boolean}\r\n   */\r\n  isCollapsed() {\r\n    return this.element.classList.contains('ol-collapsed');\r\n  }\r\n  /** Collapse the line\r\n   * @param {boolean} b\r\n   */\r\n  collapse(b) {\r\n    if (b)\r\n      this.element.classList.add('ol-collapsed');\r\n    else\r\n      this.element.classList.remove('ol-collapsed');\r\n    this.dispatchEvent({ type: 'collapse', collapsed: this.isCollapsed() });\r\n  }\r\n  /** Collapse the line\r\n   */\r\n  toggle() {\r\n    this.element.classList.toggle('ol-collapsed');\r\n    this.dispatchEvent({ type: 'collapse', collapsed: this.isCollapsed() });\r\n  }\r\n  /** Set the features to display in the timeline\r\n   * @param {Array<ol.Features>|ol.source.Vector} features An array of features or a vector source\r\n   * @param {number} zoom zoom to draw the line default 1\r\n   */\r\n  setFeatures(features, zoom) {\r\n    this._features = this._source = null;\r\n    if (features instanceof ol_source_Vector)\r\n      this._source = features;\r\n    else if (features instanceof Array)\r\n      this._features = features;\r\n    else\r\n      this._features = [];\r\n    this.refresh(zoom);\r\n  }\r\n  /**\r\n   * Get features\r\n   * @return {Array<ol.Feature>}\r\n   */\r\n  getFeatures() {\r\n    return this._features || this._source.getFeatures();\r\n  }\r\n  /**\r\n   * Refresh the timeline with new data\r\n   * @param {Number} zoom Zoom factor from 0.25 to 10, default 1\r\n   */\r\n  refresh(zoom, first) {\r\n    if (!this.getMap())\r\n      return;\r\n    if (!zoom)\r\n      zoom = this.get('zoom');\r\n    zoom = Math.min(this.get('maxZoom'), Math.max(this.get('minZoom'), zoom || 1));\r\n    this.set('zoom', zoom);\r\n    this._scrollDiv.innerHTML = '';\r\n    var features = this.getFeatures();\r\n    var d, d2;\r\n\r\n    // Get features sorted by date\r\n    var tline = this._tline = [];\r\n    features.forEach(function (f) {\r\n      if (d = this._getFeatureDate(f)) {\r\n        if (!(d instanceof Date)) {\r\n          d = new Date(d);\r\n        }\r\n        if (this._endFeatureDate) {\r\n          d2 = this._endFeatureDate(f);\r\n          if (!(d2 instanceof Date)) {\r\n            d2 = new Date(d2);\r\n          }\r\n        }\r\n        if (!isNaN(d)) {\r\n          tline.push({\r\n            date: d,\r\n            end: isNaN(d2) ? null : d2,\r\n            feature: f\r\n          });\r\n        }\r\n      }\r\n    }.bind(this));\r\n\r\n    tline.sort(function (a, b) {\r\n      return (a.date < b.date ? -1 : (a.date === b.date ? 0 : 1));\r\n    });\r\n\r\n    // Draw\r\n    var div = ol_ext_element.create('DIV', {\r\n      parent: this._scrollDiv\r\n    });\r\n\r\n    // Calculate width\r\n    var min = this._minDate = Math.min(this.get('minDate'), tline.length ? tline[0].date : Infinity);\r\n    var max = this._maxDate = Math.max(this.get('maxDate'), tline.length ? tline[tline.length - 1].date : -Infinity);\r\n    if (!isFinite(min))\r\n      this._minDate = min = new Date();\r\n    if (!isFinite(max))\r\n      this._maxDate = max = new Date();\r\n    var delta = (max - min);\r\n    var maxWidth = this.get('maxWidth');\r\n    var scale = this._scale = (delta > maxWidth ? maxWidth / delta : 1) * zoom;\r\n    // Leave 10px on right\r\n    min = this._minDate = this._minDate - 10 / scale;\r\n    delta = (max - min) * scale;\r\n    ol_ext_element.setStyle(div, {\r\n      width: delta,\r\n      maxWidth: 'unset'\r\n    });\r\n\r\n    // Draw time's bar\r\n    this._drawTime(div, min, max, scale);\r\n\r\n    // Set interval\r\n    if (this.get('interval')) {\r\n      ol_ext_element.setStyle(this._intervalDiv, { width: this.get('interval') * scale });\r\n    } else {\r\n      ol_ext_element.setStyle(this._intervalDiv, { width: '' });\r\n    }\r\n\r\n    // Draw features\r\n    var line = [];\r\n    var lineHeight = ol_ext_element.getStyle(this._scrollDiv, 'lineHeight');\r\n\r\n    // Wrapper\r\n    var fdiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-features',\r\n      parent: div\r\n    });\r\n\r\n    // Add features on the line\r\n    tline.forEach(function (f) {\r\n      var d = f.date;\r\n      var t = f.elt = ol_ext_element.create('DIV', {\r\n        className: 'ol-feature',\r\n        style: {\r\n          left: Math.round((d - min) * scale),\r\n        },\r\n        html: this._getHTML(f.feature),\r\n        parent: fdiv\r\n      });\r\n      // Prevent image dragging\r\n      var img = t.querySelectorAll('img');\r\n      for (var i = 0; i < img.length; i++) {\r\n        img[i].ondragstart = function () { return false; };\r\n      }\r\n\r\n      // Calculate image width\r\n      if (f.end) {\r\n        ol_ext_element.setStyle(t, {\r\n          minWidth: (f.end - d) * scale,\r\n          width: (f.end - d) * scale,\r\n          maxWidth: 'unset'\r\n        });\r\n      }\r\n      var left = ol_ext_element.getStyle(t, 'left');\r\n      // Select on click\r\n      t.addEventListener('click', function () {\r\n        if (!this._moving) {\r\n          this.dispatchEvent({ type: 'select', feature: f.feature });\r\n        }\r\n      }.bind(this));\r\n\r\n      // Find first free Y position\r\n      var pos, l;\r\n      for (pos = 0; l = line[pos]; pos++) {\r\n        if (left > l) {\r\n          break;\r\n        }\r\n      }\r\n      line[pos] = left + ol_ext_element.getStyle(t, 'width');\r\n      ol_ext_element.setStyle(t, { top: pos * lineHeight });\r\n    }.bind(this));\r\n    this._nbline = line.length;\r\n\r\n    if (first)\r\n      this.setDate(this._minDate, { anim: false, position: 'start' });\r\n    // Dispatch scroll event\r\n    this.dispatchEvent({\r\n      type: 'scroll',\r\n      date: this.getDate(),\r\n      dateStart: this.getDate('start'),\r\n      dateEnd: this.getDate('end')\r\n    });\r\n  }\r\n  /** Get offset given a date\r\n   * @param {Date} date\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getOffsetFromDate(date) {\r\n    return (date - this._minDate) * this._scale;\r\n  }\r\n  /** Get date given an offset\r\n   * @param {Date} date\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _getDateFromOffset(offset) {\r\n    return offset / this._scale + this._minDate;\r\n  }\r\n  /** Set the current position\r\n   * @param {number} scrollLeft current position (undefined when scrolling)\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _setScrollLeft(scrollLeft) {\r\n    this._scrollLeft = scrollLeft;\r\n    if (scrollLeft !== undefined) {\r\n      this._scrollDiv.scrollLeft = scrollLeft;\r\n    }\r\n  }\r\n  /** Get the current position\r\n   * @returns {number}\r\n   * @private\r\n   */\r\n  _getScrollLeft() {\r\n    // Unset when scrolling\r\n    if (this._scrollLeft === undefined) {\r\n      return this._scrollDiv.scrollLeft;\r\n    } else {\r\n      // St by user\r\n      return this._scrollLeft;\r\n    }\r\n  }\r\n  /**\r\n   * Draw dates on line\r\n   * @private\r\n   */\r\n  _drawTime(div, min, max, scale) {\r\n    // Times div\r\n    var tdiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-times',\r\n      parent: div\r\n    });\r\n    var d, dt, month, dmonth;\r\n    var dx = ol_ext_element.getStyle(tdiv, 'left');\r\n    var heigth = ol_ext_element.getStyle(tdiv, 'height');\r\n    // Year\r\n    var year = (new Date(this._minDate)).getFullYear();\r\n    dt = ((new Date(0)).setFullYear(String(year)) - new Date(0).setFullYear(String(year - 1))) * scale;\r\n    var dyear = Math.round(2 * heigth / dt) + 1;\r\n    while (true) {\r\n      d = new Date(0).setFullYear(year);\r\n      if (d > this._maxDate)\r\n        break;\r\n      ol_ext_element.create('DIV', {\r\n        className: 'ol-time ol-year',\r\n        style: {\r\n          left: this._getOffsetFromDate(d) - dx\r\n        },\r\n        html: year,\r\n        parent: tdiv\r\n      });\r\n      year += dyear;\r\n    }\r\n    // Month\r\n    if (/day|month/.test(this.get('graduation'))) {\r\n      dt = ((new Date(0, 0, 1)).setFullYear(String(year)) - new Date(0, 0, 1).setFullYear(String(year - 1))) * scale;\r\n      dmonth = Math.max(1, Math.round(12 / Math.round(dt / heigth / 2)));\r\n      if (dmonth < 12) {\r\n        year = (new Date(this._minDate)).getFullYear();\r\n        month = dmonth + 1;\r\n        while (true) {\r\n          d = new Date(0, 0, 1);\r\n          d.setFullYear(year);\r\n          d.setMonth(month - 1);\r\n          if (d > this._maxDate)\r\n            break;\r\n          ol_ext_element.create('DIV', {\r\n            className: 'ol-time ol-month',\r\n            style: {\r\n              left: this._getOffsetFromDate(d) - dx\r\n            },\r\n            html: d.toLocaleDateString(undefined, { month: 'short' }),\r\n            parent: tdiv\r\n          });\r\n          month += dmonth;\r\n          if (month > 12) {\r\n            year++;\r\n            month = dmonth + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Day\r\n    if (this.get('graduation') === 'day') {\r\n      dt = (new Date(0, 1, 1) - new Date(0, 0, 1)) * scale;\r\n      var dday = Math.max(1, Math.round(31 / Math.round(dt / heigth / 2)));\r\n      if (dday < 31) {\r\n        year = (new Date(this._minDate)).getFullYear();\r\n        month = 0;\r\n        var day = dday;\r\n        while (true) {\r\n          d = new Date(0, 0, 1);\r\n          d.setFullYear(year);\r\n          d.setMonth(month);\r\n          d.setDate(day);\r\n          if (isNaN(d)) {\r\n            month++;\r\n            if (month > 12) {\r\n              month = 1;\r\n              year++;\r\n            }\r\n            day = dday;\r\n          } else {\r\n            if (d > this._maxDate)\r\n              break;\r\n            if (day > 1) {\r\n              var offdate = this._getOffsetFromDate(d);\r\n              if (this._getOffsetFromDate(new Date(year, month + 1, 1)) - offdate > heigth) {\r\n                ol_ext_element.create('DIV', {\r\n                  className: 'ol-time ol-day',\r\n                  style: {\r\n                    left: offdate - dx\r\n                  },\r\n                  html: day,\r\n                  parent: tdiv\r\n                });\r\n              }\r\n            }\r\n            year = d.getFullYear();\r\n            month = d.getMonth();\r\n            day = d.getDate() + dday;\r\n            if (day > new Date(year, month + 1, 0).getDate()) {\r\n              month++;\r\n              day = dday;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /** Center timeline on a date\r\n   * @param {Date|String|ol.feature} feature a date or a feature with a date\r\n   * @param {Object} options\r\n   *  @param {boolean} options.anim animate scroll\r\n   *  @param {string} options.position start, end or middle, default middle\r\n   */\r\n  setDate(feature, options) {\r\n    var date;\r\n    options = options || {};\r\n    // It's a date\r\n    if (feature instanceof Date) {\r\n      date = feature;\r\n    } else {\r\n      // Get date from Feature\r\n      if (this.getFeatures().indexOf(feature) >= 0) {\r\n        date = this._getFeatureDate(feature);\r\n      }\r\n      if (date && !(date instanceof Date)) {\r\n        date = new Date(date);\r\n      }\r\n      if (!date || isNaN(date)) {\r\n        date = new Date(String(feature));\r\n      }\r\n    }\r\n    if (!isNaN(date)) {\r\n      if (options.anim === false)\r\n        this._scrollDiv.classList.add('ol-move');\r\n      var scrollLeft = this._getOffsetFromDate(date);\r\n      if (options.position === 'start') {\r\n        scrollLeft += ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n      } else if (options.position === 'end') {\r\n        scrollLeft -= ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n      }\r\n      this._setScrollLeft(scrollLeft);\r\n      if (options.anim === false)\r\n        this._scrollDiv.classList.remove('ol-move');\r\n      if (feature) {\r\n        for (var i = 0, f; f = this._tline[i]; i++) {\r\n          if (f.feature === feature) {\r\n            f.elt.classList.add('ol-select');\r\n            this._select = f;\r\n          } else {\r\n            f.elt.classList.remove('ol-select');\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /** Get round date (sticked to mn, hour day or month)\r\n   * @param {Date} d\r\n   * @param {string} stick sticking option to stick date to: 'mn', 'hour', 'day', 'month', default no stick\r\n   * @return {Date}\r\n   */\r\n  roundDate(d, stick) {\r\n    switch (stick) {\r\n      case 'mn': {\r\n        return new Date(this._roundTo(d, 60 * 1000));\r\n      }\r\n      case 'hour': {\r\n        return new Date(this._roundTo(d, 60 * 60 * 1000));\r\n      }\r\n      case 'day': {\r\n        return new Date(this._roundTo(d, 24 * 60 * 60 * 1000));\r\n      }\r\n      case 'month': {\r\n        d = new Date(this._roundTo(d, 24 * 60 * 60 * 1000));\r\n        if (d.getDate() > 15) {\r\n          d = new Date(d.setMonth(d.getMonth() + 1));\r\n        }\r\n        d = d.setDate(1);\r\n        return new Date(d);\r\n      }\r\n      default: return new Date(d);\r\n    }\r\n  }\r\n  /** Get the date of the center\r\n   * @param {string} position position to get 'start', 'end' or 'middle', default middle\r\n   * @param {string} stick sticking option to stick date to: 'mn', 'hour', 'day', 'month', default no stick\r\n   * @return {Date}\r\n   */\r\n  getDate(position, stick) {\r\n    var pos;\r\n    if (!stick)\r\n      stick = position;\r\n    switch (position) {\r\n      case 'start': {\r\n        if (this.get('interval')) {\r\n          pos = -ol_ext_element.getStyle(this._intervalDiv, 'width') / 2 + ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        } else {\r\n          pos = -ol_ext_element.outerWidth(this._scrollDiv) / 2 + ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        }\r\n        break;\r\n      }\r\n      case 'end': {\r\n        if (this.get('interval')) {\r\n          pos = ol_ext_element.getStyle(this._intervalDiv, 'width') / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        } else {\r\n          pos = ol_ext_element.outerWidth(this._scrollDiv) / 2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft') / 2;\r\n        }\r\n        break;\r\n      }\r\n      default: {\r\n        pos = 0;\r\n        break;\r\n      }\r\n    }\r\n    var d = this._getDateFromOffset(this._getScrollLeft() + pos);\r\n    d = this.roundDate(d, stick);\r\n    return new Date(d);\r\n  }\r\n  /** Round number to\r\n   * @param {number} d\r\n   * @param {number} r\r\n   * @return {number}\r\n   * @private\r\n   */\r\n  _roundTo(d, r) {\r\n    return Math.round(d / r) * r;\r\n  }\r\n  /** Get the start date of the control\r\n   * @return {Date}\r\n   */\r\n  getStartDate() {\r\n    return new Date(this.get('minDate'));\r\n  }\r\n  /** Get the end date of the control\r\n   * @return {Date}\r\n   */\r\n  getEndDate() {\r\n    return new Date(this.get('maxDate'));\r\n  }\r\n}\r\n\r\nexport default ol_control_Timeline","<script>\nimport Utils from '../../utils.js';\n\nimport Collection from 'ol/Collection';\nimport LayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport WMTS, {optionsFromCapabilities} from 'ol/source/WMTS';\n\nimport 'ol-ext/control/Timeline.css';\nimport Timeline from 'ol-ext/control/Timeline';\n\nimport ExtentMixin from './ExtentMixin.vue';\n\nexport default {\n\tmixins: [ExtentMixin],\n\tdata() {\n\t\treturn {\n\t\t\tWMTSCapabilities: {},\n\t\t\ttimeline: null,\n\t\t}\n\t},\n\tmethods: {\n\t\tasync addWebService(service) {\n\t\t\tswitch(service.type.toLowerCase()) {\n\t\t\t\tcase 'xyz':\n\t\t\t\t\treturn this.updateXYZLayer(service);\n\t\t\t\tcase 'wmts':\n\t\t\t\t\treturn await this.updateWMTSLayer(service);\n\t\t\t\tdefault:\n\t\t\t\t\tUtils.error(this, 'Sorry, this web service type is not supported.');\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\tgetWMTSTimes(capabilities, layerId) {\n\t\t\tconst layers = capabilities.Contents.Layer || [];\n\t\t\tlet layer = layers.find(l => l.Identifier == layerId);\n\t\t\tif (!layer || !layer.Dimension) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tlet timeDimension = layer.Dimension.find(d => d.Identifier === 'TIME');\n\t\t\tif (!timeDimension) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn timeDimension.Value.sort();\n\t\t},\n\n\t\tasync initWMTSLayer(service) {\n\t\t\tif (!this.WMTSCapabilities[service.url]) {\n\t\t\t\ttry {\n\t\t\t\t\tlet url = new URL(service.url);\n\t\t\t\t\turl.searchParams.set('service', 'wmts');\n\t\t\t\t\turl.searchParams.set('request', 'GetCapabilities');\n\t\t\t\t\tlet response = await axios.get(url.toString(), { responseType: 'text' });\n\t\t\t\t\tvar parser = new WMTSCapabilities();\n\t\t\t\t\tthis.WMTSCapabilities[service.url] = parser.read(response.data);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tUtils.exception(this, error, \"WMTS Discovery failed\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.WMTSCapabilities[service.url];\n\t\t},\n\n\t\tasync updateWMTSLayer(service, prefix = \"Service\") {\n\t\t\tlet attrs = service.attributes || {};\n\n\t\t\tlet capabilities = await this.initWMTSLayer(service);\n\t\t\tif (!capabilities) {\n\t\t\t\tUtils.exception(this, error, \"WMTS Discovery failed\");\n\t\t\t}\n\n\t\t\tlet minDate = null;\n\t\t\tlet maxDate = null;\n\t\t\tlet defaultDate = null;\n\t\t\tlet source = null;\n\t\t\tlet title = Utils.getResourceTitle(service, prefix);\n\t\t\tlet layerCollection = new Collection();\n\t\t\tlet layerNames;\n\t\t\tif (Array.isArray(attrs.layers)) {\n\t\t\t\tlayerNames = attrs.layers;\n\t\t\t}\n\t\t\telse if (Array.isArray(capabilities.Contents.Layer)) {\n\t\t\t\tlayerNames = layers.map(l => l.Identifier);\n\t\t\t}\n\t\t\tfor(let layer of layerNames) {\n\t\t\t\tif (!layer) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet options = optionsFromCapabilities(capabilities, {\n\t\t\t\t\tlayer,\n\t\t\t\t\tmatrixSet: 'EPSG:3857'\n\t\t\t\t});\n\t\t\t\tif (!defaultDate) {\n\t\t\t\t\tdefaultDate = new Date(options.dimensions.TIME);\n\t\t\t\t}\n\n\t\t\t\tlet times = this.getWMTSTimes(capabilities, layer);\n\t\t\t\tif (times.length) {\n\t\t\t\t\tlet min = new Date(times[0]);\n\t\t\t\t\tlet max = new Date(times[times.length -1]);\n\t\t\t\t\tif (!minDate || min < minDate) {\n\t\t\t\t\t\tminDate = min;\n\t\t\t\t\t}\n\t\t\t\t\tif (!maxDate || max > maxDate) {\n\t\t\t\t\t\tmaxDate = max;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Utils.isObject(attrs.dimensions)) {\n\t\t\t\t\tObject.assign(options.dimensions, service.attributes.dimensions);\n\t\t\t\t}\n\t\t\t\tsource = new WMTS(options);\n\t\t\t\tvar mapLayer = new TileLayer({\n\t\t\t\t\ttitle,\n\t\t\t\t\tsource: this.trackTileProgress(source),\n\t\t\t\t\tnoSwitcherDelete: true\n\t\t\t\t});\n\t\t\t\tlayerCollection.push(mapLayer);\n\t\t\t}\n\n\t\t\tif (minDate && maxDate) {\n\t\t\t\tthis.timeline = new Timeline({\n\t\t\t\t\tclassName: 'ol-pointer',\n\t\t\t\t\tgraduation: 'day',\n\t\t\t\t\tminDate: minDate,\n\t\t\t\t\tmaxDate: maxDate\n\t\t\t\t});\n\t\t\t\tlet run;\n\t\t\t\tthis.timeline.on('scroll', function(e) {\n\t\t\t\t\tif (!e.date || e.date > maxDate || e.date < minDate) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (run) {\n\t\t\t\t\t\twindow.clearTimeout(run);\n\t\t\t\t\t}\n\t\t\t\t\trun = window.setTimeout(() => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet date = e.date.toISOString().substr(0, 10);\n\t\t\t\t\t\t\tsource.updateDimensions({\n\t\t\t\t\t\t\t\tTIME: date\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet btns = document.getElementsByClassName('timeline-date-label');\n\t\t\t\t\t\t\tbtns[0].innerText = date;\n\t\t\t\t\t\t\tbtns[0].disabled = true;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trun = null;\n\t\t\t\t\t}, 500);\n\t\t\t\t});\n\t\t\t\tthis.map.addControl(this.timeline);\n\n\t\t\t\tthis.timeline.addButton({\n\t\t\t\t\tclassName: 'timeline-date-label',\n\t\t\t\t\ttitle: `The date that is shown on the map for the collection '${title}'`,\n\t\t\t\t\thtml: 'No date'\n\t\t\t\t});\n\t\t\t\tthis.timeline.setDate(defaultDate);\n\t\t\t}\n\n\t\t\tlet group = new LayerGroup({\n\t\t\t\tid: service.id,\n\t\t\t\ttitle,\n\t\t\t\tlayers: layerCollection\n\t\t\t});\n\t\t\tgroup.on('change:visible',  () => {\n\t\t\t\tif (this.timeline && this.timeline.element) {\n\t\t\t\t\t// Remove time selector on Map if not required any more https://github.com/Open-EO/openeo-web-editor/issues/207\n\t\t\t\t\tthis.timeline.element.style.display = group.getVisible() ? 'block' : 'none';\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.addLayerToMap(group);\n\n\t\t\tif (this.timeline) {\n\t\t\t\tthis.map.getLayers().on('remove', event => {\n\t\t\t\t\tif (event.element === group) {\n\t\t\t\t\t\tthis.map.removeControl(this.timeline);\n\t\t\t\t\t\tthis.timeline = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn group;\n\t\t},\n\n\t\tupdateXYZLayer(service, prefix = \"Service\") {\n\t\t\t// Replace/add a query parameter with a unique ID so that OpenLayers doesn't load tiles from cache\n\t\t\tlet url = Utils.replaceParam(service.url, '__editorSessionId', new Date().getTime()).replace(/%7B/g, '{').replace(/%7D/g, '}');\n\t\t\tlet title = Utils.getResourceTitle(service, prefix);\n\t\t\tlet layer = new TileLayer({\n\t\t\t\ttitle,\n\t\t\t\tsource: this.trackTileProgress(new XYZ({\n\t\t\t\t\turl\n\t\t\t\t})),\n\t\t\t\tnoSwitcherDelete: true\n\t\t\t});\n\t\t\tlet group = new LayerGroup({\n\t\t\t\tid: service.id,\n\t\t\t\ttitle,\n\t\t\t\tlayers: [\n\t\t\t\t\tlayer\n\t\t\t\t]\n\t\t\t});\n\t\t\tthis.addLayerToMap(group);\n\n\t\t\t// Try to detect a bounding box and fit the view to it\n\t\t\tif (Utils.isObject(service.process) && Utils.isObject(service.process.process_graph)) {\n\t\t\t\tconst crs84 = \"urn:ogc:def:crs:OGC:1.3:CRS84\";\n\t\t\t\tconst e4326 = \"EPSG:4326\";\n\t\t\t\tObject.values(service.process.process_graph)\n\t\t\t\t\t.filter(node => node.process_id === 'load_collection' && Utils.isObject(node.arguments) && node.arguments.spatial_extent)\n\t\t\t\t\t.forEach(node => {\n\t\t\t\t\t\tlet e = node.arguments.spatial_extent;\n\t\t\t\t\t\tlet isBBox = (e.west || e.east || e.south || e.north) && (!e.crs || e.crs === 4326 || e.crs === e4326);\n\t\t\t\t\t\tlet isGeoJSON = e.type && (!e.crs || (Utils.isObject(e.crs) && e.crs.type === \"name\" && (e.crs.properties?.name === e4326 || e.properties?.name === crs84)));\n\t\t\t\t\t\tif (isBBox || isGeoJSON) {\n\t\t\t\t\t\t\tthis.addExtent(e, false);\n\t\t\t\t\t\t\t// ToDo: This should be combined into just a single call to addExtent to fit the view to the full extents\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn group;\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WebServiceMixin.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WebServiceMixin.vue?vue&type=script&lang=js\"","var render, staticRenderFns\nimport script from \"./WebServiceMixin.vue?vue&type=script&lang=js\"\nexport * from \"./WebServiceMixin.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<Splitpanes horizontal class=\"default-theme\">\n\t\t<Pane id=\"map\">\n\t\t\t<div :id=\"id\" class=\"map-viewer\">\n\t\t\t\t<ProgressControl ref=\"progress\" :map=\"map\" />\n\t\t\t\t<UserLocationControl :map=\"map\" />\n\t\t\t\t<TextControl v-if=\"isGeoTiff\" :text=\"textControlText\" />\n\t\t\t\t<ChannelControl v-if=\"isGeoTiff && !colorMap\" :bands=\"bands\" :defaultChannels=\"defaultChannels\" @update=\"updateGeoTiffStyle\" />\n\t\t\t\t<div v-if=\"loading\" class=\"map-loading\">\n\t\t\t\t\t<i class=\"fas fa-spinner fa-spin\"></i>\n\t\t\t\t\t<span>Loading map...</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Pane>\n\t\t<Pane v-if=\"chart\" id=\"chart\" :size=\"33\">\n\t\t\t<ScatterChart v-bind=\"chart\" :height=\"220\" />\n\t\t</Pane>\n\t</Splitpanes>\n</template>\n\n<script>\nimport { GeoTIFFImage } from 'geotiff';\n\nimport Utils from '../../utils.js';\nimport GeoTIFF from '../../formats/geotiff';\nimport JSON_ from '../../formats/json';\n\nimport { Splitpanes, Pane } from 'splitpanes';\n\nimport ExtentMixin from '../maps/ExtentMixin.vue';\nimport GeocoderMixin from '../maps/GeocoderMixin.vue';\nimport GeoTiffMixin from '../maps/GeoTiffMixin.vue';\nimport MapMixin from '../maps/MapMixin.vue';\nimport ScatterChart from './ScatterChart.vue';\nimport WebServiceMixin from '../maps/WebServiceMixin.vue';\n\nimport { Service } from '@openeo/js-client';\n\nimport Feature from 'ol/Feature';\nimport { fromExtent as PolygonFromExtent } from 'ol/geom/Polygon';\nimport { transformExtent } from 'ol/proj';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\n// Integrate changes/fixes from https://github.com/geotiffjs/geotiff.js/pull/303 until released/integrated by geotiff.js\nGeoTIFFImage.prototype.getSampleByteSize = function(i) {\n    if (!this.fileDirectory.BitsPerSample || this.fileDirectory.BitsPerSample.length === 0) {\n      return;\n    }\n    if (i >= this.fileDirectory.BitsPerSample.length) {\n      i = 0;\n    }\n    return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n};\n\nGeoTIFFImage.prototype.getReaderForSample = function(sampleIndex) {\n    const format = this.getSampleFormat(sampleIndex);\n    const bitsPerSample = this.getBitsPerSample(sampleIndex);\n    switch (format) {\n      case 1: // unsigned integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getUint8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getUint16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getUint32;\n        }\n        break;\n      case 2: // twos complement signed integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getInt8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getInt16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getInt32;\n        }\n        break;\n      case 3:\n        switch (bitsPerSample) {\n          case 16:\n            return function (offset, littleEndian) {\n              return getFloat16(this, offset, littleEndian);\n            };\n          case 32:\n            return DataView.prototype.getFloat32;\n          case 64:\n            return DataView.prototype.getFloat64;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    throw Error('Unsupported data format/bitsPerSample');\n};\n\nGeoTIFFImage.prototype.getSampleFormat = function(sampleIndex = 0) {\n    if (!this.fileDirectory.SampleFormat || this.fileDirectory.SampleFormat.length === 0) {\n      return 1;\n    }\n    return typeof this.fileDirectory.SampleFormat[sampleIndex] !== 'undefined'\n      ? this.fileDirectory.SampleFormat[sampleIndex] : this.fileDirectory.SampleFormat[0];\n};\n\nGeoTIFFImage.prototype.getBitsPerSample = function(sampleIndex = 0) {\n    if (!this.fileDirectory.BitsPerSample || this.fileDirectory.BitsPerSample.length === 0) {\n      return;\n    }\n    return typeof this.fileDirectory.BitsPerSample[sampleIndex] !== 'undefined'\n      ? this.fileDirectory.BitsPerSample[sampleIndex] : this.fileDirectory.BitsPerSample[0];\n};\n// End of geotiff.js fixes\n\nexport default {\n\tname: 'MapViewer',\n\tmixins: [\n\t\tExtentMixin,\n\t\tGeocoderMixin,\n\t\tGeoTiffMixin,\n\t\tMapMixin,\n\t\tWebServiceMixin\n\t],\n\tcomponents: {\n\t\tPane,\n\t\tScatterChart,\n\t\tSplitpanes,\n\t},\n\tprops: {\n\t\tdata: {}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: true,\n\t\t\tchart: null\n\t\t};\n\t},\n\tcomputed: {\n\t\t...Utils.mapState(['connection']),\n\t\tisWebService() {\n\t\t\treturn this.data instanceof Service && typeof this.data.type === 'string';\n\t\t},\n\t\tisGeoTiff() {\n\t\t\treturn this.data instanceof GeoTIFF;\n\t\t},\n\t\tisGeoJson() {\n\t\t\treturn this.data instanceof JSON_ && this.data.isGeoJson;\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.$emit('mounted', this);\n\t},\n\tmethods: {\n\t\tasync renderMap() {\n\t\t\ttry {\n\t\t\t\tlet view;\n\t\t\t\tlet data;\n\t\t\t\tif (this.isGeoJson) {\n\t\t\t\t\tdata = await this.data.loadData(this.connection);\n\t\t\t\t}\n\t\t\t\telse if (this.isGeoTiff) {\n\t\t\t\t\tdata = await this.data.loadData(this.connection);\n\t\t\t\t\tlet projection = data.getProjection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tview = projection;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isWebService && Utils.isMapServiceSupported(this.data.type)) {\n\t\t\t\t\tif (this.data.type.toLowerCase() === 'wmts') {\n\t\t\t\t\t\tlet capabilities = await this.initWMTSLayer(this.data);\n\t\t\t\t\t\t// ToDo: Right now we assume Web Mercator is always available, better check the capabilities...\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(\"Sorry, the given data can't be shown on a web map.\");\n\t\t\t\t}\n\n\t\t\t\tawait this.createMap(view);\n\t\t\t\tthis.addLayerSwitcher();\n\t\t\t\tthis.addGeocoder(data => {\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlet extent = this.toExtent(data);\n\t\t\t\t\textent = transformExtent(extent, 'EPSG:4326', this.map.getView().getProjection());\n\t\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions());\n\t\t\t\t});\n\n\t\t\t\tif (this.isGeoJson) {\n\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\tthis.addGeoJson(data, true);\n\t\t\t\t}\n\t\t\t\telse if (this.isGeoTiff) {\n\t\t\t\t\tlet proj = this.map.getView().getProjection();\n\t\t\t\t\tif (proj.basemap || ['EPSG:3857', 'EPSG:4326'].includes(proj.getCode())) {\n\t\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\t}\n\t\t\t\t\tthis.addGeoTiff(data);\n\t\t\t\t\tlet stac = this.data.getContext();\n\t\t\t\t\tif (stac) {\n\t\t\t\t\t\tthis.addExtent(stac, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isWebService && Utils.isMapServiceSupported(this.data.type)) {\n\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\tthis.addWebService(this.data);\n\t\t\t\t}\n\n\t\t\t\tif (this.$listeners && this.$listeners.drop) {\n\t\t\t\t\tthis.map.getViewport().addEventListener('dragover', event => event.preventDefault());\n\t\t\t\t\tthis.map.getViewport().addEventListener('drop', this.$listeners.drop);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tUtils.exception(this, error);\n\t\t\t}\n\n\t\t\tthis.loading = false;\n\t\t},\n\n\t\tasync addCollection() {\n\t\t\tlet layer = this.showWebService(this.data);\n\t\t\t// Fit to extent of collection\n\t\t\ttry {\n\t\t\t\tlet bbox = service.attributes.bbox;\n\t\t\t\tlet extent = [...this.fromLonLat([bbox.west, bbox.south]), ...this.fromLonLat([bbox.east, bbox.north])];\n\t\t\t\tlet extentLayer = new VectorLayer({\n\t\t\t\t\ttitle: \"Extent\",\n\t\t\t\t\tnoSwitcherDelete: true,\n\t\t\t\t\tsource: new VectorSource({\n\t\t\t\t\t\tfeatures: [\n\t\t\t\t\t\t\tnew Feature(PolygonFromExtent(extent))\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprojection: \"EPSG:4326\",\n\t\t\t\t\t\twrapX: false\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\n\t\t\t\tthis.removeLayerFill(extentLayer);\n\t\t\t\tlayer.getLayers().push(extentLayer);\n\n\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions(10));\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t}\n\n}\n</script>\n\n<style src=\"../maps/MapMixin.scss\" lang=\"scss\"></style>\n\n<style lang=\"scss\">\n.map-viewer {\n\tposition: relative;\n\n\t.map-loading {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbackground-color: rgba(0,0,0,0.6);\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tz-index: 9999;\n\t\tcolor: white;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\n\t\t> i {\n\t\t\tfont-size: 2em;\n\t\t}\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapViewer.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapViewer.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MapViewer.vue?vue&type=template&id=4201632c\"\nimport script from \"./MapViewer.vue?vue&type=script&lang=js\"\nexport * from \"./MapViewer.vue?vue&type=script&lang=js\"\nimport style0 from \"../maps/MapMixin.scss?vue&type=style&index=0&prod&lang=scss&external\"\nimport style1 from \"./MapViewer.vue?vue&type=style&index=1&id=4201632c&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["e","t","module","exports","this","s","r","n","o","a","i","l","default","c","d","u","p","h","m","g","y","f","b","w","v","$","namespace","spin","hidden","address","country","city","road","olControl","glass","container","control","button","input","expanded","reset","result","inputText","icon","k","containerId","buttonControlId","inputQueryId","inputResetId","cssClasses","x","Object","freeze","__proto__","q","C","S","L","j","E","T","N","R","A","P","provider","placeholder","featureStyle","targetType","lang","limit","keepOpen","preventDefault","autoComplete","autoCompleteMinLength","autoCompleteTimeout","debug","I","Error","_","window","performance","Date","now","timing","navigationStart","toString","M","test","O","Array","isArray","forEach","split","length","V","U","F","G","classList","contains","B","className","D","replace","String","replaceAll","Q","document","createElement","id","classname","attr","setAttribute","name","value","innerHTML","createDocumentFragment","childNodes","append","RegExp","add","trim","setTimeout","remove","z","H","constructor","options","els","createControl","querySelector","K","settings","url","params","langs","getParameters","toLowerCase","query","includes","handleResponse","features","map","lon","geometry","coordinates","lat","properties","postcode","state","original","formatted","details","J","format","addressdetails","countrycodes","bbox","boundingbox","display_name","houseNumber","house_number","town","W","key","neighbourhood","X","callbackName","includeNeighborhood","maxResults","resources","resourceSets","point","formattedAddress","Y","countrycode","pretty","no_annotations","results","lng","components","Z","Promise","ee","data","method","mode","credentials","jsonp","head","Math","round","random","indexOf","removeChild","fetch","then","json","catch","keys","reduce","push","encodeURIComponent","join","te","se","Base","layerName","layer","source","newProvider","lastQuery","registeredListeners","mapClick","setListeners","stopPropagation","collapse","expand","addEventListener","target","which","keyCode","clearTimeout","focus","clearResults","firstChild","console","info","createList","listenMapClick","addressTemplate","chosen","getMap","Number","parseFloat","getView","getProjection","transform","transformExtent","dispatchEvent","type","coordinate","place","fit","duration","animate","resolution","center","createFeature","feature","addLayer","setStyle","setId","getSource","addFeature","building","village","blur","getTargetElement","handleEvent","removeEventListener","getLayers","re","image","scale","src","super","element","prototype","hasOwnProperty","call","getLayer","setProvider","setProviderKey","OSMGeocoder","geojson","opt","polygon_geojson","polygon_threshold","filter","class","methods","addGeocoder","callback","$config","geocoder","Geocoder","on","event","bboxOpenEO","west","east","north","south","addControl","render","staticRenderFns","component","_vm","_c","_self","texts","staticClass","pointer","toggle","_v","_s","current","_e","mixins","ControlMixin","computed","text","props","attrs","ref","isGeoTiff","textControlText","colorMap","bands","defaultChannels","updateGeoTiffStyle","loading","chart","_b","directives","rawName","channels","expression","isGray","multiBand","_l","channel","labels","modifiers","$event","$$selectedVal","selected","val","_value","_n","$set","multiple","band","domProps","min","composing","$forceUpdate","max","cols","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","slice","watch","immediate","handler","updateChannels","emit","deep","isValid","assign","$emit","expressionToGlsl","compilationContext","expectedType","parsingContext","style","parseStyle","bandCount","vertexShader","TEXTURE_COORD","TILE_TRANSFORM","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","DEPTH","context","inFragmentShader","pipeline","undefined","color","contrast","exposure","saturation","gamma","brightness","uniforms","numVariables","variables","variable","uniformName","uniformDeclarations","textureCount","ceil","TILE_TEXTURE_ARRAY","paletteTextures","functionDefintions","functions","fragmentShader","RENDER_EXTENT","TRANSITION_ALPHA","RESOLUTION","ZOOM","WebGLTileLayer","BaseTile","cacheSize","sources_","sources","renderedSource_","renderedResolution_","NaN","style_","cacheSize_","styleVariables_","addChangeListener","SOURCE","handleSourceUpdate_","getSources","extent","getRenderSource","getSourceState","getState","hasRenderer","getRenderer","clearCache","getSourceBandCount_","MAX_SAFE_INTEGER","createRenderer","parsedStyle","renderSources","frameState","layerRenderer","canvas","ii","prepareFrame","renderFrame","rendered","viewState","ready","sourceState","onChange","changed","renderComplete","altSources","renderer","updateStyleVariables","dispose","DataTileSource","Tile","projection","tileGrid","maxResolution","maxZoom","minZoom","tileSize","attributions","attributionsCollapsible","opaque","wrapX","transition","interpolate","gutter_","gutter","tileSize_","tileSizes_","tileLoadingKeys_","loader_","loader","handleTileChange_","bind","tileGridForProjection_","tileCacheForProjection_","setTileSizes","tileSizes","getTileSize","getTileGrid","getGutterForProjection","thisProj","equivalent","setLoader","getReprojTile_","targetProj","sourceProj","cache","getTileCacheForProjection","tileCoordKey","containsKey","tile","get","getKey","reprojTilePixelRatio","apply","getResolutions","textureSize","sourceTileGrid","getTileGridForProjection","targetTileGrid","tileCoord","wrappedTileCoord","getTileCoordForTileUrlFunction","pixelRatio","getTileFunction","getTile","tileOptions","newTile","sourceProjection","size","tileCache","sourceLoader","DataTile","EventType","CHANGE","set","uid","tileState","TileState","LOADING","TileEventType","TILELOADSTART","ERROR","TILELOADERROR","LOADED","TILELOADEND","projKey","setTileGridForProjection","tilegrid","proj","TileCache","expireCache","usedTiles","usedTileCache","clear","defaultPoolSize","navigator","hardwareConcurrency","Pool","createWorker","workers","_awaitingDecoder","messageId","resolve","create","worker","idle","decode","fileDirectory","buffer","decoder","find","candidate","floor","onMessage","decoded","postMessage","destroy","terminate","isMask","NewSubfileType","readRGB","preference","getSamplesPerPixel","interpretation","PhotometricInterpretation","interpretations","CMYK","YCbCr","CIELab","ICCLab","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","defaultTileSize","workerPool","getWorkerPool","getBoundingBox","getWidth","getHeight","getOrigin","referenceImage","getResolution","geoKeys","ProjectedCSTypeGeoKey","code","units","ProjLinearUnitsGeoKey","Projection","GeographicTypeGeoKey","GeogAngularUnitsGeoKey","getImagesForTIFF","tiff","getImageCount","count","requests","getImage","all","getImagesForSource","request","blob","overviews","assertEqual","expected","got","tolerance","message","rejector","error","abs","getMinForDataType","array","Int8Array","Int16Array","Int32Array","Float32Array","getMaxForDataType","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","GeoTIFFSource","sourceInfo_","numSources","sourceOptions_","sourceOptions","sourceImagery_","sourceMasks_","resolutionFactors_","samplesPerPixel_","nodataValues_","metadata_","normalize_","normalize","addAlpha_","error_","convertToRGB_","convertToRGB","setKey","self","configure_","setState","getError","determineProjection","firstSource","origin","commonRenderTileSizes","commonSourceTileSizes","resolutions","samplesPerPixel","nodataValues","metadata","sourceCount","sourceIndex","images","masks","item","imageCount","sourceExtent","sourceOrigin","sourceTileSizes","renderTileSizes","sourceResolutions","imageIndex","nodataValue","getGDALNoData","getGDALMetadata","wantedSamples","level","imageResolutions","sourceTileSize","getTileWidth","getTileHeight","aspectRatio","viewRejector","resolutionFactor","scaledSourceResolutions","reverse","sourceImagery","unshift","outer","nodata","values","TileGrid","loadTile_","zoom","viewResolver","showFullExtent","toUserCoordinate","toUserExtent","sourceInfo","pool","pixelBounds","samples","fillValue","bandNumber","sampleIndex","readOptions","width","height","interleave","readRasters","maskIndex","mask","composeTile_","sourceSamples","addAlpha","pixelCount","dataLength","dataIndex","pixelIndex","transparent","gain","bias","stats","sourceValue","bandIndex","nodataIsNaN","isNaN","ChannelControl","TextControl","noData","Utils","mapState","getBandVar","getFormula","getNoDataFormula","addGeoTiff","geotiff","title","getBands","appMode","getColorMap","getNoData","getBlob","getUrl","GeoTIFF","TileLayer","pointermove","evt","pixelData","getData","pixel","displayRGBA","valueText","coords","formatCoords","click","from","every","isFinite","label","datasets","addLayerToMap","getExtent","getFitOptions","toFixed","setOptions","alphaband","formula","createElementNS","namespaceURI","qualifiedName","node","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","object","parse","xml","DOMParser","parseFromString","makeArrayPusher","valueReader","thisArg","objectStack","makeObjectPropertyPusher","property","localName","makeObjectPropertySetter","makeSimpleNodeFactory","fixedNodeName","fixedNamespaceURI","newNodeName","nodeName","makeStructureNS","namespaceURIs","structure","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","pop","document_","implementation","createDocument","XML","read","doc","readFromDocument","readFromNode","ELEMENT_NODE","NAMESPACE_URI","readHref","getAttributeNS","readDecimal","readDecimalString","string","exec","readPositiveInteger","readNonNegativeIntegerString","parseInt","readString","NAMESPACE_URIS","PARSERS","readServiceIdentification","readServiceProvider","readOperationsMetadata","OWS","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","readValue","CONSTRAINT_PARSERS","readAllowedValues","CONTACT_INFO_PARSERS","readPhone","readAddress","DCP_PARSERS","readHttp","HTTP_PARSERS","readGet","OPERATION_PARSERS","readDcp","OPERATIONS_METADATA_PARSERS","readOperation","PHONE_PARSERS","REQUEST_METHOD_PARSERS","readConstraint","SERVICE_CONTACT_PARSERS","readContactInfo","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","readServiceContact","getAttribute","href","OWS_NAMESPACE_URIS","readContents","WMTSCapabilities","owsParser_","version","WMTSCapabilityObject","CONTENTS_PARSERS","readLayer","readTileMatrixSet","LAYER_PARSERS","readStyle","readTileMatrixSetLink","readDimensions","readResourceUrl","readBoundingBox","readBoundingBoxWithCrs","STYLE_PARSERS","readLegendUrl","TMS_LINKS_PARSERS","readTileMatrixLimitsList","TMS_LIMITS_LIST_PARSERS","readTileMatrixLimits","TMS_LIMITS_PARSERS","DIMENSION_PARSERS","WGS84_BBOX_READERS","readCoordinates","TMS_PARSERS","readTileMatrix","TM_PARSERS","isDefault","template","resourceType","resource","crs","legend","appendParams","uri","keyParams","qs","WMTSTileGrid","origins","sizes","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","metersPerUnit","getMetersPerUnit","switchOriginXY","getAxisOrientation","substr","sort","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","TileImage","requestEncoding","urls","crossOrigin","reprojectionErrorThreshold","tileClass","tileLoadFunction","tilePixelRatio","zDirection","version_","format_","dimensions_","dimensions","layer_","matrixSet_","requestEncoding_","getKeyForDimensions_","tileUrlFunction","createFromWMTSTemplate","setUrls","setTileUrlFunction","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","localContext","optionsFromCapabilities","wmtsCap","config","layers","tileMatrixSets","idx","findIndex","tileMatrixSet","el","supportedCRS","proj1","proj2","index","matrixSets","matrixSetObj","projConfig","switchXY","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","constraint","encodings","ol_control_Timeline","zoomButton","_scrollDiv","parent","_buttons","addButton","handleClick","refresh","_intervalDiv","_select","scrollListener","_setScrollLeft","date","getDate","dateStart","dateEnd","scrollTimeout","scrollDiv","onmove","_moving","_tline","_scrollLeft","maxWidth","minDate","Infinity","maxDate","graduation","setInterval","interval","getHTML","_getHTML","getFeatureDate","_getFeatureDate","endFeatureDate","_endFeatureDate","setFeatures","setMap","html","isCollapsed","collapsed","_features","_source","getFeatures","first","d2","tline","end","div","_minDate","_maxDate","delta","_scale","_drawTime","line","lineHeight","fdiv","left","img","querySelectorAll","ondragstart","minWidth","pos","top","_nbline","setDate","anim","position","_getOffsetFromDate","_getDateFromOffset","offset","scrollLeft","_getScrollLeft","dt","month","dmonth","tdiv","dx","heigth","year","getFullYear","setFullYear","dyear","setMonth","toLocaleDateString","dday","day","offdate","getMonth","outerWidth","roundDate","stick","_roundTo","getStartDate","getEndDate","ExtentMixin","timeline","addWebService","service","updateXYZLayer","updateWMTSLayer","getWMTSTimes","capabilities","layerId","Contents","Layer","Dimension","timeDimension","Value","initWMTSLayer","URL","searchParams","response","axios","responseType","exception","prefix","attributes","layerNames","defaultDate","getResourceTitle","layerCollection","Collection","TIME","times","isObject","WMTS","mapLayer","trackTileProgress","noSwitcherDelete","run","Timeline","toISOString","btns","getElementsByClassName","innerText","disabled","log","group","LayerGroup","display","getVisible","removeControl","replaceParam","getTime","XYZ","process","process_graph","crs84","e4326","process_id","arguments","spatial_extent","isBBox","isGeoJSON","addExtent","GeoTIFFImage","getSampleByteSize","BitsPerSample","getReaderForSample","getSampleFormat","bitsPerSample","getBitsPerSample","DataView","getUint8","getUint16","getUint32","getInt8","getInt16","getInt32","littleEndian","getFloat16","getFloat32","getFloat64","SampleFormat","GeocoderMixin","GeoTiffMixin","MapMixin","WebServiceMixin","Pane","ScatterChart","Splitpanes","isWebService","Service","isGeoJson","JSON_","mounted","renderMap","view","loadData","connection","isMapServiceSupported","createMap","addLayerSwitcher","toExtent","addBasemaps","addGeoJson","basemap","getCode","stac","getContext","$listeners","drop","getViewport","addCollection","showWebService","fromLonLat","extentLayer","VectorLayer","VectorSource","Feature","PolygonFromExtent","removeLayerFill"],"sourceRoot":""}
{"version":3,"file":"js/6775.8512dc16.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","d","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_","sort","a","computeMinSampleSize","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","T","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","diff","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","position","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","widths","heights","j","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","w","h","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","tickTextAlign","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","ScatterController","interaction","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","getIntersectItems","includeInvisible","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","p","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","onHover","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","drawFullCircleBorders","inner","borderJoinStyle","lineJoin","defineProperties","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","_args","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","m","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}
{"version":3,"file":"js/3291.a294dd66.js","mappings":"sLAkDA,MAAMA,UAAe,IAInB,WAAAC,CAAYC,GACVC,QAMAC,KAAKC,YAAa,IAAAC,KAAcJ,EAAQG,YAMxCD,KAAKG,cAAgBC,EAAkBN,EAAQO,cAM/CL,KAAKM,8BACiCC,IAApCT,EAAQU,yBACJV,EAAQU,wBAQdR,KAAKS,SAAU,EAMfT,KAAKU,YAA2BH,IAAlBT,EAAQa,MAAsBb,EAAQa,MAAQ,QAM5DX,KAAKY,YAA2BL,IAAlBT,EAAQe,OAAsBf,EAAQe,MAMpDb,KAAKc,eAAiBhB,EAAQiB,YAM9Bf,KAAKgB,aAAe,KAMpBhB,KAAKiB,aAAe,KAEpB,MAAMC,EAAOlB,KAKbA,KAAKmB,aAAe,IAAIC,SAAQ,SAAUC,EAASC,GACjDJ,EAAKF,aAAeK,EACpBH,EAAKD,aAAeK,CACtB,GACF,CAOA,eAAAC,GACE,OAAOvB,KAAKG,aACd,CAMA,0BAAAqB,GACE,OAAOxB,KAAKM,wBACd,CAOA,aAAAmB,GACE,OAAOzB,KAAKC,UACd,CAMA,cAAAyB,CAAezB,GACb,OAAO,IACT,CAKA,OAAA0B,GACE,OAAO3B,KAAKmB,YACd,CAOA,QAAAS,GACE,OAAO5B,KAAKU,MACd,CAKA,QAAAmB,GACE,OAAO7B,KAAKY,MACd,CAKA,cAAAkB,GACE,OAAO9B,KAAKc,YACd,CAMA,OAAAiB,GACE/B,KAAKgC,SACP,CASA,eAAAC,CAAgB5B,GACdL,KAAKG,cAAgBC,EAAkBC,GACvCL,KAAKgC,SACP,CAMA,QAAAE,CAASvB,GACPX,KAAKU,OAASC,EACdX,KAAKgC,SACP,EAQF,SAAS5B,EAAkB+B,GACzB,OAAKA,EAGDC,MAAMC,QAAQF,GACT,SAAUG,GACf,OAAOH,CACT,EAG6B,oBAApBA,EACFA,EAGF,SAAUG,GACf,MAAO,CAACH,EACV,EAdS,IAeX,CAEA,S,yJChMA,MAAMI,UAAmB,IAIvB,WAAA1C,CAAYC,GACVC,MAAM,CACJM,aAAcP,EAAQO,aACtBG,wBAAyBV,EAAQU,wBACjCP,WAAYH,EAAQG,WACpBU,MAAOb,EAAQa,MACfE,MAAOf,EAAQe,MACfE,YAAajB,EAAQiB,cAMvBf,KAAKwC,GAKLxC,KAAKyC,KAKLzC,KAAK0C,GAML1C,KAAK2C,aAA6BpC,IAAnBT,EAAQ8C,QAAuB9C,EAAQ8C,OAMtD5C,KAAK6C,qBACwBtC,IAA3BT,EAAQgD,eAA+BhD,EAAQgD,eAAiB,EAKlE9C,KAAK+C,cAAgCxC,IAArBT,EAAQiD,SAAyBjD,EAAQiD,SAAW,KAEpE,MAAMC,EAAW,CAAC,IAAK,KACnBhD,KAAK+C,WACP,QAAO/C,KAAK+C,SAASE,YAAYjD,KAAK+C,SAASG,cAAeF,GAOhEhD,KAAKmD,UAAY,IAAI,IAAUrD,EAAQsD,WAAa,GAMpDpD,KAAKqD,QAAU,CAAC,EAAG,GAMnBrD,KAAKsD,KAAOxD,EAAQyD,KAAO,GAM3BvD,KAAKwD,YAAc,CACjBC,WAAY3D,EAAQ2D,WACpB1C,YAAajB,EAAQiB,aAUvBf,KAAK0D,WAAa5D,EAAQ4D,WAAa5D,EAAQ4D,WAAa,CAC9D,CAKA,cAAAC,GACE,OAAO3D,KAAKmD,UAAUQ,gBACxB,CAMA,WAAAC,CAAY3D,EAAY4D,GACtB,MAAMV,EAAYnD,KAAK8D,0BAA0B7D,GAC7CkD,GACFA,EAAUS,YAAYC,EAE1B,CAWA,iBAAAE,CAAkB9D,EAAY+D,EAAGC,EAAWC,GAC1C,MAAMf,EAAYnD,KAAK8D,0BAA0B7D,GACjD,IAAKkD,EACH,OAAO,EAGT,IACIgB,EAAMC,EAAcC,EADpBC,GAAU,EAEd,IAAK,IAAIC,EAAIN,EAAUO,KAAMD,GAAKN,EAAUQ,OAAQF,EAClD,IAAK,IAAIG,EAAIT,EAAUU,KAAMD,GAAKT,EAAUW,OAAQF,EAClDN,GAAe,QAAUJ,EAAGO,EAAGG,GAC/BL,GAAS,EACLlB,EAAU0B,YAAYT,KACxBD,EACEhB,EAAUjD,IAAIkE,GAEhBC,EAASF,EAAKvC,aAAe,IAAUkD,OACnCT,IACFA,GAA4B,IAAnBH,EAASC,KAGjBE,IACHC,GAAU,GAIhB,OAAOA,CACT,CAMA,sBAAAS,CAAuB9E,GACrB,OAAO,CACT,CAMA,MAAA+E,GACE,OAAOhF,KAAKsD,IACd,CAOA,MAAA2B,CAAO1B,GACDvD,KAAKsD,OAASC,IAChBvD,KAAKsD,KAAOC,EACZvD,KAAKgC,UAET,CAMA,SAAAkD,CAAUjF,GACR,OAAOD,KAAK2C,OACd,CAMA,cAAAjB,CAAezB,GACb,MAAM8C,EAAW9C,EACbD,KAAKmF,yBAAyBlF,GAC9BD,KAAK+C,SACT,OAAKA,EAGEA,EAASrB,iBAFP,IAGX,CAWA,OAAA0D,CAAQpB,EAAGO,EAAGG,EAAGW,EAAYpF,GAC3B,OAAO,SACT,CAOA,WAAAqF,GACE,OAAOtF,KAAK+C,QACd,CAMA,wBAAAoC,CAAyBlF,GACvB,OAAKD,KAAK+C,SAGH/C,KAAK+C,UAFH,QAAyB9C,EAGpC,CAOA,yBAAA6D,CAA0B7D,GACxB,MAAMsF,EAAmBvF,KAAKyB,gBAK9B,OAJA,OACuB,OAArB8D,IAA6B,IAAAC,YAAWD,EAAkBtF,GAC1D,wGAEKD,KAAKmD,SACd,CASA,iBAAAsC,CAAkBJ,GAChB,OAAOrF,KAAK6C,eACd,CAQA,gBAAA6C,CAAiB1B,EAAGqB,EAAYpF,GAC9B,MAAM8C,EAAW/C,KAAKmF,yBAAyBlF,GACzC6C,EAAiB9C,KAAKyF,kBAAkBJ,GACxCrC,GAAW,QAAOD,EAASE,YAAYe,GAAIhE,KAAKqD,SACtD,OAAsB,GAAlBP,EACKE,GAEF,QAAUA,EAAUF,EAAgB9C,KAAKqD,QAClD,CAWA,8BAAAsC,CAA+BC,EAAW3F,GACxCA,OAA4BM,IAAfN,EAA2BA,EAAaD,KAAKyB,gBAC1D,MAAMsB,EAAW/C,KAAKmF,yBAAyBlF,GAI/C,OAHID,KAAK6B,YAAc5B,EAAW4F,aAChCD,GAAY,QAAM7C,EAAU6C,EAAW3F,KAElC,QAAiB2F,EAAW7C,GAAY6C,EAAY,IAC7D,CAMA,KAAAE,GACE9F,KAAKmD,UAAU2C,OACjB,CAEA,OAAA/D,GACE/B,KAAK8F,QACL/F,MAAMgC,SACR,CAOA,eAAAgE,CAAgBC,EAAW/F,GACzB,MAAMkD,EAAYnD,KAAK8D,0BAA0B7D,GAC7C+F,EAAY7C,EAAU8C,gBACxB9C,EAAU8C,cAAgBD,EAE9B,CAUA,OAAAE,CAAQlC,EAAGO,EAAGG,EAAGzE,GAAa,EAQzB,MAAMkG,UAAwB,KAKnC,WAAAtG,CAAYuG,EAAMjC,GAChBpE,MAAMqG,GAONpG,KAAKmE,KAAOA,CACd,EAGF,S,mCCtYA,SAMEkC,cAAe,gBAQfC,YAAa,cASbC,cAAe,gB,mJCQjB,MAAMC,UAAgB,IAIpB,WAAA3G,CAAYC,GACVC,MAAM,CACJM,aAAcP,EAAQO,aACtB+C,UAAWtD,EAAQsD,UACnBR,OAAQ9C,EAAQ8C,OAChB3C,WAAYH,EAAQG,WACpBU,MAAOb,EAAQa,MACfoC,SAAUjD,EAAQiD,SAClBD,eAAgBhD,EAAQgD,eACxBjC,MAAOf,EAAQe,MACf4C,WAAY3D,EAAQ2D,WACpB1C,YAAajB,EAAQiB,YACrBwC,IAAKzD,EAAQyD,IACb/C,wBAAyBV,EAAQU,wBACjCkD,WAAY5D,EAAQ4D,aAOtB1D,KAAKyG,yBACHzG,KAAK0G,kBAAoBF,EAAQG,UAAUD,gBAM7C1G,KAAK4G,iBAAmB9G,EAAQ8G,iBAE5B9G,EAAQ4G,kBACV1G,KAAK0G,gBAAkB5G,EAAQ4G,iBAOjC1G,KAAK6G,KAAO,KAER/G,EAAQ+G,KACV7G,KAAK8G,QAAQhH,EAAQ+G,MACZ/G,EAAQiH,KACjB/G,KAAKgH,OAAOlH,EAAQiH,KAOtB/G,KAAKiH,iBAAmB,CAAC,CAC3B,CAOA,mBAAAC,GACE,OAAOlH,KAAK4G,gBACd,CAOA,kBAAAO,GACE,OAAOC,OAAOC,eAAerH,MAAM0G,kBAAoB1G,KAAK0G,gBACxD1G,KAAK0G,gBAAgBY,KAAKtH,MAC1BA,KAAK0G,eACX,CASA,OAAAa,GACE,OAAOvH,KAAK6G,IACd,CAOA,gBAAAW,CAAiBC,GACf,MAAMtD,EAAoDsD,EAAY,OAChEC,GAAM,QAAOvD,GACbwD,EAAYxD,EAAKvC,WACvB,IAAIwE,EACAuB,GAAaC,EAAA,EAAUC,SACzB7H,KAAKiH,iBAAiBS,IAAO,EAC7BtB,EAAO0B,EAAA,EAAczB,eACZqB,KAAO1H,KAAKiH,0BACdjH,KAAKiH,iBAAiBS,GAC7BtB,EACEuB,GAAaC,EAAA,EAAUG,MACnBD,EAAA,EAAcvB,cACdoB,GAAaC,EAAA,EAAU9C,OACrBgD,EAAA,EAAcxB,iBACd/F,QAEEA,GAAR6F,GACFpG,KAAKgI,cAAc,IAAI,IAAgB5B,EAAMjC,GAEjD,CAOA,mBAAA8D,CAAoBrB,GAClB5G,KAAKmD,UAAU2C,QACf9F,KAAK4G,iBAAmBA,EACxB5G,KAAKgC,SACP,CAQA,kBAAAkG,CAAmBxB,EAAiBnD,GAClCvD,KAAK0G,gBAAkBA,EACvB1G,KAAKmD,UAAUgF,qBACI,qBAAR5E,EACTvD,KAAKiF,OAAO1B,GAEZvD,KAAKgC,SAET,CAOA,MAAAgF,CAAOD,GACL,MAAMF,GAAO,QAAUE,GACvB/G,KAAK6G,KAAOA,EACZ7G,KAAK8G,QAAQD,EACf,CAOA,OAAAC,CAAQD,GACN7G,KAAK6G,KAAOA,EACZ,MAAMtD,EAAMsD,EAAKuB,KAAK,MAClBpI,KAAKyG,yBACPzG,KAAKkI,oBAAmB,QAAoBrB,EAAM7G,KAAK+C,UAAWQ,GAElEvD,KAAKiF,OAAO1B,EAEhB,CAQA,eAAAmD,CAAgBd,EAAWP,EAAYpF,GAEvC,CAQA,OAAAiG,CAAQlC,EAAGO,EAAGG,GACZ,MAAMN,GAAe,QAAUJ,EAAGO,EAAGG,GACjC1E,KAAKmD,UAAU0B,YAAYT,IAC7BpE,KAAKmD,UAAUjD,IAAIkE,EAEvB,EAGF,U,yBCpKA,MAAMiE,UAAkB,EAItB,WAAAxI,CAAYC,GACVC,MAAM,CACJM,aAAcP,EAAQO,aACtB+C,UAAWtD,EAAQsD,UACnBR,OAAQ9C,EAAQ8C,OAChB3C,WAAYH,EAAQG,WACpBU,MAAOb,EAAQa,MACfoC,SAAUjD,EAAQiD,SAClB6D,iBAAkB9G,EAAQ8G,iBACtB9G,EAAQ8G,iBACR0B,EACJxF,eAAgBhD,EAAQgD,eACxB4D,gBAAiB5G,EAAQ4G,gBACzBK,IAAKjH,EAAQiH,IACbF,KAAM/G,EAAQ+G,KACdhG,MAAOf,EAAQe,MACf4C,WAAY3D,EAAQ2D,WACpB1C,iBAC0BR,IAAxBT,EAAQiB,aAA4BjB,EAAQiB,YAC9CwC,IAAKzD,EAAQyD,IACb/C,wBAAyBV,EAAQU,wBACjCkD,WAAY5D,EAAQ4D,aAOtB1D,KAAKuI,iBACqBhI,IAAxBT,EAAQyI,YAA4BzI,EAAQyI,YAAc,KAM5DvI,KAAKwI,eACmBjI,IAAtBT,EAAQ0I,UAA0B1I,EAAQ0I,UAAYC,EAAA,EAMxDzI,KAAK0I,uBAAyB,CAAC,EAM/B1I,KAAK2I,sBAAwB,CAAC,EAM9B3I,KAAK4I,4BAA8B9I,EAAQ+I,2BAM3C7I,KAAK8I,0BAA2B,CAClC,CAKA,cAAAnF,GACE,GAAI3D,KAAKmD,UAAUQ,iBACjB,OAAO,EAET,IAAK,MAAMJ,KAAOvD,KAAK0I,uBACrB,GAAI1I,KAAK0I,uBAAuBnF,GAAKI,iBACnC,OAAO,EAIX,OAAO,CACT,CAMA,WAAAC,CAAY3D,EAAY4D,GACtB,MAAMkF,EAAgB/I,KAAK8D,0BAA0B7D,GAErDD,KAAKmD,UAAUS,YACb5D,KAAKmD,WAAa4F,EAAgBlF,EAAY,CAAC,GAEjD,IAAK,MAAMmF,KAAMhJ,KAAK0I,uBAAwB,CAC5C,MAAMvF,EAAYnD,KAAK0I,uBAAuBM,GAC9C7F,EAAUS,YAAYT,GAAa4F,EAAgBlF,EAAY,CAAC,EAClE,CACF,CAMA,sBAAAkB,CAAuB9E,GACrB,OACED,KAAKyB,iBACLxB,KACC,IAAAuF,YAAWxF,KAAKyB,gBAAiBxB,GAE3B,EAEFD,KAAKiJ,WACd,CAKA,SAAAA,GACE,OAAO,CACT,CAMA,MAAAjE,GACE,IAAIzB,EAAMxD,MAAMiF,SAIhB,OAHKhF,KAAK8B,mBACRyB,GAAO,0BAEFA,CACT,CAMA,SAAA2B,CAAUjF,GACR,QACED,KAAKyB,iBACLxB,KACC,IAAAuF,YAAWxF,KAAKyB,gBAAiBxB,KAI7BF,MAAMmF,UAAUjF,EACzB,CAMA,wBAAAkF,CAAyBlF,GACvB,MAAMiJ,EAAWlJ,KAAKyB,gBACtB,GAAIzB,KAAK+C,YAAcmG,IAAY,IAAA1D,YAAW0D,EAAUjJ,IACtD,OAAOD,KAAK+C,SAEd,MAAMoG,GAAU,QAAOlJ,GAKvB,OAJMkJ,KAAWnJ,KAAK2I,wBACpB3I,KAAK2I,sBAAsBQ,IACzB,QAAyBlJ,IAEtBD,KAAK2I,sBAAsBQ,EACpC,CAMA,yBAAArF,CAA0B7D,GACxB,MAAMiJ,EAAWlJ,KAAKyB,gBACtB,IAAKyH,IAAY,IAAA1D,YAAW0D,EAAUjJ,GACpC,OAAOD,KAAKmD,UAEd,MAAMgG,GAAU,QAAOlJ,GAMvB,OALMkJ,KAAWnJ,KAAK0I,yBACpB1I,KAAK0I,uBAAuBS,GAAW,IAAIC,EAAA,EACzCpJ,KAAKmD,UAAU8C,gBAGZjG,KAAK0I,uBAAuBS,EACrC,CAYA,WAAAE,CAAYrF,EAAGO,EAAGG,EAAGW,EAAYpF,EAAYsD,GAC3C,MAAMqC,EAAY,CAAC5B,EAAGO,EAAGG,GACnB4E,EAAetJ,KAAK2F,+BACxBC,EACA3F,GAEIsJ,EAAUD,EACZtJ,KAAK0G,gBAAgB4C,EAAcjE,EAAYpF,QAC/CM,EACE4D,EAAO,IAAInE,KAAKwI,UACpB5C,OACYrF,IAAZgJ,EAAwB3B,EAAA,EAAU4B,KAAO5B,EAAA,EAAU6B,WACvClJ,IAAZgJ,EAAwBA,EAAU,GAClCvJ,KAAKuI,YACLvI,KAAK4G,iBACL5G,KAAKwD,aAIP,OAFAW,EAAKZ,IAAMA,EACXY,EAAKuF,iBAAiBC,EAAA,EAAUC,OAAQ5J,KAAKwH,iBAAiBF,KAAKtH,OAC5DmE,CACT,CAUA,OAAAiB,CAAQpB,EAAGO,EAAGG,EAAGW,EAAYpF,GAC3B,MAAMsF,EAAmBvF,KAAKyB,gBAC9B,IACG8D,IACAtF,IACD,IAAAuF,YAAWD,EAAkBtF,GAE7B,OAAOD,KAAK6J,gBACV7F,EACAO,EACAG,EACAW,EACAE,GAAoBtF,GAGxB,MAAM6J,EAAQ9J,KAAK8D,0BAA0B7D,GACvC2F,EAAY,CAAC5B,EAAGO,EAAGG,GACzB,IAAIP,EACJ,MAAMC,GAAe,QAAOwB,GACxBkE,EAAMjF,YAAYT,KACpBD,EAAO2F,EAAM5J,IAAIkE,IAEnB,MAAMb,EAAMvD,KAAKgF,SACjB,GAAIb,GAAQA,EAAKZ,KAAOA,EACtB,OAAOY,EAET,MAAM4F,EAAiB/J,KAAKmF,yBAAyBI,GAC/CyE,EAAiBhK,KAAKmF,yBAAyBlF,GAC/CgK,EAAmBjK,KAAK2F,+BAC5BC,EACA3F,GAEIiK,EAAU,IAAI,IAClB3E,EACAwE,EACA9J,EACA+J,EACApE,EACAqE,EACAjK,KAAKyF,kBAAkBJ,GACvBrF,KAAKiJ,aACL,CAACjF,EAAGO,EAAGG,EAAGW,IACRrF,KAAK6J,gBAAgB7F,EAAGO,EAAGG,EAAGW,EAAYE,IAC5CvF,KAAK4I,4BACL5I,KAAK8I,yBACL9I,KAAKwD,aAWP,OATA0G,EAAQ3G,IAAMA,EAEVY,GACF+F,EAAQC,YAAchG,EACtB+F,EAAQE,sBACRN,EAAMO,QAAQjG,EAAc8F,IAE5BJ,EAAMQ,IAAIlG,EAAc8F,GAEnBA,CACT,CAWA,eAAAL,CAAgB7F,EAAGO,EAAGG,EAAGW,EAAYpF,GACnC,IAAIkE,EAAO,KACX,MAAMC,GAAe,QAAUJ,EAAGO,EAAGG,GAC/BnB,EAAMvD,KAAKgF,SACjB,GAAKhF,KAAKmD,UAAU0B,YAAYT,IAK9B,GADAD,EAAOnE,KAAKmD,UAAUjD,IAAIkE,GACtBD,EAAKZ,KAAOA,EAAK,CAInB,MAAM4G,EAAchG,EACpBA,EAAOnE,KAAKqJ,YAAYrF,EAAGO,EAAGG,EAAGW,EAAYpF,EAAYsD,GAGrD4G,EAAYvI,YAAcgG,EAAA,EAAU4B,KAEtCrF,EAAKgG,YAAcA,EAAYA,YAE/BhG,EAAKgG,YAAcA,EAErBhG,EAAKiG,sBACLpK,KAAKmD,UAAUkH,QAAQjG,EAAcD,EACvC,OApBAA,EAAOnE,KAAKqJ,YAAYrF,EAAGO,EAAGG,EAAGW,EAAYpF,EAAYsD,GACzDvD,KAAKmD,UAAUmH,IAAIlG,EAAcD,GAqBnC,OAAOA,CACT,CAOA,0BAAAoG,CAA2BC,GACzB,GAAIxK,KAAK8I,0BAA4B0B,EAArC,CAGAxK,KAAK8I,yBAA2B0B,EAChC,IAAK,MAAMxB,KAAMhJ,KAAK0I,uBACpB1I,KAAK0I,uBAAuBM,GAAIlD,QAElC9F,KAAKgC,SALL,CAMF,CAcA,wBAAAyI,CAAyBxK,EAAYyK,GACnC,MAAMC,GAAO,IAAAzK,KAAcD,GAC3B,GAAI0K,EAAM,CACR,MAAMxB,GAAU,QAAOwB,GACjBxB,KAAWnJ,KAAK2I,wBACpB3I,KAAK2I,sBAAsBQ,GAAWuB,EAE1C,CACF,CAEA,KAAA5E,GACE/F,MAAM+F,QACN,IAAK,MAAMkD,KAAMhJ,KAAK0I,uBACpB1I,KAAK0I,uBAAuBM,GAAIlD,OAEpC,EAOF,SAASwC,EAAwBsC,EAAWC,GACQD,EAAUE,WAAYD,IACtEA,CACJ,CAEA,S,8QCpZO,MAAME,UAA0B,KAMrC,WAAAlL,CAAYuG,EAAM4E,EAASC,GACzBlL,MAAMqG,GAONpG,KAAKgL,QAAUA,EAOfhL,KAAKiL,SAAWA,CAClB,EAyHF,MAAMC,UAAqB,IAIzB,WAAArL,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAEtBC,MAAM,CACJM,aAAcP,EAAQO,aACtBU,aAAa,EACbd,gBAAYM,EACZI,MAAO,QACPE,WAAyBN,IAAlBT,EAAQe,OAAsBf,EAAQe,QAM/Cb,KAAKwC,GAKLxC,KAAKyC,KAKLzC,KAAK0C,GAML1C,KAAKmL,QAAU,KAMfnL,KAAKoL,QAAUtL,EAAQuL,OAMvBrL,KAAKsL,eAAiC/K,IAArBT,EAAQyL,UAAgCzL,EAAQyL,SAMjEvL,KAAKwL,KAAO1L,EAAQiH,SAEGxG,IAAnBT,EAAQ2L,OACVzL,KAAKmL,QAAUrL,EAAQ2L,YACAlL,IAAdP,KAAKwL,QACd,OAAOxL,KAAKoL,QAAS,0CAErBpL,KAAKmL,SAAU,QAAInL,KAAKwL,KAAMxL,KAAKoL,UAOrCpL,KAAK0L,eACkBnL,IAArBT,EAAQ6L,SAAyB7L,EAAQ6L,SAAW,KAEtD,MAAMC,OACwBrL,IAA5BT,EAAQ8L,iBAAgC9L,EAAQ8L,gBAqDlD,IAAIC,EAEAZ,EAjDJjL,KAAK8L,eAAiBF,EAAkB,IAAI,IAAU,KAMtD5L,KAAK+L,oBAAsB,IAAI,IAM/B/L,KAAKgM,qBAAuB,EAM5BhM,KAAKiM,sBAAwB,CAAC,EAO9BjM,KAAKkM,SAAW,CAAC,EAOjBlM,KAAKmM,UAAY,CAAC,EAMlBnM,KAAKoM,mBAAqB,CAAC,EAM3BpM,KAAKqM,oBAAsB,KAMvBjK,MAAMC,QAAQvC,EAAQmL,UACxBA,EAAWnL,EAAQmL,SACVnL,EAAQmL,WACjBY,EAAa/L,EAAQmL,SACrBA,EAAWY,EAAWS,YAEnBV,QAAkCrL,IAAfsL,IACtBA,EAAa,IAAI,IAAWZ,SAEb1K,IAAb0K,GACFjL,KAAKuM,oBAAoBtB,QAER1K,IAAfsL,GACF7L,KAAKwM,wBAAwBX,EAEjC,CAcA,UAAAY,CAAWzB,GACThL,KAAK0M,mBAAmB1B,GACxBhL,KAAKgC,SACP,CAOA,kBAAA0K,CAAmB1B,GACjB,MAAM2B,GAAa,QAAO3B,GAE1B,IAAKhL,KAAK4M,YAAYD,EAAY3B,GAIhC,YAHIhL,KAAKqM,qBACPrM,KAAKqM,oBAAoBQ,OAAO7B,IAKpChL,KAAK8M,mBAAmBH,EAAY3B,GAEpC,MAAM+B,EAAW/B,EAAQgC,cACzB,GAAID,EAAU,CACZ,MAAME,EAASF,EAASG,YACpBlN,KAAK8L,gBACP9L,KAAK8L,eAAeqB,OAAOF,EAAQjC,EAEvC,MACEhL,KAAKiM,sBAAsBU,GAAc3B,EAG3ChL,KAAKgI,cACH,IAAI+C,EAAkB,IAAgBqC,WAAYpC,GAEtD,CAOA,kBAAA8B,CAAmBH,EAAY3B,GACzBA,aAAmB,OAGvBhL,KAAKoM,mBAAmBO,GAAc,EACpC,QAAO3B,EAAS,IAAUpB,OAAQ5J,KAAKqN,qBAAsBrN,OAC7D,QACEgL,EACA,IAAgBsC,eAChBtN,KAAKqN,qBACLrN,OAGN,CASA,WAAA4M,CAAYD,EAAY3B,GACtB,IAAIuC,GAAQ,EACZ,QAAwBhN,IAApByK,EAAQwC,QAAuB,CACjC,MAAMxE,EAAKyE,OAAOzC,EAAQwC,SAC1B,GAAMxE,KAAMhJ,KAAKkM,SAEV,GAAIlB,aAAmB,KAAe,CAC3C,MAAM0C,EAAiB1N,KAAKkM,SAASlD,GAC/B0E,aAA0B,KAGzBtL,MAAMC,QAAQqL,GAGjBA,EAAeC,KAAK3C,GAFpBhL,KAAKkM,SAASlD,GAAM,CAAC0E,EAAgB1C,GAHvCuC,GAAQ,CAQZ,MACEA,GAAQ,OAbRvN,KAAKkM,SAASlD,GAAMgC,CAexB,CAQA,OAPIuC,KACF,SACIZ,KAAc3M,KAAKmM,WACrB,wDAEFnM,KAAKmM,UAAUQ,GAAc3B,GAExBuC,CACT,CAOA,WAAAK,CAAY3C,GACVjL,KAAKuM,oBAAoBtB,GACzBjL,KAAKgC,SACP,CAOA,mBAAAuK,CAAoBtB,GAClB,MAAM4C,EAAU,GAEVC,EAAc,GAEdC,EAAmB,GAEzB,IAAK,IAAIC,EAAI,EAAGC,EAAShD,EAASgD,OAAQD,EAAIC,EAAQD,IAAK,CACzD,MAAMhD,EAAUC,EAAS+C,GACnBrB,GAAa,QAAO3B,GACtBhL,KAAK4M,YAAYD,EAAY3B,IAC/B8C,EAAYH,KAAK3C,EAErB,CAEA,IAAK,IAAIgD,EAAI,EAAGC,EAASH,EAAYG,OAAQD,EAAIC,EAAQD,IAAK,CAC5D,MAAMhD,EAAU8C,EAAYE,GACtBrB,GAAa,QAAO3B,GAC1BhL,KAAK8M,mBAAmBH,EAAY3B,GAEpC,MAAM+B,EAAW/B,EAAQgC,cACzB,GAAID,EAAU,CACZ,MAAME,EAASF,EAASG,YACxBW,EAAQF,KAAKV,GACbc,EAAiBJ,KAAK3C,EACxB,MACEhL,KAAKiM,sBAAsBU,GAAc3B,CAE7C,CAKA,GAJIhL,KAAK8L,gBACP9L,KAAK8L,eAAeoC,KAAKL,EAASE,GAGhC/N,KAAKmO,YAAY,IAAgBf,YACnC,IAAK,IAAIY,EAAI,EAAGC,EAASH,EAAYG,OAAQD,EAAIC,EAAQD,IACvDhO,KAAKgI,cACH,IAAI+C,EAAkB,IAAgBqC,WAAYU,EAAYE,IAItE,CAMA,uBAAAxB,CAAwBX,GACtB,IAAIuC,GAAsB,EAC1BpO,KAAK0J,iBACH,IAAgB0D,YAIhB,SAAUiB,GACHD,IACHA,GAAsB,EACtBvC,EAAW8B,KAAKU,EAAIrD,SACpBoD,GAAsB,EAE1B,IAEFpO,KAAK0J,iBACH,IAAgB4E,eAIhB,SAAUD,GACHD,IACHA,GAAsB,EACtBvC,EAAWgB,OAAOwB,EAAIrD,SACtBoD,GAAsB,EAE1B,IAEFvC,EAAWnC,iBACT,IAAoB6E,KAInBF,IACMD,IACHA,GAAsB,EACtBpO,KAAKyM,WAAW4B,EAAIG,SACpBJ,GAAsB,EACxB,IAGJvC,EAAWnC,iBACT,IAAoB+E,QAInBJ,IACMD,IACHA,GAAsB,EACtBpO,KAAK0O,cAAcL,EAAIG,SACvBJ,GAAsB,EACxB,IAGJpO,KAAKqM,oBAAsBR,CAC7B,CAOA,KAAA/F,CAAM6I,GACJ,GAAIA,EAAM,CACR,IAAK,MAAMC,KAAa5O,KAAKoM,mBAAoB,CAC/C,MAAMyC,EAAO7O,KAAKoM,mBAAmBwC,GACrCC,EAAKC,QAAQ,KACf,CACK9O,KAAKqM,sBACRrM,KAAKoM,mBAAqB,CAAC,EAC3BpM,KAAKkM,SAAW,CAAC,EACjBlM,KAAKmM,UAAY,CAAC,EAEtB,MACE,GAAInM,KAAK8L,eAAgB,CACvB,MAAMiD,EAAyB/D,IAC7BhL,KAAKgP,sBAAsBhE,EAAQ,EAErChL,KAAK8L,eAAegD,QAAQC,GAC5B,IAAK,MAAM/F,KAAMhJ,KAAKiM,sBACpBjM,KAAKgP,sBAAsBhP,KAAKiM,sBAAsBjD,GAE1D,CAEEhJ,KAAKqM,qBACPrM,KAAKqM,oBAAoBvG,QAGvB9F,KAAK8L,gBACP9L,KAAK8L,eAAehG,QAEtB9F,KAAKiM,sBAAwB,CAAC,EAE9B,MAAMgD,EAAa,IAAIlE,EAAkB,IAAgBmE,OACzDlP,KAAKgI,cAAciH,GACnBjP,KAAKgC,SACP,CAcA,cAAAmN,CAAejL,GACb,GAAIlE,KAAK8L,eACP,OAAO9L,KAAK8L,eAAegD,QAAQ5K,GAEjClE,KAAKqM,qBACPrM,KAAKqM,oBAAoByC,QAAQ5K,EAErC,CAiBA,gCAAAkL,CAAiCC,EAAYnL,GAC3C,MAAM+I,EAAS,CAACoC,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACxE,OAAOrP,KAAKsP,uBAAuBrC,GAAQ,SAAUjC,GACnD,MAAM+B,EAAW/B,EAAQgC,cACzB,GACED,aAAoB,MACpBA,EAASwC,qBAAqBF,GAE9B,OAAOnL,EAAS8G,EAGpB,GACF,CAqBA,sBAAAsE,CAAuBrC,EAAQ/I,GAC7B,GAAIlE,KAAK8L,eACP,OAAO9L,KAAK8L,eAAe0D,gBAAgBvC,EAAQ/I,GAEjDlE,KAAKqM,qBACPrM,KAAKqM,oBAAoByC,QAAQ5K,EAErC,CAiBA,gCAAAuL,CAAiCxC,EAAQ/I,GACvC,OAAOlE,KAAKsP,uBACVrC,GAKA,SAAUjC,GACR,MAAM+B,EAAW/B,EAAQgC,cACzB,GACED,aAAoB,MACpBA,EAAS2C,iBAAiBzC,GAC1B,CACA,MAAM0C,EAASzL,EAAS8G,GACxB,GAAI2E,EACF,OAAOA,CAEX,CACF,GAEJ,CASA,qBAAAC,GACE,OAAO5P,KAAKqM,mBACd,CAQA,WAAAwD,GACE,IAAI5E,EASJ,OARIjL,KAAKqM,oBACPpB,EAAWjL,KAAKqM,oBAAoBC,WAAWwD,MAAM,GAC5C9P,KAAK8L,iBACdb,EAAWjL,KAAK8L,eAAeiE,UAC1B,OAAQ/P,KAAKiM,yBAChB,QAAOhB,EAAU7D,OAAO4I,OAAOhQ,KAAKiM,yBAGjChB,CACT,CAQA,uBAAAgF,CAAwBZ,GACtB,MAAMpE,EAAW,GAIjB,OAHAjL,KAAKoP,iCAAiCC,GAAY,SAAUrE,GAC1DC,EAAS0C,KAAK3C,EAChB,IACOC,CACT,CAgBA,mBAAAiF,CAAoBjD,EAAQhN,GAC1B,GAAID,KAAK8L,eAAgB,CACvB,MAAMqE,EAAalQ,GAAcA,EAAWmQ,YAAcpQ,KAAK6B,WAE/D,IAAKsO,EACH,OAAOnQ,KAAK8L,eAAeuE,YAAYpD,GAGzC,MAAMY,GAAU,QAAcZ,EAAQhN,GAEtC,MAAO,GAAGqQ,UACLzC,EAAQ0C,KAAKC,GAAaxQ,KAAK8L,eAAeuE,YAAYG,KAEjE,CACA,OAAIxQ,KAAKqM,oBACArM,KAAKqM,oBAAoBC,WAAWwD,MAAM,GAE5C,EACT,CAeA,6BAAAW,CAA8BpB,EAAYqB,GAQxC,MAAMnM,EAAI8K,EAAW,GACf3K,EAAI2K,EAAW,GACrB,IAAIsB,EAAiB,KACrB,MAAMC,EAAe,CAACC,IAAKA,KAC3B,IAAIC,EAAqBC,IACzB,MAAM9D,EAAS,EAAE8D,KAAWA,IAAUA,IAAUA,KA8BhD,OA7BAL,EAASA,GAAkB,KAC3B1Q,KAAK8L,eAAe0D,gBAClBvC,GAIA,SAAUjC,GACR,GAAI0F,EAAO1F,GAAU,CACnB,MAAM+B,EAAW/B,EAAQgC,cACnBgE,EAA6BF,EAKnC,GAJAA,EACE/D,aAAoB,KAChB,EACAA,EAASkE,eAAe1M,EAAGG,EAAGkM,EAAcE,GAC9CA,EAAqBE,EAA4B,CACnDL,EAAiB3F,EAKjB,MAAMkG,EAAcC,KAAKC,KAAKN,GAC9B7D,EAAO,GAAK1I,EAAI2M,EAChBjE,EAAO,GAAKvI,EAAIwM,EAChBjE,EAAO,GAAK1I,EAAI2M,EAChBjE,EAAO,GAAKvI,EAAIwM,CAClB,CACF,CACF,IAEKP,CACT,CAYA,SAAAzD,CAAUD,GACR,OAAOjN,KAAK8L,eAAeoB,UAAUD,EACvC,CAcA,cAAAoE,CAAerI,GACb,MAAMgC,EAAUhL,KAAKkM,SAASlD,EAAGsI,YACjC,YAAmB/Q,IAAZyK,EAC6D,EAGhE,IACN,CAQA,eAAAuG,CAAgB7J,GACd,MAAMsD,EAAUhL,KAAKmM,UAAUzE,GAC/B,YAAmBnH,IAAZyK,EAAwBA,EAAU,IAC3C,CAQA,SAAAwG,GACE,OAAOxR,KAAKoL,OACd,CAKA,WAAAqG,GACE,OAAOzR,KAAKsL,SACd,CAQA,MAAAoG,GACE,OAAO1R,KAAKwL,IACd,CAMA,oBAAA6B,CAAqB5F,GACnB,MAAMuD,EAAsCvD,EAAY,OAClDkF,GAAa,QAAO3B,GACpB+B,EAAW/B,EAAQgC,cACzB,GAAKD,EAOE,CACL,MAAME,EAASF,EAASG,YACpBP,KAAc3M,KAAKiM,8BACdjM,KAAKiM,sBAAsBU,GAC9B3M,KAAK8L,gBACP9L,KAAK8L,eAAeqB,OAAOF,EAAQjC,IAGjChL,KAAK8L,gBACP9L,KAAK8L,eAAe6F,OAAO1E,EAAQjC,EAGzC,MAlBQ2B,KAAc3M,KAAKiM,wBACnBjM,KAAK8L,gBACP9L,KAAK8L,eAAee,OAAO7B,GAE7BhL,KAAKiM,sBAAsBU,GAAc3B,GAe7C,MAAMhC,EAAKgC,EAAQwC,QACnB,QAAWjN,IAAPyI,EAAkB,CACpB,MAAM4I,EAAM5I,EAAGsI,WACXtR,KAAKkM,SAAS0F,KAAS5G,IACzBhL,KAAK6R,mBAAmB7G,GACxBhL,KAAKkM,SAAS0F,GAAO5G,EAEzB,MACEhL,KAAK6R,mBAAmB7G,GACxBhL,KAAKmM,UAAUQ,GAAc3B,EAE/BhL,KAAKgC,UACLhC,KAAKgI,cACH,IAAI+C,EAAkB,IAAgB+G,cAAe9G,GAEzD,CAQA,UAAA+G,CAAW/G,GACT,MAAMhC,EAAKgC,EAAQwC,QACnB,YAAWjN,IAAPyI,EACKA,KAAMhJ,KAAKkM,UAEb,QAAOlB,KAAYhL,KAAKmM,SACjC,CAKA,OAAA6F,GACE,OAAIhS,KAAK8L,eAEL9L,KAAK8L,eAAekG,YAAa,OAAQhS,KAAKiM,wBAG9CjM,KAAKqM,qBACyC,IAAzCrM,KAAKqM,oBAAoB4F,WAGpC,CAOA,YAAAC,CAAajF,EAAQkF,EAAYlS,GAC/B,MAAMmS,EAAqBpS,KAAK+L,oBAC1BsG,EAAgBrS,KAAK0L,UAAUuB,EAAQkF,EAAYlS,GACzD,IAAK,IAAI+N,EAAI,EAAGsE,EAAKD,EAAcpE,OAAQD,EAAIsE,IAAMtE,EAAG,CACtD,MAAMuE,EAAeF,EAAcrE,GAC7BwE,EAAgBJ,EAAmB5C,gBACvC+C,GAKA,SAAUE,GACR,OAAO,QAAeA,EAAOxF,OAAQsF,EACvC,IAEGC,MACDxS,KAAKgM,qBACPhM,KAAKgI,cACH,IAAI+C,EAAkB,IAAgB2H,oBAExC1S,KAAKmL,QAAQwH,KACX3S,KACAuS,EACAJ,EACAlS,GACCgL,MACGjL,KAAKgM,qBACPhM,KAAKgI,cACH,IAAI+C,EACF,IAAgB6H,qBAChBrS,EACA0K,GAEH,IAEH,OACIjL,KAAKgM,qBACPhM,KAAKgI,cACH,IAAI+C,EAAkB,IAAgB8H,mBACvC,IAGLT,EAAmBjF,OAAOoF,EAAc,CAACtF,OAAQsF,EAAazC,UAElE,CACA9P,KAAKS,UACHT,KAAKmL,QAAQ8C,OAAS,IAAYjO,KAAKgM,qBAAuB,CAClE,CAEA,OAAAjK,GACE/B,KAAK8F,OAAM,GACX9F,KAAK+L,oBAAoBjG,QACzB/F,MAAMgC,SACR,CAOA,kBAAA+Q,CAAmB7F,GACjB,MAAMmF,EAAqBpS,KAAK+L,oBAChC,IAAIgH,EACJX,EAAmB5C,gBAAgBvC,GAAQ,SAAUwF,GACnD,IAAI,QAAOA,EAAOxF,OAAQA,GAExB,OADA8F,EAAMN,GACC,CAEX,IACIM,GACFX,EAAmBvF,OAAOkG,EAE9B,CASA,cAAAC,CAAe/H,GACb,MAAMgI,EAAkB,GACxB,IAAK,IAAIjF,EAAI,EAAGsE,EAAKrH,EAASgD,OAAQD,EAAIsE,IAAMtE,EAAG,CACjD,MAAMhD,EAAUC,EAAS+C,GACnBkF,EAAiBlT,KAAKgP,sBAAsBhE,GAC9CkI,GACFD,EAAgBtF,KAAKuF,EAEzB,CACID,EAAgBhF,OAAS,GAC3BjO,KAAKgC,SAET,CASA,aAAA0M,CAAc1D,GACZ,IAAKA,EACH,OAEF,MAAM2E,EAAS3P,KAAKgP,sBAAsBhE,GACtC2E,GACF3P,KAAKgC,SAET,CASA,qBAAAgN,CAAsBhE,GACpB,MAAM2B,GAAa,QAAO3B,GAC1B,KAAM2B,KAAc3M,KAAKmM,WACvB,OAGEQ,KAAc3M,KAAKiM,6BACdjM,KAAKiM,sBAAsBU,GAE9B3M,KAAK8L,gBACP9L,KAAK8L,eAAee,OAAO7B,GAI/B,MAAMmI,EAAoBnT,KAAKoM,mBAAmBO,GAClDwG,GAAmBrE,QAAQ,aACpB9O,KAAKoM,mBAAmBO,GAE/B,MAAM3D,EAAKgC,EAAQwC,QACnB,QAAWjN,IAAPyI,EAAkB,CACpB,MAAMoK,EAAWpK,EAAGsI,WACd5D,EAAiB1N,KAAKkM,SAASkH,GACjC1F,IAAmB1C,SACdhL,KAAKkM,SAASkH,GACZhR,MAAMC,QAAQqL,KACvBA,EAAe2F,OAAO3F,EAAe4F,QAAQtI,GAAU,GACzB,IAA1B0C,EAAeO,SACjBjO,KAAKkM,SAASkH,GAAY1F,EAAe,IAG/C,CAOA,cANO1N,KAAKmM,UAAUQ,GAClB3M,KAAKmO,YAAY,IAAgBG,gBACnCtO,KAAKgI,cACH,IAAI+C,EAAkB,IAAgBuD,cAAetD,IAGlDA,CACT,CASA,kBAAA6G,CAAmB7G,GACjB,IAAIuI,GAAU,EACd,IAAK,MAAMvK,KAAMhJ,KAAKkM,SAAU,CAC9B,MAAMwB,EAAiB1N,KAAKkM,SAASlD,GACrC,GACEgC,aAAmB,MACnB5I,MAAMC,QAAQqL,IACdA,EAAe8F,SAASxI,GAExB0C,EAAe2F,OAAO3F,EAAe4F,QAAQtI,GAAU,QAClD,GAAIhL,KAAKkM,SAASlD,KAAQgC,EAAS,QACjChL,KAAKkM,SAASlD,GACrBuK,GAAU,EACV,KACF,CACF,CACA,OAAOA,CACT,CAQA,SAAAE,CAAUhI,GACRzL,KAAKmL,QAAUM,CACjB,CAOA,MAAAzE,CAAOD,IACL,OAAO/G,KAAKoL,QAAS,0CACrBpL,KAAKwL,KAAOzE,EACZ/G,KAAKyT,WAAU,QAAI1M,EAAK/G,KAAKoL,SAC/B,EAGF,S,mCC1qCA,SAMEgC,WAAY,aAOZ0E,cAAe,gBAOf5C,MAAO,QAQPZ,cAAe,gBAOfoE,kBAAmB,oBAOnBE,gBAAiB,kBAOjBC,kBAAmB,oB,4DCgBrB,MAAMa,UAAY,IAIhB,WAAA7T,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMG,OACmBM,IAAvBT,EAAQG,WAA2BH,EAAQG,WAAa,YAEpD8C,OACiBxC,IAArBT,EAAQiD,SACJjD,EAAQiD,UACR,QAAU,CACRkK,QAAQ,QAAqBhN,GAC7B0T,cAAe7T,EAAQ6T,cACvBC,QAAS9T,EAAQ8T,QACjBC,QAAS/T,EAAQ+T,QACjB7Q,SAAUlD,EAAQkD,WAG1BjD,MAAM,CACJM,aAAcP,EAAQO,aACtB+C,UAAWtD,EAAQsD,UACnBmF,YAAazI,EAAQyI,YACrBxH,YAAajB,EAAQiB,YACrB6B,OAAQ9C,EAAQ8C,OAChB3C,WAAYA,EACZ4I,2BAA4B/I,EAAQ+I,2BACpC9F,SAAUA,EACV6D,iBAAkB9G,EAAQ8G,iBAC1B9D,eAAgBhD,EAAQgD,eACxB4D,gBAAiB5G,EAAQ4G,gBACzBK,IAAKjH,EAAQiH,IACbF,KAAM/G,EAAQ+G,KACdhG,WAAyBN,IAAlBT,EAAQe,OAAsBf,EAAQe,MAC7C4C,WAAY3D,EAAQ2D,WACpBjD,wBAAyBV,EAAQU,wBACjCkD,WAAY5D,EAAQ4D,aAOtB1D,KAAK8T,aAA6BvT,IAAnBT,EAAQiU,OAAuBjU,EAAQiU,OAAS,CACjE,CAKA,SAAA9K,GACE,OAAOjJ,KAAK8T,OACd,EAGF,S,kDCzGA,MAAME,EAIJ,WAAAnU,CAAYoG,GAMVjG,KAAKiG,mBAAkC1F,IAAlB0F,EAA8BA,EAAgB,KAMnEjG,KAAKiU,OAAS,EAMdjU,KAAKkU,SAAW,CAAC,EAMjBlU,KAAKmU,QAAU,KAMfnU,KAAKoU,QAAU,IACjB,CAKA,cAAAzQ,GACE,OAAO3D,KAAKiG,cAAgB,GAAKjG,KAAKqU,WAAarU,KAAKiG,aAC1D,CAMA,WAAArC,CAAY0Q,GACV,MAAOtU,KAAK2D,iBACV3D,KAAKuU,KAET,CAKA,KAAAzO,GACE9F,KAAKiU,OAAS,EACdjU,KAAKkU,SAAW,CAAC,EACjBlU,KAAKmU,QAAU,KACfnU,KAAKoU,QAAU,IACjB,CAMA,WAAAvP,CAAYtB,GACV,OAAOvD,KAAKkU,SAASM,eAAejR,EACtC,CAQA,OAAAuL,CAAQ2F,GACN,IAAIC,EAAQ1U,KAAKmU,QACjB,MAAOO,EACLD,EAAEC,EAAMC,OAAQD,EAAMpR,KAAMtD,MAC5B0U,EAAQA,EAAME,KAElB,CAOA,GAAA1U,CAAIqD,EAAKzD,GACP,MAAM4U,EAAQ1U,KAAKkU,SAAS3Q,GAK5B,OAJA,YACYhD,IAAVmU,EACA,mEAEEA,IAAU1U,KAAKoU,UAGfM,IAAU1U,KAAKmU,SACjBnU,KAAKmU,QAAgCnU,KAAKmU,QAAa,MACvDnU,KAAKmU,QAAQU,MAAQ,OAErBH,EAAME,MAAMC,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMD,MAAQF,EAAME,OAE5BF,EAAME,MAAQ,KACdF,EAAMG,MAAQ7U,KAAKoU,QACnBpU,KAAKoU,QAAQQ,MAAQF,EACrB1U,KAAKoU,QAAUM,GAZNA,EAAMC,MAcjB,CAOA,MAAA9H,CAAOtJ,GACL,MAAMmR,EAAQ1U,KAAKkU,SAAS3Q,GAqB5B,OApBA,YACYhD,IAAVmU,EACA,mEAEEA,IAAU1U,KAAKoU,SACjBpU,KAAKoU,QAAgCM,EAAW,MAC5C1U,KAAKoU,UACPpU,KAAKoU,QAAQQ,MAAQ,OAEdF,IAAU1U,KAAKmU,SACxBnU,KAAKmU,QAAgCO,EAAW,MAC5C1U,KAAKmU,UACPnU,KAAKmU,QAAQU,MAAQ,QAGvBH,EAAME,MAAMC,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMD,MAAQF,EAAME,cAErB5U,KAAKkU,SAAS3Q,KACnBvD,KAAKiU,OACAS,EAAMC,MACf,CAKA,QAAAN,GACE,OAAOrU,KAAKiU,MACd,CAKA,OAAAa,GACE,MAAMjG,EAAO,IAAIzM,MAAMpC,KAAKiU,QAC5B,IACIS,EADA1G,EAAI,EAER,IAAK0G,EAAQ1U,KAAKoU,QAASM,EAAOA,EAAQA,EAAMG,MAC9ChG,EAAKb,KAAO0G,EAAMpR,KAEpB,OAAOuL,CACT,CAKA,SAAAkG,GACE,MAAM/E,EAAS,IAAI5N,MAAMpC,KAAKiU,QAC9B,IACIS,EADA1G,EAAI,EAER,IAAK0G,EAAQ1U,KAAKoU,QAASM,EAAOA,EAAQA,EAAMG,MAC9C7E,EAAOhC,KAAO0G,EAAMC,OAEtB,OAAO3E,CACT,CAKA,QAAAgF,GACE,OAAOhV,KAAKmU,QAAQQ,MACtB,CAKA,WAAAM,GACE,OAAOjV,KAAKmU,QAAQ7Q,IACtB,CAMA,YAAA4R,GACE,OAAOlV,KAAKoU,QAAQ9Q,IACtB,CAOA,IAAA6R,CAAK5R,GACH,OAAOvD,KAAKkU,SAAS3Q,IAAMoR,MAC7B,CAKA,GAAAJ,GACE,MAAMG,EAAQ1U,KAAKmU,QAUnB,cATOnU,KAAKkU,SAASQ,EAAMpR,MACvBoR,EAAME,QACRF,EAAME,MAAMC,MAAQ,MAEtB7U,KAAKmU,QAAgCO,EAAW,MAC3C1U,KAAKmU,UACRnU,KAAKoU,QAAU,QAEfpU,KAAKiU,OACAS,EAAMC,MACf,CAMA,OAAAtK,CAAQ9G,EAAK6R,GACXpV,KAAKE,IAAIqD,GACTvD,KAAKkU,SAAS3Q,GAAKoR,OAASS,CAC9B,CAMA,GAAA9K,CAAI/G,EAAK6R,IACP,SACI7R,KAAOvD,KAAKkU,UACd,uDAEF,MAAMQ,EAAQ,CACZpR,KAAMC,EACNqR,MAAO,KACPC,MAAO7U,KAAKoU,QACZO,OAAQS,GAELpV,KAAKoU,QAGRpU,KAAKoU,QAAQQ,MAAQF,EAFrB1U,KAAKmU,QAAUO,EAIjB1U,KAAKoU,QAAUM,EACf1U,KAAKkU,SAAS3Q,GAAOmR,IACnB1U,KAAKiU,MACT,CAOA,OAAAoB,CAAQC,GACNtV,KAAKiG,cAAgBqP,CACvB,EAGF,S,qEC3RO,MAAMC,EAAOxE,IAcpB,MAAMyE,EAKJ,WAAA3V,CAAY4V,EAAkBC,GAK5B1V,KAAK2V,kBAAoBF,EAMzBzV,KAAK4V,aAAeF,EAMpB1V,KAAK6V,UAAY,GAMjB7V,KAAK8V,YAAc,GAMnB9V,KAAK+V,gBAAkB,CAAC,CAC1B,CAKA,KAAAjQ,GACE9F,KAAK6V,UAAU5H,OAAS,EACxBjO,KAAK8V,YAAY7H,OAAS,GAC1B,OAAMjO,KAAK+V,gBACb,CAMA,OAAAC,GACE,MAAMC,EAAWjW,KAAK6V,UAChBK,EAAalW,KAAK8V,YAClBtH,EAAUyH,EAAS,GACF,GAAnBA,EAAShI,QACXgI,EAAShI,OAAS,EAClBiI,EAAWjI,OAAS,IAEpBgI,EAAS,GAAuBA,EAAS1B,MACzC2B,EAAW,GAA4BA,EAAW3B,MAClDvU,KAAKmW,QAAQ,IAEf,MAAMC,EAAapW,KAAK4V,aAAapH,GAErC,cADOxO,KAAK+V,gBAAgBK,GACrB5H,CACT,CAOA,OAAA6H,CAAQ7H,IACN,SACIxO,KAAK4V,aAAapH,KAAYxO,KAAK+V,iBACrC,qEAEF,MAAMO,EAAWtW,KAAK2V,kBAAkBnH,GACxC,OAAI8H,GAAYf,IACdvV,KAAK6V,UAAUlI,KAAKa,GACpBxO,KAAK8V,YAAYnI,KAAK2I,GACtBtW,KAAK+V,gBAAgB/V,KAAK4V,aAAapH,KAAY,EACnDxO,KAAKuW,UAAU,EAAGvW,KAAK6V,UAAU5H,OAAS,IACnC,EAGX,CAKA,QAAAoG,GACE,OAAOrU,KAAK6V,UAAU5H,MACxB,CAQA,kBAAAuI,CAAmBC,GACjB,OAAe,EAARA,EAAY,CACrB,CAQA,mBAAAC,CAAoBD,GAClB,OAAe,EAARA,EAAY,CACrB,CAQA,eAAAE,CAAgBF,GACd,OAAQA,EAAQ,GAAM,CACxB,CAMA,QAAAG,GACE,IAAI5I,EACJ,IAAKA,GAAKhO,KAAK6V,UAAU5H,QAAU,GAAK,EAAGD,GAAK,EAAGA,IACjDhO,KAAKmW,QAAQnI,EAEjB,CAKA,OAAAgE,GACE,OAAiC,IAA1BhS,KAAK6V,UAAU5H,MACxB,CAMA,WAAA4I,CAAYtT,GACV,OAAOA,KAAOvD,KAAK+V,eACrB,CAMA,QAAAe,CAAStI,GACP,OAAOxO,KAAK6W,YAAY7W,KAAK4V,aAAapH,GAC5C,CAMA,OAAA2H,CAAQM,GACN,MAAMR,EAAWjW,KAAK6V,UAChBK,EAAalW,KAAK8V,YAClBiB,EAAQd,EAAShI,OACjBO,EAAUyH,EAASQ,GACnBH,EAAWJ,EAAWO,GACtBO,EAAaP,EAEnB,MAAOA,EAAQM,GAAS,EAAG,CACzB,MAAME,EAASjX,KAAKwW,mBAAmBC,GACjCS,EAASlX,KAAK0W,oBAAoBD,GAElCU,EACJD,EAASH,GAASb,EAAWgB,GAAUhB,EAAWe,GAC9CC,EACAD,EAENhB,EAASQ,GAASR,EAASkB,GAC3BjB,EAAWO,GAASP,EAAWiB,GAC/BV,EAAQU,CACV,CAEAlB,EAASQ,GAASjI,EAClB0H,EAAWO,GAASH,EACpBtW,KAAKuW,UAAUS,EAAYP,EAC7B,CAOA,SAAAF,CAAUS,EAAYP,GACpB,MAAMR,EAAWjW,KAAK6V,UAChBK,EAAalW,KAAK8V,YAClBtH,EAAUyH,EAASQ,GACnBH,EAAWJ,EAAWO,GAE5B,MAAOA,EAAQO,EAAY,CACzB,MAAMI,EAAcpX,KAAK2W,gBAAgBF,GACzC,KAAIP,EAAWkB,GAAed,GAK5B,MAJAL,EAASQ,GAASR,EAASmB,GAC3BlB,EAAWO,GAASP,EAAWkB,GAC/BX,EAAQW,CAIZ,CACAnB,EAASQ,GAASjI,EAClB0H,EAAWO,GAASH,CACtB,CAKA,YAAAe,GACE,MAAM5B,EAAmBzV,KAAK2V,kBACxBM,EAAWjW,KAAK6V,UAChBK,EAAalW,KAAK8V,YACxB,IAAIW,EAAQ,EACZ,MAAMa,EAAIrB,EAAShI,OACnB,IAAIO,EAASR,EAAGsI,EAChB,IAAKtI,EAAI,EAAGA,EAAIsJ,IAAKtJ,EACnBQ,EAAUyH,EAASjI,GACnBsI,EAAWb,EAAiBjH,GACxB8H,GAAYf,SACPvV,KAAK+V,gBAAgB/V,KAAK4V,aAAapH,KAE9C0H,EAAWO,GAASH,EACpBL,EAASQ,KAAWjI,GAGxByH,EAAShI,OAASwI,EAClBP,EAAWjI,OAASwI,EACpBzW,KAAK4W,UACP,EAGF,S,kFChPA,MAAMW,EAIJ,WAAA1X,CAAY2X,GAIVxX,KAAKyX,OAAS,IAAI,EAAOD,GAQzBxX,KAAK0X,OAAS,CAAC,CACjB,CAOA,MAAAvK,CAAOF,EAAQmI,GAEb,MAAMuC,EAAO,CACXnT,KAAMyI,EAAO,GACbtI,KAAMsI,EAAO,GACbxI,KAAMwI,EAAO,GACbrI,KAAMqI,EAAO,GACbmI,MAAOA,GAGTpV,KAAKyX,OAAOtK,OAAOwK,GACnB3X,KAAK0X,QAAO,QAAOtC,IAAUuC,CAC/B,CAOA,IAAAzJ,CAAKL,EAASmC,GACZ,MAAM4H,EAAQ,IAAIxV,MAAM4N,EAAO/B,QAC/B,IAAK,IAAID,EAAI,EAAG6J,EAAI7H,EAAO/B,OAAQD,EAAI6J,EAAG7J,IAAK,CAC7C,MAAMf,EAASY,EAAQG,GACjBoH,EAAQpF,EAAOhC,GAGf2J,EAAO,CACXnT,KAAMyI,EAAO,GACbtI,KAAMsI,EAAO,GACbxI,KAAMwI,EAAO,GACbrI,KAAMqI,EAAO,GACbmI,MAAOA,GAETwC,EAAM5J,GAAK2J,EACX3X,KAAK0X,QAAO,QAAOtC,IAAUuC,CAC/B,CACA3X,KAAKyX,OAAOvJ,KAAK0J,EACnB,CAOA,MAAA/K,CAAOuI,GACL,MAAM1N,GAAM,QAAO0N,GAIbuC,EAAO3X,KAAK0X,OAAOhQ,GAEzB,cADO1H,KAAK0X,OAAOhQ,GACiB,OAA7B1H,KAAKyX,OAAO5K,OAAO8K,EAC5B,CAOA,MAAAhG,CAAO1E,EAAQmI,GACb,MAAMuC,EAAO3X,KAAK0X,QAAO,QAAOtC,IAC1B0C,EAAO,CAACH,EAAKnT,KAAMmT,EAAKhT,KAAMgT,EAAKlT,KAAMkT,EAAK/S,OAC/C,QAAOkT,EAAM7K,KAChBjN,KAAK6M,OAAOuI,GACZpV,KAAKmN,OAAOF,EAAQmI,GAExB,CAMA,MAAArF,GACE,MAAM6H,EAAQ5X,KAAKyX,OAAOM,MAC1B,OAAOH,EAAMrH,KAAI,SAAUoH,GACzB,OAAOA,EAAKvC,KACd,GACF,CAOA,WAAA/E,CAAYpD,GAEV,MAAM6K,EAAO,CACXtT,KAAMyI,EAAO,GACbtI,KAAMsI,EAAO,GACbxI,KAAMwI,EAAO,GACbrI,KAAMqI,EAAO,IAET2K,EAAQ5X,KAAKyX,OAAOO,OAAOF,GACjC,OAAOF,EAAMrH,KAAI,SAAUoH,GACzB,OAAOA,EAAKvC,KACd,GACF,CASA,OAAAtG,CAAQ5K,GACN,OAAOlE,KAAKiY,SAASjY,KAAK+P,SAAU7L,EACtC,CAQA,eAAAsL,CAAgBvC,EAAQ/I,GACtB,OAAOlE,KAAKiY,SAASjY,KAAKqQ,YAAYpD,GAAS/I,EACjD,CAQA,QAAA+T,CAASjI,EAAQ9L,GACf,IAAIyL,EACJ,IAAK,IAAI3B,EAAI,EAAG6J,EAAI7H,EAAO/B,OAAQD,EAAI6J,EAAG7J,IAExC,GADA2B,EAASzL,EAAS8L,EAAOhC,IACrB2B,EACF,OAAOA,EAGX,OAAOA,CACT,CAKA,OAAAqC,GACE,OAAO,OAAQhS,KAAK0X,OACtB,CAKA,KAAA5R,GACE9F,KAAKyX,OAAO3R,QACZ9F,KAAK0X,OAAS,CAAC,CACjB,CAMA,SAAAxK,CAAUD,GACR,MAAMiL,EAAOlY,KAAKyX,OAAOU,SACzB,OAAO,OAAeD,EAAK1T,KAAM0T,EAAKvT,KAAMuT,EAAKzT,KAAMyT,EAAKtT,KAAMqI,EACpE,CAKA,MAAAqD,CAAO8H,GACLpY,KAAKyX,OAAOvJ,KAAKkK,EAAMX,OAAOM,OAC9B,IAAK,MAAM/J,KAAKoK,EAAMV,OACpB1X,KAAK0X,OAAO1J,GAAKoK,EAAMV,OAAO1J,EAElC,EAGF,S,kDCjMA,MAAMqK,UAAoB,IAIxB,WAAAxY,CAAYC,GACVA,EAAUA,GAAoB,CAACwY,OAAQ,GAEvCvY,MAAM,CACJwY,OAAQxH,IACRyH,KAAM1Y,EAAQ0Y,KACdF,OAAQxY,EAAQwY,OAChBG,OAAQ3Y,EAAQ2Y,OAChBC,WAAyBnY,IAAlBT,EAAQ4Y,MAAsB5Y,EAAQ4Y,MAAQ,EACrDC,cAA+BpY,IAArBT,EAAQ6Y,SAAyB7Y,EAAQ6Y,SAAW,EAC9DC,oBAC6BrY,IAA3BT,EAAQ8Y,gBAA+B9Y,EAAQ8Y,eACjDC,kBAC2BtY,IAAzBT,EAAQ+Y,aAA6B/Y,EAAQ+Y,aAAe,CAAC,EAAG,GAClEC,cAAehZ,EAAQgZ,eAE3B,CAOA,KAAAC,GACE,MAAML,EAAQ1Y,KAAKgZ,WACbC,EAAQ,IAAIZ,EAAY,CAC5BG,KAAMxY,KAAKkZ,UAAYlZ,KAAKkZ,UAAUH,aAAUxY,EAChDkY,OAAQzY,KAAKmZ,YAAcnZ,KAAKmZ,YAAYJ,aAAUxY,EACtD+X,OAAQtY,KAAKoZ,YACbV,MAAOtW,MAAMC,QAAQqW,GAASA,EAAM5I,QAAU4I,EAC9CC,SAAU3Y,KAAKqZ,cACfT,eAAgB5Y,KAAKsZ,oBACrBT,aAAc7Y,KAAKuZ,kBAAkBzJ,QACrCgJ,cAAe9Y,KAAKwZ,qBAGtB,OADAP,EAAMQ,WAAWzZ,KAAK0Z,cACfT,CACT,CAQA,SAAAU,CAAUrB,GACRtY,KAAK4Z,QAAUtB,EACftY,KAAKwK,QACP,EAGF,S,4DC5DA,MAAMqP,EAIJ,WAAAha,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBE,KAAK8Z,cAAgB,KAMrB9Z,KAAK+Z,OAAS,UACQxZ,IAAlBT,EAAQka,OACVha,KAAKia,SAASna,EAAQka,MAE1B,CAOA,KAAAjB,GACE,MAAMiB,EAAQha,KAAKka,WACnB,OAAO,IAAIL,EAAK,CACdG,MAAO5X,MAAMC,QAAQ2X,GAASA,EAAMlK,QAAUkK,QAASzZ,GAE3D,CAOA,QAAA2Z,GACE,OAAOla,KAAK+Z,MACd,CAQA,QAAAE,CAASD,GACP,GAAc,OAAVA,GAAmC,kBAAVA,GAAsB,QAASA,EAAO,CACjE,MAAMG,GAAe,OACnB,KACAH,EAAMnP,IACN,iBACAtK,EACAyZ,EAAMI,OAAS,KAAOJ,EAAMA,MAAQA,EAAMA,MAAQ,OAChDA,EAAMI,QAAUJ,EAAM1E,OAE1B6E,EAAaE,QAAQC,MAAK,KACxBta,KAAK8Z,cAAgB,IAAI,IAEvBK,EAAaI,kBAAoB,IAAW/Q,MAC9C2Q,EAAajM,OAEXiM,EAAaI,kBAAoB,IAAW1S,UAC9C7H,KAAK8Z,cAAgBK,EAEzB,CACAna,KAAK+Z,OAASC,CAChB,CAKA,OAAAvZ,GACE,QAAST,KAAK8Z,aAChB,CAKA,KAAAO,GACE,OAAOra,KAAK8Z,cAAgB9Z,KAAK8Z,cAAcO,QAAUjZ,QAAQC,SACnE,EAGF,S,8HC9CA,SAASmZ,EAAeC,EAAOC,EAAQC,EAAaC,GAClD,YAAoBra,IAAhBoa,QAA8Cpa,IAAjBqa,EACxB,CAACD,EAAcF,EAAOG,EAAeF,QAE1Bna,IAAhBoa,EACKA,EAAcF,OAEFla,IAAjBqa,EACKA,EAAeF,EAEjB,CACT,CAOA,MAAMG,UAAa,IAIjB,WAAAhb,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAKtB,MAAMgb,OAA8Bva,IAApBT,EAAQgb,QAAwBhb,EAAQgb,QAAU,EAK5DnC,OAAgCpY,IAArBT,EAAQ6Y,SAAyB7Y,EAAQ6Y,SAAW,EAK/DD,OAA0BnY,IAAlBT,EAAQ4Y,MAAsB5Y,EAAQ4Y,MAAQ,EAKtDE,OACuBrY,IAA3BT,EAAQ8Y,gBAA+B9Y,EAAQ8Y,eAEjD7Y,MAAM,CACJ+a,QAASA,EACTnC,SAAUA,EACVD,MAAOA,EACPG,kBAC2BtY,IAAzBT,EAAQ+Y,aAA6B/Y,EAAQ+Y,aAAe,CAAC,EAAG,GAClED,eAAgBA,EAChBE,cAAehZ,EAAQgZ,gBAOzB9Y,KAAK+a,aAA6Bxa,IAAnBT,EAAQkb,OAAuBlb,EAAQkb,OAAS,CAAC,GAAK,IAMrEhb,KAAKib,kBAAoB,KAMzBjb,KAAKkb,mBACsB3a,IAAzBT,EAAQqb,aAA6Brb,EAAQqb,aAAe,WAM9Dnb,KAAKob,mBACsB7a,IAAzBT,EAAQub,aAA6Bvb,EAAQub,aAAe,WAM9Drb,KAAKsb,mBACsB/a,IAAzBT,EAAQyb,aAA6Bzb,EAAQyb,aAAe,WAM9Dvb,KAAKwb,kBACqBjb,IAAxBT,EAAQyI,YAA4BzI,EAAQyI,YAAc,KAE5D,MAAMkT,OAAwBlb,IAAhBT,EAAQ4b,IAAoB5b,EAAQ4b,IAAM,KAExD,IAuBIC,EAvBAC,EAAW9b,EAAQ+K,IAmFvB,IAjFA,cACiBtK,IAAbqb,GAA0BH,GAC5B,8DAGgBlb,IAAbqb,GAA8C,IAApBA,EAAS3N,SAAiBwN,IACvDG,EAA2C,EAAQ/Q,MAAO,QAAO4Q,KAEnE,YACelb,IAAbqb,GAA0BA,EAAS3N,OAAS,EAC5C,8DAGF,eAEuB1N,IAAlBT,EAAQ2a,YAA0Cla,IAAnBT,EAAQ4a,cACtBna,IAAlBT,EAAQ4Y,OAEV,qEAIkBnY,IAAhBT,EAAQ+K,IACV8Q,EAAa,IAAWnS,UACLjJ,IAAVkb,IAGLE,EAFA,aAAcF,EACZA,EAAMI,SACKJ,EAAM5Q,IAAM,IAAW/F,OAAS,IAAW0E,KAE3C,IAAW3B,QAGb,IAAW/C,QAQ5B9E,KAAK+Z,YAA2BxZ,IAAlBT,EAAQka,OAAsB,QAAQla,EAAQka,OAAS,KAMrEha,KAAK8b,YAAa,OAChBL,EACsB,EACtBzb,KAAKwb,aACLG,EACA3b,KAAK+Z,QAOP/Z,KAAK+b,aAA6Bxb,IAAnBT,EAAQsa,OAAuBta,EAAQsa,OAAS,CAAC,EAAG,GAKnEpa,KAAKgc,mBACsBzb,IAAzBT,EAAQmc,aAA6Bnc,EAAQmc,aAAe,WAM9Djc,KAAKkc,QAAU,KAMflc,KAAKmc,WAAyB5b,IAAjBT,EAAQwV,KAAqBxV,EAAQwV,KAAO,UAKnC/U,IAAlBT,EAAQ2a,YAA0Cla,IAAnBT,EAAQ4a,OAAsB,CAC/D,IAAID,EAAOC,EACX,GAAI5a,EAAQwV,MACTmF,EAAOC,GAAU5a,EAAQwV,SACrB,CACL,MAAMmG,EAAQzb,KAAK8K,SAAS,GAC5B,GAAI2Q,EAAMhB,OAASgB,EAAMf,OACvBD,EAAQgB,EAAMhB,MACdC,EAASe,EAAMf,YACV,GAAIe,aAAiBW,iBAAkB,CAC5Cpc,KAAKqc,gBAAkBvc,EACvB,MAAMwc,EAAS,KAEb,GADAtc,KAAKuc,oBAAoBD,IACpBtc,KAAKqc,gBACR,OAEF,MAAMG,EAAYxc,KAAK8b,WAAWW,UAClCzc,KAAK0c,SACHlC,EACEgC,EAAU,GACVA,EAAU,GACV1c,EAAQ2a,MACR3a,EAAQ4a,QAEX,EAGH,YADA1a,KAAK2c,kBAAkBL,EAEzB,CACF,MACc/b,IAAVka,GACFza,KAAK0c,SACHlC,EAAeC,EAAOC,EAAQ5a,EAAQ2a,MAAO3a,EAAQ4a,QAG3D,CACF,CAOA,KAAA3B,GACE,IAAIL,EAAO+B,EAAOC,EAQlB,OAPI1a,KAAKqc,iBACP5B,EAAQza,KAAKqc,gBAAgB5B,MAC7BC,EAAS1a,KAAKqc,gBAAgB3B,SAE9BhC,EAAQ1Y,KAAKgZ,WACbN,EAAQtW,MAAMC,QAAQqW,GAASA,EAAM5I,QAAU4I,GAE1C,IAAImC,EAAK,CACdG,OAAQhb,KAAK+a,QAAQjL,QACrBqL,aAAcnb,KAAKkb,cACnBG,aAAcrb,KAAKob,cACnBG,aAAcvb,KAAKsb,cACnBtB,MACEha,KAAK+Z,QAAU/Z,KAAK+Z,OAAOjK,MACvB9P,KAAK+Z,OAAOjK,QACZ9P,KAAK+Z,aAAUxZ,EACrBgI,YAAavI,KAAKwb,aAClBpB,OAAQpa,KAAK+b,QAAQjM,QACrBmM,aAAcjc,KAAKgc,cACnBlB,QAAS9a,KAAK0Z,aACdd,eAAgB5Y,KAAKsZ,oBACrBX,SAAU3Y,KAAKqZ,cACfX,QACA+B,QACAC,SACApF,KAAqB,OAAftV,KAAKmc,MAAiBnc,KAAKmc,MAAMrM,aAAUvP,EACjDsK,IAAK7K,KAAK4c,SACV/D,aAAc7Y,KAAKuZ,kBAAkBzJ,QACrCgJ,cAAe9Y,KAAKwZ,oBAExB,CAQA,SAAAqD,GACE,IAAI7B,EAAShb,KAAKib,kBAClB,IAAKD,EAAQ,CACXA,EAAShb,KAAK+a,QACd,MAAMzF,EAAOtV,KAAKyc,UAClB,GACwB,YAAtBzc,KAAKob,eACiB,YAAtBpb,KAAKsb,cACL,CACA,IAAKhG,EACH,OAAO,KAET0F,EAAShb,KAAK+a,QAAQjL,QACI,YAAtB9P,KAAKob,gBACPJ,EAAO,IAAM1F,EAAK,IAEM,YAAtBtV,KAAKsb,gBACPN,EAAO,IAAM1F,EAAK,GAEtB,CAEA,GAA0B,YAAtBtV,KAAKkb,cAA6B,CACpC,IAAK5F,EACH,OAAO,KAEL0F,IAAWhb,KAAK+a,UAClBC,EAAShb,KAAK+a,QAAQjL,SAGA,aAAtB9P,KAAKkb,eACiB,gBAAtBlb,KAAKkb,gBAELF,EAAO,IAAMA,EAAO,GAAK1F,EAAK,IAGR,eAAtBtV,KAAKkb,eACiB,gBAAtBlb,KAAKkb,gBAELF,EAAO,IAAMA,EAAO,GAAK1F,EAAK,GAElC,CACAtV,KAAKib,kBAAoBD,CAC3B,CACA,MAAMnC,EAAe7Y,KAAKuZ,kBACpBb,EAAQ1Y,KAAK8c,gBAGnB,MAAO,CACL9B,EAAO,GAAKnC,EAAa,GAAKH,EAAM,GACpCsC,EAAO,GAAKnC,EAAa,GAAKH,EAAM,GAExC,CASA,SAAAqE,CAAU/B,GACRhb,KAAK+a,QAAUC,EACfhb,KAAKib,kBAAoB,IAC3B,CAOA,QAAAf,GACE,OAAOla,KAAK+Z,MACd,CASA,QAAAjP,CAASzF,GACP,OAAOrF,KAAK8b,WAAWhR,SAASzF,EAClC,CAQA,aAAA2X,CAAc3X,GACZ,OAAOrF,KAAK8b,WAAWkB,cAAc3X,EACvC,CAKA,YAAA4X,GACE,OAAOjd,KAAK8b,WAAWW,SACzB,CAKA,aAAAlC,GACE,OAAOva,KAAK8b,WAAWvB,eACzB,CAKA,oBAAA2C,GACE,OAAOld,KAAK8b,WAAWoB,sBACzB,CAOA,SAAAC,GACE,GAAInd,KAAKkc,QACP,OAAOlc,KAAKkc,QAEd,IAAI9B,EAASpa,KAAK+b,QAElB,GAA0B,YAAtB/b,KAAKgc,cAA6B,CACpC,MAAM1G,EAAOtV,KAAKyc,UACZW,EAAgBpd,KAAK8b,WAAWW,UACtC,IAAKnH,IAAS8H,EACZ,OAAO,KAEThD,EAASA,EAAOtK,QAEQ,aAAtB9P,KAAKgc,eACiB,gBAAtBhc,KAAKgc,gBAEL5B,EAAO,GAAKgD,EAAc,GAAK9H,EAAK,GAAK8E,EAAO,IAG1B,eAAtBpa,KAAKgc,eACiB,gBAAtBhc,KAAKgc,gBAEL5B,EAAO,GAAKgD,EAAc,GAAK9H,EAAK,GAAK8E,EAAO,GAEpD,CAEA,OADApa,KAAKkc,QAAU9B,EACRpa,KAAKkc,OACd,CAOA,MAAAU,GACE,OAAO5c,KAAK8b,WAAWc,QACzB,CAOA,OAAAH,GACE,OAAQzc,KAAKmc,MAAoCnc,KAAKmc,MAAjCnc,KAAK8b,WAAWW,SACvC,CAOA,QAAAY,GACE,MAAM3E,EAAQ1Y,KAAK8c,gBACnB,OAAI9c,KAAKmc,MACAnc,KAAKmc,MAAM,GAAKzD,EAAM,GAE3B1Y,KAAK8b,WAAWvB,iBAAmB,IAAWzV,OACzC9E,KAAK8b,WAAWW,UAAU,GAAK/D,EAAM,QAD9C,CAIF,CAOA,SAAA4E,GACE,MAAM5E,EAAQ1Y,KAAK8c,gBACnB,OAAI9c,KAAKmc,MACAnc,KAAKmc,MAAM,GAAKzD,EAAM,GAE3B1Y,KAAK8b,WAAWvB,iBAAmB,IAAWzV,OACzC9E,KAAK8b,WAAWW,UAAU,GAAK/D,EAAM,QAD9C,CAIF,CAQA,QAAAgE,CAAShE,UACA1Y,KAAKqc,gBACZtc,MAAM2c,SAAShE,EACjB,CAKA,iBAAAiE,CAAkBY,GAChBvd,KAAK8b,WAAWpS,iBAAiB,IAAUE,OAAQ2T,EACrD,CASA,IAAArP,GACElO,KAAK8b,WAAW5N,MAClB,CAKA,mBAAAqO,CAAoBgB,GAClBvd,KAAK8b,WAAW0B,oBAAoB,IAAU5T,OAAQ2T,EACxD,CAEA,KAAAlD,GACE,OAAOra,KAAK8b,WAAWzB,OACzB,EAGF,S,kHC1iBA,IAAIoD,EAAqB,KAEzB,MAAMC,UAAkB,IAQtB,WAAA7d,CAAY4b,EAAO5Q,EAAKtC,EAAaoT,EAAY3B,GAC/Cja,QAMAC,KAAK2d,mBAAqB,KAM1B3d,KAAK4d,OAASnC,EAMdzb,KAAKwb,aAAejT,EAMpBvI,KAAK6d,QAAU,CAAC,EAMhB7d,KAAK+Z,OAASC,EAMdha,KAAK8d,iBAA6Bvd,IAAfob,EAA2B,IAAWnS,KAAOmS,EAMhE3b,KAAKmc,MACHV,GAASA,EAAMhB,OAASgB,EAAMf,OAAS,CAACe,EAAMhB,MAAOgB,EAAMf,QAAU,KAMvE1a,KAAK+d,KAAOlT,EAKZ7K,KAAKge,SAMLhe,KAAKie,OAAS,IAChB,CAKA,gBAAAC,GACEle,KAAK4d,OAAS,IAAIO,MACQ,OAAtBne,KAAKwb,eACPxb,KAAK4d,OAAOrV,YAAcvI,KAAKwb,aAEnC,CAMA,UAAA4C,GACE,QAAsB7d,IAAlBP,KAAKge,UAA0Bhe,KAAK8d,cAAgB,IAAWhZ,OAAQ,CACpE2Y,IACHA,GAAqB,OAAsB,EAAG,OAAGld,EAAW,CAC1D8d,oBAAoB,KAGxBZ,EAAmBa,UAAUte,KAAK4d,OAAQ,EAAG,GAC7C,IACEH,EAAmBc,aAAa,EAAG,EAAG,EAAG,GACzCve,KAAKge,UAAW,CAClB,CAAE,MAAOQ,GACPf,EAAqB,KACrBzd,KAAKge,UAAW,CAClB,CACF,CACA,OAAyB,IAAlBhe,KAAKge,QACd,CAKA,oBAAAS,GACEze,KAAKgI,cAAc,IAAU4B,OAC/B,CAKA,iBAAA8U,GACE1e,KAAK8d,YAAc,IAAW/V,MAC9B/H,KAAKye,sBACP,CAKA,gBAAAE,GACE3e,KAAK8d,YAAc,IAAWhZ,OAC9B9E,KAAKmc,MAAQ,CAACnc,KAAK4d,OAAOnD,MAAOza,KAAK4d,OAAOlD,QAC7C1a,KAAKye,sBACP,CAMA,QAAA3T,CAASzF,GAKP,OAJKrF,KAAK4d,QACR5d,KAAKke,mBAEPle,KAAK4e,cAAcvZ,GACZrF,KAAK6d,QAAQxY,GAAcrF,KAAK6d,QAAQxY,GAAcrF,KAAK4d,MACpE,CAMA,aAAAZ,CAAc3X,GAEZ,OADArF,KAAK4e,cAAcvZ,GACZrF,KAAK6d,QAAQxY,GAAcA,EAAa,CACjD,CAKA,aAAAkV,GACE,OAAOva,KAAK8d,WACd,CAKA,oBAAAZ,GAIE,GAHKld,KAAK4d,QACR5d,KAAKke,oBAEFle,KAAK2d,mBACR,GAAI3d,KAAKoe,aAAc,CACrB,MAAM3D,EAAQza,KAAKmc,MAAM,GACnBzB,EAAS1a,KAAKmc,MAAM,GACpB0C,GAAU,OAAsBpE,EAAOC,GAC7CmE,EAAQC,SAAS,EAAG,EAAGrE,EAAOC,GAC9B1a,KAAK2d,mBAAqBkB,EAAQE,MACpC,MACE/e,KAAK2d,mBAAqB3d,KAAK4d,OAGnC,OAAO5d,KAAK2d,kBACd,CAMA,OAAAlB,GACE,OAAOzc,KAAKmc,KACd,CAKA,MAAAS,GACE,OAAO5c,KAAK+d,IACd,CAKA,IAAA7P,GACE,GAAIlO,KAAK8d,cAAgB,IAAWtU,KAApC,CAGKxJ,KAAK4d,QACR5d,KAAKke,mBAGPle,KAAK8d,YAAc,IAAWjW,QAC9B,SACoBtH,IAAdP,KAAK+d,OAC0B/d,KAAW,OAAE6K,IAAM7K,KAAK+d,KAE7D,CAAE,MAAOS,GACPxe,KAAK0e,mBACP,CACI1e,KAAK4d,kBAAkBxB,mBACzB,QAAepc,KAAK4d,OAAQ5d,KAAK+d,MAC9BzD,MAAMmB,IACLzb,KAAK4d,OAASnC,EACdzb,KAAK2e,kBAAkB,IAExBK,MAAMhf,KAAK0e,kBAAkBpX,KAAKtH,MAnBvC,CAqBF,CAMA,aAAA4e,CAAcvZ,GACZ,IACGrF,KAAK+Z,QACN/Z,KAAK6d,QAAQxY,IACbrF,KAAK8d,cAAgB,IAAWhZ,OAEhC,OAGF,MAAM2W,EAAQzb,KAAK4d,OACbmB,EAASE,SAASC,cAAc,UACtCH,EAAOtE,MAAQtJ,KAAKgO,KAAK1D,EAAMhB,MAAQpV,GACvC0Z,EAAOrE,OAASvJ,KAAKgO,KAAK1D,EAAMf,OAASrV,GAEzC,MAAM+Z,EAAML,EAAOM,WAAW,MAC9BD,EAAI1G,MAAMrT,EAAYA,GACtB+Z,EAAId,UAAU7C,EAAO,EAAG,GAExB2D,EAAIE,yBAA2B,WAC/BF,EAAIG,WAAY,QAASvf,KAAK+Z,QAC9BqF,EAAIN,SAAS,EAAG,EAAGC,EAAOtE,MAAQpV,EAAY0Z,EAAOrE,OAASrV,GAE9D+Z,EAAIE,yBAA2B,iBAC/BF,EAAId,UAAU7C,EAAO,EAAG,GAExBzb,KAAK6d,QAAQxY,GAAc0Z,CAC7B,CAKA,KAAA1E,GAqBE,OApBKra,KAAKie,SACRje,KAAKie,OAAS,IAAI7c,SAASC,IAEvBrB,KAAK8d,cAAgB,IAAWhZ,QAChC9E,KAAK8d,cAAgB,IAAW/V,MAEhC1G,IAEArB,KAAK0J,iBAAiB,IAAUE,QAAQ,SAAS4V,IAE7Cxf,KAAK8d,cAAgB,IAAWhZ,QAChC9E,KAAK8d,cAAgB,IAAW/V,QAEhC/H,KAAKwd,oBAAoB,IAAU5T,OAAQ4V,GAC3Cne,IAEJ,GACF,KAGGrB,KAAKie,MACd,EAYK,SAAS/d,EAAIub,EAAOG,EAAUrT,EAAaoT,EAAY3B,EAAOyF,GACnE,IAAIC,OACWnf,IAAbqb,OACIrb,EACA,KAAeL,IAAI0b,EAAUrT,EAAayR,GAkBhD,OAjBK0F,IACHA,EAAY,IAAIhC,EACdjC,EACAA,GAAS,QAASA,EAAQA,EAAM5Q,UAAOtK,EAAYqb,EACnDrT,EACAoT,EACA3B,GAEF,KAAe1P,IAAIsR,EAAUrT,EAAayR,EAAO0F,EAAWD,IAG5DA,GACAC,IACC,KAAeC,WAAW/D,EAAUrT,EAAayR,IAElD,KAAe1P,IAAIsR,EAAUrT,EAAayR,EAAO0F,EAAWD,GAEvDC,CACT,C,wEChUA,MAAME,EACJ,WAAA/f,GAKEG,KAAK6f,OAAS,CAAC,EAMf7f,KAAK8f,cAAgB,CAAC,EAMtB9f,KAAK+f,WAAa,EAMlB/f,KAAKggB,cAAgB,EACvB,CAKA,KAAAla,GACE9F,KAAK6f,OAAS,CAAC,EACf7f,KAAK8f,cAAgB,CAAC,EACtB9f,KAAK+f,WAAa,CACpB,CAKA,cAAApc,GACE,OAAO3D,KAAK+f,WAAa/f,KAAKggB,aAChC,CAKA,MAAAC,GACE,GAAIjgB,KAAK2D,iBAAkB,CACzB,IAAIqK,EAAI,EACR,IAAK,MAAMzK,KAAOvD,KAAK6f,OAAQ,CAC7B,MAAMH,EAAY1f,KAAK6f,OAAOtc,GACZ,KAAP,EAANyK,MAAmB0R,EAAUvR,uBACzBnO,KAAK6f,OAAOtc,UACZvD,KAAK8f,cAAcvc,KACxBvD,KAAK+f,WAEX,CACF,CACF,CAQA,GAAA7f,CAAI2K,EAAKtC,EAAayR,GACpB,MAAMzW,EAAM2c,EAAYrV,EAAKtC,EAAayR,GAC1C,OAAOzW,KAAOvD,KAAK6f,OAAS7f,KAAK6f,OAAOtc,GAAO,IACjD,CAQA,UAAAoc,CAAW9U,EAAKtC,EAAayR,GAC3B,MAAMzW,EAAM2c,EAAYrV,EAAKtC,EAAayR,GAC1C,OAAOzW,KAAOvD,KAAK8f,cAAgB9f,KAAK8f,cAAcvc,GAAO,IAC/D,CASA,GAAA+G,CAAIO,EAAKtC,EAAayR,EAAO0F,EAAWD,GACtC,MAAMlc,EAAM2c,EAAYrV,EAAKtC,EAAayR,GACpCrI,EAASpO,KAAOvD,KAAK6f,OAC3B7f,KAAK6f,OAAOtc,GAAOmc,EACfD,IACEC,EAAUnF,kBAAoB,IAAW/Q,MAC3CkW,EAAUxR,OAERwR,EAAUnF,kBAAoB,IAAW1S,QAC3C6X,EAAUrF,QAAQC,MAAK,KACrBta,KAAK8f,cAAcvc,IAAO,UAA2B4c,cACnDT,EAAU5U,SAAS,GACnB,SACD,IAGH9K,KAAK8f,cAAcvc,IAAO,UAA2B4c,cACnDT,EAAU5U,SAAS,GACnB,WAID6G,KACD3R,KAAK+f,UAEX,CASA,OAAA1K,CAAQ+K,GACNpgB,KAAKggB,cAAgBI,EACrBpgB,KAAKigB,QACP,EASK,SAASC,EAAYrV,EAAKtC,EAAayR,GAC5C,MAAMqG,EAAcrG,GAAQ,QAAQA,GAAS,OAC7C,OAAOzR,EAAc,IAAMsC,EAAM,IAAMwV,CACzC,CASO,MAAMC,EAAS,IAAIV,C,2DCtI1B,MAAMW,EAIJ,WAAA1gB,CAAYC,GAKVE,KAAKwgB,SAAW1gB,EAAQgb,QAMxB9a,KAAKygB,gBAAkB3gB,EAAQ8Y,eAM/B5Y,KAAK0gB,UAAY5gB,EAAQ6Y,SAMzB3Y,KAAK2gB,OAAS7gB,EAAQ4Y,MAMtB1Y,KAAK4gB,aAAc,QAAO9gB,EAAQ4Y,OAMlC1Y,KAAK6gB,cAAgB/gB,EAAQ+Y,aAM7B7Y,KAAK8gB,eAAiBhhB,EAAQgZ,aAChC,CAOA,KAAAC,GACE,MAAML,EAAQ1Y,KAAKgZ,WACnB,OAAO,IAAIuH,EAAW,CACpBzF,QAAS9a,KAAK0Z,aACdhB,MAAOtW,MAAMC,QAAQqW,GAASA,EAAM5I,QAAU4I,EAC9CC,SAAU3Y,KAAKqZ,cACfT,eAAgB5Y,KAAKsZ,oBACrBT,aAAc7Y,KAAKuZ,kBAAkBzJ,QACrCgJ,cAAe9Y,KAAKwZ,oBAExB,CAOA,UAAAE,GACE,OAAO1Z,KAAKwgB,QACd,CAOA,iBAAAlH,GACE,OAAOtZ,KAAKygB,eACd,CAOA,WAAApH,GACE,OAAOrZ,KAAK0gB,SACd,CAOA,QAAA1H,GACE,OAAOhZ,KAAK2gB,MACd,CAMA,aAAA7D,GACE,OAAO9c,KAAK4gB,WACd,CAOA,eAAArH,GACE,OAAOvZ,KAAK6gB,aACd,CAOA,gBAAArH,GACE,OAAOxZ,KAAK8gB,cACd,CAQA,SAAAjE,GACE,OAAO,SACT,CAQA,QAAA/R,CAASzF,GACP,OAAO,SACT,CAMA,oBAAA6X,GACE,OAAO,SACT,CAOA,aAAAF,CAAc3X,GACZ,OAAO,CACT,CAMA,aAAAkV,GACE,OAAO,SACT,CAMA,YAAA0C,GACE,OAAO,SACT,CAOA,SAAAE,GACE,OAAO,SACT,CAOA,OAAAV,GACE,OAAO,SACT,CAQA,eAAAsE,CAAgBlI,GACd7Y,KAAK6gB,cAAgBhI,CACvB,CAQA,UAAAY,CAAWqB,GACT9a,KAAKwgB,SAAW1F,CAClB,CAQA,iBAAAkG,CAAkBpI,GAChB5Y,KAAKygB,gBAAkB7H,CACzB,CAQA,WAAAqI,CAAYtI,GACV3Y,KAAK0gB,UAAY/H,CACnB,CAQA,QAAA+D,CAAShE,GACP1Y,KAAK2gB,OAASjI,EACd1Y,KAAK4gB,aAAc,QAAOlI,EAC5B,CAMA,iBAAAiE,CAAkBY,IAChB,SACF,CAMA,IAAArP,IACE,SACF,CAMA,mBAAAqO,CAAoBgB,IAClB,SACF,CAKA,KAAAlD,GACE,OAAOjZ,QAAQC,SACjB,EAGF,S,wGCzPA,MAAM6f,UAAqB,IAIzB,WAAArhB,CAAYC,GACVC,MAAM,CACJ+a,QAAS,EACTlC,oBAC6BrY,IAA3BT,EAAQ8Y,gBAA+B9Y,EAAQ8Y,eACjDD,cAA+BpY,IAArBT,EAAQ6Y,SAAyB7Y,EAAQ6Y,SAAW,EAC9DD,WAAyBnY,IAAlBT,EAAQ4Y,MAAsB5Y,EAAQ4Y,MAAQ,EACrDG,kBAC2BtY,IAAzBT,EAAQ+Y,aAA6B/Y,EAAQ+Y,aAAe,CAAC,EAAG,GAClEC,cAAehZ,EAAQgZ,gBAOzB9Y,KAAKmhB,UAMLnhB,KAAKohB,oBAAsB,KAM3BphB,KAAKqhB,WAAyB9gB,IAAjBT,EAAQ0Y,KAAqB1Y,EAAQ0Y,KAAO,KAMzDxY,KAAKkc,QAAU,CAAC,EAAG,GAMnBlc,KAAKshB,QAAUxhB,EAAQyY,OAMvBvY,KAAK4Z,QAAU9Z,EAAQwY,OAMvBtY,KAAKuhB,SAAWzhB,EAAQ0hB,QAMxBxhB,KAAKyhB,YAA2BlhB,IAAlBT,EAAQ4hB,MAAsB5hB,EAAQ4hB,MAAQ,EAM5D1hB,KAAK2hB,aAA6BphB,IAAnBT,EAAQ2Y,OAAuB3Y,EAAQ2Y,OAAS,KAM/DzY,KAAKmc,MAMLnc,KAAK4hB,eAEL5hB,KAAK8d,YACH9d,KAAKqhB,OAASrhB,KAAKqhB,MAAM5gB,UACrB,IAAWoH,QACX,IAAW/C,OACb9E,KAAK8d,cAAgB,IAAWjW,SAClC7H,KAAKqa,QAAQC,MAAK,IAAOta,KAAK8d,YAAc,IAAWhZ,SAEzD9E,KAAKwK,QACP,CAOA,KAAAuO,GACE,MAAML,EAAQ1Y,KAAKgZ,WACbC,EAAQ,IAAIiI,EAAa,CAC7B1I,KAAMxY,KAAKkZ,UAAYlZ,KAAKkZ,UAAUH,aAAUxY,EAChDgY,OAAQvY,KAAK6hB,YACbvJ,OAAQtY,KAAKoZ,YACboI,QAASxhB,KAAK8hB,aACdJ,MAAO1hB,KAAK+hB,WACZtJ,OAAQzY,KAAKmZ,YAAcnZ,KAAKmZ,YAAYJ,aAAUxY,EACtDoY,SAAU3Y,KAAKqZ,cACfT,eAAgB5Y,KAAKsZ,oBACrBZ,MAAOtW,MAAMC,QAAQqW,GAASA,EAAM5I,QAAU4I,EAC9CG,aAAc7Y,KAAKuZ,kBAAkBzJ,QACrCgJ,cAAe9Y,KAAKwZ,qBAGtB,OADAP,EAAMQ,WAAWzZ,KAAK0Z,cACfT,CACT,CAQA,SAAA4D,GACE,MAAMvH,EAAOtV,KAAKmc,MACZtD,EAAe7Y,KAAKuZ,kBACpBb,EAAQ1Y,KAAK8c,gBAGnB,MAAO,CACLxH,EAAK,GAAK,EAAIuD,EAAa,GAAKH,EAAM,GACtCpD,EAAK,GAAK,EAAIuD,EAAa,GAAKH,EAAM,GAE1C,CAOA,QAAAqJ,GACE,OAAO/hB,KAAKyhB,MACd,CAOA,OAAAvI,GACE,OAAOlZ,KAAKqhB,KACd,CAOA,OAAAW,CAAQxJ,GACNxY,KAAKqhB,MAAQ7I,EACbxY,KAAKwK,QACP,CAKA,oBAAA0S,GAME,OALKld,KAAKohB,sBACRphB,KAAKohB,oBAAsBphB,KAAKiiB,0BAC9BjiB,KAAK4hB,iBAGF5hB,KAAKohB,mBACd,CAQA,QAAAtW,CAASzF,GACP,IAAIoW,EAAQzb,KAAKmhB,UAAU9b,GAC3B,IAAKoW,EAAO,CACV,MAAMyG,EAAgBliB,KAAK4hB,eACrB/C,GAAU,OACdqD,EAAc5M,KAAOjQ,EACrB6c,EAAc5M,KAAOjQ,GAEvBrF,KAAKmiB,MAAMD,EAAerD,EAASxZ,GAEnCoW,EAAQoD,EAAQE,OAChB/e,KAAKmhB,UAAU9b,GAAcoW,CAC/B,CACA,OAAOA,CACT,CAOA,aAAAuB,CAAc3X,GACZ,OAAOA,CACT,CAKA,YAAA4X,GACE,OAAOjd,KAAKmc,KACd,CAKA,aAAA5B,GACE,OAAOva,KAAK8d,WACd,CAOA,SAAAX,GACE,OAAOnd,KAAKkc,OACd,CAOA,SAAA2F,GACE,OAAO7hB,KAAKshB,OACd,CAOA,SAAAlI,GACE,OAAOpZ,KAAK4Z,OACd,CAOA,UAAAkI,GACE,OAAO9hB,KAAKuhB,QACd,CAOA,OAAA9E,GACE,OAAOzc,KAAKmc,KACd,CAOA,SAAAhD,GACE,OAAOnZ,KAAK2hB,OACd,CAOA,SAAAS,CAAU3J,GACRzY,KAAK2hB,QAAUlJ,EACfzY,KAAKwK,QACP,CAKA,iBAAAmS,CAAkBY,GAAW,CAK7B,IAAArP,GAAQ,CAKR,mBAAAqO,CAAoBgB,GAAW,CAU/B,sBAAA8E,CAAuBC,EAAUC,EAAaC,GAC5C,GACkB,IAAhBD,GACAviB,KAAKshB,UAAYvQ,KACH,UAAbuR,GAAqC,UAAbA,EAEzB,OAAOC,EAwBT,IAAIE,EAAKziB,KAAK4Z,QACV8I,OAAuBniB,IAAlBP,KAAKuhB,SAAyBkB,EAAKziB,KAAKuhB,SACjD,GAAIkB,EAAKC,EAAI,CACX,MAAMC,EAAMF,EACZA,EAAKC,EACLA,EAAKC,CACP,CACA,MAAMpK,OACchY,IAAlBP,KAAKuhB,SAAyBvhB,KAAKshB,QAAyB,EAAfthB,KAAKshB,QAC9CsB,EAAS,EAAIzR,KAAK0R,GAAMtK,EACxBuK,EAAIJ,EAAKvR,KAAK4R,IAAIH,GAClBI,EAAI7R,KAAKC,KAAKsR,EAAKA,EAAKI,EAAIA,GAC5BG,EAAIR,EAAKO,EACTxE,EAAIrN,KAAKC,KAAK0R,EAAIA,EAAIG,EAAIA,GAC1BC,EAAa1E,EAAIsE,EACvB,GAAiB,UAAbR,GAAwBY,GAAcV,EACxC,OAAOU,EAAaX,EAetB,MAAMY,EAAIZ,EAAc,EAAIW,EACtBrL,EAAK0K,EAAc,GAAMU,EAAIzE,GAC7B4E,EAAOjS,KAAKC,MAAMqR,EAAKU,IAAMV,EAAKU,GAAKtL,EAAIA,GAC3CwL,EAAWD,EAAOX,EACxB,QAAsBliB,IAAlBP,KAAKuhB,UAAuC,UAAbe,EACjC,OAAkB,EAAXe,EAIT,MAAMC,EAAKb,EAAKtR,KAAK4R,IAAIH,GACnBW,EAAKpS,KAAKC,KAAKqR,EAAKA,EAAKa,EAAKA,GAC9BE,EAAKd,EAAKa,EACVE,EAAKtS,KAAKC,KAAKkS,EAAKA,EAAKE,EAAKA,GAC9BE,EAAkBD,EAAKH,EAC7B,GAAII,GAAmBlB,EAAY,CACjC,MAAMmB,EAAeD,EAAkBnB,EAAe,EAAIG,EAAKD,EAC/D,OAAO,EAAItR,KAAKyS,IAAIP,EAAUM,EAChC,CACA,OAAkB,EAAXN,CACT,CAMA,mBAAAQ,GACE,IAKIC,EALAC,EAAU,KACVzB,EAAW,KACXE,EAAa,EACbwB,EAAW,KACXC,EAAiB,EAEjB1B,EAAc,EAEdviB,KAAK2hB,UACPmC,GAAc,OAAY9jB,KAAK2hB,QAAQzH,YAAc,MACrDqI,EAAcviB,KAAK2hB,QAAQtE,YAAc,KACzC2G,EAAWhkB,KAAK2hB,QAAQuC,cACxBD,EAAiBjkB,KAAK2hB,QAAQwC,qBAAuB,EACrD7B,EAAWtiB,KAAK2hB,QAAQyC,eAAiB,KACzCL,EAAU/jB,KAAK2hB,QAAQ0C,cAAgB,KACvC7B,EAAaxiB,KAAK2hB,QAAQ2C,iBAAmB,MAG/C,MAAMC,EAAMvkB,KAAKqiB,uBAAuBC,EAAUC,EAAaC,GACzDgC,EAAYrT,KAAKyS,IAAI5jB,KAAK4Z,QAAS5Z,KAAKuhB,UAAY,GACpDjM,EAAOnE,KAAKgO,KAAK,EAAIqF,EAAYD,GAEvC,MAAO,CACLT,YAAaA,EACbvB,YAAaA,EACbjN,KAAMA,EACNyO,QAASA,EACTC,SAAUA,EACVC,eAAgBA,EAChB3B,SAAUA,EACVE,WAAYA,EAEhB,CAKA,MAAAhY,GACExK,KAAK4hB,eAAiB5hB,KAAK6jB,sBAC3B,MAAMvO,EAAOtV,KAAK4hB,eAAetM,KACjCtV,KAAKmhB,UAAY,CAAC,EAClBnhB,KAAKohB,oBAAsB,KAC3BphB,KAAKmc,MAAQ,CAAC7G,EAAMA,EACtB,CAQA,KAAA6M,CAAMD,EAAerD,EAASxZ,GAO5B,GANAwZ,EAAQnG,MAAMrT,EAAYA,GAE1BwZ,EAAQ4F,UAAUvC,EAAc5M,KAAO,EAAG4M,EAAc5M,KAAO,GAE/DtV,KAAK0kB,YAAY7F,GAEb7e,KAAKqhB,MAAO,CACd,IAAIrH,EAAQha,KAAKqhB,MAAMnH,WACT,OAAVF,IACFA,EAAQ,MAEV6E,EAAQU,WAAY,OAAYvF,GAChC6E,EAAQrG,MACV,CACI0J,EAAc4B,cAChBjF,EAAQiF,YAAc5B,EAAc4B,YACpCjF,EAAQ8F,UAAYzC,EAAcK,YAC9BL,EAAc8B,WAChBnF,EAAQ+F,YAAY1C,EAAc8B,UAClCnF,EAAQoF,eAAiB/B,EAAc+B,gBAEzCpF,EAAQkF,QAAU7B,EAAc6B,QAChClF,EAAQyD,SAAWJ,EAAcI,SACjCzD,EAAQ2D,WAAaN,EAAcM,WACnC3D,EAAQpG,SAEZ,CAOA,yBAAAwJ,CAA0BC,GACxB,IAAIrD,EACJ,GAAI7e,KAAKqhB,MAAO,CACd,IAAIrH,EAAQha,KAAKqhB,MAAMnH,WAGnBY,EAAU,EACO,kBAAVd,IACTA,GAAQ,QAAQA,IAEJ,OAAVA,EACFc,EAAU,EACD1Y,MAAMC,QAAQ2X,KACvBc,EAA2B,IAAjBd,EAAM/L,OAAe+L,EAAM,GAAK,GAE5B,IAAZc,IAGF+D,GAAU,OAAsBqD,EAAc5M,KAAM4M,EAAc5M,MAClEtV,KAAK6kB,wBAAwB3C,EAAerD,GAEhD,CACA,OAAOA,EAAUA,EAAQE,OAAS/e,KAAK8K,SAAS,EAClD,CAMA,WAAA4Z,CAAY7F,GACV,IAAItG,EAASvY,KAAKshB,QAClB,MAAMhJ,EAAStY,KAAK4Z,QACpB,GAAIrB,IAAWxH,IACb8N,EAAQiG,IAAI,EAAG,EAAGxM,EAAQ,EAAG,EAAInH,KAAK0R,QACjC,CACL,MAAMrB,OAA4BjhB,IAAlBP,KAAKuhB,SAAyBjJ,EAAStY,KAAKuhB,cACtChhB,IAAlBP,KAAKuhB,WACPhJ,GAAU,GAEZ,MAAMwM,EAAa/kB,KAAKyhB,OAAStQ,KAAK0R,GAAK,EACrCmC,EAAQ,EAAI7T,KAAK0R,GAAMtK,EAC7B,IAAK,IAAIvK,EAAI,EAAGA,EAAIuK,EAAQvK,IAAK,CAC/B,MAAMiX,EAASF,EAAa/W,EAAIgX,EAC1BE,EAAUlX,EAAI,IAAM,EAAIsK,EAASkJ,EACvC3C,EAAQsG,OAAOD,EAAU/T,KAAKiU,IAAIH,GAASC,EAAU/T,KAAK4R,IAAIkC,GAChE,CACApG,EAAQwG,WACV,CACF,CAOA,uBAAAR,CAAwB3C,EAAerD,GAErCA,EAAQ4F,UAAUvC,EAAc5M,KAAO,EAAG4M,EAAc5M,KAAO,GAE/DtV,KAAK0kB,YAAY7F,GAEjBA,EAAQU,UAAY,KACpBV,EAAQrG,OACJ0J,EAAc4B,cAChBjF,EAAQiF,YAAc5B,EAAc4B,YACpCjF,EAAQ8F,UAAYzC,EAAcK,YAC9BL,EAAc8B,WAChBnF,EAAQ+F,YAAY1C,EAAc8B,UAClCnF,EAAQoF,eAAiB/B,EAAc+B,gBAEzCpF,EAAQyD,SAAWJ,EAAcI,SACjCzD,EAAQ2D,WAAaN,EAAcM,WACnC3D,EAAQpG,SAEZ,CAEA,KAAA4B,GACE,OAAOra,KAAKqhB,MAAQrhB,KAAKqhB,MAAMhH,QAAUjZ,QAAQC,SACnD,EAGF,S,iCC9kBA,MAAMikB,EAIJ,WAAAzlB,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBE,KAAK+Z,YAA2BxZ,IAAlBT,EAAQka,MAAsBla,EAAQka,MAAQ,KAM5Dha,KAAKulB,SAAWzlB,EAAQikB,QAMxB/jB,KAAKwlB,eAAiCjlB,IAArBT,EAAQkkB,SAAyBlkB,EAAQkkB,SAAW,KAMrEhkB,KAAKylB,gBAAkB3lB,EAAQmkB,eAM/BjkB,KAAK0lB,UAAY5lB,EAAQwiB,SAMzBtiB,KAAK2lB,YAAc7lB,EAAQ0iB,WAM3BxiB,KAAK4lB,OAAS9lB,EAAQ2a,KACxB,CAOA,KAAA1B,GACE,MAAMiB,EAAQha,KAAKka,WACnB,OAAO,IAAIoL,EAAO,CAChBtL,MAAO5X,MAAMC,QAAQ2X,GAASA,EAAMlK,QAAUkK,QAASzZ,EACvDwjB,QAAS/jB,KAAKqkB,aACdL,SAAUhkB,KAAKkkB,cAAgBlkB,KAAKkkB,cAAcpU,aAAUvP,EAC5D0jB,eAAgBjkB,KAAKmkB,oBACrB7B,SAAUtiB,KAAKokB,cACf5B,WAAYxiB,KAAKskB,gBACjB7J,MAAOza,KAAKqd,YAEhB,CAOA,QAAAnD,GACE,OAAOla,KAAK+Z,MACd,CAOA,UAAAsK,GACE,OAAOrkB,KAAKulB,QACd,CAOA,WAAArB,GACE,OAAOlkB,KAAKwlB,SACd,CAOA,iBAAArB,GACE,OAAOnkB,KAAKylB,eACd,CAOA,WAAArB,GACE,OAAOpkB,KAAK0lB,SACd,CAOA,aAAApB,GACE,OAAOtkB,KAAK2lB,WACd,CAOA,QAAAtI,GACE,OAAOrd,KAAK4lB,MACd,CAQA,QAAA3L,CAASD,GACPha,KAAK+Z,OAASC,CAChB,CAQA,UAAA6L,CAAW9B,GACT/jB,KAAKulB,SAAWxB,CAClB,CAQA,WAAAa,CAAYZ,GACVhkB,KAAKwlB,UAAYxB,CACnB,CAQA,iBAAA8B,CAAkB7B,GAChBjkB,KAAKylB,gBAAkBxB,CACzB,CAQA,WAAA8B,CAAYzD,GACVtiB,KAAK0lB,UAAYpD,CACnB,CAQA,aAAA0D,CAAcxD,GACZxiB,KAAK2lB,YAAcnD,CACrB,CAQA,QAAAyD,CAASxL,GACPza,KAAK4lB,OAASnL,CAChB,EAGF,S,iKClEA,MAAMyL,EAIJ,WAAArmB,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBE,KAAKmmB,UAAY,KAMjBnmB,KAAKomB,kBAAoBC,OAEA9lB,IAArBT,EAAQiN,UACV/M,KAAKsmB,YAAYxmB,EAAQiN,UAO3B/M,KAAKqhB,WAAyB9gB,IAAjBT,EAAQ0Y,KAAqB1Y,EAAQ0Y,KAAO,KAMzDxY,KAAK4d,YAA2Brd,IAAlBT,EAAQ2b,MAAsB3b,EAAQ2b,MAAQ,KAM5Dzb,KAAKumB,eAAiChmB,IAArBT,EAAQ0mB,SAAyB1mB,EAAQ0mB,SAAW,KAMrExmB,KAAKymB,2BAC8BlmB,IAAjCT,EAAQ4mB,qBACJ5mB,EAAQ4mB,qBACR,KAMN1mB,KAAK2hB,aAA6BphB,IAAnBT,EAAQ2Y,OAAuB3Y,EAAQ2Y,OAAS,KAM/DzY,KAAK2mB,WAAyBpmB,IAAjBT,EAAQ8mB,KAAqB9mB,EAAQ8mB,KAAO,KAMzD5mB,KAAK6mB,QAAU/mB,EAAQgnB,MACzB,CAOA,KAAA/N,GACE,IAAIhM,EAAW/M,KAAKgN,cAMpB,OALID,GAAgC,kBAAbA,IACrBA,EAAgE,EAE9DgM,SAEG,IAAImN,EAAM,CACfnZ,SAAUA,QAAYxM,EACtBiY,KAAMxY,KAAKkZ,UAAYlZ,KAAKkZ,UAAUH,aAAUxY,EAChDkb,MAAOzb,KAAK8K,WAAa9K,KAAK8K,WAAWiO,aAAUxY,EACnDimB,SAAUxmB,KAAK+mB,oBAAiBxmB,EAChCkY,OAAQzY,KAAKmZ,YAAcnZ,KAAKmZ,YAAYJ,aAAUxY,EACtDqmB,KAAM5mB,KAAKgnB,UAAYhnB,KAAKgnB,UAAUjO,aAAUxY,EAChDumB,OAAQ9mB,KAAKinB,aAEjB,CAQA,WAAAF,GACE,OAAO/mB,KAAKumB,SACd,CAQA,WAAAW,CAAYV,GACVxmB,KAAKumB,UAAYC,CACnB,CAQA,uBAAAW,CAAwBX,GACtBxmB,KAAKymB,sBAAwBD,CAC/B,CAQA,uBAAAY,GACE,OAAOpnB,KAAKymB,qBACd,CASA,WAAAzZ,GACE,OAAOhN,KAAKmmB,SACd,CAQA,mBAAAkB,GACE,OAAOrnB,KAAKomB,iBACd,CAOA,OAAAlN,GACE,OAAOlZ,KAAKqhB,KACd,CAOA,OAAAW,CAAQxJ,GACNxY,KAAKqhB,MAAQ7I,CACf,CAOA,QAAA1N,GACE,OAAO9K,KAAK4d,MACd,CAOA,QAAA0J,CAAS7L,GACPzb,KAAK4d,OAASnC,CAChB,CAOA,SAAAtC,GACE,OAAOnZ,KAAK2hB,OACd,CAOA,SAAAS,CAAU3J,GACRzY,KAAK2hB,QAAUlJ,CACjB,CAOA,OAAAuO,GACE,OAAOhnB,KAAK2mB,KACd,CAOA,OAAAY,CAAQX,GACN5mB,KAAK2mB,MAAQC,CACf,CAOA,SAAAK,GACE,OAAOjnB,KAAK6mB,OACd,CAUA,WAAAP,CAAYvZ,GACc,oBAAbA,EACT/M,KAAKomB,kBAAoBrZ,EACI,kBAAbA,EAChB/M,KAAKomB,kBAAoB,SAAUpb,GACjC,OACEA,EAAQ9K,IAAI6M,EAEhB,EACUA,OAEYxM,IAAbwM,IACT/M,KAAKomB,kBAAoB,WACvB,OAA4D,CAC9D,GAJApmB,KAAKomB,kBAAoBC,EAM3BrmB,KAAKmmB,UAAYpZ,CACnB,CAQA,SAAAya,CAAUV,GACR9mB,KAAK6mB,QAAUC,CACjB,EAWK,SAASW,EAAW1U,GACzB,IAAI2U,EAEJ,GAAmB,oBAAR3U,EACT2U,EAAgB3U,MACX,CAIL,IAAI4U,EACJ,GAAIvlB,MAAMC,QAAQ0Q,GAChB4U,EAAS5U,MACJ,EACL,OACgD,oBAArB,EAAe,UACxC,8CAEF,MAAMkG,EAA6B,EACnC0O,EAAS,CAAC1O,EACZ,CACAyO,EAAgB,WACd,OAAOC,CACT,CACF,CACA,OAAOD,CACT,CAKA,IAAIE,EAAgB,KAOb,SAASC,EAAmB7c,EAASmH,GAM1C,IAAKyV,EAAe,CAClB,MAAMpP,EAAO,IAAI,IAAK,CACpBwB,MAAO,0BAEHvB,EAAS,IAAI,IAAO,CACxBuB,MAAO,UACPS,MAAO,OAETmN,EAAgB,CACd,IAAI1B,EAAM,CACRzK,MAAO,IAAI,IAAY,CACrBjD,KAAMA,EACNC,OAAQA,EACRH,OAAQ,IAEVE,KAAMA,EACNC,OAAQA,IAGd,CACA,OAAOmP,CACT,CAMO,SAASE,IAEd,MAAMH,EAAS,CAAC,EACVI,EAAQ,CAAC,IAAK,IAAK,IAAK,GACxBC,EAAO,CAAC,EAAG,IAAK,IAAK,GACrBvN,EAAQ,EAkDd,OAjDAkN,EAAO,WAAa,CAClB,IAAIzB,EAAM,CACR1N,KAAM,IAAI,IAAK,CACbwB,MAAO,CAAC,IAAK,IAAK,IAAK,SAI7B2N,EAAO,gBAAkBA,EAAO,WAEhCA,EAAO,cAAgB,CACrB,IAAIzB,EAAM,CACRzN,OAAQ,IAAI,IAAO,CACjBuB,MAAO+N,EACPtN,MAAOA,EAAQ,MAGnB,IAAIyL,EAAM,CACRzN,OAAQ,IAAI,IAAO,CACjBuB,MAAOgO,EACPvN,MAAOA,OAIbkN,EAAO,mBAAqBA,EAAO,cAEnCA,EAAO,UAAYA,EAAO,WAAWrX,OAAOqX,EAAO,eAEnDA,EAAO,SAAW,CAChB,IAAIzB,EAAM,CACRzK,MAAO,IAAI,IAAY,CACrBnD,OAAgB,EAARmC,EACRjC,KAAM,IAAI,IAAK,CACbwB,MAAOgO,IAETvP,OAAQ,IAAI,IAAO,CACjBuB,MAAO+N,EACPtN,MAAOA,EAAQ,MAGnBqM,OAAQ/V,OAGZ4W,EAAO,cAAgBA,EAAO,SAE9BA,EAAO,sBAAwBA,EAAO,WAAWrX,OAC/CqX,EAAO,cACPA,EAAO,UAGFA,CACT,CAOA,SAAStB,EAAwBrb,GAC/B,OAAOA,EAAQgC,aACjB,CAEA,S,4DC1iBA,MAAMib,EAAqB,OAgD3B,MAAMC,EAIJ,WAAAroB,CAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBE,KAAKmoB,MAAQroB,EAAQsoB,KAMrBpoB,KAAK0gB,UAAY5gB,EAAQ6Y,SAMzB3Y,KAAKygB,gBAAkB3gB,EAAQ8Y,eAM/B5Y,KAAK2gB,OAAS7gB,EAAQ4Y,MAMtB1Y,KAAK4gB,aAAc,aAAyBrgB,IAAlBT,EAAQ4Y,MAAsB5Y,EAAQ4Y,MAAQ,GAMxE1Y,KAAK2mB,MAAQ7mB,EAAQ8mB,KAMrB5mB,KAAKqoB,WAAavoB,EAAQwoB,UAM1BtoB,KAAKuoB,SAAWzoB,EAAQ0oB,QAMxBxoB,KAAKyoB,QAAU3oB,EAAQ4oB,OAMvB1oB,KAAK2oB,cAAgB7oB,EAAQ8oB,aAM7B5oB,KAAKqhB,WACc9gB,IAAjBT,EAAQ0Y,KACJ1Y,EAAQ0Y,KACR,IAAI,IAAK,CAACwB,MAAOiO,IAMvBjoB,KAAK6oB,eACkBtoB,IAArBT,EAAQgpB,SAAyBhpB,EAAQgpB,SAAW3X,KAAK0R,GAAK,EAMhE7iB,KAAK+oB,gBACmBxoB,IAAtBT,EAAQkpB,UAA0BlpB,EAAQkpB,UAAY,QAMxDhpB,KAAKipB,YAAcnpB,EAAQopB,SAM3BlpB,KAAK2hB,aAA6BphB,IAAnBT,EAAQ2Y,OAAuB3Y,EAAQ2Y,OAAS,KAM/DzY,KAAKmpB,cAA+B5oB,IAApBT,EAAQspB,QAAwBtpB,EAAQspB,QAAU,EAMlEppB,KAAKqpB,cAA+B9oB,IAApBT,EAAQwpB,QAAwBxpB,EAAQwpB,QAAU,EAMlEtpB,KAAKupB,gBAAkBzpB,EAAQ0pB,eAC3B1pB,EAAQ0pB,eACR,KAMJxpB,KAAKypB,kBAAoB3pB,EAAQ4pB,iBAC7B5pB,EAAQ4pB,iBACR,KAMJ1pB,KAAK2pB,cAA+BppB,IAApBT,EAAQ8pB,QAAwB,KAAO9pB,EAAQ8pB,QAM/D5pB,KAAK8gB,eAAiBhhB,EAAQgZ,aAChC,CAOA,KAAAC,GACE,MAAML,EAAQ1Y,KAAKgZ,WACnB,OAAO,IAAIkP,EAAK,CACdE,KAAMpoB,KAAK6pB,UACXb,UAAWhpB,KAAK8pB,eAChBpB,OAAQ1oB,KAAK+pB,YACbjB,SAAU9oB,KAAKgqB,cACfd,SAAUlpB,KAAKiqB,cACftR,SAAU3Y,KAAKqZ,cACfT,eAAgB5Y,KAAKsZ,oBACrBZ,MAAOtW,MAAMC,QAAQqW,GAASA,EAAM5I,QAAU4I,EAC9CkO,KAAM5mB,KAAKgnB,UACXsB,UAAWtoB,KAAKkqB,eAChB1B,QAASxoB,KAAKmqB,aACdvB,aAAc5oB,KAAKoqB,kBACnB5R,KAAMxY,KAAKkZ,UAAYlZ,KAAKkZ,UAAUH,aAAUxY,EAChDkY,OAAQzY,KAAKmZ,YAAcnZ,KAAKmZ,YAAYJ,aAAUxY,EACtD6oB,QAASppB,KAAKqqB,aACdf,QAAStpB,KAAKsqB,aACdd,eAAgBxpB,KAAKuqB,oBACjBvqB,KAAKuqB,oBAAoBxR,aACzBxY,EACJmpB,iBAAkB1pB,KAAKwqB,sBACnBxqB,KAAKwqB,sBAAsBzR,aAC3BxY,EACJqpB,QAAS5pB,KAAKyqB,mBAAgBlqB,EAC9BuY,cAAe9Y,KAAKwZ,oBAExB,CAOA,WAAAyQ,GACE,OAAOjqB,KAAKipB,SACd,CAOA,OAAAY,GACE,OAAO7pB,KAAKmoB,KACd,CAOA,WAAA6B,GACE,OAAOhqB,KAAK6oB,SACd,CAOA,YAAAiB,GACE,OAAO9pB,KAAK+oB,UACd,CAOA,SAAAgB,GACE,OAAO/pB,KAAKyoB,OACd,CAOA,UAAA4B,GACE,OAAOrqB,KAAKmpB,QACd,CAOA,UAAAmB,GACE,OAAOtqB,KAAKqpB,QACd,CAOA,OAAAnQ,GACE,OAAOlZ,KAAKqhB,KACd,CAOA,iBAAA/H,GACE,OAAOtZ,KAAKygB,eACd,CAOA,WAAApH,GACE,OAAOrZ,KAAK0gB,SACd,CAOA,QAAA1H,GACE,OAAOhZ,KAAK2gB,MACd,CAMA,aAAA7D,GACE,OAAO9c,KAAK4gB,WACd,CAOA,SAAAzH,GACE,OAAOnZ,KAAK2hB,OACd,CAOA,OAAAqF,GACE,OAAOhnB,KAAK2mB,KACd,CAOA,YAAAuD,GACE,OAAOlqB,KAAKqoB,UACd,CAOA,UAAA8B,GACE,OAAOnqB,KAAKuoB,QACd,CAOA,eAAA6B,GACE,OAAOpqB,KAAK2oB,aACd,CAOA,iBAAA4B,GACE,OAAOvqB,KAAKupB,eACd,CAOA,mBAAAiB,GACE,OAAOxqB,KAAKypB,iBACd,CAOA,UAAAgB,GACE,OAAOzqB,KAAK2pB,QACd,CAOA,gBAAAnQ,GACE,OAAOxZ,KAAK8gB,cACd,CAQA,WAAA4J,CAAYxB,GACVlpB,KAAKipB,UAAYC,CACnB,CAQA,OAAAyB,CAAQvC,GACNpoB,KAAKmoB,MAAQC,CACf,CAQA,WAAAwC,CAAY9B,GACV9oB,KAAK6oB,UAAYC,CACnB,CAQA,UAAA+B,CAAWzB,GACTppB,KAAKmpB,SAAWC,CAClB,CAQA,UAAA0B,CAAWxB,GACTtpB,KAAKqpB,SAAWC,CAClB,CAQA,YAAAyB,CAAa/B,GACXhpB,KAAK+oB,WAAaC,CACpB,CAOA,SAAAgC,CAAUtC,GACR1oB,KAAKyoB,QAAUC,CACjB,CAQA,iBAAA1H,CAAkBpI,GAChB5Y,KAAKygB,gBAAkB7H,CACzB,CAQA,OAAAoJ,CAAQxJ,GACNxY,KAAKqhB,MAAQ7I,CACf,CAQA,WAAAyI,CAAYtI,GACV3Y,KAAK0gB,UAAY/H,CACnB,CAQA,QAAA+D,CAAShE,GACP1Y,KAAK2gB,OAASjI,EACd1Y,KAAK4gB,aAAc,aAAiBrgB,IAAVmY,EAAsBA,EAAQ,EAC1D,CAQA,SAAA0J,CAAU3J,GACRzY,KAAK2hB,QAAUlJ,CACjB,CAQA,OAAA8O,CAAQX,GACN5mB,KAAK2mB,MAAQC,CACf,CAQA,YAAAqE,CAAa3C,GACXtoB,KAAKqoB,WAAaC,CACpB,CAQA,UAAA4C,CAAW1C,GACTxoB,KAAKuoB,SAAWC,CAClB,CAQA,eAAA2C,CAAgBvC,GACd5oB,KAAK2oB,cAAgBC,CACvB,CAQA,iBAAAwC,CAAkB5S,GAChBxY,KAAKupB,gBAAkB/Q,CACzB,CAQA,mBAAA6S,CAAoB5S,GAClBzY,KAAKypB,kBAAoBhR,CAC3B,CAQA,UAAA6S,CAAW1B,GACT5pB,KAAK2pB,SAAWC,CAClB,EAGF,S,kBC/VO,SAAS/B,IACd,MAAO,CACL,aAAc,wBACd,eAAgB,UAChB,eAAgB,KAChB,gBAAiB,EACjB,oBAAqB,wBACrB,sBAAuB,KACvB,sBAAuB,UAE3B,C,kCC9QO,SAAS0D,EAAevnB,EAAGO,EAAGG,EAAGkB,GACtC,YAAkBrF,IAAdqF,GACFA,EAAU,GAAK5B,EACf4B,EAAU,GAAKrB,EACfqB,EAAU,GAAKlB,EACRkB,GAEF,CAAC5B,EAAGO,EAAGG,EAChB,CAQO,SAAS8mB,EAAUxnB,EAAGO,EAAGG,GAC9B,OAAOV,EAAI,IAAMO,EAAI,IAAMG,CAC7B,CAOO,SAASM,EAAOY,GACrB,OAAO4lB,EAAU5lB,EAAU,GAAIA,EAAU,GAAIA,EAAU,GACzD,CAoBO,SAAS6lB,EAAQloB,GACtB,OAAOA,EAAImoB,MAAM,KAAKnb,IAAIob,OAC5B,CAMO,SAASC,EAAKhmB,GACnB,OAAQA,EAAU,IAAMA,EAAU,IAAMA,EAAU,EACpD,CAOO,SAASimB,EAAiBjmB,EAAW7C,GAC1C,MAAMiB,EAAI4B,EAAU,GACdrB,EAAIqB,EAAU,GACdlB,EAAIkB,EAAU,GAEpB,GAAI7C,EAASG,aAAec,GAAKA,EAAIjB,EAAS+oB,aAC5C,OAAO,EAET,MAAM7nB,EAAYlB,EAASgpB,iBAAiB/nB,GAC5C,OAAKC,GAGEA,EAAU+nB,WAAWznB,EAAGG,EACjC,C,oLCxEO,SAASunB,EAAiBhsB,GAC/B,IAAI8C,EAAW9C,EAAWisB,qBAK1B,OAJKnpB,IACHA,EAAWopB,EAAoBlsB,GAC/BA,EAAWmsB,mBAAmBrpB,IAEzBA,CACT,CAQO,SAASlC,EAAMkC,EAAU6C,EAAW3F,GACzC,MAAM+D,EAAI4B,EAAU,GACdymB,EAAStpB,EAASupB,mBAAmB1mB,GACrC2mB,EAAmBC,EAAqBvsB,GAC9C,KAAK,QAAmBssB,EAAkBF,GAAS,CACjD,MAAMI,GAAa,QAASF,GACtBG,EAAavb,KAAKgO,MACrBoN,EAAiB,GAAKF,EAAO,IAAMI,GAGtC,OADAJ,EAAO,IAAMI,EAAaC,EACnB3pB,EAAS4pB,yBAAyBN,EAAQroB,EACnD,CACA,OAAO4B,CACT,CAWO,SAASgnB,EAAgB3f,EAAQ2G,EAAS5Q,EAAU6pB,GACzDA,OAAoBtsB,IAAXssB,EAAuBA,EAAS,WAEzC,MAAMC,EAAcC,EAAsB9f,EAAQ2G,EAAS5Q,GAE3D,OAAO,IAAI,IAAS,CAClBiK,OAAQA,EACR+f,QAAQ,QAAU/f,EAAQ4f,GAC1BC,YAAaA,EACb9pB,SAAUA,GAEd,CAoBO,SAASiqB,EAAUntB,GACxB,MAAMotB,EAAaptB,GAAW,CAAC,EAEzBmN,EAASigB,EAAWjgB,SAAU,IAAA/M,KAAc,aAAagN,YAEzDigB,EAAc,CAClBlgB,OAAQA,EACR4G,QAASqZ,EAAWrZ,QACpB7Q,SAAUkqB,EAAWlqB,SACrB8pB,YAAaC,EACX9f,EACAigB,EAAWtZ,QACXsZ,EAAWlqB,SACXkqB,EAAWvZ,gBAGf,OAAO,IAAI,IAASwZ,EACtB,CAYA,SAASJ,EAAsB9f,EAAQ2G,EAAS5Q,EAAU2Q,GACxDC,OAAsBrT,IAAZqT,EAAwBA,EAAU,IAC5C5Q,GAAW,aAAoBzC,IAAbyC,EAAyBA,EAAW,KAEtD,MAAM0X,GAAS,QAAUzN,GACnBwN,GAAQ,QAASxN,GAEvB0G,EACEA,EAAgB,EACZA,EACAxC,KAAKyS,IAAInJ,EAAQzX,EAAS,GAAI0X,EAAS1X,EAAS,IAEtD,MAAMiL,EAAS2F,EAAU,EACnBkZ,EAAc,IAAI1qB,MAAM6L,GAC9B,IAAK,IAAIjK,EAAI,EAAGA,EAAIiK,IAAUjK,EAC5B8oB,EAAY9oB,GAAK2P,EAAgBxC,KAAKic,IAAI,EAAGppB,GAE/C,OAAO8oB,CACT,CAWO,SAASX,EAAoBlsB,EAAY2T,EAAS5Q,EAAU6pB,GACjE,MAAM5f,EAASuf,EAAqBvsB,GACpC,OAAO2sB,EAAgB3f,EAAQ2G,EAAS5Q,EAAU6pB,EACpD,CAQO,SAASL,EAAqBvsB,GACnCA,GAAa,IAAAC,KAAcD,GAC3B,IAAIgN,EAAShN,EAAWiN,YACxB,IAAKD,EAAQ,CACX,MAAMogB,EACH,IAAM,EAAAC,gBAAgBC,QAAWttB,EAAWutB,mBAC/CvgB,GAAS,QAAgBogB,GAAOA,EAAMA,EAAMA,EAC9C,CACA,OAAOpgB,CACT,C,yICxJA,MAAMwgB,EAAe,CAAC,EAAG,EAAG,GAMtBC,EAAW,EAuCjB,MAAMC,EAIJ,WAAA9tB,CAAYC,GA2BV,IAAI8tB,EACJ,GAvBA5tB,KAAK6T,aAA8BtT,IAApBT,EAAQ+T,QAAwB/T,EAAQ+T,QAAU,EAMjE7T,KAAK6tB,aAAe/tB,EAAQgtB,aAC5B,QACE,QACE9sB,KAAK6tB,cAML,CAAC/K,EAAGE,IAAMA,EAAIF,IACd,GAEF,qDAKGhjB,EAAQguB,QACX,IAAK,IAAI9f,EAAI,EAAGsE,EAAKtS,KAAK6tB,aAAa5f,OAAS,EAAGD,EAAIsE,IAAMtE,EAC3D,GAAK4f,GAGH,GAAI5tB,KAAK6tB,aAAa7f,GAAKhO,KAAK6tB,aAAa7f,EAAI,KAAO4f,EAAY,CAClEA,OAAartB,EACb,KACF,OALAqtB,EAAa5tB,KAAK6tB,aAAa7f,GAAKhO,KAAK6tB,aAAa7f,EAAI,GAchEhO,KAAK+tB,YAAcH,EAMnB5tB,KAAK4T,QAAU5T,KAAK6tB,aAAa5f,OAAS,EAM1CjO,KAAKkc,aAA6B3b,IAAnBT,EAAQktB,OAAuBltB,EAAQktB,OAAS,KAM/DhtB,KAAKguB,SAAW,UACQztB,IAApBT,EAAQguB,UACV9tB,KAAKguB,SAAWluB,EAAQguB,SACxB,OACE9tB,KAAKguB,SAAS/f,QAAUjO,KAAK6tB,aAAa5f,OAC1C,wDAIJ,MAAMhB,EAASnN,EAAQmN,YAER1M,IAAX0M,GAAyBjN,KAAKkc,SAAYlc,KAAKguB,WACjDhuB,KAAKkc,SAAU,QAAWjP,KAG5B,QACIjN,KAAKkc,SAAWlc,KAAKguB,UAAchuB,KAAKkc,UAAYlc,KAAKguB,SAC3D,+DAOFhuB,KAAKiuB,WAAa,UACQ1tB,IAAtBT,EAAQouB,YACVluB,KAAKiuB,WAAanuB,EAAQouB,WAC1B,OACEluB,KAAKiuB,WAAWhgB,QAAUjO,KAAK6tB,aAAa5f,OAC5C,0DAQJjO,KAAKmuB,eACkB5tB,IAArBT,EAAQkD,SACJlD,EAAQkD,SACPhD,KAAKiuB,WAEJ,KADA,KAER,QACIjuB,KAAKmuB,WAAanuB,KAAKiuB,YACtBjuB,KAAKmuB,YAAcnuB,KAAKiuB,WAC3B,mEAOFjuB,KAAKouB,aAAqB7tB,IAAX0M,EAAuBA,EAAS,KAM/CjN,KAAKquB,gBAAkB,KAMvBruB,KAAKsuB,SAAW,CAAC,EAAG,GAMpBtuB,KAAKuuB,WAAa,CAAC,EAAG,EAAG,EAAG,QAENhuB,IAAlBT,EAAQ0uB,MACVxuB,KAAKquB,gBAAkBvuB,EAAQ0uB,MAAMje,KAAI,CAAC+E,EAAMtR,KAC9C,MAAMC,EAAY,IAAI,IACpBkN,KAAKsd,IAAI,EAAGnZ,EAAK,IACjBnE,KAAKyS,IAAItO,EAAK,GAAK,GAAI,GACvBnE,KAAKsd,IAAI,EAAGnZ,EAAK,IACjBnE,KAAKyS,IAAItO,EAAK,GAAK,GAAI,IAEzB,GAAIrI,EAAQ,CACV,MAAMyhB,EAAsB1uB,KAAK2uB,0BAA0B1hB,EAAQjJ,GACnEC,EAAUO,KAAO2M,KAAKyS,IAAI8K,EAAoBlqB,KAAMP,EAAUO,MAC9DP,EAAUQ,KAAO0M,KAAKsd,IAAIC,EAAoBjqB,KAAMR,EAAUQ,MAC9DR,EAAUU,KAAOwM,KAAKyS,IAAI8K,EAAoB/pB,KAAMV,EAAUU,MAC9DV,EAAUW,KAAOuM,KAAKsd,IAAIC,EAAoB9pB,KAAMX,EAAUW,KAChE,CACA,OAAOX,CAAS,IAETgJ,GACTjN,KAAK4uB,qBAAqB3hB,EAE9B,CAUA,gBAAA4hB,CAAiB5hB,EAAQ6hB,EAAM5qB,GAC7B,MAAMD,EAAYjE,KAAK2uB,0BAA0B1hB,EAAQ6hB,GACzD,IAAK,IAAI9gB,EAAI/J,EAAUO,KAAM8N,EAAKrO,EAAUQ,KAAMuJ,GAAKsE,IAAMtE,EAC3D,IAAK,IAAI+gB,EAAI9qB,EAAUU,KAAMqqB,EAAK/qB,EAAUW,KAAMmqB,GAAKC,IAAMD,EAC3D7qB,EAAS,CAAC4qB,EAAM9gB,EAAG+gB,GAGzB,CASA,+BAAAE,CACErpB,EACA1B,EACAgrB,EACAC,GAEA,IAAIlrB,EAAWM,EAAGG,EACd0qB,EAAkB,KAClBprB,EAAI4B,EAAU,GAAK,EACE,IAArB5F,KAAK+tB,aACPxpB,EAAIqB,EAAU,GACdlB,EAAIkB,EAAU,IAEdwpB,EAAkBpvB,KAAKqvB,mBAAmBzpB,EAAWupB,GAEvD,MAAOnrB,GAAKhE,KAAK6T,QAAS,CAYxB,QAXUtT,IAANgE,QAAyBhE,IAANmE,GACrBH,EAAI4M,KAAKme,MAAM/qB,EAAI,GACnBG,EAAIyM,KAAKme,MAAM5qB,EAAI,GACnBT,GAAY,OAAwBM,EAAGA,EAAGG,EAAGA,EAAGwqB,IAEhDjrB,EAAYjE,KAAK2uB,0BACfS,EACAprB,EACAkrB,GAGAhrB,EAASF,EAAGC,GACd,OAAO,IAEPD,CACJ,CACA,OAAO,CACT,CAOA,SAAAkJ,GACE,OAAOlN,KAAKouB,OACd,CAOA,UAAAtC,GACE,OAAO9rB,KAAK4T,OACd,CAOA,UAAA1Q,GACE,OAAOlD,KAAK6T,OACd,CAQA,SAAAsJ,CAAUnZ,GACR,OAAIhE,KAAKkc,QACAlc,KAAKkc,QAEPlc,KAAKguB,SAAShqB,EACvB,CAQA,aAAAurB,CAAcvrB,GACZ,OAAOhE,KAAK6tB,aAAa7pB,EAC3B,CAOA,cAAAtC,GACE,OAAO1B,KAAK6tB,YACd,CAQA,0BAAA2B,CAA2B5pB,EAAWspB,EAAeC,GACnD,GAAIvpB,EAAU,GAAK5F,KAAK4T,QAAS,CAC/B,GAAyB,IAArB5T,KAAK+tB,YAAmB,CAC1B,MAAMvpB,EAAsB,EAAfoB,EAAU,GACjBjB,EAAsB,EAAfiB,EAAU,GACvB,OAAO,OACLpB,EACAA,EAAO,EACPG,EACAA,EAAO,EACPuqB,EAEJ,CACA,MAAME,EAAkBpvB,KAAKqvB,mBAC3BzpB,EACAupB,GAAcnvB,KAAKuuB,YAErB,OAAOvuB,KAAK2uB,0BACVS,EACAxpB,EAAU,GAAK,EACfspB,EAEJ,CACA,OAAO,IACT,CAQA,4BAAAO,CAA6B7pB,EAAW5B,EAAGkrB,GACzC,GAAIlrB,EAAIhE,KAAK4T,SAAW5P,EAAIhE,KAAK6T,QAC/B,OAAO,KAGT,MAAM6b,EAAa9pB,EAAU,GACvB+pB,EAAa/pB,EAAU,GACvBgqB,EAAahqB,EAAU,GAE7B,GAAI5B,IAAM0rB,EACR,OAAO,OACLC,EACAC,EACAD,EACAC,EACAV,GAIJ,GAAIlvB,KAAK+tB,YAAa,CACpB,MAAM8B,EAAS1e,KAAKic,IAAIptB,KAAK+tB,YAAa/pB,EAAI0rB,GACxClrB,EAAO2M,KAAKme,MAAMK,EAAaE,GAC/BlrB,EAAOwM,KAAKme,MAAMM,EAAaC,GACrC,GAAI7rB,EAAI0rB,EACN,OAAO,OAAwBlrB,EAAMA,EAAMG,EAAMA,EAAMuqB,GAGzD,MAAMzqB,EAAO0M,KAAKme,MAAMO,GAAUF,EAAa,IAAM,EAC/C/qB,EAAOuM,KAAKme,MAAMO,GAAUD,EAAa,IAAM,EACrD,OAAO,OAAwBprB,EAAMC,EAAME,EAAMC,EAAMsqB,EACzD,CAEA,MAAME,EAAkBpvB,KAAKqvB,mBAAmBzpB,EAAW5F,KAAKuuB,YAChE,OAAOvuB,KAAK2uB,0BAA0BS,EAAiBprB,EAAGkrB,EAC5D,CASA,yBAAAP,CAA0B1hB,EAAQjJ,EAAGkrB,GACnClvB,KAAK8vB,uBAAuB7iB,EAAO,GAAIA,EAAO,GAAIjJ,GAAG,EAAOypB,GAC5D,MAAMjpB,EAAOipB,EAAa,GACpB9oB,EAAO8oB,EAAa,GAC1BztB,KAAK8vB,uBAAuB7iB,EAAO,GAAIA,EAAO,GAAIjJ,GAAG,EAAMypB,GAC3D,MAAMhpB,EAAOgpB,EAAa,GACpB7oB,EAAO6oB,EAAa,GAC1B,OAAO,OAAwBjpB,EAAMC,EAAME,EAAMC,EAAMsqB,EACzD,CAMA,kBAAA5C,CAAmB1mB,GACjB,MAAMonB,EAAShtB,KAAKmd,UAAUvX,EAAU,IAClCuM,EAAanS,KAAKuvB,cAAc3pB,EAAU,IAC1C5C,GAAW,QAAOhD,KAAKiD,YAAY2C,EAAU,IAAK5F,KAAKsuB,UAC7D,MAAO,CACLtB,EAAO,IAAMpnB,EAAU,GAAK,IAAO5C,EAAS,GAAKmP,EACjD6a,EAAO,IAAMpnB,EAAU,GAAK,IAAO5C,EAAS,GAAKmP,EAErD,CAUA,kBAAAkd,CAAmBzpB,EAAWupB,GAC5B,MAAMnC,EAAShtB,KAAKmd,UAAUvX,EAAU,IAClCuM,EAAanS,KAAKuvB,cAAc3pB,EAAU,IAC1C5C,GAAW,QAAOhD,KAAKiD,YAAY2C,EAAU,IAAK5F,KAAKsuB,UACvD9pB,EAAOwoB,EAAO,GAAKpnB,EAAU,GAAK5C,EAAS,GAAKmP,EAChDxN,EAAOqoB,EAAO,IAAMpnB,EAAU,GAAK,GAAK5C,EAAS,GAAKmP,EACtD1N,EAAOD,EAAOxB,EAAS,GAAKmP,EAC5BvN,EAAOD,EAAO3B,EAAS,GAAKmP,EAClC,OAAO,OAAe3N,EAAMG,EAAMF,EAAMG,EAAMuqB,EAChD,CAaA,iCAAAY,CAAkC1gB,EAAY8C,EAAY6d,GACxD,OAAOhwB,KAAKiwB,gCACV5gB,EAAW,GACXA,EAAW,GACX8C,GACA,EACA6d,EAEJ,CAeA,+BAAAC,CACE1rB,EACAG,EACAyN,EACA+d,EACAF,GAEA,MAAMhsB,EAAIhE,KAAKmwB,kBAAkBhe,GAC3BuG,EAAQvG,EAAanS,KAAKuvB,cAAcvrB,GACxCgpB,EAAShtB,KAAKmd,UAAUnZ,GACxBhB,GAAW,QAAOhD,KAAKiD,YAAYe,GAAIhE,KAAKsuB,UAElD,IAAIqB,EAAcjX,GAASnU,EAAIyoB,EAAO,IAAO7a,EAAanP,EAAS,GAC/D4sB,EAAclX,GAASsU,EAAO,GAAKtoB,GAAMyN,EAAanP,EAAS,GAUnE,OARIktB,GACFP,GAAa,QAAKA,EAAYjC,GAAY,EAC1CkC,GAAa,QAAKA,EAAYlC,GAAY,IAE1CiC,GAAa,QAAMA,EAAYjC,GAC/BkC,GAAa,QAAMA,EAAYlC,KAG1B,OAAwB1pB,EAAG2rB,EAAYC,EAAYI,EAC5D,CAiBA,sBAAAF,CAAuBvrB,EAAGG,EAAGV,EAAGksB,EAA2BF,GACzD,MAAMhD,EAAShtB,KAAKmd,UAAUnZ,GACxBmO,EAAanS,KAAKuvB,cAAcvrB,GAChChB,GAAW,QAAOhD,KAAKiD,YAAYe,GAAIhE,KAAKsuB,UAElD,IAAIqB,GAAcprB,EAAIyoB,EAAO,IAAM7a,EAAanP,EAAS,GACrD4sB,GAAc5C,EAAO,GAAKtoB,GAAKyN,EAAanP,EAAS,GAUzD,OARIktB,GACFP,GAAa,QAAKA,EAAYjC,GAAY,EAC1CkC,GAAa,QAAKA,EAAYlC,GAAY,IAE1CiC,GAAa,QAAMA,EAAYjC,GAC/BkC,GAAa,QAAMA,EAAYlC,KAG1B,OAAwB1pB,EAAG2rB,EAAYC,EAAYI,EAC5D,CAUA,wBAAArD,CAAyBtd,EAAYrL,EAAGgsB,GACtC,OAAOhwB,KAAK8vB,uBACVzgB,EAAW,GACXA,EAAW,GACXrL,GACA,EACAgsB,EAEJ,CAMA,sBAAAI,CAAuBxqB,GACrB,OAAO5F,KAAK6tB,aAAajoB,EAAU,GACrC,CAUA,WAAA3C,CAAYe,GACV,OAAIhE,KAAKmuB,UACAnuB,KAAKmuB,UAEPnuB,KAAKiuB,WAAWjqB,EACzB,CAMA,gBAAA+nB,CAAiB/nB,GACf,OAAKhE,KAAKquB,gBAKHruB,KAAKquB,gBAAgBrqB,GAJnBhE,KAAKouB,QACRpuB,KAAK2uB,0BAA0B3uB,KAAKouB,QAASpqB,GAC7C,IAGR,CAmBA,iBAAAmsB,CAAkBhe,EAAYke,GAC5B,MAAMrsB,GAAI,QACRhE,KAAK6tB,aACL1b,EACAke,GAAiB,GAEnB,OAAO,QAAMrsB,EAAGhE,KAAK6T,QAAS7T,KAAK4T,QACrC,CAQA,2BAAA0c,CAA4B1qB,EAAW2qB,GACrC,OAAO,QACLA,EACA,EACAA,EAAStiB,OACT,EACAjO,KAAKqvB,mBAAmBzpB,GAE5B,CAMA,oBAAAgpB,CAAqB3hB,GACnB,MAAMgB,EAASjO,KAAK6tB,aAAa5f,OAC3BuiB,EAAiB,IAAIpuB,MAAM6L,GACjC,IAAK,IAAIjK,EAAIhE,KAAK6T,QAAS7P,EAAIiK,IAAUjK,EACvCwsB,EAAexsB,GAAKhE,KAAK2uB,0BAA0B1hB,EAAQjJ,GAE7DhE,KAAKquB,gBAAkBmC,CACzB,EAGF,S,2CCxpBO,MAAMC,EAAmB,GAMnBC,EAAoB,G,gFCH1B,SAASC,EAAmBC,EAAU7tB,GAC3C,MAAM8tB,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,UACnB,OAAO,SAOKprB,EAAWP,EAAYpF,GAC/B,GAAK2F,EAGL,OAAOgrB,EACJvmB,QAAQwmB,EAAQjrB,EAAU,GAAG0L,YAC7BjH,QAAQymB,EAAQlrB,EAAU,GAAG0L,YAC7BjH,QAAQ0mB,EAAQnrB,EAAU,GAAG0L,YAC7BjH,QAAQ2mB,GAAY,WACnB,MAAMhtB,EAAI4B,EAAU,GACdqrB,EAAQluB,EAASgpB,iBAAiB/nB,GACxC,IAAKitB,EACH,MAAM,IAAIC,MACR,yDAGJ,MAAMxsB,EAAIusB,EAAM3T,YAAc1X,EAAU,GAAK,EAC7C,OAAOlB,EAAE4M,UACX,GAEN,CACF,CAOO,SAAS6f,EAAoBC,EAAWruB,GAC7C,MAAMsuB,EAAMD,EAAUnjB,OAChBqjB,EAAmB,IAAIlvB,MAAMivB,GACnC,IAAK,IAAIrjB,EAAI,EAAGA,EAAIqjB,IAAOrjB,EACzBsjB,EAAiBtjB,GAAK2iB,EAAmBS,EAAUpjB,GAAIjL,GAEzD,OAAOwuB,EAA2BD,EACpC,CAMO,SAASC,EAA2BD,GACzC,OAAgC,IAA5BA,EAAiBrjB,OACZqjB,EAAiB,GAEnB,SAOK1rB,EAAWP,EAAYpF,GAC/B,IAAK2F,EACH,OAEF,MAAM4rB,GAAI,QAAc5rB,GAClB6Q,GAAQ,QAAO+a,EAAGF,EAAiBrjB,QACzC,OAAOqjB,EAAiB7a,GAAO7Q,EAAWP,EAAYpF,EAE1D,CACF,CAgBO,SAASwxB,EAAU1qB,GACxB,MAAMF,EAAO,GACb,IAAI6qB,EAAQ,sBAAsBC,KAAK5qB,GACvC,GAAI2qB,EAAO,CAET,MAAME,EAAgBF,EAAM,GAAGG,WAAW,GACpCC,EAAeJ,EAAM,GAAGG,WAAW,GACzC,IAAIE,EACJ,IAAKA,EAAWH,EAAeG,GAAYD,IAAgBC,EACzDlrB,EAAK8G,KAAK5G,EAAIsD,QAAQqnB,EAAM,GAAIjkB,OAAOukB,aAAaD,KAEtD,OAAOlrB,CACT,CAEA,GADA6qB,EAAQ,kBAAkBC,KAAK5qB,GAC3B2qB,EAAO,CAET,MAAMO,EAAOC,SAASR,EAAM,GAAI,IAChC,IAAK,IAAI1jB,EAAIkkB,SAASR,EAAM,GAAI,IAAK1jB,GAAKikB,EAAMjkB,IAC9CnH,EAAK8G,KAAK5G,EAAIsD,QAAQqnB,EAAM,GAAI1jB,EAAEsD,aAEpC,OAAOzK,CACT,CAEA,OADAA,EAAK8G,KAAK5G,GACHF,CACT,C,4IChGA,MAAMsrB,EAAO,IAAI/vB,MAAM,GAMhB,SAASgwB,IACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EACzB,CAOO,SAASC,EAAMC,GACpB,OAAOhoB,EAAIgoB,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EACvC,CASO,SAASC,EAASC,EAAYC,GACnC,MAAMC,EAAKF,EAAW,GAChBG,EAAKH,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAChBS,EAAKT,EAAW,GAChBU,EAAKV,EAAW,GAChBW,EAAKX,EAAW,GAChBY,EAAKZ,EAAW,GAStB,OAPAD,EAAW,GAAKE,EAAKM,EAAKJ,EAAKK,EAC/BT,EAAW,GAAKG,EAAKK,EAAKH,EAAKI,EAC/BT,EAAW,GAAKE,EAAKQ,EAAKN,EAAKO,EAC/BX,EAAW,GAAKG,EAAKO,EAAKL,EAAKM,EAC/BX,EAAW,GAAKE,EAAKU,EAAKR,EAAKS,EAAKP,EACpCN,EAAW,GAAKG,EAAKS,EAAKP,EAAKQ,EAAKN,EAE7BP,CACT,CAaO,SAASloB,EAAIgoB,EAAWxP,EAAGE,EAAGsQ,EAAGrQ,EAAGzE,EAAG/J,GAO5C,OANA6d,EAAU,GAAKxP,EACfwP,EAAU,GAAKtP,EACfsP,EAAU,GAAKgB,EACfhB,EAAU,GAAKrP,EACfqP,EAAU,GAAK9T,EACf8T,EAAU,GAAK7d,EACR6d,CACT,CAQO,SAASiB,EAAaf,EAAYC,GAOvC,OANAD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,CACT,CAWO,SAASgB,EAAMlB,EAAWjjB,GAC/B,MAAM9K,EAAI8K,EAAW,GACf3K,EAAI2K,EAAW,GAGrB,OAFAA,EAAW,GAAKijB,EAAU,GAAK/tB,EAAI+tB,EAAU,GAAK5tB,EAAI4tB,EAAU,GAChEjjB,EAAW,GAAKijB,EAAU,GAAK/tB,EAAI+tB,EAAU,GAAK5tB,EAAI4tB,EAAU,GACzDjjB,CACT,CAQO,SAASokB,EAAOnB,EAAW5Q,GAChC,MAAM0D,EAAMjU,KAAKiU,IAAI1D,GACfqB,EAAM5R,KAAK4R,IAAIrB,GACrB,OAAO6Q,EAASD,EAAWhoB,EAAI6nB,EAAM/M,EAAKrC,GAAMA,EAAKqC,EAAK,EAAG,GAC/D,CASO,SAAS1M,EAAM4Z,EAAW/tB,EAAGG,GAClC,OAAO6tB,EAASD,EAAWhoB,EAAI6nB,EAAM5tB,EAAG,EAAG,EAAGG,EAAG,EAAG,GACtD,CAoBO,SAAS+f,EAAU6N,EAAWoB,EAAIC,GACvC,OAAOpB,EAASD,EAAWhoB,EAAI6nB,EAAM,EAAG,EAAG,EAAG,EAAGuB,EAAIC,GACvD,CAeO,SAASC,EAAQtB,EAAWuB,EAAKC,EAAKC,EAAIC,EAAItS,EAAOuS,EAAKC,GAC/D,MAAMnR,EAAM5R,KAAK4R,IAAIrB,GACf0D,EAAMjU,KAAKiU,IAAI1D,GAOrB,OANA4Q,EAAU,GAAKyB,EAAK3O,EACpBkN,EAAU,GAAK0B,EAAKjR,EACpBuP,EAAU,IAAMyB,EAAKhR,EACrBuP,EAAU,GAAK0B,EAAK5O,EACpBkN,EAAU,GAAK2B,EAAMF,EAAK3O,EAAM8O,EAAMH,EAAKhR,EAAM8Q,EACjDvB,EAAU,GAAK2B,EAAMD,EAAKjR,EAAMmR,EAAMF,EAAK5O,EAAM0O,EAC1CxB,CACT,CAoCO,SAAS6B,EAAYC,EAAQC,GAClC,MAAMC,EAAMC,EAAYF,IACxB,OAAe,IAARC,EAAW,4CAElB,MAAMxR,EAAIuR,EAAO,GACXrR,EAAIqR,EAAO,GACXf,EAAIe,EAAO,GACXpR,EAAIoR,EAAO,GACX7V,EAAI6V,EAAO,GACX5f,EAAI4f,EAAO,GASjB,OAPAD,EAAO,GAAKnR,EAAIqR,EAChBF,EAAO,IAAMpR,EAAIsR,EACjBF,EAAO,IAAMd,EAAIgB,EACjBF,EAAO,GAAKtR,EAAIwR,EAChBF,EAAO,IAAMd,EAAI7e,EAAIwO,EAAIzE,GAAK8V,EAC9BF,EAAO,KAAOtR,EAAIrO,EAAIuO,EAAIxE,GAAK8V,EAExBF,CACT,CAOO,SAASG,EAAYC,GAC1B,OAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EACxC,CAKA,MAAMC,EAAkB,CAAC,IAAK,IAAK,IAAK,IAAK,EAAG,GAQzC,SAASnjB,EAASkjB,GACvB,MAAME,EACJ,UACAF,EACGjkB,KACC,CAAC6E,EAAOpH,IACNmD,KAAKwjB,MAAMvf,EAAQqf,EAAgBzmB,IAAMymB,EAAgBzmB,KAE5D5F,KAAK,MACR,IACF,OAAOssB,CACT,C,iBCzRO,SAASE,IACd,MAAM,IAAI1D,MAAM,iCAClB,C,2BAOA,IAAI2D,EAAc,EAWX,SAASC,EAAO/hB,GACrB,OAAOA,EAAIgiB,SAAWhiB,EAAIgiB,OAAStnB,SAASonB,GAC9C,C","sources":["webpack://@openeo/web-editor/./node_modules/ol/source/Source.js","webpack://@openeo/web-editor/./node_modules/ol/source/Tile.js","webpack://@openeo/web-editor/./node_modules/ol/source/TileEventType.js","webpack://@openeo/web-editor/./node_modules/ol/source/UrlTile.js","webpack://@openeo/web-editor/./node_modules/ol/source/TileImage.js","webpack://@openeo/web-editor/./node_modules/ol/source/Vector.js","webpack://@openeo/web-editor/./node_modules/ol/source/VectorEventType.js","webpack://@openeo/web-editor/./node_modules/ol/source/XYZ.js","webpack://@openeo/web-editor/./node_modules/ol/structs/LRUCache.js","webpack://@openeo/web-editor/./node_modules/ol/structs/PriorityQueue.js","webpack://@openeo/web-editor/./node_modules/ol/structs/RBush.js","webpack://@openeo/web-editor/./node_modules/ol/style/Circle.js","webpack://@openeo/web-editor/./node_modules/ol/style/Fill.js","webpack://@openeo/web-editor/./node_modules/ol/style/Icon.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconImage.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconImageCache.js","webpack://@openeo/web-editor/./node_modules/ol/style/Image.js","webpack://@openeo/web-editor/./node_modules/ol/style/RegularShape.js","webpack://@openeo/web-editor/./node_modules/ol/style/Stroke.js","webpack://@openeo/web-editor/./node_modules/ol/style/Style.js","webpack://@openeo/web-editor/./node_modules/ol/style/Text.js","webpack://@openeo/web-editor/./node_modules/ol/style/flat.js","webpack://@openeo/web-editor/./node_modules/ol/tilecoord.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/TileGrid.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/common.js","webpack://@openeo/web-editor/./node_modules/ol/tileurlfunction.js","webpack://@openeo/web-editor/./node_modules/ol/transform.js","webpack://@openeo/web-editor/./node_modules/ol/util.js"],"sourcesContent":["/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\n/**\n * @api\n * @fileoverview Vector layers can be styled with an object literal containing properties for\n * stroke, fill, image, and text styles.  The types below can be composed into a single object.\n * For example, a style with both stroke and fill properties could look like this:\n *\n *     const style = {\n *       'stroke-color': 'yellow',\n *       'stroke-width': 1.5,\n *       'fill-color': 'orange',\n *     };\n *\n * See details about the available properties depending on what type of symbolizer should be applied:\n *  * {@link module:ol/style/flat~FlatStroke Stroke} - properties for applying a stroke to lines and polygons\n *  * {@link module:ol/style/flat~FlatFill Fill} - properties for filling polygons\n *  * {@link module:ol/style/flat~FlatText Text} - properties for labeling points, lines, and polygons\n *  * {@link module:ol/style/flat~FlatIcon Icon} - properties for rendering points with an icon\n *  * {@link module:ol/style/flat~FlatCircle Circle} - properties for rendering points with a circle\n *  * {@link module:ol/style/flat~FlatShape Shape} - properties for rendering points with a regular shape\n *\n * To conditionally apply styles based on a filter, a list of {@link module:ol/style/flat~Rule rules} can be used.\n * For example, to style points with a big orange circle if the population is greater than 1 million and\n * a smaller blue circle otherwise:\n *\n *     const rules = [\n *       {\n *         filter: ['>', ['get', 'population'], 1_000_000],\n *         style: {\n *           'circle-radius': 10,\n *           'circle-fill-color': 'red',\n *         }\n *       },\n *       {\n *         else: true,\n *         style: {\n *           'circle-radius': 5,\n *           'circle-fill-color': 'blue',\n *         },\n *       },\n *     ];\n */\n\n/**\n * A literal boolean (e.g. `true`) or an expression that evaluates to a boolean (e.g. `['>', ['get', 'population'], 1_000_000]`).\n *\n * @typedef {boolean|Array} BooleanExpression\n */\n\n/**\n * A literal string (e.g. `'hello'`) or an expression that evaluates to a string (e.g. `['get', 'greeting']`).\n *\n * @typedef {string|Array} StringExpression\n */\n\n/**\n * A literal number (e.g. `42`) or an expression that evaluates to a number (e.g. `['+', 40, 2]`).\n *\n * @typedef {number|Array} NumberExpression\n */\n\n/**\n * A CSS named color (e.g. `'blue'`), an array of 3 RGB values (e.g. `[0, 255, 0]`), an array of 4 RGBA values\n * (e.g. `[0, 255, 0, 0.5]`), or an expression that evaluates to one of these color types (e.g. `['get', 'color']`).\n *\n * @typedef {import(\"../color.js\").Color|string|Array} ColorExpression\n */\n\n/**\n * An array of numbers (e.g. `[1, 2, 3]`) or an expression that evaluates to the same (e.g. `['get', 'values']`).\n *\n * @typedef {Array<number>|Array} NumberArrayExpression\n */\n\n/**\n * An array of two numbers (e.g. `[10, 20]`) or an expression that evaluates to the same (e.g. `['get', 'size']`).\n *\n * @typedef {number|Array<number>|Array} SizeExpression\n */\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>|Array<Rule>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {ColorExpression} [fill-color] The fill color.\n * @property {StringExpression} [fill-pattern-src] Fill pattern image URL.\n * @property {SizeExpression} [fill-pattern-size] Fill pattern image size in pixels.\n * Can be used together with `fill-pattern-offset` to define the sub-rectangle to use\n * from a fill pattern image sprite sheet.\n * @property {SizeExpression} [fill-pattern-offset] Fill pattern image offset in pixels.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {ColorExpression} [stroke-color] The stroke color.\n * @property {NumberExpression} [stroke-width] Stroke pixel width.\n * @property {StringExpression} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {StringExpression} [text-value] Text content (with `\\n` for line breaks).\n * @property {StringExpression} [text-font='10px sans-serif'] Font style as [CSS `font`](https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font) value.\n * @property {NumberExpression} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {NumberExpression} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {NumberExpression} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {BooleanExpression} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {StringExpression} [text-placement='point'] Text placement.\n * @property {NumberExpression} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {SizeExpression} [text-scale] Scale.\n * @property {BooleanExpression} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {NumberExpression} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {StringExpression} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {StringExpression} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {StringExpression} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {NumberArrayExpression} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {ColorExpression} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {ColorExpression} [text-background-fill-color] The fill color.\n * @property {ColorExpression} [text-stroke-color] The stroke color.\n * @property {StringExpression} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-stroke-width] Stroke pixel width.\n * @property {ColorExpression} [text-background-stroke-color] The stroke color.\n * @property {StringExpression} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [text-background-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {NumberExpression} [text-background-stroke-width] Stroke pixel width.\n * @property {import(\"./Style.js\").DeclutterMode} [text-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Icon style properties applied to point features. `icon-src` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {NumberArrayExpression} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {NumberArrayExpression} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {NumberExpression} [icon-opacity=1] Opacity of the icon.\n * @property {SizeExpression} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {NumberExpression} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"./Style.js\").DeclutterMode} [icon-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {ColorExpression} [shape-fill-color] The fill color.\n * @property {ColorExpression} [shape-stroke-color] The stroke color.\n * @property {NumberExpression} [shape-stroke-width] Stroke pixel width.\n * @property {StringExpression} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [shape-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {NumberArrayExpression} [shape-displacement=[0,0]] Displacement of the shape\n * @property {NumberExpression} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {BooleanExpression} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {SizeExpression} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius` and `shape-radius2`.\n * @property {import(\"./Style.js\").DeclutterMode} [shape-declutter-mode] Declutter mode.\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {ColorExpression} [circle-fill-color] The fill color.\n * @property {ColorExpression} [circle-stroke-color] The stroke color.\n * @property {NumberExpression} [circle-stroke-width] Stroke pixel width.\n * @property {StringExpression} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {StringExpression} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {NumberArrayExpression} [circle-stroke-line-dash] Line dash pattern.\n * @property {NumberExpression} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {NumberExpression} [circle-stroke-miter-limit=10] Miter limit.\n * @property {NumberArrayExpression} [circle-displacement=[0,0]] displacement\n * @property {SizeExpression} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {NumberExpression} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {BooleanExpression} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import(\"./Style.js\").DeclutterMode} [circle-declutter-mode] Declutter mode\n * @property {NumberExpression} [z-index] The zIndex of the style.\n */\n\n/**\n * These default style properties are applied when no other style is given.\n *\n * @typedef {Object} DefaultStyle\n * @property {string} fill-color `'rgba(255,255,255,0.4)'`\n * @property {string} stroke-color `'#3399CC'`\n * @property {number} stroke-width `1.25`\n * @property {number} circle-radius `5`\n * @property {string} circle-fill-color `'rgba(255,255,255,0.4)'`\n * @property {number} circle-stroke-width `1.25`\n * @property {string} circle-stroke-color `'#3399CC'`\n */\n\n/**\n * @return {DefaultStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n\n/**\n * A rule is used to conditionally apply a style.  If the rule's filter evaluates to true,\n * the style will be applied.\n *\n * @typedef {Object} Rule\n * @property {FlatStyle|Array<FlatStyle>} style The style to be applied if the filter matches.\n * @property {import(\"../expr/expression.js\").EncodedExpression} [filter] The filter used\n * to determine if a style applies.  If no filter is included, the rule always applies\n * (unless it is an else rule).\n * @property {boolean} [else] If true, the rule applies only if no other previous rule applies.\n * If the else rule also has a filter, the rule will not apply if the filter does not match.\n */\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.4';\n"],"names":["Source","constructor","options","super","this","projection","get","attributions_","adaptAttributions","attributions","attributionsCollapsible_","undefined","attributionsCollapsible","loading","state_","state","wrapX_","wrapX","interpolate_","interpolate","viewResolver","viewRejector","self","viewPromise_","Promise","resolve","reject","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getState","getWrapX","getInterpolate","refresh","changed","setAttributions","setState","attributionLike","Array","isArray","frameState","TileSource","on","once","un","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileGrid","tileSize","getTileSize","getMinZoom","tileCache","cacheSize","tmpSize","key_","key","tileOptions","transition","zDirection","canExpireCache","expireCache","usedTiles","getTileCacheForProjection","forEachLoadedTile","z","tileRange","callback","tile","tileCoordKey","loaded","covered","x","minX","maxX","y","minY","maxY","containsKey","LOADED","getGutterForProjection","getKey","setKey","getOpaque","getTileGridForProjection","getTile","pixelRatio","getTileGrid","sourceProjection","equivalent","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","tileCoord","isGlobal","clear","updateCacheSize","tileCount","highWaterMark","useTile","TileSourceEvent","type","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile","generateTileUrlFunction_","tileUrlFunction","prototype","tileLoadFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","Object","getPrototypeOf","bind","getUrls","handleTileChange","event","uid","tileState","TileState","LOADING","TileEventType","ERROR","dispatchEvent","setTileLoadFunction","setTileUrlFunction","pruneExceptNewestZ","join","TileImage","defaultTileLoadFunction","crossOrigin","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","id","getGutter","thisProj","projKey","TileCache","createTile_","urlTileCoord","tileUrl","IDLE","EMPTY","addEventListener","EventType","CHANGE","getTileInternal","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","interimTile","refreshInterimChain","replace","set","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","imageTile","src","getImage","VectorSourceEvent","feature","features","VectorSource","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","remove","setupChangeEvents_","geometry","getGeometry","extent","getExtent","insert","ADDFEATURE","handleFeatureChange_","PROPERTYCHANGE","valid","getId","String","indexedFeature","push","addFeatures","extents","newFeatures","geometryFeatures","i","length","load","hasListener","modifyingCollection","evt","REMOVEFEATURE","ADD","element","REMOVE","removeFeature","fast","featureId","keys","forEach","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","result","getFeaturesCollection","getFeatures","slice","getAll","values","getFeaturesAtCoordinate","getFeaturesInExtent","multiWorld","canWrapX","getInExtent","concat","map","anExtent","getClosestFeatureToCoordinate","filter","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","getFeatureById","toString","getFeatureByUid","getFormat","getOverlaps","getUrl","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","isEmpty","getLength","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","ii","extentToLoad","alreadyLoaded","object","FEATURESLOADSTART","call","FEATURESLOADEND","FEATURESLOADERROR","removeLoadedExtent","obj","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","idString","splice","indexOf","removed","includes","setLoader","XYZ","maxResolution","maxZoom","minZoom","gutter_","gutter","LRUCache","count_","entries_","oldest_","newest_","getCount","keep","pop","hasOwnProperty","f","entry","value_","newer","older","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","peek","value","setSize","size","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","index","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","RBush","maxEntries","rbush_","items_","item","items","l","bbox","all","search","forEach_","data","toJSON","rbush","CircleStyle","radius","points","fill","stroke","scale","rotation","rotateWithView","displacement","declutterMode","clone","getScale","style","getFill","getStroke","getRadius","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","setOpacity","getOpacity","setRadius","radius_","Fill","patternImage_","color_","color","setColor","getColor","patternImage","offset","ready","then","getImageState","calculateScale","width","height","wantedWidth","wantedHeight","Icon","opacity","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","image","img","imageState","cacheKey","complete","iconImage_","offset_","offsetOrigin_","offsetOrigin","origin_","size_","HTMLImageElement","initialOptions_","onload","unlistenImageChange","imageSize","getSize","setScale","listenImageChange","getSrc","getAnchor","getScaleArray","setAnchor","getPixelRatio","getImageSize","getHitDetectionImage","getOrigin","iconImageSize","getWidth","getHeight","listener","removeEventListener","taintedTestContext","IconImage","hitDetectionImage_","image_","canvas_","imageState_","src_","tainted_","ready_","initializeImage_","Image","isTainted_","willReadFrequently","drawImage","getImageData","e","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","context","fillRect","canvas","catch","document","createElement","ceil","ctx","getContext","globalCompositeOperation","fillStyle","onChange","pattern","iconImage","getPattern","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","expire","getCacheKey","createPattern","maxCacheSize","colorString","shared","ImageStyle","opacity_","rotateWithView_","rotation_","scale_","scaleArray_","displacement_","declutterMode_","setDisplacement","setRotateWithView","setRotation","RegularShape","canvases_","hitDetectionCanvas_","fill_","points_","radius2_","radius2","angle_","angle","stroke_","renderOptions_","getPoints","getRadius2","getAngle","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","tmp","alpha","PI","a","sin","b","d","miterRatio","k","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","max","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","add","maxRadius","translate","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","cos","closePath","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","text","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","setZIndex","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","Text","font_","font","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","createOrUpdate","getKeyZXY","fromKey","split","Number","hash","withinExtentAndZ","getMaxZoom","getFullTileRange","containsXY","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","center","getTileCoordCenter","projectionExtent","extentFromProjection","worldWidth","worldsAway","getTileCoordForCoordAndZ","createForExtent","corner","resolutions","resolutionsFromExtent","origin","createXYZ","xyzOptions","gridOptions","pow","half","METERS_PER_UNIT","degrees","getMetersPerUnit","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","resolutions_","origins","zoomFactor_","origins_","tileSizes_","tileSizes","tileSize_","extent_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","min","restrictedTileRange","getTileRangeForExtentAndZ","calculateTileRanges_","forEachTileCoord","zoom","j","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordExtent","floor","getResolution","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","Error","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","expandUrl","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","parseInt","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","setFromArray","apply","rotate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","target","source","det","determinant","mat","matrixPrecision","transformString","round","abstract","uidCounter_","getUid","ol_uid"],"sourceRoot":""}
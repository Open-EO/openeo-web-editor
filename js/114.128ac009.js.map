{"version":3,"file":"js/114.128ac009.js","mappings":"2JAOA,SACIA,YAAa,cACbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,gB,4DCZfC,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAiBxCI,EAA2B,SAAUC,GAKrC,SAASD,EAAUE,GACf,IAAIC,EAAQF,EAAOR,KAAKI,OAASA,KA6BjC,OAxBAM,EAAMC,UAAY,KAKlBD,EAAME,SAAWC,SAASC,cAAc,OACxCJ,EAAME,SAASG,MAAMC,SAAW,WAChCN,EAAME,SAASG,MAAME,cAAgB,OACrCP,EAAME,SAASH,UAAY,UAAYA,EAKvCC,EAAMQ,KAAO,KAKbR,EAAMS,YAAc,KAKpBT,EAAMU,UAAY,KACXV,CACX,CA2EA,OA9GArB,EAAUkB,EAAWC,GAuCrBD,EAAUT,UAAUuB,gBAAkB,WAClCjB,KAAKkB,OAAO,KAChB,EAIAf,EAAUT,UAAUyB,QAAU,WAC1B,IAAIC,EAAapB,KAAKe,YAClBM,EAAWrB,KAAKgB,UAChBM,EAAK,KACLX,EAAQX,KAAKQ,SAASG,MAC1BA,EAAMY,KAAOC,KAAKC,IAAIL,EAAW,GAAIC,EAAS,IAAMC,EACpDX,EAAMe,IAAMF,KAAKC,IAAIL,EAAW,GAAIC,EAAS,IAAMC,EACnDX,EAAMgB,MAAQH,KAAKI,IAAIP,EAAS,GAAKD,EAAW,IAAME,EACtDX,EAAMkB,OAASL,KAAKI,IAAIP,EAAS,GAAKD,EAAW,IAAME,CAC3D,EAIAnB,EAAUT,UAAUwB,OAAS,SAAUY,GACnC,GAAI9B,KAAKc,KAAM,CACXd,KAAKc,KAAKiB,sBAAsBC,YAAYhC,KAAKQ,UACjD,IAAIG,EAAQX,KAAKQ,SAASG,MAC1BA,EAAMY,KAAO,UACbZ,EAAMe,IAAM,UACZf,EAAMgB,MAAQ,UACdhB,EAAMkB,OAAS,SACnB,CACA7B,KAAKc,KAAOgB,EACR9B,KAAKc,MACLd,KAAKc,KAAKiB,sBAAsBE,YAAYjC,KAAKQ,SAEzD,EAKAL,EAAUT,UAAUwC,UAAY,SAAUd,EAAYC,GAClDrB,KAAKe,YAAcK,EACnBpB,KAAKgB,UAAYK,EACjBrB,KAAKmC,yBACLnC,KAAKmB,SACT,EAIAhB,EAAUT,UAAUyC,uBAAyB,WACzC,IAAIf,EAAapB,KAAKe,YAClBM,EAAWrB,KAAKgB,UAChBoB,EAAS,CACThB,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAEzBiB,EAAcD,EAAON,IAAI9B,KAAKc,KAAKwB,+BAAgCtC,KAAKc,MAE5EuB,EAAY,GAAKA,EAAY,GAAGE,QAC3BvC,KAAKO,UAINP,KAAKO,UAAUiC,eAAe,CAACH,IAH/BrC,KAAKO,UAAY,IAAI,KAAQ,CAAC8B,GAKtC,EAIAlC,EAAUT,UAAU+C,YAAc,WAC9B,OAAOzC,KAAKO,SAChB,EACOJ,CACX,CAhH8B,CAgH5B,KACF,S,gDClIIlB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAgBxC2C,EAA6B,SAAUtC,GASvC,SAASsC,EAAYC,EAAMC,EAA2BC,EAAgBC,GAClE,IAAIxC,EAAQF,EAAOR,KAAKI,KAAM2C,IAAS3C,KAsBvC,OAfAM,EAAMyC,sBAAwBH,EAM9BtC,EAAM0C,WAAaH,EAQnBvC,EAAM2C,QAAUH,EACTxC,CACX,CACA,OAjCArB,EAAUyD,EAAatC,GAiChBsC,CACX,CAnCgC,CAmC9B,MACF,S,mCCjDA,SAMIQ,UAAW,YAMXC,WAAY,aAQZC,WAAY,aAQZC,YAAa,cAQbC,eAAgB,iB,mCCjCpB,IAAIC,EAA+B,WAC/B,SAASA,IACT,CAuFA,OA9EAA,EAAc7D,UAAU8D,WAAa,SAAUC,EAAUC,EAASC,EAAUC,GAAwB,EAMpGL,EAAc7D,UAAUmE,aAAe,SAAUJ,GAAY,EAM7DF,EAAc7D,UAAUoE,SAAW,SAAUnD,GAAS,EAKtD4C,EAAc7D,UAAUqE,WAAa,SAAUC,EAAgBN,GAAW,EAK1EH,EAAc7D,UAAUuE,YAAc,SAAUP,EAAS/C,GAAS,EAKlE4C,EAAc7D,UAAUwE,uBAAyB,SAAUC,EAA4BT,GAAW,EAKlGH,EAAc7D,UAAU0E,eAAiB,SAAUC,EAAoBX,GAAW,EAKlFH,EAAc7D,UAAU4E,oBAAsB,SAAUC,EAAyBb,GAAW,EAK5FH,EAAc7D,UAAU8E,eAAiB,SAAUC,EAAoBf,GAAW,EAKlFH,EAAc7D,UAAUgF,iBAAmB,SAAUC,EAAsBjB,GAAW,EAKtFH,EAAc7D,UAAUkF,UAAY,SAAUC,EAAenB,GAAW,EAKxEH,EAAc7D,UAAUoF,YAAc,SAAUC,EAAiBrB,GAAW,EAK5EH,EAAc7D,UAAUsF,SAAW,SAAUvB,EAAUC,GAAW,EAKlEH,EAAc7D,UAAUuF,mBAAqB,SAAUC,EAAWC,GAAe,EAKjF5B,EAAc7D,UAAU0F,cAAgB,SAAUC,EAAYC,GAA8B,EAK5F/B,EAAc7D,UAAU6F,aAAe,SAAUC,EAAWF,GAA8B,EACnF/B,CACX,CA1FkC,GA2FlC,S,mQClBWkC,EAAc,kBAKdC,EAAmB,OAKnBC,EAAiB,QAKjBC,EAAkB,GAKlBC,EAAwB,EAKxBC,EAAkB,QAKlBC,EAAoB,GAKpBC,EAAqB,OAKrBC,EAAmB,SAKnBC,EAAsB,SAKtBC,EAAiB,CAAC,EAAG,EAAG,EAAG,GAK3BC,EAAmB,EAInBC,EAAe,IAAI,IASnBC,EAAa,IAAI,IAC5BA,EAAWC,QAAU,WACjBC,EAAQC,KAAK,4BACjB,EAIA,IAIIC,EAJAC,EAAiB,KAQVC,EAAc,CAAC,EAKfC,EAAe,WACtB,IAKIC,EAAUC,EALVC,EAAU,IACVC,EAAO,QACPC,EAAiB,CAAC,YAAa,SAC/BC,EAAMD,EAAeE,OACrBC,EAAO,2BAQX,SAASC,EAAYC,EAAWC,EAAYC,GAExC,IADA,IAAIC,GAAY,EACPC,EAAI,EAAGA,EAAIR,IAAOQ,EAAG,CAC1B,IAAIC,EAAgBV,EAAeS,GAEnC,GADAZ,EAAiBc,EAAiBN,EAAY,IAAMC,EAAa,IAAMP,EAAOW,EAAeP,GACzFI,GAAcG,EAAe,CAC7B,IAAIjG,EAAQkG,EAAiBN,EACzB,IACAC,EACA,IACAP,EACAQ,EACA,IACAG,EAAeP,GAGnBK,EAAYA,GAAa/F,GAASoF,CACtC,CACJ,CACA,QAAIW,CAIR,CACA,SAASI,IAGL,IAFA,IAAIC,GAAO,EACPC,EAAQ3B,EAAa4B,UAChBN,EAAI,EAAGO,EAAKF,EAAMZ,OAAQO,EAAIO,IAAMP,EAAG,CAC5C,IAAIQ,EAAOH,EAAML,GACbtB,EAAa+B,IAAID,GAAQnB,IACrBM,EAAYe,MAAMrI,KAAMmI,EAAKG,MAAM,SACnC,QAAM1B,GAEND,EAAiB,KACjBD,OAAc6B,EACdlC,EAAamC,IAAIL,EAAMnB,KAGvBX,EAAamC,IAAIL,EAAM9B,EAAa+B,IAAID,GAAQ,GAAG,GACnDJ,GAAO,GAGnB,CACIA,IACAU,cAAc3B,GACdA,OAAWyB,EAEnB,CACA,OAAO,SAAUG,GACb,IAAIP,GAAO,OAAkBO,GAC7B,GAAKP,EAIL,IADA,IAAIQ,EAAWR,EAAKQ,SACXhB,EAAI,EAAGO,EAAKS,EAASvB,OAAQO,EAAIO,IAAMP,EAAG,CAC/C,IAAIiB,EAASD,EAAShB,GAClBkB,EAAMV,EAAKxH,MAAQ,KAAOwH,EAAKW,OAAS,KAAOF,OACrBL,IAA1BlC,EAAa+B,IAAIS,KACjBxC,EAAamC,IAAIK,EAAK7B,GAAS,GAC1BM,EAAYa,EAAKxH,MAAOwH,EAAKW,OAAQF,KACtCvC,EAAamC,IAAIK,EAAK,GAAG,QACRN,IAAbzB,IACAA,EAAWiC,YAAYjB,EAAO,MAI9C,CACJ,CACH,CAjFyB,GAsFfkB,EAAoB,WAI3B,IAAIC,EACJ,OAAO,SAAUP,GACb,IAAI7G,EAAS+E,EAAY8B,GACzB,QAAcH,GAAV1G,EAAqB,CACrB,GAAI,KAAyB,CACzB,IAAIsG,GAAO,OAAkBO,GACzBQ,EAAUC,EAAYT,EAAU,MAChCU,EAAaC,MAAMC,OAAOnB,EAAKiB,aAC7B,IACAE,OAAOnB,EAAKiB,YAClBvH,EACIuH,GACKF,EAAQK,wBAA0BL,EAAQM,yBACvD,MAESP,IACDA,EAAiBxI,SAASC,cAAc,OACxCuI,EAAeQ,UAAY,IAC3BR,EAAetI,MAAM+I,UAAY,IACjCT,EAAetI,MAAMgJ,UAAY,OACjCV,EAAetI,MAAMkB,OAAS,OAC9BoH,EAAetI,MAAMiJ,QAAU,IAC/BX,EAAetI,MAAMkJ,OAAS,OAC9BZ,EAAetI,MAAMC,SAAW,WAChCqI,EAAetI,MAAMmJ,QAAU,QAC/Bb,EAAetI,MAAMY,KAAO,YAEhC0H,EAAetI,MAAMwH,KAAOO,EAC5BjI,SAASsJ,KAAK9H,YAAYgH,GAC1BpH,EAASoH,EAAee,aACxBvJ,SAASsJ,KAAK/H,YAAYiH,GAE9BrC,EAAY8B,GAAY7G,CAC5B,CACA,OAAOA,CACX,CACH,CAxC8B,GA8C/B,SAASsH,EAAYhB,EAAMd,GAQvB,OAPKV,IACDA,GAAiB,QAAsB,EAAG,IAE1CwB,GAAQzB,IACRC,EAAewB,KAAOA,EACtBzB,EAAcC,EAAewB,MAE1BxB,EAAewC,YAAY9B,EACtC,CAMO,SAASQ,EAAiBM,EAAMd,GACnC,OAAO8B,EAAYhB,EAAMd,GAAM1F,KACnC,CAQO,SAASsI,EAAyB9B,EAAMd,EAAM6C,GACjD,GAAI7C,KAAQ6C,EACR,OAAOA,EAAM7C,GAEjB,IAAI1F,EAAQ0F,EACPiB,MAAM,MACN6B,QAAO,SAAUC,EAAMC,GAAQ,OAAO7I,KAAK8I,IAAIF,EAAMvC,EAAiBM,EAAMkC,GAAQ,GAAG,GAE5F,OADAH,EAAM7C,GAAQ1F,EACPA,CACX,CAMO,SAAS4I,EAAkBC,EAAWC,GAQzC,IAPA,IAAIC,EAAS,GACTC,EAAU,GACVC,EAAa,GACbjJ,EAAQ,EACRkJ,EAAY,EACZhJ,EAAS,EACTuH,EAAa,EACRzB,EAAI,EAAGO,EAAKuC,EAAOrD,OAAQO,GAAKO,EAAIP,GAAK,EAAG,CACjD,IAAIN,EAAOoD,EAAO9C,GAClB,GAAa,OAATN,GAAiBM,IAAMO,EAA3B,CAOA,IAAIC,EAAOsC,EAAO9C,EAAI,IAAM6C,EAAUrC,KAClC2C,EAAejD,EAAiBM,EAAMd,GAC1CqD,EAAOK,KAAKD,GACZD,GAAaC,EACb,IAAIE,EAAgBhC,EAAkBb,GACtCwC,EAAQI,KAAKC,GACb5B,EAAa5H,KAAK8I,IAAIlB,EAAY4B,EAPlC,MALIrJ,EAAQH,KAAK8I,IAAI3I,EAAOkJ,GACxBD,EAAWG,KAAKF,GAChBA,EAAY,EACZhJ,GAAUuH,CAUlB,CACA,MAAO,CAAEzH,MAAOA,EAAOE,OAAQA,EAAQ6I,OAAQA,EAAQC,QAASA,EAASC,WAAYA,EACzF,CA2BO,SAASK,EAAiBhI,EAASiI,EAAWC,EAASC,EAAcC,EAASC,EAASC,EAAGC,EAAGC,EAAGC,EAAGC,GACtG1I,EAAQ2I,OACQ,IAAZT,IACAlI,EAAQ4I,aAAeV,GAEvBD,GACAjI,EAAQ6I,aAAazD,MAAMpF,EAASiI,GAEnB,EAAea,qBAEhC9I,EAAQ+I,UAAUP,EAAGC,GACrBzI,EAAQ0I,MAAMA,EAAM,GAAIA,EAAM,IAC9BM,EAA8C,EAAgBhJ,IAEzD0I,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEhC1I,EAAQ+I,UAAUP,EAAGC,GACrBzI,EAAQ0I,MAAMA,EAAM,GAAIA,EAAM,IAC9B1I,EAAQiJ,UAC2D,EAAgBb,EAASC,EAASC,EAAGC,EAAG,EAAG,EAAGD,EAAGC,IAIpHvI,EAAQiJ,UAC2D,EAAgBb,EAASC,EAASC,EAAGC,EAAGC,EAAGC,EAAGH,EAAII,EAAM,GAAIH,EAAIG,EAAM,IAE7I1I,EAAQkJ,SACZ,CAKA,SAASF,EAAyBG,EAAOnJ,GAErC,IADA,IAAI8I,EAAsBK,EAAML,oBACvBpE,EAAI,EAAGO,EAAK6D,EAAoB3E,OAAQO,EAAIO,EAAIP,GAAK,EACtDnI,MAAM6M,QAAQN,EAAoBpE,EAAI,IACtC1E,EAAQ8I,EAAoBpE,IAAIU,MAAMpF,EAAS8I,EAAoBpE,EAAI,IAGvE1E,EAAQ8I,EAAoBpE,IAAMoE,EAAoBpE,EAAI,EAGtE,C,+HCrbI1I,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GA0BxCuM,EAA+B,SAAUlM,GAQzC,SAASkM,EAAcC,EAAWC,EAAWC,EAAYC,GACrD,IAAIpM,EAAQF,EAAOR,KAAKI,OAASA,KAoEjC,OA/DAM,EAAMiM,UAAYA,EAMlBjM,EAAMkM,UAAYA,EAKlBlM,EAAMoM,WAAaA,EAKnBpM,EAAMqM,aAAe,EAMrBrM,EAAMmM,WAAaA,EAKnBnM,EAAMsM,2BAA6B,KAKnCtM,EAAMuM,2BAA6B,KAKnCvM,EAAMwM,mBAAqB,KAK3BxM,EAAMyM,aAAe,GAKrBzM,EAAM+B,YAAc,GAKpB/B,EAAM0M,eAAiB,GAKvB1M,EAAM2M,yBAA2B,GAKjC3M,EAAM4M,MAA8D,CAAG,EAChE5M,CACX,CAgdA,OA7hBArB,EAAUqN,EAAelM,GAmFzBkM,EAAc5M,UAAUyN,gBAAkB,SAAUC,GAChD,IAAIV,EAAa1M,KAAK0M,WACtB,OAAqB,GAAdA,EACDU,EACAA,EAAUtL,KAAI,SAAUuL,GACtB,OAAOA,EAAOX,CAClB,GACR,EAOAJ,EAAc5M,UAAU4N,2BAA6B,SAAUC,EAAiBC,GAK5E,IAJA,IAAIC,EAASzN,KAAK0N,uBACdC,EAAW3N,KAAKgN,eAChB3K,EAAcrC,KAAKqC,YACnBuL,EAAQvL,EAAY+E,OACfO,EAAI,EAAGO,EAAKqF,EAAgBnG,OAAQO,EAAIO,EAAIP,GAAK6F,EACtDG,EAAS,GAAKJ,EAAgB5F,GAC9BgG,EAAS,GAAKJ,EAAgB5F,EAAI,IAC9B,QAAmB8F,EAAQE,KAC3BtL,EAAYuL,KAAWD,EAAS,GAChCtL,EAAYuL,KAAWD,EAAS,IAGxC,OAAOC,CACX,EAWAtB,EAAc5M,UAAUmO,0BAA4B,SAAUN,EAAiBO,EAAQC,EAAKP,EAAQQ,EAAQC,GACxG,IAAI5L,EAAcrC,KAAKqC,YACnBuL,EAAQvL,EAAY+E,OACpBqG,EAASzN,KAAK0N,uBACdO,IACAH,GAAUN,GAEd,IAII7F,EAAGuG,EAASC,EAJZC,EAAab,EAAgBO,GAC7BO,EAAad,EAAgBO,EAAS,GACtCQ,EAAYtO,KAAKgN,eACjBuB,GAAU,EAEd,IAAK5G,EAAImG,EAASN,EAAQ7F,EAAIoG,EAAKpG,GAAK6F,EACpCc,EAAU,GAAKf,EAAgB5F,GAC/B2G,EAAU,GAAKf,EAAgB5F,EAAI,GACnCwG,GAAU,QAAuBV,EAAQa,GACrCH,IAAYD,GACRK,IACAlM,EAAYuL,KAAWQ,EACvB/L,EAAYuL,KAAWS,EACvBE,GAAU,GAEdlM,EAAYuL,KAAWU,EAAU,GACjCjM,EAAYuL,KAAWU,EAAU,IAE5BH,IAAY,kBACjB9L,EAAYuL,KAAWU,EAAU,GACjCjM,EAAYuL,KAAWU,EAAU,GACjCC,GAAU,GAGVA,GAAU,EAEdH,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBJ,EAAUC,EAOd,OAJKH,GAAUO,GAAY5G,IAAMmG,EAASN,KACtCnL,EAAYuL,KAAWQ,EACvB/L,EAAYuL,KAAWS,GAEpBT,CACX,EASAtB,EAAc5M,UAAU8O,uBAAyB,SAAUjB,EAAiBO,EAAQW,EAAMjB,EAAQkB,GAC9F,IAAK,IAAI/G,EAAI,EAAGO,EAAKuG,EAAKrH,OAAQO,EAAIO,IAAMP,EAAG,CAC3C,IAAIoG,EAAMU,EAAK9G,GACXgH,EAAa3O,KAAK6N,0BAA0BN,EAAiBO,EAAQC,EAAKP,GAAQ,GAAO,GAC7FkB,EAAY3D,KAAK4D,GACjBb,EAASC,CACb,CACA,OAAOD,CACX,EAOAxB,EAAc5M,UAAU8D,WAAa,SAAUC,EAAUC,EAASC,EAAUC,GACxE5D,KAAK4O,cAAcnL,EAAUC,GAC7B,IAGI6J,EAAiBoB,EAAYD,EAAaG,EAC1Cf,EAJAnL,EAAOc,EAASqL,UAChBtB,EAAS/J,EAASsL,YAClBC,EAAehP,KAAKqC,YAAY+E,OAGpC,OAAQzE,GACJ,IAAK,eACD4K,EACgE,EAAW0B,6BAC3EJ,EAAe,GACf,IAAIK,EACwD,EAAWC,WACvErB,EAAS,EACT,IAAK,IAAInG,EAAI,EAAGO,EAAKgH,EAAM9H,OAAQO,EAAIO,IAAMP,EAAG,CAC5C,IAAIyH,EAAS,GACbtB,EAAS9N,KAAKwO,uBAAuBjB,EAAiBO,EAAQoB,EAAMvH,GAAI6F,EAAQ4B,GAChFP,EAAa9D,KAAKqE,EACtB,CACApP,KAAK+M,aAAahC,KAAK,CACnB,YACAiE,EACAH,EACApL,EACAE,EACA,OAEJ3D,KAAKiN,yBAAyBlC,KAAK,CAC/B,YACAiE,EACAH,EACApL,EACAG,GAAwBD,EACxB,OAEJ,MACJ,IAAK,UACL,IAAK,kBACD+K,EAAc,GACdnB,EACY,WAAR5K,EAC6D,EAAWsM,6BAClExL,EAAS4L,qBACnBvB,EAAS9N,KAAKwO,uBAAuBjB,EAAiB,EACiD,EAAW+B,UAAW9B,EAAQkB,GACrI1O,KAAK+M,aAAahC,KAAK,CACnB,YACAiE,EACAN,EACAjL,EACAE,EACA,OAEJ3D,KAAKiN,yBAAyBlC,KAAK,CAC/B,YACAiE,EACAN,EACAjL,EACAG,GAAwBD,EACxB,OAEJ,MACJ,IAAK,aACL,IAAK,SACD4J,EAAkB9J,EAAS4L,qBAC3BV,EAAa3O,KAAK6N,0BAA0BN,EAAiB,EAAGA,EAAgBnG,OAAQoG,GAAQ,GAAO,GACvGxN,KAAK+M,aAAahC,KAAK,CACnB,YACAiE,EACAL,EACAlL,EACAE,EACA,OAEJ3D,KAAKiN,yBAAyBlC,KAAK,CAC/B,YACAiE,EACAL,EACAlL,EACAG,GAAwBD,EACxB,OAEJ,MACJ,IAAK,aACD4J,EAAkB9J,EAAS4L,qBAC3BV,EAAa3O,KAAKsN,2BAA2BC,EAAiBC,GAC1DmB,EAAaK,IACbhP,KAAK+M,aAAahC,KAAK,CACnB,YACAiE,EACAL,EACAlL,EACAE,EACA,OAEJ3D,KAAKiN,yBAAyBlC,KAAK,CAC/B,YACAiE,EACAL,EACAlL,EACAG,GAAwBD,EACxB,QAGR,MACJ,IAAK,QACD4J,EAAkB9J,EAAS4L,qBAC3BrP,KAAKqC,YAAY0I,KAAKwC,EAAgB,GAAIA,EAAgB,IAC1DoB,EAAa3O,KAAKqC,YAAY+E,OAC9BpH,KAAK+M,aAAahC,KAAK,CACnB,YACAiE,EACAL,EACAlL,EACAE,IAEJ3D,KAAKiN,yBAAyBlC,KAAK,CAC/B,YACAiE,EACAL,EACAlL,EACAG,GAAwBD,IAE5B,MACJ,SAEJ3D,KAAKuP,YAAY7L,EACrB,EAMA4I,EAAc5M,UAAUkP,cAAgB,SAAUnL,EAAUC,GACxD1D,KAAK4M,2BAA6B,CAC9B,oBACAlJ,EACA,EACAD,GAEJzD,KAAK+M,aAAahC,KAAK/K,KAAK4M,4BAC5B5M,KAAK6M,2BAA6B,CAC9B,oBACAnJ,EACA,EACAD,GAEJzD,KAAKiN,yBAAyBlC,KAAK/K,KAAK6M,2BAC5C,EAIAP,EAAc5M,UAAU8P,OAAS,WAC7B,MAAO,CACHzC,aAAc/M,KAAK+M,aACnBE,yBAA0BjN,KAAKiN,yBAC/B5K,YAAarC,KAAKqC,YAE1B,EAIAiK,EAAc5M,UAAU+P,gCAAkC,WACtD,IAII9H,EAJAsF,EAA2BjN,KAAKiN,yBAEpCA,EAAyByC,UAGzB,IACIC,EACAhN,EAFAiN,EAAI3C,EAAyB7F,OAG7ByI,GAAS,EACb,IAAKlI,EAAI,EAAGA,EAAIiI,IAAKjI,EACjBgI,EAAc1C,EAAyBtF,GACvChF,EAA0DgN,EAAY,GAClEhN,GAAQ,kBACRkN,EAAQlI,EAEHhF,GAAQ,sBACbgN,EAAY,GAAKhI,GACjB,QAAgB3H,KAAKiN,yBAA0B4C,EAAOlI,GACtDkI,GAAS,EAGrB,EAKAvD,EAAc5M,UAAUuF,mBAAqB,SAAUC,EAAWC,GAC9D,IAAI+H,EAAQlN,KAAKkN,MACjB,GAAIhI,EAAW,CACX,IAAI4K,EAAiB5K,EAAU6K,WAC/B7C,EAAMhI,WAAY,OAAY4K,GAAkC,KACpE,MAEI5C,EAAMhI,eAAYqD,EAEtB,GAAIpD,EAAa,CACb,IAAI6K,EAAmB7K,EAAY4K,WACnC7C,EAAM/H,aAAc,OAAY6K,GAAsC,MACtE,IAAIC,EAAqB9K,EAAY+K,aACrChD,EAAMiD,aACqB5H,IAAvB0H,EAAmCA,EAAqB,KAC5D,IAAIG,EAAsBjL,EAAYkL,cACtCnD,EAAMoD,SAAWF,EACXA,EAAoB7N,QACpB,KACN,IAAIgO,EAA4BpL,EAAYqL,oBAC5CtD,EAAMuD,eAAiBF,GAEjB,KACN,IAAIG,EAAsBvL,EAAYwL,cACtCzD,EAAM0D,cACsBrI,IAAxBmI,EACMA,EACA,KACV,IAAIG,EAAmB1L,EAAY2L,WACnC5D,EAAMrC,eACmBtC,IAArBsI,EAAiCA,EAAmB,KACxD,IAAIE,EAAwB5L,EAAY6L,gBACxC9D,EAAM+D,gBACwB1I,IAA1BwI,EACMA,EACA,KACN7D,EAAMrC,UAAY7K,KAAK2M,eACvB3M,KAAK2M,aAAeO,EAAMrC,UAE1B7K,KAAK8M,mBAAqB,KAElC,MAEII,EAAM/H,iBAAcoD,EACpB2E,EAAMiD,aAAU5H,EAChB2E,EAAMoD,SAAW,KACjBpD,EAAMuD,oBAAiBlI,EACvB2E,EAAM0D,cAAWrI,EACjB2E,EAAMrC,eAAYtC,EAClB2E,EAAM+D,gBAAa1I,CAE3B,EAKA+D,EAAc5M,UAAUwR,WAAa,SAAUhE,GAC3C,IAAIhI,EAAYgI,EAAMhI,UAElBiM,EAAkB,CAAC,oBAAkCjM,GAKzD,MAJyB,kBAAdA,GAEPiM,EAAgBpG,MAAK,GAElBoG,CACX,EAIA7E,EAAc5M,UAAU0R,YAAc,SAAUlE,GAC5ClN,KAAK+M,aAAahC,KAAK/K,KAAKqR,aAAanE,GAC7C,EAKAZ,EAAc5M,UAAU2R,aAAe,SAAUnE,GAC7C,MAAO,CACH,sBACAA,EAAM/H,YACN+H,EAAMrC,UAAY7K,KAAK0M,WACvBQ,EAAMiD,QACNjD,EAAM0D,SACN1D,EAAM+D,WACNjR,KAAKmN,gBAAgBD,EAAMoD,UAC3BpD,EAAMuD,eAAiBzQ,KAAK0M,WAEpC,EAKAJ,EAAc5M,UAAU4R,gBAAkB,SAAUpE,EAAOgE,GACvD,IAAIhM,EAAYgI,EAAMhI,UACG,kBAAdA,GAA0BgI,EAAMqE,kBAAoBrM,SACzCqD,IAAdrD,GACAlF,KAAK+M,aAAahC,KAAKmG,EAAWtR,KAAKI,KAAMkN,IAEjDA,EAAMqE,iBAAmBrM,EAEjC,EAKAoH,EAAc5M,UAAU8R,kBAAoB,SAAUtE,EAAOkE,GACzD,IAAIjM,EAAc+H,EAAM/H,YACpBgL,EAAUjD,EAAMiD,QAChBG,EAAWpD,EAAMoD,SACjBG,EAAiBvD,EAAMuD,eACvBG,EAAW1D,EAAM0D,SACjB/F,EAAYqC,EAAMrC,UAClBoG,EAAa/D,EAAM+D,YACnB/D,EAAMuE,oBAAsBtM,GAC5B+H,EAAMwE,gBAAkBvB,GACvBG,GAAYpD,EAAMyE,mBACd,QAAOzE,EAAMyE,gBAAiBrB,IACnCpD,EAAM0E,uBAAyBnB,GAC/BvD,EAAM2E,iBAAmBjB,GACzB1D,EAAM4E,kBAAoBjH,GAC1BqC,EAAM6E,mBAAqBd,UACP1I,IAAhBpD,GACAiM,EAAYxR,KAAKI,KAAMkN,GAE3BA,EAAMuE,mBAAqBtM,EAC3B+H,EAAMwE,eAAiBvB,EACvBjD,EAAMyE,gBAAkBrB,EACxBpD,EAAM0E,sBAAwBnB,EAC9BvD,EAAM2E,gBAAkBjB,EACxB1D,EAAM4E,iBAAmBjH,EACzBqC,EAAM6E,kBAAoBd,EAElC,EAIA3E,EAAc5M,UAAU6P,YAAc,SAAU7L,GAC5C1D,KAAK4M,2BAA2B,GAAK5M,KAAK+M,aAAa3F,OACvDpH,KAAK4M,2BAA6B,KAClC5M,KAAK6M,2BAA2B,GAAK7M,KAAKiN,yBAAyB7F,OACnEpH,KAAK6M,2BAA6B,KAClC,IAAImF,EAAyB,CAAC,kBAAgCtO,GAC9D1D,KAAK+M,aAAahC,KAAKiH,GACvBhS,KAAKiN,yBAAyBlC,KAAKiH,EACvC,EAQA1F,EAAc5M,UAAUgO,qBAAuB,WAC3C,IAAK1N,KAAK8M,qBACN9M,KAAK8M,oBAAqB,QAAM9M,KAAKwM,WACjCxM,KAAK2M,aAAe,GAAG,CACvB,IAAIhL,EAAS3B,KAAKyM,YAAczM,KAAK2M,aAAe,GAAM,GAC1D,QAAO3M,KAAK8M,mBAAoBnL,EAAO3B,KAAK8M,mBAChD,CAEJ,OAAO9M,KAAK8M,kBAChB,EACOR,CACX,CA/hBkC,CA+hBhC,KACF,S,6DC1jBIrN,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAoBxCkS,EAAoC,SAAU7R,GAQ9C,SAAS6R,EAAmB1F,EAAWC,EAAWC,EAAYC,GAC1D,IAAIpM,EAAQF,EAAOR,KAAKI,KAAMuM,EAAWC,EAAWC,EAAYC,IAAe1M,KA6E/E,OAxEAM,EAAM4R,mBAAqB,KAK3B5R,EAAM6R,OAAS,KAKf7R,EAAM8R,sBAAmB7J,EAKzBjI,EAAM+R,cAAW9J,EAKjBjI,EAAMgS,cAAW/J,EAKjBjI,EAAMiS,aAAUhK,EAKhBjI,EAAMkS,cAAWjK,EAKjBjI,EAAMmS,cAAWlK,EAKjBjI,EAAMoS,cAAWnK,EAKjBjI,EAAMqS,qBAAkBpK,EAKxBjI,EAAMsS,eAAYrK,EAKlBjI,EAAMuS,YAAStK,EAKfjI,EAAMwS,YAASvK,EAKfjI,EAAMyS,oBAAiBxK,EAMvBjI,EAAM0S,6BAA0BzK,EACzBjI,CACX,CA8JA,OApPArB,EAAUgT,EAAoB7R,GA2F9B6R,EAAmBvS,UAAUkF,UAAY,SAAUC,EAAenB,GAC9D,GAAK1D,KAAKmS,OAAV,CAGAnS,KAAK4O,cAAc/J,EAAenB,GAClC,IAAI6J,EAAkB1I,EAAcwK,qBAChC7B,EAAS3I,EAAckK,YACvBkE,EAAUjT,KAAKqC,YAAY+E,OAC3BwG,EAAQ5N,KAAKsN,2BAA2BC,EAAiBC,GAC7DxN,KAAK+M,aAAahC,KAAK,CACnB,gBACAkI,EACArF,EACA5N,KAAKmS,OAELnS,KAAKqS,SAAWrS,KAAKoS,iBACrBpS,KAAKsS,SAAWtS,KAAKoS,iBACrB5Q,KAAK0R,KAAKlT,KAAKuS,QAAUvS,KAAKoS,kBAC9BpS,KAAKwS,SACLxS,KAAKyS,SAAWzS,KAAKoS,iBACrBpS,KAAK0S,SAAW1S,KAAKoS,iBACrBpS,KAAK2S,gBACL3S,KAAK4S,UACL,CACK5S,KAAK6S,OAAO,GAAK7S,KAAK0M,WAAc1M,KAAKoS,iBACzCpS,KAAK6S,OAAO,GAAK7S,KAAK0M,WAAc1M,KAAKoS,kBAE9C5Q,KAAK0R,KAAKlT,KAAK8S,OAAS9S,KAAKoS,kBAC7BpS,KAAK+S,eACL/S,KAAKgT,0BAEThT,KAAKiN,yBAAyBlC,KAAK,CAC/B,gBACAkI,EACArF,EACA5N,KAAKkS,mBAELlS,KAAKqS,SACLrS,KAAKsS,SACLtS,KAAKuS,QACLvS,KAAKwS,SACLxS,KAAKyS,SACLzS,KAAK0S,SACL1S,KAAK2S,gBACL3S,KAAK4S,UACL5S,KAAK6S,OACL7S,KAAK8S,OACL9S,KAAK+S,eACL/S,KAAKgT,0BAEThT,KAAKuP,YAAY7L,EA/CjB,CAgDJ,EAKAuO,EAAmBvS,UAAU8E,eAAiB,SAAUC,EAAoBf,GACxE,GAAK1D,KAAKmS,OAAV,CAGAnS,KAAK4O,cAAcnK,EAAoBf,GACvC,IAAI6J,EAAkB9I,EAAmB4K,qBACrC7B,EAAS/I,EAAmBsK,YAC5BkE,EAAUjT,KAAKqC,YAAY+E,OAC3BwG,EAAQ5N,KAAKsN,2BAA2BC,EAAiBC,GAC7DxN,KAAK+M,aAAahC,KAAK,CACnB,gBACAkI,EACArF,EACA5N,KAAKmS,OAELnS,KAAKqS,SAAWrS,KAAKoS,iBACrBpS,KAAKsS,SAAWtS,KAAKoS,iBACrB5Q,KAAK0R,KAAKlT,KAAKuS,QAAUvS,KAAKoS,kBAC9BpS,KAAKwS,SACLxS,KAAKyS,SAAWzS,KAAKoS,iBACrBpS,KAAK0S,SAAW1S,KAAKoS,iBACrBpS,KAAK2S,gBACL3S,KAAK4S,UACL,CACK5S,KAAK6S,OAAO,GAAK7S,KAAK0M,WAAc1M,KAAKoS,iBACzCpS,KAAK6S,OAAO,GAAK7S,KAAK0M,WAAc1M,KAAKoS,kBAE9C5Q,KAAK0R,KAAKlT,KAAK8S,OAAS9S,KAAKoS,kBAC7BpS,KAAK+S,eACL/S,KAAKgT,0BAEThT,KAAKiN,yBAAyBlC,KAAK,CAC/B,gBACAkI,EACArF,EACA5N,KAAKkS,mBAELlS,KAAKqS,SACLrS,KAAKsS,SACLtS,KAAKuS,QACLvS,KAAKwS,SACLxS,KAAKyS,SACLzS,KAAK0S,SACL1S,KAAK2S,gBACL3S,KAAK4S,UACL5S,KAAK6S,OACL7S,KAAK8S,OACL9S,KAAK+S,eACL/S,KAAKgT,0BAEThT,KAAKuP,YAAY7L,EA/CjB,CAgDJ,EAIAuO,EAAmBvS,UAAU8P,OAAS,WAgBlC,OAfAxP,KAAKyP,kCAELzP,KAAKqS,cAAW9J,EAChBvI,KAAKsS,cAAW/J,EAChBvI,KAAKkS,mBAAqB,KAC1BlS,KAAKmS,OAAS,KACdnS,KAAKoS,sBAAmB7J,EACxBvI,KAAKuS,aAAUhK,EACfvI,KAAK6S,YAAStK,EACdvI,KAAKwS,cAAWjK,EAChBvI,KAAKyS,cAAWlK,EAChBvI,KAAK0S,cAAWnK,EAChBvI,KAAK2S,qBAAkBpK,EACvBvI,KAAK4S,eAAYrK,EACjBvI,KAAK8S,YAASvK,EACPnI,EAAOV,UAAU8P,OAAO5P,KAAKI,KACxC,EAKAiS,EAAmBvS,UAAU0F,cAAgB,SAAUC,EAAY8N,GAC/D,IAAIC,EAAS/N,EAAWgO,YACpBpM,EAAO5B,EAAWiO,UAClBC,EAASlO,EAAWmO,YACxBxT,KAAKoS,iBAAmB/M,EAAWoO,cAAczT,KAAK0M,YACtD1M,KAAKqS,SAAWe,EAAO,GACvBpT,KAAKsS,SAAWc,EAAO,GACvBpT,KAAKkS,mBAAqB7M,EAAWqO,uBACrC1T,KAAKmS,OAAS9M,EAAWsO,SAAS3T,KAAK0M,YACvC1M,KAAKuS,QAAUtL,EAAK,GACpBjH,KAAKwS,SAAWnN,EAAWuO,aAC3B5T,KAAKyS,SAAWc,EAAO,GACvBvT,KAAK0S,SAAWa,EAAO,GACvBvT,KAAK2S,gBAAkBtN,EAAWwO,oBAClC7T,KAAK4S,UAAYvN,EAAWyO,cAC5B9T,KAAK6S,OAASxN,EAAW0O,gBACzB/T,KAAK8S,OAAS7L,EAAK,GACnBjH,KAAK+S,eAAiB1N,EAAW2O,mBACjChU,KAAKgT,wBAA0BG,CACnC,EACOlB,CACX,CAtPuC,CAsPrC,KACF,U,eC3QI,EAAwC,WACxC,IAAI/S,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAqBxCkU,EAAyC,SAAU7T,GAQnD,SAAS6T,EAAwB1H,EAAWC,EAAWC,EAAYC,GAC/D,OAAOtM,EAAOR,KAAKI,KAAMuM,EAAWC,EAAWC,EAAYC,IAAe1M,IAC9E,CA8GA,OAvHA,EAAUiU,EAAyB7T,GAkBnC6T,EAAwBvU,UAAUwU,qBAAuB,SAAU3G,EAAiBO,EAAQC,EAAKP,GAC7F,IAAIyF,EAAUjT,KAAKqC,YAAY+E,OAC3BwG,EAAQ5N,KAAK6N,0BAA0BN,EAAiBO,EAAQC,EAAKP,GAAQ,GAAO,GACpF2G,EAA0B,CAC1B,qBACAlB,EACArF,GAIJ,OAFA5N,KAAK+M,aAAahC,KAAKoJ,GACvBnU,KAAKiN,yBAAyBlC,KAAKoJ,GAC5BpG,CACX,EAKAkG,EAAwBvU,UAAU0E,eAAiB,SAAUC,EAAoBX,GAC7E,IAAIwJ,EAAQlN,KAAKkN,MACb/H,EAAc+H,EAAM/H,YACpB0F,EAAYqC,EAAMrC,UACtB,QAAoBtC,IAAhBpD,QAA2CoD,IAAdsC,EAAjC,CAGA7K,KAAKwR,kBAAkBtE,EAAOlN,KAAKoR,aACnCpR,KAAK4O,cAAcvK,EAAoBX,GACvC1D,KAAKiN,yBAAyBlC,KAAK,CAC/B,sBACAmC,EAAM/H,YACN+H,EAAMrC,UACNqC,EAAMiD,QACNjD,EAAM0D,SACN1D,EAAM+D,WACN,KACA,MACD,MACH,IAAI1D,EAAkBlJ,EAAmBgL,qBACrC7B,EAASnJ,EAAmB0K,YAChC/O,KAAKkU,qBAAqB3G,EAAiB,EAAGA,EAAgBnG,OAAQoG,GACtExN,KAAKiN,yBAAyBlC,KAAK,MACnC/K,KAAKuP,YAAY7L,EAjBjB,CAkBJ,EAKAuQ,EAAwBvU,UAAU4E,oBAAsB,SAAUC,EAAyBb,GACvF,IAAIwJ,EAAQlN,KAAKkN,MACb/H,EAAc+H,EAAM/H,YACpB0F,EAAYqC,EAAMrC,UACtB,QAAoBtC,IAAhBpD,QAA2CoD,IAAdsC,EAAjC,CAGA7K,KAAKwR,kBAAkBtE,EAAOlN,KAAKoR,aACnCpR,KAAK4O,cAAcrK,EAAyBb,GAC5C1D,KAAKiN,yBAAyBlC,KAAK,CAC/B,sBACAmC,EAAM/H,YACN+H,EAAMrC,UACNqC,EAAMiD,QACNjD,EAAM0D,SACN1D,EAAM+D,WACN/D,EAAMoD,SACNpD,EAAMuD,gBACP,MAKH,IAJA,IAAIhC,EAAOlK,EAAwB+K,UAC/B/B,EAAkBhJ,EAAwB8K,qBAC1C7B,EAASjJ,EAAwBwK,YACjCjB,EAAS,EACJnG,EAAI,EAAGO,EAAKuG,EAAKrH,OAAQO,EAAIO,IAAMP,EACxCmG,EAAS9N,KAAKkU,qBAAqB3G,EAAiBO,EAC7BW,EAAK9G,GAAK6F,GAErCxN,KAAKiN,yBAAyBlC,KAAK,MACnC/K,KAAKuP,YAAY7L,EAtBjB,CAuBJ,EAIAuQ,EAAwBvU,UAAU8P,OAAS,WACvC,IAAItC,EAAQlN,KAAKkN,MAOjB,YANwB3E,GAApB2E,EAAMkH,YACNlH,EAAMkH,YAAcpU,KAAKqC,YAAY+E,QACrCpH,KAAK+M,aAAahC,KAAK,MAE3B/K,KAAKyP,kCACLzP,KAAKkN,MAAQ,KACN9M,EAAOV,UAAU8P,OAAO5P,KAAKI,KACxC,EAIAiU,EAAwBvU,UAAU0R,YAAc,SAAUlE,QAC9B3E,GAApB2E,EAAMkH,YACNlH,EAAMkH,YAAcpU,KAAKqC,YAAY+E,SACrCpH,KAAK+M,aAAahC,KAAK,MACvBmC,EAAMkH,WAAapU,KAAKqC,YAAY+E,QAExC8F,EAAMkH,WAAa,EACnBhU,EAAOV,UAAU0R,YAAYxR,KAAKI,KAAMkN,GACxClN,KAAK+M,aAAahC,KAAK,KAC3B,EACOkJ,CACX,CAzH4C,CAyH1C,KACF,U,eC/II,EAAwC,WACxC,IAAI/U,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAsBxCsU,EAAsC,SAAUjU,GAQhD,SAASiU,EAAqB9H,EAAWC,EAAWC,EAAYC,GAC5D,OAAOtM,EAAOR,KAAKI,KAAMuM,EAAWC,EAAWC,EAAYC,IAAe1M,IAC9E,CA2MA,OApNA,EAAUqU,EAAsBjU,GAkBhCiU,EAAqB3U,UAAU4U,sBAAwB,SAAU/G,EAAiBO,EAAQW,EAAMjB,GAC5F,IAAIN,EAAQlN,KAAKkN,MACbqH,OAA2BhM,IAApB2E,EAAMhI,UACbsP,OAA+BjM,IAAtB2E,EAAM/H,YACfsP,EAAUhG,EAAKrH,OACnBpH,KAAK+M,aAAahC,KAAK,MACvB/K,KAAKiN,yBAAyBlC,KAAK,MACnC,IAAK,IAAIpD,EAAI,EAAGA,EAAI8M,IAAW9M,EAAG,CAC9B,IAAIoG,EAAMU,EAAK9G,GACXsL,EAAUjT,KAAKqC,YAAY+E,OAC3BwG,EAAQ5N,KAAK6N,0BAA0BN,EAAiBO,EAAQC,EAAKP,GAAQ,GAAOgH,GACpFL,EAA0B,CAC1B,qBACAlB,EACArF,GAEJ5N,KAAK+M,aAAahC,KAAKoJ,GACvBnU,KAAKiN,yBAAyBlC,KAAKoJ,GAC/BK,IAGAxU,KAAK+M,aAAahC,KAAK,MACvB/K,KAAKiN,yBAAyBlC,KAAK,OAEvC+C,EAASC,CACb,CASA,OARIwG,IACAvU,KAAK+M,aAAahC,KAAK,MACvB/K,KAAKiN,yBAAyBlC,KAAK,OAEnCyJ,IACAxU,KAAK+M,aAAahC,KAAK,MACvB/K,KAAKiN,yBAAyBlC,KAAK,OAEhC+C,CACX,EAKAuG,EAAqB3U,UAAUqE,WAAa,SAAUC,EAAgBN,GAClE,IAAIwJ,EAAQlN,KAAKkN,MACbhI,EAAYgI,EAAMhI,UAClBC,EAAc+H,EAAM/H,YACxB,QAAkBoD,IAAdrD,QAA2CqD,IAAhBpD,EAA/B,CAGAnF,KAAK0U,uBACL1U,KAAK4O,cAAc5K,EAAgBN,QACX6E,IAApB2E,EAAMhI,WACNlF,KAAKiN,yBAAyBlC,KAAK,CAC/B,oBACA,YAGkBxC,IAAtB2E,EAAM/H,aACNnF,KAAKiN,yBAAyBlC,KAAK,CAC/B,sBACAmC,EAAM/H,YACN+H,EAAMrC,UACNqC,EAAMiD,QACNjD,EAAM0D,SACN1D,EAAM+D,WACN/D,EAAMoD,SACNpD,EAAMuD,iBAGd,IAAIlD,EAAkBvJ,EAAeqL,qBACjC7B,EAASxJ,EAAe+K,YACxBkE,EAAUjT,KAAKqC,YAAY+E,OAC/BpH,KAAK6N,0BAA0BN,EAAiB,EAAGA,EAAgBnG,OAAQoG,GAAQ,GAAO,GAC1F,IAAImH,EAAoB,CAAC,YAA0B1B,GACnDjT,KAAK+M,aAAahC,KAAK,KAAsB4J,GAC7C3U,KAAKiN,yBAAyBlC,KAAK,KAAsB4J,QACjCpM,IAApB2E,EAAMhI,YACNlF,KAAK+M,aAAahC,KAAK,MACvB/K,KAAKiN,yBAAyBlC,KAAK,YAEbxC,IAAtB2E,EAAM/H,cACNnF,KAAK+M,aAAahC,KAAK,MACvB/K,KAAKiN,yBAAyBlC,KAAK,OAEvC/K,KAAKuP,YAAY7L,EApCjB,CAqCJ,EAKA2Q,EAAqB3U,UAAUoF,YAAc,SAAUC,EAAiBrB,GACpE,IAAIwJ,EAAQlN,KAAKkN,MACbhI,EAAYgI,EAAMhI,UAClBC,EAAc+H,EAAM/H,YACxB,QAAkBoD,IAAdrD,QAA2CqD,IAAhBpD,EAA/B,CAGAnF,KAAK0U,uBACL1U,KAAK4O,cAAc7J,EAAiBrB,QACZ6E,IAApB2E,EAAMhI,WACNlF,KAAKiN,yBAAyBlC,KAAK,CAC/B,oBACA,YAGkBxC,IAAtB2E,EAAM/H,aACNnF,KAAKiN,yBAAyBlC,KAAK,CAC/B,sBACAmC,EAAM/H,YACN+H,EAAMrC,UACNqC,EAAMiD,QACNjD,EAAM0D,SACN1D,EAAM+D,WACN/D,EAAMoD,SACNpD,EAAMuD,iBAGd,IAAIhC,EAAO1J,EAAgBuK,UACvB/B,EAAkBxI,EAAgBkK,6BAClCzB,EAASzI,EAAgBgK,YAC7B/O,KAAKsU,sBAAsB/G,EAAiB,EACf,EAAQC,GACrCxN,KAAKuP,YAAY7L,EA1BjB,CA2BJ,EAKA2Q,EAAqB3U,UAAUgF,iBAAmB,SAAUC,EAAsBjB,GAC9E,IAAIwJ,EAAQlN,KAAKkN,MACbhI,EAAYgI,EAAMhI,UAClBC,EAAc+H,EAAM/H,YACxB,QAAkBoD,IAAdrD,QAA2CqD,IAAhBpD,EAA/B,CAGAnF,KAAK0U,uBACL1U,KAAK4O,cAAcjK,EAAsBjB,QACjB6E,IAApB2E,EAAMhI,WACNlF,KAAKiN,yBAAyBlC,KAAK,CAC/B,oBACA,YAGkBxC,IAAtB2E,EAAM/H,aACNnF,KAAKiN,yBAAyBlC,KAAK,CAC/B,sBACAmC,EAAM/H,YACN+H,EAAMrC,UACNqC,EAAMiD,QACNjD,EAAM0D,SACN1D,EAAM+D,WACN/D,EAAMoD,SACNpD,EAAMuD,iBAOd,IAJA,IAAIvB,EAAQvK,EAAqBwK,WAC7B5B,EAAkB5I,EAAqBsK,6BACvCzB,EAAS7I,EAAqBoK,YAC9BjB,EAAS,EACJnG,EAAI,EAAGO,EAAKgH,EAAM9H,OAAQO,EAAIO,IAAMP,EACzCmG,EAAS9N,KAAKsU,sBAAsB/G,EAAiBO,EAAQoB,EAAMvH,GAAI6F,GAE3ExN,KAAKuP,YAAY7L,EA5BjB,CA6BJ,EAIA2Q,EAAqB3U,UAAU8P,OAAS,WACpCxP,KAAKyP,kCACLzP,KAAKkN,MAAQ,KAKb,IAAIX,EAAYvM,KAAKuM,UACrB,GAAkB,IAAdA,EAEA,IADA,IAAIlK,EAAcrC,KAAKqC,YACdsF,EAAI,EAAGO,EAAK7F,EAAY+E,OAAQO,EAAIO,IAAMP,EAC/CtF,EAAYsF,IAAK,QAAKtF,EAAYsF,GAAI4E,GAG9C,OAAOnM,EAAOV,UAAU8P,OAAO5P,KAAKI,KACxC,EAIAqU,EAAqB3U,UAAUgV,qBAAuB,WAClD,IAAIxH,EAAQlN,KAAKkN,MACbhI,EAAYgI,EAAMhI,eACJqD,IAAdrD,GACAlF,KAAKsR,gBAAgBpE,EAAOlN,KAAKkR,iBAEX3I,IAAtB2E,EAAM/H,aACNnF,KAAKwR,kBAAkBtE,EAAOlN,KAAKoR,YAE3C,EACOiD,CACX,CAtNyC,CAsNvC,KACF,U,eClOIO,EAAqB,CACrB,OAAUC,EACV,QAAWC,EAAA,EACX,MAASC,EACT,WAAcC,EACd,QAAWH,EACX,KAAQI,EAAA,GAERC,EAA8B,WAO9B,SAASA,EAAa3I,EAAWC,EAAWC,EAAYC,GAKpD1M,KAAKmV,WAAa5I,EAKlBvM,KAAKoV,WAAa5I,EAKlBxM,KAAKqV,YAAc3I,EAKnB1M,KAAKsV,YAAc7I,EAKnBzM,KAAKuV,kBAAoB,CAAC,CAC9B,CAoCA,OAhCAL,EAAaxV,UAAU8P,OAAS,WAC5B,IAAIgG,EAAsB,CAAC,EAC3B,IAAK,IAAIC,KAAQzV,KAAKuV,kBAAmB,CACrCC,EAAoBC,GAAQD,EAAoBC,IAAS,CAAC,EAC1D,IAAIC,EAAW1V,KAAKuV,kBAAkBE,GACtC,IAAK,IAAIE,KAAcD,EAAU,CAC7B,IAAIE,EAAqBF,EAASC,GAAYnG,SAC9CgG,EAAoBC,GAAME,GAAcC,CAC5C,CACJ,CACA,OAAOJ,CACX,EAMAN,EAAaxV,UAAUmW,WAAa,SAAUC,EAAQC,GAClD,IAAIC,OAAuBzN,IAAXuN,EAAuBA,EAAOG,WAAa,IACvDC,EAAUlW,KAAKuV,kBAAkBS,QACrBzN,IAAZ2N,IACAA,EAAU,CAAC,EACXlW,KAAKuV,kBAAkBS,GAAaE,GAExC,IAAIC,EAASD,EAAQH,GACrB,QAAexN,IAAX4N,EAAsB,CACtB,IAAIC,EAAcxB,EAAmBmB,GACrCI,EAAS,IAAIC,EAAYpW,KAAKmV,WAAYnV,KAAKoV,WAAYpV,KAAKsV,YAAatV,KAAKqV,aAClFa,EAAQH,GAAeI,CAC3B,CACA,OAAOA,CACX,EACOjB,CACX,CAtEiC,GAuEjC,S,oJC/CImB,GAAY,UAEZC,EAAK,GAELC,EAAK,GAELC,EAAK,GAELC,EAAK,GAKT,SAASC,EAAgBC,GACrB,OAAOA,EAAuB,GAAGC,YACrC,CACA,IAAIC,EAAW,IAAIC,OAEnB,IACIhX,OAAOiX,aAAa,MAAW,IAAMjX,OAAOiX,aAAa,MACzDjX,OAAOiX,aAAa,OAAW,IAAMjX,OAAOiX,aAAa,OACzDjX,OAAOiX,aAAa,OAAW,IAAMjX,OAAOiX,aAAa,OACzDjX,OAAOiX,aAAa,OAAW,IAAMjX,OAAOiX,aAAa,OACzDjX,OAAOiX,aAAa,QAAW,IAAMjX,OAAOiX,aAAa,QACzD,KAQJ,SAASC,EAAoB3P,EAAM4P,GAI/B,MAHe,UAAVA,GAA+B,QAAVA,GAAqBJ,EAASK,KAAK7P,KACzD4P,EAAkB,UAAVA,EAAoB,OAAS,SAElC,IAAWA,EACtB,CAOA,SAASE,EAAiBC,EAAKC,EAAM1P,GAKjC,OAJIA,EAAI,GACJyP,EAAIrM,KAAK,KAAM,IAEnBqM,EAAIrM,KAAKsM,EAAM,IACRD,CACX,CACA,IAAIE,EAA0B,WAO1B,SAASA,EAAS7K,EAAYC,EAAY6K,EAAUxK,GAKhD/M,KAAKuX,SAAWA,EAKhBvX,KAAK0M,WAAaA,EAMlB1M,KAAKyM,WAAaA,EAKlBzM,KAAKwX,WAKLxX,KAAK+M,aAAeA,EAAaA,aAKjC/M,KAAKqC,YAAc0K,EAAa1K,YAKhCrC,KAAKyX,iBAAmB,CAAC,EAKzBzX,KAAK0X,oBAAqB,UAK1B1X,KAAKiN,yBAA2BF,EAAaE,yBAK7CjN,KAAK2X,kBAAoB,KAKzB3X,KAAK4X,cAAgB,EAIrB5X,KAAK6X,WAAa9K,EAAa8K,YAAc,CAAC,EAI9C7X,KAAK8X,aAAe/K,EAAa+K,cAAgB,CAAC,EAIlD9X,KAAK+X,WAAahL,EAAagL,YAAc,CAAC,EAK9C/X,KAAKgY,QAAU,CAAC,EAKhBhY,KAAKiY,QAAU,CAAC,CACpB,CA2wBA,OAnwBAX,EAAS5X,UAAUwY,YAAc,SAAU7Q,EAAM8Q,EAASC,EAASC,GAC/D,IAAIxP,EAAMxB,EAAO8Q,EAAUC,EAAUC,EACrC,GAAIrY,KAAKiY,QAAQpP,GACb,OAAO7I,KAAKiY,QAAQpP,GAExB,IAAIyP,EAAcD,EAAYrY,KAAK8X,aAAaO,GAAa,KACzDE,EAAYH,EAAUpY,KAAK6X,WAAWO,GAAW,KACjDI,EAAYxY,KAAK+X,WAAWI,GAC5BzL,EAAa1M,KAAK0M,WAClBf,EAAQ,CACR6M,EAAU7M,MAAM,GAAKe,EACrB8L,EAAU7M,MAAM,GAAKe,GAErB+L,EAAcjZ,MAAM6M,QAAQhF,GAC5B4P,EAAQuB,EAAUE,QAChB,IAAWF,EAAUE,SACrB1B,EAAoBxX,MAAM6M,QAAQhF,GAAQA,EAAK,GAAKA,EAAMmR,EAAUG,WAAa,MACnFC,EAAcP,GAAaC,EAAYzN,UAAYyN,EAAYzN,UAAY,EAC3EJ,EAASgO,EACPpR,EACAA,EAAKiB,MAAM,MAAM6B,OAAOgN,EAAkB,IAC5C0B,GAAK,QAAkBL,EAAW/N,GAAS9I,EAAQkX,EAAGlX,MAAOE,EAASgX,EAAGhX,OAAQ6I,EAASmO,EAAGnO,OAAQC,EAAUkO,EAAGlO,QAASC,EAAaiO,EAAGjO,WAC3IkO,EAAcnX,EAAQiX,EACtB7M,EAAsB,GAEtBR,GAAKuN,EAAc,GAAKnN,EAAM,GAC9BH,GAAK3J,EAAS+W,GAAejN,EAAM,GAEnCS,EAAQ,CACRzK,MAAO4J,EAAI,EAAI/J,KAAKuX,MAAMxN,GAAK/J,KAAK0R,KAAK3H,GACzC1J,OAAQ2J,EAAI,EAAIhK,KAAKuX,MAAMvN,GAAKhK,KAAK0R,KAAK1H,GAC1CO,oBAAqBA,GAKzB,GAHgB,GAAZJ,EAAM,IAAuB,GAAZA,EAAM,IACvBI,EAAoBhB,KAAK,QAASY,GAElC0M,EAAW,CACXtM,EAAoBhB,KAAK,cAAeuN,EAAYnT,aACpD4G,EAAoBhB,KAAK,YAAa6N,GACtC7M,EAAoBhB,KAAK,UAAWuN,EAAYnI,SAChDpE,EAAoBhB,KAAK,WAAYuN,EAAY1H,UACjD7E,EAAoBhB,KAAK,aAAcuN,EAAYrH,YAEnD,IAAI+H,EAAU,KAA0BC,kCAAoCC,yBACxEF,EAAQtZ,UAAUyZ,cAClBpN,EAAoBhB,KAAK,cAAe,CAACuN,EAAYhI,WACrDvE,EAAoBhB,KAAK,iBAAkBuN,EAAY7H,gBAE/D,CACI2H,GACArM,EAAoBhB,KAAK,YAAawN,EAAUrT,WAEpD6G,EAAoBhB,KAAK,eAAgB,UACzCgB,EAAoBhB,KAAK,YAAa,UAUtC,IATA,IAQIqO,EARAC,EAAY,GAAMpC,EAClBxL,EAAIwL,EAAQ6B,EAAcO,EAAYT,EACtCU,EAAqB,GACrBC,EAAmB,GACnBnQ,EAAa,EACboQ,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAEZ/R,EAAI,EAAGO,EAAKuC,EAAOrD,OAAQO,EAAIO,EAAIP,GAAK,EAAG,CAChD,IAAIgS,EAASlP,EAAO9C,GACpB,GAAe,OAAXgS,EAAJ,CAOA,IAAIxR,EAAOsC,EAAO9C,EAAI,IAAM6Q,EAAUrQ,KAClCA,IAASiR,IACLf,GACAiB,EAAmBvO,KAAK,OAAQ5C,GAEhCiQ,GACAmB,EAAiBxO,KAAK,OAAQ5C,GAElCiR,EAAejR,GAEnBiB,EAAa5H,KAAK8I,IAAIlB,EAAYuB,EAAQ8O,IAC1C,IAAIG,EAAiB,CACjBD,EACAlO,EACI4N,EAAY3O,EAAO+O,GACnBxC,GAASvM,EAAO+O,GAAoB7O,EAAW8O,IACnD,IAAOd,EAAcxP,GAAcoQ,GAEvC/N,GAAKf,EAAO+O,GACRpB,GACAiB,EAAmBvO,KAAK,aAAc6O,GAEtCxB,GACAmB,EAAiBxO,KAAK,WAAY6O,KAEpCH,CA1BF,MALID,GAAcpQ,EACdA,EAAa,EACbqC,EAAIwL,EAAQ6B,EAAcO,EAAYT,IACpCc,CA6BV,CAIA,OAHAla,MAAME,UAAUqL,KAAK1C,MAAM0D,EAAqBuN,GAChD9Z,MAAME,UAAUqL,KAAK1C,MAAM0D,EAAqBwN,GAChDvZ,KAAKiY,QAAQpP,GAAOuD,EACbA,CACX,EAUAkL,EAAS5X,UAAUma,sBAAwB,SAAU5W,EAASqT,EAAIC,EAAIC,EAAIC,EAAItF,EAAiB2I,GAC3F7W,EAAQ8W,YACR9W,EAAQ+W,OAAO3R,MAAMpF,EAASqT,GAC9BrT,EAAQgX,OAAO5R,MAAMpF,EAASsT,GAC9BtT,EAAQgX,OAAO5R,MAAMpF,EAASuT,GAC9BvT,EAAQgX,OAAO5R,MAAMpF,EAASwT,GAC9BxT,EAAQgX,OAAO5R,MAAMpF,EAASqT,GAC1BnF,IACAnR,KAAKwX,WAAqCrG,EAAgB,GAC1DnR,KAAKka,MAAMjX,IAEX6W,IACA9Z,KAAKma,gBAAgBlX,EACG,GACxBA,EAAQuR,SAEhB,EAqBA8C,EAAS5X,UAAU0a,iCAAmC,SAAUC,EAAYC,EAAaC,EAASC,EAAS7Y,EAAOE,EAAQ4Y,EAASC,EAASrP,EAASC,EAASqP,EAAUhP,EAAOiP,EAAahR,EAASiR,EAAYnX,GAC7M+W,GAAW9O,EAAM,GACjB+O,GAAW/O,EAAM,GACjB,IAkBIT,EAlBAO,EAAI8O,EAAUE,EACd/O,EAAI8O,EAAUE,EACdnP,EAAI5J,EAAQ0J,EAAUgP,EAAaA,EAAahP,EAAU1J,EAC1D6J,EAAI3J,EAASyJ,EAAUgP,EAAcA,EAAchP,EAAUzJ,EAC7DiZ,EAAOlR,EAAQ,GAAK2B,EAAII,EAAM,GAAK/B,EAAQ,GAC3CmR,EAAOnR,EAAQ,GAAK4B,EAAIG,EAAM,GAAK/B,EAAQ,GAC3CoR,EAAOvP,EAAI7B,EAAQ,GACnBqR,EAAOvP,EAAI9B,EAAQ,GA2BvB,OA1BIiR,GAA2B,IAAbF,KACdrE,EAAG,GAAK0E,EACRvE,EAAG,GAAKuE,EACR1E,EAAG,GAAK2E,EACR1E,EAAG,GAAK0E,EACR1E,EAAG,GAAKyE,EAAOF,EACftE,EAAG,GAAKD,EAAG,GACXC,EAAG,GAAKyE,EAAOF,EACftE,EAAG,GAAKD,EAAG,IAGE,IAAbmE,GACAzP,GAAY,SAAiB,UAAmBqP,EAASC,EAAS,EAAG,EAAGG,GAAWJ,GAAUC,IAC7F,QAAetP,EAAWoL,IAC1B,QAAepL,EAAWqL,IAC1B,QAAerL,EAAWsL,IAC1B,QAAetL,EAAWuL,IAC1B,QAAejV,KAAKC,IAAI6U,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAAKjV,KAAKC,IAAI6U,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAAKjV,KAAK8I,IAAIgM,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAAKjV,KAAK8I,IAAIgM,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAAKJ,KAGvK,QAAe7U,KAAKC,IAAIuZ,EAAMA,EAAOF,GAAOtZ,KAAKC,IAAIwZ,EAAMA,EAAOF,GAAOvZ,KAAK8I,IAAI0Q,EAAMA,EAAOF,GAAOtZ,KAAK8I,IAAI2Q,EAAMA,EAAOF,GAAO1E,GAEnIuE,IACAnP,EAAIjK,KAAK0Z,MAAMzP,GACfC,EAAIlK,KAAK0Z,MAAMxP,IAEZ,CACHyP,WAAY1P,EACZ2P,WAAY1P,EACZ2P,WAAY9P,EACZ+P,WAAY9P,EACZH,QAASA,EACTC,QAASA,EACTsL,aAAc,CACV2E,KAAMlF,EAAU,GAChBmF,KAAMnF,EAAU,GAChBoF,KAAMpF,EAAU,GAChBqF,KAAMrF,EAAU,GAChBsF,MAAOjY,GAEXkY,gBAAiB1Q,EACjBS,MAAOA,EAEf,EAYA2L,EAAS5X,UAAUmc,oBAAsB,SAAU5Y,EAAS6Y,EAAcC,EAAcC,EAAY7Q,EAASgG,EAAiB2I,GAC1H,IAAIe,KAAgB1J,IAAmB2I,GACnCmC,EAAMD,EAAWpF,aACjBsF,EAASjZ,EAAQiZ,OACjBC,EAAgBrC,EACbA,EAAkB,GAAKkC,EAAWrQ,MAAM,GAAM,EAC/C,EACFyQ,EAAaH,EAAIV,KAAOY,GAAiBD,EAAOva,MAAQma,GACxDG,EAAIR,KAAOU,GAAiB,GAC5BF,EAAIT,KAAOW,GAAiBD,EAAOra,OAASia,GAC5CG,EAAIP,KAAOS,GAAiB,EAShC,OARIC,IACIvB,GACA7a,KAAK6Z,sBAAsB5W,EAASqT,EAAIC,EAAIC,EAAIC,EACxB,EACA,IAE5B,QAAiBxT,EAAS+Y,EAAWJ,gBAAiBzQ,EAAS4Q,EAAcC,EAAW3Q,QAAS2Q,EAAW1Q,QAAS0Q,EAAWX,WAAYW,EAAWV,WAAYU,EAAWb,WAAYa,EAAWZ,WAAYY,EAAWrQ,SAEzN,CACX,EAKA2L,EAAS5X,UAAUwa,MAAQ,SAAUjX,GACjC,GAAIjD,KAAKwX,WAAY,CACjB,IAAI6E,GAAW,QAAerc,KAAK0X,mBAAoB,CAAC,EAAG,IACvD4E,EAAa,IAAMtc,KAAK0M,WAC5BzJ,EAAQ2I,OACR3I,EAAQ+I,UAAUqQ,EAAS,GAAKC,EAAYD,EAAS,GAAKC,GAC1DrZ,EAAQsZ,OAAOvc,KAAK4X,cACxB,CACA3U,EAAQsR,OACJvU,KAAKwX,YACLvU,EAAQkJ,SAEhB,EAMAmL,EAAS5X,UAAUya,gBAAkB,SAAUlX,EAAS0M,GACpD1M,EAAQ,eACmD0M,EAAY,GACvE1M,EAAQ4H,UAAmC8E,EAAY,GACvD1M,EAAQkN,QAAwCR,EAAY,GAC5D1M,EAAQ2N,SAA0CjB,EAAY,GAC9D1M,EAAQgO,WAAoCtB,EAAY,GACpD1M,EAAQkW,cACRlW,EAAQwN,eAAwCd,EAAY,GAC5D1M,EAAQkW,YAA0CxJ,EAAY,IAEtE,EASA2H,EAAS5X,UAAU8c,6BAA+B,SAAUnV,EAAM8Q,EAASE,EAAWD,GAClF,IAAII,EAAYxY,KAAK+X,WAAWI,GAC5B/L,EAAQpM,KAAKkY,YAAY7Q,EAAM8Q,EAASC,EAASC,GACjDC,EAActY,KAAK8X,aAAaO,GAChC3L,EAAa1M,KAAK0M,WAClBuK,EAAQD,EAAoBxX,MAAM6M,QAAQhF,GAAQA,EAAK,GAAKA,EAAMmR,EAAUG,WAAa,MACzF8D,EAAW,IAAWjE,EAAUkE,cAAgB,MAChD9D,EAAcN,GAAeA,EAAYzN,UAAYyN,EAAYzN,UAAY,EAE7ElJ,EAAQyK,EAAMzK,MAAQ+K,EAAa,EAAI8L,EAAU7M,MAAM,GACvD8O,EAAUxD,EAAQtV,EAAQ,GAAK,GAAMsV,GAAS2B,EAC9C8B,EAAW+B,EAAWrQ,EAAMvK,OAAU6K,EACtC,GAAK,GAAM+P,GAAY7D,EAC3B,MAAO,CACHxM,MAAOA,EACPqO,QAASA,EACTC,QAASA,EAEjB,EAeApD,EAAS5X,UAAUid,SAAW,SAAU1Z,EAAS6Y,EAAc5Q,EAAW6B,EAAc6N,EAAagC,EAAqBC,EAAeC,GAErI,IAAIC,EACA/c,KAAK2X,oBAAqB,QAAOzM,EAAWlL,KAAK0X,oBACjDqF,EAAmB/c,KAAK2X,mBAGnB3X,KAAK2X,oBACN3X,KAAK2X,kBAAoB,IAE7BoF,GAAmB,QAAY/c,KAAKqC,YAAa,EAAGrC,KAAKqC,YAAY+E,OAAQ,EAAG8D,EAAWlL,KAAK2X,oBAChG,QAAsB3X,KAAK0X,mBAAoBxM,IAEnD,IAGI8R,EACAvC,EAASC,EAASuC,EAAOC,EAAOC,EAAQC,EAAQC,EAAOhW,EAAM8Q,EAASE,EAAWD,EAiB3B1U,EACtD+H,EAAGC,EAAG4R,EAtBN3V,EAAI,EACJO,EAAK6E,EAAa3F,OAClBjI,EAAI,EAGJoe,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KACxBC,EAAkB3d,KAAKyX,iBACvBmG,EAAe5d,KAAK4X,cACpBiG,EAA4Brc,KAAK0Z,MAAgD,KAA1C1Z,KAAKsc,OAAO5S,EAAU,GAAIA,EAAU,KAAc,KACzFgC,EAAuD,CACvDjK,QAASA,EACTyJ,WAAY1M,KAAK0M,WACjBD,WAAYzM,KAAKyM,WACjBkO,SAAUiD,GAIVG,EAAY/d,KAAK+M,cAAgBA,GAAgB/M,KAAKuX,SAAW,EAAI,IAGzE,MAAO5P,EAAIO,EAAI,CACX,IAAIyH,EAAc5C,EAAapF,GAC3BhF,EAA0DgN,EAAY,GAC1E,OAAQhN,GACJ,KAAK,oBACDe,EAAiEiM,EAAY,GAC7E2N,EAAkB3N,EAAY,GACzBjM,EAAQjB,mBAGc8F,IAAlBsU,IACJ,QAAWA,EAAeS,EAAgBU,eAIzCrW,EAHFA,EAA2BgI,EAAY,GAAM,EAJ7ChI,EAA2BgI,EAAY,GAS3C,MACJ,KAAK,gBACG4N,EAAcQ,IACd/d,KAAKka,MAAMjX,GACXsa,EAAc,GAEdC,EAAgBO,IAChB9a,EAAQuR,SACRgJ,EAAgB,GAEfD,GAAgBC,IACjBva,EAAQ8W,YACRkD,EAAQgB,IACRf,EAAQe,OAEVtW,EACF,MACJ,KAAK,YACDxI,EAA2BwQ,EAAY,GACvC,IAAIuO,EAAKnB,EAAiB5d,GACtBgf,EAAKpB,EAAiB5d,EAAI,GAC1Bif,EAAKrB,EAAiB5d,EAAI,GAC1Bkf,EAAKtB,EAAiB5d,EAAI,GAC1Bmf,EAAKF,EAAKF,EACVK,GAAKF,EAAKF,EACVK,GAAIhd,KAAKid,KAAKH,EAAKA,EAAKC,GAAKA,IACjCtb,EAAQ+W,OAAOkE,EAAKM,GAAGL,GACvBlb,EAAQyb,IAAIR,EAAIC,EAAIK,GAAG,EAAG,EAAIhd,KAAKmd,IAAI,KACrChX,EACF,MACJ,KAAK,gBACD1E,EAAQ2b,cACNjX,EACF,MACJ,KAAK,YACDxI,EAA2BwQ,EAAY,GACvCqN,EAAKrN,EAAY,GACjB,IAAIlM,GAC2DkM,EAAY,GACvEhM,GAAWgM,EAAY,GACvBkP,GAA2B,GAAtBlP,EAAYvI,OAAcuI,EAAY,QAAKpH,EACpD2E,EAAMzJ,SAAWA,GACjByJ,EAAMxJ,QAAUA,EACViE,KAAKgW,IACPA,EAAgBhW,GAAK,IAEzB,IAAImX,GAASnB,EAAgBhW,GACzBkX,GACAA,GAAG9B,EAAkB5d,EAAG6d,EAAI,EAAG8B,KAG/BA,GAAO,GAAK/B,EAAiB5d,GAC7B2f,GAAO,GAAK/B,EAAiB5d,EAAI,GACjC2f,GAAO1X,OAAS,GAEpBzD,GAASmb,GAAQ5R,KACfvF,EACF,MACJ,KAAK,gBACDxI,EAA2BwQ,EAAY,GACvCqN,EAA4BrN,EAAY,GACxC0N,EACwE1N,EAAY,GAEpF8K,EAAiC9K,EAAY,GAC7C+K,EAAiC/K,EAAY,GAC7C,IAAI9N,GAAgC8N,EAAY,GAC5CxE,GAAiCwE,EAAY,GAC7CtE,GAAiCsE,EAAY,GAC7CrE,GAAiCqE,EAAY,GAC7CoP,GAAyCpP,EAAY,IACrDgL,GAAkChL,EAAY,IAC9ChE,GAAqDgE,EAAY,IACjEhO,GAA+BgO,EAAY,IAC3CqP,GACoDrP,EAAY,IAChEsP,GAC0DtP,EAAY,IAC1E,IAAK0N,GAAS1N,EAAYvI,QAAU,GAAI,CAEpCC,EAA8BsI,EAAY,IAC1CwI,EAAiCxI,EAAY,IAC7C0I,EAAmC1I,EAAY,IAC/CyI,EAAiCzI,EAAY,IAC7C,IAAIuP,GAAkBlf,KAAKwc,6BAA6BnV,EAAM8Q,EAASE,EAAWD,GAClFiF,EAAQ6B,GAAgB9S,MACxBuD,EAAY,GAAK0N,EACjB,IAAI8B,GAAqCxP,EAAY,IACrD8K,GAAWyE,GAAgBzE,QAAU0E,IAAenf,KAAK0M,WACzDiD,EAAY,GAAK8K,EACjB,IAAI2E,GAAqCzP,EAAY,IACrD+K,GAAWwE,GAAgBxE,QAAU0E,IAAepf,KAAK0M,WACzDiD,EAAY,GAAK+K,EACjB7Y,GAASwb,EAAMxb,OACf8N,EAAY,GAAK9N,GACjBF,GAAQ0b,EAAM1b,MACdgO,EAAY,IAAMhO,EACtB,CACA,IAAI0d,QAAiB,EACjB1P,EAAYvI,OAAS,KACrBiY,GAAwC1P,EAAY,KAExD,IAAI/F,QAAU,EAAQ0V,QAAiB,EAAQC,QAAmB,EAC9D5P,EAAYvI,OAAS,IACrBwC,GAAwC+F,EAAY,IACpD2P,GAAyC3P,EAAY,IACrD4P,GAA2C5P,EAAY,MAGvD/F,GAAU,KACV0V,IAAiB,EACjBC,IAAmB,GAEnBR,IAAkBlB,EAElBlD,IAAYiD,EAENmB,IAAmBlB,IAEzBlD,IAAYiD,GAGhB,IADA,IAAI4B,GAAa,EACVrgB,EAAI6d,EAAI7d,GAAK,EAChB,KAAIkgB,IACAA,GAAeG,MAAgB7d,GAAQ3B,KAAK0M,YADhD,CAIA,IAAIsP,GAAahc,KAAKoa,iCAAiCiD,EAAM1b,MAAO0b,EAAMxb,OAAQkb,EAAiB5d,GAAI4d,EAAiB5d,EAAI,GAAIwC,GAAOE,GAAQ4Y,EAASC,EAASrP,GAASC,GAASqP,GAAUhP,GAAOiP,EAAahR,GAAS0V,IAAkBC,GAAkB7b,GAE1P+b,GAAO,CACPxc,EACA6Y,EACAuB,EACArB,GACA7Q,GACAmU,GAC8B,EACxB,KACNC,GAC8B,EACxB,MAEV,GAAIzC,EAAmB,CACnB,GAAsB,SAAlBkC,GAEA,SAEC,GAAsB,aAAlBA,GAA8B,CAEnClC,EAAkB4C,OAAO1D,GAAWpF,cACpC,QACJ,CAEI,IAAI+I,QAAY,EACZC,QAAoB,EACxB,GAAIX,GAAwB,CACxB,IAAIY,GAAQ7C,EAAK7d,EACjB,IAAK8f,GAAuBY,IAAQ,CAEhCZ,GAAuBY,IAASJ,GAEhC,QACJ,CAIA,GAHAE,GAAYV,GAAuBY,WAC5BZ,GAAuBY,IAC9BD,GAAoBlJ,EAAgBiJ,IAChC7C,EAAkBgD,SAASF,IAC3B,QAER,CACA,GAAI9C,EAAkBgD,SAAS9D,GAAWpF,cACtC,SAEA+I,KAEA7C,EAAkB4C,OAAOE,IAEzB5f,KAAK6b,oBAAoBxT,MAAMrI,KAAM2f,KAEzC7C,EAAkB4C,OAAO1D,GAAWpF,aAE5C,CACA5W,KAAK6b,oBAAoBxT,MAAMrI,KAAMyf,GAxDrC,GA0DF9X,EACF,MACJ,KAAK,gBACD,IAAIkI,GAA+BF,EAAY,GAC3C5B,GAA6B4B,EAAY,GACzC8M,GAAkC9M,EAAY,GAC9CoQ,GAAkCpQ,EAAY,GAClDyI,EAAiCzI,EAAY,GAC7C,IAAIqQ,GAAkCrQ,EAAY,GAC9CsQ,GAA2CtQ,EAAY,GACvDuQ,GAAiCvQ,EAAY,GACjD0I,EAAmC1I,EAAY,GAC/C,IAAIiJ,GAAqCjJ,EAAY,IACrDtI,EAA8BsI,EAAY,IAC1CwI,EAAiCxI,EAAY,IAC7C,IAAIwQ,GAAkB,CACKxQ,EAAY,IACZA,EAAY,KAEnC6I,GAAYxY,KAAK+X,WAAWI,GAC5BhQ,GAAOqQ,GAAUrQ,KACjBiY,GAAY,CACZ5H,GAAU7M,MAAM,GAAKsU,GACrBzH,GAAU7M,MAAM,GAAKsU,IAErBI,QAAe,EACflY,MAAQnI,KAAKgY,QACbqI,GAAergB,KAAKgY,QAAQ7P,KAG5BkY,GAAe,CAAC,EAChBrgB,KAAKgY,QAAQ7P,IAAQkY,IAEzB,IAAIC,IAAa,OAAiBvD,EAAkBlN,GAAO9B,GAAK,GAC5DwS,GAAa/e,KAAKI,IAAIwe,GAAU,KAChC,QAAyBjY,GAAMd,EAAMgZ,IACzC,GAAIN,IAAYQ,IAAcD,GAAY,CACtC,IAAI3H,GAAY3Y,KAAK+X,WAAWI,GAASQ,UACrC6H,IAAUF,GAAaC,IAAc,IAAW5H,IAChD8H,IAAQ,OAAe1D,EAAkBlN,GAAO9B,GAAK,EAAG1G,EAAMmZ,GAAQR,GAAUxe,KAAKI,IAAIwe,GAAU,IAAK,KAA0BjY,GAAMkY,GAAcxC,EAA4B,EAAI7d,KAAK4X,eAC/L8I,EAAW,GAAID,GAAO,CAElB,IAAI9J,GAAyB,GACzBgK,QAAI,EAAQC,QAAK,EAAQC,QAAQ,EAAQzU,QAAQ,EAAQ0U,QAAO,EACpE,GAAIzI,EACA,IAAKsI,GAAI,EAAGC,GAAKH,GAAMrZ,OAAQuZ,GAAIC,KAAMD,GAAG,CACxCG,GAAOL,GAAME,IACbE,GAA+BC,GAAK,GACpC1U,GAAQpM,KAAKkY,YAAY2I,GAAO1I,EAAS,GAAIE,GAC7CoC,EAC2BqG,GAAK,IACvBV,GAAU,GAAK,GAAKxH,GAAcA,IAC3C8B,EACI+B,GAAWrQ,GAAMvK,OACO,GAAlB,GAAM4a,IAAgB7D,GAAcwH,GAAU,GAC5CA,GAAU,GACdF,GACJlE,GAAahc,KAAKoa,iCAAiChO,GAAMzK,MAAOyK,GAAMvK,OAAQif,GAAK,GAAIA,GAAK,GAAI1U,GAAMzK,MAAOyK,GAAMvK,OAAQ4Y,EAASC,EAAS,EAAG,EAAGoG,GAAK,GAAIX,IAAiB,EAAO,MAAgB,EAAOzc,GAC/M,GAAIoZ,GACAA,EAAkBgD,SAAS9D,GAAWpF,cACtC,MAAM8J,EAEV/J,GAAuB5L,KAAK,CACxB9H,EACA6Y,EACA1P,GACA4P,GACA,EACA,KACA,MAER,CAEJ,GAAI5D,EACA,IAAKuI,GAAI,EAAGC,GAAKH,GAAMrZ,OAAQuZ,GAAIC,KAAMD,GAAG,CACxCG,GAAOL,GAAME,IACbE,GAA+BC,GAAK,GACpC1U,GAAQpM,KAAKkY,YAAY2I,GAAO1I,EAASC,EAAS,IAClDqC,EAAiCqG,GAAK,GACtCpG,EAAU+B,GAAWrQ,GAAMvK,OAASqe,GAChClE,GAAahc,KAAKoa,iCAAiChO,GAAMzK,MAAOyK,GAAMvK,OAAQif,GAAK,GAAIA,GAAK,GAAI1U,GAAMzK,MAAOyK,GAAMvK,OAAQ4Y,EAASC,EAAS,EAAG,EAAGoG,GAAK,GAAIX,IAAiB,EAAO,MAAgB,EAAOzc,GAC/M,GAAIoZ,GACAA,EAAkBgD,SAAS9D,GAAWpF,cACtC,MAAM8J,EAEV/J,GAAuB5L,KAAK,CACxB9H,EACA6Y,EACA1P,GACA4P,GACA,EACA,KACA,MAER,CAEAc,GACAA,EAAkBiE,KAAKpK,GAAuB7U,IAAI4U,IAEtD,IAAK,IAAIsK,GAAM,EAAGC,GAAOtK,GAAuBvP,OAAQ4Z,GAAMC,KAAQD,GAClEhhB,KAAK6b,oBAAoBxT,MAAMrI,KAAM2W,GAAuBqK,IAEpE,CACJ,GACErZ,EACF,MACJ,KAAK,kBACD,QAA4BY,IAAxBqU,EAAmC,CACnClZ,EAAiEiM,EAAY,GAC7E,IAAIuR,GAAStE,EAAoBlZ,EAAS4Z,GAC1C,GAAI4D,GACA,OAAOA,EAEf,GACEvZ,EACF,MACJ,KAAK,UACGoW,EACAR,IAGAvd,KAAKka,MAAMjX,KAEb0E,EACF,MACJ,KAAK,qBAYD,IAXAxI,EAA2BwQ,EAAY,GACvCqN,EAA4BrN,EAAY,GACxClE,EAAIsR,EAAiB5d,GACrBuM,EAAIqR,EAAiB5d,EAAI,GACzBge,EAAU1R,EAAI,GAAO,EACrB2R,EAAU1R,EAAI,GAAO,EACjByR,IAAWF,GAASG,IAAWF,IAC/Bja,EAAQ+W,OAAOvO,EAAGC,GAClBuR,EAAQE,EACRD,EAAQE,GAEPje,GAAK,EAAGA,EAAI6d,EAAI7d,GAAK,EACtBsM,EAAIsR,EAAiB5d,GACrBuM,EAAIqR,EAAiB5d,EAAI,GACzBge,EAAU1R,EAAI,GAAO,EACrB2R,EAAU1R,EAAI,GAAO,EACjBvM,GAAK6d,EAAK,GAAKG,IAAWF,GAASG,IAAWF,IAC9Cja,EAAQgX,OAAOxO,EAAGC,GAClBuR,EAAQE,EACRD,EAAQE,KAGdzV,EACF,MACJ,KAAK,oBACD8V,EAAsB9N,EACtB3P,KAAKwX,WAAa7H,EAAY,GAC1B4N,IACAvd,KAAKka,MAAMjX,GACXsa,EAAc,EACVC,IACAva,EAAQuR,SACRgJ,EAAgB,IAGxBva,EAAQiC,UACmDyK,EAAY,KACrEhI,EACF,MACJ,KAAK,sBACD+V,EAAwB/N,EACpB6N,IACAva,EAAQuR,SACRgJ,EAAgB,GAEpBxd,KAAKma,gBAAgBlX,EAAiC,KACpD0E,EACF,MACJ,KAAK,YACGoW,EACAP,IAGAva,EAAQuR,WAEV7M,EACF,MACJ,UACMA,EACF,MAEZ,CACI4V,GACAvd,KAAKka,MAAMjX,GAEXua,GACAva,EAAQuR,QAGhB,EASA8C,EAAS5X,UAAUyhB,QAAU,SAAUle,EAAS6Y,EAAc5Q,EAAW0S,EAAchD,EAAakC,GAChG9c,KAAK4X,cAAgBgG,EACrB5d,KAAK2c,SAAS1Z,EAAS6Y,EAAc5Q,EAAWlL,KAAK+M,aAAc6N,OAAarS,OAAWA,EAAWuU,EAC1G,EAWAxF,EAAS5X,UAAU0hB,oBAAsB,SAAUne,EAASiI,EAAW0S,EAAchB,EAAqBC,GAEtG,OADA7c,KAAK4X,cAAgBgG,EACd5d,KAAK2c,SAAS1Z,EAAS,EAAGiI,EAAWlL,KAAKiN,0BAA0B,EAAM2P,EAAqBC,EAC1G,EACOvF,CACX,CAl2B6B,GAm2B7B,U,0BCn7BI+J,EAAQ,CAAC,UAAW,SAAU,aAAc,QAAS,OAAQ,WAC7DC,EAA+B,WAa/B,SAASA,EAAc9U,EAAWC,EAAYC,EAAY6K,EAAUgK,EAAiBC,GAKjFxhB,KAAKoV,WAAa5I,EAKlBxM,KAAKyhB,UAAYlK,EAKjBvX,KAAKqV,YAAc3I,EAKnB1M,KAAKsV,YAAc7I,EAKnBzM,KAAK0hB,cAAgBF,EAKrBxhB,KAAK2hB,mBAAqB,CAAC,EAK3B3hB,KAAK4hB,qBAAuB,KAK5B5hB,KAAK6hB,wBAAyB,UAC9B7hB,KAAK8hB,iBAAiBP,EAC1B,CAmMA,OA9LAD,EAAc5hB,UAAUqiB,KAAO,SAAU9e,EAASiI,GAC9C,IAAI8W,EAAiBhiB,KAAKiiB,cAAc/W,GACxCjI,EAAQ8W,YACR9W,EAAQ+W,OAAOgI,EAAe,GAAIA,EAAe,IACjD/e,EAAQgX,OAAO+H,EAAe,GAAIA,EAAe,IACjD/e,EAAQgX,OAAO+H,EAAe,GAAIA,EAAe,IACjD/e,EAAQgX,OAAO+H,EAAe,GAAIA,EAAe,IACjD/e,EAAQ8e,MACZ,EAMAT,EAAc5hB,UAAUoiB,iBAAmB,SAAUP,GACjD,IAAK,IAAIzL,KAAUyL,EAAiB,CAChC,IAAIW,EAAYliB,KAAK2hB,mBAAmB7L,QACtBvN,IAAd2Z,IACAA,EAAY,CAAC,EACbliB,KAAK2hB,mBAAmB7L,GAAUoM,GAEtC,IAAIC,EAAsBZ,EAAgBzL,GAC1C,IAAK,IAAIC,KAAeoM,EAAqB,CACzC,IAAIpV,EAAeoV,EAAoBpM,GACvCmM,EAAUnM,GAAe,IAAI,EAAS/V,KAAKsV,YAAatV,KAAKqV,YAAarV,KAAKyhB,UAAW1U,EAC9F,CACJ,CACJ,EAKAuU,EAAc5hB,UAAU0iB,aAAe,SAAUF,GAC7C,IAAK,IAAIpM,KAAU9V,KAAK2hB,mBAEpB,IADA,IAAIU,EAAariB,KAAK2hB,mBAAmB7L,GAChCnO,EAAI,EAAGO,EAAKga,EAAU9a,OAAQO,EAAIO,IAAMP,EAC7C,GAAIua,EAAUva,KAAM0a,EAChB,OAAO,EAInB,OAAO,CACX,EAWAf,EAAc5hB,UAAU4iB,2BAA6B,SAAUC,EAAY9V,EAAYkO,EAAU6H,EAAcC,EAAUC,GACrHF,EAAehhB,KAAK0Z,MAAMsH,GAC1B,IAAIG,EAA6B,EAAfH,EAAmB,EACjCtX,GAAY,QAAiBlL,KAAK6hB,uBAAwBW,EAAe,GAAKA,EAAe,GAAK,EAAI/V,GAAa,EAAIA,GAAakO,GAAW4H,EAAW,IAAKA,EAAW,IAC1KK,GAAc5iB,KAAK4hB,qBACnBgB,IACA5iB,KAAK4hB,sBAAuB,QAAsBe,EAAaA,IAEnE,IAYIE,EAZA5f,EAAUjD,KAAK4hB,qBACf3e,EAAQiZ,OAAOva,QAAUghB,GACzB1f,EAAQiZ,OAAOra,SAAW8gB,GAC1B1f,EAAQiZ,OAAOva,MAAQghB,EACvB1f,EAAQiZ,OAAOra,OAAS8gB,GAElBC,GACN3f,EAAQ6f,UAAU,EAAG,EAAGH,EAAaA,QAMdpa,IAAvBvI,KAAK0hB,gBACLmB,GAAY,WACZ,QAAiBA,EAAWN,IAC5B,QAAOM,EAAWpW,GAAczM,KAAK0hB,cAAgBc,GAAeK,IAExE,IACI9M,EADAgN,EAAUC,EAAmBR,GAOjC,SAASS,EAAgBvf,EAASD,GAE9B,IADA,IAAIyf,EAAYjgB,EAAQkgB,aAAa,EAAG,EAAGR,EAAaA,GAAaS,KAC5DpC,EAAM,EAAG9Y,EAAK6a,EAAQ3b,OAAQ4Z,EAAM9Y,EAAI8Y,IAC7C,GAAIkC,EAAUH,EAAQ/B,IAAQ,EAAG,CAC7B,IAAK0B,GACgB,UAAhB3M,GAA2C,SAAhBA,IACc,IAA1C2M,EAAoBW,QAAQ3f,GAAiB,CAC7C,IAAI4f,GAAOP,EAAQ/B,GAAO,GAAK,EAC3BvV,EAAI+W,EAAgBc,EAAMX,EAC1BjX,EAAI8W,GAAiBc,EAAMX,EAAe,GAC1CY,EAAWd,EAAS/e,EAASD,EAAUgI,EAAIA,EAAIC,EAAIA,GACvD,GAAI6X,EACA,OAAOA,CAEf,CACAtgB,EAAQ6f,UAAU,EAAG,EAAGH,EAAaA,GACrC,KACJ,CAGR,CAEA,IAEIhb,EAAG6b,EAAGtB,EAAWuB,EAAUvC,EAF3BwC,EAAKrkB,OAAOskB,KAAK3jB,KAAK2hB,oBAAoB7f,IAAIwH,QAGlD,IAFAoa,EAAGE,KAAK,MAEHjc,EAAI+b,EAAGtc,OAAS,EAAGO,GAAK,IAAKA,EAAG,CACjC,IAAIqO,EAAY0N,EAAG/b,GAAGsO,WAEtB,IADAiM,EAAYliB,KAAK2hB,mBAAmB3L,GAC/BwN,EAAInC,EAAMja,OAAS,EAAGoc,GAAK,IAAKA,EAGjC,GAFAzN,EAAcsL,EAAMmC,GACpBC,EAAWvB,EAAUnM,QACJxN,IAAbkb,IACAvC,EAASuC,EAASrC,oBAAoBne,EAASiI,EAAWyP,EAAUsI,EAAiBJ,GACjF3B,GACA,OAAOA,CAIvB,CAEJ,EAKAI,EAAc5hB,UAAUuiB,cAAgB,SAAU/W,GAC9C,IAAIsB,EAAYxM,KAAKoV,WACrB,IAAK5I,EACD,OAAO,KAEX,IAAI+O,EAAO/O,EAAU,GACjBgP,EAAOhP,EAAU,GACjBiP,EAAOjP,EAAU,GACjBkP,EAAOlP,EAAU,GACjBwV,EAAiB,CAACzG,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAEhE,OADA,QAAYwG,EAAgB,EAAG,EAAG,EAAG9W,EAAW8W,GACzCA,CACX,EAIAV,EAAc5hB,UAAUmkB,QAAU,WAC9B,OAAO,QAAQ7jB,KAAK2hB,mBACxB,EAWAL,EAAc5hB,UAAUyhB,QAAU,SAAUle,EAAS6Y,EAAc5Q,EAAW0S,EAAchD,EAAakJ,EAAkBhH,GAEvH,IAAI4G,EAAKrkB,OAAOskB,KAAK3jB,KAAK2hB,oBAAoB7f,IAAIwH,QAClDoa,EAAGE,KAAK,MAGJ5jB,KAAKoV,aACLnS,EAAQ2I,OACR5L,KAAK+hB,KAAK9e,EAASiI,IAEvB,IACIvD,EAAGO,EAAIsb,EAAGO,EAAI7N,EAASC,EADvB6N,EAAeF,GAAsCzC,EAKzD,IAHIvE,GACA4G,EAAGhU,UAEF/H,EAAI,EAAGO,EAAKwb,EAAGtc,OAAQO,EAAIO,IAAMP,EAAG,CACrC,IAAIqO,EAAY0N,EAAG/b,GAAGsO,WAEtB,IADAC,EAAUlW,KAAK2hB,mBAAmB3L,GAC7BwN,EAAI,EAAGO,EAAKC,EAAa5c,OAAQoc,EAAIO,IAAMP,EAAG,CAC/C,IAAIzN,EAAciO,EAAaR,GAC/BrN,EAASD,EAAQH,QACFxN,IAAX4N,GACAA,EAAOgL,QAAQle,EAAS6Y,EAAc5Q,EAAW0S,EAAchD,EAAakC,EAEpF,CACJ,CACI9c,KAAKoV,YACLnS,EAAQkJ,SAEhB,EACOmV,CACX,CA3PkC,GAkQ9B2C,EAA6B,CAAC,EAQ3B,SAASjB,EAAmBkB,GAC/B,QAA2C3b,IAAvC0b,EAA2BC,GAC3B,OAAOD,EAA2BC,GAKtC,IAHA,IAAIjd,EAAgB,EAATid,EAAa,EACpBC,EAAgBD,EAASA,EACzBE,EAAY,IAAI5kB,MAAM2kB,EAAgB,GACjCxc,EAAI,EAAGA,GAAKuc,IAAUvc,EAC3B,IAAK,IAAI6b,EAAI,EAAGA,GAAKU,IAAUV,EAAG,CAC9B,IAAIa,EAAa1c,EAAIA,EAAI6b,EAAIA,EAC7B,GAAIa,EAAaF,EACb,MAEJ,IAAIG,EAAWF,EAAUC,GACpBC,IACDA,EAAW,GACXF,EAAUC,GAAcC,GAE5BA,EAASvZ,KAA4C,IAArCmZ,EAASvc,GAAKV,GAAQid,EAASV,IAAU,GACrD7b,EAAI,GACJ2c,EAASvZ,KAA4C,IAArCmZ,EAASvc,GAAKV,GAAQid,EAASV,IAAU,GAEzDA,EAAI,IACJc,EAASvZ,KAA4C,IAArCmZ,EAASvc,GAAKV,GAAQid,EAASV,IAAU,GACrD7b,EAAI,GACJ2c,EAASvZ,KAA4C,IAArCmZ,EAASvc,GAAKV,GAAQid,EAASV,IAAU,GAGrE,CAGJ,IADA,IAAIe,EAAa,GACDrc,GAAPP,EAAI,EAAQyc,EAAUhd,QAAQO,EAAIO,IAAMP,EACzCyc,EAAUzc,IACV4c,EAAWxZ,KAAK1C,MAAMkc,EAAYH,EAAUzc,IAIpD,OADAsc,EAA2BC,GAAUK,EAC9BA,CACX,CACA,S,wEC1TA,IAAIC,EAAc,CACdC,eAAgB,EAChBC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,KAAM,EACNC,gBAAiB,EACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,OAAQ,IAKDlU,EAAkB,CAACqT,EAAYS,MAI/BnL,EAAoB,CAAC0K,EAAYa,QAIjCC,EAAuB,CAACd,EAAYE,YAIpCa,EAAuB,CAACf,EAAYI,YAC/C,S,uICrCI3lB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GA8BjCylB,EAAa,CACpB,KAAQ,EACR,IAAO,EACP,OAAU,GACV,MAAS,EACT,MAAS,EACT,IAAO,EACP,OAAU,GACV,QAAW,GACX,WAAc,GACd,YAAe,GACf,OAAU,GAEVC,EAAmC,SAAUrlB,GAQ7C,SAASqlB,EAAkBlZ,EAAWC,EAAWC,EAAYC,GACzD,IAAIpM,EAAQF,EAAOR,KAAKI,KAAMuM,EAAWC,EAAWC,EAAYC,IAAe1M,KA+E/E,OA1EAM,EAAM2X,QAAU,KAKhB3X,EAAMolB,MAAQ,GAKdplB,EAAMqlB,aAAe,EAKrBrlB,EAAMslB,aAAe,EAKrBtlB,EAAMulB,yBAAsBtd,EAK5BjI,EAAMwlB,cAAgB,EAKtBxlB,EAAMylB,eAAiB,KAIvBzlB,EAAMuX,WAAa,CAAC,EAKpBvX,EAAM0lB,iBAAmB,KAIzB1lB,EAAMwX,aAAe,CAAC,EAKtBxX,EAAM2lB,WAA6D,CAAG,EAItE3lB,EAAMyX,WAAa,CAAC,EAKpBzX,EAAM4lB,SAAW,GAKjB5lB,EAAM6lB,SAAW,GAKjB7lB,EAAM8lB,WAAa,GAMnB9lB,EAAM0S,6BAA0BzK,EACzBjI,CACX,CAobA,OA5gBArB,EAAUwmB,EAAmBrlB,GA4F7BqlB,EAAkB/lB,UAAU8P,OAAS,WACjC,IAAIzC,EAAe3M,EAAOV,UAAU8P,OAAO5P,KAAKI,MAIhD,OAHA+M,EAAagL,WAAa/X,KAAK+X,WAC/BhL,EAAa8K,WAAa7X,KAAK6X,WAC/B9K,EAAa+K,aAAe9X,KAAK8X,aAC1B/K,CACX,EAKA0Y,EAAkB/lB,UAAUsF,SAAW,SAAUvB,EAAUC,GACvD,IAAI6U,EAAYvY,KAAK+lB,eACjBzN,EAActY,KAAKgmB,iBACnBxN,EAAYxY,KAAKimB,WACrB,GAAmB,KAAfjmB,KAAK0lB,OAAiBlN,IAAeD,GAAcD,GAAvD,CAGA,IAAIjW,EAAcrC,KAAKqC,YACnBwN,EAAQxN,EAAY+E,OACpBif,EAAe5iB,EAASqL,UACxBvB,EAAkB,KAClBC,EAAS/J,EAASsL,YACtB,GAAIyJ,EAAU8N,YAAc,UACP,cAAhBD,GACmB,mBAAhBA,GACgB,WAAhBA,GACgB,gBAAhBA,EAiDH,CACD,IAAIhH,EAAiB7G,EAAUuH,SAAW,KAAO,GACjD,OAAQsG,GACJ,IAAK,QACL,IAAK,aACD9Y,EAC8D,EAAW8B,qBACzE,MACJ,IAAK,aACD9B,EAC8D,EAAWgZ,kBACzE,MACJ,IAAK,SACDhZ,EAC0D,EAAWiZ,YACrE,MACJ,IAAK,kBACDjZ,EACmE,EAAWkZ,mBAC9EjZ,EAAS,EACT,MACJ,IAAK,UACDD,EAC2D,EAAWmZ,uBACjElO,EAAUuH,UACXV,EAAetU,KAAKwC,EAAgB,GAAKvN,KAAKyM,YAElDe,EAAS,EACT,MACJ,IAAK,eACD,IAAImZ,EACwD,EAAWC,wBACvErZ,EAAkB,GAClB,IAAS5F,EAAI,EAAGO,EAAKye,EAAevf,OAAQO,EAAIO,EAAIP,GAAK,EAChD6Q,EAAUuH,UACXV,EAAetU,KAAK4b,EAAehf,EAAI,GAAK3H,KAAKyM,YAErDc,EAAgBxC,KAAK4b,EAAehf,GAAIgf,EAAehf,EAAI,IAE/D,GAA+B,IAA3B4F,EAAgBnG,OAChB,OAEJoG,EAAS,EACT,MACJ,SAEAO,EAAM/N,KAAKsN,2BAA2BC,EAAiBC,GAC3D,GAAIO,IAAQ8B,EACR,OAEJ,GAAIwP,IACCtR,EAAM8B,GAAS,IAAMtC,EAAgBnG,OAASoG,EAAQ,CACvD,IAAIqZ,EAAQhX,EAAQ,EACpBwP,EAAiBA,EAAeyH,QAAO,SAAUvb,EAAG5D,GAChD,IAAIof,EAAO1kB,EAA0B,GAAbwkB,EAAQlf,MAAY4F,EAAgB5F,EAAI6F,IAC5DnL,EAA0B,GAAbwkB,EAAQlf,GAAS,KAAO4F,EAAgB5F,EAAI6F,EAAS,GAItE,OAHKuZ,KACCF,EAECE,CACX,GACJ,CACA/mB,KAAKgnB,mBACDxO,EAAU8G,gBAAkB9G,EAAU+G,oBACtCvf,KAAKiF,mBAAmBuT,EAAU8G,eAAgB9G,EAAU+G,kBACxD/G,EAAU8G,iBACVtf,KAAKsR,gBAAgBtR,KAAKkN,MAAOlN,KAAKkR,YACtClR,KAAKiN,yBAAyBlC,KAAK/K,KAAKkR,WAAWlR,KAAKkN,SAExDsL,EAAU+G,mBACVvf,KAAKwR,kBAAkBxR,KAAKkN,MAAOlN,KAAKoR,aACxCpR,KAAKiN,yBAAyBlC,KAAK/K,KAAKqR,aAAarR,KAAKkN,UAGlElN,KAAK4O,cAAcnL,EAAUC,GAE7B,IAAIkG,EAAU4O,EAAU5O,QACxB,GAAIA,GAAW,OACV4O,EAAU7M,MAAM,GAAK,GAAK6M,EAAU7M,MAAM,GAAK,GAAI,CACpD,IAAIsb,EAAKzO,EAAU5O,QAAQ,GACvB0M,EAAKkC,EAAU5O,QAAQ,GACvB2M,EAAKiC,EAAU5O,QAAQ,GACvB4M,EAAKgC,EAAU5O,QAAQ,GACvB4O,EAAU7M,MAAM,GAAK,IACrB2K,GAAMA,EACNE,GAAMA,GAENgC,EAAU7M,MAAM,GAAK,IACrBsb,GAAMA,EACN1Q,GAAMA,GAEV3M,EAAU,CAACqd,EAAI3Q,EAAIC,EAAIC,EAC3B,CAIA,IAAI0Q,EAAelnB,KAAK0M,WACxB1M,KAAK+M,aAAahC,KAAK,CACnB,gBACA8E,EACA9B,EACA,KACAkQ,IACAA,IACAA,IACA,EACA,EACA,EACAje,KAAK6lB,oBACL7lB,KAAK8lB,cACL,CAAC,EAAG,GACJ7H,SACA1V,EACAvI,KAAKgT,wBACLpJ,GAAW,KACL,KACAA,EAAQ9H,KAAI,SAAUrC,GACpB,OAAOA,EAAIynB,CACf,MACF1O,EAAU8G,iBACV9G,EAAU+G,iBACZvf,KAAK0lB,MACL1lB,KAAKkmB,SACLlmB,KAAKomB,WACLpmB,KAAKmmB,SACLnmB,KAAK2lB,aACL3lB,KAAK4lB,aACLvG,IAEJ,IAAI1T,EAAQ,EAAIub,EAChBlnB,KAAKiN,yBAAyBlC,KAAK,CAC/B,gBACA8E,EACA9B,EACA,KACAkQ,IACAA,IACAA,IACA,EACA,EACA,EACAje,KAAK6lB,oBACL7lB,KAAK8lB,cACL,CAACna,EAAOA,GACRsS,SACA1V,EACAvI,KAAKgT,wBACLpJ,IACE4O,EAAU8G,iBACV9G,EAAU+G,iBACZvf,KAAK0lB,MACL1lB,KAAKkmB,SACLlmB,KAAKomB,WACLpmB,KAAKmmB,SACLnmB,KAAK2lB,aACL3lB,KAAK4lB,aACLvG,IAEJrf,KAAKuP,YAAY7L,EACrB,KAhNyC,CACrC,KAAK,QAAW1D,KAAK0N,uBAAwBjK,EAASua,aAClD,OAEJ,IAAIvP,OAAO,EAEX,GADAlB,EAAkB9J,EAAS4L,qBACP,cAAhBgX,EACA5X,EAAO,CAAClB,EAAgBnG,aAEvB,GAAoB,mBAAhBif,EACL5X,EAAsE,EAAWa,eAEhF,GAAoB,WAAhB+W,EACL5X,EAA8D,EACzDa,UACA/M,MAAM,EAAG,QAEb,GAAoB,gBAAhB8jB,EAAgC,CACrC,IAAInX,EACwD,EAAWC,WACvEV,EAAO,GACP,IAAK,IAAI9G,EAAI,EAAGO,EAAKgH,EAAM9H,OAAQO,EAAIO,IAAMP,EACzC8G,EAAK1D,KAAKmE,EAAMvH,GAAG,GAE3B,CACA3H,KAAK4O,cAAcnL,EAAUC,GAK7B,IAJA,IAAIiV,EAAYH,EAAUG,UAEtBwO,EAAa,EACbC,OAAU,EACLC,EAAI,EAAGC,EAAK7Y,EAAKrH,OAAQigB,EAAIC,IAAMD,EAAG,CAC3C,QAAiB9e,GAAboQ,EAAwB,CACxB,IAAI4O,GAAQ,OAAc/O,EAAUwH,SAAUzS,EAAiB4Z,EAAY1Y,EAAK4Y,GAAI7Z,GACpF2Z,EAAaI,EAAM,GACnBH,EAAUG,EAAM,EACpB,MAEIH,EAAU3Y,EAAK4Y,GAEnB,IAAK,IAAI1f,EAAIwf,EAAYxf,EAAIyf,EAASzf,GAAK6F,EACvCnL,EAAY0I,KAAKwC,EAAgB5F,GAAI4F,EAAgB5F,EAAI,IAE7D,IAAIoG,EAAM1L,EAAY+E,OACtB+f,EAAa1Y,EAAK4Y,GAClBrnB,KAAKwnB,WAAW3X,EAAO9B,GACvB8B,EAAQ9B,CACZ,CACA/N,KAAKuP,YAAY7L,EACrB,CA1DA,CA2NJ,EAIA+hB,EAAkB/lB,UAAUsnB,gBAAkB,WAC1C,IAAI1O,EAActY,KAAKgmB,iBACnBxN,EAAYxY,KAAKimB,WACjB1N,EAAYvY,KAAK+lB,eACjB1N,EAAYrY,KAAKomB,WACjB9N,IACMD,KAAarY,KAAK8X,eACpB9X,KAAK8X,aAAaO,GAAa,CAC3BlT,YAAamT,EAAYnT,YACzBgL,QAASmI,EAAYnI,QACrBM,eAAgB6H,EAAY7H,eAC5B5F,UAAWyN,EAAYzN,UACvB+F,SAAU0H,EAAY1H,SACtBK,WAAYqH,EAAYrH,WACxBX,SAAUgI,EAAYhI,YAIlC,IAAI6H,EAAUnY,KAAKkmB,SACb/N,KAAWnY,KAAK+X,aAClB/X,KAAK+X,WAAWI,GAAW,CACvBhQ,KAAMqQ,EAAUrQ,KAChBwQ,UAAWH,EAAUG,WAAa,KAClCD,QAASF,EAAUE,QACnBgE,aAAclE,EAAUkE,cAAgB,KACxC/Q,MAAO6M,EAAU7M,QAGzB,IAAIyM,EAAUpY,KAAKmmB,SACf5N,IACMH,KAAWpY,KAAK6X,aAClB7X,KAAK6X,WAAWO,GAAW,CACvBlT,UAAWqT,EAAUrT,YAIrC,EAMAugB,EAAkB/lB,UAAU8nB,WAAa,SAAU3X,EAAO9B,GACtD,IAAIuK,EAActY,KAAKgmB,iBACnBxN,EAAYxY,KAAKimB,WACjB5N,EAAYrY,KAAKomB,WACjBjO,EAAUnY,KAAKkmB,SACf9N,EAAUpY,KAAKmmB,SACnBnmB,KAAKgnB,kBACL,IAAIta,EAAa1M,KAAK0M,WAClB+P,EAAW+I,EAAWhN,EAAUkE,cAChCwD,EAAUlgB,KAAK4lB,aAAelZ,EAC9BrF,EAAOrH,KAAK0lB,MACZ9M,EAAcN,EACXA,EAAYzN,UAAYrJ,KAAKI,IAAI4W,EAAU7M,MAAM,IAAO,EACzD,EACN3L,KAAK+M,aAAahC,KAAK,CACnB,gBACA8E,EACA9B,EACA0O,EACAjE,EAAUuH,SACV3H,EACAI,EAAUwH,SACVtT,EACAwT,EACA7H,EACAO,EAAclM,EACdrF,EACA8Q,EACA,IAEJnY,KAAKiN,yBAAyBlC,KAAK,CAC/B,gBACA8E,EACA9B,EACA0O,EACAjE,EAAUuH,SACV3H,EACAI,EAAUwH,SACV,EACAE,EACA7H,EACAO,EACAvR,EACA8Q,EACA,EAAIzL,GAEZ,EAKA+Y,EAAkB/lB,UAAU6F,aAAe,SAAUC,EAAW2N,GAC5D,IAAIqF,EAAWD,EAAWD,EAC1B,GAAK9S,EAGA,CACD,IAAIiiB,EAAgBjiB,EAAUkiB,UACzBD,GAKDlP,EAAYvY,KAAK+lB,eACZxN,IACDA,EAA4D,CAAG,EAC/DvY,KAAK+lB,eAAiBxN,GAE1BA,EAAUrT,WAAY,OAAYuiB,EAAc1X,YAAc,QAT9DwI,EAAY,KACZvY,KAAK+lB,eAAiBxN,GAU1B,IAAIoP,EAAkBniB,EAAUoiB,YAChC,GAAKD,EAIA,CACDrP,EAActY,KAAKgmB,iBACd1N,IACDA,EAAgE,CAAG,EACnEtY,KAAKgmB,iBAAmB1N,GAE5B,IAAIhI,EAAWqX,EAAgBtX,cAC3BI,EAAiBkX,EAAgBnX,oBACjC3F,EAAY8c,EAAgB7W,WAC5BG,EAAa0W,EAAgB3W,gBACjCsH,EAAYnI,QAAUwX,EAAgBzX,cAAgB,KACtDoI,EAAYhI,SAAWA,EAAWA,EAAS/N,QAAU,KACrD+V,EAAY7H,oBACWlI,IAAnBkI,EAA+B,KAAwBA,EAC3D6H,EAAY1H,SAAW+W,EAAgBhX,eAAiB,KACxD2H,EAAYzN,eACMtC,IAAdsC,EAA0B,KAAmBA,EACjDyN,EAAYrH,gBACO1I,IAAf0I,EAA2B,KAAoBA,EACnDqH,EAAYnT,aAAc,OAAYwiB,EAAgB5X,YAAc,KACxE,MAvBIuI,EAAc,KACdtY,KAAKgmB,iBAAmB1N,EAuB5BE,EAAYxY,KAAKimB,WACjB,IAAI9d,EAAO3C,EAAUqiB,WAAa,MAClC,QAAa1f,GACb,IAAIiY,EAAY5a,EAAUuO,gBAC1ByE,EAAUuH,SAAWva,EAAUsiB,cAC/BtP,EAAUrQ,KAAOA,EACjBqQ,EAAUwH,SAAWxa,EAAUuiB,cAC/BvP,EAAU8N,UAAY9gB,EAAUwiB,eAChCxP,EAAUG,UAAYnT,EAAUyiB,eAChCzP,EAAUE,QAAUlT,EAAU0iB,aAC9B1P,EAAUkE,aACNlX,EAAU2iB,mBAAqB,KACnC3P,EAAU8G,eAAiB9Z,EAAU4iB,oBACrC5P,EAAU+G,iBAAmB/Z,EAAU6iB,sBACvC7P,EAAU5O,QAAUpE,EAAU8iB,cAAgB,KAC9C9P,EAAU7M,WAAsBpD,IAAd6X,EAA0B,CAAC,EAAG,GAAKA,EACrD,IAAIjB,EAAc3Z,EAAU+iB,aACxBnJ,EAAc5Z,EAAUgjB,aACxBC,EAAqBjjB,EAAUqO,oBAC/B6U,EAAeljB,EAAUsO,cAC7B9T,KAAK0lB,MAAQlgB,EAAUmjB,WAAa,GACpC3oB,KAAK2lB,kBAA+Bpd,IAAhB4W,EAA4B,EAAIA,EACpDnf,KAAK4lB,kBAA+Brd,IAAhB6W,EAA4B,EAAIA,EACpDpf,KAAK6lB,yBACsBtd,IAAvBkgB,GAA2CA,EAC/CzoB,KAAK8lB,mBAAiCvd,IAAjBmgB,EAA6B,EAAIA,EACtD1oB,KAAKomB,WAAa9N,GACuB,iBAA3BA,EAAYnT,YAChBmT,EAAYnT,aACZ,QAAOmT,EAAYnT,cACrBmT,EAAYnI,QACZmI,EAAY7H,eACZ,IACA6H,EAAYzN,UACZyN,EAAY1H,SACZ0H,EAAYrH,WACZ,IACAqH,EAAYhI,SAASsY,OACrB,IACF,GACN5oB,KAAKkmB,SACD1N,EAAUrQ,KACNqQ,EAAU7M,OACT6M,EAAUG,WAAa,MACvBH,EAAUE,SAAW,MACrBF,EAAUkE,cAAgB,KACnC1c,KAAKmmB,SAAW5N,EACoB,iBAAvBA,EAAUrT,UACbqT,EAAUrT,UACV,KAAM,QAAOqT,EAAUrT,WAC3B,EACV,MA7FIlF,KAAK0lB,MAAQ,GA8FjB1lB,KAAKgT,wBAA0BG,CACnC,EACOsS,CACX,CA9gBsC,CA8gBpC,KACF,S,iJCpjBIxmB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAgCxC8oB,EAAyC,SAAUzoB,GAWnD,SAASyoB,EAAwB5lB,EAASyJ,EAAYe,EAAQvC,EAAW0S,EAAckL,EAAsBC,GACzG,IAAIzoB,EAAQF,EAAOR,KAAKI,OAASA,KA2KjC,OAtKAM,EAAM0oB,SAAW/lB,EAKjB3C,EAAM+U,YAAc3I,EAKpBpM,EAAM2oB,QAAUxb,EAKhBnN,EAAM4oB,WAAahe,EAKnB5K,EAAMsX,cAAgBgG,EAKtBtd,EAAM6oB,kBAAoBL,EAK1BxoB,EAAM8oB,eAAiBL,EAKvBzoB,EAAM+oB,kBAAoB,KAK1B/oB,EAAMgpB,oBAAsB,KAK5BhpB,EAAMipB,kBAAoB,KAK1BjpB,EAAMkpB,WAAa,KAKnBlpB,EAAMmpB,aAAe,KAKrBnpB,EAAM6R,OAAS,KAKf7R,EAAMopB,cAAgB,EAKtBppB,EAAMqpB,cAAgB,EAKtBrpB,EAAMspB,aAAe,EAKrBtpB,EAAMupB,cAAgB,EAKtBvpB,EAAMwpB,cAAgB,EAKtBxpB,EAAMypB,cAAgB,EAKtBzpB,EAAM0pB,sBAAuB,EAK7B1pB,EAAM2pB,eAAiB,EAKvB3pB,EAAM4pB,YAAc,CAAC,EAAG,GAKxB5pB,EAAM6pB,YAAc,EAKpB7pB,EAAMolB,MAAQ,GAKdplB,EAAMqlB,aAAe,EAKrBrlB,EAAMslB,aAAe,EAKrBtlB,EAAMulB,qBAAsB,EAK5BvlB,EAAMwlB,cAAgB,EAKtBxlB,EAAM8pB,WAAa,CAAC,EAAG,GAKvB9pB,EAAMylB,eAAiB,KAKvBzlB,EAAM0lB,iBAAmB,KAKzB1lB,EAAM2lB,WAAa,KAKnB3lB,EAAMqX,kBAAoB,GAK1BrX,EAAM+pB,oBAAqB,UACpB/pB,CACX,CAqtBA,OA54BArB,EAAU4pB,EAAyBzoB,GA+LnCyoB,EAAwBnpB,UAAU4qB,YAAc,SAAU/c,EAAiBO,EAAQC,EAAKP,GACpF,GAAKxN,KAAKmS,OAAV,CAGA,IAAI4K,GAAmB,EAAA7R,EAAA,IAAYqC,EAAiBO,EAAQC,EAAKP,EAAQxN,KAAKkpB,WAAYlpB,KAAK2X,mBAC3F1U,EAAUjD,KAAKgpB,SACfuB,EAAiBvqB,KAAKqqB,mBACtBG,EAAQvnB,EAAQ4I,YACM,GAAtB7L,KAAK6pB,gBACL5mB,EAAQ4I,YAAc2e,EAAQxqB,KAAK6pB,eAEvC,IAAIlP,EAAW3a,KAAKiqB,eAChBjqB,KAAKgqB,uBACLrP,GAAY3a,KAAK4X,eAErB,IAAK,IAAIjQ,EAAI,EAAGO,EAAK6U,EAAiB3V,OAAQO,EAAIO,EAAIP,GAAK,EAAG,CAC1D,IAAI8D,EAAIsR,EAAiBpV,GAAK3H,KAAK0pB,cAC/Bhe,EAAIqR,EAAiBpV,EAAI,GAAK3H,KAAK2pB,cACvC,GAAiB,IAAbhP,GACuB,GAAvB3a,KAAKkqB,YAAY,IACM,GAAvBlqB,KAAKkqB,YAAY,GAAS,CAC1B,IAAI3P,EAAU9O,EAAIzL,KAAK0pB,cACnBlP,EAAU9O,EAAI1L,KAAK2pB,eACvB,QAAiBY,EAAgBhQ,EAASC,EAAS,EAAG,EAAGG,GAAWJ,GAAUC,GAC9EvX,EAAQ6I,aAAazD,MAAMpF,EAASsnB,GACpCtnB,EAAQ+I,UAAUuO,EAASC,GAC3BvX,EAAQ0I,MAAM3L,KAAKkqB,YAAY,GAAIlqB,KAAKkqB,YAAY,IACpDjnB,EAAQiJ,UAAUlM,KAAKmS,OAAQnS,KAAK8pB,cAAe9pB,KAAK+pB,cAAe/pB,KAAKmqB,YAAanqB,KAAK4pB,cAAe5pB,KAAK0pB,eAAgB1pB,KAAK2pB,cAAe3pB,KAAKmqB,YAAanqB,KAAK4pB,cAC7K3mB,EAAQ6I,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACxC,MAEI7I,EAAQiJ,UAAUlM,KAAKmS,OAAQnS,KAAK8pB,cAAe9pB,KAAK+pB,cAAe/pB,KAAKmqB,YAAanqB,KAAK4pB,aAAcne,EAAGC,EAAG1L,KAAKmqB,YAAanqB,KAAK4pB,aAEjJ,CAC0B,GAAtB5pB,KAAK6pB,gBACL5mB,EAAQ4I,YAAc2e,EAhC1B,CAkCJ,EAQA3B,EAAwBnpB,UAAU+qB,UAAY,SAAUld,EAAiBO,EAAQC,EAAKP,GAClF,GAAKxN,KAAKimB,YAA6B,KAAfjmB,KAAK0lB,MAA7B,CAGI1lB,KAAK+lB,gBACL/lB,KAAK0qB,qBAAqB1qB,KAAK+lB,gBAE/B/lB,KAAKgmB,kBACLhmB,KAAK2qB,uBAAuB3qB,KAAKgmB,kBAErChmB,KAAK4qB,qBAAqB5qB,KAAKimB,YAC/B,IAAIlJ,GAAmB,EAAA7R,EAAA,IAAYqC,EAAiBO,EAAQC,EAAKP,EAAQxN,KAAKkpB,WAAYlpB,KAAK2X,mBAC3F1U,EAAUjD,KAAKgpB,SACfrO,EAAW3a,KAAK8lB,cAIpB,IAHI9lB,KAAK6lB,sBACLlL,GAAY3a,KAAK4X,eAEd9J,EAASC,EAAKD,GAAUN,EAAQ,CACnC,IAAI/B,EAAIsR,EAAiBjP,GAAU9N,KAAK2lB,aACpCja,EAAIqR,EAAiBjP,EAAS,GAAK9N,KAAK4lB,aAC5C,GAAiB,IAAbjL,GACsB,GAAtB3a,KAAKoqB,WAAW,IACM,GAAtBpqB,KAAKoqB,WAAW,GAAS,CACzB,IAAIG,GAAiB,QAAiBvqB,KAAKqqB,mBAAoB5e,EAAGC,EAAG,EAAG,EAAGiP,GAAWlP,GAAIC,GAC1FzI,EAAQ6I,aAAazD,MAAMpF,EAASsnB,GACpCtnB,EAAQ+I,UAAUP,EAAGC,GACrBzI,EAAQ0I,MAAM3L,KAAKoqB,WAAW,GAAIpqB,KAAKoqB,WAAW,IAC9CpqB,KAAKgmB,kBACL/iB,EAAQ4nB,WAAW7qB,KAAK0lB,MAAO,EAAG,GAElC1lB,KAAK+lB,gBACL9iB,EAAQ6nB,SAAS9qB,KAAK0lB,MAAO,EAAG,GAEpCziB,EAAQ6I,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACxC,MAEQ9L,KAAKgmB,kBACL/iB,EAAQ4nB,WAAW7qB,KAAK0lB,MAAOja,EAAGC,GAElC1L,KAAK+lB,gBACL9iB,EAAQ6nB,SAAS9qB,KAAK0lB,MAAOja,EAAGC,EAG5C,CAxCA,CAyCJ,EAUAmd,EAAwBnpB,UAAUqrB,cAAgB,SAAUxd,EAAiBO,EAAQC,EAAKP,EAAQwd,GAC9F,IAAI/nB,EAAUjD,KAAKgpB,SACfjM,GAAmB,EAAA7R,EAAA,IAAYqC,EAAiBO,EAAQC,EAAKP,EAAQxN,KAAKkpB,WAAYlpB,KAAK2X,mBAC/F1U,EAAQ+W,OAAO+C,EAAiB,GAAIA,EAAiB,IACrD,IAAI3V,EAAS2V,EAAiB3V,OAC1B4jB,IACA5jB,GAAU,GAEd,IAAK,IAAIO,EAAI,EAAGA,EAAIP,EAAQO,GAAK,EAC7B1E,EAAQgX,OAAO8C,EAAiBpV,GAAIoV,EAAiBpV,EAAI,IAK7D,OAHIqjB,GACA/nB,EAAQ2b,YAEL7Q,CACX,EASA8a,EAAwBnpB,UAAUurB,WAAa,SAAU1d,EAAiBO,EAAQW,EAAMjB,GACpF,IAAK,IAAI7F,EAAI,EAAGO,EAAKuG,EAAKrH,OAAQO,EAAIO,IAAMP,EACxCmG,EAAS9N,KAAK+qB,cAAcxd,EAAiBO,EAAQW,EAAK9G,GAAI6F,GAAQ,GAE1E,OAAOM,CACX,EAQA+a,EAAwBnpB,UAAUqE,WAAa,SAAUN,GACrD,IAAK,QAAWzD,KAAKipB,QAASxlB,EAASua,aAAvC,CAGA,GAAIhe,KAAKwpB,YAAcxpB,KAAKypB,aAAc,CAClCzpB,KAAKwpB,YACLxpB,KAAK0qB,qBAAqB1qB,KAAKwpB,YAE/BxpB,KAAKypB,cACLzpB,KAAK2qB,uBAAuB3qB,KAAKypB,cAErC,IAAI1M,GAAmB,QAAgBtZ,EAAUzD,KAAKkpB,WAAYlpB,KAAK2X,mBACnE2G,EAAKvB,EAAiB,GAAKA,EAAiB,GAC5CwB,EAAKxB,EAAiB,GAAKA,EAAiB,GAC5CmH,EAAS1iB,KAAKid,KAAKH,EAAKA,EAAKC,EAAKA,GAClCtb,EAAUjD,KAAKgpB,SACnB/lB,EAAQ8W,YACR9W,EAAQyb,IAAI3B,EAAiB,GAAIA,EAAiB,GAAImH,EAAQ,EAAG,EAAI1iB,KAAKmd,IACtE3e,KAAKwpB,YACLvmB,EAAQsR,OAERvU,KAAKypB,cACLxmB,EAAQuR,QAEhB,CACmB,KAAfxU,KAAK0lB,OACL1lB,KAAKyqB,UAAUhnB,EAAS+iB,YAAa,EAAG,EAAG,EAvB/C,CAyBJ,EAQAqC,EAAwBnpB,UAAUoE,SAAW,SAAUnD,GACnDX,KAAKiF,mBAAmBtE,EAAM+mB,UAAW/mB,EAAMinB,aAC/C5nB,KAAKoF,cAAczE,EAAMgT,YACzB3T,KAAKuF,aAAa5E,EAAMgoB,UAC5B,EAIAE,EAAwBnpB,UAAUoM,aAAe,SAAUZ,GACvDlL,KAAKkpB,WAAahe,CACtB,EAQA2d,EAAwBnpB,UAAUmE,aAAe,SAAUJ,GACvD,IAAId,EAAOc,EAASqL,UACpB,OAAQnM,GACJ,IAAK,QACD3C,KAAK4E,UACgD,GACrD,MACJ,IAAK,aACD5E,KAAKoE,eACqD,GAC1D,MACJ,IAAK,UACDpE,KAAK8E,YACkD,GACvD,MACJ,IAAK,aACD9E,KAAKwE,eACqD,GAC1D,MACJ,IAAK,kBACDxE,KAAKsE,oBAC0D,GAC/D,MACJ,IAAK,eACDtE,KAAK0E,iBACuD,GAC5D,MACJ,IAAK,qBACD1E,KAAKkE,uBAC6D,GAClE,MACJ,IAAK,SACDlE,KAAK+D,WACiD,GACtD,MACJ,SAER,EAWA8kB,EAAwBnpB,UAAUuE,YAAc,SAAUP,EAAS/C,GAC/D,IAAI8C,EAAW9C,EAAMuqB,qBAANvqB,CAA4B+C,GACtCD,IAAa,QAAWzD,KAAKipB,QAASxlB,EAASua,eAGpDhe,KAAK8D,SAASnD,GACdX,KAAK6D,aAAaJ,GACtB,EAOAolB,EAAwBnpB,UAAUwE,uBAAyB,SAAUT,GAEjE,IADA,IAAI0nB,EAAa1nB,EAAS2nB,qBACjBzjB,EAAI,EAAGO,EAAKijB,EAAW/jB,OAAQO,EAAIO,IAAMP,EAC9C3H,KAAK6D,aAAasnB,EAAWxjB,GAErC,EAOAkhB,EAAwBnpB,UAAUkF,UAAY,SAAUnB,GAChDzD,KAAKmpB,oBACL1lB,EAAiEA,EAAS4nB,oBAAoBrrB,KAAKmpB,kBAAmBnpB,KAAKopB,iBAE/H,IAAI7b,EAAkB9J,EAAS4L,qBAC3B7B,EAAS/J,EAASsL,YAClB/O,KAAKmS,QACLnS,KAAKsqB,YAAY/c,EAAiB,EAAGA,EAAgBnG,OAAQoG,GAE9C,KAAfxN,KAAK0lB,OACL1lB,KAAKyqB,UAAUld,EAAiB,EAAGA,EAAgBnG,OAAQoG,EAEnE,EAOAqb,EAAwBnpB,UAAU8E,eAAiB,SAAUf,GACrDzD,KAAKmpB,oBACL1lB,EAAsEA,EAAS4nB,oBAAoBrrB,KAAKmpB,kBAAmBnpB,KAAKopB,iBAEpI,IAAI7b,EAAkB9J,EAAS4L,qBAC3B7B,EAAS/J,EAASsL,YAClB/O,KAAKmS,QACLnS,KAAKsqB,YAAY/c,EAAiB,EAAGA,EAAgBnG,OAAQoG,GAE9C,KAAfxN,KAAK0lB,OACL1lB,KAAKyqB,UAAUld,EAAiB,EAAGA,EAAgBnG,OAAQoG,EAEnE,EAOAqb,EAAwBnpB,UAAU0E,eAAiB,SAAUX,GAIzD,GAHIzD,KAAKmpB,oBACL1lB,EAAsEA,EAAS4nB,oBAAoBrrB,KAAKmpB,kBAAmBnpB,KAAKopB,kBAE/H,QAAWppB,KAAKipB,QAASxlB,EAASua,aAAvC,CAGA,GAAIhe,KAAKypB,aAAc,CACnBzpB,KAAK2qB,uBAAuB3qB,KAAKypB,cACjC,IAAIxmB,EAAUjD,KAAKgpB,SACfzb,EAAkB9J,EAAS4L,qBAC/BpM,EAAQ8W,YACR/Z,KAAK+qB,cAAcxd,EAAiB,EAAGA,EAAgBnG,OAAQ3D,EAASsL,aAAa,GACrF9L,EAAQuR,QACZ,CACA,GAAmB,KAAfxU,KAAK0lB,MAAc,CACnB,IAAI4F,EAAe7nB,EAAS8iB,kBAC5BvmB,KAAKyqB,UAAUa,EAAc,EAAG,EAAG,EACvC,CAZA,CAaJ,EAOAzC,EAAwBnpB,UAAU4E,oBAAsB,SAAUb,GAC1DzD,KAAKmpB,oBACL1lB,EACoEA,EAAS4nB,oBAAoBrrB,KAAKmpB,kBAAmBnpB,KAAKopB,iBAElI,IAAImC,EAAiB9nB,EAASua,YAC9B,IAAK,QAAWhe,KAAKipB,QAASsC,GAA9B,CAGA,GAAIvrB,KAAKypB,aAAc,CACnBzpB,KAAK2qB,uBAAuB3qB,KAAKypB,cACjC,IAAIxmB,EAAUjD,KAAKgpB,SACfzb,EAAkB9J,EAAS4L,qBAC3BvB,EAAS,EACTW,EAAqChL,EAAS6L,UAC9C9B,EAAS/J,EAASsL,YACtB9L,EAAQ8W,YACR,IAAK,IAAIpS,EAAI,EAAGO,EAAKuG,EAAKrH,OAAQO,EAAIO,IAAMP,EACxCmG,EAAS9N,KAAK+qB,cAAcxd,EAAiBO,EAAQW,EAAK9G,GAAI6F,GAAQ,GAE1EvK,EAAQuR,QACZ,CACA,GAAmB,KAAfxU,KAAK0lB,MAAc,CACnB,IAAI8F,EAAgB/nB,EAASgjB,mBAC7BzmB,KAAKyqB,UAAUe,EAAe,EAAGA,EAAcpkB,OAAQ,EAC3D,CAjBA,CAkBJ,EAOAyhB,EAAwBnpB,UAAUoF,YAAc,SAAUrB,GAItD,GAHIzD,KAAKmpB,oBACL1lB,EAAmEA,EAAS4nB,oBAAoBrrB,KAAKmpB,kBAAmBnpB,KAAKopB,kBAE5H,QAAWppB,KAAKipB,QAASxlB,EAASua,aAAvC,CAGA,GAAIhe,KAAKypB,cAAgBzpB,KAAKwpB,WAAY,CAClCxpB,KAAKwpB,YACLxpB,KAAK0qB,qBAAqB1qB,KAAKwpB,YAE/BxpB,KAAKypB,cACLzpB,KAAK2qB,uBAAuB3qB,KAAKypB,cAErC,IAAIxmB,EAAUjD,KAAKgpB,SACnB/lB,EAAQ8W,YACR/Z,KAAKirB,WAAWxnB,EAASwL,6BAA8B,EACzBxL,EAAS6L,UAAY7L,EAASsL,aACxD/O,KAAKwpB,YACLvmB,EAAQsR,OAERvU,KAAKypB,cACLxmB,EAAQuR,QAEhB,CACA,GAAmB,KAAfxU,KAAK0lB,MAAc,CACnB,IAAI+F,EAAoBhoB,EAASijB,uBACjC1mB,KAAKyqB,UAAUgB,EAAmB,EAAG,EAAG,EAC5C,CAtBA,CAuBJ,EAMA5C,EAAwBnpB,UAAUgF,iBAAmB,SAAUjB,GAI3D,GAHIzD,KAAKmpB,oBACL1lB,EAAwEA,EAAS4nB,oBAAoBrrB,KAAKmpB,kBAAmBnpB,KAAKopB,kBAEjI,QAAWppB,KAAKipB,QAASxlB,EAASua,aAAvC,CAGA,GAAIhe,KAAKypB,cAAgBzpB,KAAKwpB,WAAY,CAClCxpB,KAAKwpB,YACLxpB,KAAK0qB,qBAAqB1qB,KAAKwpB,YAE/BxpB,KAAKypB,cACLzpB,KAAK2qB,uBAAuB3qB,KAAKypB,cAErC,IAAIxmB,EAAUjD,KAAKgpB,SACfzb,EAAkB9J,EAASwL,6BAC3BnB,EAAS,EACToB,EAAQzL,EAAS0L,WACjB3B,EAAS/J,EAASsL,YACtB9L,EAAQ8W,YACR,IAAK,IAAIpS,EAAI,EAAGO,EAAKgH,EAAM9H,OAAQO,EAAIO,IAAMP,EAAG,CAC5C,IAAI8G,EAAOS,EAAMvH,GACjBmG,EAAS9N,KAAKirB,WAAW1d,EAAiBO,EAAQW,EAAMjB,EAC5D,CACIxN,KAAKwpB,YACLvmB,EAAQsR,OAERvU,KAAKypB,cACLxmB,EAAQuR,QAEhB,CACA,GAAmB,KAAfxU,KAAK0lB,MAAc,CACnB,IAAIgG,EAAqBjoB,EAASmjB,wBAClC5mB,KAAKyqB,UAAUiB,EAAoB,EAAGA,EAAmBtkB,OAAQ,EACrE,CA5BA,CA6BJ,EAKAyhB,EAAwBnpB,UAAUgrB,qBAAuB,SAAUnS,GAC/D,IAAItV,EAAUjD,KAAKgpB,SACf2C,EAAmB3rB,KAAKqpB,kBACvBsC,EAOGA,EAAiBzmB,WAAaqT,EAAUrT,YACxCymB,EAAiBzmB,UAAYqT,EAAUrT,UACvCjC,EAAQiC,UAAYqT,EAAUrT,YARlCjC,EAAQiC,UAAYqT,EAAUrT,UAC9BlF,KAAKqpB,kBAAoB,CACrBnkB,UAAWqT,EAAUrT,WASjC,EAKA2jB,EAAwBnpB,UAAUirB,uBAAyB,SAAUrS,GACjE,IAAIrV,EAAUjD,KAAKgpB,SACf4C,EAAqB5rB,KAAKspB,oBACzBsC,GAqBGA,EAAmBzb,SAAWmI,EAAYnI,UAC1Cyb,EAAmBzb,QAAUmI,EAAYnI,QACzClN,EAAQkN,QAAUmI,EAAYnI,SAE9BlN,EAAQkW,eACH,QAAOyS,EAAmBtb,SAAUgI,EAAYhI,WACjDrN,EAAQkW,YAAayS,EAAmBtb,SAAWgI,EAAYhI,UAE/Dsb,EAAmBnb,gBAAkB6H,EAAY7H,iBACjDmb,EAAmBnb,eAAiB6H,EAAY7H,eAChDxN,EAAQwN,eAAiB6H,EAAY7H,iBAGzCmb,EAAmBhb,UAAY0H,EAAY1H,WAC3Cgb,EAAmBhb,SAAW0H,EAAY1H,SAC1C3N,EAAQ2N,SAAW0H,EAAY1H,UAE/Bgb,EAAmB/gB,WAAayN,EAAYzN,YAC5C+gB,EAAmB/gB,UAAYyN,EAAYzN,UAC3C5H,EAAQ4H,UAAYyN,EAAYzN,WAEhC+gB,EAAmB3a,YAAcqH,EAAYrH,aAC7C2a,EAAmB3a,WAAaqH,EAAYrH,WAC5ChO,EAAQgO,WAAaqH,EAAYrH,YAEjC2a,EAAmBzmB,aAAemT,EAAYnT,cAC9CymB,EAAmBzmB,YAAcmT,EAAYnT,YAC7ClC,EAAQkC,YAAcmT,EAAYnT,eA/CtClC,EAAQkN,QAAUmI,EAAYnI,QAC1BlN,EAAQkW,cACRlW,EAAQkW,YAAYb,EAAYhI,UAChCrN,EAAQwN,eAAiB6H,EAAY7H,gBAEzCxN,EAAQ2N,SAAW0H,EAAY1H,SAC/B3N,EAAQ4H,UAAYyN,EAAYzN,UAChC5H,EAAQgO,WAAaqH,EAAYrH,WACjChO,EAAQkC,YAAcmT,EAAYnT,YAClCnF,KAAKspB,oBAAsB,CACvBnZ,QAASmI,EAAYnI,QACrBG,SAAUgI,EAAYhI,SACtBG,eAAgB6H,EAAY7H,eAC5BG,SAAU0H,EAAY1H,SACtB/F,UAAWyN,EAAYzN,UACvBoG,WAAYqH,EAAYrH,WACxB9L,YAAamT,EAAYnT,aAkCrC,EAKA0jB,EAAwBnpB,UAAUkrB,qBAAuB,SAAUpS,GAC/D,IAAIvV,EAAUjD,KAAKgpB,SACf6C,EAAmB7rB,KAAKupB,kBACxB5Q,EAAYH,EAAUG,UACpBH,EAAUG,UACV,KACDkT,GAWGA,EAAiB1jB,MAAQqQ,EAAUrQ,OACnC0jB,EAAiB1jB,KAAOqQ,EAAUrQ,KAClClF,EAAQkF,KAAOqQ,EAAUrQ,MAEzB0jB,EAAiBlT,WAAaA,IAC9BkT,EAAiBlT,UAA2C,EAC5D1V,EAAQ0V,UAA2C,GAEnDkT,EAAiBnP,cAAgBlE,EAAUkE,eAC3CmP,EAAiBnP,aAAkDlE,EAAsB,aACzFvV,EAAQyZ,aAAkDlE,EAAsB,gBApBpFvV,EAAQkF,KAAOqQ,EAAUrQ,KACzBlF,EAAQ0V,UAA2C,EACnD1V,EAAQyZ,aAAkDlE,EAAsB,aAChFxY,KAAKupB,kBAAoB,CACrBphB,KAAMqQ,EAAUrQ,KAChBwQ,UAAWA,EACX+D,aAAclE,EAAUkE,cAiBpC,EAQAmM,EAAwBnpB,UAAUuF,mBAAqB,SAAUC,EAAWC,GACxE,IAAI7E,EAAQN,KACZ,GAAKkF,EAGA,CACD,IAAI4K,EAAiB5K,EAAU6K,WAC/B/P,KAAKwpB,WAAa,CACdtkB,WAAW,OAAY4K,GAAkC,MAEjE,MAPI9P,KAAKwpB,WAAa,KAQtB,GAAKrkB,EAGA,CACD,IAAI6K,EAAmB7K,EAAY4K,WAC/BE,EAAqB9K,EAAY+K,aACjCE,EAAsBjL,EAAYkL,cAClCE,EAA4BpL,EAAYqL,oBACxCE,EAAsBvL,EAAYwL,cAClCE,EAAmB1L,EAAY2L,WAC/BC,EAAwB5L,EAAY6L,gBACpCV,EAAWF,GAET,KACNpQ,KAAKypB,aAAe,CAChBtZ,aAAgC5H,IAAvB0H,EACHA,EACA,KACNK,SAA+B,IAArBtQ,KAAKqV,YACT/E,EACAA,EAASxO,KAAI,SAAU8N,GAAK,OAAOA,EAAItP,EAAM+U,WAAa,IAChE5E,gBAAiBF,GAEX,MAAyBvQ,KAAKqV,YACpCzE,cAAkCrI,IAAxBmI,EACJA,EACA,KACN7F,gBAAiCtC,IAArBsI,EACNA,EACA,MAAoB7Q,KAAKqV,YAC/BpE,gBAAsC1I,IAA1BwI,EACNA,EACA,KACN5L,aAAa,OAAY6K,GAAsC,MAEvE,MAlCIhQ,KAAKypB,aAAe,IAmC5B,EAOAZ,EAAwBnpB,UAAU0F,cAAgB,SAAUC,GACxD,IAAIymB,EACJ,GAAKzmB,IAAgBymB,EAAYzmB,EAAWiO,WAA5C,CAIA,IAAIyY,EAAc1mB,EAAWgO,YACzB2Y,EAAc3mB,EAAWmO,YAC7BxT,KAAKmS,OAAS9M,EAAWsO,SAAS3T,KAAKqV,aACvCrV,KAAK0pB,cAAgBqC,EAAY,GAAK/rB,KAAKqV,YAC3CrV,KAAK2pB,cAAgBoC,EAAY,GAAK/rB,KAAKqV,YAC3CrV,KAAK4pB,aAAekC,EAAU,GAAK9rB,KAAKqV,YACxCrV,KAAK6pB,cAAgBxkB,EAAWuO,aAChC5T,KAAK8pB,cAAgBkC,EAAY,GACjChsB,KAAK+pB,cAAgBiC,EAAY,GACjChsB,KAAKgqB,qBAAuB3kB,EAAWwO,oBACvC7T,KAAKiqB,eAAiB5kB,EAAWyO,cACjC9T,KAAKkqB,YAAc7kB,EAAW0O,gBAC9B/T,KAAKmqB,YAAc2B,EAAU,GAAK9rB,KAAKqV,WAbvC,MAFIrV,KAAKmS,OAAS,IAgBtB,EAOA0W,EAAwBnpB,UAAU6F,aAAe,SAAUC,GACvD,GAAKA,EAGA,CACD,IAAIiiB,EAAgBjiB,EAAUkiB,UAC9B,GAAKD,EAGA,CACD,IAAIwE,EAAqBxE,EAAc1X,WACvC/P,KAAK+lB,eAAiB,CAClB7gB,WAAW,OAAY+mB,GAA0C,MAEzE,MAPIjsB,KAAK+lB,eAAiB,KAQ1B,IAAI4B,EAAkBniB,EAAUoiB,YAChC,GAAKD,EAGA,CACD,IAAIuE,EAAuBvE,EAAgB5X,WACvCoc,EAAyBxE,EAAgBzX,aACzCkc,EAA0BzE,EAAgBtX,cAC1Cgc,EAAgC1E,EAAgBnX,oBAChD8b,EAA0B3E,EAAgBhX,cAC1C4b,EAAuB5E,EAAgB7W,WACvC0b,EAA4B7E,EAAgB3W,gBAChDhR,KAAKgmB,iBAAmB,CACpB7V,aAAoC5H,IAA3B4jB,EACHA,EACA,KACN7b,SAAU8b,GAEJ,KACN3b,eAAgB4b,GAEV,KACNzb,cAAsCrI,IAA5B+jB,EACJA,EACA,KACNzhB,eAAoCtC,IAAzBgkB,EACLA,EACA,KACNtb,gBAA0C1I,IAA9BikB,EACNA,EACA,KACNrnB,aAAa,OAAY+mB,GAA8C,MAE/E,MA/BIlsB,KAAKgmB,iBAAmB,KAgC5B,IAAIyG,EAAWjnB,EAAUqiB,UACrB1I,EAAc3Z,EAAU+iB,aACxBnJ,EAAc5Z,EAAUgjB,aACxBC,EAAqBjjB,EAAUqO,oBAC/B6U,EAAeljB,EAAUsO,cACzBsM,EAAY5a,EAAUuO,gBACtB2Y,EAAWlnB,EAAUmjB,UACrBgE,EAAgBnnB,EAAUyiB,eAC1B2E,EAAmBpnB,EAAU2iB,kBACjCnoB,KAAKimB,WAAa,CACd9d,UAAmBI,IAAbkkB,EAAyBA,EAAW,KAC1C9T,eAA6BpQ,IAAlBokB,EAA8BA,EAAgB,KACzDjQ,kBAAmCnU,IAArBqkB,EACRA,EACA,MAEV5sB,KAAK0lB,WACYnd,IAAbmkB,EACMltB,MAAM6M,QAAQqgB,GACVA,EAASviB,QAAO,SAAUiN,EAAKyV,EAAGllB,GAAK,OAAQyP,GAAOzP,EAAI,EAAI,IAAMklB,EAAI,GAAG,IAC3EH,EACJ,GACV1sB,KAAK2lB,kBACepd,IAAhB4W,EAA4Bnf,KAAKqV,YAAc8J,EAAc,EACjEnf,KAAK4lB,kBACerd,IAAhB6W,EAA4Bpf,KAAKqV,YAAc+J,EAAc,EACjEpf,KAAK6lB,yBACsBtd,IAAvBkgB,GAAmCA,EACvCzoB,KAAK8lB,mBAAiCvd,IAAjBmgB,EAA6BA,EAAe,EACjE1oB,KAAKoqB,WAAa,CACdpqB,KAAKqV,YAAc+K,EAAU,GAC7BpgB,KAAKqV,YAAc+K,EAAU,GAErC,MAhFIpgB,KAAK0lB,MAAQ,EAiFrB,EACOmD,CACX,CA94B4C,CA84B1CtlB,EAAA,GACF,U,gDC36BWupB,EAAwB,GAe5B,SAASC,EAA4B9lB,EAAM+lB,EAAYC,EAAUC,EAAezf,EAAQhB,EAAYkO,GACvG,IAAIhZ,EAAQsF,EAAK,GAAK6lB,EAClBjrB,EAASoF,EAAK,GAAK6lB,EACnB7pB,GAAU,QAAsBtB,EAAOE,GAC3CoB,EAAQkqB,uBAAwB,EAOhC,IANA,IAAIjR,EAASjZ,EAAQiZ,OACjBvY,EAAW,IAAI,EAAwBV,EAAS6pB,EAAuBrf,EAAQ,KAAMkN,GACrFyS,EAAeH,EAAS7lB,OAExBimB,EAAc7rB,KAAKuX,MAAM,SAAwBqU,GACjDE,EAAmB,CAAC,EACf3lB,EAAI,EAAGA,GAAKylB,IAAgBzlB,EAAG,CACpC,IAAIjE,EAAUupB,EAAStlB,EAAI,GACvB4lB,EAAuB7pB,EAAQ8pB,oBAAsBN,EACzD,GAAKA,EAAL,CAGA,IAAIO,EAASF,EAAqB7pB,EAAS+I,GAC3C,GAAKghB,EAAL,CAGKjuB,MAAM6M,QAAQohB,KACfA,EAAS,CAACA,IAId,IAFA,IAAI5N,EAAQlY,EAAI0lB,EACZK,EAAQ,KAAO,SAAW7N,EAAM5J,SAAS,KAAK1T,OAAO,GAChDihB,EAAI,EAAGO,EAAK0J,EAAOrmB,OAAQoc,EAAIO,IAAMP,EAAG,CAC7C,IAAImK,EAAgBF,EAAOjK,GACvB/f,EAAWkqB,EAAczC,qBAAdyC,CAAoCjqB,GACnD,GAAKD,IAAa,QAAWgK,EAAQhK,EAASua,aAA9C,CAGA,IAAIrd,EAAQgtB,EAAcC,QACtBrZ,EAAO5T,EAAM+mB,UACbnT,GACAA,EAAKsZ,SAASH,GAElB,IAAIlZ,EAAS7T,EAAMinB,YACfpT,IACAA,EAAOqZ,SAASH,GAChBlZ,EAAO2E,YAAY,OAEvBxY,EAAMmtB,aAAQvlB,GACd,IAAI8U,EAAQsQ,EAAcha,WAC1B,GAAI0J,GAAgC,IAAvBA,EAAMzJ,aAAoB,CACnC,IAAIma,EAAU1Q,EAAM2Q,eACpB,IAAKD,EACD,SAEJ,IAAIE,GAAa,QAAsBF,EAAQ,GAAIA,EAAQ,QAAIxlB,EAAW,CAAEiiB,OAAO,IAC/E0D,EAAMD,EAAW/R,OACrB+R,EAAW/oB,UAAYwoB,EACvBO,EAAWE,SAAS,EAAG,EAAGD,EAAIvsB,MAAOusB,EAAIrsB,QACzClB,EAAMytB,SAAS,IAAIC,EAAA,EAAK,CACpBH,IAAKA,EACLH,QAASA,EACT3a,OAAQiK,EAAMhK,YACdib,aAAcC,EAAA,SACdC,aAAcD,EAAA,SACdzgB,OAAQuP,EAAM7J,YACdrI,QAAS,EACTlE,KAAMoW,EAAM/J,UACZ3H,MAAO0R,EAAMoR,WACb9T,SAAU0C,EAAMvJ,cAChBiL,eAAgB1B,EAAMxJ,sBAE9B,CACA,IAAIiC,EAASnV,EAAM+tB,aAAe,EAC9BC,EAAiBrB,EAAiBxX,GACjC6Y,IACDA,EAAiB,CAAC,EAClBrB,EAAiBxX,GAAU6Y,EAC3BA,EAAe,WAAa,GAC5BA,EAAe,UAAY,GAC3BA,EAAe,cAAgB,GAC/BA,EAAe,SAAW,IAE9BA,EAAelrB,EAASqL,UAAU8f,QAAQ,QAAS,KAAK7jB,KAAKtH,EAAU9C,EA9CvE,CA+CJ,CA1DA,CAJA,CA+DJ,CAIA,IAHA,IAAIkuB,EAAaxvB,OAAOskB,KAAK2J,GACxBxrB,IAAIwH,QACJsa,KAAK,MACM1b,GAAPP,EAAI,EAAQknB,EAAWznB,QAAQO,EAAIO,IAAMP,EAAG,CAC7CgnB,EAAiBrB,EAAiBuB,EAAWlnB,IACjD,IAAK,IAAIhF,KAAQgsB,EACb,KAAIG,EAAeH,EAAehsB,GAClC,IAAS6gB,EAAI,EAAGO,EAAK+K,EAAa1nB,OAAQoc,EAAIO,EAAIP,GAAK,EAAG,CACtD7f,EAASG,SAASgrB,EAAatL,EAAI,IACnC,IAAK,IAAIuL,EAAI,EAAGC,EAAKhC,EAAW5lB,OAAQ2nB,EAAIC,IAAMD,EAC9CprB,EAASmI,aAAakhB,EAAW+B,IACjCprB,EAASE,aAAairB,EAAatL,GAE3C,CAPuC,CAS/C,CACA,OAAOvgB,EAAQkgB,aAAa,EAAG,EAAGjH,EAAOva,MAAOua,EAAOra,OAC3D,CAUO,SAASotB,EAAUC,EAAOjC,EAAU/J,GACvC,IAAIiM,EAAiB,GACrB,GAAIjM,EAAW,CACX,IAAIzX,EAAIjK,KAAKuX,MAAMvX,KAAK0Z,MAAMgU,EAAM,IAAMpC,GACtCphB,EAAIlK,KAAKuX,MAAMvX,KAAK0Z,MAAMgU,EAAM,IAAMpC,GAItCjN,EAEA,IAFS,QAAMpU,EAAG,EAAGyX,EAAUvhB,MAAQ,IACvC,QAAM+J,EAAG,EAAGwX,EAAUrhB,OAAS,GAAKqhB,EAAUvhB,OAE9C6c,EAAI0E,EAAUE,KAAKvD,GACnBuP,EAAIlM,EAAUE,KAAKvD,EAAQ,GAC3BzgB,EAAI8jB,EAAUE,KAAKvD,EAAQ,GAC3BlY,EAAIvI,EAAI,KAAOgwB,EAAI,IAAM5Q,GACzB6O,EAAc7rB,KAAKuX,MAAM,SAAwBkU,EAAS7lB,QAC1DO,GAAKA,EAAI0lB,IAAgB,GACzB8B,EAAepkB,KAAKkiB,EAAStlB,EAAI0lB,EAAc,GAEvD,CACA,OAAO8B,CACX,C,6HCzJIlwB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAsCxCsvB,EAA6B,SAAUjvB,GAKvC,SAASivB,EAAYvtB,GACjB,IAAIxB,EAAQF,EAAOR,KAAKI,OAASA,KAMjC,OADAM,EAAMQ,KAAOgB,EACNxB,CACX,CAwJA,OApKArB,EAAUowB,EAAajvB,GAkBvBivB,EAAY3vB,UAAU4vB,oBAAsB,SAAU3sB,EAAMK,IACxD,SACJ,EAKAqsB,EAAY3vB,UAAU6vB,oBAAsB,SAAUvsB,GAClD,IAAIwsB,EAAYxsB,EAAWwsB,UACvBC,EAA6BzsB,EAAWysB,2BACxCC,EAA6B1sB,EAAW0sB,4BAC5C,QAAiBD,EAA4BzsB,EAAWiE,KAAK,GAAK,EAAGjE,EAAWiE,KAAK,GAAK,EAAG,EAAIuoB,EAAU/iB,YAAa,EAAI+iB,EAAU/iB,YAAa+iB,EAAU7U,UAAW6U,EAAUG,OAAO,IAAKH,EAAUG,OAAO,KAC/M,QAAYD,EAA4BD,EAC5C,EAgBAJ,EAAY3vB,UAAU4iB,2BAA6B,SAAUC,EAAYvf,EAAYwf,EAAcoN,EAAcnN,EAAUoN,EAASC,EAAaC,GAC7I,IAAI7O,EACAsO,EAAYxsB,EAAWwsB,UAQ3B,SAASlN,EAA2B0N,EAAStsB,EAASusB,EAAOxsB,GACzD,OAAOgf,EAAS7iB,KAAKiwB,EAASnsB,EAASssB,EAAUC,EAAQ,KAAMxsB,EACnE,CACA,IAAIysB,EAAaV,EAAUU,WACvBC,GAAuB,QAAM5N,EAAWhgB,QAAS2tB,GACjDE,EAAU,CAAC,CAAC,EAAG,IACnB,GAAIF,EAAWG,YAAcT,EAAc,CACvC,IAAIU,EAAmBJ,EAAWlS,YAC9BuS,GAAa,QAASD,GAC1BF,EAAQrlB,KAAK,EAAEwlB,EAAY,GAAI,CAACA,EAAY,GAChD,CAKA,IAJA,IAAIC,EAAcxtB,EAAWytB,iBACzBC,EAAYF,EAAYppB,OACxBupB,EAA4C,GAC5ChjB,EAAW,GACNhG,EAAI,EAAGA,EAAIyoB,EAAQhpB,OAAQO,IAChC,IAAK,IAAI6b,EAAIkN,EAAY,EAAGlN,GAAK,IAAKA,EAAG,CACrC,IAAIoN,EAAaJ,EAAYhN,GACzByM,EAAQW,EAAWX,MACvB,GAAIA,EAAMY,gBACN,OAAOD,EAAYpB,IACnBM,EAAYlwB,KAAKmwB,EAAUE,GAAQ,CACnC,IAAIa,EAAgBb,EAAMc,cACtBC,EAASf,EAAMgB,YACnB,GAAIH,GAAiBE,EAAQ,CACzB,IAAI3uB,EAAc2uB,EAAOE,WACnBf,EACA5N,EACF4O,EAAa7O,EAA2B8O,KAAK,KAAMR,EAAWZ,SAClEriB,EAAS,GAAKtL,EAAY,GAAK+tB,EAAQzoB,GAAG,GAC1CgG,EAAS,GAAKtL,EAAY,GAAK+tB,EAAQzoB,GAAG,GAC1CuZ,EAAS4P,EAAcxO,2BAA2B3U,EAAU3K,EAAYwf,EAAc2O,EAAYR,EACtG,CACA,GAAIzP,EACA,OAAOA,CAEf,CACJ,CAEJ,GAAuB,IAAnByP,EAAQvpB,OAAZ,CAGA,IAAIiqB,EAAQ,EAAIV,EAAQvpB,OAMxB,OALAupB,EAAQW,SAAQ,SAAUC,EAAG5pB,GAAK,OAAQ4pB,EAAElN,YAAc1c,EAAI0pB,CAAQ,IACtEV,EAAQ/M,MAAK,SAAU4N,EAAGpyB,GAAK,OAAOoyB,EAAEnN,WAAajlB,EAAEilB,UAAY,IACnEsM,EAAQc,MAAK,SAAUF,GACnB,OAAQrQ,EAASqQ,EAAE9O,SAAS8O,EAAE7tB,QAAS6tB,EAAEtB,MAAOsB,EAAE9tB,SACtD,IACOyd,CAPP,CAQJ,EAeAmO,EAAY3vB,UAAUgyB,oBAAsB,SAAUxC,EAAOlsB,EAAYwf,EAAcC,EAAUqN,GAC7F,OAAO,SACX,EAcAT,EAAY3vB,UAAUiyB,uBAAyB,SAAUpP,EAAYvf,EAAYwf,EAAcoN,EAAcE,EAAaD,GACtH,IAAI+B,EAAa5xB,KAAKsiB,2BAA2BC,EAAYvf,EAAYwf,EAAcoN,EAAc,KAAM5vB,KAAM8vB,EAAaD,GAC9H,YAAsBtnB,IAAfqpB,CACX,EAIAvC,EAAY3vB,UAAUmyB,OAAS,WAC3B,OAAO7xB,KAAKc,IAChB,EAMAuuB,EAAY3vB,UAAUoyB,YAAc,SAAU9uB,IAC1C,SACJ,EAKAqsB,EAAY3vB,UAAUqyB,wBAA0B,SAAU/uB,GAClD,sBACAA,EAAWgvB,oBAAoBjnB,KAAKknB,EAE5C,EACO5C,CACX,CAtKgC,CAsK9B6C,EAAA,GAKF,SAASD,EAAgBnwB,EAAKkB,GAC1B,YACJ,CACA,U,iFCpNI,EAAwC,WACxC,IAAI9D,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAgCxCoyB,EAAsC,SAAU/xB,GAKhD,SAAS+xB,EAAqBrwB,GAC1B,IAAIxB,EAAQF,EAAOR,KAAKI,KAAM8B,IAAQ9B,KAItCM,EAAM8xB,wBAAyB,QAAO,KAAcC,EAAA,iBAAgCvwB,EAAIwwB,WAAWlB,KAAKtvB,IAKxGxB,EAAME,SAAWC,SAASC,cAAc,OACxC,IAAIC,EAAQL,EAAME,SAASG,MAC3BA,EAAMC,SAAW,WACjBD,EAAMgB,MAAQ,OACdhB,EAAMkB,OAAS,OACflB,EAAMmV,OAAS,IACfxV,EAAME,SAASH,UAAY,KAAqB,aAChD,IAAIkyB,EAAYzwB,EAAI0wB,cAYpB,OAXAD,EAAUE,aAAanyB,EAAME,SAAU+xB,EAAUG,YAAc,MAK/DpyB,EAAMqyB,UAAY,GAKlBryB,EAAMsyB,kBAAmB,EAClBtyB,CACX,CA8GA,OAhJA,EAAU6xB,EAAsB/xB,GAuChC+xB,EAAqBzyB,UAAU4vB,oBAAsB,SAAU3sB,EAAMK,GACjE,IAAIlB,EAAM9B,KAAK6xB,SACf,GAAI/vB,EAAI+wB,YAAYlwB,GAAO,CACvB,IAAImwB,EAAU,IAAI,IAAYnwB,OAAM4F,EAAWvF,GAC/ClB,EAAIixB,cAAcD,EACtB,CACJ,EACAX,EAAqBzyB,UAAUuB,gBAAkB,YAC7C,QAAcjB,KAAKoyB,wBACnBpyB,KAAKQ,SAASwyB,WAAWhxB,YAAYhC,KAAKQ,UAC1CJ,EAAOV,UAAUuB,gBAAgBrB,KAAKI,KAC1C,EAKAmyB,EAAqBzyB,UAAUoyB,YAAc,SAAU9uB,GACnD,GAAKA,EAAL,CAOAhD,KAAKuvB,oBAAoBvsB,GACzBhD,KAAKsvB,oBAAoB,eAA4BtsB,GACrD,IAAIytB,EAAmBztB,EAAWytB,iBAAiB7M,MAAK,SAAU4N,EAAGpyB,GACjE,OAAOoyB,EAAE1b,OAAS1W,EAAE0W,MACxB,IACI0Z,EAAYxsB,EAAWwsB,UAC3BxvB,KAAK2yB,UAAUvrB,OAAS,EAMxB,IAFA,IAAI6rB,EAAkB,GAClBC,EAAkB,KACbvrB,EAAI,EAAGO,EAAKuoB,EAAiBrpB,OAAQO,EAAIO,IAAMP,EAAG,CACvD,IAAIipB,EAAaH,EAAiB9oB,GAClC3E,EAAWmwB,WAAaxrB,EACxB,IAAIsoB,EAAQW,EAAWX,MACnBmD,EAAcnD,EAAMoD,iBACxB,KAAK,OAAOzC,EAAYpB,IACJ,SAAf4D,GAAyC,aAAfA,EAC3BnD,EAAMqD,eAFV,CAKA,IAAIC,EAAUtD,EAAMuD,OAAOxwB,EAAYkwB,GAClCK,IAGDA,IAAYL,IACZlzB,KAAK2yB,UAAU5nB,KAAKwoB,GACpBL,EAAkBK,GAElB,iBAAkBtD,GAClBgD,EAAgBloB,KACwC,GAX5D,CAaJ,CACA,IAASpD,EAAIsrB,EAAgB7rB,OAAS,EAAGO,GAAK,IAAKA,EAC/CsrB,EAAgBtrB,GAAG8rB,gBAAgBzwB,IAEvC,QAAgBhD,KAAKQ,SAAUR,KAAK2yB,WACpC3yB,KAAKsvB,oBAAoB,gBAA6BtsB,GACjDhD,KAAK4yB,mBACN5yB,KAAKQ,SAASG,MAAMmJ,QAAU,GAC9B9J,KAAK4yB,kBAAmB,GAE5B5yB,KAAK+xB,wBAAwB/uB,EA7C7B,MALQhD,KAAK4yB,mBACL5yB,KAAKQ,SAASG,MAAMmJ,QAAU,OAC9B9J,KAAK4yB,kBAAmB,EAiDpC,EAcAT,EAAqBzyB,UAAUgyB,oBAAsB,SAAUxC,EAAOlsB,EAAYwf,EAAcC,EAAUqN,GAItG,IAHA,IAAIN,EAAYxsB,EAAWwsB,UACvBgB,EAAcxtB,EAAWytB,iBACzBC,EAAYF,EAAYppB,OACnBO,EAAI+oB,EAAY,EAAG/oB,GAAK,IAAKA,EAAG,CACrC,IAAIipB,EAAaJ,EAAY7oB,GACzBsoB,EAAQW,EAAWX,MACvB,GAAIA,EAAMY,gBACN,OAAOD,EAAYpB,IACnBM,EAAYG,GAAQ,CACpB,IAAIa,EAAgBb,EAAMc,cACtB3N,EAAO0N,EAAc4C,eAAexE,EAAOlsB,EAAYwf,GAC3D,GAAIY,EAAM,CACN,IAAIlC,EAASuB,EAASwN,EAAO7M,GAC7B,GAAIlC,EACA,OAAOA,CAEf,CACJ,CACJ,CAEJ,EACOiR,CACX,CAlJyC,CAkJvCwB,GACF,S,mFCnLI10B,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAyBxC6zB,EAA+B,SAAUxzB,GAKzC,SAASwzB,EAAc3D,GACnB,IAAI3vB,EAAQF,EAAOR,KAAKI,OAASA,KAiBjC,OAZAM,EAAMuzB,OAAQ,EAEdvzB,EAAMwzB,wBAA0BxzB,EAAMyzB,mBAAmB3C,KAAK9wB,GAK9DA,EAAM0zB,OAAS/D,EAIf3vB,EAAM2zB,uBAAyB,KACxB3zB,CACX,CAwJA,OA/KArB,EAAU20B,EAAexzB,GA8BzBwzB,EAAcl0B,UAAUw0B,YAAc,SAAUhF,GAC5C,OAAO,SACX,EAKA0E,EAAcl0B,UAAUy0B,QAAU,SAAUjF,GACxC,OAAO,IACX,EAOA0E,EAAcl0B,UAAU00B,aAAe,SAAUpxB,GAC7C,OAAO,SACX,EAQA4wB,EAAcl0B,UAAUoyB,YAAc,SAAU9uB,EAAYqxB,GACxD,OAAO,SACX,EAOAT,EAAcl0B,UAAU40B,mBAAqB,SAAUC,EAAOC,EAAMC,GAC3DF,EAAMC,KACPD,EAAMC,GAAQ,CAAC,GAEnBD,EAAMC,GAAMC,EAAKC,UAAUze,YAAcwe,CAE7C,EAUAb,EAAcl0B,UAAUi1B,uBAAyB,SAAU3D,EAAQd,EAAYqE,GAC3E,OAOA,SAAUC,EAAMI,GACZ,IAAInS,EAAWziB,KAAKs0B,mBAAmBlD,KAAKpxB,KAAMu0B,EAAOC,GACzD,OAAOxD,EAAO6D,kBAAkB3E,EAAYsE,EAAMI,EAAWnS,EACjE,EAAE2O,KAAKpxB,KACX,EAWA4zB,EAAcl0B,UAAU4iB,2BAA6B,SAAUC,EAAYvf,EAAYwf,EAAcC,EAAUkO,GAE/G,EAUAiD,EAAcl0B,UAAUg0B,eAAiB,SAAUxE,EAAOlsB,EAAYwf,GAClE,OAAO,IACX,EAIAoR,EAAcl0B,UAAUo1B,SAAW,WAC/B,OAAO90B,KAAKg0B,MAChB,EAKAJ,EAAcl0B,UAAUq1B,mBAAqB,WAAc,EAM3DnB,EAAcl0B,UAAUq0B,mBAAqB,SAAUiB,GACnD,IAAI3X,EAAsD2X,EAAY,OAClE3X,EAAM4X,aAAe,YACrBj1B,KAAKk1B,yBAEb,EAQAtB,EAAcl0B,UAAUy1B,UAAY,SAAU9X,GAC1C,IAAI+X,EAAa/X,EAAM4X,WAQvB,OAPIG,GAAc,YAAqBA,GAAc,WACjD/X,EAAMgY,iBAAiB,WAAkBr1B,KAAK8zB,yBAE9CsB,GAAc,WACd/X,EAAM0D,OACNqU,EAAa/X,EAAM4X,YAEhBG,GAAc,UACzB,EAIAxB,EAAcl0B,UAAUw1B,wBAA0B,WAC9C,IAAIjF,EAAQjwB,KAAK80B,WACb7E,GAASA,EAAMqF,cAA2C,UAA3BrF,EAAMoD,kBACrCpD,EAAMsF,SAEd,EAIA3B,EAAcl0B,UAAUuB,gBAAkB,kBAC/BjB,KAAKg0B,OACZ5zB,EAAOV,UAAUuB,gBAAgBrB,KAAKI,KAC1C,EACO4zB,CACX,CAjLkC,CAiLhC,KACF,S","sources":["webpack://@openeo/web-editor/./node_modules/ol/pointer/EventType.js","webpack://@openeo/web-editor/./node_modules/ol/render/Box.js","webpack://@openeo/web-editor/./node_modules/ol/render/Event.js","webpack://@openeo/web-editor/./node_modules/ol/render/EventType.js","webpack://@openeo/web-editor/./node_modules/ol/render/VectorContext.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Builder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Executor.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Instruction.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/TextBuilder.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/Immediate.js","webpack://@openeo/web-editor/./node_modules/ol/render/canvas/hitdetect.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Map.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Composite.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/Layer.js"],"sourcesContent":["/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default|null}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n         * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n         * context.\n         * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n     * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n     * WebGL layers currently dispatch this event.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n     * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n     * WebGL layers currently dispatch this event.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = text\n        .split('\\n')\n        .reduce(function (prev, curr) { return Math.max(prev, measureTextWidth(font, curr)); }, 0);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n    var widths = [];\n    var heights = [];\n    var lineWidths = [];\n    var width = 0;\n    var lineWidth = 0;\n    var height = 0;\n    var lineHeight = 0;\n    for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n        var text = chunks[i];\n        if (text === '\\n' || i === ii) {\n            width = Math.max(width, lineWidth);\n            lineWidths.push(lineWidth);\n            lineWidth = 0;\n            height += lineHeight;\n            continue;\n        }\n        var font = chunks[i + 1] || baseStyle.font;\n        var currentWidth = measureTextWidth(font, text);\n        widths.push(currentWidth);\n        lineWidth += currentWidth;\n        var currentHeight = measureTextHeight(font);\n        heights.push(currentHeight);\n        lineHeight = Math.max(lineHeight, currentHeight);\n    }\n    return { width: width, height: height, widths: widths, heights: heights, lineWidths: lineWidths };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        switch (type) {\n            case 'MultiPolygon':\n                flatCoordinates =\n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n                builderEndss = [];\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                offset = 0;\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    var myEnds = [];\n                    offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                    builderEndss.push(myEnds);\n                }\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                builderEnds = [];\n                flatCoordinates =\n                    type == 'Polygon'\n                        ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                        : geometry.getFlatCoordinates();\n                offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n                /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    renderer,\n                    inflateCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinatesArray,\n                ]);\n                break;\n            case 'LineString':\n            case 'Circle':\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinates,\n                ]);\n                break;\n            case 'MultiPoint':\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                if (builderEnd > builderBegin) {\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                        inflateCoordinates,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinates,\n                    ]);\n                }\n                break;\n            case 'Point':\n                flatCoordinates = geometry.getFlatCoordinates();\n                this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n                builderEnd = this.coordinates.length;\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                ]);\n                break;\n            default:\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * @private\n         * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n         */\n        _this.declutterMode_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_ * this.imagePixelRatio_,\n            this.originY_ * this.imagePixelRatio_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_ * this.imagePixelRatio_,\n            this.originY_ * this.imagePixelRatio_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n        this.image_ = imageStyle.getImage(this.pixelRatio);\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterMode_ = imageStyle.getDeclutterMode();\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            defaultLineDash,\n            defaultLineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextAlign, defaultTextBaseline, drawImageOrLabel, getTextDimensions, measureAndCacheTextWidth, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n    if (i > 0) {\n        acc.push('\\n', '');\n    }\n    acc.push(line, '');\n    return acc;\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string|Array<string>} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var textIsArray = Array.isArray(text);\n        var align = textState.justify\n            ? TEXT_ALIGN[textState.justify]\n            : horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var chunks = textIsArray\n            ? text\n            : text.split('\\n').reduce(createTextChunks, []);\n        var _a = getTextDimensions(textState, chunks), width = _a.width, height = _a.height, widths = _a.widths, heights = _a.heights, lineWidths = _a.lineWidths;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var strokeInstructions = [];\n        var fillInstructions = [];\n        var lineHeight = 0;\n        var lineOffset = 0;\n        var widthHeightIndex = 0;\n        var lineWidthIndex = 0;\n        var previousFont;\n        for (var i = 0, ii = chunks.length; i < ii; i += 2) {\n            var text_1 = chunks[i];\n            if (text_1 === '\\n') {\n                lineOffset += lineHeight;\n                lineHeight = 0;\n                x = align * renderWidth + leftRight * strokeWidth;\n                ++lineWidthIndex;\n                continue;\n            }\n            var font = chunks[i + 1] || textState.font;\n            if (font !== previousFont) {\n                if (strokeKey) {\n                    strokeInstructions.push('font', font);\n                }\n                if (fillKey) {\n                    fillInstructions.push('font', font);\n                }\n                previousFont = font;\n            }\n            lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n            var fillStrokeArgs = [\n                text_1,\n                x +\n                    leftRight * widths[widthHeightIndex] +\n                    align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n                0.5 * (strokeWidth + lineHeight) + lineOffset,\n            ];\n            x += widths[widthHeightIndex];\n            if (strokeKey) {\n                strokeInstructions.push('strokeText', fillStrokeArgs);\n            }\n            if (fillKey) {\n                fillInstructions.push('fillText', fillStrokeArgs);\n            }\n            ++widthHeightIndex;\n        }\n        Array.prototype.push.apply(contextInstructions, strokeInstructions);\n        Array.prototype.push.apply(contextInstructions, fillInstructions);\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string|Array<string>} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = \n                    /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image =\n                        /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterMode = \n                    /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (instruction[14]);\n                    var declutterImageWithText = \n                    /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[15]);\n                    if (!image && instruction.length >= 20) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[19]);\n                        textKey = /** @type {string} */ (instruction[20]);\n                        strokeKey = /** @type {string} */ (instruction[21]);\n                        fillKey = /** @type {string} */ (instruction[22]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[23]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[24]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 25) {\n                        geometryWidths = /** @type {number} */ (instruction[25]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 17) {\n                        padding = /** @type {Array<number>} */ (instruction[16]);\n                        backgroundFill = /** @type {boolean} */ (instruction[17]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[18]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        if (opt_declutterTree) {\n                            if (declutterMode === 'none') {\n                                // not rendered in declutter group\n                                continue;\n                            }\n                            else if (declutterMode === 'obstacle') {\n                                // will always be drawn, thus no collision detection, but insert as obstacle\n                                opt_declutterTree.insert(dimensions.declutterBox);\n                                continue;\n                            }\n                            else {\n                                var imageArgs = void 0;\n                                var imageDeclutterBox = void 0;\n                                if (declutterImageWithText) {\n                                    var index = dd - d;\n                                    if (!declutterImageWithText[index]) {\n                                        // We now have the image for an image+text combination.\n                                        declutterImageWithText[index] = args;\n                                        // Don't render anything for now, wait for the text.\n                                        continue;\n                                    }\n                                    imageArgs = declutterImageWithText[index];\n                                    delete declutterImageWithText[index];\n                                    imageDeclutterBox = getDeclutterBox(imageArgs);\n                                    if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                        continue;\n                                    }\n                                }\n                                if (opt_declutterTree.collides(dimensions.declutterBox)) {\n                                    continue;\n                                }\n                                if (imageArgs) {\n                                    // We now have image and text for an image+text combination.\n                                    opt_declutterTree.insert(imageDeclutterBox);\n                                    // Render the image before we render the text.\n                                    this.replayImageOrLabel_.apply(this, imageArgs);\n                                }\n                                opt_declutterTree.insert(dimensions.declutterBox);\n                            }\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle =\n                        /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default: // consume the instruction anyway, to avoid an infinite loop\n                    ++i;\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nvar ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceed that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number} [opt_renderBuffer] Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== 'Image' && builderType !== 'Text') ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>|null} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"../canvas.js\").BuilderType>} [opt_builderTypes] Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string|Array<string>}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == 'LineString' ||\n                geometryType == 'MultiLineString' ||\n                geometryType == 'Polygon' ||\n                geometryType == 'MultiPolygon')) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == 'LineString') {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == 'MultiLineString') {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == 'Polygon') {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == 'MultiPolygon') {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            // No `justify` support for line placement.\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case 'Point':\n                case 'MultiPoint':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case 'LineString':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case 'Circle':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case 'MultiLineString':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case 'Polygon':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case 'MultiPolygon':\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                undefined,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                undefined,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                justify: textState.justify,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.justify = textStyle.getJustify();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.justify || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case 'Point':\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case 'LineString':\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case 'Polygon':\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case 'MultiPoint':\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case 'MultiLineString':\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case 'MultiPolygon':\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case 'GeometryCollection':\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case 'Circle':\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ =\n                textText !== undefined\n                    ? Array.isArray(textText)\n                        ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                        : textText\n                    : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { clamp } from '../../math.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nexport var HIT_DETECT_RESOLUTION = 0.5;\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] * HIT_DETECT_RESOLUTION;\n    var height = size[1] * HIT_DETECT_RESOLUTION;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, HIT_DETECT_RESOLUTION, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var geometry = originalStyle.getGeometryFunction()(feature);\n            if (!geometry || !intersects(extent, geometry.getExtent())) {\n                continue;\n            }\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n                stroke.setLineDash(null);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image && image.getOpacity() !== 0) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var imgContext = createCanvasContext2D(imgSize[0], imgSize[1], undefined, { alpha: false });\n                var img = imgContext.canvas;\n                imgContext.fillStyle = color;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    opacity: 1,\n                    size: image.getSize(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = style.getZIndex() || 0;\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType['Polygon'] = [];\n                byGeometryType['Circle'] = [];\n                byGeometryType['LineString'] = [];\n                byGeometryType['Point'] = [];\n            }\n            byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n        var y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n        // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n        // for browsers returning coordinates slightly larger than the actual canvas size\n        // due to a non-integer pixel ratio.\n        var index = (clamp(x, 0, imageData.width - 1) +\n            clamp(y, 0, imageData.height - 1) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            var layer = layerState.layer;\n            var sourceState = layer.getSourceState();\n            if (!inView(layerState, viewState) ||\n                (sourceState != 'ready' && sourceState != 'undefined')) {\n                layer.unrender();\n                continue;\n            }\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(\n                /** @type {import(\"../layer/BaseVector.js\").default} */ (layer));\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * The renderer is initialized and ready to render.\n         * @type {boolean}\n         */\n        _this.ready = true;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n     */\n    LayerRenderer.prototype.getData = function (pixel) {\n        return null;\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return null;\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n            layer.changed();\n        }\n    };\n    /**\n     * Clean up.\n     */\n    LayerRenderer.prototype.disposeInternal = function () {\n        delete this.layer_;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map"],"names":["POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","RenderBox","_super","className","_this","geometry_","element_","document","createElement","style","position","pointerEvents","map_","startPixel_","endPixel_","disposeInternal","setMap","render_","startPixel","endPixel","px","left","Math","min","top","width","abs","height","map","getOverlayContainer","removeChild","appendChild","setPixels","createOrUpdateGeometry","pixels","coordinates","getCoordinateFromPixelInternal","slice","setCoordinates","getGeometry","RenderEvent","type","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","frameState","context","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","VectorContext","drawCustom","geometry","feature","renderer","hitDetectionRenderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","setSize","console","warn","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","size","referenceFonts","len","length","text","isAvailable","fontStyle","fontWeight","fontFamily","available","i","referenceFont","measureTextWidth","check","done","fonts","getKeys","ii","font","get","apply","split","undefined","set","clearInterval","fontSpec","families","family","key","weight","setInterval","measureTextHeight","measureElement","metrics","measureText","lineHeight","isNaN","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","display","body","offsetHeight","measureAndCacheTextWidth","cache","reduce","prev","curr","max","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","push","currentHeight","drawImageOrLabel","transform","opacity","labelOrImage","originX","originY","w","h","x","y","scale","save","globalAlpha","setTransform","contextInstructions","translate","executeLabelInstructions","drawImage","restore","label","isArray","CanvasBuilder","tolerance","maxExtent","resolution","pixelRatio","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","offset","end","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","ends","builderEnds","builderEnd","beginGeometry","builderEndss","getType","getStride","builderBegin","getOrientedFlatCoordinates","endss","getEndss","myEnds","getFlatCoordinates","getEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","n","begin","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","image_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","ceil","opt_sharedData","anchor","getAnchor","getSize","origin","getOrigin","getPixelRatio","getHitDetectionImage","getImage","getOpacity","getRotateWithView","getRotation","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","fill","stroke","numEnds","setFillStrokeStyles_","circleInstruction","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","toString","replays","replay","Constructor","tmpExtent","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","justify","textAlign","strokeWidth","_a","renderWidth","floor","Context","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","setLineDash","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","rotation","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","round","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","value","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","canvas","strokePadding","intersects","origin_1","repeatSize","rotate","drawLabelWithPointPlacement_","baseline","textBaseline","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","dd","prevX","prevY","roundX","roundY","image","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","atan2","batchSize","getExtent","NaN","x1","y1","x2","y2","dx","dy","r","sqrt","arc","PI","closePath","fn","coords","rotateWithView","declutterMode","declutterImageWithText","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","args","insert","imageArgs","imageDeclutterBox","index","collides","overflow","maxAngle","measurePixelRatio","offsetY","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","startM","parts","drawChars","c","cc","chars","part","load","i_1","ii_1","result","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","hitExtent","clearRect","indexes","getPixelIndexArray","featureCallback","imageData","getImageData","data","indexOf","idx","result_1","j","executor","zs","keys","sort","isEmpty","opt_builderTypes","jj","builderTypes","circlePixelIndexArrayCache","radius","maxDistanceSq","distances","distanceSq","distance","pixelIndex","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","placement","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg_1","filter","keep","saveTextStates_","p0","pixelRatio_1","flatOffset","flatEnd","o","oo","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","join","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","extent_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","geometries","getGeometriesArray","simplifyTransformed","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","t","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","styleFunction","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","styles","color","originalStyle","clone","setColor","setText","imgSize","getImageSize","imgContext","img","fillRect","setImage","Icon","anchorXUnits","IconAnchorUnits","anchorYUnits","getScale","getZIndex","byGeometryType","replace","zIndexKeys","geomAndStyle","k","kk","hitDetect","pixel","resultFeatures","g","MapRenderer","dispatchRenderEvent","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","center","checkWrapped","thisArg","layerFilter","thisArg2","managed","layer","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","getWrapX","callback_1","bind","order","forEach","m","a","some","forEachLayerAtPixel","hasFeatureAtCoordinate","hasFeature","getMap","renderFrame","scheduleExpireIconCache","postRenderFunctions","expireIconCache","Disposable","CompositeMapRenderer","fontChangeListenerKey_","ObjectEventType","redrawText","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event_1","dispatchEvent","parentNode","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","element","render","renderDeclutter","getDataAtPixel","Map","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","getFeatures","getData","prepareFrame","target","loadedTileCallback","tiles","zoom","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","handleFontsChanged","event","getState","renderIfReadyAndVisible","loadImage","imageState","addEventListener","getVisible","changed"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/ol/webgl/TileTexture.js","webpack:///./node_modules/rbush/rbush.min.js","webpack:///./node_modules/ol/webgl/ContextEventType.js","webpack:///./node_modules/ol/webgl/PostProcessingPass.js","webpack:///./node_modules/ol/webgl/Helper.js","webpack:///./node_modules/vue-chartjs/legacy/index.js","webpack:///./node_modules/ol/worker/webgl.js","webpack:///./node_modules/ol/webgl.js","webpack:///./node_modules/ol/webgl/PaletteTexture.js","webpack:///./node_modules/ol/webgl/Buffer.js","webpack:///./node_modules/ol/vec/mat4.js","webpack:///./node_modules/ol/webgl/RenderTarget.js","webpack:///./node_modules/ol/xml.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","bindAndConfigure","gl","texture","interpolate","resampleFilter","LINEAR","NEAREST","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","uploadImageTexture","image","texImage2D","RGBA","UNSIGNED_BYTE","uploadDataTexture","helper","data","size","bandCount","textureType","canInterpolate","getGL","Float32Array","FLOAT","getExtension","extension","format","bytesPerRow","byteLength","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","Error","concat","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","pixelContext","createPixelContext","canvas","document","createElement","width","height","getContext","TileTexture","_super","options","_this","tile","textures","handleTileChange_","bind","grid","getTileSize","tileCoord","tilePixelRatio_","tilePixelRatio","gutter_","gutter","NaN","helper_","coords","fromArray","flushBufferData","setTile","removeEventListener","CHANGE","length","loaded","getState","LOADED","uploadTile_","getImage","Image","crossOrigin","addEventListener","Math","round","context","drawImage","createTexture","push","pixelSize","getData","isFloat","pixelCount","DataType","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","floor","textureCount","ceil","textureDataArrays","textureIndex","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataValue","pixelIndex","bandIndex","textureData","textureBandIndex","dispatchEvent","disposeInternal","deleteBuffer","i","deleteTexture","getPixelData","col","row","data_1","pixelsPerRow","DataView","bytesPerPixel","offset_1","buffer","slice","offset","clearRect","getImageData","err","t","module","exports","r","e","a","h","n","o","s","l","log","f","exp","u","sqrt","m","max","c","min","x","_maxEntries","_minEntries","clear","indexOf","children","minX","minY","maxX","maxY","leaf","pop","all","_all","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","LOST","RESTORED","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","WebGLPostProcessingPass","gl_","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","verticesArray","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetOpacityLocation_","renderTargetTextureLocation_","uniforms_","uniforms","keys","forEach","name","value","location","init","frameState","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","level","internalFormat","border","type","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","preCompose","postCompose","activeTexture","TEXTURE0","canvasId","renderTargets","attributes","getContextAttributes","preserveDrawingBuffer","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2f","uniform1i","opacity","layerStatesArray","layerIndex","uniform1f","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","ImageData","isArray","uniform3f","uniform4f","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","AttributeType","UNSIGNED_SHORT","UNSIGNED_INT","canvasCache","getSharedCanvasCacheKey","key","uniqueCanvasCacheKeyCount","getUniqueCanvasCacheKey","getCanvas","cacheItem","style","position","left","users","releaseCanvas","loseContext","WebGLHelper","opt_options","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","canvasCacheKey_","canvasCacheKey","canvas_","bufferCache_","extensionCache_","currentProgram_","ContextEventType","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","setUniforms","postProcessPasses_","postProcesses","map","shaderCompileErrors_","startTime_","Date","now","name_1","canvasCacheKeyMatches","bufferKey","bufferCache","webGlBuffer","getType","getArray","getUsage","buf","bufferCacheEntry","isContextLost","prepareDraw","opt_disableAlphaBlend","pixelRatio","ZERO","applyFrameState","prepareDrawToRenderTarget","renderTarget","getSize","getFramebuffer","getTexture","drawElements","start","end","elementType","elementSize","numItems","offsetInBytes","finalizeDraw","ii","rotation","viewState","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","setUniformFloatValue","zoom","resolution","HTMLImageElement","prevValue","undefined","imageReady","complete","program","source","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","message","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","transform","center","setUniformFloatVec4","uniform4fv","uniformMatrix4fv","enableAttributeArray_","attribName","stride","enableAttributes","computeAttributesStride","attr","getByteSizeFromType","opt_data","opt_texture","Disposable","Uint16Array","Uint32Array","ChartEmits","chartCreate","createChartFunction","chartData","chartOptions","emit","ChartRendered","chartUpdate","chart","update","ChartUpdated","chartDestroy","destroy","ChartDestroyed","getChartData","datasetIdKey","nextData","labels","datasets","setChartDatasets","oldData","newData","addedDatasets","nextDataset","currentDataset","find","dataset","includes","assign","setChartLabels","LabelsUpdated","setChartOptions","compareData","newDatasetLabels","label","oldDatasetLabels","every","index","templateError","ANNOTATION_PLUGIN_KEY","generateChart","chartId","chartType","chartController","_chartRef","props","required","default","Number","cssClasses","styles","plugins","_chart","computed","ref","ref1","pluginSettings","register","current","renderChart","$emit","watch","handler","newValue","oldValue","chartDataHandler","deep","chartOptionsHandler","methods","currentChart","getCurrentChart","$refs","canvasEl2DContext","setCurrentChart","isEqualLabelsAndDatasetsLength","updateChart","hasAnnotationPlugin","$data","render","class","attrs","id","Scatter","Worker","Blob","Buffer","from","toString","URL","createObjectURL","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","DYNAMIC_DRAW","CONTEXT_IDS","opt_attributes","antialias","PaletteTexture","texture_","BufferUsage","WebGLArrayBuffer","opt_usage","array","usage","ofSize","getArrayClassForType","arrayClass","fromArrayBuffer","fromTransform","mat4","tmpArray4","WebGLRenderTarget","opt_size","framebuffer_","size_","data_","dataCacheDirty_","updateSize_","setSize","clearCachedData","readAll","readPixels","readPixel","y","createElementNS","namespaceURI","qualifiedName","getDocument","getAllTextContent","node","normalizeWhitespace","getAllTextContent_","join","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","replace","firstChild","nextSibling","isDocument","object","parse","xml","DOMParser","parseFromString","makeArrayPusher","valueReader","opt_this","objectStack","makeObjectPropertyPusher","opt_property","property","localName","makeObjectPropertySetter","makeSimpleNodeFactory","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","document_","implementation","createDocument"],"mappings":"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","file":"js/chunk-f873c046.f205cd02.js","sourcesContent":["/**\n * @module ol/webgl/TileTexture\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport DataTile from '../DataTile.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport { ARRAY_BUFFER, STATIC_DRAW } from '../webgl.js';\nimport { IMAGE_SMOOTHING_DISABLED } from '../renderer/canvas/common.js';\nimport { assign } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n    var resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n    bindAndConfigure(gl, texture, interpolate);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").Data} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(helper, texture, data, size, bandCount, interpolate) {\n    var gl = helper.getGL();\n    var textureType;\n    var canInterpolate;\n    if (data instanceof Float32Array) {\n        textureType = gl.FLOAT;\n        helper.getExtension('OES_texture_float');\n        var extension = helper.getExtension('OES_texture_float_linear');\n        canInterpolate = extension !== null;\n    }\n    else {\n        textureType = gl.UNSIGNED_BYTE;\n        canInterpolate = true;\n    }\n    bindAndConfigure(gl, texture, interpolate && canInterpolate);\n    var bytesPerRow = data.byteLength / size[1];\n    var unpackAlignment = 1;\n    if (bytesPerRow % 8 === 0) {\n        unpackAlignment = 8;\n    }\n    else if (bytesPerRow % 4 === 0) {\n        unpackAlignment = 4;\n    }\n    else if (bytesPerRow % 2 === 0) {\n        unpackAlignment = 2;\n    }\n    var format;\n    switch (bandCount) {\n        case 1: {\n            format = gl.LUMINANCE;\n            break;\n        }\n        case 2: {\n            format = gl.LUMINANCE_ALPHA;\n            break;\n        }\n        case 3: {\n            format = gl.RGB;\n            break;\n        }\n        case 4: {\n            format = gl.RGBA;\n            break;\n        }\n        default: {\n            throw new Error(\"Unsupported number of bands: \".concat(bandCount));\n        }\n    }\n    var oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n    gl.texImage2D(gl.TEXTURE_2D, 0, format, size[0], size[1], 0, format, textureType, data);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar pixelContext = null;\nfunction createPixelContext() {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    pixelContext = canvas.getContext('2d');\n}\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n/**\n * @typedef {Object} Options\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [tilePixelRatio=1] Tile pixel ratio.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\nvar TileTexture = /** @class */ (function (_super) {\n    __extends(TileTexture, _super);\n    /**\n     * @param {Options} options The tile texture options.\n     */\n    function TileTexture(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {TileType}\n         */\n        _this.tile;\n        /**\n         * @type {Array<WebGLTexture>}\n         */\n        _this.textures = [];\n        _this.handleTileChange_ = _this.handleTileChange_.bind(_this);\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size = toSize(options.grid.getTileSize(options.tile.tileCoord[0]));\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio || 1;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.gutter_ = options.gutter || 0;\n        /**\n         * @type {number}\n         */\n        _this.bandCount = NaN;\n        /**\n         * @type {import(\"../webgl/Helper.js\").default}\n         * @private\n         */\n        _this.helper_ = options.helper;\n        var coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n        coords.fromArray([\n            0,\n            1,\n            1,\n            1,\n            1,\n            0,\n            0,\n            0,\n        ]);\n        _this.helper_.flushBufferData(coords);\n        /**\n         * @type {WebGLArrayBuffer}\n         */\n        _this.coords = coords;\n        _this.setTile(options.tile);\n        return _this;\n    }\n    /**\n     * @param {TileType} tile Tile.\n     */\n    TileTexture.prototype.setTile = function (tile) {\n        if (tile !== this.tile) {\n            if (this.tile) {\n                this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n            }\n            this.tile = tile;\n            this.textures.length = 0;\n            this.loaded = tile.getState() === TileState.LOADED;\n            if (this.loaded) {\n                this.uploadTile_();\n            }\n            else {\n                if (tile instanceof ImageTile) {\n                    var image = tile.getImage();\n                    if (image instanceof Image && !image.crossOrigin) {\n                        image.crossOrigin = 'anonymous';\n                    }\n                }\n                tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n            }\n        }\n    };\n    TileTexture.prototype.uploadTile_ = function () {\n        var helper = this.helper_;\n        var gl = helper.getGL();\n        var tile = this.tile;\n        if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n            var image = tile.getImage();\n            if (this.gutter_ !== 0) {\n                var gutter = this.tilePixelRatio_ * this.gutter_;\n                var width = Math.round(image.width - 2 * gutter);\n                var height = Math.round(image.height - 2 * gutter);\n                var context = createCanvasContext2D(width, height);\n                if (!tile.interpolate) {\n                    assign(context, IMAGE_SMOOTHING_DISABLED);\n                }\n                context.drawImage(image, gutter, gutter, width, height, 0, 0, width, height);\n                image = context.canvas;\n            }\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            this.bandCount = 4;\n            uploadImageTexture(gl, texture, image, tile.interpolate);\n            return;\n        }\n        var pixelSize = [\n            this.size[0] * this.tilePixelRatio_,\n            this.size[1] * this.tilePixelRatio_,\n        ];\n        var data = tile.getData();\n        var isFloat = data instanceof Float32Array;\n        var pixelCount = pixelSize[0] * pixelSize[1];\n        var DataType = isFloat ? Float32Array : Uint8Array;\n        var bytesPerElement = DataType.BYTES_PER_ELEMENT;\n        var bytesPerRow = data.byteLength / pixelSize[1];\n        this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n        var textureCount = Math.ceil(this.bandCount / 4);\n        if (textureCount === 1) {\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            uploadDataTexture(helper, texture, data, pixelSize, this.bandCount, tile.interpolate);\n            return;\n        }\n        var textureDataArrays = new Array(textureCount);\n        for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            var bandCount = textureIndex < textureCount - 1 ? 4 : this.bandCount % 4;\n            textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n        }\n        var dataIndex = 0;\n        var rowOffset = 0;\n        var colCount = pixelSize[0] * this.bandCount;\n        for (var rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n            for (var colIndex = 0; colIndex < colCount; ++colIndex) {\n                var dataValue = data[rowOffset + colIndex];\n                var pixelIndex = Math.floor(dataIndex / this.bandCount);\n                var bandIndex = colIndex % this.bandCount;\n                var textureIndex = Math.floor(bandIndex / 4);\n                var textureData = textureDataArrays[textureIndex];\n                var bandCount = textureData.length / pixelCount;\n                var textureBandIndex = bandIndex % 4;\n                textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n                ++dataIndex;\n            }\n            rowOffset += bytesPerRow / bytesPerElement;\n        }\n        for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n            var texture = this.textures[textureIndex];\n            var textureData = textureDataArrays[textureIndex];\n            var bandCount = textureData.length / pixelCount;\n            uploadDataTexture(helper, texture, textureData, pixelSize, bandCount, tile.interpolate);\n        }\n    };\n    TileTexture.prototype.handleTileChange_ = function () {\n        if (this.tile.getState() === TileState.LOADED) {\n            this.loaded = true;\n            this.uploadTile_();\n            this.dispatchEvent(EventType.CHANGE);\n        }\n    };\n    TileTexture.prototype.disposeInternal = function () {\n        var gl = this.helper_.getGL();\n        this.helper_.deleteBuffer(this.coords);\n        for (var i = 0; i < this.textures.length; ++i) {\n            gl.deleteTexture(this.textures[i]);\n        }\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n    };\n    /**\n     * Get data for a pixel.  If the tile is not loaded, null is returned.\n     * @param {number} col The column index.\n     * @param {number} row The row index.\n     * @return {import(\"../DataTile.js\").Data|null} The data.\n     */\n    TileTexture.prototype.getPixelData = function (col, row) {\n        if (!this.loaded) {\n            return null;\n        }\n        col = Math.floor(this.tilePixelRatio_ * col);\n        row = Math.floor(this.tilePixelRatio_ * row);\n        if (this.tile instanceof DataTile) {\n            var data_1 = this.tile.getData();\n            var pixelsPerRow = Math.floor(this.tilePixelRatio_ * this.size[0]);\n            if (data_1 instanceof DataView) {\n                var bytesPerPixel = data_1.byteLength / (this.size[0] * this.size[1]);\n                var offset_1 = row * pixelsPerRow * bytesPerPixel + col * bytesPerPixel;\n                var buffer = data_1.buffer.slice(offset_1, offset_1 + bytesPerPixel);\n                return new DataView(buffer);\n            }\n            var offset = row * pixelsPerRow * this.bandCount + col * this.bandCount;\n            return data_1.slice(offset, offset + this.bandCount);\n        }\n        if (!pixelContext) {\n            createPixelContext();\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var data;\n        var image = this.tile.getImage();\n        try {\n            pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            return null;\n        }\n        return data;\n    };\n    return TileTexture;\n}(EventTarget));\nexport default TileTexture;\n//# sourceMappingURL=TileTexture.js.map","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored',\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nimport { getUid } from '../util.js';\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n  uniform float u_opacity;\\n   \\n  varying vec2 v_texCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *   uniform float u_opacity;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord) * u_opacity;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetOpacityLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_opacity');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms &&\n            Object.keys(options.uniforms).forEach(function (name) {\n                this.uniforms_.push({\n                    value: options.uniforms[name],\n                    location: gl.getUniformLocation(this.renderTargetProgram_, name),\n                });\n            }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var textureSize = [\n            gl.drawingBufferWidth * this.scaleRatio_,\n            gl.drawingBufferHeight * this.scaleRatio_,\n        ];\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, textureSize[0], textureSize[1]);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== textureSize[0] ||\n            this.renderTargetTextureSize_[1] !== textureSize[1]) {\n            this.renderTargetTextureSize_ = textureSize;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, textureSize[0], textureSize[1], border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [preCompose] Called before composing.\n     * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [postCompose] Called before composing.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass, preCompose, postCompose) {\n        var gl = this.getGL();\n        var size = frameState.size;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        if (!nextPass) {\n            // clear the canvas if we are the first to render to it\n            // and preserveDrawingBuffer is true\n            var canvasId = getUid(gl.canvas);\n            if (!frameState.renderTargets[canvasId]) {\n                var attributes = gl.getContextAttributes();\n                if (attributes && attributes.preserveDrawingBuffer) {\n                    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n                    gl.clear(gl.COLOR_BUFFER_BIT);\n                }\n                frameState.renderTargets[canvasId] = true;\n            }\n        }\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        var opacity = frameState.layerStatesArray[frameState.layerIndex].opacity;\n        gl.uniform1f(this.renderTargetOpacityLocation_, opacity);\n        this.applyUniforms(frameState);\n        if (preCompose) {\n            preCompose(gl, frameState);\n        }\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n        if (postCompose) {\n            postCompose(gl, frameState);\n        }\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\".concat(textureSlot)]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport { FLOAT, UNSIGNED_BYTE, UNSIGNED_INT, UNSIGNED_SHORT, getContext, } from '../webgl.js';\nimport { clear } from '../obj.js';\nimport { compose as composeTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, } from '../transform.js';\nimport { create, fromTransform } from '../vec/mat4.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8b30,\n    VERTEX_SHADER: 0x8b31,\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n    TIME: 'u_time',\n    ZOOM: 'u_zoom',\n    RESOLUTION: 'u_resolution',\n};\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport var AttributeType = {\n    UNSIGNED_BYTE: UNSIGNED_BYTE,\n    UNSIGNED_SHORT: UNSIGNED_SHORT,\n    UNSIGNED_INT: UNSIGNED_INT,\n    FLOAT: FLOAT,\n};\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n * @property {string} [canvasCacheKey] The cache key for the canvas.\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @typedef {Object} CanvasCacheItem\n * @property {HTMLCanvasElement} canvas Canvas element.\n * @property {number} users The count of users of this canvas.\n */\n/**\n * @type {Object<string,CanvasCacheItem>}\n */\nvar canvasCache = {};\n/**\n * @param {string} key The cache key for the canvas.\n * @return {string} The shared cache key.\n */\nfunction getSharedCanvasCacheKey(key) {\n    return 'shared/' + key;\n}\nvar uniqueCanvasCacheKeyCount = 0;\n/**\n * @return {string} The unique cache key.\n */\nfunction getUniqueCanvasCacheKey() {\n    var key = 'unique/' + uniqueCanvasCacheKeyCount;\n    uniqueCanvasCacheKeyCount += 1;\n    return key;\n}\n/**\n * @param {string} key The cache key for the canvas.\n * @return {HTMLCanvasElement} The canvas.\n */\nfunction getCanvas(key) {\n    var cacheItem = canvasCache[key];\n    if (!cacheItem) {\n        var canvas = document.createElement('canvas');\n        canvas.style.position = 'absolute';\n        canvas.style.left = '0';\n        cacheItem = { users: 0, canvas: canvas };\n        canvasCache[key] = cacheItem;\n    }\n    cacheItem.users += 1;\n    return cacheItem.canvas;\n}\n/**\n * @param {string} key The cache key for the canvas.\n */\nfunction releaseCanvas(key) {\n    var cacheItem = canvasCache[key];\n    if (!cacheItem) {\n        return;\n    }\n    cacheItem.users -= 1;\n    if (cacheItem.users > 0) {\n        return;\n    }\n    var canvas = cacheItem.canvas;\n    var gl = getContext(canvas);\n    var extension = gl.getExtension('WEBGL_lose_context');\n    if (extension) {\n        extension.loseContext();\n    }\n    delete canvasCache[key];\n}\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Specify the attribute names with\n *   {@link module:ol/webgl/Helper~WebGLHelper#enableAttributes enableAttributes()} (see code snippet below).\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /** @private */\n        _this.boundHandleWebGLContextLost_ = _this.handleWebGLContextLost.bind(_this);\n        /** @private */\n        _this.boundHandleWebGLContextRestored_ =\n            _this.handleWebGLContextRestored.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.canvasCacheKey_ = options.canvasCacheKey\n            ? getSharedCanvasCacheKey(options.canvasCacheKey)\n            : getUniqueCanvasCacheKey();\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = getCanvas(_this.canvasCacheKey_);\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {Object<string, Object>}\n         */\n        _this.extensionCache_ = {};\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        _this.canvas_.addEventListener(ContextEventType.LOST, _this.boundHandleWebGLContextLost_);\n        _this.canvas_.addEventListener(ContextEventType.RESTORED, _this.boundHandleWebGLContextRestored_);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            _this.setUniforms(options.uniforms);\n        }\n        var gl = _this.getGL();\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses\n            ? options.postProcesses.map(function (options) {\n                return new WebGLPostProcessingPass({\n                    webGlContext: gl,\n                    scaleRatio: options.scaleRatio,\n                    vertexShader: options.vertexShader,\n                    fragmentShader: options.fragmentShader,\n                    uniforms: options.uniforms,\n                });\n            })\n            : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.startTime_ = Date.now();\n        return _this;\n    }\n    /**\n     * @param {Object<string, UniformValue>} uniforms Uniform definitions.\n     */\n    WebGLHelper.prototype.setUniforms = function (uniforms) {\n        this.uniforms_ = [];\n        for (var name_1 in uniforms) {\n            this.uniforms_.push({\n                name: name_1,\n                value: uniforms[name_1],\n            });\n        }\n        this.uniformLocations_ = {};\n    };\n    /**\n     * @param {string} canvasCacheKey The canvas cache key.\n     * @return {boolean} The provided key matches the one this helper was constructed with.\n     */\n    WebGLHelper.prototype.canvasCacheKeyMatches = function (canvasCacheKey) {\n        return this.canvasCacheKey_ === getSharedCanvasCacheKey(canvasCacheKey);\n    };\n    /**\n     * Get a WebGL extension.  If the extension is not supported, null is returned.\n     * Extensions are cached after they are enabled for the first time.\n     * @param {string} name The extension name.\n     * @return {Object|null} The extension or null if not supported.\n     */\n    WebGLHelper.prototype.getExtension = function (name) {\n        if (name in this.extensionCache_) {\n            return this.extensionCache_[name];\n        }\n        var extension = this.gl_.getExtension(name);\n        this.extensionCache_[name] = extension;\n        return extension;\n    };\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer,\n            };\n            this.bufferCache_[bufferKey] = bufferCache;\n        }\n        gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (buffer) {\n        var gl = this.getGL();\n        this.bindBuffer(buffer);\n        gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (bufferCacheEntry && !gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * Clean up.\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        this.canvas_.removeEventListener(ContextEventType.LOST, this.boundHandleWebGLContextLost_);\n        this.canvas_.removeEventListener(ContextEventType.RESTORED, this.boundHandleWebGLContextRestored_);\n        releaseCanvas(this.canvasCacheKey_);\n        delete this.gl_;\n        delete this.canvas_;\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Clear the render target & bind it for future draw operations.\n     * This is similar to `prepareDraw`, only post processes will not be applied.\n     * Note: the whole viewport will be drawn to the render target, regardless of its size.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n     * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n     */\n    WebGLHelper.prototype.prepareDrawToRenderTarget = function (frameState, renderTarget, opt_disableAlphaBlend) {\n        var gl = this.getGL();\n        var size = renderTarget.getSize();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA);\n        gl.useProgram(this.currentProgram_);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        this.getExtension('OES_element_index_uint');\n        var elementType = gl.UNSIGNED_INT;\n        var elementSize = 4;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [preCompose] Called before composing.\n     * @param {function(WebGLRenderingContext, import(\"../PluggableMap.js\").FrameState):void} [postCompose] Called before composing.\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState, preCompose, postCompose) {\n        // apply post processes using the next one as target\n        for (var i = 0, ii = this.postProcessPasses_.length; i < ii; i++) {\n            if (i === ii - 1) {\n                this.postProcessPasses_[i].apply(frameState, null, preCompose, postCompose);\n            }\n            else {\n                this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1]);\n            }\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n        this.setUniformFloatValue(DefaultUniform.TIME, (Date.now() - this.startTime_) * 0.001);\n        this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n        this.setUniformFloatValue(DefaultUniform.RESOLUTION, frameState.viewState.resolution);\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value =\n                typeof uniform.value === 'function'\n                    ? uniform.value(frameState)\n                    : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement ||\n                value instanceof HTMLImageElement ||\n                value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.prevValue = undefined;\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\".concat(textureSlot)]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                var imageReady = !(value instanceof HTMLImageElement) ||\n                    /** @type {HTMLImageElement} */ (value).complete;\n                if (imageReady && uniform.prevValue !== value) {\n                    uniform.prevValue = value;\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            var message = \"Fragment shader compliation failed: \".concat(gl.getShaderInfoLog(fragmentShader));\n            throw new Error(message);\n        }\n        gl.deleteShader(fragmentShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            var message = \"Vertex shader compilation failed: \".concat(gl.getShaderInfoLog(vertexShader));\n            throw new Error(message);\n        }\n        gl.deleteShader(vertexShader);\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n            var message = \"GL program linking failed: \".concat(gl.getShaderInfoLog(vertexShader));\n            throw new Error(message);\n        }\n        return program;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        composeTransform(transform, 0, 0, 2 / (resolution * size[0]), 2 / (resolution * size[1]), -rotation, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a vec4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Array of length 4.\n     */\n    WebGLHelper.prototype.setUniformFloatVec4 = function (uniform, value) {\n        this.getGL().uniform4fv(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n     * internally.\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @private\n     */\n    WebGLHelper.prototype.enableAttributeArray_ = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * Will enable the following attributes to be read from the currently bound buffer,\n     * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n     * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n     * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributes = function (attributes) {\n        var stride = computeAttributesStride(attributes);\n        var offset = 0;\n        for (var i = 0; i < attributes.length; i++) {\n            var attr = attributes[i];\n            this.enableAttributeArray_(attr.name, attr.size, attr.type || FLOAT, stride, offset);\n            offset += attr.size * getByteSizeFromType(attr.type);\n        }\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () { };\n    /**\n     * Will create or reuse a given webgl texture and apply the given size. If no image data\n     * specified, the texture will be empty, otherwise image data will be used and the `size`\n     * parameter will be ignored.\n     * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n     * @param {Array<number>} size Expected size of the texture\n     * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n     * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n     * @return {WebGLTexture} The generated texture\n     * @api\n     */\n    WebGLHelper.prototype.createTexture = function (size, opt_data, opt_texture) {\n        var gl = this.getGL();\n        var texture = opt_texture || gl.createTexture();\n        // set params & size\n        var level = 0;\n        var internalFormat = gl.RGBA;\n        var border = 0;\n        var format = gl.RGBA;\n        var type = gl.UNSIGNED_BYTE;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        if (opt_data) {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, format, type, opt_data);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, size[0], size[1], border, format, type, null);\n        }\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n    var stride = 0;\n    for (var i = 0; i < attributes.length; i++) {\n        var attr = attributes[i];\n        stride += attr.size * getByteSizeFromType(attr.type);\n    }\n    return stride;\n}\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n    switch (type) {\n        case AttributeType.UNSIGNED_BYTE:\n            return Uint8Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_SHORT:\n            return Uint16Array.BYTES_PER_ELEMENT;\n        case AttributeType.UNSIGNED_INT:\n            return Uint32Array.BYTES_PER_ELEMENT;\n        case AttributeType.FLOAT:\n        default:\n            return Float32Array.BYTES_PER_ELEMENT;\n    }\n}\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","import { Chart, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nvar ChartEmits;\n(function(ChartEmits) {\n    ChartEmits[\"ChartRendered\"] = \"chart:rendered\";\n    ChartEmits[\"ChartUpdated\"] = \"chart:updated\";\n    ChartEmits[\"ChartDestroyed\"] = \"chart:destroyed\";\n    ChartEmits[\"LabelsUpdated\"] = \"labels:updated\";\n})(ChartEmits || (ChartEmits = {}));\nfunction chartCreate(createChartFunction, chartData, chartOptions, context) {\n    createChartFunction(chartData, chartOptions);\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartRendered);\n    }\n}\nfunction chartUpdate(chart, context) {\n    chart.update();\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartUpdated);\n    }\n}\nfunction chartDestroy(chart, context) {\n    chart.destroy();\n    if (context !== undefined) {\n        context.emit(ChartEmits.ChartDestroyed);\n    }\n}\nfunction getChartData(data, datasetIdKey) {\n    const nextData = {\n        labels: typeof data.labels === \"undefined\" ? [] : [\n            ...data.labels\n        ],\n        datasets: []\n    };\n    setChartDatasets(nextData, {\n        ...data\n    }, datasetIdKey);\n    return nextData;\n}\nfunction setChartDatasets(oldData, newData, datasetIdKey) {\n    const addedDatasets = [];\n    oldData.datasets = newData.datasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = oldData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]\n        );\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction setChartLabels(chart, labels, context) {\n    chart.data.labels = labels;\n    if (context !== undefined) {\n        context.emit(ChartEmits.LabelsUpdated);\n    }\n}\nfunction setChartOptions(chart, options) {\n    chart.options = {\n        ...options\n    };\n}\nfunction compareData(newData, oldData) {\n    // Get new and old DataSet Labels\n    const newDatasetLabels = newData.datasets.map((dataset)=>{\n        return dataset.label;\n    });\n    const oldDatasetLabels = oldData.datasets.map((dataset)=>{\n        return dataset.label;\n    });\n    // Check if Labels are equal and if dataset length is equal\n    return oldData.datasets.length === newData.datasets.length && newDatasetLabels.every((value, index)=>value === oldDatasetLabels[index]\n    );\n}\nconst templateError = \"Please remove the <template></template> tags from your chart component. See https://vue-chartjs.org/guide/#vue-single-file-components\";\n\nconst ANNOTATION_PLUGIN_KEY = \"annotation\";\nfunction generateChart(chartId, chartType, chartController) {\n    let _chartRef = null;\n    return {\n        props: {\n            chartData: {\n                type: Object,\n                required: true\n            },\n            chartOptions: {\n                type: Object,\n                default: ()=>{}\n            },\n            datasetIdKey: {\n                type: String,\n                default: \"label\"\n            },\n            chartId: {\n                type: String,\n                default: chartId\n            },\n            width: {\n                type: Number,\n                default: 400\n            },\n            height: {\n                type: Number,\n                default: 400\n            },\n            cssClasses: {\n                type: String,\n                default: \"\"\n            },\n            styles: {\n                type: Object,\n                default: ()=>{}\n            },\n            plugins: {\n                type: Array,\n                default: ()=>[]\n            }\n        },\n        data () {\n            return {\n                _chart: null\n            };\n        },\n        computed: {\n            hasAnnotationPlugin () {\n                var ref, ref1;\n                const pluginSettings = (ref = this.chartOptions) === null || ref === void 0 ? void 0 : (ref1 = ref.plugins) === null || ref1 === void 0 ? void 0 : ref1[ANNOTATION_PLUGIN_KEY];\n                return typeof pluginSettings !== \"undefined\";\n            }\n        },\n        created () {\n            Chart.register(chartController);\n        },\n        mounted () {\n            _chartRef = {\n                current: null\n            };\n            if (\"datasets\" in this.chartData && this.chartData.datasets.length > 0) {\n                chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                this.$emit(ChartEmits.ChartRendered);\n            }\n        },\n        watch: {\n            chartData: {\n                handler: function(newValue, oldValue) {\n                    this.chartDataHandler(newValue, oldValue);\n                },\n                deep: true\n            },\n            chartOptions: {\n                handler: function(newValue) {\n                    this.chartOptionsHandler(newValue);\n                },\n                deep: true\n            }\n        },\n        methods: {\n            renderChart (data, options) {\n                const currentChart = this.getCurrentChart();\n                if (currentChart !== null) {\n                    chartDestroy(currentChart);\n                    this.$emit(ChartEmits.ChartDestroyed);\n                }\n                if (!this.$refs.canvas) {\n                    throw new Error(templateError);\n                } else {\n                    const chartData = getChartData(data, this.datasetIdKey);\n                    const canvasEl2DContext = this.$refs.canvas.getContext(\"2d\");\n                    if (canvasEl2DContext !== null) {\n                        this.setCurrentChart(new Chart(canvasEl2DContext, {\n                            type: chartType,\n                            data: chartData,\n                            options,\n                            plugins: this.plugins\n                        }));\n                    }\n                }\n            },\n            chartDataHandler (newValue, oldValue) {\n                const newData = {\n                    ...newValue\n                };\n                const oldData = {\n                    ...oldValue\n                };\n                const currentChart = this.getCurrentChart();\n                if (Object.keys(oldData).length > 0) {\n                    const isEqualLabelsAndDatasetsLength = compareData(newData, oldData);\n                    if (isEqualLabelsAndDatasetsLength && currentChart !== null) {\n                        setChartDatasets(currentChart.data, newData, this.datasetIdKey);\n                        if (newData.labels !== undefined) {\n                            setChartLabels(currentChart, newData.labels);\n                            this.$emit(ChartEmits.LabelsUpdated);\n                        }\n                        this.updateChart();\n                        this.$emit(ChartEmits.ChartUpdated);\n                    } else {\n                        if (currentChart !== null) {\n                            chartDestroy(currentChart);\n                            this.$emit(ChartEmits.ChartDestroyed);\n                        }\n                        chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                        this.$emit(ChartEmits.ChartRendered);\n                    }\n                } else {\n                    if (currentChart !== null) {\n                        chartDestroy(currentChart);\n                        this.$emit(ChartEmits.ChartDestroyed);\n                    }\n                    chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                    this.$emit(ChartEmits.ChartRendered);\n                }\n            },\n            chartOptionsHandler (options) {\n                const currentChart = this.getCurrentChart();\n                if (currentChart !== null) {\n                    setChartOptions(currentChart, options);\n                    this.updateChart();\n                } else {\n                    chartCreate(this.renderChart, this.chartData, this.chartOptions);\n                }\n            },\n            updateChart () {\n                const currentChart = this.getCurrentChart();\n                chartUpdate(currentChart);\n            },\n            getCurrentChart () {\n                return this.hasAnnotationPlugin ? _chartRef.current : this.$data._chart;\n            },\n            setCurrentChart (chart) {\n                this.hasAnnotationPlugin ? _chartRef.current = chart : this.$data._chart = chart;\n            }\n        },\n        beforeDestroy () {\n            const currentChart = this.getCurrentChart();\n            if (currentChart !== null) {\n                chartDestroy(currentChart);\n                this.$emit(ChartEmits.ChartDestroyed);\n            }\n        },\n        render: function(createElement) {\n            return createElement(\"div\", {\n                style: this.styles,\n                class: this.cssClasses\n            }, [\n                createElement(\"canvas\", {\n                    attrs: {\n                        id: this.chartId,\n                        width: this.width,\n                        height: this.height\n                    },\n                    ref: \"canvas\"\n                })\n            ]);\n        }\n    };\n}\n/** @type Object */ const Bar = /* #__PURE__ */ generateChart(\"bar-chart\", \"bar\", BarController);\n/** @type Object */ const Doughnut = /* #__PURE__ */ generateChart(\"doughnut-chart\", \"doughnut\", DoughnutController);\n/** @type Object */ const Line = /* #__PURE__ */ generateChart(\"line-chart\", \"line\", LineController);\n/** @type Object */ const Pie = /* #__PURE__ */ generateChart(\"pie-chart\", \"pie\", PieController);\n/** @type Object */ const PolarArea = /* #__PURE__ */ generateChart(\"polar-chart\", \"polarArea\", PolarAreaController);\n/** @type Object */ const Radar = /* #__PURE__ */ generateChart(\"radar-chart\", \"radar\", RadarController);\n/** @type Object */ const Bubble = /* #__PURE__ */ generateChart(\"bubble-chart\", \"bubble\", BubbleController);\n/** @type Object */ const Scatter = /* #__PURE__ */ generateChart(\"scatter-chart\", \"scatter\", ScatterController);\n\nexport { Bar, Bubble, Doughnut, Line, Pie, PolarArea, Radar, Scatter, generateChart };\n//# sourceMappingURL=index.js.map\n","export function create() {\n    var source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,a){var u=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=a?a.vertexPosition:0,h=a?a.indexPosition:0,d=b/u;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=u,l,v,1),c.length&&i.set(c,b+3),o(i,b+=u,l,v,2),c.length&&i.set(c,b+3),o(i,b+=u,l,v,3),c.length&&i.set(c,b+3),b+=u,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o,s=r.customAttributesCount,a=2+s,u=new Float32Array(r.renderInstructions),l=u.length/a,v=4*l*(s+3),c=new Uint32Array(6*l),g=new Float32Array(v),b=0;b<u.length;b+=a)o=i(u,b,g,c,s,o);var h=e({vertexBuffer:g.buffer,indexBuffer:c.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[g.buffer,c.buffer,u.buffer])}};\";\n    return new Worker(typeof Blob === 'undefined'\n        ? 'data:application/javascript;base64,' + Buffer.from(source, 'binary').toString('base64')\n        : URL.createObjectURL(new Blob([source], { type: 'application/javascript' })));\n}\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl\n */\nimport { SAFARI_BUG_237906 } from './has.js';\nimport { assign } from './obj.js';\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var attributes = assign({\n        preserveDrawingBuffer: true,\n        antialias: SAFARI_BUG_237906 ? false : true, // https://bugs.webkit.org/show_bug.cgi?id=237906\n    }, opt_attributes);\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n    if (!supportedExtensions) {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            supportedExtensions = gl.getSupportedExtensions();\n        }\n    }\n    return supportedExtensions;\n}\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/PaletteTexture\n */\nvar PaletteTexture = /** @class */ (function () {\n    /**\n     * @param {string} name The name of the texture.\n     * @param {Uint8Array} data The texture data.\n     */\n    function PaletteTexture(name, data) {\n        this.name = name;\n        this.data = data;\n        /**\n         * @type {WebGLTexture}\n         * @private\n         */\n        this.texture_ = null;\n    }\n    /**\n     * @param {WebGLRenderingContext} gl Rendering context.\n     * @return {WebGLTexture} The texture.\n     */\n    PaletteTexture.prototype.getTexture = function (gl) {\n        if (!this.texture_) {\n            var texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.data.length / 4, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.data);\n            this.texture_ = texture;\n        }\n        return this.texture_;\n    };\n    return PaletteTexture;\n}());\nexport default PaletteTexture;\n//# sourceMappingURL=PaletteTexture.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER, STATIC_DRAW, STREAM_DRAW, } from '../webgl.js';\nimport { assert } from '../asserts.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n     * Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(type, opt_usage) {\n        /**\n         * @private\n         * @type {Float32Array|Uint32Array}\n         */\n        this.array = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.type = type;\n        assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {number} size Array size\n     */\n    WebGLArrayBuffer.prototype.ofSize = function (size) {\n        this.array = new (getArrayClassForType(this.type))(size);\n    };\n    /**\n     * Populates the buffer with an array of the given size (all values will be zeroes).\n     * @param {Array<number>} array Numerical array\n     */\n    WebGLArrayBuffer.prototype.fromArray = function (array) {\n        var arrayClass = getArrayClassForType(this.type);\n        this.array = arrayClass.from\n            ? arrayClass.from(array)\n            : new arrayClass(array);\n    };\n    /**\n     * Populates the buffer with a raw binary array buffer.\n     * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n     * initialized for the same typed array class.\n     */\n    WebGLArrayBuffer.prototype.fromArrayBuffer = function (buffer) {\n        this.array = new (getArrayClassForType(this.type))(buffer);\n    };\n    /**\n     * @return {number} Buffer type.\n     */\n    WebGLArrayBuffer.prototype.getType = function () {\n        return this.type;\n    };\n    /**\n     * Will return null if the buffer was not initialized\n     * @return {Float32Array|Uint32Array} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.array;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage;\n    };\n    /**\n     * Will return 0 if the buffer is not initialized\n     * @return {number} Array size\n     */\n    WebGLArrayBuffer.prototype.getSize = function () {\n        return this.array ? this.array.length : 0;\n    };\n    return WebGLArrayBuffer;\n}());\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n    switch (type) {\n        case ARRAY_BUFFER:\n            return Float32Array;\n        case ELEMENT_ARRAY_BUFFER:\n            return Uint32Array;\n        default:\n            return Float32Array;\n    }\n}\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport { equals } from '../array.js';\n// for pixel color reading\nvar tmpArray4 = new Uint8Array(4);\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nvar WebGLRenderTarget = /** @class */ (function () {\n    /**\n     * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n     * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n     */\n    function WebGLRenderTarget(helper, opt_size) {\n        /**\n         * @private\n         * @type {import(\"./Helper.js\").default}\n         */\n        this.helper_ = helper;\n        var gl = helper.getGL();\n        /**\n         * @private\n         * @type {WebGLTexture}\n         */\n        this.texture_ = gl.createTexture();\n        /**\n         * @private\n         * @type {WebGLFramebuffer}\n         */\n        this.framebuffer_ = gl.createFramebuffer();\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.size_ = opt_size || [1, 1];\n        /**\n         * @type {Uint8Array}\n         * @private\n         */\n        this.data_ = new Uint8Array(0);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.dataCacheDirty_ = true;\n        this.updateSize_();\n    }\n    /**\n     * Changes the size of the render target texture. Note: will do nothing if the size\n     * is already the same.\n     * @param {Array<number>} size Expected size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.setSize = function (size) {\n        if (equals(size, this.size_)) {\n            return;\n        }\n        this.size_[0] = size[0];\n        this.size_[1] = size[1];\n        this.updateSize_();\n    };\n    /**\n     * Returns the size of the render target texture\n     * @return {Array<number>} Size of the render target texture\n     * @api\n     */\n    WebGLRenderTarget.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n     * render target into memory, which is an expensive operation.\n     * This content will be kept in cache but should be cleared after each new render.\n     * @api\n     */\n    WebGLRenderTarget.prototype.clearCachedData = function () {\n        this.dataCacheDirty_ = true;\n    };\n    /**\n     * Returns the full content of the frame buffer as a series of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * @return {Uint8Array} Integer array of color values\n     * @api\n     */\n    WebGLRenderTarget.prototype.readAll = function () {\n        if (this.dataCacheDirty_) {\n            var size = this.size_;\n            var gl = this.helper_.getGL();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n            gl.readPixels(0, 0, size[0], size[1], gl.RGBA, gl.UNSIGNED_BYTE, this.data_);\n            this.dataCacheDirty_ = false;\n        }\n        return this.data_;\n    };\n    /**\n     * Reads one pixel of the frame buffer as an array of r, g, b, a components\n     * in the 0-255 range (unsigned byte).\n     * If x and/or y are outside of existing data, an array filled with 0 is returned.\n     * @param {number} x Pixel coordinate\n     * @param {number} y Pixel coordinate\n     * @return {Uint8Array} Integer array with one color value (4 components)\n     * @api\n     */\n    WebGLRenderTarget.prototype.readPixel = function (x, y) {\n        if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n            tmpArray4[0] = 0;\n            tmpArray4[1] = 0;\n            tmpArray4[2] = 0;\n            tmpArray4[3] = 0;\n            return tmpArray4;\n        }\n        this.readAll();\n        var index = Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n        tmpArray4[0] = this.data_[index * 4];\n        tmpArray4[1] = this.data_[index * 4 + 1];\n        tmpArray4[2] = this.data_[index * 4 + 2];\n        tmpArray4[3] = this.data_[index * 4 + 3];\n        return tmpArray4;\n    };\n    /**\n     * @return {WebGLTexture} Texture to render to\n     */\n    WebGLRenderTarget.prototype.getTexture = function () {\n        return this.texture_;\n    };\n    /**\n     * @return {WebGLFramebuffer} Frame buffer of the render target\n     */\n    WebGLRenderTarget.prototype.getFramebuffer = function () {\n        return this.framebuffer_;\n    };\n    /**\n     * @private\n     */\n    WebGLRenderTarget.prototype.updateSize_ = function () {\n        var size = this.size_;\n        var gl = this.helper_.getGL();\n        this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n        gl.viewport(0, 0, size[0], size[1]);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture_, 0);\n        this.data_ = new Uint8Array(size[0] * size[1] * 4);\n    };\n    return WebGLRenderTarget;\n}());\nexport default WebGLRenderTarget;\n//# sourceMappingURL=RenderTarget.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map"],"sourceRoot":""}
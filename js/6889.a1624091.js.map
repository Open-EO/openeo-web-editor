{"version":3,"file":"js/6889.a1624091.js","mappings":"sLAkDA,MAAMA,UAAe,IAInBC,YAAYC,GACVC,QAMAC,KAAKC,YAAa,IAAAC,KAAcJ,EAAQG,YAMxCD,KAAKG,cAAgBC,EAAkBN,EAAQO,cAM/CL,KAAKM,8BACiCC,IAApCT,EAAQU,yBACJV,EAAQU,wBAQdR,KAAKS,SAAU,EAMfT,KAAKU,YAA2BH,IAAlBT,EAAQa,MAAsBb,EAAQa,MAAQ,QAM5DX,KAAKY,YAA2BL,IAAlBT,EAAQe,OAAsBf,EAAQe,MAMpDb,KAAKc,eAAiBhB,EAAQiB,YAM9Bf,KAAKgB,aAAe,KAMpBhB,KAAKiB,aAAe,KAEpB,MAAMC,EAAOlB,KAKbA,KAAKmB,aAAe,IAAIC,SAAQ,SAAUC,EAASC,GACjDJ,EAAKF,aAAeK,EACpBH,EAAKD,aAAeK,CACtB,GACF,CAOAC,kBACE,OAAOvB,KAAKG,aACd,CAMAqB,6BACE,OAAOxB,KAAKM,wBACd,CAOAmB,gBACE,OAAOzB,KAAKC,UACd,CAMAyB,eAAezB,GACb,OAAO,IACT,CAKA0B,UACE,OAAO3B,KAAKmB,YACd,CAOAS,WACE,OAAO5B,KAAKU,MACd,CAKAmB,WACE,OAAO7B,KAAKY,MACd,CAKAkB,iBACE,OAAO9B,KAAKc,YACd,CAMAiB,UACE/B,KAAKgC,SACP,CASAC,gBAAgB5B,GACdL,KAAKG,cAAgBC,EAAkBC,GACvCL,KAAKgC,SACP,CAMAE,SAASvB,GACPX,KAAKU,OAASC,EACdX,KAAKgC,SACP,EAQF,SAAS5B,EAAkB+B,GACzB,OAAKA,EAGDC,MAAMC,QAAQF,GACT,SAAUG,GACf,OAAOH,CACT,EAG6B,oBAApBA,EACFA,EAGF,SAAUG,GACf,MAAO,CAACH,EACV,EAdS,IAeX,CAEA,S,0JChMA,MAAMI,UAAmB,IAIvB1C,YAAYC,GACVC,MAAM,CACJM,aAAcP,EAAQO,aACtBG,wBAAyBV,EAAQU,wBACjCP,WAAYH,EAAQG,WACpBU,MAAOb,EAAQa,MACfE,MAAOf,EAAQe,MACfE,YAAajB,EAAQiB,cAMvBf,KAAKwC,GAKLxC,KAAKyC,KAKLzC,KAAK0C,GAML1C,KAAK2C,aAA6BpC,IAAnBT,EAAQ8C,QAAuB9C,EAAQ8C,OAMtD5C,KAAK6C,qBACwBtC,IAA3BT,EAAQgD,eAA+BhD,EAAQgD,eAAiB,EAKlE9C,KAAK+C,cAAgCxC,IAArBT,EAAQiD,SAAyBjD,EAAQiD,SAAW,KAEpE,MAAMC,EAAW,CAAC,IAAK,KACnBhD,KAAK+C,WACP,QAAO/C,KAAK+C,SAASE,YAAYjD,KAAK+C,SAASG,cAAeF,GAOhEhD,KAAKmD,UAAY,IAAI,IAAUrD,EAAQsD,WAAa,GAMpDpD,KAAKqD,QAAU,CAAC,EAAG,GAMnBrD,KAAKsD,KAAOxD,EAAQyD,KAAO,GAM3BvD,KAAKwD,YAAc,CACjBC,WAAY3D,EAAQ2D,WACpB1C,YAAajB,EAAQiB,aAUvBf,KAAK0D,WAAa5D,EAAQ4D,WAAa5D,EAAQ4D,WAAa,CAC9D,CAKAC,iBACE,OAAO3D,KAAKmD,UAAUQ,gBACxB,CAMAC,YAAY3D,EAAY4D,GACtB,MAAMV,EAAYnD,KAAK8D,0BAA0B7D,GAC7CkD,GACFA,EAAUS,YAAYC,EAE1B,CAWAE,kBAAkB9D,EAAY+D,EAAGC,EAAWC,GAC1C,MAAMf,EAAYnD,KAAK8D,0BAA0B7D,GACjD,IAAKkD,EACH,OAAO,EAGT,IACIgB,EAAMC,EAAcC,EADpBC,GAAU,EAEd,IAAK,IAAIC,EAAIN,EAAUO,KAAMD,GAAKN,EAAUQ,OAAQF,EAClD,IAAK,IAAIG,EAAIT,EAAUU,KAAMD,GAAKT,EAAUW,OAAQF,EAClDN,GAAe,QAAUJ,EAAGO,EAAGG,GAC/BL,GAAS,EACLlB,EAAU0B,YAAYT,KACxBD,EACEhB,EAAUjD,IAAIkE,GAEhBC,EAASF,EAAKvC,aAAe,IAAUkD,OACnCT,IACFA,GAA4B,IAAnBH,EAASC,KAGjBE,IACHC,GAAU,GAIhB,OAAOA,CACT,CAMAS,uBAAuB9E,GACrB,OAAO,CACT,CAMA+E,SACE,OAAOhF,KAAKsD,IACd,CAOA2B,OAAO1B,GACDvD,KAAKsD,OAASC,IAChBvD,KAAKsD,KAAOC,EACZvD,KAAKgC,UAET,CAMAkD,UAAUjF,GACR,OAAOD,KAAK2C,OACd,CAMAjB,eAAezB,GACb,MAAM8C,EAAW9C,EACbD,KAAKmF,yBAAyBlF,GAC9BD,KAAK+C,SACT,OAAKA,EAGEA,EAASrB,iBAFP,IAGX,CAWA0D,QAAQpB,EAAGO,EAAGG,EAAGW,EAAYpF,GAC3B,OAAO,SACT,CAOAqF,cACE,OAAOtF,KAAK+C,QACd,CAMAoC,yBAAyBlF,GACvB,OAAKD,KAAK+C,SAGH/C,KAAK+C,UAFH,QAAyB9C,EAGpC,CAOA6D,0BAA0B7D,GACxB,MAAMsF,EAAmBvF,KAAKyB,gBAK9B,OAJA,OACuB,OAArB8D,IAA6B,IAAAC,YAAWD,EAAkBtF,GAC1D,IAEKD,KAAKmD,SACd,CASAsC,kBAAkBJ,GAChB,OAAOrF,KAAK6C,eACd,CAQA6C,iBAAiB1B,EAAGqB,EAAYpF,GAC9B,MAAM8C,EAAW/C,KAAKmF,yBAAyBlF,GACzC6C,EAAiB9C,KAAKyF,kBAAkBJ,GACxCrC,GAAW,QAAOD,EAASE,YAAYe,GAAIhE,KAAKqD,SACtD,OAAsB,GAAlBP,EACKE,GAEF,QAAUA,EAAUF,EAAgB9C,KAAKqD,QAClD,CAWAsC,+BAA+BC,EAAW3F,GACxCA,OAA4BM,IAAfN,EAA2BA,EAAaD,KAAKyB,gBAC1D,MAAMsB,EAAW/C,KAAKmF,yBAAyBlF,GAI/C,OAHID,KAAK6B,YAAc5B,EAAW4F,aAChCD,GAAY,QAAM7C,EAAU6C,EAAW3F,KAElC,QAAiB2F,EAAW7C,GAAY6C,EAAY,IAC7D,CAMAE,QACE9F,KAAKmD,UAAU2C,OACjB,CAEA/D,UACE/B,KAAK8F,QACL/F,MAAMgC,SACR,CAOAgE,gBAAgBC,EAAW/F,GACzB,MAAMkD,EAAYnD,KAAK8D,0BAA0B7D,GAC7C+F,EAAY7C,EAAU8C,gBACxB9C,EAAU8C,cAAgBD,EAE9B,CAUAE,QAAQlC,EAAGO,EAAGG,EAAGzE,GAAa,EAQzB,MAAMkG,UAAwB,KAKnCtG,YAAYuG,EAAMjC,GAChBpE,MAAMqG,GAONpG,KAAKmE,KAAOA,CACd,EAGF,S,mCCtYA,SAMEkC,cAAe,gBAQfC,YAAa,cASbC,cAAe,gB,qJCQjB,MAAMC,UAAgB,IAIpB3G,YAAYC,GACVC,MAAM,CACJM,aAAcP,EAAQO,aACtB+C,UAAWtD,EAAQsD,UACnBR,OAAQ9C,EAAQ8C,OAChB3C,WAAYH,EAAQG,WACpBU,MAAOb,EAAQa,MACfoC,SAAUjD,EAAQiD,SAClBD,eAAgBhD,EAAQgD,eACxBjC,MAAOf,EAAQe,MACf4C,WAAY3D,EAAQ2D,WACpB1C,YAAajB,EAAQiB,YACrBwC,IAAKzD,EAAQyD,IACb/C,wBAAyBV,EAAQU,wBACjCkD,WAAY5D,EAAQ4D,aAOtB1D,KAAKyG,yBACHzG,KAAK0G,kBAAoBF,EAAQG,UAAUD,gBAM7C1G,KAAK4G,iBAAmB9G,EAAQ8G,iBAE5B9G,EAAQ4G,kBACV1G,KAAK0G,gBAAkB5G,EAAQ4G,iBAOjC1G,KAAK6G,KAAO,KAER/G,EAAQ+G,KACV7G,KAAK8G,QAAQhH,EAAQ+G,MACZ/G,EAAQiH,KACjB/G,KAAKgH,OAAOlH,EAAQiH,KAOtB/G,KAAKiH,iBAAmB,CAAC,CAC3B,CAOAC,sBACE,OAAOlH,KAAK4G,gBACd,CAOAO,qBACE,OAAOC,OAAOC,eAAerH,MAAM0G,kBAAoB1G,KAAK0G,gBACxD1G,KAAK0G,gBAAgBY,KAAKtH,MAC1BA,KAAK0G,eACX,CASAa,UACE,OAAOvH,KAAK6G,IACd,CAOAW,iBAAiBC,GACf,MAAMtD,EAAoDsD,EAAY,OAChEC,GAAM,QAAOvD,GACbwD,EAAYxD,EAAKvC,WACvB,IAAIwE,EACAuB,GAAaC,EAAA,EAAUC,SACzB7H,KAAKiH,iBAAiBS,IAAO,EAC7BtB,EAAO0B,EAAA,EAAczB,eACZqB,KAAO1H,KAAKiH,0BACdjH,KAAKiH,iBAAiBS,GAC7BtB,EACEuB,GAAaC,EAAA,EAAUG,MACnBD,EAAA,EAAcvB,cACdoB,GAAaC,EAAA,EAAU9C,OACvBgD,EAAA,EAAcxB,iBACd/F,QAEIA,GAAR6F,GACFpG,KAAKgI,cAAc,IAAI,IAAgB5B,EAAMjC,GAEjD,CAOA8D,oBAAoBrB,GAClB5G,KAAKmD,UAAU2C,QACf9F,KAAK4G,iBAAmBA,EACxB5G,KAAKgC,SACP,CAQAkG,mBAAmBxB,EAAiBnD,GAClCvD,KAAK0G,gBAAkBA,EACvB1G,KAAKmD,UAAUgF,qBACI,qBAAR5E,EACTvD,KAAKiF,OAAO1B,GAEZvD,KAAKgC,SAET,CAOAgF,OAAOD,GACL,MAAMF,GAAO,QAAUE,GACvB/G,KAAK6G,KAAOA,EACZ7G,KAAK8G,QAAQD,EACf,CAOAC,QAAQD,GACN7G,KAAK6G,KAAOA,EACZ,MAAMtD,EAAMsD,EAAKuB,KAAK,MAClBpI,KAAKyG,yBACPzG,KAAKkI,oBAAmB,QAAoBrB,EAAM7G,KAAK+C,UAAWQ,GAElEvD,KAAKiF,OAAO1B,EAEhB,CAQAmD,gBAAgBd,EAAWP,EAAYpF,GAEvC,CAQAiG,QAAQlC,EAAGO,EAAGG,GACZ,MAAMN,GAAe,QAAUJ,EAAGO,EAAGG,GACjC1E,KAAKmD,UAAU0B,YAAYT,IAC7BpE,KAAKmD,UAAUjD,IAAIkE,EAEvB,EAGF,U,0BCpKA,MAAMiE,UAAkB,EAItBxI,YAAYC,GACVC,MAAM,CACJM,aAAcP,EAAQO,aACtB+C,UAAWtD,EAAQsD,UACnBR,OAAQ9C,EAAQ8C,OAChB3C,WAAYH,EAAQG,WACpBU,MAAOb,EAAQa,MACfoC,SAAUjD,EAAQiD,SAClB6D,iBAAkB9G,EAAQ8G,iBACtB9G,EAAQ8G,iBACR0B,EACJxF,eAAgBhD,EAAQgD,eACxB4D,gBAAiB5G,EAAQ4G,gBACzBK,IAAKjH,EAAQiH,IACbF,KAAM/G,EAAQ+G,KACdhG,MAAOf,EAAQe,MACf4C,WAAY3D,EAAQ2D,WACpB1C,iBAC0BR,IAAxBT,EAAQiB,aAA4BjB,EAAQiB,YAC9CwC,IAAKzD,EAAQyD,IACb/C,wBAAyBV,EAAQU,wBACjCkD,WAAY5D,EAAQ4D,aAOtB1D,KAAKuI,iBACqBhI,IAAxBT,EAAQyI,YAA4BzI,EAAQyI,YAAc,KAM5DvI,KAAKwI,eACmBjI,IAAtBT,EAAQ0I,UAA0B1I,EAAQ0I,UAAYC,EAAA,EAMxDzI,KAAK0I,uBAAyB,CAAC,EAM/B1I,KAAK2I,sBAAwB,CAAC,EAM9B3I,KAAK4I,4BAA8B9I,EAAQ+I,2BAM3C7I,KAAK8I,0BAA2B,CAClC,CAKAnF,iBACE,GAAI3D,KAAKmD,UAAUQ,iBACjB,OAAO,EAET,IAAK,MAAMJ,KAAOvD,KAAK0I,uBACrB,GAAI1I,KAAK0I,uBAAuBnF,GAAKI,iBACnC,OAAO,EAIX,OAAO,CACT,CAMAC,YAAY3D,EAAY4D,GACtB,MAAMkF,EAAgB/I,KAAK8D,0BAA0B7D,GAErDD,KAAKmD,UAAUS,YACb5D,KAAKmD,WAAa4F,EAAgBlF,EAAY,CAAC,GAEjD,IAAK,MAAMmF,KAAMhJ,KAAK0I,uBAAwB,CAC5C,MAAMvF,EAAYnD,KAAK0I,uBAAuBM,GAC9C7F,EAAUS,YAAYT,GAAa4F,EAAgBlF,EAAY,CAAC,EAClE,CACF,CAMAkB,uBAAuB9E,GACrB,OACED,KAAKyB,iBACLxB,KACC,IAAAuF,YAAWxF,KAAKyB,gBAAiBxB,GAE3B,EAEFD,KAAKiJ,WACd,CAKAA,YACE,OAAO,CACT,CAMAjE,SACE,IAAIzB,EAAMxD,MAAMiF,SAIhB,OAHKhF,KAAK8B,mBACRyB,GAAO,0BAEFA,CACT,CAMA2B,UAAUjF,GACR,QACED,KAAKyB,iBACLxB,KACC,IAAAuF,YAAWxF,KAAKyB,gBAAiBxB,KAI7BF,MAAMmF,UAAUjF,EACzB,CAMAkF,yBAAyBlF,GACvB,MAAMiJ,EAAWlJ,KAAKyB,gBACtB,GAAIzB,KAAK+C,YAAcmG,IAAY,IAAA1D,YAAW0D,EAAUjJ,IACtD,OAAOD,KAAK+C,SAEd,MAAMoG,GAAU,QAAOlJ,GAKvB,OAJMkJ,KAAWnJ,KAAK2I,wBACpB3I,KAAK2I,sBAAsBQ,IACzB,QAAyBlJ,IAEtBD,KAAK2I,sBAAsBQ,EACpC,CAMArF,0BAA0B7D,GACxB,MAAMiJ,EAAWlJ,KAAKyB,gBACtB,IAAKyH,IAAY,IAAA1D,YAAW0D,EAAUjJ,GACpC,OAAOD,KAAKmD,UAEd,MAAMgG,GAAU,QAAOlJ,GAMvB,OALMkJ,KAAWnJ,KAAK0I,yBACpB1I,KAAK0I,uBAAuBS,GAAW,IAAIC,EAAA,EACzCpJ,KAAKmD,UAAU8C,gBAGZjG,KAAK0I,uBAAuBS,EACrC,CAYAE,YAAYrF,EAAGO,EAAGG,EAAGW,EAAYpF,EAAYsD,GAC3C,MAAMqC,EAAY,CAAC5B,EAAGO,EAAGG,GACnB4E,EAAetJ,KAAK2F,+BACxBC,EACA3F,GAEIsJ,EAAUD,EACZtJ,KAAK0G,gBAAgB4C,EAAcjE,EAAYpF,QAC/CM,EACE4D,EAAO,IAAInE,KAAKwI,UACpB5C,OACYrF,IAAZgJ,EAAwB3B,EAAA,EAAU4B,KAAO5B,EAAA,EAAU6B,WACvClJ,IAAZgJ,EAAwBA,EAAU,GAClCvJ,KAAKuI,YACLvI,KAAK4G,iBACL5G,KAAKwD,aAIP,OAFAW,EAAKZ,IAAMA,EACXY,EAAKuF,iBAAiBC,EAAA,EAAUC,OAAQ5J,KAAKwH,iBAAiBF,KAAKtH,OAC5DmE,CACT,CAUAiB,QAAQpB,EAAGO,EAAGG,EAAGW,EAAYpF,GAC3B,MAAMsF,EAAmBvF,KAAKyB,gBAC9B,IACG8D,IACAtF,IACD,IAAAuF,YAAWD,EAAkBtF,GAE7B,OAAOD,KAAK6J,gBACV7F,EACAO,EACAG,EACAW,EACAE,GAAoBtF,GAGxB,MAAM6J,EAAQ9J,KAAK8D,0BAA0B7D,GACvC2F,EAAY,CAAC5B,EAAGO,EAAGG,GACzB,IAAIP,EACJ,MAAMC,GAAe,QAAOwB,GACxBkE,EAAMjF,YAAYT,KACpBD,EAAO2F,EAAM5J,IAAIkE,IAEnB,MAAMb,EAAMvD,KAAKgF,SACjB,GAAIb,GAAQA,EAAKZ,KAAOA,EACtB,OAAOY,EAET,MAAM4F,EAAiB/J,KAAKmF,yBAAyBI,GAC/CyE,EAAiBhK,KAAKmF,yBAAyBlF,GAC/CgK,EAAmBjK,KAAK2F,+BAC5BC,EACA3F,GAEIiK,EAAU,IAAI,IAClB3E,EACAwE,EACA9J,EACA+J,EACApE,EACAqE,EACAjK,KAAKyF,kBAAkBJ,GACvBrF,KAAKiJ,aACL,CAACjF,EAAGO,EAAGG,EAAGW,IACRrF,KAAK6J,gBAAgB7F,EAAGO,EAAGG,EAAGW,EAAYE,IAC5CvF,KAAK4I,4BACL5I,KAAK8I,yBACL9I,KAAK8B,kBAWP,OATAoI,EAAQ3G,IAAMA,EAEVY,GACF+F,EAAQC,YAAchG,EACtB+F,EAAQE,sBACRN,EAAMO,QAAQjG,EAAc8F,IAE5BJ,EAAMQ,IAAIlG,EAAc8F,GAEnBA,CACT,CAWAL,gBAAgB7F,EAAGO,EAAGG,EAAGW,EAAYpF,GACnC,IAAIkE,EAAO,KACX,MAAMC,GAAe,QAAUJ,EAAGO,EAAGG,GAC/BnB,EAAMvD,KAAKgF,SACjB,GAAKhF,KAAKmD,UAAU0B,YAAYT,IAK9B,GADAD,EAAOnE,KAAKmD,UAAUjD,IAAIkE,GACtBD,EAAKZ,KAAOA,EAAK,CAInB,MAAM4G,EAAchG,EACpBA,EAAOnE,KAAKqJ,YAAYrF,EAAGO,EAAGG,EAAGW,EAAYpF,EAAYsD,GAGrD4G,EAAYvI,YAAcgG,EAAA,EAAU4B,KAEtCrF,EAAKgG,YAAcA,EAAYA,YAE/BhG,EAAKgG,YAAcA,EAErBhG,EAAKiG,sBACLpK,KAAKmD,UAAUkH,QAAQjG,EAAcD,EACvC,OApBAA,EAAOnE,KAAKqJ,YAAYrF,EAAGO,EAAGG,EAAGW,EAAYpF,EAAYsD,GACzDvD,KAAKmD,UAAUmH,IAAIlG,EAAcD,GAqBnC,OAAOA,CACT,CAOAoG,2BAA2BC,GACzB,GAAIxK,KAAK8I,0BAA4B0B,EAArC,CAGAxK,KAAK8I,yBAA2B0B,EAChC,IAAK,MAAMxB,KAAMhJ,KAAK0I,uBACpB1I,KAAK0I,uBAAuBM,GAAIlD,QAElC9F,KAAKgC,SALL,CAMF,CAcAyI,yBAAyBxK,EAAYyK,GACnC,MAAMC,GAAO,IAAAzK,KAAcD,GAC3B,GAAI0K,EAAM,CACR,MAAMxB,GAAU,QAAOwB,GACjBxB,KAAWnJ,KAAK2I,wBACpB3I,KAAK2I,sBAAsBQ,GAAWuB,EAE1C,CACF,CAEA5E,QACE/F,MAAM+F,QACN,IAAK,MAAMkD,KAAMhJ,KAAK0I,uBACpB1I,KAAK0I,uBAAuBM,GAAIlD,OAEpC,EAOF,SAASwC,EAAwBsC,EAAWC,GACQD,EAAUE,WAAYD,IACtEA,CACJ,CAEA,S,qQCrZO,MAAME,UAA0B,KAMrClL,YAAYuG,EAAM4E,EAASC,GACzBlL,MAAMqG,GAONpG,KAAKgL,QAAUA,EAOfhL,KAAKiL,SAAWA,CAClB,EAmHF,MAAMC,UAAqB,IAIzBrL,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAEtBC,MAAM,CACJM,aAAcP,EAAQO,aACtBU,aAAa,EACbd,gBAAYM,EACZI,MAAO,QACPE,WAAyBN,IAAlBT,EAAQe,OAAsBf,EAAQe,QAM/Cb,KAAKwC,GAKLxC,KAAKyC,KAKLzC,KAAK0C,GAML1C,KAAKmL,QAAU,KAMfnL,KAAKoL,QAAUtL,EAAQuL,OAMvBrL,KAAKsL,eAAiC/K,IAArBT,EAAQyL,UAAgCzL,EAAQyL,SAMjEvL,KAAKwL,KAAO1L,EAAQiH,SAEGxG,IAAnBT,EAAQ2L,OACVzL,KAAKmL,QAAUrL,EAAQ2L,YACAlL,IAAdP,KAAKwL,QACd,OAAOxL,KAAKoL,QAAS,GAErBpL,KAAKmL,SAAU,QACbnL,KAAKwL,KACkDxL,KAAY,UAQvEA,KAAK0L,eACkBnL,IAArBT,EAAQ6L,SAAyB7L,EAAQ6L,SAAW,KAEtD,MAAMC,OACwBrL,IAA5BT,EAAQ8L,iBAAgC9L,EAAQ8L,gBAqDlD,IAAIC,EAEAZ,EAjDJjL,KAAK8L,eAAiBF,EAAkB,IAAI,IAAU,KAMtD5L,KAAK+L,oBAAsB,IAAI,IAM/B/L,KAAKgM,qBAAuB,EAM5BhM,KAAKiM,sBAAwB,CAAC,EAO9BjM,KAAKkM,SAAW,CAAC,EAOjBlM,KAAKmM,UAAY,CAAC,EAMlBnM,KAAKoM,mBAAqB,CAAC,EAM3BpM,KAAKqM,oBAAsB,KAMvBjK,MAAMC,QAAQvC,EAAQmL,UACxBA,EAAWnL,EAAQmL,SACVnL,EAAQmL,WACjBY,EAAa/L,EAAQmL,SACrBA,EAAWY,EAAWS,YAEnBV,QAAkCrL,IAAfsL,IACtBA,EAAa,IAAI,IAAWZ,SAEb1K,IAAb0K,GACFjL,KAAKuM,oBAAoBtB,QAER1K,IAAfsL,GACF7L,KAAKwM,wBAAwBX,EAEjC,CAcAY,WAAWzB,GACThL,KAAK0M,mBAAmB1B,GACxBhL,KAAKgC,SACP,CAOA0K,mBAAmB1B,GACjB,MAAM2B,GAAa,QAAO3B,GAE1B,IAAKhL,KAAK4M,YAAYD,EAAY3B,GAIhC,YAHIhL,KAAKqM,qBACPrM,KAAKqM,oBAAoBQ,OAAO7B,IAKpChL,KAAK8M,mBAAmBH,EAAY3B,GAEpC,MAAM+B,EAAW/B,EAAQgC,cACzB,GAAID,EAAU,CACZ,MAAME,EAASF,EAASG,YACpBlN,KAAK8L,gBACP9L,KAAK8L,eAAeqB,OAAOF,EAAQjC,EAEvC,MACEhL,KAAKiM,sBAAsBU,GAAc3B,EAG3ChL,KAAKgI,cACH,IAAI+C,EAAkB,IAAgBqC,WAAYpC,GAEtD,CAOA8B,mBAAmBH,EAAY3B,GAC7BhL,KAAKoM,mBAAmBO,GAAc,EACpC,QAAO3B,EAAS,IAAUpB,OAAQ5J,KAAKqN,qBAAsBrN,OAC7D,QACEgL,EACA,IAAgBsC,eAChBtN,KAAKqN,qBACLrN,MAGN,CASA4M,YAAYD,EAAY3B,GACtB,IAAIuC,GAAQ,EACZ,MAAMvE,EAAKgC,EAAQwC,QAYnB,YAXWjN,IAAPyI,IACIA,EAAGyE,aAAczN,KAAKkM,SAG1BqB,GAAQ,EAFRvN,KAAKkM,SAASlD,EAAGyE,YAAczC,GAK/BuC,KACF,SAASZ,KAAc3M,KAAKmM,WAAY,IACxCnM,KAAKmM,UAAUQ,GAAc3B,GAExBuC,CACT,CAOAG,YAAYzC,GACVjL,KAAKuM,oBAAoBtB,GACzBjL,KAAKgC,SACP,CAOAuK,oBAAoBtB,GAClB,MAAM0C,EAAU,GACVC,EAAc,GACdC,EAAmB,GAEzB,IAAK,IAAIC,EAAI,EAAGC,EAAS9C,EAAS8C,OAAQD,EAAIC,EAAQD,IAAK,CACzD,MAAM9C,EAAUC,EAAS6C,GACnBnB,GAAa,QAAO3B,GACtBhL,KAAK4M,YAAYD,EAAY3B,IAC/B4C,EAAYI,KAAKhD,EAErB,CAEA,IAAK,IAAI8C,EAAI,EAAGC,EAASH,EAAYG,OAAQD,EAAIC,EAAQD,IAAK,CAC5D,MAAM9C,EAAU4C,EAAYE,GACtBnB,GAAa,QAAO3B,GAC1BhL,KAAK8M,mBAAmBH,EAAY3B,GAEpC,MAAM+B,EAAW/B,EAAQgC,cACzB,GAAID,EAAU,CACZ,MAAME,EAASF,EAASG,YACxBS,EAAQK,KAAKf,GACbY,EAAiBG,KAAKhD,EACxB,MACEhL,KAAKiM,sBAAsBU,GAAc3B,CAE7C,CAKA,GAJIhL,KAAK8L,gBACP9L,KAAK8L,eAAemC,KAAKN,EAASE,GAGhC7N,KAAKkO,YAAY,IAAgBd,YACnC,IAAK,IAAIU,EAAI,EAAGC,EAASH,EAAYG,OAAQD,EAAIC,EAAQD,IACvD9N,KAAKgI,cACH,IAAI+C,EAAkB,IAAgBqC,WAAYQ,EAAYE,IAItE,CAMAtB,wBAAwBX,GACtB,IAAIsC,GAAsB,EAC1BnO,KAAK0J,iBACH,IAAgB0D,YAIhB,SAAUgB,GACHD,IACHA,GAAsB,EACtBtC,EAAWmC,KAAKI,EAAIpD,SACpBmD,GAAsB,EAE1B,IAEFnO,KAAK0J,iBACH,IAAgB2E,eAIhB,SAAUD,GACHD,IACHA,GAAsB,EACtBtC,EAAWgB,OAAOuB,EAAIpD,SACtBmD,GAAsB,EAE1B,IAEFtC,EAAWnC,iBACT,IAAoB4E,KAInBF,IACMD,IACHA,GAAsB,EACtBnO,KAAKyM,WAAW2B,EAAIG,SACpBJ,GAAsB,EACxB,IAGJtC,EAAWnC,iBACT,IAAoB8E,QAInBJ,IACMD,IACHA,GAAsB,EACtBnO,KAAKyO,cAAcL,EAAIG,SACvBJ,GAAsB,EACxB,IAGJnO,KAAKqM,oBAAsBR,CAC7B,CAOA/F,MAAM4I,GACJ,GAAIA,EAAM,CACR,IAAK,MAAMC,KAAa3O,KAAKoM,mBAAoB,CAC/C,MAAMwC,EAAO5O,KAAKoM,mBAAmBuC,GACrCC,EAAKC,QAAQ,KACf,CACK7O,KAAKqM,sBACRrM,KAAKoM,mBAAqB,CAAC,EAC3BpM,KAAKkM,SAAW,CAAC,EACjBlM,KAAKmM,UAAY,CAAC,EAEtB,MACE,GAAInM,KAAK8L,eAAgB,CACvB,MAAMgD,EAAyB9D,IAC7BhL,KAAK+O,sBAAsB/D,EAAQ,EAErChL,KAAK8L,eAAe+C,QAAQC,GAC5B,IAAK,MAAM9F,KAAMhJ,KAAKiM,sBACpBjM,KAAK+O,sBAAsB/O,KAAKiM,sBAAsBjD,GAE1D,CAEEhJ,KAAKqM,qBACPrM,KAAKqM,oBAAoBvG,QAGvB9F,KAAK8L,gBACP9L,KAAK8L,eAAehG,QAEtB9F,KAAKiM,sBAAwB,CAAC,EAE9B,MAAM+C,EAAa,IAAIjE,EAAkB,IAAgBkE,OACzDjP,KAAKgI,cAAcgH,GACnBhP,KAAKgC,SACP,CAcAkN,eAAehL,GACb,GAAIlE,KAAK8L,eACP,OAAO9L,KAAK8L,eAAe+C,QAAQ3K,GAEjClE,KAAKqM,qBACPrM,KAAKqM,oBAAoBwC,QAAQ3K,EAErC,CAcAiL,iCAAiCC,EAAYlL,GAC3C,MAAM+I,EAAS,CAACmC,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IACxE,OAAOpP,KAAKqP,uBAAuBpC,GAAQ,SAAUjC,GACnD,MAAM+B,EAAW/B,EAAQgC,cACzB,GAAID,EAASuC,qBAAqBF,GAChC,OAAOlL,EAAS8G,EAGpB,GACF,CAqBAqE,uBAAuBpC,EAAQ/I,GAC7B,GAAIlE,KAAK8L,eACP,OAAO9L,KAAK8L,eAAeyD,gBAAgBtC,EAAQ/I,GAEjDlE,KAAKqM,qBACPrM,KAAKqM,oBAAoBwC,QAAQ3K,EAErC,CAiBAsL,iCAAiCvC,EAAQ/I,GACvC,OAAOlE,KAAKqP,uBACVpC,GAKA,SAAUjC,GACR,MAAM+B,EAAW/B,EAAQgC,cACzB,GAAID,EAAS0C,iBAAiBxC,GAAS,CACrC,MAAMyC,EAASxL,EAAS8G,GACxB,GAAI0E,EACF,OAAOA,CAEX,CACF,GAEJ,CASAC,wBACE,OAAO3P,KAAKqM,mBACd,CAQAuD,cACE,IAAI3E,EASJ,OARIjL,KAAKqM,oBACPpB,EAAWjL,KAAKqM,oBAAoBC,WAAWuD,MAAM,GAC5C7P,KAAK8L,iBACdb,EAAWjL,KAAK8L,eAAegE,UAC1B,OAAQ9P,KAAKiM,yBAChB,QAAOhB,EAAU7D,OAAO2I,OAAO/P,KAAKiM,yBAG+B,CAGzE,CAQA+D,wBAAwBZ,GACtB,MAAMnE,EAAW,GAIjB,OAHAjL,KAAKmP,iCAAiCC,GAAY,SAAUpE,GAC1DC,EAAS+C,KAAKhD,EAChB,IACOC,CACT,CAgBAgF,oBAAoBhD,EAAQhN,GAC1B,GAAID,KAAK8L,eAAgB,CACvB,MAAMoE,EAAajQ,GAAcA,EAAWkQ,YAAcnQ,KAAK6B,WAE/D,IAAKqO,EACH,OAAOlQ,KAAK8L,eAAesE,YAAYnD,GAGzC,MAAMU,GAAU,QAAcV,EAAQhN,GAEtC,MAAO,GAAGoQ,UACL1C,EAAQ2C,KAAKC,GAAavQ,KAAK8L,eAAesE,YAAYG,KAEjE,CACA,OAAIvQ,KAAKqM,oBACArM,KAAKqM,oBAAoBC,WAAWuD,MAAM,GAE5C,EACT,CAcAW,8BAA8BpB,EAAYqB,GAQxC,MAAMlM,EAAI6K,EAAW,GACf1K,EAAI0K,EAAW,GACrB,IAAIsB,EAAiB,KACrB,MAAMC,EAAe,CAACC,IAAKA,KAC3B,IAAIC,EAAqBC,IACzB,MAAM7D,EAAS,EAAE6D,KAAWA,IAAUA,IAAUA,KAgChD,OA/BAL,EAASA,GAAkB,KAC3BzQ,KAAK8L,eAAeyD,gBAClBtC,GAIA,SAAUjC,GACR,GAAIyF,EAAOzF,GAAU,CACnB,MAAM+B,EAAW/B,EAAQgC,cACnB+D,EAA6BF,EAOnC,GANAA,EAAqB9D,EAASiE,eAC5BzM,EACAG,EACAiM,EACAE,GAEEA,EAAqBE,EAA4B,CACnDL,EAAiB1F,EAKjB,MAAMiG,EAAcC,KAAKC,KAAKN,GAC9B5D,EAAO,GAAK1I,EAAI0M,EAChBhE,EAAO,GAAKvI,EAAIuM,EAChBhE,EAAO,GAAK1I,EAAI0M,EAChBhE,EAAO,GAAKvI,EAAIuM,CAClB,CACF,CACF,IAEKP,CACT,CAYAxD,UAAUD,GACR,OAAOjN,KAAK8L,eAAeoB,UAAUD,EACvC,CAWAmE,eAAepI,GACb,MAAMgC,EAAUhL,KAAKkM,SAASlD,EAAGyE,YACjC,YAAmBlN,IAAZyK,EAAwBA,EAAU,IAC3C,CAQAqG,gBAAgB3J,GACd,MAAMsD,EAAUhL,KAAKmM,UAAUzE,GAC/B,YAAmBnH,IAAZyK,EAAwBA,EAAU,IAC3C,CAQAsG,YACE,OAAOtR,KAAKoL,OACd,CAKAmG,cACE,OAAOvR,KAAKsL,SACd,CAQAkG,SACE,OAAOxR,KAAKwL,IACd,CAMA6B,qBAAqB5F,GACnB,MAAMuD,EACJvD,EACF,OACMkF,GAAa,QAAO3B,GACpB+B,EAAW/B,EAAQgC,cACzB,GAAKD,EAOE,CACL,MAAME,EAASF,EAASG,YACpBP,KAAc3M,KAAKiM,8BACdjM,KAAKiM,sBAAsBU,GAC9B3M,KAAK8L,gBACP9L,KAAK8L,eAAeqB,OAAOF,EAAQjC,IAGjChL,KAAK8L,gBACP9L,KAAK8L,eAAe2F,OAAOxE,EAAQjC,EAGzC,MAlBQ2B,KAAc3M,KAAKiM,wBACnBjM,KAAK8L,gBACP9L,KAAK8L,eAAee,OAAO7B,GAE7BhL,KAAKiM,sBAAsBU,GAAc3B,GAe7C,MAAMhC,EAAKgC,EAAQwC,QACnB,QAAWjN,IAAPyI,EAAkB,CACpB,MAAM0I,EAAM1I,EAAGyE,WACXzN,KAAKkM,SAASwF,KAAS1G,IACzBhL,KAAK2R,mBAAmB3G,GACxBhL,KAAKkM,SAASwF,GAAO1G,EAEzB,MACEhL,KAAK2R,mBAAmB3G,GACxBhL,KAAKmM,UAAUQ,GAAc3B,EAE/BhL,KAAKgC,UACLhC,KAAKgI,cACH,IAAI+C,EAAkB,IAAgB6G,cAAe5G,GAEzD,CAQA6G,WAAW7G,GACT,MAAMhC,EAAKgC,EAAQwC,QACnB,YAAWjN,IAAPyI,EACKA,KAAMhJ,KAAKkM,UAEb,QAAOlB,KAAYhL,KAAKmM,SACjC,CAKA2F,UACE,OAAI9R,KAAK8L,eAEL9L,KAAK8L,eAAegG,YAAa,OAAQ9R,KAAKiM,wBAG9CjM,KAAKqM,qBACyC,IAAzCrM,KAAKqM,oBAAoB0F,WAGpC,CAOAC,aAAa/E,EAAQgF,EAAYhS,GAC/B,MAAMiS,EAAqBlS,KAAK+L,oBAC1BoG,EAAgBnS,KAAK0L,UAAUuB,EAAQgF,EAAYhS,GACzD,IAAK,IAAI6N,EAAI,EAAGsE,EAAKD,EAAcpE,OAAQD,EAAIsE,IAAMtE,EAAG,CACtD,MAAMuE,EAAeF,EAAcrE,GAC7BwE,EAAgBJ,EAAmB3C,gBACvC8C,GAKA,SAAUE,GACR,OAAO,QAAeA,EAAOtF,OAAQoF,EACvC,IAEGC,MACDtS,KAAKgM,qBACPhM,KAAKgI,cACH,IAAI+C,EAAkB,IAAgByH,oBAExCxS,KAAKmL,QAAQsH,KACXzS,KACAqS,EACAJ,EACAhS,GACCgL,MACGjL,KAAKgM,qBACPhM,KAAKgI,cACH,IAAI+C,EACF,IAAgB2H,qBAChBnS,EACA0K,GAEH,IAEH,OACIjL,KAAKgM,qBACPhM,KAAKgI,cACH,IAAI+C,EAAkB,IAAgB4H,mBACvC,IAGLT,EAAmB/E,OAAOkF,EAAc,CAACpF,OAAQoF,EAAaxC,UAElE,CACA7P,KAAKS,UACHT,KAAKmL,QAAQ4C,OAAS,IAAY/N,KAAKgM,qBAAuB,CAClE,CAEAjK,UACE/B,KAAK8F,OAAM,GACX9F,KAAK+L,oBAAoBjG,QACzB/F,MAAMgC,SACR,CAOA6Q,mBAAmB3F,GACjB,MAAMiF,EAAqBlS,KAAK+L,oBAChC,IAAI8G,EACJX,EAAmB3C,gBAAgBtC,GAAQ,SAAUsF,GACnD,IAAI,QAAOA,EAAOtF,OAAQA,GAExB,OADA4F,EAAMN,GACC,CAEX,IACIM,GACFX,EAAmBrF,OAAOgG,EAE9B,CASApE,cAAczD,GACZ,IAAKA,EACH,OAEF,MAAM2B,GAAa,QAAO3B,GACtB2B,KAAc3M,KAAKiM,6BACdjM,KAAKiM,sBAAsBU,GAE9B3M,KAAK8L,gBACP9L,KAAK8L,eAAee,OAAO7B,GAG/B,MAAM0E,EAAS1P,KAAK+O,sBAAsB/D,GACtC0E,GACF1P,KAAKgC,SAET,CASA+M,sBAAsB/D,GACpB,MAAM2B,GAAa,QAAO3B,GACpB8H,EAAoB9S,KAAKoM,mBAAmBO,GAClD,IAAKmG,EACH,OAEFA,EAAkBjE,QAAQ,aACnB7O,KAAKoM,mBAAmBO,GAC/B,MAAM3D,EAAKgC,EAAQwC,QAQnB,YAPWjN,IAAPyI,UACKhJ,KAAKkM,SAASlD,EAAGyE,mBAEnBzN,KAAKmM,UAAUQ,GACtB3M,KAAKgI,cACH,IAAI+C,EAAkB,IAAgBsD,cAAerD,IAEhDA,CACT,CASA2G,mBAAmB3G,GACjB,IAAI+H,GAAU,EACd,IAAK,MAAM/J,KAAMhJ,KAAKkM,SACpB,GAAIlM,KAAKkM,SAASlD,KAAQgC,EAAS,QAC1BhL,KAAKkM,SAASlD,GACrB+J,GAAU,EACV,KACF,CAEF,OAAOA,CACT,CAQAC,UAAUvH,GACRzL,KAAKmL,QAAUM,CACjB,CAOAzE,OAAOD,IACL,OAAO/G,KAAKoL,QAAS,GACrBpL,KAAKwL,KAAOzE,EACZ/G,KAAKgT,WAAU,QAAIjM,EAAK/G,KAAKoL,SAC/B,EAGF,S,mCC/lCA,SAMEgC,WAAY,aAOZwE,cAAe,gBAOf3C,MAAO,QAQPZ,cAAe,gBAOfmE,kBAAmB,oBAOnBE,gBAAiB,kBAOjBC,kBAAmB,oB,6DCgBrB,MAAMM,UAAY,IAIhBpT,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAEtB,MAAMG,OACmBM,IAAvBT,EAAQG,WAA2BH,EAAQG,WAAa,YAEpD8C,OACiBxC,IAArBT,EAAQiD,SACJjD,EAAQiD,UACR,QAAU,CACRkK,QAAQ,QAAqBhN,GAC7BiT,cAAepT,EAAQoT,cACvBC,QAASrT,EAAQqT,QACjBC,QAAStT,EAAQsT,QACjBpQ,SAAUlD,EAAQkD,WAG1BjD,MAAM,CACJM,aAAcP,EAAQO,aACtB+C,UAAWtD,EAAQsD,UACnBmF,YAAazI,EAAQyI,YACrBxH,YAAajB,EAAQiB,YACrB6B,OAAQ9C,EAAQ8C,OAChB3C,WAAYA,EACZ4I,2BAA4B/I,EAAQ+I,2BACpC9F,SAAUA,EACV6D,iBAAkB9G,EAAQ8G,iBAC1B9D,eAAgBhD,EAAQgD,eACxB4D,gBAAiB5G,EAAQ4G,gBACzBK,IAAKjH,EAAQiH,IACbF,KAAM/G,EAAQ+G,KACdhG,WAAyBN,IAAlBT,EAAQe,OAAsBf,EAAQe,MAC7C4C,WAAY3D,EAAQ2D,WACpBjD,wBAAyBV,EAAQU,wBACjCkD,WAAY5D,EAAQ4D,aAOtB1D,KAAKqT,aAA6B9S,IAAnBT,EAAQwT,OAAuBxT,EAAQwT,OAAS,CACjE,CAKArK,YACE,OAAOjJ,KAAKqT,OACd,EAGF,S,kDCzGA,MAAME,EAIJ1T,YAAYoG,GAMVjG,KAAKiG,mBAAkC1F,IAAlB0F,EAA8BA,EAAgB,KAMnEjG,KAAKwT,OAAS,EAMdxT,KAAKyT,SAAW,CAAC,EAMjBzT,KAAK0T,QAAU,KAMf1T,KAAK2T,QAAU,IACjB,CAKAhQ,iBACE,OAAO3D,KAAKiG,cAAgB,GAAKjG,KAAK4T,WAAa5T,KAAKiG,aAC1D,CAMArC,YAAYiQ,GACV,MAAO7T,KAAK2D,iBACV3D,KAAK8T,KAET,CAKAhO,QACE9F,KAAKwT,OAAS,EACdxT,KAAKyT,SAAW,CAAC,EACjBzT,KAAK0T,QAAU,KACf1T,KAAK2T,QAAU,IACjB,CAMA9O,YAAYtB,GACV,OAAOvD,KAAKyT,SAASM,eAAexQ,EACtC,CAQAsL,QAAQmF,GACN,IAAIC,EAAQjU,KAAK0T,QACjB,MAAOO,EACLD,EAAEC,EAAMC,OAAQD,EAAM3Q,KAAMtD,MAC5BiU,EAAQA,EAAME,KAElB,CAOAjU,IAAIqD,EAAKzD,GACP,MAAMmU,EAAQjU,KAAKyT,SAASlQ,GAE5B,OADA,YAAiBhD,IAAV0T,EAAqB,IACxBA,IAAUjU,KAAK2T,UAGfM,IAAUjU,KAAK0T,SACjB1T,KAAK0T,QAAgC1T,KAAK0T,QAAa,MACvD1T,KAAK0T,QAAQU,MAAQ,OAErBH,EAAME,MAAMC,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMD,MAAQF,EAAME,OAE5BF,EAAME,MAAQ,KACdF,EAAMG,MAAQpU,KAAK2T,QACnB3T,KAAK2T,QAAQQ,MAAQF,EACrBjU,KAAK2T,QAAUM,GAZNA,EAAMC,MAcjB,CAOArH,OAAOtJ,GACL,MAAM0Q,EAAQjU,KAAKyT,SAASlQ,GAkB5B,OAjBA,YAAiBhD,IAAV0T,EAAqB,IACxBA,IAAUjU,KAAK2T,SACjB3T,KAAK2T,QAAgCM,EAAW,MAC5CjU,KAAK2T,UACP3T,KAAK2T,QAAQQ,MAAQ,OAEdF,IAAUjU,KAAK0T,SACxB1T,KAAK0T,QAAgCO,EAAW,MAC5CjU,KAAK0T,UACP1T,KAAK0T,QAAQU,MAAQ,QAGvBH,EAAME,MAAMC,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMD,MAAQF,EAAME,cAErBnU,KAAKyT,SAASlQ,KACnBvD,KAAKwT,OACAS,EAAMC,MACf,CAKAN,WACE,OAAO5T,KAAKwT,MACd,CAKAa,UACE,MAAMzF,EAAO,IAAIxM,MAAMpC,KAAKwT,QAC5B,IACIS,EADAnG,EAAI,EAER,IAAKmG,EAAQjU,KAAK2T,QAASM,EAAOA,EAAQA,EAAMG,MAC9CxF,EAAKd,KAAOmG,EAAM3Q,KAEpB,OAAOsL,CACT,CAKA0F,YACE,MAAMvE,EAAS,IAAI3N,MAAMpC,KAAKwT,QAC9B,IACIS,EADAnG,EAAI,EAER,IAAKmG,EAAQjU,KAAK2T,QAASM,EAAOA,EAAQA,EAAMG,MAC9CrE,EAAOjC,KAAOmG,EAAMC,OAEtB,OAAOnE,CACT,CAKAwE,WACE,OAAOvU,KAAK0T,QAAQQ,MACtB,CAKAM,cACE,OAAOxU,KAAK0T,QAAQpQ,IACtB,CAMAmR,eACE,OAAOzU,KAAK2T,QAAQrQ,IACtB,CAOAoR,KAAKnR,GACH,GAAKvD,KAAK6E,YAAYtB,GAGtB,OAAOvD,KAAKyT,SAASlQ,GAAK2Q,MAC5B,CAKAJ,MACE,MAAMG,EAAQjU,KAAK0T,QAUnB,cATO1T,KAAKyT,SAASQ,EAAM3Q,MACvB2Q,EAAME,QACRF,EAAME,MAAMC,MAAQ,MAEtBpU,KAAK0T,QAAgCO,EAAW,MAC3CjU,KAAK0T,UACR1T,KAAK2T,QAAU,QAEf3T,KAAKwT,OACAS,EAAMC,MACf,CAMA7J,QAAQ9G,EAAKoR,GACX3U,KAAKE,IAAIqD,GACTvD,KAAKyT,SAASlQ,GAAK2Q,OAASS,CAC9B,CAMArK,IAAI/G,EAAKoR,IACP,SAASpR,KAAOvD,KAAKyT,UAAW,IAChC,MAAMQ,EAAQ,CACZ3Q,KAAMC,EACN4Q,MAAO,KACPC,MAAOpU,KAAK2T,QACZO,OAAQS,GAEL3U,KAAK2T,QAGR3T,KAAK2T,QAAQQ,MAAQF,EAFrBjU,KAAK0T,QAAUO,EAIjBjU,KAAK2T,QAAUM,EACfjU,KAAKyT,SAASlQ,GAAO0Q,IACnBjU,KAAKwT,MACT,CAOAoB,QAAQC,GACN7U,KAAKiG,cAAgB4O,CACvB,EAGF,S,qECrRO,MAAMC,EAAOhE,IAcpB,MAAMiE,EAKJlV,YAAYmV,EAAkBC,GAK5BjV,KAAKkV,kBAAoBF,EAMzBhV,KAAKmV,aAAeF,EAMpBjV,KAAKoV,UAAY,GAMjBpV,KAAKqV,YAAc,GAMnBrV,KAAKsV,gBAAkB,CAAC,CAC1B,CAKAxP,QACE9F,KAAKoV,UAAUrH,OAAS,EACxB/N,KAAKqV,YAAYtH,OAAS,GAC1B,OAAM/N,KAAKsV,gBACb,CAMAC,UACE,MAAMC,EAAWxV,KAAKoV,UAChBK,EAAazV,KAAKqV,YAClB9G,EAAUiH,EAAS,GACF,GAAnBA,EAASzH,QACXyH,EAASzH,OAAS,EAClB0H,EAAW1H,OAAS,IAEpByH,EAAS,GAAKA,EAAS1B,MACvB2B,EAAW,GAAKA,EAAW3B,MAC3B9T,KAAK0V,QAAQ,IAEf,MAAMC,EAAa3V,KAAKmV,aAAa5G,GAErC,cADOvO,KAAKsV,gBAAgBK,GACrBpH,CACT,CAOAqH,QAAQrH,IACN,SAASvO,KAAKmV,aAAa5G,KAAYvO,KAAKsV,iBAAkB,IAC9D,MAAMO,EAAW7V,KAAKkV,kBAAkB3G,GACxC,OAAIsH,GAAYf,IACd9U,KAAKoV,UAAUpH,KAAKO,GACpBvO,KAAKqV,YAAYrH,KAAK6H,GACtB7V,KAAKsV,gBAAgBtV,KAAKmV,aAAa5G,KAAY,EACnDvO,KAAK8V,UAAU,EAAG9V,KAAKoV,UAAUrH,OAAS,IACnC,EAGX,CAKA6F,WACE,OAAO5T,KAAKoV,UAAUrH,MACxB,CAQAgI,mBAAmBC,GACjB,OAAe,EAARA,EAAY,CACrB,CAQAC,oBAAoBD,GAClB,OAAe,EAARA,EAAY,CACrB,CAQAE,gBAAgBF,GACd,OAAQA,EAAQ,GAAM,CACxB,CAMAG,WACE,IAAIrI,EACJ,IAAKA,GAAK9N,KAAKoV,UAAUrH,QAAU,GAAK,EAAGD,GAAK,EAAGA,IACjD9N,KAAK0V,QAAQ5H,EAEjB,CAKAgE,UACE,OAAiC,IAA1B9R,KAAKoV,UAAUrH,MACxB,CAMAqI,YAAY7S,GACV,OAAOA,KAAOvD,KAAKsV,eACrB,CAMAe,SAAS9H,GACP,OAAOvO,KAAKoW,YAAYpW,KAAKmV,aAAa5G,GAC5C,CAMAmH,QAAQM,GACN,MAAMR,EAAWxV,KAAKoV,UAChBK,EAAazV,KAAKqV,YAClBiB,EAAQd,EAASzH,OACjBQ,EAAUiH,EAASQ,GACnBH,EAAWJ,EAAWO,GACtBO,EAAaP,EAEnB,MAAOA,EAAQM,GAAS,EAAG,CACzB,MAAME,EAASxW,KAAK+V,mBAAmBC,GACjCS,EAASzW,KAAKiW,oBAAoBD,GAElCU,EACJD,EAASH,GAASb,EAAWgB,GAAUhB,EAAWe,GAC9CC,EACAD,EAENhB,EAASQ,GAASR,EAASkB,GAC3BjB,EAAWO,GAASP,EAAWiB,GAC/BV,EAAQU,CACV,CAEAlB,EAASQ,GAASzH,EAClBkH,EAAWO,GAASH,EACpB7V,KAAK8V,UAAUS,EAAYP,EAC7B,CAOAF,UAAUS,EAAYP,GACpB,MAAMR,EAAWxV,KAAKoV,UAChBK,EAAazV,KAAKqV,YAClB9G,EAAUiH,EAASQ,GACnBH,EAAWJ,EAAWO,GAE5B,MAAOA,EAAQO,EAAY,CACzB,MAAMI,EAAc3W,KAAKkW,gBAAgBF,GACzC,KAAIP,EAAWkB,GAAed,GAK5B,MAJAL,EAASQ,GAASR,EAASmB,GAC3BlB,EAAWO,GAASP,EAAWkB,GAC/BX,EAAQW,CAIZ,CACAnB,EAASQ,GAASzH,EAClBkH,EAAWO,GAASH,CACtB,CAKAe,eACE,MAAM5B,EAAmBhV,KAAKkV,kBACxBM,EAAWxV,KAAKoV,UAChBK,EAAazV,KAAKqV,YACxB,IAAIW,EAAQ,EACZ,MAAMa,EAAIrB,EAASzH,OACnB,IAAIQ,EAAST,EAAG+H,EAChB,IAAK/H,EAAI,EAAGA,EAAI+I,IAAK/I,EACnBS,EAAUiH,EAAS1H,GACnB+H,EAAWb,EAAiBzG,GACxBsH,GAAYf,SACP9U,KAAKsV,gBAAgBtV,KAAKmV,aAAa5G,KAE9CkH,EAAWO,GAASH,EACpBL,EAASQ,KAAWzH,GAGxBiH,EAASzH,OAASiI,EAClBP,EAAW1H,OAASiI,EACpBhW,KAAKmW,UACP,EAGF,S,mFC7OA,MAAMW,EAIJjX,YAAYkX,GAIV/W,KAAKgX,OAAS,IAAI,EAAOD,GAQzB/W,KAAKiX,OAAS,CAAC,CACjB,CAOA9J,OAAOF,EAAQ0H,GAEb,MAAMuC,EAAO,CACX1S,KAAMyI,EAAO,GACbtI,KAAMsI,EAAO,GACbxI,KAAMwI,EAAO,GACbrI,KAAMqI,EAAO,GACb0H,MAAOA,GAGT3U,KAAKgX,OAAO7J,OAAO+J,GACnBlX,KAAKiX,QAAO,QAAOtC,IAAUuC,CAC/B,CAOAjJ,KAAKN,EAASoC,GACZ,MAAMoH,EAAQ,IAAI/U,MAAM2N,EAAOhC,QAC/B,IAAK,IAAID,EAAI,EAAGsJ,EAAIrH,EAAOhC,OAAQD,EAAIsJ,EAAGtJ,IAAK,CAC7C,MAAMb,EAASU,EAAQG,GACjB6G,EAAQ5E,EAAOjC,GAGfoJ,EAAO,CACX1S,KAAMyI,EAAO,GACbtI,KAAMsI,EAAO,GACbxI,KAAMwI,EAAO,GACbrI,KAAMqI,EAAO,GACb0H,MAAOA,GAETwC,EAAMrJ,GAAKoJ,EACXlX,KAAKiX,QAAO,QAAOtC,IAAUuC,CAC/B,CACAlX,KAAKgX,OAAO/I,KAAKkJ,EACnB,CAOAtK,OAAO8H,GACL,MAAMjN,GAAM,QAAOiN,GAIbuC,EAAOlX,KAAKiX,OAAOvP,GAEzB,cADO1H,KAAKiX,OAAOvP,GACiB,OAA7B1H,KAAKgX,OAAOnK,OAAOqK,EAC5B,CAOAzF,OAAOxE,EAAQ0H,GACb,MAAMuC,EAAOlX,KAAKiX,QAAO,QAAOtC,IAC1B0C,EAAO,CAACH,EAAK1S,KAAM0S,EAAKvS,KAAMuS,EAAKzS,KAAMyS,EAAKtS,OAC/C,QAAOyS,EAAMpK,KAChBjN,KAAK6M,OAAO8H,GACZ3U,KAAKmN,OAAOF,EAAQ0H,GAExB,CAMA7E,SACE,MAAMqH,EAAQnX,KAAKgX,OAAOM,MAC1B,OAAOH,EAAM7G,KAAI,SAAU4G,GACzB,OAAOA,EAAKvC,KACd,GACF,CAOAvE,YAAYnD,GAEV,MAAMoK,EAAO,CACX7S,KAAMyI,EAAO,GACbtI,KAAMsI,EAAO,GACbxI,KAAMwI,EAAO,GACbrI,KAAMqI,EAAO,IAETkK,EAAQnX,KAAKgX,OAAOO,OAAOF,GACjC,OAAOF,EAAM7G,KAAI,SAAU4G,GACzB,OAAOA,EAAKvC,KACd,GACF,CASA9F,QAAQ3K,GACN,OAAOlE,KAAKwX,SAASxX,KAAK8P,SAAU5L,EACtC,CAQAqL,gBAAgBtC,EAAQ/I,GACtB,OAAOlE,KAAKwX,SAASxX,KAAKoQ,YAAYnD,GAAS/I,EACjD,CAQAsT,SAASzH,EAAQ7L,GACf,IAAIwL,EACJ,IAAK,IAAI5B,EAAI,EAAGsJ,EAAIrH,EAAOhC,OAAQD,EAAIsJ,EAAGtJ,IAExC,GADA4B,EAASxL,EAAS6L,EAAOjC,IACrB4B,EACF,OAAOA,EAGX,OAAOA,CACT,CAKAoC,UACE,OAAO,OAAQ9R,KAAKiX,OACtB,CAKAnR,QACE9F,KAAKgX,OAAOlR,QACZ9F,KAAKiX,OAAS,CAAC,CACjB,CAMA/J,UAAUD,GACR,MAAMwK,EAAOzX,KAAKgX,OAAOU,SACzB,OAAO,QAAeD,EAAKjT,KAAMiT,EAAK9S,KAAM8S,EAAKhT,KAAMgT,EAAK7S,KAAMqI,EACpE,CAKAoD,OAAOsH,GACL3X,KAAKgX,OAAO/I,KAAK0J,EAAMX,OAAOM,OAC9B,IAAK,MAAMxJ,KAAK6J,EAAMV,OACpBjX,KAAKiX,OAAOnJ,GAAK6J,EAAMV,OAAOnJ,EAElC,EAGF,S,kDCjMA,MAAM8J,UAAoB,IAIxB/X,YAAYC,GACVA,EAAUA,GAAoB,CAAC+X,OAAQ,GAEvC9X,MAAM,CACJ+X,OAAQhH,IACRiH,KAAMjY,EAAQiY,KACdF,OAAQ/X,EAAQ+X,OAChBG,OAAQlY,EAAQkY,OAChBC,WAAyB1X,IAAlBT,EAAQmY,MAAsBnY,EAAQmY,MAAQ,EACrDC,cAA+B3X,IAArBT,EAAQoY,SAAyBpY,EAAQoY,SAAW,EAC9DC,oBAC6B5X,IAA3BT,EAAQqY,gBAA+BrY,EAAQqY,eACjDC,kBAC2B7X,IAAzBT,EAAQsY,aAA6BtY,EAAQsY,aAAe,CAAC,EAAG,GAClEC,cAAevY,EAAQuY,eAE3B,CAOAC,QACE,MAAML,EAAQjY,KAAKuY,WACbC,EAAQ,IAAIZ,EAAY,CAC5BG,KAAM/X,KAAKyY,UAAYzY,KAAKyY,UAAUH,aAAU/X,EAChDyX,OAAQhY,KAAK0Y,YAAc1Y,KAAK0Y,YAAYJ,aAAU/X,EACtDsX,OAAQ7X,KAAK2Y,YACbV,MAAO7V,MAAMC,QAAQ4V,GAASA,EAAMpI,QAAUoI,EAC9CC,SAAUlY,KAAK4Y,cACfT,eAAgBnY,KAAK6Y,oBACrBT,aAAcpY,KAAK8Y,kBAAkBjJ,QACrCwI,cAAerY,KAAK+Y,qBAGtB,OADAP,EAAMQ,WAAWhZ,KAAKiZ,cACfT,CACT,CAQAU,UAAUrB,GACR7X,KAAKmZ,QAAUtB,EACf7X,KAAKwK,QACP,EAGF,S,mCCjEA,MAAM4O,EAIJvZ,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBE,KAAKqZ,YAA2B9Y,IAAlBT,EAAQwZ,MAAsBxZ,EAAQwZ,MAAQ,IAC9D,CAOAhB,QACE,MAAMgB,EAAQtZ,KAAKuZ,WACnB,OAAO,IAAIH,EAAK,CACdE,MAAOlX,MAAMC,QAAQiX,GAASA,EAAMzJ,QAAUyJ,QAAS/Y,GAE3D,CAOAgZ,WACE,OAAOvZ,KAAKqZ,MACd,CAQAG,SAASF,GACPtZ,KAAKqZ,OAASC,CAChB,EAGF,S,qJC/CA,IAAIG,EAAqB,KAEzB,MAAMC,UAAkB,IAStB7Z,YAAY8Z,EAAO9O,EAAKgK,EAAMtM,EAAaqR,EAAYN,GACrDvZ,QAMAC,KAAK6Z,mBAAqB,KAM1B7Z,KAAK8Z,OAASH,EAMd3Z,KAAK+Z,aAAexR,EAMpBvI,KAAKga,QAAU,CAAC,EAMhBha,KAAKqZ,OAASC,EAMdtZ,KAAKia,UAAY,KAMjBja,KAAKka,YAAcN,EAMnB5Z,KAAKma,MAAQtF,EAMb7U,KAAKoa,KAAOvP,EAKZ7K,KAAKqa,QACP,CAKAC,mBACEta,KAAK8Z,OAAS,IAAIS,MACQ,OAAtBva,KAAK+Z,eACP/Z,KAAK8Z,OAAOvR,YAAcvI,KAAK+Z,aAEnC,CAMAS,aACE,QAAsBja,IAAlBP,KAAKqa,UAA0Bra,KAAKka,cAAgBO,EAAA,EAAW3V,OAAQ,CACpE2U,IACHA,GAAqB,QAAsB,EAAG,OAAGlZ,EAAW,CAC1Dma,oBAAoB,KAGxBjB,EAAmBkB,UAAU3a,KAAK8Z,OAAQ,EAAG,GAC7C,IACEL,EAAmBmB,aAAa,EAAG,EAAG,EAAG,GACzC5a,KAAKqa,UAAW,CAClB,CAAE,MAAOQ,GACPpB,EAAqB,KACrBzZ,KAAKqa,UAAW,CAClB,CACF,CACA,OAAyB,IAAlBra,KAAKqa,QACd,CAKAS,uBACE9a,KAAKgI,cAAc2B,EAAA,EAAUC,OAC/B,CAKAmR,oBACE/a,KAAKka,YAAcO,EAAA,EAAW1S,MAC9B/H,KAAKgb,iBACLhb,KAAK8a,sBACP,CAKAG,mBACEjb,KAAKka,YAAcO,EAAA,EAAW3V,OAC1B9E,KAAKma,OACPna,KAAK8Z,OAAOoB,MAAQlb,KAAKma,MAAM,GAC/Bna,KAAK8Z,OAAOqB,OAASnb,KAAKma,MAAM,IAEhCna,KAAKma,MAAQ,CAACna,KAAK8Z,OAAOoB,MAAOlb,KAAK8Z,OAAOqB,QAE/Cnb,KAAKgb,iBACLhb,KAAK8a,sBACP,CAMAhQ,SAASzF,GAKP,OAJKrF,KAAK8Z,QACR9Z,KAAKsa,mBAEPta,KAAKob,cAAc/V,GACZrF,KAAKga,QAAQ3U,GAAcrF,KAAKga,QAAQ3U,GAAcrF,KAAK8Z,MACpE,CAMAuB,cAAchW,GAEZ,OADArF,KAAKob,cAAc/V,GACZrF,KAAKga,QAAQ3U,GAAcA,EAAa,CACjD,CAKAiW,gBACE,OAAOtb,KAAKka,WACd,CAKAqB,uBAIE,GAHKvb,KAAK8Z,QACR9Z,KAAKsa,oBAEFta,KAAK6Z,mBACR,GAAI7Z,KAAKwa,aAAc,CACrB,MAAMU,EAAQlb,KAAKma,MAAM,GACnBgB,EAASnb,KAAKma,MAAM,GACpBqB,GAAU,QAAsBN,EAAOC,GAC7CK,EAAQC,SAAS,EAAG,EAAGP,EAAOC,GAC9Bnb,KAAK6Z,mBAAqB2B,EAAQE,MACpC,MACE1b,KAAK6Z,mBAAqB7Z,KAAK8Z,OAGnC,OAAO9Z,KAAK6Z,kBACd,CAMA8B,UACE,OAAO3b,KAAKma,KACd,CAKAyB,SACE,OAAO5b,KAAKoa,IACd,CAKAnM,OACE,GAAIjO,KAAKka,cAAgBO,EAAA,EAAWjR,KAApC,CAGKxJ,KAAK8Z,QACR9Z,KAAKsa,mBAGPta,KAAKka,YAAcO,EAAA,EAAW5S,QAC9B,IACmC7H,KAAW,OAAE6K,IAAM7K,KAAKoa,IAC3D,CAAE,MAAOS,GACP7a,KAAK+a,mBACP,CACA/a,KAAKia,WAAY,OACfja,KAAK8Z,OACL9Z,KAAKib,iBAAiB3T,KAAKtH,MAC3BA,KAAK+a,kBAAkBzT,KAAKtH,MAd9B,CAgBF,CAMAob,cAAc/V,GACZ,IACGrF,KAAKqZ,QACNrZ,KAAKga,QAAQ3U,IACbrF,KAAKka,cAAgBO,EAAA,EAAW3V,OAEhC,OAGF,MAAM6U,EAAQ3Z,KAAK8Z,OACb4B,EAASG,SAASC,cAAc,UACtCJ,EAAOR,MAAQhK,KAAK6K,KAAKpC,EAAMuB,MAAQ7V,GACvCqW,EAAOP,OAASjK,KAAK6K,KAAKpC,EAAMwB,OAAS9V,GAEzC,MAAM2W,EAAMN,EAAOO,WAAW,MAC9BD,EAAI/D,MAAM5S,EAAYA,GACtB2W,EAAIrB,UAAUhB,EAAO,EAAG,GAExBqC,EAAIE,yBAA2B,WAC/BF,EAAIG,WAAY,QAASnc,KAAKqZ,QAC9B2C,EAAIP,SAAS,EAAG,EAAGC,EAAOR,MAAQ7V,EAAYqW,EAAOP,OAAS9V,GAE9D2W,EAAIE,yBAA2B,iBAC/BF,EAAIrB,UAAUhB,EAAO,EAAG,GAExB3Z,KAAKga,QAAQ3U,GAAcqW,CAC7B,CAOAV,iBACMhb,KAAKia,YACPja,KAAKia,YACLja,KAAKia,UAAY,KAErB,EAYK,SAAS/Z,EAAIyZ,EAAO9O,EAAKgK,EAAMtM,EAAaqR,EAAYN,GAC7D,IAAI8C,EAAY,IAAelc,IAAI2K,EAAKtC,EAAa+Q,GAKrD,OAJK8C,IACHA,EAAY,IAAI1C,EAAUC,EAAO9O,EAAKgK,EAAMtM,EAAaqR,EAAYN,GACrE,IAAehP,IAAIO,EAAKtC,EAAa+Q,EAAO8C,IAEvCA,CACT,C,eC3OA,SAASC,EAAenB,EAAOC,EAAQmB,EAAaC,GAClD,YAAoBhc,IAAhB+b,QAA8C/b,IAAjBgc,EACxB,CAACD,EAAcpB,EAAOqB,EAAepB,QAE1B5a,IAAhB+b,EACKA,EAAcpB,OAEF3a,IAAjBgc,EACKA,EAAepB,EAEjB,CACT,CAOA,MAAMqB,UAAa,IAIjB3c,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAKtB,MAAM2c,OAA8Blc,IAApBT,EAAQ2c,QAAwB3c,EAAQ2c,QAAU,EAK5DvE,OAAgC3X,IAArBT,EAAQoY,SAAyBpY,EAAQoY,SAAW,EAK/DD,OAA0B1X,IAAlBT,EAAQmY,MAAsBnY,EAAQmY,MAAQ,EAKtDE,OACuB5X,IAA3BT,EAAQqY,gBAA+BrY,EAAQqY,eAEjDpY,MAAM,CACJ0c,QAASA,EACTvE,SAAUA,EACVD,MAAOA,EACPG,kBAC2B7X,IAAzBT,EAAQsY,aAA6BtY,EAAQsY,aAAe,CAAC,EAAG,GAClED,eAAgBA,EAChBE,cAAevY,EAAQuY,gBAOzBrY,KAAK0c,aAA6Bnc,IAAnBT,EAAQ6c,OAAuB7c,EAAQ6c,OAAS,CAAC,GAAK,IAMrE3c,KAAK4c,kBAAoB,KAMzB5c,KAAK6c,mBACsBtc,IAAzBT,EAAQgd,aAA6Bhd,EAAQgd,aAAe,WAM9D9c,KAAK+c,mBACsBxc,IAAzBT,EAAQkd,aAA6Bld,EAAQkd,aAAe,WAM9Dhd,KAAKid,mBACsB1c,IAAzBT,EAAQod,aAA6Bpd,EAAQod,aAAe,WAM9Dld,KAAK+Z,kBACqBxZ,IAAxBT,EAAQyI,YAA4BzI,EAAQyI,YAAc,KAK5D,MAAMoR,OAAwBpZ,IAAhBT,EAAQqd,IAAoBrd,EAAQqd,IAAM,KAMxDnd,KAAKod,SAAWtd,EAAQud,QAKxB,IAAIxS,EAAM/K,EAAQ+K,KAElB,cAAiBtK,IAARsK,GAAqB8O,GAAQ,IACtC,QAAQA,GAAUA,GAAS3Z,KAAKod,SAAW,QAE9B7c,IAARsK,GAAoC,IAAfA,EAAIkD,SAAiB4L,IAC7C9O,EAAsC,EAAQA,MAAO,QAAO8O,KAE9D,YAAepZ,IAARsK,GAAqBA,EAAIkD,OAAS,EAAG,IAG5C,eAEuBxN,IAAlBT,EAAQob,YAA0C3a,IAAnBT,EAAQqb,cACtB5a,IAAlBT,EAAQmY,OAEV,IAMF,MAAM2B,OACYrZ,IAAhBT,EAAQ+K,IAAoB4P,EAAA,EAAWjR,KAAOiR,EAAA,EAAW3V,OAgD3D,GA1CA9E,KAAKqZ,YAA2B9Y,IAAlBT,EAAQwZ,OAAsB,QAAQxZ,EAAQwZ,OAAS,KAMrEtZ,KAAKsd,WAAapd,EAChByZ,EACsB,OACJpZ,IAAlBP,KAAKod,SAAyBpd,KAAKod,SAAW,KAC9Cpd,KAAK+Z,aACLH,EACA5Z,KAAKqZ,QAOPrZ,KAAKud,aAA6Bhd,IAAnBT,EAAQ0d,OAAuB1d,EAAQ0d,OAAS,CAAC,EAAG,GAKnExd,KAAKyd,mBACsBld,IAAzBT,EAAQ4d,aAA6B5d,EAAQ4d,aAAe,WAM9D1d,KAAK2d,QAAU,KAMf3d,KAAKma,WAAyB5Z,IAAjBT,EAAQ+U,KAAqB/U,EAAQ+U,KAAO,UAKnCtU,IAAlBT,EAAQob,YAA0C3a,IAAnBT,EAAQqb,OAAsB,CAC/D,IAAID,EAAOC,EACX,GAAIrb,EAAQ+U,MACTqG,EAAOC,GAAUrb,EAAQ+U,SACrB,CACL,MAAM8E,EAAQ3Z,KAAK8K,SAAS,GAC5B,KACE6O,aAAiBiE,mBAChBjE,EAAM9O,KAAO8O,EAAMkE,UAIf,CACL7d,KAAK8d,gBAAkBhe,EACvB,MAAMie,EAAS,KAEb,GADA/d,KAAKge,oBAAoBD,IACpB/d,KAAK8d,gBACR,OAEF,MAAMG,EAAYje,KAAKsd,WAAW3B,UAClC3b,KAAKke,SACH7B,EACE4B,EAAU,GACVA,EAAU,GACVne,EAAQob,MACRpb,EAAQqb,QAEX,EAGH,YADAnb,KAAKme,kBAAkBJ,EAEzB,CArBE7C,EAAQvB,EAAMuB,MACdC,EAASxB,EAAMwB,MAqBnB,MACc5a,IAAV2a,GACFlb,KAAKke,SACH7B,EAAenB,EAAOC,EAAQrb,EAAQob,MAAOpb,EAAQqb,QAG3D,CACF,CAOA7C,QACE,IAAIL,EAAOiD,EAAOC,EACdnb,KAAK8d,iBACP5C,EAAQlb,KAAK8d,gBAAgB5C,MAC7BC,EAASnb,KAAK8d,gBAAgB3C,SAE9BlD,EAAQjY,KAAKuY,WACbN,EAAQ7V,MAAMC,QAAQ4V,GAASA,EAAMpI,QAAUoI,GAEjD,MAAMK,EAAQ,IAAIkE,EAAK,CACrBG,OAAQ3c,KAAK0c,QAAQ7M,QACrBiN,aAAc9c,KAAK6c,cACnBG,aAAchd,KAAK+c,cACnBG,aAAcld,KAAKid,cACnB3D,MACEtZ,KAAKqZ,QAAUrZ,KAAKqZ,OAAOxJ,MACvB7P,KAAKqZ,OAAOxJ,QACZ7P,KAAKqZ,aAAU9Y,EACrBgI,YAAavI,KAAK+Z,aAClBsD,QAASrd,KAAKod,SACdI,OAAQxd,KAAKud,QAAQ1N,QACrB6N,aAAc1d,KAAKyd,cACnBhB,QAASzc,KAAKiZ,aACdd,eAAgBnY,KAAK6Y,oBACrBX,SAAUlY,KAAK4Y,cACfX,QACAiD,QACAC,SACAtG,KAAqB,OAAf7U,KAAKma,MAAiBna,KAAKma,MAAMtK,aAAUtP,EACjDsK,IAAK7K,KAAK4b,SACVxD,aAAcpY,KAAK8Y,kBAAkBjJ,QACrCwI,cAAerY,KAAK+Y,qBAEtB,OAAOT,CACT,CAQA8F,YACE,IAAIzB,EAAS3c,KAAK4c,kBAClB,IAAKD,EAAQ,CACXA,EAAS3c,KAAK0c,QACd,MAAM7H,EAAO7U,KAAK2b,UAClB,GACwB,YAAtB3b,KAAK+c,eACiB,YAAtB/c,KAAKid,cACL,CACA,IAAKpI,EACH,OAAO,KAET8H,EAAS3c,KAAK0c,QAAQ7M,QACI,YAAtB7P,KAAK+c,gBACPJ,EAAO,IAAM9H,EAAK,IAEM,YAAtB7U,KAAKid,gBACPN,EAAO,IAAM9H,EAAK,GAEtB,CAEA,GAA0B,YAAtB7U,KAAK6c,cAA6B,CACpC,IAAKhI,EACH,OAAO,KAEL8H,IAAW3c,KAAK0c,UAClBC,EAAS3c,KAAK0c,QAAQ7M,SAGA,aAAtB7P,KAAK6c,eACiB,gBAAtB7c,KAAK6c,gBAELF,EAAO,IAAMA,EAAO,GAAK9H,EAAK,IAGR,eAAtB7U,KAAK6c,eACiB,gBAAtB7c,KAAK6c,gBAELF,EAAO,IAAMA,EAAO,GAAK9H,EAAK,GAElC,CACA7U,KAAK4c,kBAAoBD,CAC3B,CACA,MAAMvE,EAAepY,KAAK8Y,kBACpBb,EAAQjY,KAAKqe,gBAGnB,MAAO,CACL1B,EAAO,GAAKvE,EAAa,GAAKH,EAAM,GACpC0E,EAAO,GAAKvE,EAAa,GAAKH,EAAM,GAExC,CASAqG,UAAU3B,GACR3c,KAAK0c,QAAUC,EACf3c,KAAK4c,kBAAoB,IAC3B,CAOArD,WACE,OAAOvZ,KAAKqZ,MACd,CAQAvO,SAASzF,GACP,OAAOrF,KAAKsd,WAAWxS,SAASzF,EAClC,CAQAgW,cAAchW,GACZ,OAAOrF,KAAKsd,WAAWjC,cAAchW,EACvC,CAKAkZ,eACE,OAAOve,KAAKsd,WAAW3B,SACzB,CAKAL,gBACE,OAAOtb,KAAKsd,WAAWhC,eACzB,CAKAC,uBACE,OAAOvb,KAAKsd,WAAW/B,sBACzB,CAOAiD,YACE,GAAIxe,KAAK2d,QACP,OAAO3d,KAAK2d,QAEd,IAAIH,EAASxd,KAAKud,QAElB,GAA0B,YAAtBvd,KAAKyd,cAA6B,CACpC,MAAM5I,EAAO7U,KAAK2b,UACZ8C,EAAgBze,KAAKsd,WAAW3B,UACtC,IAAK9G,IAAS4J,EACZ,OAAO,KAETjB,EAASA,EAAO3N,QAEQ,aAAtB7P,KAAKyd,eACiB,gBAAtBzd,KAAKyd,gBAELD,EAAO,GAAKiB,EAAc,GAAK5J,EAAK,GAAK2I,EAAO,IAG1B,eAAtBxd,KAAKyd,eACiB,gBAAtBzd,KAAKyd,gBAELD,EAAO,GAAKiB,EAAc,GAAK5J,EAAK,GAAK2I,EAAO,GAEpD,CAEA,OADAxd,KAAK2d,QAAUH,EACRxd,KAAK2d,OACd,CAOA/B,SACE,OAAO5b,KAAKsd,WAAW1B,QACzB,CAOAD,UACE,OAAQ3b,KAAKma,MAAoCna,KAAKma,MAAjCna,KAAKsd,WAAW3B,SACvC,CAOA+C,WACE,MAAMzG,EAAQjY,KAAKqe,gBACnB,OAAIre,KAAKma,MACAna,KAAKma,MAAM,GAAKlC,EAAM,GAE3BjY,KAAKsd,WAAWhC,iBAAmBb,EAAA,EAAW3V,OACzC9E,KAAKsd,WAAW3B,UAAU,GAAK1D,EAAM,QAD9C,CAIF,CAOA0G,YACE,MAAM1G,EAAQjY,KAAKqe,gBACnB,OAAIre,KAAKma,MACAna,KAAKma,MAAM,GAAKlC,EAAM,GAE3BjY,KAAKsd,WAAWhC,iBAAmBb,EAAA,EAAW3V,OACzC9E,KAAKsd,WAAW3B,UAAU,GAAK1D,EAAM,QAD9C,CAIF,CAQAiG,SAASjG,UACAjY,KAAK8d,gBACZ/d,MAAMme,SAASjG,EACjB,CAKAkG,kBAAkBS,GAChB5e,KAAKsd,WAAW5T,iBAAiBC,EAAA,EAAUC,OAAQgV,EACrD,CASA3Q,OACEjO,KAAKsd,WAAWrP,MAClB,CAKA+P,oBAAoBY,GAClB5e,KAAKsd,WAAWuB,oBAAoBlV,EAAA,EAAUC,OAAQgV,EACxD,EAGF,S,kDCpjBA,MAAME,EACJjf,cAKEG,KAAK+e,OAAS,CAAC,EAMf/e,KAAKgf,WAAa,EAMlBhf,KAAKif,cAAgB,EACvB,CAKAnZ,QACE9F,KAAK+e,OAAS,CAAC,EACf/e,KAAKgf,WAAa,CACpB,CAKArb,iBACE,OAAO3D,KAAKgf,WAAahf,KAAKif,aAChC,CAKAC,SACE,GAAIlf,KAAK2D,iBAAkB,CACzB,IAAImK,EAAI,EACR,IAAK,MAAMvK,KAAOvD,KAAK+e,OAAQ,CAC7B,MAAM3C,EAAYpc,KAAK+e,OAAOxb,GACZ,KAAP,EAANuK,MAAmBsO,EAAUlO,uBACzBlO,KAAK+e,OAAOxb,KACjBvD,KAAKgf,WAEX,CACF,CACF,CAQA9e,IAAI2K,EAAKtC,EAAa+Q,GACpB,MAAM/V,EAAMyB,EAAO6F,EAAKtC,EAAa+Q,GACrC,OAAO/V,KAAOvD,KAAK+e,OAAS/e,KAAK+e,OAAOxb,GAAO,IACjD,CAQA+G,IAAIO,EAAKtC,EAAa+Q,EAAO8C,GAC3B,MAAM7Y,EAAMyB,EAAO6F,EAAKtC,EAAa+Q,GACrCtZ,KAAK+e,OAAOxb,GAAO6Y,IACjBpc,KAAKgf,UACT,CASApK,QAAQuK,GACNnf,KAAKif,cAAgBE,EACrBnf,KAAKkf,QACP,EASF,SAASla,EAAO6F,EAAKtC,EAAa+Q,GAChC,MAAM8F,EAAc9F,GAAQ,QAASA,GAAS,OAC9C,OAAO/Q,EAAc,IAAMsC,EAAM,IAAMuU,CACzC,CASO,MAAMC,EAAS,IAAIP,C,4DC5F1B,MAAMQ,EAIJzf,YAAYC,GAKVE,KAAKuf,SAAWzf,EAAQ2c,QAMxBzc,KAAKwf,gBAAkB1f,EAAQqY,eAM/BnY,KAAKyf,UAAY3f,EAAQoY,SAMzBlY,KAAK0f,OAAS5f,EAAQmY,MAMtBjY,KAAK2f,aAAc,QAAO7f,EAAQmY,OAMlCjY,KAAK4f,cAAgB9f,EAAQsY,aAM7BpY,KAAK6f,eAAiB/f,EAAQuY,aAChC,CAOAC,QACE,MAAML,EAAQjY,KAAKuY,WACnB,OAAO,IAAI+G,EAAW,CACpB7C,QAASzc,KAAKiZ,aACdhB,MAAO7V,MAAMC,QAAQ4V,GAASA,EAAMpI,QAAUoI,EAC9CC,SAAUlY,KAAK4Y,cACfT,eAAgBnY,KAAK6Y,oBACrBT,aAAcpY,KAAK8Y,kBAAkBjJ,QACrCwI,cAAerY,KAAK+Y,oBAExB,CAOAE,aACE,OAAOjZ,KAAKuf,QACd,CAOA1G,oBACE,OAAO7Y,KAAKwf,eACd,CAOA5G,cACE,OAAO5Y,KAAKyf,SACd,CAOAlH,WACE,OAAOvY,KAAK0f,MACd,CAMArB,gBACE,OAAOre,KAAK2f,WACd,CAOA7G,kBACE,OAAO9Y,KAAK4f,aACd,CAOA7G,mBACE,OAAO/Y,KAAK6f,cACd,CAQAzB,YACE,OAAO,SACT,CAQAtT,SAASzF,GACP,OAAO,SACT,CAMAkW,uBACE,OAAO,SACT,CAOAF,cAAchW,GACZ,OAAO,CACT,CAMAiW,gBACE,OAAO,SACT,CAMAiD,eACE,OAAO,SACT,CAOAC,YACE,OAAO,SACT,CAOA7C,UACE,OAAO,SACT,CAQAmE,gBAAgB1H,GACdpY,KAAK4f,cAAgBxH,CACvB,CAQAY,WAAWyD,GACTzc,KAAKuf,SAAW9C,CAClB,CAQAsD,kBAAkB5H,GAChBnY,KAAKwf,gBAAkBrH,CACzB,CAQA6H,YAAY9H,GACVlY,KAAKyf,UAAYvH,CACnB,CAQAgG,SAASjG,GACPjY,KAAK0f,OAASzH,EACdjY,KAAK2f,aAAc,QAAO1H,EAC5B,CAMAkG,kBAAkBS,IAChB,SACF,CAMA3Q,QACE,SACF,CAMA+P,oBAAoBY,IAClB,SACF,EAGF,S,yGClPA,MAAMqB,UAAqB,IAIzBpgB,YAAYC,GAIV,MAAMqY,OACuB5X,IAA3BT,EAAQqY,gBAA+BrY,EAAQqY,eAEjDpY,MAAM,CACJ0c,QAAS,EACTtE,eAAgBA,EAChBD,cAA+B3X,IAArBT,EAAQoY,SAAyBpY,EAAQoY,SAAW,EAC9DD,WAAyB1X,IAAlBT,EAAQmY,MAAsBnY,EAAQmY,MAAQ,EACrDG,kBAC2B7X,IAAzBT,EAAQsY,aAA6BtY,EAAQsY,aAAe,CAAC,EAAG,GAClEC,cAAevY,EAAQuY,gBAOzBrY,KAAKga,aAAUzZ,EAMfP,KAAKkgB,oBAAsB,KAM3BlgB,KAAKmgB,WAAyB5f,IAAjBT,EAAQiY,KAAqBjY,EAAQiY,KAAO,KAMzD/X,KAAK2d,QAAU,CAAC,EAAG,GAMnB3d,KAAKogB,QAAUtgB,EAAQgY,OAMvB9X,KAAKmZ,aACgB5Y,IAAnBT,EAAQ+X,OAAuB/X,EAAQ+X,OAAS/X,EAAQugB,QAM1DrgB,KAAKsgB,SAAWxgB,EAAQygB,QAMxBvgB,KAAKwgB,YAA2BjgB,IAAlBT,EAAQ2gB,MAAsB3gB,EAAQ2gB,MAAQ,EAM5DzgB,KAAK0gB,aAA6BngB,IAAnBT,EAAQkY,OAAuBlY,EAAQkY,OAAS,KAM/DhY,KAAKma,MAAQ,KAMbna,KAAK2gB,eAAiB,KAEtB3gB,KAAKwK,QACP,CAOA8N,QACE,MAAML,EAAQjY,KAAKuY,WACbC,EAAQ,IAAIyH,EAAa,CAC7BlI,KAAM/X,KAAKyY,UAAYzY,KAAKyY,UAAUH,aAAU/X,EAChDuX,OAAQ9X,KAAK4gB,YACb/I,OAAQ7X,KAAK2Y,YACb4H,QAASvgB,KAAK6gB,aACdJ,MAAOzgB,KAAK8gB,WACZ9I,OAAQhY,KAAK0Y,YAAc1Y,KAAK0Y,YAAYJ,aAAU/X,EACtD2X,SAAUlY,KAAK4Y,cACfT,eAAgBnY,KAAK6Y,oBACrBZ,MAAO7V,MAAMC,QAAQ4V,GAASA,EAAMpI,QAAUoI,EAC9CG,aAAcpY,KAAK8Y,kBAAkBjJ,QACrCwI,cAAerY,KAAK+Y,qBAGtB,OADAP,EAAMQ,WAAWhZ,KAAKiZ,cACfT,CACT,CAQA4F,YACE,MAAMvJ,EAAO7U,KAAKma,MAClB,IAAKtF,EACH,OAAO,KAET,MAAMuD,EAAepY,KAAK8Y,kBACpBb,EAAQjY,KAAKqe,gBAGnB,MAAO,CACLxJ,EAAK,GAAK,EAAIuD,EAAa,GAAKH,EAAM,GACtCpD,EAAK,GAAK,EAAIuD,EAAa,GAAKH,EAAM,GAE1C,CAOA6I,WACE,OAAO9gB,KAAKwgB,MACd,CAOA/H,UACE,OAAOzY,KAAKmgB,KACd,CAOAY,QAAQhJ,GACN/X,KAAKmgB,MAAQpI,EACb/X,KAAKwK,QACP,CAKA+Q,uBAIE,OAHKvb,KAAKkgB,qBACRlgB,KAAKghB,0BAA0BhhB,KAAK2gB,gBAE/B3gB,KAAKkgB,mBACd,CAQApV,SAASzF,GACP,IAAIsU,EAAQ3Z,KAAKga,QAAQ3U,GACzB,IAAKsU,EAAO,CACV,MAAMsH,EAAgBjhB,KAAK2gB,eACrBnF,GAAU,QACdyF,EAAcpM,KAAOxP,EACrB4b,EAAcpM,KAAOxP,GAEvBrF,KAAKkhB,MAAMD,EAAezF,EAASnW,GAEnCsU,EAAQ6B,EAAQE,OAChB1b,KAAKga,QAAQ3U,GAAcsU,CAC7B,CACA,OAAOA,CACT,CAOA0B,cAAchW,GACZ,OAAOA,CACT,CAKAkZ,eACE,OAAOve,KAAKma,KACd,CAKAmB,gBACE,OAAO,IAAWxW,MACpB,CAOA0Z,YACE,OAAOxe,KAAK2d,OACd,CAOAiD,YACE,OAAO5gB,KAAKogB,OACd,CAOAzH,YACE,OAAO3Y,KAAKmZ,OACd,CAOA0H,aACE,OAAO7gB,KAAKsgB,QACd,CAOA3E,UACE,OAAO3b,KAAKma,KACd,CAOAzB,YACE,OAAO1Y,KAAK0gB,OACd,CAOAS,UAAUnJ,GACRhY,KAAK0gB,QAAU1I,EACfhY,KAAKwK,QACP,CAKA2T,kBAAkBS,GAAW,CAK7B3Q,OAAQ,CAKR+P,oBAAoBY,GAAW,CAU/BwC,uBAAuBC,EAAUC,EAAaC,GAC5C,GACkB,IAAhBD,GACAthB,KAAKogB,UAAYtP,KACH,UAAbuQ,GAAqC,UAAbA,EAEzB,OAAOC,EAwBT,IAAIE,EAAKxhB,KAAKmZ,QACVsI,OAAuBlhB,IAAlBP,KAAKsgB,SAAyBkB,EAAKxhB,KAAKsgB,SACjD,GAAIkB,EAAKC,EAAI,CACX,MAAMC,EAAMF,EACZA,EAAKC,EACLA,EAAKC,CACP,CACA,MAAM5J,OACcvX,IAAlBP,KAAKsgB,SAAyBtgB,KAAKogB,QAAyB,EAAfpgB,KAAKogB,QAC9CuB,EAAS,EAAIzQ,KAAK0Q,GAAM9J,EACxB+J,EAAIJ,EAAKvQ,KAAK4Q,IAAIH,GAClBI,EAAI7Q,KAAKC,KAAKsQ,EAAKA,EAAKI,EAAIA,GAC5BG,EAAIR,EAAKO,EACTlH,EAAI3J,KAAKC,KAAK0Q,EAAIA,EAAIG,EAAIA,GAC1BC,EAAapH,EAAIgH,EACvB,GAAiB,UAAbR,GAAwBY,GAAcV,EACxC,OAAOU,EAAaX,EAetB,MAAMY,EAAIZ,EAAc,EAAIW,EACtB7K,EAAKkK,EAAc,GAAMU,EAAInH,GAC7BsH,EAAOjR,KAAKC,MAAMqQ,EAAKU,IAAMV,EAAKU,GAAK9K,EAAIA,GAC3CgL,EAAWD,EAAOX,EACxB,QAAsBjhB,IAAlBP,KAAKsgB,UAAuC,UAAbe,EACjC,OAAkB,EAAXe,EAIT,MAAMC,EAAKb,EAAKtQ,KAAK4Q,IAAIH,GACnBW,EAAKpR,KAAKC,KAAKqQ,EAAKA,EAAKa,EAAKA,GAC9BE,EAAKd,EAAKa,EACVE,EAAKtR,KAAKC,KAAKkR,EAAKA,EAAKE,EAAKA,GAC9BE,EAAkBD,EAAKH,EAC7B,GAAII,GAAmBlB,EAAY,CACjC,MAAMmB,EAAeD,EAAkBnB,EAAe,EAAIG,EAAKD,EAC/D,OAAO,EAAItQ,KAAKyR,IAAIP,EAAUM,EAChC,CACA,OAAkB,EAAXN,CACT,CAMAQ,sBACE,IAIIC,EAJAxB,EAAW,KACXE,EAAa,EACbuB,EAAW,KACXC,EAAiB,EAEjBzB,EAAc,EAEdthB,KAAK0gB,UACPmC,EAAc7iB,KAAK0gB,QAAQnH,WACP,OAAhBsJ,IACFA,EAAc,MAEhBA,GAAc,OAAYA,GAC1BvB,EAActhB,KAAK0gB,QAAQhC,gBACPne,IAAhB+gB,IACFA,EAAc,MAEhBwB,EAAW9iB,KAAK0gB,QAAQsC,cACxBD,EAAiB/iB,KAAK0gB,QAAQuC,oBAC9B5B,EAAWrhB,KAAK0gB,QAAQwC,mBACP3iB,IAAb8gB,IACFA,EAAW,MAEbE,EAAavhB,KAAK0gB,QAAQyC,qBACP5iB,IAAfghB,IACFA,EAAa,OAIjB,MAAM6B,EAAMpjB,KAAKohB,uBAAuBC,EAAUC,EAAaC,GACzD8B,EAAYnS,KAAKyR,IAAI3iB,KAAKmZ,QAASnZ,KAAKsgB,UAAY,GACpDzL,EAAO3D,KAAK6K,KAAK,EAAIsH,EAAYD,GAEvC,MAAO,CACLP,YAAaA,EACbvB,YAAaA,EACbzM,KAAMA,EACNiO,SAAUA,EACVC,eAAgBA,EAChB1B,SAAUA,EACVE,WAAYA,EAEhB,CAKA/W,SACExK,KAAK2gB,eAAiB3gB,KAAK4iB,sBAC3B,MAAM/N,EAAO7U,KAAK2gB,eAAe9L,KACjC7U,KAAKga,QAAU,CAAC,EAChBha,KAAKma,MAAQ,CAACtF,EAAMA,EACtB,CAQAqM,MAAMD,EAAezF,EAASnW,GAO5B,GANAmW,EAAQvD,MAAM5S,EAAYA,GAE1BmW,EAAQ8H,UAAUrC,EAAcpM,KAAO,EAAGoM,EAAcpM,KAAO,GAE/D7U,KAAKujB,YAAY/H,GAEbxb,KAAKmgB,MAAO,CACd,IAAI7G,EAAQtZ,KAAKmgB,MAAM5G,WACT,OAAVD,IACFA,EAAQ,MAEVkC,EAAQW,WAAY,OAAY7C,GAChCkC,EAAQzD,MACV,CACI/X,KAAK0gB,UACPlF,EAAQqH,YAAc5B,EAAc4B,YACpCrH,EAAQgI,UAAYvC,EAAcK,YAC9BL,EAAc6B,WAChBtH,EAAQiI,YAAYxC,EAAc6B,UAClCtH,EAAQuH,eAAiB9B,EAAc8B,gBAEzCvH,EAAQ6F,SAAWJ,EAAcI,SACjC7F,EAAQ+F,WAAaN,EAAcM,WACnC/F,EAAQxD,SAEZ,CAMAgJ,0BAA0BC,GACxB,GAAIjhB,KAAKmgB,MAAO,CACd,IAAI7G,EAAQtZ,KAAKmgB,MAAM5G,WAGnBkD,EAAU,EASd,GARqB,kBAAVnD,IACTA,GAAQ,QAAQA,IAEJ,OAAVA,EACFmD,EAAU,EACDra,MAAMC,QAAQiX,KACvBmD,EAA2B,IAAjBnD,EAAMvL,OAAeuL,EAAM,GAAK,GAE5B,IAAZmD,EAAe,CAGjB,MAAMjB,GAAU,QACdyF,EAAcpM,KACdoM,EAAcpM,MAEhB7U,KAAKkgB,oBAAsB1E,EAAQE,OAEnC1b,KAAK0jB,wBAAwBzC,EAAezF,EAC9C,CACF,CACKxb,KAAKkgB,sBACRlgB,KAAKkgB,oBAAsBlgB,KAAK8K,SAAS,GAE7C,CAMAyY,YAAY/H,GACV,IAAI1D,EAAS9X,KAAKogB,QAClB,MAAMvI,EAAS7X,KAAKmZ,QACpB,GAAIrB,IAAWhH,IACb0K,EAAQmI,IAAI,EAAG,EAAG9L,EAAQ,EAAG,EAAI3G,KAAK0Q,QACjC,CACL,MAAMrB,OAA4BhgB,IAAlBP,KAAKsgB,SAAyBzI,EAAS7X,KAAKsgB,cACtC/f,IAAlBP,KAAKsgB,WACPxI,GAAU,GAEZ,MAAM8L,EAAa5jB,KAAKwgB,OAAStP,KAAK0Q,GAAK,EACrCiC,EAAQ,EAAI3S,KAAK0Q,GAAM9J,EAC7B,IAAK,IAAIhK,EAAI,EAAGA,EAAIgK,EAAQhK,IAAK,CAC/B,MAAMgW,EAASF,EAAa9V,EAAI+V,EAC1BE,EAAUjW,EAAI,IAAM,EAAI+J,EAAS0I,EACvC/E,EAAQwI,OAAOD,EAAU7S,KAAK+S,IAAIH,GAASC,EAAU7S,KAAK4Q,IAAIgC,GAChE,CACAtI,EAAQ0I,WACV,CACF,CAOAR,wBAAwBzC,EAAezF,GAErCA,EAAQ8H,UAAUrC,EAAcpM,KAAO,EAAGoM,EAAcpM,KAAO,GAE/D7U,KAAKujB,YAAY/H,GAEjBA,EAAQW,UAAY,KACpBX,EAAQzD,OACJ/X,KAAK0gB,UACPlF,EAAQqH,YAAc5B,EAAc4B,YACpCrH,EAAQgI,UAAYvC,EAAcK,YAC9BL,EAAc6B,WAChBtH,EAAQiI,YAAYxC,EAAc6B,UAClCtH,EAAQuH,eAAiB9B,EAAc8B,gBAEzCvH,EAAQ6F,SAAWJ,EAAcI,SACjC7F,EAAQ+F,WAAaN,EAAcM,WACnC/F,EAAQxD,SAEZ,EAGF,S,mCCtlBA,MAAMmM,EAIJtkB,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBE,KAAKqZ,YAA2B9Y,IAAlBT,EAAQwZ,MAAsBxZ,EAAQwZ,MAAQ,KAM5DtZ,KAAKokB,SAAWtkB,EAAQukB,QAMxBrkB,KAAKskB,eAAiC/jB,IAArBT,EAAQgjB,SAAyBhjB,EAAQgjB,SAAW,KAMrE9iB,KAAKukB,gBAAkBzkB,EAAQijB,eAM/B/iB,KAAKwkB,UAAY1kB,EAAQuhB,SAMzBrhB,KAAKykB,YAAc3kB,EAAQyhB,WAM3BvhB,KAAK0kB,OAAS5kB,EAAQob,KACxB,CAOA5C,QACE,MAAMgB,EAAQtZ,KAAKuZ,WACnB,OAAO,IAAI4K,EAAO,CAChB7K,MAAOlX,MAAMC,QAAQiX,GAASA,EAAMzJ,QAAUyJ,QAAS/Y,EACvD8jB,QAASrkB,KAAK2kB,aACd7B,SAAU9iB,KAAKgjB,cAAgBhjB,KAAKgjB,cAAcnT,aAAUtP,EAC5DwiB,eAAgB/iB,KAAKijB,oBACrB5B,SAAUrhB,KAAKkjB,cACf3B,WAAYvhB,KAAKmjB,gBACjBjI,MAAOlb,KAAK0e,YAEhB,CAOAnF,WACE,OAAOvZ,KAAKqZ,MACd,CAOAsL,aACE,OAAO3kB,KAAKokB,QACd,CAOApB,cACE,OAAOhjB,KAAKskB,SACd,CAOArB,oBACE,OAAOjjB,KAAKukB,eACd,CAOArB,cACE,OAAOljB,KAAKwkB,SACd,CAOArB,gBACE,OAAOnjB,KAAKykB,WACd,CAOA/F,WACE,OAAO1e,KAAK0kB,MACd,CAQAlL,SAASF,GACPtZ,KAAKqZ,OAASC,CAChB,CAQAsL,WAAWP,GACTrkB,KAAKokB,SAAWC,CAClB,CAQAZ,YAAYX,GACV9iB,KAAKskB,UAAYxB,CACnB,CAQA+B,kBAAkB9B,GAChB/iB,KAAKukB,gBAAkBxB,CACzB,CAQA+B,YAAYzD,GACVrhB,KAAKwkB,UAAYnD,CACnB,CAQA0D,cAAcxD,GACZvhB,KAAKykB,YAAclD,CACrB,CAQAyD,SAAS9J,GACPlb,KAAK0kB,OAASxJ,CAChB,EAGF,S,mKC5EA,MAAM+J,EAIJplB,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBE,KAAKklB,UAAY,KAMjBllB,KAAKmlB,kBAAoBC,OAEA7kB,IAArBT,EAAQiN,UACV/M,KAAKqlB,YAAYvlB,EAAQiN,UAO3B/M,KAAKmgB,WAAyB5f,IAAjBT,EAAQiY,KAAqBjY,EAAQiY,KAAO,KAMzD/X,KAAK8Z,YAA2BvZ,IAAlBT,EAAQ6Z,MAAsB7Z,EAAQ6Z,MAAQ,KAM5D3Z,KAAKslB,eAAiC/kB,IAArBT,EAAQylB,SAAyBzlB,EAAQylB,SAAW,KAMrEvlB,KAAKwlB,2BAC8BjlB,IAAjCT,EAAQ2lB,qBACJ3lB,EAAQ2lB,qBACR,KAMNzlB,KAAK0gB,aAA6BngB,IAAnBT,EAAQkY,OAAuBlY,EAAQkY,OAAS,KAM/DhY,KAAK0lB,WAAyBnlB,IAAjBT,EAAQ6lB,KAAqB7lB,EAAQ6lB,KAAO,KAMzD3lB,KAAK4lB,QAAU9lB,EAAQ+lB,MACzB,CAOAvN,QACE,IAAIvL,EAAW/M,KAAKgN,cAMpB,OALID,GAAgC,kBAAbA,IACrBA,EAAgE,EAE9DuL,SAEG,IAAI2M,EAAM,CACflY,SAAUA,EACVgL,KAAM/X,KAAKyY,UAAYzY,KAAKyY,UAAUH,aAAU/X,EAChDoZ,MAAO3Z,KAAK8K,WAAa9K,KAAK8K,WAAWwN,aAAU/X,EACnDglB,SAAUvlB,KAAK8lB,cACf9N,OAAQhY,KAAK0Y,YAAc1Y,KAAK0Y,YAAYJ,aAAU/X,EACtDolB,KAAM3lB,KAAK+lB,UAAY/lB,KAAK+lB,UAAUzN,aAAU/X,EAChDslB,OAAQ7lB,KAAKgmB,aAEjB,CAQAF,cACE,OAAO9lB,KAAKslB,SACd,CAQAW,YAAYV,GACVvlB,KAAKslB,UAAYC,CACnB,CAQAW,wBAAwBX,GACtBvlB,KAAKwlB,sBAAwBD,CAC/B,CAQAY,0BACE,OAAOnmB,KAAKwlB,qBACd,CASAxY,cACE,OAAOhN,KAAKklB,SACd,CAQAkB,sBACE,OAAOpmB,KAAKmlB,iBACd,CAOA1M,UACE,OAAOzY,KAAKmgB,KACd,CAOAY,QAAQhJ,GACN/X,KAAKmgB,MAAQpI,CACf,CAOAjN,WACE,OAAO9K,KAAK8Z,MACd,CAOAuM,SAAS1M,GACP3Z,KAAK8Z,OAASH,CAChB,CAOAjB,YACE,OAAO1Y,KAAK0gB,OACd,CAOAS,UAAUnJ,GACRhY,KAAK0gB,QAAU1I,CACjB,CAOA+N,UACE,OAAO/lB,KAAK0lB,KACd,CAOAY,QAAQX,GACN3lB,KAAK0lB,MAAQC,CACf,CAOAK,YACE,OAAOhmB,KAAK4lB,OACd,CAUAP,YAAYtY,GACc,oBAAbA,EACT/M,KAAKmlB,kBAAoBpY,EACI,kBAAbA,EAChB/M,KAAKmlB,kBAAoB,SAAUna,GACjC,OACEA,EAAQ9K,IAAI6M,EAEhB,EACUA,OAEYxM,IAAbwM,IACT/M,KAAKmlB,kBAAoB,WACvB,OAA4D,CAC9D,GAJAnlB,KAAKmlB,kBAAoBC,EAM3BplB,KAAKklB,UAAYnY,CACnB,CAQAwZ,UAAUV,GACR7lB,KAAK4lB,QAAUC,CACjB,EAWK,SAASW,EAAW3T,GACzB,IAAI4T,EAEJ,GAAmB,oBAAR5T,EACT4T,EAAgB5T,MACX,CAIL,IAAI6T,EACJ,GAAItkB,MAAMC,QAAQwQ,GAChB6T,EAAS7T,MACJ,EACL,OAAqD,oBAArB,EAAe,UAAkB,IACjE,MAAM2F,EAA6B,EACnCkO,EAAS,CAAClO,EACZ,CACAiO,EAAgB,WACd,OAAOC,CACT,CACF,CACA,OAAOD,CACT,CAKA,IAAIE,EAAgB,KAOb,SAASC,EAAmB5b,EAASiH,GAM1C,IAAK0U,EAAe,CAClB,MAAM5O,EAAO,IAAI,IAAK,CACpBuB,MAAO,0BAEHtB,EAAS,IAAI,IAAO,CACxBsB,MAAO,UACP4B,MAAO,OAETyL,EAAgB,CACd,IAAI1B,EAAM,CACRtL,MAAO,IAAI,IAAY,CACrB5B,KAAMA,EACNC,OAAQA,EACRH,OAAQ,IAEVE,KAAMA,EACNC,OAAQA,IAGd,CACA,OAAO2O,CACT,CAMO,SAASE,IAEd,MAAMH,EAAS,CAAC,EACVI,EAAQ,CAAC,IAAK,IAAK,IAAK,GACxBC,EAAO,CAAC,EAAG,IAAK,IAAK,GACrB7L,EAAQ,EAkDd,OAjDAwL,EAAO,WAAa,CAClB,IAAIzB,EAAM,CACRlN,KAAM,IAAI,IAAK,CACbuB,MAAO,CAAC,IAAK,IAAK,IAAK,SAI7BoN,EAAO,gBAAkBA,EAAO,WAEhCA,EAAO,cAAgB,CACrB,IAAIzB,EAAM,CACRjN,OAAQ,IAAI,IAAO,CACjBsB,MAAOwN,EACP5L,MAAOA,EAAQ,MAGnB,IAAI+J,EAAM,CACRjN,OAAQ,IAAI,IAAO,CACjBsB,MAAOyN,EACP7L,MAAOA,OAIbwL,EAAO,mBAAqBA,EAAO,cAEnCA,EAAO,UAAYA,EAAO,WAAWrW,OAAOqW,EAAO,eAEnDA,EAAO,SAAW,CAChB,IAAIzB,EAAM,CACRtL,MAAO,IAAI,IAAY,CACrB9B,OAAgB,EAARqD,EACRnD,KAAM,IAAI,IAAK,CACbuB,MAAOyN,IAET/O,OAAQ,IAAI,IAAO,CACjBsB,MAAOwN,EACP5L,MAAOA,EAAQ,MAGnB2K,OAAQ/U,OAGZ4V,EAAO,cAAgBA,EAAO,SAE9BA,EAAO,sBAAwBA,EAAO,WAAWrW,OAC/CqW,EAAO,cACPA,EAAO,UAGFA,CACT,CAOA,SAAStB,EAAwBpa,GAC/B,OAAOA,EAAQgC,aACjB,CAEA,S,mHC7hBA,MAAMga,EAAqB,OA+C3B,MAAMC,EAIJpnB,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBE,KAAKknB,MAAQpnB,EAAQqnB,KAMrBnnB,KAAKyf,UAAY3f,EAAQoY,SAMzBlY,KAAKwf,gBAAkB1f,EAAQqY,eAM/BnY,KAAK0f,OAAS5f,EAAQmY,MAMtBjY,KAAK2f,aAAc,aAAyBpf,IAAlBT,EAAQmY,MAAsBnY,EAAQmY,MAAQ,GAMxEjY,KAAK0lB,MAAQ5lB,EAAQ6lB,KAMrB3lB,KAAKonB,WAAatnB,EAAQunB,UAM1BrnB,KAAKsnB,SAAWxnB,EAAQynB,QAMxBvnB,KAAKwnB,QAAU1nB,EAAQ2nB,OAMvBznB,KAAK0nB,cAAgB5nB,EAAQ6nB,aAM7B3nB,KAAKmgB,WACc5f,IAAjBT,EAAQiY,KACJjY,EAAQiY,KACR,IAAIqB,EAAA,EAAK,CAACE,MAAO0N,IAMvBhnB,KAAK4nB,eACkBrnB,IAArBT,EAAQ+nB,SAAyB/nB,EAAQ+nB,SAAW3W,KAAK0Q,GAAK,EAMhE5hB,KAAK8nB,gBACmBvnB,IAAtBT,EAAQioB,UAA0BjoB,EAAQioB,UAAY,QAMxD/nB,KAAKgoB,YAAcloB,EAAQmoB,SAM3BjoB,KAAK0gB,aAA6BngB,IAAnBT,EAAQkY,OAAuBlY,EAAQkY,OAAS,KAM/DhY,KAAKkoB,cAA+B3nB,IAApBT,EAAQqoB,QAAwBroB,EAAQqoB,QAAU,EAMlEnoB,KAAKooB,cAA+B7nB,IAApBT,EAAQuoB,QAAwBvoB,EAAQuoB,QAAU,EAMlEroB,KAAKsoB,gBAAkBxoB,EAAQyoB,eAC3BzoB,EAAQyoB,eACR,KAMJvoB,KAAKwoB,kBAAoB1oB,EAAQ2oB,iBAC7B3oB,EAAQ2oB,iBACR,KAMJzoB,KAAK0oB,cAA+BnoB,IAApBT,EAAQ6oB,QAAwB,KAAO7oB,EAAQ6oB,OACjE,CAOArQ,QACE,MAAML,EAAQjY,KAAKuY,WACnB,OAAO,IAAI0O,EAAK,CACdE,KAAMnnB,KAAK4oB,UACXb,UAAW/nB,KAAK6oB,eAChBpB,OAAQznB,KAAK8oB,YACbjB,SAAU7nB,KAAK+oB,cACfd,SAAUjoB,KAAKgpB,cACf9Q,SAAUlY,KAAK4Y,cACfT,eAAgBnY,KAAK6Y,oBACrBZ,MAAO7V,MAAMC,QAAQ4V,GAASA,EAAMpI,QAAUoI,EAC9C0N,KAAM3lB,KAAK+lB,UACXsB,UAAWrnB,KAAKipB,eAChB1B,QAASvnB,KAAKkpB,aACdvB,aAAc3nB,KAAKmpB,kBACnBpR,KAAM/X,KAAKyY,UAAYzY,KAAKyY,UAAUH,aAAU/X,EAChDyX,OAAQhY,KAAK0Y,YAAc1Y,KAAK0Y,YAAYJ,aAAU/X,EACtD4nB,QAASnoB,KAAKopB,aACdf,QAASroB,KAAKqpB,aACdd,eAAgBvoB,KAAKspB,oBACjBtpB,KAAKspB,oBAAoBhR,aACzB/X,EACJkoB,iBAAkBzoB,KAAKupB,sBACnBvpB,KAAKupB,sBAAsBjR,aAC3B/X,EACJooB,QAAS3oB,KAAKwpB,mBAAgBjpB,GAElC,CAOAyoB,cACE,OAAOhpB,KAAKgoB,SACd,CAOAY,UACE,OAAO5oB,KAAKknB,KACd,CAOA6B,cACE,OAAO/oB,KAAK4nB,SACd,CAOAiB,eACE,OAAO7oB,KAAK8nB,UACd,CAOAgB,YACE,OAAO9oB,KAAKwnB,OACd,CAOA4B,aACE,OAAOppB,KAAKkoB,QACd,CAOAmB,aACE,OAAOrpB,KAAKooB,QACd,CAOA3P,UACE,OAAOzY,KAAKmgB,KACd,CAOAtH,oBACE,OAAO7Y,KAAKwf,eACd,CAOA5G,cACE,OAAO5Y,KAAKyf,SACd,CAOAlH,WACE,OAAOvY,KAAK0f,MACd,CAMArB,gBACE,OAAOre,KAAK2f,WACd,CAOAjH,YACE,OAAO1Y,KAAK0gB,OACd,CAOAqF,UACE,OAAO/lB,KAAK0lB,KACd,CAOAuD,eACE,OAAOjpB,KAAKonB,UACd,CAOA8B,aACE,OAAOlpB,KAAKsnB,QACd,CAOA6B,kBACE,OAAOnpB,KAAK0nB,aACd,CAOA4B,oBACE,OAAOtpB,KAAKsoB,eACd,CAOAiB,sBACE,OAAOvpB,KAAKwoB,iBACd,CAOAgB,aACE,OAAOxpB,KAAK0oB,QACd,CAQAe,YAAYxB,GACVjoB,KAAKgoB,UAAYC,CACnB,CAQAyB,QAAQvC,GACNnnB,KAAKknB,MAAQC,CACf,CAQAwC,YAAY9B,GACV7nB,KAAK4nB,UAAYC,CACnB,CAQA+B,WAAWzB,GACTnoB,KAAKkoB,SAAWC,CAClB,CAQA0B,WAAWxB,GACTroB,KAAKooB,SAAWC,CAClB,CAQAyB,aAAa/B,GACX/nB,KAAK8nB,WAAaC,CACpB,CAOAgC,UAAUtC,GACRznB,KAAKwnB,QAAUC,CACjB,CAQA1H,kBAAkB5H,GAChBnY,KAAKwf,gBAAkBrH,CACzB,CAQA4I,QAAQhJ,GACN/X,KAAKmgB,MAAQpI,CACf,CAQAiI,YAAY9H,GACVlY,KAAKyf,UAAYvH,CACnB,CAQAgG,SAASjG,GACPjY,KAAK0f,OAASzH,EACdjY,KAAK2f,aAAc,aAAiBpf,IAAV0X,EAAsBA,EAAQ,EAC1D,CAQAkJ,UAAUnJ,GACRhY,KAAK0gB,QAAU1I,CACjB,CAQAsO,QAAQX,GACN3lB,KAAK0lB,MAAQC,CACf,CAQAqE,aAAa3C,GACXrnB,KAAKonB,WAAaC,CACpB,CAQA4C,WAAW1C,GACTvnB,KAAKsnB,SAAWC,CAClB,CAQA2C,gBAAgBvC,GACd3nB,KAAK0nB,cAAgBC,CACvB,CAQAwC,kBAAkBpS,GAChB/X,KAAKsoB,gBAAkBvQ,CACzB,CAQAqS,oBAAoBpS,GAClBhY,KAAKwoB,kBAAoBxQ,CAC3B,CAQAqS,WAAW1B,GACT3oB,KAAK0oB,SAAWC,CAClB,EAGF,UCjaO,SAAS2B,EAAQC,GACtB,MAAM/R,EAAQ,IAAIyM,EAAA,WAAM,CACtBlN,KAAMU,EAAQ8R,EAAW,IACzBvS,OAAQU,EAAU6R,EAAW,IAC7B5E,KAAMI,EAAQwE,GACd5Q,MAAO7O,EAASyf,KAGlB,OAAO/R,CACT,CAOA,SAASC,EAAQ8R,EAAWC,GAC1B,MAAMlR,EAAQiR,EAAUC,EAAS,cACjC,GAAKlR,EAIL,OAAO,IAAIF,EAAA,EAAK,CAACE,MAAOA,GAC1B,CAOA,SAASZ,EAAU6R,EAAWC,GAC5B,MAAMtP,EAAQqP,EAAUC,EAAS,gBAC3BlR,EAAQiR,EAAUC,EAAS,gBACjC,GAAKtP,GAAU5B,EAIf,OAAO,IAAI6K,EAAA,EAAO,CAChBjJ,MAAOA,EACP5B,MAAOA,EACP+K,QAASkG,EAAUC,EAAS,mBAC5BnJ,SAAUkJ,EAAUC,EAAS,oBAC7B1H,SAAUyH,EAAUC,EAAS,oBAC7BzH,eAAgBwH,EAAUC,EAAS,2BACnCjJ,WAAYgJ,EAAUC,EAAS,uBAEnC,CAMA,SAASzE,EAAQwE,GACf,MAAM5V,EAAQ4V,EAAU,cACxB,IAAK5V,EACH,OAGF,MAAMgR,EAAO,IAAI,EAAK,CACpBA,KAAMhR,EACNwS,KAAMoD,EAAU,aAChB1C,SAAU0C,EAAU,kBACpBpC,QAASoC,EAAU,iBACnBlC,QAASkC,EAAU,iBACnBtC,SAAUsC,EAAU,iBACpBxC,UAAWwC,EAAU,kBACrB9C,OAAQ8C,EAAU,eAClBtS,MAAOsS,EAAU,cACjBpS,eAAgBoS,EAAU,yBAC1BrS,SAAUqS,EAAU,iBACpBlD,UAAWkD,EAAU,cACrBhD,QAASgD,EAAU,gBACnB5C,aAAc4C,EAAU,iBACxB5B,QAAS4B,EAAU,gBACnBxS,KAAMU,EAAQ8R,EAAW,SACzBhC,eAAgB9P,EAAQ8R,EAAW,oBACnCvS,OAAQU,EAAU6R,EAAW,SAC7B9B,iBAAkB/P,EAAU6R,EAAW,sBAGzC,OAAO5E,CACT,CAMA,SAAS7a,EAASyf,GAChB,MAAME,EAAUF,EAAU,YACpBG,EAAUH,EAAU,YAC1B,GAAIE,GAAWC,EAAS,CACtB,MAAMC,EAAO,IAAInO,EAAA,WAAK,CACpB3R,IAAK4f,EACLtN,IAAKuN,EACLrN,QAASkN,EAAU,iBACnB5N,OAAQ4N,EAAU,eAClBzN,aAAcyN,EAAU,sBACxBvN,aAAcuN,EAAU,uBACxBrN,aAAcqN,EAAU,uBACxBjR,MAAOiR,EAAU,cACjBhiB,YAAagiB,EAAU,qBACvB/M,OAAQ+M,EAAU,eAClBnS,aAAcmS,EAAU,qBACxB9N,QAAS8N,EAAU,gBACnBtS,MAAOsS,EAAU,cACjBrP,MAAOqP,EAAU,cACjBpP,OAAQoP,EAAU,eAClBrS,SAAUqS,EAAU,iBACpBpS,eAAgBoS,EAAU,yBAC1B1V,KAAM0V,EAAU,aAChBlS,cAAekS,EAAU,yBAE3B,OAAOI,CACT,CAEA,MAAMC,EAAcL,EAAU,gBAC9B,GAAIK,EAAa,CACf,MAAMJ,EAAS,SACTK,EAAQ,IAAI5K,EAAA,EAAa,CAC7BnI,OAAQ8S,EACR7S,KAAMU,EAAQ8R,EAAWC,GACzBxS,OAAQU,EAAU6R,EAAWC,GAC7B3S,OAAQ0S,EAAU,gBAClBlK,QAASkK,EAAU,iBACnBhK,QAASgK,EAAU,iBACnB9J,MAAO8J,EAAU,eACjBnS,aAAcmS,EAAU,sBACxBrS,SAAUqS,EAAU,kBACpBpS,eAAgBoS,EAAU,0BAC1BtS,MAAOsS,EAAU,eACjBlS,cAAekS,EAAU,0BAG3B,OAAOM,CACT,CAEA,MAAMC,EAAeP,EAAU,iBAC/B,GAAIO,EAAc,CAChB,MAAMN,EAAS,UACTO,EAAS,IAAIC,EAAA,EAAO,CACxBnT,OAAQiT,EACR/S,KAAMU,EAAQ8R,EAAWC,GACzBxS,OAAQU,EAAU6R,EAAWC,GAC7BpS,aAAcmS,EAAU,uBACxBtS,MAAOsS,EAAU,gBACjBrS,SAAUqS,EAAU,mBACpBpS,eAAgBoS,EAAU,2BAC1BlS,cAAekS,EAAU,2BAG3B,OAAOQ,CACT,CAGF,C,kBC3UO,SAASE,EAAejnB,EAAGO,EAAGG,EAAGkB,GACtC,YAAkBrF,IAAdqF,GACFA,EAAU,GAAK5B,EACf4B,EAAU,GAAKrB,EACfqB,EAAU,GAAKlB,EACRkB,GAEF,CAAC5B,EAAGO,EAAGG,EAChB,CAQO,SAASwmB,EAAUlnB,EAAGO,EAAGG,GAC9B,OAAOV,EAAI,IAAMO,EAAI,IAAMG,CAC7B,CAOO,SAASM,EAAOY,GACrB,OAAOslB,EAAUtlB,EAAU,GAAIA,EAAU,GAAIA,EAAU,GACzD,CAoBO,SAASulB,EAAQ5nB,GACtB,OAAOA,EAAI6nB,MAAM,KAAK9a,IAAI+a,OAC5B,CAMO,SAASC,EAAK1lB,GACnB,OAAQA,EAAU,IAAMA,EAAU,IAAMA,EAAU,EACpD,CAOO,SAAS2lB,EAAiB3lB,EAAW7C,GAC1C,MAAMiB,EAAI4B,EAAU,GACdrB,EAAIqB,EAAU,GACdlB,EAAIkB,EAAU,GAEpB,GAAI7C,EAASG,aAAec,GAAKA,EAAIjB,EAASyoB,aAC5C,OAAO,EAET,MAAMvnB,EAAYlB,EAAS0oB,iBAAiBznB,GAC5C,OAAKC,GAGEA,EAAUynB,WAAWnnB,EAAGG,EACjC,C,sLC3EO,SAASinB,EAAiB1rB,GAC/B,IAAI8C,EAAW9C,EAAW2rB,qBAK1B,OAJK7oB,IACHA,EAAW8oB,EAAoB5rB,GAC/BA,EAAW6rB,mBAAmB/oB,IAEzBA,CACT,CAQO,SAASlC,EAAMkC,EAAU6C,EAAW3F,GACzC,MAAM+D,EAAI4B,EAAU,GACdmmB,EAAShpB,EAASipB,mBAAmBpmB,GACrCqmB,EAAmBC,EAAqBjsB,GAC9C,KAAK,QAAmBgsB,EAAkBF,GAAS,CACjD,MAAMI,GAAa,QAASF,GACtBG,EAAalb,KAAK6K,MACrBkQ,EAAiB,GAAKF,EAAO,IAAMI,GAGtC,OADAJ,EAAO,IAAMI,EAAaC,EACnBrpB,EAASspB,yBAAyBN,EAAQ/nB,EACnD,CACA,OAAO4B,CACT,CAWO,SAAS0mB,EAAgBrf,EAAQkG,EAASnQ,EAAUupB,GACzDA,OAAoBhsB,IAAXgsB,EAAuBA,EAAS,WAEzC,MAAMC,EAAcC,EAAsBxf,EAAQkG,EAASnQ,GAE3D,OAAO,IAAI,IAAS,CAClBiK,OAAQA,EACRyf,QAAQ,QAAUzf,EAAQsf,GAC1BC,YAAaA,EACbxpB,SAAUA,GAEd,CAoBO,SAAS2pB,EAAU7sB,GACxB,MAAM8sB,EAAa9sB,GAAW,CAAC,EAEzBmN,EAAS2f,EAAW3f,SAAU,IAAA/M,KAAc,aAAagN,YAEzD2f,EAAc,CAClB5f,OAAQA,EACRmG,QAASwZ,EAAWxZ,QACpBpQ,SAAU4pB,EAAW5pB,SACrBwpB,YAAaC,EACXxf,EACA2f,EAAWzZ,QACXyZ,EAAW5pB,SACX4pB,EAAW1Z,gBAGf,OAAO,IAAI,IAAS2Z,EACtB,CAYA,SAASJ,EAAsBxf,EAAQkG,EAASnQ,EAAUkQ,GACxDC,OAAsB5S,IAAZ4S,EAAwBA,EAAU,IAC5CnQ,GAAW,aAAoBzC,IAAbyC,EAAyBA,EAAW,KAEtD,MAAMmY,GAAS,QAAUlO,GACnBiO,GAAQ,QAASjO,GAEvBiG,EACEA,EAAgB,EACZA,EACAhC,KAAKyR,IAAIzH,EAAQlY,EAAS,GAAImY,EAASnY,EAAS,IAEtD,MAAM+K,EAASoF,EAAU,EACnBqZ,EAAc,IAAIpqB,MAAM2L,GAC9B,IAAK,IAAI/J,EAAI,EAAGA,EAAI+J,IAAU/J,EAC5BwoB,EAAYxoB,GAAKkP,EAAgBhC,KAAK4b,IAAI,EAAG9oB,GAE/C,OAAOwoB,CACT,CAWO,SAASX,EAAoB5rB,EAAYkT,EAASnQ,EAAUupB,GACjE,MAAMtf,EAASif,EAAqBjsB,GACpC,OAAOqsB,EAAgBrf,EAAQkG,EAASnQ,EAAUupB,EACpD,CAQO,SAASL,EAAqBjsB,GACnCA,GAAa,IAAAC,KAAcD,GAC3B,IAAIgN,EAAShN,EAAWiN,YACxB,IAAKD,EAAQ,CACX,MAAM8f,EACH,IAAM,EAAAC,gBAAgBC,QAAWhtB,EAAWitB,mBAC/CjgB,GAAS,SAAgB8f,GAAOA,EAAMA,EAAMA,EAC9C,CACA,OAAO9f,CACT,C,uICrJA,MAAMkgB,EAAe,CAAC,EAAG,EAAG,GAMtBC,EAAW,EAuCjB,MAAMC,EAIJxtB,YAAYC,GAwBV,IAAIwtB,EACJ,GApBAttB,KAAKoT,aAA8B7S,IAApBT,EAAQsT,QAAwBtT,EAAQsT,QAAU,EAMjEpT,KAAKutB,aAAeztB,EAAQ0sB,aAC5B,QACE,QACExsB,KAAKutB,cACL,SAAU1L,EAAGE,GACX,OAAOA,EAAIF,CACb,IACA,GAEF,KAKG/hB,EAAQ0tB,QACX,IAAK,IAAI1f,EAAI,EAAGsE,EAAKpS,KAAKutB,aAAaxf,OAAS,EAAGD,EAAIsE,IAAMtE,EAC3D,GAAKwf,GAGH,GAAIttB,KAAKutB,aAAazf,GAAK9N,KAAKutB,aAAazf,EAAI,KAAOwf,EAAY,CAClEA,OAAa/sB,EACb,KACF,OALA+sB,EAAattB,KAAKutB,aAAazf,GAAK9N,KAAKutB,aAAazf,EAAI,GAchE9N,KAAKytB,YAAcH,EAMnBttB,KAAKmT,QAAUnT,KAAKutB,aAAaxf,OAAS,EAM1C/N,KAAK2d,aAA6Bpd,IAAnBT,EAAQ4sB,OAAuB5sB,EAAQ4sB,OAAS,KAM/D1sB,KAAK0tB,SAAW,UACQntB,IAApBT,EAAQ0tB,UACVxtB,KAAK0tB,SAAW5tB,EAAQ0tB,SACxB,OAAOxtB,KAAK0tB,SAAS3f,QAAU/N,KAAKutB,aAAaxf,OAAQ,KAG3D,MAAMd,EAASnN,EAAQmN,YAER1M,IAAX0M,GAAyBjN,KAAK2d,SAAY3d,KAAK0tB,WACjD1tB,KAAK2d,SAAU,QAAW1Q,KAG5B,QACIjN,KAAK2d,SAAW3d,KAAK0tB,UAAc1tB,KAAK2d,UAAY3d,KAAK0tB,SAC3D,IAOF1tB,KAAK2tB,WAAa,UACQptB,IAAtBT,EAAQ8tB,YACV5tB,KAAK2tB,WAAa7tB,EAAQ8tB,WAC1B,OAAO5tB,KAAK2tB,WAAW5f,QAAU/N,KAAKutB,aAAaxf,OAAQ,KAO7D/N,KAAK6tB,eACkBttB,IAArBT,EAAQkD,SACJlD,EAAQkD,SACPhD,KAAK2tB,WAEN,KADA,KAEN,QACI3tB,KAAK6tB,WAAa7tB,KAAK2tB,YACtB3tB,KAAK6tB,YAAc7tB,KAAK2tB,WAC3B,IAOF3tB,KAAK8tB,aAAqBvtB,IAAX0M,EAAuBA,EAAS,KAM/CjN,KAAK+tB,gBAAkB,KAMvB/tB,KAAKguB,SAAW,CAAC,EAAG,GAMpBhuB,KAAKiuB,WAAa,CAAC,EAAG,EAAG,EAAG,QAEN1tB,IAAlBT,EAAQouB,MACVluB,KAAK+tB,gBAAkBjuB,EAAQouB,MAAM5d,KAAI,SAAUuE,EAAM7Q,GACvD,MAAMC,EAAY,IAAI,IACpBiN,KAAKid,IAAI,EAAGtZ,EAAK,IACjB3D,KAAKyR,IAAI9N,EAAK,GAAK,GAAI,GACvB3D,KAAKid,IAAI,EAAGtZ,EAAK,IACjB3D,KAAKyR,IAAI9N,EAAK,GAAK,GAAI,IAEzB,GAAI5H,EAAQ,CACV,MAAMmhB,EAAsBpuB,KAAKquB,0BAA0BphB,EAAQjJ,GACnEC,EAAUO,KAAO0M,KAAKyR,IAAIyL,EAAoB5pB,KAAMP,EAAUO,MAC9DP,EAAUQ,KAAOyM,KAAKid,IAAIC,EAAoB3pB,KAAMR,EAAUQ,MAC9DR,EAAUU,KAAOuM,KAAKyR,IAAIyL,EAAoBzpB,KAAMV,EAAUU,MAC9DV,EAAUW,KAAOsM,KAAKid,IAAIC,EAAoBxpB,KAAMX,EAAUW,KAChE,CACA,OAAOX,CACT,GAAGjE,MACMiN,GACTjN,KAAKsuB,qBAAqBrhB,EAE9B,CAUAshB,iBAAiBthB,EAAQuhB,EAAMtqB,GAC7B,MAAMD,EAAYjE,KAAKquB,0BAA0BphB,EAAQuhB,GACzD,IAAK,IAAI1gB,EAAI7J,EAAUO,KAAM4N,EAAKnO,EAAUQ,KAAMqJ,GAAKsE,IAAMtE,EAC3D,IAAK,IAAI2gB,EAAIxqB,EAAUU,KAAM+pB,EAAKzqB,EAAUW,KAAM6pB,GAAKC,IAAMD,EAC3DvqB,EAAS,CAACsqB,EAAM1gB,EAAG2gB,GAGzB,CASAE,gCACE/oB,EACA1B,EACA0qB,EACAC,GAEA,IAAI5qB,EAAWM,EAAGG,EACdoqB,EAAkB,KAClB9qB,EAAI4B,EAAU,GAAK,EACE,IAArB5F,KAAKytB,aACPlpB,EAAIqB,EAAU,GACdlB,EAAIkB,EAAU,IAEdkpB,EAAkB9uB,KAAK+uB,mBAAmBnpB,EAAWipB,GAEvD,MAAO7qB,GAAKhE,KAAKoT,QAAS,CAYxB,GAXyB,IAArBpT,KAAKytB,aACPlpB,EAAI2M,KAAK8d,MAAMzqB,EAAI,GACnBG,EAAIwM,KAAK8d,MAAMtqB,EAAI,GACnBT,GAAY,OAAwBM,EAAGA,EAAGG,EAAGA,EAAGkqB,IAEhD3qB,EAAYjE,KAAKquB,0BACfS,EACA9qB,EACA4qB,GAGA1qB,EAASF,EAAGC,GACd,OAAO,IAEPD,CACJ,CACA,OAAO,CACT,CAOAkJ,YACE,OAAOlN,KAAK8tB,OACd,CAOAtC,aACE,OAAOxrB,KAAKmT,OACd,CAOAjQ,aACE,OAAOlD,KAAKoT,OACd,CAQAoL,UAAUxa,GACR,OAAIhE,KAAK2d,QACA3d,KAAK2d,QAEP3d,KAAK0tB,SAAS1pB,EACvB,CAQAirB,cAAcjrB,GACZ,OAAOhE,KAAKutB,aAAavpB,EAC3B,CAOAtC,iBACE,OAAO1B,KAAKutB,YACd,CAQA2B,2BAA2BtpB,EAAWgpB,EAAeC,GACnD,GAAIjpB,EAAU,GAAK5F,KAAKmT,QAAS,CAC/B,GAAyB,IAArBnT,KAAKytB,YAAmB,CAC1B,MAAMjpB,EAAsB,EAAfoB,EAAU,GACjBjB,EAAsB,EAAfiB,EAAU,GACvB,OAAO,OACLpB,EACAA,EAAO,EACPG,EACAA,EAAO,EACPiqB,EAEJ,CACA,MAAME,EAAkB9uB,KAAK+uB,mBAC3BnpB,EACAipB,GAAc7uB,KAAKiuB,YAErB,OAAOjuB,KAAKquB,0BACVS,EACAlpB,EAAU,GAAK,EACfgpB,EAEJ,CACA,OAAO,IACT,CAQAO,6BAA6BvpB,EAAW5B,EAAG4qB,GACzC,GAAI5qB,EAAIhE,KAAKmT,SAAWnP,EAAIhE,KAAKoT,QAC/B,OAAO,KAGT,MAAMgc,EAAaxpB,EAAU,GACvBypB,EAAazpB,EAAU,GACvB0pB,EAAa1pB,EAAU,GAE7B,GAAI5B,IAAMorB,EACR,OAAO,OACLC,EACAC,EACAD,EACAC,EACAV,GAIJ,GAAI5uB,KAAKytB,YAAa,CACpB,MAAM8B,EAASre,KAAK4b,IAAI9sB,KAAKytB,YAAazpB,EAAIorB,GACxC5qB,EAAO0M,KAAK8d,MAAMK,EAAaE,GAC/B5qB,EAAOuM,KAAK8d,MAAMM,EAAaC,GACrC,GAAIvrB,EAAIorB,EACN,OAAO,OAAwB5qB,EAAMA,EAAMG,EAAMA,EAAMiqB,GAGzD,MAAMnqB,EAAOyM,KAAK8d,MAAMO,GAAUF,EAAa,IAAM,EAC/CzqB,EAAOsM,KAAK8d,MAAMO,GAAUD,EAAa,IAAM,EACrD,OAAO,OAAwB9qB,EAAMC,EAAME,EAAMC,EAAMgqB,EACzD,CAEA,MAAME,EAAkB9uB,KAAK+uB,mBAAmBnpB,EAAW5F,KAAKiuB,YAChE,OAAOjuB,KAAKquB,0BAA0BS,EAAiB9qB,EAAG4qB,EAC5D,CASAP,0BAA0BphB,EAAQjJ,EAAG4qB,GACnC5uB,KAAKwvB,uBAAuBviB,EAAO,GAAIA,EAAO,GAAIjJ,GAAG,EAAOmpB,GAC5D,MAAM3oB,EAAO2oB,EAAa,GACpBxoB,EAAOwoB,EAAa,GAC1BntB,KAAKwvB,uBAAuBviB,EAAO,GAAIA,EAAO,GAAIjJ,GAAG,EAAMmpB,GAC3D,MAAM1oB,EAAO0oB,EAAa,GACpBvoB,EAAOuoB,EAAa,GAC1B,OAAO,OAAwB3oB,EAAMC,EAAME,EAAMC,EAAMgqB,EACzD,CAMA5C,mBAAmBpmB,GACjB,MAAM8mB,EAAS1sB,KAAKwe,UAAU5Y,EAAU,IAClCqM,EAAajS,KAAKivB,cAAcrpB,EAAU,IAC1C5C,GAAW,QAAOhD,KAAKiD,YAAY2C,EAAU,IAAK5F,KAAKguB,UAC7D,MAAO,CACLtB,EAAO,IAAM9mB,EAAU,GAAK,IAAO5C,EAAS,GAAKiP,EACjDya,EAAO,IAAM9mB,EAAU,GAAK,IAAO5C,EAAS,GAAKiP,EAErD,CAUA8c,mBAAmBnpB,EAAWipB,GAC5B,MAAMnC,EAAS1sB,KAAKwe,UAAU5Y,EAAU,IAClCqM,EAAajS,KAAKivB,cAAcrpB,EAAU,IAC1C5C,GAAW,QAAOhD,KAAKiD,YAAY2C,EAAU,IAAK5F,KAAKguB,UACvDxpB,EAAOkoB,EAAO,GAAK9mB,EAAU,GAAK5C,EAAS,GAAKiP,EAChDtN,EAAO+nB,EAAO,IAAM9mB,EAAU,GAAK,GAAK5C,EAAS,GAAKiP,EACtDxN,EAAOD,EAAOxB,EAAS,GAAKiP,EAC5BrN,EAAOD,EAAO3B,EAAS,GAAKiP,EAClC,OAAO,QAAezN,EAAMG,EAAMF,EAAMG,EAAMiqB,EAChD,CAaAY,kCAAkCrgB,EAAY6C,EAAYyd,GACxD,OAAO1vB,KAAK2vB,gCACVvgB,EAAW,GACXA,EAAW,GACX6C,GACA,EACAyd,EAEJ,CAeAC,gCACEprB,EACAG,EACAuN,EACA2d,EACAF,GAEA,MAAM1rB,EAAIhE,KAAK6vB,kBAAkB5d,GAC3BgG,EAAQhG,EAAajS,KAAKivB,cAAcjrB,GACxC0oB,EAAS1sB,KAAKwe,UAAUxa,GACxBhB,GAAW,QAAOhD,KAAKiD,YAAYe,GAAIhE,KAAKguB,UAElD,IAAIqB,EAAcpX,GAAS1T,EAAImoB,EAAO,IAAOza,EAAajP,EAAS,GAC/DssB,EAAcrX,GAASyU,EAAO,GAAKhoB,GAAMuN,EAAajP,EAAS,GAUnE,OARI4sB,GACFP,GAAa,QAAKA,EAAYjC,GAAY,EAC1CkC,GAAa,QAAKA,EAAYlC,GAAY,IAE1CiC,GAAa,QAAMA,EAAYjC,GAC/BkC,GAAa,QAAMA,EAAYlC,KAG1B,QAAwBppB,EAAGqrB,EAAYC,EAAYI,EAC5D,CAiBAF,uBAAuBjrB,EAAGG,EAAGV,EAAG4rB,EAA2BF,GACzD,MAAMhD,EAAS1sB,KAAKwe,UAAUxa,GACxBiO,EAAajS,KAAKivB,cAAcjrB,GAChChB,GAAW,QAAOhD,KAAKiD,YAAYe,GAAIhE,KAAKguB,UAElD,IAAIqB,GAAc9qB,EAAImoB,EAAO,IAAMza,EAAajP,EAAS,GACrDssB,GAAc5C,EAAO,GAAKhoB,GAAKuN,EAAajP,EAAS,GAUzD,OARI4sB,GACFP,GAAa,QAAKA,EAAYjC,GAAY,EAC1CkC,GAAa,QAAKA,EAAYlC,GAAY,IAE1CiC,GAAa,QAAMA,EAAYjC,GAC/BkC,GAAa,QAAMA,EAAYlC,KAG1B,QAAwBppB,EAAGqrB,EAAYC,EAAYI,EAC5D,CAUArD,yBAAyBjd,EAAYpL,EAAG0rB,GACtC,OAAO1vB,KAAKwvB,uBACVpgB,EAAW,GACXA,EAAW,GACXpL,GACA,EACA0rB,EAEJ,CAMAI,uBAAuBlqB,GACrB,OAAO5F,KAAKutB,aAAa3nB,EAAU,GACrC,CAUA3C,YAAYe,GACV,OAAIhE,KAAK6tB,UACA7tB,KAAK6tB,UAEP7tB,KAAK2tB,WAAW3pB,EACzB,CAMAynB,iBAAiBznB,GACf,OAAKhE,KAAK+tB,gBAKH/tB,KAAK+tB,gBAAgB/pB,GAJnBhE,KAAK8tB,QACR9tB,KAAKquB,0BAA0BruB,KAAK8tB,QAAS9pB,GAC7C,IAGR,CAmBA6rB,kBAAkB5d,EAAY8d,GAC5B,MAAM/rB,GAAI,QACRhE,KAAKutB,aACLtb,EACA8d,GAAiB,GAEnB,OAAO,QAAM/rB,EAAGhE,KAAKoT,QAASpT,KAAKmT,QACrC,CAQA6c,4BAA4BpqB,EAAWqqB,GACrC,OAAO,QACLA,EACA,EACAA,EAASliB,OACT,EACA/N,KAAK+uB,mBAAmBnpB,GAE5B,CAMA0oB,qBAAqBrhB,GACnB,MAAMc,EAAS/N,KAAKutB,aAAaxf,OAC3BmiB,EAAiB,IAAI9tB,MAAM2L,GACjC,IAAK,IAAI/J,EAAIhE,KAAKoT,QAASpP,EAAI+J,IAAU/J,EACvCksB,EAAelsB,GAAKhE,KAAKquB,0BAA0BphB,EAAQjJ,GAE7DhE,KAAK+tB,gBAAkBmC,CACzB,EAGF,S,2CC/oBO,MAAMC,EAAmB,GAMnBC,EAAoB,G,2FCF1B,SAASC,EAAmBC,EAAUvtB,GAC3C,MAAMwtB,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,UACnB,OAAO,SAOK9qB,EAAWP,EAAYpF,GAC/B,GAAK2F,EAGL,OAAO0qB,EACJjmB,QAAQkmB,EAAQ3qB,EAAU,GAAG6H,YAC7BpD,QAAQmmB,EAAQ5qB,EAAU,GAAG6H,YAC7BpD,QAAQomB,EAAQ7qB,EAAU,GAAG6H,YAC7BpD,QAAQqmB,GAAY,WACnB,MAAM1sB,EAAI4B,EAAU,GACd+qB,EAAQ5tB,EAAS0oB,iBAAiBznB,IACxC,OAAO2sB,EAAO,IACd,MAAMjsB,EAAIisB,EAAMhS,YAAc/Y,EAAU,GAAK,EAC7C,OAAOlB,EAAE+I,UACX,GAEN,CACF,CAOO,SAASmjB,EAAoBC,EAAW9tB,GAC7C,MAAM+tB,EAAMD,EAAU9iB,OAChBgjB,EAAmB,IAAI3uB,MAAM0uB,GACnC,IAAK,IAAIhjB,EAAI,EAAGA,EAAIgjB,IAAOhjB,EACzBijB,EAAiBjjB,GAAKuiB,EAAmBQ,EAAU/iB,GAAI/K,GAEzD,OAAOiuB,EAA2BD,EACpC,CAMO,SAASC,EAA2BD,GACzC,OAAgC,IAA5BA,EAAiBhjB,OACZgjB,EAAiB,GAEnB,SAOKnrB,EAAWP,EAAYpF,GAC/B,IAAK2F,EACH,OAEF,MAAMqrB,GAAI,QAAcrrB,GAClBoQ,GAAQ,QAAOib,EAAGF,EAAiBhjB,QACzC,OAAOgjB,EAAiB/a,GAAOpQ,EAAWP,EAAYpF,EAE1D,CACF,CAgBO,SAASixB,EAAUnqB,GACxB,MAAMF,EAAO,GACb,IAAIsqB,EAAQ,sBAAsBC,KAAKrqB,GACvC,GAAIoqB,EAAO,CAET,MAAME,EAAgBF,EAAM,GAAGG,WAAW,GACpCC,EAAeJ,EAAM,GAAGG,WAAW,GACzC,IAAIE,EACJ,IAAKA,EAAWH,EAAeG,GAAYD,IAAgBC,EACzD3qB,EAAKmH,KAAKjH,EAAIsD,QAAQ8mB,EAAM,GAAIM,OAAOC,aAAaF,KAEtD,OAAO3qB,CACT,CAEA,GADAsqB,EAAQ,kBAAkBC,KAAKrqB,GAC3BoqB,EAAO,CAET,MAAMQ,EAAOC,SAAST,EAAM,GAAI,IAChC,IAAK,IAAIrjB,EAAI8jB,SAAST,EAAM,GAAI,IAAKrjB,GAAK6jB,EAAM7jB,IAC9CjH,EAAKmH,KAAKjH,EAAIsD,QAAQ8mB,EAAM,GAAIrjB,EAAEL,aAEpC,OAAO5G,CACT,CAEA,OADAA,EAAKmH,KAAKjH,GACHF,CACT,C,gKC5FA,MAAMgrB,EAAO,IAAIzvB,MAAM,GAMhB,SAAS0vB,IACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EACzB,CAOO,SAASC,EAAMC,GACpB,OAAO1nB,EAAI0nB,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EACvC,CASO,SAASC,EAASC,EAAYC,GACnC,MAAMC,EAAKF,EAAW,GAChBG,EAAKH,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAChBS,EAAKT,EAAW,GAChBU,EAAKV,EAAW,GAChBW,EAAKX,EAAW,GAChBY,EAAKZ,EAAW,GAStB,OAPAD,EAAW,GAAKE,EAAKM,EAAKJ,EAAKK,EAC/BT,EAAW,GAAKG,EAAKK,EAAKH,EAAKI,EAC/BT,EAAW,GAAKE,EAAKQ,EAAKN,EAAKO,EAC/BX,EAAW,GAAKG,EAAKO,EAAKL,EAAKM,EAC/BX,EAAW,GAAKE,EAAKU,EAAKR,EAAKS,EAAKP,EACpCN,EAAW,GAAKG,EAAKS,EAAKP,EAAKQ,EAAKN,EAE7BP,CACT,CAaO,SAAS5nB,EAAI0nB,EAAWnQ,EAAGE,EAAGiR,EAAGhR,EAAGnH,EAAG7G,GAO5C,OANAge,EAAU,GAAKnQ,EACfmQ,EAAU,GAAKjQ,EACfiQ,EAAU,GAAKgB,EACfhB,EAAU,GAAKhQ,EACfgQ,EAAU,GAAKnX,EACfmX,EAAU,GAAKhe,EACRge,CACT,CAQO,SAASiB,EAAaf,EAAYC,GAOvC,OANAD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,CACT,CAWO,SAASgB,EAAMlB,EAAW5iB,GAC/B,MAAM7K,EAAI6K,EAAW,GACf1K,EAAI0K,EAAW,GAGrB,OAFAA,EAAW,GAAK4iB,EAAU,GAAKztB,EAAIytB,EAAU,GAAKttB,EAAIstB,EAAU,GAChE5iB,EAAW,GAAK4iB,EAAU,GAAKztB,EAAIytB,EAAU,GAAKttB,EAAIstB,EAAU,GACzD5iB,CACT,CAQO,SAAS+jB,EAAOnB,EAAWvR,GAChC,MAAMwD,EAAM/S,KAAK+S,IAAIxD,GACfqB,EAAM5Q,KAAK4Q,IAAIrB,GACrB,OAAOwR,EAASD,EAAW1nB,EAAIunB,EAAM5N,EAAKnC,GAAMA,EAAKmC,EAAK,EAAG,GAC/D,CASO,SAAShM,EAAM+Z,EAAWztB,EAAGG,GAClC,OAAOutB,EAASD,EAAW1nB,EAAIunB,EAAMttB,EAAG,EAAG,EAAGG,EAAG,EAAG,GACtD,CASO,SAAS0uB,EAAUC,EAAQ9uB,EAAGG,GACnC,OAAO4F,EAAI+oB,EAAQ9uB,EAAG,EAAG,EAAGG,EAAG,EAAG,EACpC,CASO,SAAS4e,EAAU0O,EAAWsB,EAAIC,GACvC,OAAOtB,EAASD,EAAW1nB,EAAIunB,EAAM,EAAG,EAAG,EAAG,EAAGyB,EAAIC,GACvD,CAeO,SAASC,EAAQxB,EAAWyB,EAAKC,EAAKC,EAAIC,EAAInT,EAAOoT,EAAKC,GAC/D,MAAMhS,EAAM5Q,KAAK4Q,IAAIrB,GACfwD,EAAM/S,KAAK+S,IAAIxD,GAOrB,OANAuR,EAAU,GAAK2B,EAAK1P,EACpB+N,EAAU,GAAK4B,EAAK9R,EACpBkQ,EAAU,IAAM2B,EAAK7R,EACrBkQ,EAAU,GAAK4B,EAAK3P,EACpB+N,EAAU,GAAK6B,EAAMF,EAAK1P,EAAM6P,EAAMH,EAAK7R,EAAM2R,EACjDzB,EAAU,GAAK6B,EAAMD,EAAK9R,EAAMgS,EAAMF,EAAK3P,EAAMyP,EAC1C1B,CACT,CAoCO,SAAS+B,EAAYV,EAAQW,GAClC,MAAMC,EAAMC,EAAYF,IACxB,OAAe,IAARC,EAAW,IAElB,MAAMpS,EAAImS,EAAO,GACXjS,EAAIiS,EAAO,GACXhB,EAAIgB,EAAO,GACXhS,EAAIgS,EAAO,GACXnZ,EAAImZ,EAAO,GACXhgB,EAAIggB,EAAO,GASjB,OAPAX,EAAO,GAAKrR,EAAIiS,EAChBZ,EAAO,IAAMtR,EAAIkS,EACjBZ,EAAO,IAAML,EAAIiB,EACjBZ,EAAO,GAAKxR,EAAIoS,EAChBZ,EAAO,IAAML,EAAIhf,EAAIgO,EAAInH,GAAKoZ,EAC9BZ,EAAO,KAAOxR,EAAI7N,EAAI+N,EAAIlH,GAAKoZ,EAExBZ,CACT,CAOO,SAASa,EAAYC,GAC1B,OAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EACxC,CAMA,IAAIC,EAQG,SAAS3mB,EAAS0mB,GACvB,MAAME,EAAkB,UAAYF,EAAI/rB,KAAK,MAAQ,IACrD,GAAI,KACF,OAAOisB,EAET,MAAMC,EACJF,IAAuBA,EAAqBvY,SAASC,cAAc,QAErE,OADAwY,EAAK9b,MAAMwZ,UAAYqC,EAChBC,EAAK9b,MAAMwZ,SACpB,C,kBCzRO,SAASuC,IACd,MAAM,IAAIC,MAAM,iCAClB,C,2BAOA,IAAIC,EAAc,EAWX,SAASC,EAAO7hB,GACrB,OAAOA,EAAI8hB,SAAW9hB,EAAI8hB,OAASlD,SAASgD,GAC9C,C","sources":["webpack://@openeo/web-editor/./node_modules/ol/source/Source.js","webpack://@openeo/web-editor/./node_modules/ol/source/Tile.js","webpack://@openeo/web-editor/./node_modules/ol/source/TileEventType.js","webpack://@openeo/web-editor/./node_modules/ol/source/UrlTile.js","webpack://@openeo/web-editor/./node_modules/ol/source/TileImage.js","webpack://@openeo/web-editor/./node_modules/ol/source/Vector.js","webpack://@openeo/web-editor/./node_modules/ol/source/VectorEventType.js","webpack://@openeo/web-editor/./node_modules/ol/source/XYZ.js","webpack://@openeo/web-editor/./node_modules/ol/structs/LRUCache.js","webpack://@openeo/web-editor/./node_modules/ol/structs/PriorityQueue.js","webpack://@openeo/web-editor/./node_modules/ol/structs/RBush.js","webpack://@openeo/web-editor/./node_modules/ol/style/Circle.js","webpack://@openeo/web-editor/./node_modules/ol/style/Fill.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconImage.js","webpack://@openeo/web-editor/./node_modules/ol/style/Icon.js","webpack://@openeo/web-editor/./node_modules/ol/style/IconImageCache.js","webpack://@openeo/web-editor/./node_modules/ol/style/Image.js","webpack://@openeo/web-editor/./node_modules/ol/style/RegularShape.js","webpack://@openeo/web-editor/./node_modules/ol/style/Stroke.js","webpack://@openeo/web-editor/./node_modules/ol/style/Style.js","webpack://@openeo/web-editor/./node_modules/ol/style/Text.js","webpack://@openeo/web-editor/./node_modules/ol/style/flat.js","webpack://@openeo/web-editor/./node_modules/ol/tilecoord.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/TileGrid.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/common.js","webpack://@openeo/web-editor/./node_modules/ol/tileurlfunction.js","webpack://@openeo/web-editor/./node_modules/ol/transform.js","webpack://@openeo/web-editor/./node_modules/ol/util.js"],"sourcesContent":["/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.4.0';\n"],"names":["Source","constructor","options","super","this","projection","get","attributions_","adaptAttributions","attributions","attributionsCollapsible_","undefined","attributionsCollapsible","loading","state_","state","wrapX_","wrapX","interpolate_","interpolate","viewResolver","viewRejector","self","viewPromise_","Promise","resolve","reject","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getView","getState","getWrapX","getInterpolate","refresh","changed","setAttributions","setState","attributionLike","Array","isArray","frameState","TileSource","on","once","un","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileGrid","tileSize","getTileSize","getMinZoom","tileCache","cacheSize","tmpSize","key_","key","tileOptions","transition","zDirection","canExpireCache","expireCache","usedTiles","getTileCacheForProjection","forEachLoadedTile","z","tileRange","callback","tile","tileCoordKey","loaded","covered","x","minX","maxX","y","minY","maxY","containsKey","LOADED","getGutterForProjection","getKey","setKey","getOpaque","getTileGridForProjection","getTile","pixelRatio","getTileGrid","sourceProjection","equivalent","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","tileCoord","isGlobal","clear","updateCacheSize","tileCount","highWaterMark","useTile","TileSourceEvent","type","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile","generateTileUrlFunction_","tileUrlFunction","prototype","tileLoadFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","Object","getPrototypeOf","bind","getUrls","handleTileChange","event","uid","tileState","TileState","LOADING","TileEventType","ERROR","dispatchEvent","setTileLoadFunction","setTileUrlFunction","pruneExceptNewestZ","join","TileImage","defaultTileLoadFunction","crossOrigin","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","id","getGutter","thisProj","projKey","TileCache","createTile_","urlTileCoord","tileUrl","IDLE","EMPTY","addEventListener","EventType","CHANGE","getTileInternal","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","interimTile","refreshInterimChain","replace","set","setRenderReprojectionEdges","render","setTileGridForProjection","tilegrid","proj","imageTile","src","getImage","VectorSourceEvent","feature","features","VectorSource","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","remove","setupChangeEvents_","geometry","getGeometry","extent","getExtent","insert","ADDFEATURE","handleFeatureChange_","PROPERTYCHANGE","valid","getId","toString","addFeatures","extents","newFeatures","geometryFeatures","i","length","push","load","hasListener","modifyingCollection","evt","REMOVEFEATURE","ADD","element","REMOVE","removeFeature","fast","featureId","keys","forEach","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","result","getFeaturesCollection","getFeatures","slice","getAll","values","getFeaturesAtCoordinate","getFeaturesInExtent","multiWorld","canWrapX","getInExtent","concat","map","anExtent","getClosestFeatureToCoordinate","filter","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","previousMinSquaredDistance","closestPointXY","minDistance","Math","sqrt","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","isEmpty","getLength","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","ii","extentToLoad","alreadyLoaded","object","FEATURESLOADSTART","call","FEATURESLOADEND","FEATURESLOADERROR","removeLoadedExtent","obj","featureChangeKeys","removed","setLoader","XYZ","maxResolution","maxZoom","minZoom","gutter_","gutter","LRUCache","count_","entries_","oldest_","newest_","getCount","keep","pop","hasOwnProperty","f","entry","value_","newer","older","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","peek","value","setSize","size","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","index","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","RBush","maxEntries","rbush_","items_","item","items","l","bbox","all","search","forEach_","data","toJSON","rbush","CircleStyle","radius","points","fill","stroke","scale","rotation","rotateWithView","displacement","declutterMode","clone","getScale","style","getFill","getStroke","getRadius","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","setOpacity","getOpacity","setRadius","radius_","Fill","color_","color","getColor","setColor","taintedTestContext","IconImage","image","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","unlisten_","imageState_","size_","src_","tainted_","initializeImage_","Image","isTainted_","ImageState","willReadFrequently","drawImage","getImageData","e","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","width","height","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","context","fillRect","canvas","getSize","getSrc","document","createElement","ceil","ctx","getContext","globalCompositeOperation","fillStyle","iconImage","calculateScale","wantedWidth","wantedHeight","Icon","opacity","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize_","imgSize","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","origin_","HTMLCanvasElement","complete","initialOptions_","onload","unlistenImageChange","imageSize","setScale","listenImageChange","getAnchor","getScaleArray","setAnchor","getImageSize","getOrigin","iconImageSize","getWidth","getHeight","listener","removeEventListener","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","colorString","shared","ImageStyle","opacity_","rotateWithView_","rotation_","scale_","scaleArray_","displacement_","declutterMode_","setDisplacement","setRotateWithView","setRotation","RegularShape","hitDetectionCanvas_","fill_","points_","radius1","radius2_","radius2","angle_","angle","stroke_","renderOptions_","getPoints","getRadius2","getAngle","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","tmp","alpha","PI","a","sin","b","d","miterRatio","k","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","max","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","add","maxRadius","translate","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","cos","closePath","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","text","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","setZIndex","toFunction","styleFunction","styles","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","DEFAULT_FILL_COLOR","Text","font_","font","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","toStyle","flatStyle","prefix","iconSrc","iconImg","icon","shapePoints","shape","circleRadius","circle","Circle","createOrUpdate","getKeyZXY","fromKey","split","Number","hash","withinExtentAndZ","getMaxZoom","getFullTileRange","containsXY","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","center","getTileCoordCenter","projectionExtent","extentFromProjection","worldWidth","worldsAway","getTileCoordForCoordAndZ","createForExtent","corner","resolutions","resolutionsFromExtent","origin","createXYZ","xyzOptions","gridOptions","pow","half","METERS_PER_UNIT","degrees","getMetersPerUnit","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","resolutions_","origins","zoomFactor_","origins_","tileSizes_","tileSizes","tileSize_","extent_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","min","restrictedTileRange","getTileRangeForExtentAndZ","calculateTileRanges_","forEachTileCoord","zoom","j","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordExtent","floor","getResolution","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","factor","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","expandUrl","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","String","fromCharCode","stop","parseInt","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","setFromArray","apply","rotate","makeScale","target","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","source","det","determinant","mat","transformStringDiv","transformString","node","abstract","Error","uidCounter_","getUid","ol_uid"],"sourceRoot":""}
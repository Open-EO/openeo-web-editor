{"version":3,"file":"js/chunk-vendors-be93acbf.c42b4a8f.js","mappings":"yJA0BA,SAASA,EAAWC,GAClB,GAAoB,kBAATA,EACT,MAAM,IAAIC,UAAU,mCAAqCC,KAAKC,UAAUH,GAE5E,CAGA,SAASI,EAAqBJ,EAAMK,GAMlC,IALA,IAIIC,EAJAC,EAAM,GACNC,EAAoB,EACpBC,GAAa,EACbC,EAAO,EAEFC,EAAI,EAAGA,GAAKX,EAAKY,SAAUD,EAAG,CACrC,GAAIA,EAAIX,EAAKY,OACXN,EAAON,EAAKa,WAAWF,OACpB,IAAa,KAATL,EACP,MAEAA,EAAO,EAAQ,CACjB,GAAa,KAATA,EAAmB,CACrB,GAAIG,IAAcE,EAAI,GAAc,IAATD,QAEpB,GAAID,IAAcE,EAAI,GAAc,IAATD,EAAY,CAC5C,GAAIH,EAAIK,OAAS,GAA2B,IAAtBJ,GAA8D,KAAnCD,EAAIM,WAAWN,EAAIK,OAAS,IAAsD,KAAnCL,EAAIM,WAAWN,EAAIK,OAAS,GAC1H,GAAIL,EAAIK,OAAS,EAAG,CAClB,IAAIE,EAAiBP,EAAIQ,YAAY,KACrC,GAAID,IAAmBP,EAAIK,OAAS,EAAG,EACb,IAApBE,GACFP,EAAM,GACNC,EAAoB,IAEpBD,EAAMA,EAAIS,MAAM,EAAGF,GACnBN,EAAoBD,EAAIK,OAAS,EAAIL,EAAIQ,YAAY,MAEvDN,EAAYE,EACZD,EAAO,EACP,QACF,CACF,MAAO,GAAmB,IAAfH,EAAIK,QAA+B,IAAfL,EAAIK,OAAc,CAC/CL,EAAM,GACNC,EAAoB,EACpBC,EAAYE,EACZD,EAAO,EACP,QACF,CAEEL,IACEE,EAAIK,OAAS,EACfL,GAAO,MAEPA,EAAM,KACRC,EAAoB,EAExB,MACMD,EAAIK,OAAS,EACfL,GAAO,IAAMP,EAAKgB,MAAMP,EAAY,EAAGE,GAEvCJ,EAAMP,EAAKgB,MAAMP,EAAY,EAAGE,GAClCH,EAAoBG,EAAIF,EAAY,EAEtCA,EAAYE,EACZD,EAAO,CACT,MAAoB,KAATJ,IAA+B,IAAVI,IAC5BA,EAEFA,GAAQ,CAEZ,CACA,OAAOH,CACT,CAEA,SAASU,EAAQC,EAAKC,GACpB,IAAIC,EAAMD,EAAWC,KAAOD,EAAWE,KACnCC,EAAOH,EAAWG,OAASH,EAAWI,MAAQ,KAAOJ,EAAWK,KAAO,IAC3E,OAAKJ,EAGDA,IAAQD,EAAWE,KACdD,EAAME,EAERF,EAAMF,EAAMI,EALVA,CAMX,CAEA,IAAIG,EAAQ,CAEVC,QAAS,WAKP,IAJA,IAEIC,EAFAC,EAAe,GACfC,GAAmB,EAGdlB,EAAImB,UAAUlB,OAAS,EAAGD,IAAM,IAAMkB,EAAkBlB,IAAK,CACpE,IAAIX,EACAW,GAAK,EACPX,EAAO8B,UAAUnB,SAELoB,IAARJ,IACFA,EAAMK,EAAQL,OAChB3B,EAAO2B,GAGT5B,EAAWC,GAGS,IAAhBA,EAAKY,SAITgB,EAAe5B,EAAO,IAAM4B,EAC5BC,EAA0C,KAAvB7B,EAAKa,WAAW,GACrC,CAQA,OAFAe,EAAexB,EAAqBwB,GAAeC,GAE/CA,EACED,EAAahB,OAAS,EACjB,IAAMgB,EAEN,IACAA,EAAahB,OAAS,EACxBgB,EAEA,GAEX,EAEAK,UAAW,SAAmBjC,GAG5B,GAFAD,EAAWC,GAES,IAAhBA,EAAKY,OAAc,MAAO,IAE9B,IAAIsB,EAAoC,KAAvBlC,EAAKa,WAAW,GAC7BsB,EAAyD,KAArCnC,EAAKa,WAAWb,EAAKY,OAAS,GAQtD,OALAZ,EAAOI,EAAqBJ,GAAOkC,GAEf,IAAhBlC,EAAKY,QAAiBsB,IAAYlC,EAAO,KACzCA,EAAKY,OAAS,GAAKuB,IAAmBnC,GAAQ,KAE9CkC,EAAmB,IAAMlC,EACtBA,CACT,EAEAkC,WAAY,SAAoBlC,GAE9B,OADAD,EAAWC,GACJA,EAAKY,OAAS,GAA4B,KAAvBZ,EAAKa,WAAW,EAC5C,EAEAuB,KAAM,WACJ,GAAyB,IAArBN,UAAUlB,OACZ,MAAO,IAET,IADA,IAAIyB,EACK1B,EAAI,EAAGA,EAAImB,UAAUlB,SAAUD,EAAG,CACzC,IAAI2B,EAAMR,UAAUnB,GACpBZ,EAAWuC,GACPA,EAAI1B,OAAS,SACAmB,IAAXM,EACFA,EAASC,EAETD,GAAU,IAAMC,EAEtB,CACA,YAAeP,IAAXM,EACK,IACFZ,EAAMQ,UAAUI,EACzB,EAEAE,SAAU,SAAkBC,EAAMC,GAIhC,GAHA1C,EAAWyC,GACXzC,EAAW0C,GAEPD,IAASC,EAAI,MAAO,GAKxB,GAHAD,EAAOf,EAAMC,QAAQc,GACrBC,EAAKhB,EAAMC,QAAQe,GAEfD,IAASC,EAAI,MAAO,GAIxB,IADA,IAAIC,EAAY,EACTA,EAAYF,EAAK5B,SAAU8B,EAChC,GAAmC,KAA/BF,EAAK3B,WAAW6B,GAClB,MAOJ,IALA,IAAIC,EAAUH,EAAK5B,OACfgC,EAAUD,EAAUD,EAGpBG,EAAU,EACPA,EAAUJ,EAAG7B,SAAUiC,EAC5B,GAA+B,KAA3BJ,EAAG5B,WAAWgC,GAChB,MASJ,IAPA,IAAIC,EAAQL,EAAG7B,OACXmC,EAAQD,EAAQD,EAGhBjC,EAASgC,EAAUG,EAAQH,EAAUG,EACrCC,GAAiB,EACjBrC,EAAI,EACDA,GAAKC,IAAUD,EAAG,CACvB,GAAIA,IAAMC,EAAQ,CAChB,GAAImC,EAAQnC,EAAQ,CAClB,GAAmC,KAA/B6B,EAAG5B,WAAWgC,EAAUlC,GAG1B,OAAO8B,EAAGzB,MAAM6B,EAAUlC,EAAI,GACzB,GAAU,IAANA,EAGT,OAAO8B,EAAGzB,MAAM6B,EAAUlC,EAE9B,MAAWiC,EAAUhC,IACoB,KAAnC4B,EAAK3B,WAAW6B,EAAY/B,GAG9BqC,EAAgBrC,EACD,IAANA,IAGTqC,EAAgB,IAGpB,KACF,CACA,IAAIC,EAAWT,EAAK3B,WAAW6B,EAAY/B,GACvCuC,EAAST,EAAG5B,WAAWgC,EAAUlC,GACrC,GAAIsC,IAAaC,EACf,MACoB,KAAbD,IACPD,EAAgBrC,EACpB,CAEA,IAAIwC,EAAM,GAGV,IAAKxC,EAAI+B,EAAYM,EAAgB,EAAGrC,GAAKgC,IAAWhC,EAClDA,IAAMgC,GAAkC,KAAvBH,EAAK3B,WAAWF,KAChB,IAAfwC,EAAIvC,OACNuC,GAAO,KAEPA,GAAO,OAMb,OAAIA,EAAIvC,OAAS,EACRuC,EAAMV,EAAGzB,MAAM6B,EAAUG,IAEhCH,GAAWG,EACoB,KAA3BP,EAAG5B,WAAWgC,MACdA,EACGJ,EAAGzB,MAAM6B,GAEpB,EAEAO,UAAW,SAAmBpD,GAC5B,OAAOA,CACT,EAEAqD,QAAS,SAAiBrD,GAExB,GADAD,EAAWC,GACS,IAAhBA,EAAKY,OAAc,MAAO,IAK9B,IAJA,IAAIN,EAAON,EAAKa,WAAW,GACvByC,EAAmB,KAAThD,EACViD,GAAO,EACPC,GAAe,EACV7C,EAAIX,EAAKY,OAAS,EAAGD,GAAK,IAAKA,EAEtC,GADAL,EAAON,EAAKa,WAAWF,GACV,KAATL,GACA,IAAKkD,EAAc,CACjBD,EAAM5C,EACN,KACF,OAGF6C,GAAe,EAInB,OAAa,IAATD,EAAmBD,EAAU,IAAM,IACnCA,GAAmB,IAARC,EAAkB,KAC1BvD,EAAKgB,MAAM,EAAGuC,EACvB,EAEAE,SAAU,SAAkBzD,EAAMwB,GAChC,QAAYO,IAARP,GAAoC,kBAARA,EAAkB,MAAM,IAAIvB,UAAU,mCACtEF,EAAWC,GAEX,IAGIW,EAHA+C,EAAQ,EACRH,GAAO,EACPC,GAAe,EAGnB,QAAYzB,IAARP,GAAqBA,EAAIZ,OAAS,GAAKY,EAAIZ,QAAUZ,EAAKY,OAAQ,CACpE,GAAIY,EAAIZ,SAAWZ,EAAKY,QAAUY,IAAQxB,EAAM,MAAO,GACvD,IAAI2D,EAASnC,EAAIZ,OAAS,EACtBgD,GAAoB,EACxB,IAAKjD,EAAIX,EAAKY,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACrC,IAAIL,EAAON,EAAKa,WAAWF,GAC3B,GAAa,KAATL,GAGA,IAAKkD,EAAc,CACjBE,EAAQ/C,EAAI,EACZ,KACF,OAEwB,IAAtBiD,IAGFJ,GAAe,EACfI,EAAmBjD,EAAI,GAErBgD,GAAU,IAERrD,IAASkB,EAAIX,WAAW8C,IACR,MAAZA,IAGJJ,EAAM5C,IAKRgD,GAAU,EACVJ,EAAMK,GAId,CAGA,OADIF,IAAUH,EAAKA,EAAMK,GAAmC,IAATL,IAAYA,EAAMvD,EAAKY,QACnEZ,EAAKgB,MAAM0C,EAAOH,EAC3B,CACE,IAAK5C,EAAIX,EAAKY,OAAS,EAAGD,GAAK,IAAKA,EAClC,GAA2B,KAAvBX,EAAKa,WAAWF,IAGhB,IAAK6C,EAAc,CACjBE,EAAQ/C,EAAI,EACZ,KACF,OACkB,IAAT4C,IAGXC,GAAe,EACfD,EAAM5C,EAAI,GAId,OAAa,IAAT4C,EAAmB,GAChBvD,EAAKgB,MAAM0C,EAAOH,EAE7B,EAEAM,QAAS,SAAiB7D,GACxBD,EAAWC,GAQX,IAPA,IAAI8D,GAAY,EACZC,EAAY,EACZR,GAAO,EACPC,GAAe,EAGfQ,EAAc,EACTrD,EAAIX,EAAKY,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACzC,IAAIL,EAAON,EAAKa,WAAWF,GAC3B,GAAa,KAATL,GASS,IAATiD,IAGFC,GAAe,EACfD,EAAM5C,EAAI,GAEC,KAATL,GAEkB,IAAdwD,EACFA,EAAWnD,EACY,IAAhBqD,IACPA,EAAc,IACK,IAAdF,IAGTE,GAAe,QArBb,IAAKR,EAAc,CACjBO,EAAYpD,EAAI,EAChB,KACF,CAoBN,CAEA,OAAkB,IAAdmD,IAA4B,IAATP,GAEH,IAAhBS,GAEgB,IAAhBA,GAAqBF,IAAaP,EAAM,GAAKO,IAAaC,EAAY,EACjE,GAEF/D,EAAKgB,MAAM8C,EAAUP,EAC9B,EAEAU,OAAQ,SAAgB9C,GACtB,GAAmB,OAAfA,GAA6C,kBAAfA,EAChC,MAAM,IAAIlB,UAAU,0EAA4EkB,GAElG,OAAOF,EAAQ,IAAKE,EACtB,EAEA+C,MAAO,SAAelE,GACpBD,EAAWC,GAEX,IAAImE,EAAM,CAAE9C,KAAM,GAAID,IAAK,GAAIE,KAAM,GAAIE,IAAK,GAAID,KAAM,IACxD,GAAoB,IAAhBvB,EAAKY,OAAc,OAAOuD,EAC9B,IAEIT,EAFApD,EAAON,EAAKa,WAAW,GACvBqB,EAAsB,KAAT5B,EAEb4B,GACFiC,EAAI9C,KAAO,IACXqC,EAAQ,GAERA,EAAQ,EAaV,IAXA,IAAII,GAAY,EACZC,EAAY,EACZR,GAAO,EACPC,GAAe,EACf7C,EAAIX,EAAKY,OAAS,EAIlBoD,EAAc,EAGXrD,GAAK+C,IAAS/C,EAEnB,GADAL,EAAON,EAAKa,WAAWF,GACV,KAATL,GASS,IAATiD,IAGFC,GAAe,EACfD,EAAM5C,EAAI,GAEC,KAATL,GAEkB,IAAdwD,EAAiBA,EAAWnD,EAA2B,IAAhBqD,IAAmBA,EAAc,IACrD,IAAdF,IAGXE,GAAe,QAlBb,IAAKR,EAAc,CACjBO,EAAYpD,EAAI,EAChB,KACF,CAwCN,OArBkB,IAAdmD,IAA4B,IAATP,GAEP,IAAhBS,GAEgB,IAAhBA,GAAqBF,IAAaP,EAAM,GAAKO,IAAaC,EAAY,GACvD,IAATR,IACiCY,EAAI7C,KAAO6C,EAAI5C,KAAhC,IAAdwC,GAAmB7B,EAAkClC,EAAKgB,MAAM,EAAGuC,GAAgCvD,EAAKgB,MAAM+C,EAAWR,KAG7G,IAAdQ,GAAmB7B,GACrBiC,EAAI5C,KAAOvB,EAAKgB,MAAM,EAAG8C,GACzBK,EAAI7C,KAAOtB,EAAKgB,MAAM,EAAGuC,KAEzBY,EAAI5C,KAAOvB,EAAKgB,MAAM+C,EAAWD,GACjCK,EAAI7C,KAAOtB,EAAKgB,MAAM+C,EAAWR,IAEnCY,EAAI3C,IAAMxB,EAAKgB,MAAM8C,EAAUP,IAG7BQ,EAAY,EAAGI,EAAI/C,IAAMpB,EAAKgB,MAAM,EAAG+C,EAAY,GAAY7B,IAAYiC,EAAI/C,IAAM,KAElF+C,CACT,EAEAjD,IAAK,IACLkD,UAAW,IACXC,MAAO,KACP5C,MAAO,MAGTA,EAAMA,MAAQA,EAEd6C,EAAOC,QAAU9C,C,YC/gBjB,IAOI+C,EACAC,EARAzC,EAAUsC,EAAOC,QAAU,CAAC,EAUhC,SAASG,IACL,MAAM,IAAIC,MAAM,kCACpB,CACA,SAASC,IACL,MAAM,IAAID,MAAM,oCACpB,CAqBA,SAASE,EAAWC,GAChB,GAAIN,IAAqBO,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKN,IAAqBE,IAAqBF,IAAqBO,WAEhE,OADAP,EAAmBO,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAON,EAAiBM,EAAK,EASjC,CARE,MAAME,GACJ,IAEI,OAAOR,EAAiBS,KAAK,KAAMH,EAAK,EAI5C,CAHE,MAAME,GAEJ,OAAOR,EAAiBS,KAAKC,KAAMJ,EAAK,EAC5C,CACJ,CAGJ,CACA,SAASK,EAAgBC,GACrB,GAAIX,IAAuBY,aAEvB,OAAOA,aAAaD,GAGxB,IAAKX,IAAuBG,IAAwBH,IAAuBY,aAEvE,OADAZ,EAAqBY,aACdA,aAAaD,GAExB,IAEI,OAAOX,EAAmBW,EAU9B,CATE,MAAOJ,GACL,IAEI,OAAOP,EAAmBQ,KAAK,KAAMG,EAKzC,CAJE,MAAOJ,GAGL,OAAOP,EAAmBQ,KAAKC,KAAME,EACzC,CACJ,CAIJ,EAvEC,WACG,IAEQZ,EADsB,oBAAfO,WACYA,WAEAL,CAI3B,CAFE,MAAOM,GACLR,EAAmBE,CACvB,CACA,IAEQD,EADwB,oBAAjBY,aACcA,aAEAT,CAI7B,CAFE,MAAOI,GACLP,EAAqBG,CACzB,CACJ,EAnBA,GAwEA,IAEIU,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAa1E,OACb2E,EAAQD,EAAaK,OAAOJ,GAE5BE,GAAc,EAEdF,EAAM3E,QACNgF,IAER,CAEA,SAASA,IACL,IAAIJ,EAAJ,CAGA,IAAIK,EAAUhB,EAAWa,GACzBF,GAAW,EAEX,IAAIM,EAAMP,EAAM3E,OAChB,MAAMkF,EAAK,CACPR,EAAeC,EACfA,EAAQ,GACR,QAASE,EAAaK,EACdR,GACAA,EAAaG,GAAYM,MAGjCN,GAAc,EACdK,EAAMP,EAAM3E,MAChB,CACA0E,EAAe,KACfE,GAAW,EACXL,EAAgBU,EAlBhB,CAmBJ,CAgBA,SAASG,EAAKlB,EAAKmB,GACff,KAAKJ,IAAMA,EACXI,KAAKe,MAAQA,CACjB,CAWA,SAASC,IAAQ,CA5BjBlE,EAAQmE,SAAW,SAAUrB,GACzB,IAAIsB,EAAO,IAAIC,MAAMvE,UAAUlB,OAAS,GACxC,GAAIkB,UAAUlB,OAAS,EACnB,IAAK,IAAID,EAAI,EAAGA,EAAImB,UAAUlB,OAAQD,IAClCyF,EAAKzF,EAAI,GAAKmB,UAAUnB,GAGhC4E,EAAMe,KAAK,IAAIN,EAAKlB,EAAKsB,IACJ,IAAjBb,EAAM3E,QAAiB4E,GACvBX,EAAWe,EAEnB,EAOAI,EAAKO,UAAUR,IAAM,WACjBb,KAAKJ,IAAI0B,MAAM,KAAMtB,KAAKe,MAC9B,EACAjE,EAAQyE,MAAQ,UAChBzE,EAAQ0E,SAAU,EAClB1E,EAAQ2E,IAAM,CAAC,EACf3E,EAAQ4E,KAAO,GACf5E,EAAQ6E,QAAU,GAClB7E,EAAQ8E,SAAW,CAAC,EAIpB9E,EAAQ+E,GAAKb,EACblE,EAAQgF,YAAcd,EACtBlE,EAAQiF,KAAOf,EACflE,EAAQkF,IAAMhB,EACdlE,EAAQmF,eAAiBjB,EACzBlE,EAAQoF,mBAAqBlB,EAC7BlE,EAAQqF,KAAOnB,EACflE,EAAQsF,gBAAkBpB,EAC1BlE,EAAQuF,oBAAsBrB,EAE9BlE,EAAQwF,UAAY,SAAUjG,GAAQ,MAAO,EAAG,EAEhDS,EAAQyF,QAAU,SAAUlG,GACxB,MAAM,IAAIoD,MAAM,mCACpB,EAEA3C,EAAQL,IAAM,WAAc,MAAO,GAAI,EACvCK,EAAQ0F,MAAQ,SAAUtG,GACtB,MAAM,IAAIuD,MAAM,iCACpB,EACA3C,EAAQ2F,MAAQ,WAAa,OAAO,CAAG,C","sources":["webpack://@openeo/web-editor/./node_modules/path-browserify/index.js","webpack://@openeo/web-editor/./node_modules/process/browser.js"],"sourcesContent":["// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":["assertPath","path","TypeError","JSON","stringify","normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","i","length","charCodeAt","lastSlashIndex","lastIndexOf","slice","_format","sep","pathObject","dir","root","base","name","ext","posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","process","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","parse","ret","delimiter","win32","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","this","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask"],"sourceRoot":""}
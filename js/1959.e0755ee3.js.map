{"version":3,"file":"js/1959.e0755ee3.js","mappings":"iOASA,SACAA,OAAAA,CAAAA,EAAAA,GACAC,QAAAA,CAIA,wBACA,WAGAC,EAFA,gBACA,sBACAA,EAAAA,OAAAA,QAAAA,KAAAA,KAAAA,GAAAA,EAAAA,EAAAA,aAAAA,KAEA,uCACAA,EAGAA,KAIAA,EAGA,6BACA,wBAEA,GACA,mCAEA,EAEAC,cAAAA,EAAAA,GAAAA,GACA,yCACA,aACA,yEACA,qBAEA,WACAC,WACAC,WAAAA,EACAC,OAAAA,IAEA,WACAC,MAAAA,iBACAC,wBAAAA,EACAC,WASA,OAPA,GACA,wBAEA,qBAGA,2DACA,CACA,EAEAC,gBAAAA,GACA,mBAEA,wBACAC,EAAAA,IAAAA,IAEAA,EAAAA,QAAAA,KACA,ICzEoQ,I,ICAhQC,EAAQC,E,UAORC,GAAY,OACd,EACAF,EACAC,GACA,EACA,KACA,KACA,MAIF,QAAeC,EAAiB,O,mCClBhC,IAAIF,EAAS,WAAkB,IAAIG,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAQF,EAAII,MAAMC,OAAS,EAAGH,EAAG,MAAM,CAACI,YAAY,mCAAmCC,MAAM,CAACC,QAASR,EAAII,MAAMC,OAAS,GAAGI,GAAG,CAAC,MAAQT,EAAIU,SAAS,CAACV,EAAIW,GAAG,IAAIX,EAAIY,GAAGZ,EAAIa,SAAS,OAAOb,EAAIc,IAC5P,EACGhB,EAAkB,G,WCOtB,SACAiB,KAAAA,cACA9B,OAAAA,CACA+B,EAAAA,GAEAC,OACA,OACAC,EAAAA,EAEA,EACAC,SAAAA,CACAf,QACA,gCACA,UAEA,gDACA,YAEA,EACA,EACAS,UACA,6BACA,GAGA,mCAEA,GAEAO,MAAAA,CACAC,KAAAA,CACAA,KAAAA,CACAC,OACAC,OAEAC,QAAAA,KAGAtC,QAAAA,CACAwB,SACA,QACA,IClDoQ,I,cCQhQX,GAAY,OACd,EACAF,EACAC,GACA,EACA,KACA,WACA,MAIF,QAAeC,EAAiB,O,iDCnBhC,IAAIF,EAAS,WAAkB,IAAIG,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,aAAa,CAACI,YAAY,gBAAgBmB,MAAM,CAAC,WAAa,KAAK,CAACvB,EAAG,OAAO,CAACuB,MAAM,CAAC,GAAK,QAAQ,CAACvB,EAAG,MAAM,CAACI,YAAY,aAAamB,MAAM,CAAC,GAAKzB,EAAI0B,KAAK,CAACxB,EAAG,kBAAkB,CAACyB,IAAI,WAAWF,MAAM,CAAC,IAAMzB,EAAI4B,OAAQ5B,EAAI6B,UAAW3B,EAAG,cAAc,CAACuB,MAAM,CAAC,KAAOzB,EAAI8B,mBAAmB9B,EAAIc,KAAMd,EAAI6B,YAAc7B,EAAI+B,SAAU7B,EAAG,iBAAiB,CAACuB,MAAM,CAAC,MAAQzB,EAAIgC,OAAOvB,GAAG,CAAC,OAAST,EAAIiC,sBAAsBjC,EAAIc,KAAMd,EAAIkC,QAAShC,EAAG,MAAM,CAACI,YAAY,eAAe,CAACJ,EAAG,IAAI,CAACI,YAAY,2BAA2BJ,EAAG,OAAO,CAACF,EAAIW,GAAG,sBAAsBX,EAAIc,MAAM,KAAMd,EAAImC,MAAOjC,EAAG,OAAO,CAACuB,MAAM,CAAC,GAAK,QAAQ,KAAO,KAAK,CAACvB,EAAG,eAAeF,EAAIoC,GAAG,CAACX,MAAM,CAAC,OAAS,MAAM,eAAezB,EAAImC,OAAM,KAAS,GAAGnC,EAAIc,MAAM,EAChyB,EACGhB,EAAkB,G,uFCFlBD,EAAS,WAAkB,IAAIG,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACmC,WAAW,CAAC,CAACtB,KAAK,OAAOuB,QAAQ,SAASC,MAAOvC,EAAIwC,SAASnC,OAAS,EAAGoC,WAAW,wBAAwBnC,YAAY,uCAAuC,CAACJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAAGF,EAAI0C,OAAqC1C,EAAIc,KAAjCZ,EAAG,KAAK,CAACF,EAAIW,GAAG,aAAuBX,EAAI2C,UAAWzC,EAAG,KAAK,CAACF,EAAIW,GAAG,UAAUX,EAAIc,KAAKZ,EAAG,KAAK,CAACF,EAAIW,GAAG,SAAST,EAAG,KAAK,CAACF,EAAIW,GAAG,aAAaT,EAAG,QAAQF,EAAI4C,GAAI5C,EAAIwC,UAAU,SAASK,EAAQ3B,GAAG,OAAOhB,EAAG,KAAK,CAAC4C,IAAI5B,GAAG,CAAGlB,EAAI0C,OAAiD1C,EAAIc,KAA7CZ,EAAG,KAAK,CAACF,EAAIW,GAAGX,EAAIY,GAAGZ,EAAI+C,OAAO7B,OAAiBlB,EAAI2C,UAAWzC,EAAG,KAAK,CAACA,EAAG,SAAS,CAACmC,WAAW,CAAC,CAACtB,KAAK,QAAQuB,QAAQ,iBAAiBC,MAAOM,EAAQnB,GAAIe,WAAW,aAAaO,UAAU,CAAC,QAAS,KAAQvC,GAAG,CAAC,OAAS,SAASwC,GAAQ,IAAIC,EAAgB3B,MAAM4B,UAAUC,OAAOC,KAAKJ,EAAOK,OAAOC,SAAQ,SAASC,GAAG,OAAOA,EAAEC,QAAS,IAAE7B,KAAI,SAAS4B,GAAG,IAAIE,EAAM,WAAYF,EAAIA,EAAEG,OAASH,EAAEjB,MAAM,OAAOvC,EAAI4D,GAAGF,EAAK,IAAG1D,EAAI6D,KAAKhB,EAAS,KAAMI,EAAOK,OAAOQ,SAAWZ,EAAgBA,EAAc,GAAI,IAAGlD,EAAI4C,GAAI5C,EAAIgC,OAAO,SAAS+B,GAAM,OAAO7D,EAAG,SAAS,CAAC4C,IAAIiB,EAAKrC,GAAGsC,SAAS,CAAC,MAAQD,EAAKrC,KAAK,CAAC1B,EAAIW,GAAGX,EAAIY,GAAGmD,EAAKhD,MAAQgD,EAAKrC,MAAO,IAAE,KAAK1B,EAAIc,KAAKZ,EAAG,KAAK,CAACA,EAAG,QAAQ,CAACmC,WAAW,CAAC,CAACtB,KAAK,QAAQuB,QAAQ,iBAAiBC,MAAOM,EAAQoB,IAAKxB,WAAW,cAAcO,UAAU,CAAC,QAAS,KAAQvB,MAAM,CAAC,KAAO,SAAS,SAAW,IAAIuC,SAAS,CAAC,MAASnB,EAAQoB,KAAMxD,GAAG,CAAC,MAAQ,SAASwC,GAAWA,EAAOK,OAAOY,WAAiBlE,EAAI6D,KAAKhB,EAAS,MAAO7C,EAAI4D,GAAGX,EAAOK,OAAOf,OAAQ,EAAC,KAAO,SAASU,GAAQ,OAAOjD,EAAImE,cAAe,OAAMjE,EAAG,KAAK,CAACA,EAAG,QAAQ,CAACmC,WAAW,CAAC,CAACtB,KAAK,QAAQuB,QAAQ,iBAAiBC,MAAOM,EAAQuB,IAAK3B,WAAW,cAAcO,UAAU,CAAC,QAAS,KAAQvB,MAAM,CAAC,KAAO,SAAS,SAAW,IAAIuC,SAAS,CAAC,MAASnB,EAAQuB,KAAM3D,GAAG,CAAC,MAAQ,SAASwC,GAAWA,EAAOK,OAAOY,WAAiBlE,EAAI6D,KAAKhB,EAAS,MAAO7C,EAAI4D,GAAGX,EAAOK,OAAOf,OAAQ,EAAC,KAAO,SAASU,GAAQ,OAAOjD,EAAImE,cAAe,QAAQ,IAAE,GAAInE,EAAI2C,UAAWzC,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACuB,MAAM,CAAC,QAAUzB,EAAIqE,OAAO,CAACnE,EAAG,QAAQ,CAACmC,WAAW,CAAC,CAACtB,KAAK,QAAQuB,QAAQ,UAAUC,MAAOvC,EAAI0C,OAAQD,WAAW,WAAWhB,MAAM,CAAC,KAAO,YAAYuC,SAAS,CAAC,QAAUzC,MAAM+C,QAAQtE,EAAI0C,QAAQ1C,EAAIuE,GAAGvE,EAAI0C,OAAO,OAAO,EAAG1C,EAAI0C,QAASjC,GAAG,CAAC,OAAS,SAASwC,GAAQ,IAAIuB,EAAIxE,EAAI0C,OAAO+B,EAAKxB,EAAOK,OAAOoB,IAAID,EAAKE,QAAuB,GAAGpD,MAAM+C,QAAQE,GAAK,CAAC,IAAII,EAAI,KAAKC,EAAI7E,EAAIuE,GAAGC,EAAII,GAAQH,EAAKE,QAASE,EAAI,IAAI7E,EAAI0C,OAAO8B,EAAIM,OAAO,CAACF,KAAYC,GAAK,IAAI7E,EAAI0C,OAAO8B,EAAIO,MAAM,EAAEF,GAAKC,OAAON,EAAIO,MAAMF,EAAI,IAAM,MAAK7E,EAAI0C,OAAOgC,CAAK,KAAI1E,EAAIW,GAAG,qBAAqBX,EAAIc,QAC5hF,EACGhB,EAAkB,G,WCmCtB,SACAiB,KAAAA,iBACA9B,OAAAA,CACA+B,EAAAA,GAEAI,MAAAA,CACAY,MAAAA,CACAgD,KAAAA,MACAxD,QAAAA,IAAAA,KAGAL,SAAAA,CACAwB,YACA,0BACA,EACA0B,OACA,mBACA,mBAEA,CACA,EACAtB,SACA,uDACA,GAEA9B,OACA,OACAuB,SAAAA,GACAE,OAAAA,IAAAA,KAAAA,MAAAA,OAEA,EACAuC,MAAAA,CACAjD,MAAAA,CACAkD,WAAAA,EACAC,UACA,wBACA,gBAEA,qBACA,GAEAzC,SACA,sBACA,WACA,EACAF,SAAAA,CACA4C,MAAAA,EACAD,UACA,WACA,IAGAjG,QAAAA,CACAmG,QAAAA,GACA,yBACA,EACAC,iBACA,yBACAP,MAAA,mBACAnD,KAAAmC,GAAAA,OAAAA,OAAAA,CAAAA,EAAAA,KAGA,0BACA,sDAEA,EACAwB,OACA,8EACA,6CAEA,IC3GuQ,I,cCQnQxF,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,QAAeA,EAAiB,Q,qECnB5ByF,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GAoCxCG,EAA0B,SAAUC,GAKpC,SAASD,EAAS9C,GACd,IAAIgD,EAAQtG,KACRuG,EAAQC,EAAA,OAyBZ,OAxBAF,EAAQD,EAAOjD,KAAKpD,KAAMsD,EAAQmD,UAAWF,EAAO,CAChDG,WAAYpD,EAAQoD,WACpBC,YAAarD,EAAQqD,eACnB3G,KAKNsG,EAAMM,QAAUtD,EAAQuD,OAKxBP,EAAMQ,MAAQ,KAKdR,EAAMS,OAAS,KAKfT,EAAMU,MAAQ1D,EAAQ2D,MAAQ,CAAC,IAAK,KAC7BX,CACX,CA+CA,OA/EAf,EAAUa,EAAUC,GAqCpBD,EAASlD,UAAUgE,QAAU,WACzB,OAAOlH,KAAKgH,KAChB,EAMAZ,EAASlD,UAAUiE,QAAU,WACzB,OAAOnH,KAAK8G,KAChB,EAMAV,EAASlD,UAAUkE,SAAW,WAC1B,OAAOpH,KAAK+G,MAChB,EAKAX,EAASlD,UAAUmE,KAAO,WACtB,GAAIrH,KAAKuG,QAAUC,EAAA,QAAkBxG,KAAKuG,QAAUC,EAAA,QAApD,CAGAxG,KAAKuG,MAAQC,EAAA,UACbxG,KAAKsH,UACL,IAAIC,EAAOvH,KACXA,KAAK4G,UACAY,MAAK,SAAUxG,GAChBuG,EAAKT,MAAQ9F,EACbuG,EAAKhB,MAAQC,EAAA,SACbe,EAAKD,SACT,IACKG,OAAM,SAAUC,GACjBH,EAAKR,OAASW,EACdH,EAAKhB,MAAQC,EAAA,QACbe,EAAKD,SACT,GAdA,CAeJ,EACOlB,CACX,CAjF6B,CAiF3BuB,EAAA,GACF,U,8ECnHI,EAAwC,WACxC,IAAInC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GA6B5C,SAAS2B,EAAiBC,EAAIC,EAASnB,GACnC,IAAIoB,EAAiBpB,EAAckB,EAAGG,OAASH,EAAGI,QAClDJ,EAAGK,YAAYL,EAAGM,WAAYL,GAC9BD,EAAGO,cAAcP,EAAGM,WAAYN,EAAGQ,eAAgBR,EAAGS,eACtDT,EAAGO,cAAcP,EAAGM,WAAYN,EAAGU,eAAgBV,EAAGS,eACtDT,EAAGO,cAAcP,EAAGM,WAAYN,EAAGW,mBAAoBT,GACvDF,EAAGO,cAAcP,EAAGM,WAAYN,EAAGY,mBAAoBV,EAC3D,CAOA,SAASW,EAAmBb,EAAIC,EAASa,EAAOhC,GAC5CiB,EAAiBC,EAAIC,EAASnB,GAC9BkB,EAAGe,WAAWf,EAAGM,WAAY,EAAGN,EAAGgB,KAAMhB,EAAGgB,KAAMhB,EAAGiB,cAAeH,EACxE,CASA,SAASI,EAAkBC,EAAQlB,EAAS9G,EAAMiG,EAAMgC,EAAWtC,GAC/D,IACIuC,EACAC,EAFAtB,EAAKmB,EAAOI,QAGhB,GAAIpI,aAAgBqI,aAAc,CAC9BH,EAAcrB,EAAGyB,MACjBN,EAAOO,aAAa,qBACpB,IAAIC,EAAYR,EAAOO,aAAa,4BACpCJ,EAA+B,OAAdK,CACrB,MAEIN,EAAcrB,EAAGiB,cACjBK,GAAiB,EAErBvB,EAAiBC,EAAIC,EAASnB,GAAewC,GAC7C,IAWIM,EAXAC,EAAc1I,EAAK2I,WAAa1C,EAAK,GACrC2C,EAAkB,EAWtB,OAVIF,EAAc,IAAM,EACpBE,EAAkB,EAEbF,EAAc,IAAM,EACzBE,EAAkB,EAEbF,EAAc,IAAM,IACzBE,EAAkB,GAGdX,GACJ,KAAK,EACDQ,EAAS5B,EAAGgC,UACZ,MAEJ,KAAK,EACDJ,EAAS5B,EAAGiC,gBACZ,MAEJ,KAAK,EACDL,EAAS5B,EAAGkC,IACZ,MAEJ,KAAK,EACDN,EAAS5B,EAAGgB,KACZ,MAEJ,QACI,MAAM,IAAImB,MAAM,gCAAgCnF,OAAOoE,IAG/D,IAAIgB,EAAqBpC,EAAGqC,aAAarC,EAAGsC,kBAC5CtC,EAAGuC,YAAYvC,EAAGsC,iBAAkBP,GACpC/B,EAAGe,WAAWf,EAAGM,WAAY,EAAGsB,EAAQxC,EAAK,GAAIA,EAAK,GAAI,EAAGwC,EAAQP,EAAalI,GAClF6G,EAAGuC,YAAYvC,EAAGsC,iBAAkBF,EACxC,CAIA,IAAII,EAAe,KACnB,SAASC,IACL,IAAIC,EAASC,SAASC,cAAc,UACpCF,EAAOG,MAAQ,EACfH,EAAOI,OAAS,EAChBN,EAAeE,EAAOK,WAAW,KACrC,CAWA,IAAIC,EAA6B,SAAUxE,GAKvC,SAASwE,EAAYvH,GACjB,IAAIgD,EAAQD,EAAOjD,KAAKpD,OAASA,KAIjCsG,EAAMwE,KAINxE,EAAMyE,SAAW,GACjBzE,EAAM0E,kBAAoB1E,EAAM0E,kBAAkBC,KAAK3E,GAKvDA,EAAM4E,aAAc,QAAO5H,EAAQ6H,KAAKC,YAAY9H,EAAQwH,KAAKrE,UAAU,KAK3EH,EAAM+E,QAAU/H,EAAQgI,QAAU,EAIlChF,EAAM2C,UAAYsC,IAKlBjF,EAAMkF,QAAUlI,EAAQ0F,OACxB,IAAIyC,EAAS,IAAI,KAAiB,KAAc,MAiBhD,OAhBAA,EAAOC,UAAU,CACb,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEJpF,EAAMkF,QAAQG,gBAAgBF,GAI9BnF,EAAMmF,OAASA,EACfnF,EAAMsF,QAAQtI,EAAQwH,MACfxE,CACX,CA8JA,OAlNA,EAAUuE,EAAaxE,GAwDvBwE,EAAY3H,UAAU0I,QAAU,SAAUd,GACtC,GAAIA,IAAS9K,KAAK8K,KAOd,GANI9K,KAAK8K,MACL9K,KAAK8K,KAAKe,oBAAoBC,EAAA,SAAkB9L,KAAKgL,mBAEzDhL,KAAK8K,KAAOA,EACZ9K,KAAK+K,SAAS3K,OAAS,EACvBJ,KAAK+L,OAASjB,EAAKkB,aAAexF,EAAA,SAC9BxG,KAAK+L,OACL/L,KAAKiM,kBAEJ,CACD,GAAInB,aAAgBoB,EAAA,EAAW,CAC3B,IAAIvD,EAAQmC,EAAKqB,WACbxD,aAAiByD,QAAUzD,EAAM0D,cACjC1D,EAAM0D,YAAc,YAE5B,CACAvB,EAAKwB,iBAAiBR,EAAA,SAAkB9L,KAAKgL,kBACjD,CAER,EACAH,EAAY3H,UAAU+I,YAAc,WAChC,IAAIjD,EAAShJ,KAAKwL,QACd3D,EAAKmB,EAAOI,QACZ0B,EAAO9K,KAAK8K,KAChB,GAAIA,aAAgBoB,EAAA,GAAapB,aAAgB,IAAY,CACzD,IAAIhD,EAAUD,EAAG0E,gBAIjB,OAHAvM,KAAK+K,SAASyB,KAAK1E,GACnB9H,KAAKiJ,UAAY,OACjBP,EAAmBb,EAAIC,EAASgD,EAAKqB,WAAYrB,EAAKnE,YAE1D,CACA,IAAI8F,EAAiB3B,EAAK5D,UACtBwF,EAAY,CACZD,EAAe,GAAK,EAAIzM,KAAKqL,QAC7BoB,EAAe,GAAK,EAAIzM,KAAKqL,SAE7BrK,EAAO8J,EAAK3D,UACZwF,EAAU3L,aAAgBqI,aAC1BuD,EAAaF,EAAU,GAAKA,EAAU,GACtCG,EAAWF,EAAUtD,aAAeyD,WACpCC,EAAkBF,EAASG,kBAC3BtD,EAAc1I,EAAK2I,WAAa+C,EAAU,GAC9C1M,KAAKiJ,UAAYgE,KAAKC,MAAMxD,EAAcqD,EAAkBL,EAAU,IACtE,IAAIS,EAAeF,KAAKG,KAAKpN,KAAKiJ,UAAY,GAC9C,GAAqB,IAAjBkE,EAAoB,CAChBrF,EAAUD,EAAG0E,gBAGjB,OAFAvM,KAAK+K,SAASyB,KAAK1E,QACnBiB,EAAkBC,EAAQlB,EAAS9G,EAAM0L,EAAW1M,KAAKiJ,UAAW6B,EAAKnE,YAE7E,CAEA,IADA,IAAI0G,EAAoB,IAAI/L,MAAM6L,GACzBG,EAAe,EAAGA,EAAeH,IAAgBG,EAAc,CAChExF,EAAUD,EAAG0E,gBACjBvM,KAAK+K,SAASyB,KAAK1E,GACnB,IAAImB,EAAYqE,EAAeH,EAAe,EAAI,EAAInN,KAAKiJ,UAAY,EACvEoE,EAAkBC,GAAgB,IAAIT,EAASD,EAAa3D,EAChE,CAIA,IAHA,IAAIsE,EAAY,EACZC,EAAY,EACZC,EAAWf,EAAU,GAAK1M,KAAKiJ,UAC1ByE,EAAW,EAAGA,EAAWhB,EAAU,KAAMgB,EAAU,CACxD,IAAK,IAAIC,EAAW,EAAGA,EAAWF,IAAYE,EAAU,CACpD,IAAIC,EAAY5M,EAAKwM,EAAYG,GAC7BE,EAAaZ,KAAKC,MAAMK,EAAYvN,KAAKiJ,WACzC6E,EAAYH,EAAW3N,KAAKiJ,UAE5B8E,GADAT,EAAeL,KAAKC,MAAMY,EAAY,GACxBT,EAAkBC,IAEhCU,GADA/E,EAAY8E,EAAY3N,OAASwM,EACdkB,EAAY,GACnCC,EAAYF,EAAa5E,EAAY+E,GAAoBJ,IACvDL,CACN,CACAC,GAAa9D,EAAcqD,CAC/B,CACA,IAASO,EAAe,EAAGA,EAAeH,IAAgBG,EAAc,CAChExF,EAAU9H,KAAK+K,SAASuC,GACxBS,EAAcV,EAAkBC,GAChCrE,EAAY8E,EAAY3N,OAASwM,EACrC7D,EAAkBC,EAAQlB,EAASiG,EAAarB,EAAWzD,EAAW6B,EAAKnE,YAC/E,CACJ,EACAkE,EAAY3H,UAAU8H,kBAAoB,WAClChL,KAAK8K,KAAKkB,aAAexF,EAAA,WACzBxG,KAAK+L,QAAS,EACd/L,KAAKiM,cACLjM,KAAKiO,cAAcnC,EAAA,UAE3B,EACAjB,EAAY3H,UAAUgL,gBAAkB,WACpC,IAAIrG,EAAK7H,KAAKwL,QAAQpC,QACtBpJ,KAAKwL,QAAQ2C,aAAanO,KAAKyL,QAC/B,IAAK,IAAIxK,EAAI,EAAGA,EAAIjB,KAAK+K,SAAS3K,SAAUa,EACxC4G,EAAGuG,cAAcpO,KAAK+K,SAAS9J,IAEnCjB,KAAK8K,KAAKe,oBAAoBC,EAAA,SAAkB9L,KAAKgL,kBACzD,EAOAH,EAAY3H,UAAUmL,aAAe,SAAUC,EAAWC,GACtD,IAAKvO,KAAK+L,OACN,OAAO,KAEX,IAAIyC,EAAcxO,KAAKkL,YAAY,GAC/BuD,EAAezO,KAAKkL,YAAY,GAChCI,EAAStL,KAAKqL,QAClB,GAAIrL,KAAK8K,gBAAgB,EAAU,CAC/B,IAAI4D,EAAa1O,KAAK8K,KAAK5D,UACvByH,EAA6BD,EAAW,GACxCE,EAA8BF,EAAW,GACzCG,EAAgBF,EAA6B,EAAIrD,EACjDwD,EAAiBF,EAA8B,EAAItD,EACnDyD,EAAczD,EACd2B,KAAKC,MAAMyB,GAA8BL,EAAYE,IACrDQ,EAAc1D,EACd2B,KAAKC,MAAM0B,GAA+BL,EAAYE,IACtDQ,EAASjP,KAAK8K,KAAK3D,UACvB,GAAI8H,aAAkBC,SAAU,CAC5B,IAAIC,EAAgBF,EAAOtF,YAAckF,EAAgBC,GACrDM,EAAWD,GAAiBH,EAAcH,EAAgBE,GAC1DM,EAASJ,EAAOI,OAAOvK,MAAMsK,EAAUA,EAAWD,GACtD,OAAO,IAAID,SAASG,EACxB,CACA,IAAIC,EAAStP,KAAKiJ,WAAa+F,EAAcH,EAAgBE,GAC7D,OAAOE,EAAOnK,MAAMwK,EAAQA,EAAStP,KAAKiJ,UAC9C,CACKoB,GACDC,IAEJD,EAAakF,UAAU,EAAG,EAAG,EAAG,GAChC,IAQIvO,EARA2H,EAAQ3I,KAAK8K,KAAKqB,WAClBqD,EAAc7G,EAAM+B,MACpB+E,EAAe9G,EAAMgC,OACrB+E,EAA2BF,EAAc,EAAIlE,EAC7CqE,EAA4BF,EAAe,EAAInE,EAC/CsE,EAAYtE,EAAS2B,KAAKC,MAAMwC,GAA4BpB,EAAYE,IACxEqB,EAAYvE,EACZ2B,KAAKC,MAAMyC,GAA6BpB,EAAYE,IAExD,IACIpE,EAAayF,UAAUnH,EAAOiH,EAAWC,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,GACnE7O,EAAOqJ,EAAa0F,aAAa,EAAG,EAAG,EAAG,GAAG/O,IAKjD,CAHA,MAAOgP,GAEH,OADA3F,EAAe,KACR,IACX,CACA,OAAOrJ,CACX,EACO6J,CACX,CApNgC,CAoN9B,KACF,U,sGCxVI,EAAwC,WACxC,IAAIrF,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GAkCjCgK,GAAW,CAClBC,mBAAoB,iBACpBC,eAAgB,kBAChBC,iBAAkB,oBAClBC,MAAO,UACPC,oBAAqB,sBACrBC,qBAAsB,uBACtBC,mBAAoB,sBACpBC,iBAAkB,mBAClBC,iBAAkB,mBAClBC,cAAe,iBACfC,WAAY,eACZC,KAAM,UAECC,GAAa,CACpBC,cAAe,kBAKfC,GAAwB,CACxB,CACIlQ,KAAMgQ,GAAWC,cACjB9J,KAAM,EACNlC,KAAM,aAMVkM,GAAQ,CAAC,EAMb,SAASC,GAAUC,GACf,OAAO,GAAK,EAAI,GAAKA,EAAI,IAAM,CACnC,CAQA,SAASC,GAAuBC,EAAiBC,EAAaH,GACpDA,KAAKE,IACPA,EAAgBF,GAAK,IAEzBE,EAAgBF,GAAG3E,KAAK8E,EAC5B,CAMA,SAASC,GAAgBC,EAAYC,GACjC,IAAIC,EAAaF,EAAWG,iBAAiBH,EAAWI,YACpDF,EAAWD,SACXA,GAAS,QAAgBA,GAAQ,QAAeC,EAAWD,OAAQD,EAAWK,UAAUxS,cAE5F,IAAII,EAAgEiS,EAAWI,MAAMC,kBACrF,IAAKtS,EAAOuS,WAAY,CACpB,IAAIC,EAAaxS,EACZyS,yBAAyBV,EAAWK,UAAUxS,YAC9C8S,YACDF,IACAR,GAAS,QAAgBA,EAAQQ,GAEzC,CACA,OAAOR,CACX,CACA,SAASW,GAAY3S,EAAQgH,GACzB,MAAO,GAAG5B,OAAOpF,EAAO4S,SAAU,KAAKxN,QAAO,QAAgB4B,GAClE,CAmBA,IAAI6L,GAAwC,SAAUjM,GAMlD,SAASiM,EAAuBC,EAAWjP,GACvC,IAAIgD,EAAQD,EAAOjD,KAAKpD,KAAMuS,EAAW,CACrCC,SAAUlP,EAAQkP,YAChBxS,KAKNsG,EAAMmM,gBAAiB,EAMvBnM,EAAMoM,gBAAiB,UAKvBpM,EAAMqM,WAAY,SAKlBrM,EAAMsM,eAAiB,IAAIC,EAAA,EAAU,EAAG,EAAG,EAAG,GAK9CvM,EAAMwM,gBAAiB,QAAgB,EAAG,EAAG,GAK7CxM,EAAMyM,UAAY,CAAC,EAAG,GAKtBzM,EAAM0M,SAIN1M,EAAM2M,cAAgB3P,EAAQ4P,aAI9B5M,EAAM6M,gBAAkB7P,EAAQ8P,eAkBhC9M,EAAM+M,SAAW,IAAI,KAAiB,KAAsB,MAC5D/M,EAAM+M,SAAS3H,UAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IACzC,IAAI4H,OAAkCC,IAAtBjQ,EAAQgQ,UAA0BhQ,EAAQgQ,UAAY,IAgBtE,OAXAhN,EAAMkN,kBAAoB,IAAIC,EAAA,EAASH,GAKvChN,EAAMoN,iBAAmBpQ,EAAQqQ,iBAAmB,GAKpDrN,EAAMsN,YAAc,KACbtN,CACX,CAmaA,OA5fA,EAAUgM,EAAwBjM,GA6FlCiM,EAAuBpP,UAAU2Q,MAAQ,SAAUvQ,GAC/C+C,EAAOnD,UAAU2Q,MAAMzQ,KAAKpD,KAAM,CAC9BwS,SAAUlP,EAAQkP,WAEtBxS,KAAKiT,cAAgB3P,EAAQ4P,aAC7BlT,KAAKmT,gBAAkB7P,EAAQ8P,eAC/BpT,KAAK0T,iBAAmBpQ,EAAQqQ,iBAAmB,GAC/C3T,KAAKgJ,SACLhJ,KAAKgT,SAAWhT,KAAKgJ,OAAO8K,WAAW9T,KAAKmT,gBAAiBnT,KAAKiT,eAE1E,EACAX,EAAuBpP,UAAU6Q,mBAAqB,WAClD/T,KAAKgT,SAAWhT,KAAKgJ,OAAO8K,WAAW9T,KAAKmT,gBAAiBnT,KAAKiT,eAClEjT,KAAKgJ,OAAO2C,gBAAgB3L,KAAKqT,SACrC,EAMAf,EAAuBpP,UAAU8Q,gBAAkB,SAAUlJ,GACzD,IAAIyH,EAAYvS,KAAKiU,WACjBC,EAAYpJ,EAAKkB,WACjBmI,EAAyB5B,EAAU6B,4BACvC,OAAQF,GAAa1N,EAAA,UACjB0N,GAAa1N,EAAA,SACZ0N,GAAa1N,EAAA,UAAoB2N,CAC1C,EAMA7B,EAAuBpP,UAAUmR,qBAAuB,SAAU7C,GAC9D,IAAIM,EAAQ9R,KAAKiU,WACbxU,EAASqS,EAAMC,kBACnB,QAAKtS,MAGD,QAAQ8R,GAAgBC,EAAYA,EAAWC,UAGtB,UAAtBhS,EAAOuM,WAClB,EAOAsG,EAAuBpP,UAAUoR,aAAe,SAAU9C,EAAYC,EAAQ8C,EAAUlD,GACpF,IAAIQ,EAAYL,EAAWK,UACvBU,EAAYvS,KAAKiU,WACjBO,EAAajC,EAAUR,kBACvB0C,EAAWD,EAAWtC,yBAAyBL,EAAUxS,YACzDiM,EAASkJ,EAAWE,uBAAuB7C,EAAUxS,YACrDsV,GAAgB,QAAOH,GACrBG,KAAiBnD,EAAWoD,cAC9BpD,EAAWoD,YAAYD,GAAiB,CAAC,GAK7C,IAHA,IAAIC,EAAcpD,EAAWoD,YAAYD,GACrCE,EAAmB7U,KAAKwT,kBACxBsB,EAAO7H,KAAK9I,IAAIoQ,EAAWhC,EAAUwC,aAAcN,EAASO,aAAczC,EAAUyC,cAC/E7D,EAAIoD,EAAUpD,GAAK2D,IAAQ3D,EAGhC,IAFA,IAAI8D,EAAYR,EAASS,0BAA0BzD,EAAQN,EAAGnR,KAAK4S,gBAC/DuC,EAAiBV,EAASW,cAAcjE,GACnCkE,EAAIJ,EAAUK,KAAMD,GAAKJ,EAAUM,OAAQF,EAChD,IAAK,IAAIG,EAAIP,EAAUQ,KAAMD,GAAKP,EAAUS,OAAQF,EAAG,CACnD,IAAI/O,GAAY,QAAgB0K,EAAGkE,EAAGG,EAAGxV,KAAK8S,gBAC1C6C,EAAWvD,GAAYoC,EAAY/N,GAEnC6K,OAAc,EAEdxG,OAAO,EAKX,GAJI+J,EAAiBe,YAAYD,KAC7BrE,EAAcuD,EAAiBgB,IAAIF,GACnC7K,EAAOwG,EAAYxG,OAElBwG,GAAeA,EAAYxG,KAAKjI,MAAQ2R,EAAWnC,SAEpD,GADAvH,EAAO0J,EAAWsB,QAAQ3E,EAAGkE,EAAGG,EAAGhE,EAAWuE,WAAYlE,EAAUxS,YAC/DiS,EAUD,GAAItR,KAAKgU,gBAAgBlJ,GACrBwG,EAAY1F,QAAQd,OAEnB,CACD,IAAIkL,EACuDlL,EAAKmL,iBAChE3E,EAAY1F,QAAQoK,EACxB,MAhBA1E,EAAc,IAAI,EAAY,CAC1BxG,KAAMA,EACNK,KAAMsJ,EACNzL,OAAQhJ,KAAKgJ,OACbsC,OAAQA,IAEZuJ,EAAiBqB,IAAIP,EAAUrE,GAavCF,GAAuBC,EAAiBC,EAAaH,GACrD,IAAIgF,EAAerL,EAAKuH,SACxBuC,EAAYuB,IAAgB,EACxBrL,EAAKkB,aAAexF,EAAA,SACfgL,EAAW4E,UAAUC,YAAYF,IAClC3E,EAAW4E,UAAUE,QAAQ,CACzBxL,EACA6J,EACAF,EAAS8B,mBAAmB9P,GAC5B0O,IAIhB,CAGZ,EAMA7C,EAAuBpP,UAAUsT,YAAc,SAAUhF,GACrDxR,KAAK4T,YAAcpC,EACnBxR,KAAKyS,gBAAiB,EACtB,IAAI5K,EAAK7H,KAAKgJ,OAAOI,QACrBpJ,KAAKyW,UAAU5O,EAAI2J,GACnB,IAAIK,EAAYL,EAAWK,UACvBU,EAAYvS,KAAKiU,WACjBO,EAAajC,EAAUR,kBACvB0C,EAAWD,EAAWtC,yBAAyBL,EAAUxS,YACzDiM,EAASkJ,EAAWE,uBAAuB7C,EAAUxS,YACrDoS,EAASF,GAAgBC,EAAYA,EAAWC,QAChDN,EAAIsD,EAASiC,kBAAkB7E,EAAU8E,WAAYnC,EAAWoC,YAIhEvF,EAAkB,CAAC,EACvB,GAAIG,EAAWqF,WAAY,CACvB,IAAIC,EAAUrC,EAASiC,kBAAkB7E,EAAUkF,eAAgBvC,EAAWoC,YAC1EC,EAAatF,GAAgBC,EAAYA,EAAWqF,YACxD7W,KAAKsU,aAAa9C,EAAYqF,EAAYC,EAASzF,EACvD,CACArR,KAAKsU,aAAa9C,EAAYC,EAAQN,EAAGE,GAazC,IANA,IAAI2F,EAAc,CAAC,EACfC,GAAM,QAAOjX,MACbkX,EAAO1F,EAAW0F,KAClBC,GAAQ,EAERC,EAAe/F,EAAgBF,GAC1BlQ,EAAI,EAAGoW,EAAKD,EAAahX,OAAQa,EAAIoW,IAAMpW,EAAG,CACnD,IAAIqQ,EAAc8F,EAAanW,GAC3B6J,EAAOwG,EAAYxG,KACnBrE,EAAYqE,EAAKrE,UACrB,GAAI6K,EAAYvF,OAAQ,CACpB,IAAIuL,EAAQxM,EAAKyM,SAASN,EAAKC,GAC/B,GAAc,IAAVI,EAAa,CAEbxM,EAAK0M,cAAcP,GACnB,QACJ,CACAE,GAAQ,EACR,IAAIM,GAAe,QAAgBhR,GACnCuQ,EAAYS,GAAgBH,CAChC,CACAtX,KAAKyS,gBAAiB,EAEtB,IAAIiF,EAAoB1X,KAAK2X,cAAclD,EAAUhO,EAAW0K,EAAI,EAAGE,GACvE,IAAIqG,EAKJ,IADA,IAAIE,EAAUnD,EAASO,aACd6C,EAAU1G,EAAI,EAAG0G,GAAWD,IAAWC,EAAS,CACrD,IAAIC,EAAkB9X,KAAK2X,cAAclD,EAAUhO,EAAWoR,EAASxG,GACvE,GAAIyG,EACA,KAER,CACJ,CACA9X,KAAKgJ,OAAO+O,WAAW/X,KAAKgT,UAC5BhT,KAAKgJ,OAAOgP,YAAYxG,GAAa2F,GAMrC,IALA,IAAIc,EAAKtS,OAAOuS,KAAK7G,GAChB1P,IAAIwW,QACJC,KAAK,MACNC,EAAUxG,EAAUyG,OAAO,GAC3BC,EAAU1G,EAAUyG,OAAO,GACtBE,EAAI,EAAGC,EAAKR,EAAG7X,OAAQoY,EAAIC,IAAMD,EACtC,KAAIE,EAAQT,EAAGO,GACXrD,EAAiBV,EAASW,cAAcsD,GACxCC,GAAW,QAAOlE,EAASrJ,YAAYsN,GAAQ1Y,KAAK+S,WACpD6F,EAAanE,EAASoE,UAAUH,GAChCI,EAAsBH,EAAS,GAAK,EAAIrN,EACxCyN,EAAuBJ,EAAS,GAAK,EAAIrN,EACzC0N,EAAcF,EAAsBC,EACpCE,GAAWZ,EAAUO,EAAW,KAAOD,EAAS,GAAKxD,GACrD+D,GAAWN,EAAW,GAAKL,IAAYI,EAAS,GAAKxD,GACrDgE,EAAYtH,EAAU8E,WAAaxB,EACnCiE,EAAQlI,GAAUwH,GAClBW,EAAiBhI,EAAgBqH,GACrC,IAASzX,EAAI,EAAGoW,EAAKgC,EAAejZ,OAAQa,EAAIoW,IAAMpW,EAAG,CACjDqQ,EAAc+H,EAAepY,GACjC,GAAKqQ,EAAYvF,OAAjB,CAGIjB,EAAOwG,EAAYxG,KACnBrE,EAAYqE,EAAKrE,UACjBgR,GAAe,QAAgBhR,GAFnC,IAGI6S,EAAc7S,EAAU,GACxB8S,EAAc9S,EAAU,IAC5B,QAAezG,KAAK0S,iBACpB,QAAe1S,KAAK0S,eAAgB,GAAMlB,EAAWvK,KAAK,GAAKkS,EAAaL,IAAuB,GAAMtH,EAAWvK,KAAK,GAAKkS,EAAaL,KAC3I,QAAgB9Y,KAAK0S,eAAgBb,EAAU2H,WAC/C,QAAexZ,KAAK0S,eAAgB,EAAG,EAAIsG,IAC3C,QAAmBhZ,KAAK0S,gBAAiBiG,EAAS,IAAMW,EAAcL,GAAW3N,GAC7EwN,GAAsBH,EAAS,IAAMY,EAAcL,GAAW5N,GAC9DyN,GACJ/Y,KAAKgJ,OAAOyQ,sBAAsBxJ,GAASE,gBAAgB,EAAAuJ,EAAA,GAAkB1Z,KAAK2S,UAAW3S,KAAK0S,iBAClG1S,KAAKgJ,OAAO2Q,WAAWrI,EAAY7F,QACnCzL,KAAKgJ,OAAO2Q,WAAW3Z,KAAKqT,UAC5BrT,KAAKgJ,OAAO4Q,iBAAiB5I,IAC7B,IAAI6I,GAAc,EAClB,MAAOA,GAAcvI,EAAYvG,SAAS3K,OAAQ,CAC9C,IAAI0Z,GAAkB,UAAYD,GAC9BE,GAAc,GAAGlV,OAAOoL,GAASC,mBAAoB,KAAKrL,OAAOgV,GAAa,KAClFhS,EAAGmS,cAAcnS,EAAGiS,KACpBjS,EAAGK,YAAYL,EAAGM,WAAYmJ,EAAYvG,SAAS8O,KACnDhS,EAAGoS,UAAUja,KAAKgJ,OAAOkR,mBAAmBH,IAAcF,MACxDA,EACN,CACA,IAAK,IAAIM,GAAe,EAAGA,GAAena,KAAK0T,iBAAiBtT,SAAU+Z,GAAc,CACpF,IAAIC,GAAiBpa,KAAK0T,iBAAiByG,IAC3CtS,EAAGmS,cAAcnS,EAAG,UAAYgS,KAChC,IAAI/R,GAAUsS,GAAeC,WAAWxS,GACxCA,EAAGK,YAAYL,EAAGM,WAAYL,IAC9BD,EAAGoS,UAAUja,KAAKgJ,OAAOkR,mBAAmBE,GAAetZ,MAAO+Y,MAChEA,EACN,CACIvC,EAAQG,KAAgBT,EAAcA,EAAYS,GAAgB,EAClEH,EAAQ,IACR9F,EAAW8I,SAAU,GAEzBta,KAAKgJ,OAAOuR,qBAAqBtK,GAASG,iBAAkBkH,GAC5DtX,KAAKgJ,OAAOuR,qBAAqBtK,GAASI,MAAO+I,GACjDpZ,KAAKgJ,OAAOuR,qBAAqBtK,GAASK,oBAAqBwI,GAC/D9Y,KAAKgJ,OAAOuR,qBAAqBtK,GAASM,qBAAsBwI,GAChE/Y,KAAKgJ,OAAOuR,qBAAqBtK,GAASO,mBAAoB2E,GAC9DnV,KAAKgJ,OAAOuR,qBAAqBtK,GAASQ,iBAAkBmI,EAAW,GACnEU,EAAcX,EAAS,GAAKxD,EAC5B7J,EAAS6J,GACbnV,KAAKgJ,OAAOuR,qBAAqBtK,GAASS,iBAAkBkI,EAAW,GACnEW,EAAcZ,EAAS,GAAKxD,EAC5B7J,EAAS6J,GACb,IAAIqF,GAAe/I,EACfnG,EAAS,IACTkP,GAAe/F,EAASgG,mBAAmBhU,IAC3C,QAAgB+T,GAAc/I,EAAQ+I,KAE1Cxa,KAAKgJ,OAAO0R,oBAAoBzK,GAASU,cAAe6J,IACxDxa,KAAKgJ,OAAOuR,qBAAqBtK,GAASW,WAAYiB,EAAU8E,YAChE3W,KAAKgJ,OAAOuR,qBAAqBtK,GAASY,KAAMgB,EAAU8I,MAC1D3a,KAAKgJ,OAAO4R,aAAa,EAAG5a,KAAKqT,SAASnM,UAzD1C,CA0DJ,CA1EiB,CA4ErBlH,KAAKgJ,OAAO6R,aAAarJ,EAAYxR,KAAK8a,wBAAyB9a,KAAK+a,0BACxE,IAAIxQ,GAASvK,KAAKgJ,OAAOgS,YACrBnG,GAAmB7U,KAAKwT,kBAC5B,MAAOqB,GAAiBoG,iBAAkB,CAClC3J,EAAcuD,GAAiBqG,MACnC5J,EAAY6J,SAChB,CAQA,IAAIC,GAAqB,SAAUzZ,EAAK6P,GACpCgD,EAAW6G,YAAY7J,EAAWK,UAAUxS,WAAY4R,GAC5D,EAGA,OAFAO,EAAW8J,oBAAoB9O,KAAK4O,IACpCpb,KAAKub,WAAW1T,EAAI2J,GACbjH,EACX,EAKA+H,EAAuBpP,UAAUiE,QAAU,SAAUqU,GACjD,IAAI3T,EAAK7H,KAAKgJ,OAAOI,QACrB,IAAKvB,EACD,OAAO,KAEX,IAAI2J,EAAaxR,KAAK4T,YACtB,IAAKpC,EACD,OAAO,KAEX,IAAIM,EAAQ9R,KAAKiU,WACbwH,GAAa,QAAejK,EAAWkK,2BAA4BF,EAAM1W,SACzE+M,EAAYL,EAAWK,UACvB8J,EAAc7J,EAAMK,YACxB,GAAIwJ,KACK,SAAmB,QAAeA,EAAa9J,EAAUxS,YAAaoc,GACvE,OAAO,KAIf,IACIxa,EAAGxB,EAAQgV,EADXmH,EAAU9J,EAAM+J,YAAW,QAAe,CAACJ,IAAc5J,EAAU8E,YAEvE,IAAK1V,EAAI2a,EAAQxb,OAAS,EAAGa,GAAK,IAAKA,EAEnC,GADAxB,EAASmc,EAAQ3a,GACS,UAAtBxB,EAAOuM,WAAwB,CAE/B,GADAyI,EAAWhV,EAAOyS,yBAAyBL,EAAUxS,YACjDI,EAAOuS,WACP,MAEJ,IAAIC,EAAawC,EAAStC,YAC1B,IAAKF,IAAc,QAAmBA,EAAYwJ,GAC9C,KAER,CAEJ,GAAIxa,EAAI,EACJ,OAAO,KAGX,IADA,IAAI4T,EAAmB7U,KAAKwT,kBACnBrC,EAAIsD,EAASiC,kBAAkB7E,EAAU8E,YAAaxF,GAAKsD,EAASO,eAAgB7D,EAAG,CAC5F,IAAI1K,EAAYgO,EAASqH,yBAAyBL,EAAYtK,GAC1DwE,EAAWvD,GAAY3S,EAAQgH,GACnC,GAAKoO,EAAiBe,YAAYD,GAAlC,CAGA,IAAIrE,EAAcuD,EAAiBgB,IAAIF,GACvC,GAAKrE,EAAYvF,OAAjB,CAGA,IAAI6M,EAAanE,EAASoE,UAAU1H,GAChCwH,GAAW,QAAOlE,EAASrJ,YAAY+F,IACvCgE,EAAiBV,EAASW,cAAcjE,GACxC4K,GAAON,EAAW,GAAK7C,EAAW,IAAMzD,EACxC1O,EAAU,GAAKkS,EAAS,GACxBqD,GAAOpD,EAAW,GAAK6C,EAAW,IAAMtG,EACxC1O,EAAU,GAAKkS,EAAS,GAC5B,OAAOrH,EAAYjD,aAAa0N,EAAKC,EARrC,CAJA,CAaJ,CACA,OAAO,IACX,EAYA1J,EAAuBpP,UAAUyU,cAAgB,SAAUlD,EAAUhO,EAAWwV,EAAM5K,GAClF,IAAI4D,EAAYR,EAASyH,6BAA6BzV,EAAWwV,EAAMjc,KAAK4S,gBAC5E,IAAKqC,EACD,OAAO,EAKX,IAHA,IAAIkH,GAAU,EACVtH,EAAmB7U,KAAKwT,kBACxB/T,EAASO,KAAKiU,WAAWlC,kBACpBsD,EAAIJ,EAAUK,KAAMD,GAAKJ,EAAUM,OAAQF,EAChD,IAAK,IAAIG,EAAIP,EAAUQ,KAAMD,GAAKP,EAAUS,OAAQF,EAAG,CACnD,IAAIG,EAAWvD,GAAY3S,EAAQ,CAACwc,EAAM5G,EAAGG,IACzCzJ,GAAS,EACb,GAAI8I,EAAiBe,YAAYD,GAAW,CACxC,IAAIrE,EAAcuD,EAAiBgB,IAAIF,GACnCrE,EAAYvF,SACZqF,GAAuBC,EAAiBC,EAAa2K,GACrDlQ,GAAS,EAEjB,CACKA,IACDoQ,GAAU,EAElB,CAEJ,OAAOA,CACX,EACA7J,EAAuBpP,UAAUkZ,aAAe,WAC5C,GAAIpc,KAAKgJ,OAAQ,CACb,IAAI6L,EAAmB7U,KAAKwT,kBAC5BqB,EAAiBwH,SAAQ,SAAU/K,GAAe,OAAOA,EAAY6J,SAAW,IAChFtG,EAAiByH,OACrB,CACAjW,EAAOnD,UAAUkZ,aAAahZ,KAAKpD,KACvC,EAIAsS,EAAuBpP,UAAUgL,gBAAkB,WAC/C,IAAIlF,EAAShJ,KAAKgJ,OAClB,GAAIA,EAAQ,CACR,IAAInB,EAAKmB,EAAOI,QAChBvB,EAAG0U,cAAcvc,KAAKgT,iBACfhT,KAAKgT,SACZhK,EAAOmF,aAAanO,KAAKqT,SAC7B,CACAhN,EAAOnD,UAAUgL,gBAAgB9K,KAAKpD,aAC/BA,KAAKqT,gBACLrT,KAAKwT,yBACLxT,KAAK4T,WAChB,EACOtB,CACX,CA9f2C,CA8fzC,MACF,YC5nBA,IAAIkK,GAAgC,WAKhC,SAASA,EAAe1b,EAAME,GAC1BhB,KAAKc,KAAOA,EACZd,KAAKgB,KAAOA,EAKZhB,KAAKyc,SAAW,IACpB,CAkBA,OAbAD,EAAetZ,UAAUmX,WAAa,SAAUxS,GAC5C,IAAK7H,KAAKyc,SAAU,CAChB,IAAI3U,EAAUD,EAAG0E,gBACjB1E,EAAGK,YAAYL,EAAGM,WAAYL,GAC9BD,EAAGO,cAAcP,EAAGM,WAAYN,EAAGQ,eAAgBR,EAAGS,eACtDT,EAAGO,cAAcP,EAAGM,WAAYN,EAAGU,eAAgBV,EAAGS,eACtDT,EAAGO,cAAcP,EAAGM,WAAYN,EAAGW,mBAAoBX,EAAGI,SAC1DJ,EAAGO,cAAcP,EAAGM,WAAYN,EAAGY,mBAAoBZ,EAAGI,SAC1DJ,EAAGe,WAAWf,EAAGM,WAAY,EAAGN,EAAGgB,KAAM7I,KAAKgB,KAAKZ,OAAS,EAAG,EAAG,EAAGyH,EAAGgB,KAAMhB,EAAGiB,cAAe9I,KAAKgB,MACrGhB,KAAKyc,SAAW3U,CACpB,CACA,OAAO9H,KAAKyc,QAChB,EACOD,CACX,CAhCmC,GAiCnC,Y,4BCkEWE,GAAa,CACpBC,OAAQ,EACRC,OAAQ,EACRC,MAAO,EACPC,QAAS,EACTC,aAAc,GACdC,IAAK,GACLC,KAAM,GAeCC,GAAY,CAAC,EAOjB,SAASC,GAAa7a,GACzB,GAAqB,kBAAVA,EACP,OAAOoa,GAAWC,OAEtB,GAAqB,mBAAVra,EACP,OAAOoa,GAAWI,QAEtB,GAAqB,kBAAVxa,EACP,OAAI,SAAcA,GACPoa,GAAWG,MAAQH,GAAWE,OAElCF,GAAWE,OAEtB,IAAKtb,MAAM+C,QAAQ/B,GACf,MAAM,IAAI0H,MAAM,yBAAyBnF,OAAOuY,KAAKC,UAAU/a,KAEnE,IAAIgb,EAAmC,EACnCC,EAAcD,EAASE,OAAM,SAAUC,GACvC,MAAoB,kBAANA,CAClB,IACA,GAAIF,EACA,OAAwB,IAApBD,EAASld,QAAoC,IAApBkd,EAASld,OAC3Bsc,GAAWG,MAAQH,GAAWK,aAElCL,GAAWK,aAEtB,GAA2B,kBAAhBO,EAAS,GAChB,MAAM,IAAItT,MAAM,iDAAiDnF,OAAOuY,KAAKC,UAAUC,KAE3F,IAAII,EAAWR,GAAUI,EAAS,IAClC,QAAiB/J,IAAbmK,EACA,MAAM,IAAI1T,MAAM,qCAAqCnF,OAAOuY,KAAKC,UAAUC,KAE/E,OAAOI,EAASC,cAAcL,EAASxY,MAAM,GACjD,CAMO,SAAS8Y,GAAaC,GACzB,OAAO,SAAKA,GAAa,IAAM,CACnC,CAiBO,SAASC,GAAaL,GACzB,IAAIM,EAAIN,EAAEO,WACV,OAA2B,IAApBD,EAAEE,QAAQ,KAAcF,EAAI,KAAOA,CAC9C,CAMO,SAASG,GAAYC,GACxB,GAAIA,EAAM/d,OAAS,GAAK+d,EAAM/d,OAAS,EACnC,MAAM,IAAI4J,MAAM,kEAEpB,MAAO,MAAMnF,OAAOsZ,EAAM/d,OAAQ,KAAKyE,OAAOsZ,EAAMxc,IAAImc,IAAcM,KAAK,MAAO,IACtF,CAQO,SAASC,GAAYC,GACxB,IAAIH,GAAQ,SAAQG,GAAOxZ,QAI3B,OAHIqZ,EAAM/d,OAAS,GACf+d,EAAM3R,KAAK,GAER0R,GAAYC,EAAMxc,KAAI,SAAU4c,EAAGtd,GACtC,OAAOA,EAAI,EAAIsd,EAAI,IAAMA,CAC7B,IACJ,CAOO,SAASC,GAA0BC,EAASC,GAI/C,YAH0CnL,IAAtCkL,EAAQE,kBAAkBD,KAC1BD,EAAQE,kBAAkBD,GAAU/Y,OAAOuS,KAAKuG,EAAQE,mBAAmBve,QAExEqe,EAAQE,kBAAkBD,EACrC,CAQO,SAASE,GAAaH,EAASC,GAClC,OAAOZ,GAAaU,GAA0BC,EAASC,GAC3D,CASO,SAASG,GAAiBJ,EAASnc,EAAOwc,GAE7C,GAAIxd,MAAM+C,QAAQ/B,IAA8B,kBAAbA,EAAM,GAAiB,CACtD,IAAIob,EAAWR,GAAU5a,EAAM,IAC/B,QAAiBiR,IAAbmK,EACA,MAAM,IAAI1T,MAAM,qCAAqCnF,OAAOuY,KAAKC,UAAU/a,KAE/E,OAAOob,EAASqB,OAAON,EAASnc,EAAMwC,MAAM,GAAIga,EACpD,CACA,IAAIjB,EAAYV,GAAa7a,GAC7B,IAAKub,EAAYnB,GAAWC,QAAU,EAClC,OAAOmB,GAAmC,GAE9C,IAAKD,EAAYnB,GAAWI,SAAW,EACnC,OAAOxa,EAAM0b,WAEjB,IAAKH,EAAYnB,GAAWE,QAAU,SACpBrJ,IAAbuL,GAA0BA,GAAYpC,GAAWE,QAClD,OAAOgC,GAAaH,EAASnc,EAAM0b,YAEvC,IAAKH,EAAYnB,GAAWG,OAAS,SACnBtJ,IAAbuL,GAA0BA,GAAYpC,GAAWG,OAClD,OAAOwB,GAAkD,GAE7D,IAAKR,EAAYnB,GAAWK,cAAgB,EACxC,OAAOmB,GAAyC,GAEpD,MAAM,IAAIlU,MAAM,yBAAyBnF,OAAOvC,EAAO,oBAAoBuC,OAAOia,EAAU,KAChG,CACA,SAASE,GAAa1c,GAClB,KAAM6a,GAAa7a,GAASoa,GAAWC,QACnC,MAAM,IAAI3S,MAAM,qCAAqCnF,OAAOuY,KAAKC,UAAU/a,GAAQ,YAE3F,CACA,SAAS2c,GAAcC,GACnB,IAAK,IAAIje,EAAI,EAAGA,EAAIie,EAAO9e,OAAQa,IAC/B+d,GAAaE,EAAOje,GAE5B,CACA,SAASke,GAAa7c,GAClB,KAAM6a,GAAa7a,GAASoa,GAAWE,QACnC,MAAM,IAAI5S,MAAM,oCAAoCnF,OAAOuY,KAAKC,UAAU/a,GAAQ,YAE1F,CACA,SAAS8c,GAAc9c,GACnB,KAAM6a,GAAa7a,GAASoa,GAAWI,SACnC,MAAM,IAAI9S,MAAM,qCAAqCnF,OAAOuY,KAAKC,UAAU/a,GAAQ,YAE3F,CACA,SAAS+c,GAAgBC,EAAMC,GAC3B,GAAID,EAAKlf,SAAWmf,EAChB,MAAM,IAAIvV,MAAM,WAAWnF,OAAO0a,EAAO,kCAAkC1a,OAAOya,EAAKlf,OAAQ,YAEvG,CACA,SAASof,GAAmBF,EAAMC,GAC9B,GAAID,EAAKlf,OAASmf,EACd,MAAM,IAAIvV,MAAM,YAAYnF,OAAO0a,EAAO,kCAAkC1a,OAAOya,EAAKlf,OAAQ,YAExG,CACA,SAASqf,GAAmBH,EAAMC,GAC9B,GAAID,EAAKlf,OAASmf,EACd,MAAM,IAAIvV,MAAM,WAAWnF,OAAO0a,EAAO,kCAAkC1a,OAAOya,EAAKlf,OAAQ,YAEvG,CACA,SAASsf,GAAeJ,GACpB,GAAIA,EAAKlf,OAAS,IAAM,EACpB,MAAM,IAAI4J,MAAM,iDAAiDnF,OAAOya,EAAM,YAEtF,CACA,SAASK,GAAcL,GACnB,GAAIA,EAAKlf,OAAS,IAAM,EACpB,MAAM,IAAI4J,MAAM,gDAAgDnF,OAAOya,EAAM,YAErF,CACA,SAASM,GAAyBN,EAAMO,GACpC,IAAKjC,GAAaiC,GACd,MAAM,IAAI7V,MAAM,gEAAgEnF,OAAOuY,KAAKC,UAAUiC,IAE9G,CAqBO,SAASQ,GAAuBC,GACnC,MAAO,SAAWA,CACtB,CAtBA7C,GAAU,OAAS,CACfS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWM,GACtB,EACA+B,OAAQ,SAAUN,EAASa,GACvBD,GAAgBC,EAAM,GACtBH,GAAaG,EAAK,IAClB,IAAIhd,EAAQgd,EAAK,GAAGtB,YACuB,IAAvCS,EAAQuB,WAAW/B,QAAQ3b,IAC3Bmc,EAAQuB,WAAWxT,KAAKlK,GAE5B,IAAI2d,EAASxB,EAAQyB,iBAAmB,KAAO,KAC/C,OAAOD,EAAS3d,CACpB,GAUJ4a,GAAU,OAAS,CACfS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWM,GACtB,EACA+B,OAAQ,SAAUN,EAASa,GACvBD,GAAgBC,EAAM,GACtBH,GAAaG,EAAK,IAClB,IAAIhd,EAAQgd,EAAK,GAAGtB,WAIpB,OAH0C,IAAtCS,EAAQ0B,UAAUlC,QAAQ3b,IAC1Bmc,EAAQ0B,UAAU3T,KAAKlK,GAEpBwd,GAAuBxd,EAClC,GAEG,IAAI8d,GAAwB,oBAEnClD,GAAU,WAAa,CACnBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWG,KACtB,EACAkC,OAAQ,SAAUN,EAASa,GACvBD,GAAgBC,EAAM,GACtBN,GAAaM,EAAK,IAClB,IAAIe,EAAQxB,GAAiBJ,EAASa,EAAK,IACvCgB,EAAShB,EAAK,GAClB,IAAKhe,MAAM+C,QAAQic,GACf,MAAM,IAAItW,MAAM,mDAIpB,IAFA,IAAIuW,EAAYD,EAAOlgB,OACnBogB,EAAU,IAAI1T,WAAuB,EAAZyT,GACpBtf,EAAI,EAAGA,EAAIsf,EAAWtf,IAAK,CAChC,IAAIwf,EAAYH,EAAOrf,GAInBqd,OAAQ,EACZ,GAAyB,kBAAdmC,EACPnC,GAAQ,SAAWmC,OAElB,CACD,IAAKnf,MAAM+C,QAAQoc,GACf,MAAM,IAAIzW,MAAM,wEAEpB,IAAI0W,EAAWD,EAAUrgB,OACzB,GAAiB,IAAbsgB,EACApC,EAAQmC,MAEP,CACD,GAAiB,IAAbC,EACA,MAAM,IAAI1W,MAAM,qDAAqDnF,OAAO6b,IAEhFpC,EAAQ,CAACmC,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAI,EACvD,CACJ,CACA,IAAInR,EAAa,EAAJrO,EACbuf,EAAQlR,GAAUgP,EAAM,GACxBkC,EAAQlR,EAAS,GAAKgP,EAAM,GAC5BkC,EAAQlR,EAAS,GAAKgP,EAAM,GAC5BkC,EAAQlR,EAAS,GAAgB,IAAXgP,EAAM,EAChC,CACKG,EAAQ9K,kBACT8K,EAAQ9K,gBAAkB,IAE9B,IAAIgN,EAAc,GAAG9b,OAAOub,GAAuB,KAAKvb,OAAO4Z,EAAQ9K,gBAAgBvT,OAAQ,KAC3Fga,EAAiB,IAAI,GAAeuG,EAAaH,GAErD,OADA/B,EAAQ9K,gBAAgBnH,KAAK4N,GACtB,aAAavV,OAAO8b,EAAa,YAAY9b,OAAOwb,EAAO,cAAcxb,OAAO0b,EAAW,YACtG,GAEJ,IAAIK,GAAsB,eAkP1B,SAASC,GAAiBnD,GACtB,MAAO,CACHC,cAAe,SAAU2B,GACrB,OAAO5C,GAAWI,OACtB,EACAiC,OAAQ,SAAUN,EAASa,GACvBD,GAAgBC,EAAM,GAGtB,IADA,IAAIva,EAAO2X,GAAWM,IACb/b,EAAI,EAAGA,EAAIqe,EAAKlf,OAAQa,IAC7B8D,GAAQoY,GAAamC,EAAKre,IAE9B,GAAI8D,IAAS2X,GAAWO,KACpB,MAAM,IAAIjT,MAAM,mDAAmDnF,OAAOuY,KAAKC,UAAUiC,GAAO,aAKpG,OADAva,IAAS2X,GAAWG,MACb,IAAIhY,OAAOga,GAAiBJ,EAASa,EAAK,GAAIva,GAAO,KAAKF,OAAO6Y,EAAU,KAAK7Y,OAAOga,GAAiBJ,EAASa,EAAK,GAAIva,GAAO,IAC5I,EAER,CAaA,SAAS+b,GAAoBpD,GACzB,MAAO,CACHC,cAAe,SAAU2B,GACrB,OAAO5C,GAAWI,OACtB,EACAiC,OAAQ,SAAUN,EAASa,GACvBE,GAAmBF,EAAM,GACzB,IAAK,IAAIre,EAAI,EAAGA,EAAIqe,EAAKlf,OAAQa,IAC7Bme,GAAcE,EAAKre,IAEvB,IAAI8f,EAAS,GAKb,OAJAA,EAASzB,EACJ3d,KAAI,SAAUqf,GAAO,OAAOnC,GAAiBJ,EAASuC,EAAM,IAC5D5C,KAAK,IAAIvZ,OAAO6Y,EAAU,MAC/BqD,EAAS,IAAIlc,OAAOkc,EAAQ,KACrBA,CACX,EAER,CArSA7D,GAAU,QAAU,CAChBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GACvBE,GAAmBF,EAAM,GACzBG,GAAmBH,EAAM,GACzB,IAAIxb,EAAOwb,EAAK,GAChB,KAAMsB,MAAuBnC,EAAQwC,WAAY,CAG7C,IAFA,IAAIC,EAAW,GACXjY,EAAYwV,EAAQxV,WAAa,EAC5BhI,EAAI,EAAGA,EAAIgI,EAAWhI,IAAK,CAChC,IAAIkgB,EAAalU,KAAKC,MAAMjM,EAAI,GAC5B6M,EAAY7M,EAAI,EAChB6M,IAAc7E,EAAY,GAAmB,IAAd6E,IAE/BA,EAAY,GAEhB,IAAIsT,EAAc,GAAGvc,OAAOoL,GAASC,mBAAoB,KAAKrL,OAAOsc,EAAY,KACjFD,GAAY,2BAA2Brc,OAAO5D,EAAI,EAAG,wCAAwC4D,OAAOuc,EAAa,qCAAqCvc,OAAOiJ,EAAW,4BAC5K,CACA2Q,EAAQwC,UAAUL,IAAuB,4GAA4G/b,OAAOoL,GAASK,oBAAqB,sCAAsCzL,OAAOoL,GAASM,qBAAsB,iBAAiB1L,OAAOqc,EAAU,sBAC5S,CACA,IAAIG,EAAiBxC,GAAiBJ,EAAS3a,GAC3Cwd,EAAoBzC,GAAiBJ,EAASa,EAAK,IAAM,GACzDiC,EAAoB1C,GAAiBJ,EAASa,EAAK,IAAM,GAC7D,MAAO,GAAGza,OAAO+b,GAAqB,KAAK/b,OAAOwc,EAAgB,MAAMxc,OAAOyc,EAAmB,MAAMzc,OAAO0c,EAAmB,IACtI,GAEJrE,GAAU,QAAU,CAChBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAEvB,OADAD,GAAgBC,EAAM,GACf,QACX,GAEJpC,GAAU,QAAU,CAChBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAEvB,OADAD,GAAgBC,EAAM,GACf,QACX,GAEJpC,GAAU,cAAgB,CACtBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAEvB,OADAD,GAAgBC,EAAM,GACf,cACX,GAEJpC,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,IAAIza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC5G,GAEJpC,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,IAAIza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC5G,GAEJpC,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,IAAIza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC5G,GAEJpC,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,IAAIza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC5G,GAEJpC,GAAU,SAAW,CACjBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GACvBD,GAAgBC,EAAM,GACtBL,GAAcK,GACd,IAAItb,EAAM6a,GAAiBJ,EAASa,EAAK,IACrCnb,EAAM0a,GAAiBJ,EAASa,EAAK,IACzC,MAAO,SAASza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,MAAMza,OAAOb,EAAK,MAAMa,OAAOV,EAAK,IACnG,GAEJ+Y,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,MAAMza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC9G,GAEJpC,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,MAAMza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC9G,GAEJpC,GAAU,OAAS,CACfS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC7D,GAEJpC,GAAU,SAAW,CACjBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,SAASza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC/D,GAEJpC,GAAU,SAAW,CACjBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,SAASza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,UAC/D,GAEJpC,GAAU,QAAU,CAChBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,QAAQza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC9D,GAEJpC,GAAU,OAAS,CACfS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC7D,GAEJpC,GAAU,OAAS,CACfS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC7D,GAEJpC,GAAU,QAAU,CAChBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWC,MACtB,EACAoC,OAAQ,SAAUN,EAASa,GAIvB,OAHAE,GAAmBF,EAAM,GACzBG,GAAmBH,EAAM,GACzBL,GAAcK,GACS,IAAhBA,EAAKlf,OACN,QAAQyE,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,MAAMza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,KACpG,QAAQza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC7D,GAEJpC,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWI,OACtB,EACAiC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,IAAIza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC5G,GAEJpC,GAAU,MAAQ,CACdS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWI,OACtB,EACAiC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,IAAIza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,QAAQza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC7G,GAEJpC,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWI,OACtB,EACAiC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,IAAIza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,OAAOza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC5G,GAEJpC,GAAU,MAAQ,CACdS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWI,OACtB,EACAiC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBL,GAAcK,GACP,IAAIza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,QAAQza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC7G,GAwBJpC,GAAU,MAAQ2D,GAAiB,MACnC3D,GAAU,MAAQ2D,GAAiB,MACnC3D,GAAU,KAAO,CACbS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWI,OACtB,EACAiC,OAAQ,SAAUN,EAASa,GAGvB,OAFAD,GAAgBC,EAAM,GACtBF,GAAcE,EAAK,IACZ,KAAKza,OAAOga,GAAiBJ,EAASa,EAAK,IAAK,IAC3D,GAqBJpC,GAAU,OAAS4D,GAAoB,MACvC5D,GAAU,OAAS4D,GAAoB,MACvC5D,GAAU,WAAa,CACnBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWI,OACtB,EACAiC,OAAQ,SAAUN,EAASa,GACvBD,GAAgBC,EAAM,GACtBL,GAAcK,GACd,IAAItb,EAAM6a,GAAiBJ,EAASa,EAAK,IACrCnb,EAAM0a,GAAiBJ,EAASa,EAAK,IACrChd,EAAQuc,GAAiBJ,EAASa,EAAK,IAC3C,MAAO,IAAIza,OAAOvC,EAAO,QAAQuC,OAAOb,EAAK,QAAQa,OAAOvC,EAAO,QAAQuC,OAAOV,EAAK,IAC3F,GAEJ+Y,GAAU,SAAW,CACjBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWK,YACtB,EACAgC,OAAQ,SAAUN,EAASa,GACvBE,GAAmBF,EAAM,GACzBG,GAAmBH,EAAM,GACzBL,GAAcK,GACd,IAAIkC,EAAalC,EAAK3d,KAAI,SAAU8B,GAChC,OAAOob,GAAiBJ,EAAShb,EAAKiZ,GAAWC,OACrD,IACA,MAAO,MAAM9X,OAAOya,EAAKlf,OAAQ,KAAKyE,OAAO2c,EAAWpD,KAAK,MAAO,IACxE,GAEJlB,GAAU,SAAW,CACjBS,cAAe,SAAU2B,GACrB,OAAO5C,GAAWG,KACtB,EACAkC,OAAQ,SAAUN,EAASa,GACvBE,GAAmBF,EAAM,GACzBG,GAAmBH,EAAM,GACzBL,GAAcK,GACd,IAAInB,EAAqC,EACrB,IAAhBmB,EAAKlf,QACL+d,EAAM3R,KAAK,GAEf,IAAIgV,EAAalC,EAAK3d,KAAI,SAAU8B,EAAKxC,GACrC,OAAQ4d,GAAiBJ,EAAShb,EAAKiZ,GAAWC,SAC7C1b,EAAI,EAAI,WAAa,GAC9B,IACA,MAAO,MAAM4D,OAAOya,EAAKlf,OAAQ,KAAKyE,OAAO2c,EAAWpD,KAAK,MAAO,IACxE,GAEJlB,GAAU,eAAiB,CACvBS,cAAe,SAAU2B,GAErB,IADA,IAAIva,EAAO2X,GAAWG,MAAQH,GAAWC,OAChC1b,EAAI,EAAGA,EAAIqe,EAAKlf,OAAQa,GAAK,EAClC8D,GAAcoY,GAAamC,EAAKre,IAEpC,OAAO8D,CACX,EACAga,OAAQ,SAAUN,EAASa,EAAMmC,GAC7B/B,GAAeJ,GACfE,GAAmBF,EAAM,GAEzB,IACIoC,EADA3c,EAAOua,EAAK,GAEhB,OAAQva,EAAK,IACT,IAAK,SACD2c,EAAgB,EAChB,MACJ,IAAK,cACDA,EAAgB3c,EAAK,GACrB,MACJ,QACI2c,EAAgB,KAExB,IAAKA,EACD,MAAM,IAAI1X,MAAM,oEAAsEnF,OAAOuY,KAAKC,UAAUtY,KAGhH,IAAI+Z,OAA4BvL,IAAjBkO,EAA6BA,EAAe/E,GAAWM,IAClE2E,EAAazE,GAAU,eAAeS,cAAc2B,GAAQR,EAChEc,GAAyBN,EAAMqC,GAI/B,IAHA,IAAIC,EAAQ/C,GAAiBJ,EAASa,EAAK,IACvCuC,EAAW/D,GAAa4D,GACxBX,EAAS,GACJ9f,EAAI,EAAGA,EAAIqe,EAAKlf,OAAS,EAAGa,GAAK,EAAG,CACzC,IAAI6gB,EAAQjD,GAAiBJ,EAASa,EAAKre,IACvC8gB,EAAUhB,GAAUlC,GAAiBJ,EAASa,EAAKre,EAAI,GAAI0gB,GAC3DK,EAAQnD,GAAiBJ,EAASa,EAAKre,EAAI,IAC3CghB,EAAUpD,GAAiBJ,EAASa,EAAKre,EAAI,GAAI0gB,GACrDZ,EAAS,OAAOlc,OAAOkd,EAAS,MAAMld,OAAOod,EAAS,iBAAiBpd,OAAO+c,EAAO,OAAO/c,OAAOid,EAAO,SAASjd,OAAOmd,EAAO,OAAOnd,OAAOid,EAAO,kBAAkBjd,OAAOgd,EAAU,KAC7L,CACA,OAAOd,CACX,GAEJ7D,GAAU,SAAW,CACjBS,cAAe,SAAU2B,GAErB,IADA,IAAIva,EAAO2X,GAAWM,IACb/b,EAAI,EAAGA,EAAIqe,EAAKlf,OAAQa,GAAK,EAClC8D,GAAcoY,GAAamC,EAAKre,IAGpC,OADA8D,GAAcoY,GAAamC,EAAKA,EAAKlf,OAAS,IACvC2E,CACX,EACAga,OAAQ,SAAUN,EAASa,EAAMmC,GAC7B/B,GAAeJ,GACfE,GAAmBF,EAAM,GACzB,IAAIR,OAA4BvL,IAAjBkO,EAA6BA,EAAe/E,GAAWM,IAClE2E,EAAazE,GAAU,SAASS,cAAc2B,GAAQR,EAC1Dc,GAAyBN,EAAMqC,GAI/B,IAHA,IAAIC,EAAQ/C,GAAiBJ,EAASa,EAAK,IACvC4C,EAAWrD,GAAiBJ,EAASa,EAAKA,EAAKlf,OAAS,GAAIuhB,GAC5DZ,EAAS,KACJ9f,EAAIqe,EAAKlf,OAAS,EAAGa,GAAK,EAAGA,GAAK,EAAG,CAC1C,IAAIkhB,EAAQtD,GAAiBJ,EAASa,EAAKre,IACvCmhB,EAASvD,GAAiBJ,EAASa,EAAKre,EAAI,GAAI0gB,GACpDZ,EAAS,IAAIlc,OAAO+c,EAAO,QAAQ/c,OAAOsd,EAAO,OAAOtd,OAAOud,EAAQ,OAAOvd,OAAOkc,GAAUmB,EAAU,IAC7G,CACA,OAAOnB,CACX,GAEJ7D,GAAU,QAAU,CAChBS,cAAe,SAAU2B,GAErB,IADA,IAAIva,EAAO2X,GAAWM,IACb/b,EAAI,EAAGA,EAAIqe,EAAKlf,OAAQa,GAAK,EAClC8D,GAAcoY,GAAamC,EAAKre,IAGpC,OADA8D,GAAcoY,GAAamC,EAAKA,EAAKlf,OAAS,IACvC2E,CACX,EACAga,OAAQ,SAAUN,EAASa,EAAMmC,GAC7B9B,GAAcL,GACdE,GAAmBF,EAAM,GACzB,IAAIR,OAA4BvL,IAAjBkO,EAA6BA,EAAe/E,GAAWM,IAClE2E,EAAazE,GAAU,QAAQS,cAAc2B,GAAQR,EACzDc,GAAyBN,EAAMqC,GAC/B,IAAK,IAAI1gB,EAAI,EAAGA,EAAIqe,EAAKlf,OAAS,EAAGa,GAAK,EACtCme,GAAcE,EAAKre,IAEvB,IAAIihB,EAAWrD,GAAiBJ,EAASa,EAAKA,EAAKlf,OAAS,GAAIuhB,GAC5DZ,EAAS,KACb,IAAS9f,EAAIqe,EAAKlf,OAAS,EAAGa,GAAK,EAAGA,GAAK,EAAG,CAC1C,IAAIohB,EAAYxD,GAAiBJ,EAASa,EAAKre,IAC3CmhB,EAASvD,GAAiBJ,EAASa,EAAKre,EAAI,GAAI0gB,GACpDZ,EAAS,IAAIlc,OAAOwd,EAAW,OAAOxd,OAAOud,EAAQ,OAAOvd,OAAOkc,GAAUmB,EAAU,IAC3F,CACA,OAAOnB,CACX,G,gBC71BA,GAAwC,WACxC,IAAIvb,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GA8F5C,SAASqc,GAAW3iB,EAAOsJ,GACvB,IAAIiK,EAAe,wBAAwBrO,OAAOiM,GAAWC,cAAe,wBAAwBlM,OAAOoL,GAASE,eAAgB,yBAAyBtL,OAAOoL,GAASK,oBAAqB,yBAAyBzL,OAAOoL,GAASM,qBAAsB,yBAAyB1L,OAAOoL,GAASO,mBAAoB,yBAAyB3L,OAAOoL,GAASQ,iBAAkB,yBAAyB5L,OAAOoL,GAASS,iBAAkB,yBAAyB7L,OAAOoL,GAASI,MAAO,qHAAqHxL,OAAOiM,GAAWC,cAAe,yCAAyClM,OAAOoL,GAASQ,iBAAkB,OAAO5L,OAAOoL,GAASO,mBAAoB,OAAO3L,OAAOoL,GAASK,oBAAqB,mCAAmCzL,OAAOoL,GAASS,iBAAkB,OAAO7L,OAAOoL,GAASO,mBAAoB,OAAO3L,OAAOoL,GAASM,qBAAsB,wDAAwD1L,OAAOoL,GAASE,eAAgB,YAAYtL,OAAOiM,GAAWC,cAAe,MAAMlM,OAAOoL,GAASI,MAAO,sBAIvlCoO,EAAU,CACVyB,kBAAkB,EAClBC,UAAW,GACXH,WAAY,GACZrB,kBAAmB,CAAC,EACpBsC,UAAW,CAAC,EACZhY,UAAWA,GAEXsZ,EAAW,GACf,QAAoBhP,IAAhB5T,EAAM2e,MAAqB,CAC3B,IAAIA,EAAQO,GAAiBJ,EAAS9e,EAAM2e,MAAO5B,GAAWG,OAC9D0F,EAAS/V,KAAK,WAAW3H,OAAOyZ,EAAO,KAC3C,CACA,QAAuB/K,IAAnB5T,EAAM6iB,SAAwB,CAC9B,IAAIA,EAAW3D,GAAiBJ,EAAS9e,EAAM6iB,SAAU9F,GAAWC,QACpE4F,EAAS/V,KAAK,sBAAsB3H,OAAO2d,EAAU,2BAA2B3d,OAAO2d,EAAU,uDACrG,CACA,QAAuBjP,IAAnB5T,EAAM8iB,SAAwB,CAC9B,IAAIA,EAAW5D,GAAiBJ,EAAS9e,EAAM8iB,SAAU/F,GAAWC,QACpE4F,EAAS/V,KAAK,sBAAsB3H,OAAO4d,EAAU,mEACzD,CACA,QAAyBlP,IAArB5T,EAAM+iB,WAA0B,CAChC,IAAIA,EAAa7D,GAAiBJ,EAAS9e,EAAM+iB,WAAYhG,GAAWC,QACxE4F,EAAS/V,KAAK,8BAA8B3H,OAAO6d,EAAY,oZACnE,CACA,QAAoBnP,IAAhB5T,EAAMgjB,MAAqB,CAC3B,IAAIA,EAAQ9D,GAAiBJ,EAAS9e,EAAMgjB,MAAOjG,GAAWC,QAC9D4F,EAAS/V,KAAK,yCAAyC3H,OAAO8d,EAAO,OACzE,CACA,QAAyBpP,IAArB5T,EAAMijB,WAA0B,CAChC,IAAIA,EAAa/D,GAAiBJ,EAAS9e,EAAMijB,WAAYlG,GAAWC,QACxE4F,EAAS/V,KAAK,iCAAiC3H,OAAO+d,EAAY,gDACtE,CAEA,IAAIpQ,EAAW,CAAC,EACZqQ,EAAepE,EAAQ0B,UAAU/f,OACrC,GAAIyiB,EAAe,IAAMljB,EAAMwgB,UAC3B,MAAM,IAAInW,MAAM,wCAAwCnF,OAAO4Z,EAAQ0B,UAAW,MAgBtF,IAdA,IAAI2C,EAAU,SAAU7hB,GACpB,IAAI8e,EAAetB,EAAQ0B,UAAUlf,GACrC,KAAM8e,KAAgBpgB,EAAMwgB,WACxB,MAAM,IAAInW,MAAM,YAAYnF,OAAOkb,EAAc,yBAErD,IAAIhG,EAAc+F,GAAuBC,GACzCvN,EAASuH,GAAe,WACpB,IAAIzX,EAAQ3C,EAAMwgB,UAAUJ,GAI5B,MAHqB,kBAAVzd,IACPA,EAAQkc,GAA0BC,EAASnc,SAE9BiR,IAAVjR,EAAsBA,GAAS,OAC1C,CACJ,EACSrB,EAAI,EAAGA,EAAI4hB,IAAgB5hB,EAChC6hB,EAAQ7hB,GAEZ,IAAI8hB,EAAsBpd,OAAOuS,KAAK1F,GAAU7Q,KAAI,SAAUb,GAC1D,MAAO,iBAAiB+D,OAAO/D,EAAM,IACzC,IACIqM,EAAeF,KAAKG,KAAKnE,EAAY,GACzC8Z,EAAoBvW,KAAK,qBAAqB3H,OAAOoL,GAASC,mBAAoB,KAAKrL,OAAOsI,EAAc,OACxGsR,EAAQ9K,iBACRoP,EAAoBvW,KAAK,qBAAqB3H,OAAOub,GAAuB,KAAKvb,OAAO4Z,EAAQ9K,gBAAgBvT,OAAQ,OAE5H,IAAI4iB,EAAqBrd,OAAOuS,KAAKuG,EAAQwC,WAAWtf,KAAI,SAAUb,GAClE,OAAO2d,EAAQwC,UAAUngB,EAC7B,IACIsS,EAAiB,gNAAgNvO,OAAOoL,GAASU,cAAe,yBAAyB9L,OAAOoL,GAASG,iBAAkB,yBAAyBvL,OAAOoL,GAASK,oBAAqB,yBAAyBzL,OAAOoL,GAASM,qBAAsB,yBAAyB1L,OAAOoL,GAASW,WAAY,yBAAyB/L,OAAOoL,GAASY,KAAM,aAAahM,OAAOke,EAAoB3E,KAAK,MAAO,YAAYvZ,OAAOme,EAAmB5E,KAAK,MAAO,+DAA+DvZ,OAAOoL,GAASU,cAAe,oCAAoC9L,OAAOoL,GAASU,cAAe,oCAAoC9L,OAAOoL,GAASU,cAAe,oCAAoC9L,OAAOoL,GAASU,cAAe,8EAA8E9L,OAAOoL,GAASC,mBAAoB,oCAAoCrL,OAAO0d,EAASnE,KAAK,MAAO,gKAAgKvZ,OAAOoL,GAASG,iBAAkB,YACjyC,MAAO,CACH8C,aAAcA,EACdE,eAAgBA,EAChBZ,SAAUA,EACVmB,gBAAiB8K,EAAQ9K,gBAEjC,CAaA,IAAIsP,GAAgC,SAAU5c,GAK1C,SAAS4c,EAAeC,GACpB,IAAI5c,EAAQtG,KACRsD,EAAU4f,GAAc,SAAO,CAAC,EAAGA,GAAe,CAAC,EACnDvjB,EAAQ2D,EAAQ3D,OAAS,CAAC,SACvB2D,EAAQ3D,MACf,IAAI2T,EAAYhQ,EAAQgQ,UAkCxB,cAjCOhQ,EAAQgQ,UACfhN,EAAQD,EAAOjD,KAAKpD,KAAMsD,IAAYtD,KAKtCsG,EAAM6c,SAAW7f,EAAQsY,QAKzBtV,EAAM8c,gBAAkB,KAKxB9c,EAAM+c,oBAAsB9X,IAK5BjF,EAAMgd,OAAS3jB,EAKf2G,EAAMid,WAAajQ,EAKnBhN,EAAMkd,gBAAkBld,EAAMgd,OAAOnD,WAAa,CAAC,EACnD7Z,EAAMmd,kBAAkB,WAAsBnd,EAAMod,qBAC7Cpd,CACX,CAqJA,OAjMA,GAAU2c,EAAgB5c,GAmD1B4c,EAAe/f,UAAU2Y,WAAa,SAAUpK,EAAQkF,GACpD,IAAIlX,EAASO,KAAK2jB,YAClB,OAAO3jB,KAAKmjB,SACmB,oBAAlBnjB,KAAKmjB,SACRnjB,KAAKmjB,SAAS1R,EAAQkF,GACtB3W,KAAKmjB,SACT1jB,EACI,CAACA,GACD,EACd,EAIAwjB,EAAe/f,UAAU6O,gBAAkB,WACvC,OAAO/R,KAAKojB,iBAAmBpjB,KAAK2jB,WACxC,EAIAV,EAAe/f,UAAU0gB,eAAiB,WACtC,IAAInkB,EAASO,KAAK+R,kBAClB,OAAOtS,EAASA,EAAOuM,WAAa,WACxC,EAIAiX,EAAe/f,UAAUwgB,oBAAsB,WACvC1jB,KAAK2jB,aACL3jB,KAAK6jB,SAAS7jB,KAAKsjB,OAE3B,EAKAL,EAAe/f,UAAU4gB,oBAAsB,WAC3C,IAAI3f,EAAMgU,OAAO4L,iBACbnI,EAAU5b,KAAK6b,WAAW,EAAE1X,GAAMA,EAAKA,EAAKA,GAAMA,GACtD,OAAOyX,GAAWA,EAAQxb,QAAU,cAAewb,EAAQ,GACrDA,EAAQ,GAAG3S,UACX,CACV,EACAga,EAAe/f,UAAU8gB,eAAiB,WACtC,IAAIC,EAAc3B,GAAWtiB,KAAKsjB,OAAQtjB,KAAK8jB,uBAC/C,OAAO,IAAI,GAAuB9jB,KAAM,CACpCkT,aAAc+Q,EAAY/Q,aAC1BE,eAAgB6Q,EAAY7Q,eAC5BZ,SAAUyR,EAAYzR,SACtBc,UAAWtT,KAAKujB,WAChB5P,gBAAiBsQ,EAAYtQ,iBAErC,EAMAsP,EAAe/f,UAAUghB,cAAgB,SAAU1S,EAAYoK,GAG3D,IAFA,IACIrR,EADA4Z,EAAgBnkB,KAAKokB,cAEhBnjB,EAAI,EAAGoW,EAAKuE,EAAQxb,OAAQa,EAAIoW,IAAMpW,EAC3CjB,KAAKojB,gBAAkBxH,EAAQ3a,GAC3BkjB,EAAcE,aAAa7S,KAC3BjH,EAAS4Z,EAAc3N,YAAYhF,IAG3C,OAAOjH,CACX,EAOA0Y,EAAe/f,UAAUtD,OAAS,SAAU4R,EAAYnO,GACpD,IAAIiD,EAAQtG,KACZA,KAAKskB,UAAW,EAkBhB,IAjBA,IAAIzS,EAAYL,EAAWK,UACvB+J,EAAU5b,KAAK6b,WAAWrK,EAAWC,OAAQI,EAAU8E,YACvD4N,GAAQ,EACRC,EAAU,SAAUvjB,EAAGoW,GACvB,IAAI5X,EAASmc,EAAQ3a,GACjBwjB,EAAchlB,EAAOuM,WACzB,GAAmB,WAAfyY,EAA0B,CAC1B,IAAIC,EAAa,WACY,SAArBjlB,EAAOuM,aACPvM,EAAOoM,oBAAoB,SAAU6Y,GACrCpe,EAAMgB,UAEd,EACA7H,EAAO6M,iBAAiB,SAAUoY,EACtC,CACAH,EAAQA,GAAwB,SAAfE,CACrB,EACSxjB,EAAI,EAAGoW,EAAKuE,EAAQxb,OAAQa,EAAIoW,IAAMpW,EAC3CujB,EAAQvjB,EAAGoW,GAEf,IAAI9M,EAASvK,KAAKkkB,cAAc1S,EAAYoK,GAC5C,GAAI5b,KAAKokB,cAAc3R,gBAAkB8R,EAGrC,OADAvkB,KAAKqjB,oBAAsBxR,EAAU8E,WAC9BpM,EAGX,GAAIvK,KAAKqjB,oBAAsB,GAAMxR,EAAU8E,WAAY,CACvD,IAAIgO,EAAa3kB,KAAK6b,WAAWrK,EAAWC,OAAQzR,KAAKqjB,qBAAqBlgB,QAAO,SAAU1D,GAAU,OAAQmc,EAAQgJ,SAASnlB,EAAS,IAC3I,GAAIklB,EAAWvkB,OAAS,EACpB,OAAOJ,KAAKkkB,cAAc1S,EAAYmT,EAE9C,CACA,OAAOpa,CACX,EASA0Y,EAAe/f,UAAU2gB,SAAW,SAAUlkB,GAC1CK,KAAKwjB,gBAAkB7jB,EAAMwgB,WAAa,CAAC,EAC3CngB,KAAKsjB,OAAS3jB,EACd,IAAIskB,EAAc3B,GAAWtiB,KAAKsjB,OAAQtjB,KAAK8jB,uBAC3Ce,EAAW7kB,KAAKokB,cACpBS,EAAShR,MAAM,CACXX,aAAc+Q,EAAY/Q,aAC1BE,eAAgB6Q,EAAY7Q,eAC5BZ,SAAUyR,EAAYzR,SACtBmB,gBAAiBsQ,EAAYtQ,kBAEjC3T,KAAKsH,SACT,EAMA2b,EAAe/f,UAAU4hB,qBAAuB,SAAU3E,IACtD,SAAOngB,KAAKwjB,gBAAiBrD,GAC7BngB,KAAKsH,SACT,EACO2b,CACX,CAnMmC,CAmMjC8B,EAAA,GAMF9B,GAAe/f,UAAUiY,QACzB,Y,oDCpYI,GAAwC,WACxC,IAAI3V,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GAmExC+e,GAAgC,SAAU3e,GAK1C,SAAS2e,EAAe1hB,GACpB,IAAIgD,EAAQtG,KACRX,OAAoCkU,IAAvBjQ,EAAQjE,WAA2B,YAAciE,EAAQjE,WACtEoV,EAAWnR,EAAQmR,SAiCvB,QAhCiBlB,IAAbkB,GAA0BpV,IAC1BoV,GAAW,SAAU,CACjBhD,QAAQ,SAAqBpS,GAC7B4lB,cAAe3hB,EAAQ2hB,cACvBC,QAAS5hB,EAAQ4hB,QACjBtN,QAAStU,EAAQsU,QACjBe,SAAUrV,EAAQqV,YAG1BrS,EAAQD,EAAOjD,KAAKpD,KAAM,CACtBsT,UAAW,GACX6R,aAAc7hB,EAAQ6hB,aACtBC,wBAAyB9hB,EAAQ8hB,wBACjC/lB,WAAYA,EACZoV,SAAUA,EACV4Q,OAAQ/hB,EAAQ+hB,OAChB9e,MAAOjD,EAAQiD,MACf+e,eAAgBhiB,EAAQgiB,eACxBhmB,MAAOgE,EAAQhE,MACfoH,WAAYpD,EAAQoD,WACpBC,YAAarD,EAAQqD,eACnB3G,KAKNsG,EAAM+E,aAA6BkI,IAAnBjQ,EAAQgI,OAAuBhI,EAAQgI,OAAS,EAKhEhF,EAAMif,UAAYjiB,EAAQqV,UAAW,QAAOrV,EAAQqV,UAAY,MAC3DrS,EAAMif,WAAajiB,EAAQgiB,gBAAkB7Q,EAAU,CACxD,IAAI+Q,GAAiB,QAAO/Q,EAASrJ,YAAY,IACjD9E,EAAMif,UAAY,CACdC,EAAe,GAAKliB,EAAQgiB,eAC5BE,EAAe,GAAKliB,EAAQgiB,eAEpC,CAoBA,OAfAhf,EAAMmf,WAAa,KAKnBnf,EAAMof,iBAAmB,CAAC,EAI1Bpf,EAAMM,QAAUtD,EAAQuD,OACxBP,EAAM0E,kBAAoB1E,EAAM0E,kBAAkBC,KAAK3E,GAIvDA,EAAM2C,eAAkCsK,IAAtBjQ,EAAQ2F,UAA0B,EAAI3F,EAAQ2F,UACzD3C,CACX,CAkGA,OArKA,GAAU0e,EAAgB3e,GA0E1B2e,EAAe9hB,UAAUyiB,aAAe,SAAUC,GAC9C5lB,KAAKylB,WAAaG,CACtB,EAQAZ,EAAe9hB,UAAUkI,YAAc,SAAU+F,GAC7C,GAAInR,KAAKylB,WACL,OAAOzlB,KAAKylB,WAAWtU,GAE3B,GAAInR,KAAKulB,UACL,OAAOvlB,KAAKulB,UAEhB,IAAI9Q,EAAWzU,KAAK6lB,cACpB,OAAOpR,GAAW,QAAOA,EAASrJ,YAAY+F,IAAM,CAAC,IAAK,IAC9D,EAKA6T,EAAe9hB,UAAUwR,uBAAyB,SAAUrV,GACxD,OAAOW,KAAKqL,OAChB,EAKA2Z,EAAe9hB,UAAU4iB,UAAY,SAAUjf,GAC3C7G,KAAK4G,QAAUC,CACnB,EASAme,EAAe9hB,UAAU4S,QAAU,SAAU3E,EAAGkE,EAAGG,EAAGO,EAAY1W,GAC9D,IAAI4H,EAAOjH,KAAKoL,YAAY+F,GACxBsG,GAAe,QAAUtG,EAAGkE,EAAGG,GACnC,GAAIxV,KAAK+lB,UAAUnQ,YAAY6B,GAC3B,OAAOzX,KAAK+lB,UAAUlQ,IAAI4B,GAE9B,IAAIuO,EAAehmB,KAAK4G,QACxB,SAASC,IACL,OAAO,UAAU,WACb,OAAOmf,EAAa7U,EAAGkE,EAAGG,EAC9B,GACJ,CACA,IAAIlS,GAAU,SAAO,CACjBmD,UAAW,CAAC0K,EAAGkE,EAAGG,GAClB3O,OAAQA,EACRI,KAAMA,GACPjH,KAAKimB,aACJnb,EAAO,IAAI,EAASxH,GAIxB,OAHAwH,EAAKjI,IAAM7C,KAAKqS,SAChBvH,EAAKwB,iBAAiBR,EAAA,SAAkB9L,KAAKgL,mBAC7ChL,KAAK+lB,UAAU7P,IAAIuB,EAAc3M,GAC1BA,CACX,EAKAka,EAAe9hB,UAAU8H,kBAAoB,SAAUkb,GACnD,IAGInhB,EAHA+F,EAAoDob,EAAY,OAChEjP,GAAM,QAAOnM,GACboJ,EAAYpJ,EAAKkB,WAEjBkI,GAAa1N,EAAA,WACbxG,KAAK0lB,iBAAiBzO,IAAO,EAC7BlS,EAAOohB,GAAA,iBAEFlP,KAAOjX,KAAK0lB,0BACV1lB,KAAK0lB,iBAAiBzO,GAC7BlS,EACImP,GAAa1N,EAAA,QACP2f,GAAA,gBACAjS,GAAa1N,EAAA,SACT2f,GAAA,mBACA5S,GAEdxO,GACA/E,KAAKiO,cAAc,IAAI,KAAgBlJ,EAAM+F,GAErD,EACOka,CACX,CAvKmC,CAuKjC,MACF,Y,2BCzOA,MAAMoB,GAAuC,qBAAdC,WAA6BA,UAAUC,qBAA4B,EASlG,MAAMC,GA8BJrgB,YAAYe,EAAOmf,GAAiBI,GAClCxmB,KAAKymB,QAAU,KACfzmB,KAAK0mB,iBAAmB,KACxB1mB,KAAKiH,KAAOA,EACZjH,KAAK2mB,UAAY,EACb1f,IACFjH,KAAK0mB,iBAAmBF,EAAeI,QAAQC,QAAQL,GAAgB,IAAII,SAASC,IAClF,gCAA8Brf,MAAMsf,IAClCD,EAAQC,EAAO3gB,OAAO,GACtB,IAEJnG,KAAK0mB,iBAAiBlf,MAAMrB,IAC1BnG,KAAK0mB,iBAAmB,KACxB1mB,KAAKymB,QAAU,GACf,IAAK,IAAIxlB,EAAI,EAAGA,EAAIgG,EAAMhG,IACxBjB,KAAKymB,QAAQja,KAAK,CAAEua,OAAQ5gB,IAAU6gB,MAAM,GAC9C,IAGN,CAOAC,aAAaC,EAAe7X,GAI1B,OAHIrP,KAAK0mB,wBACD1mB,KAAK0mB,iBAEQ,IAAd1mB,KAAKiH,MACR,QAAWigB,GAAe1f,MAAM2f,GAAYA,EAAQC,OAAOF,EAAe7X,KAC1E,IAAIuX,SAASC,IACb,MAAME,EAAS/mB,KAAKymB,QAAQY,MAAM5G,GAAcA,EAAUuG,QACrDhnB,KAAKymB,QAAQxZ,KAAKC,MAAMD,KAAKqa,SAAWtnB,KAAKiH,OAClD8f,EAAOC,MAAO,EACd,MAAMvlB,EAAKzB,KAAK2mB,YACVY,EAAaC,IACbA,EAAExmB,KAAKS,KAAOA,IAChBslB,EAAOC,MAAO,EACdH,EAAQW,EAAExmB,KAAKymB,SACfV,EAAOA,OAAOlb,oBAAoB,UAAW0b,GAC/C,EAEFR,EAAOA,OAAOza,iBAAiB,UAAWib,GAC1CR,EAAOA,OAAOW,YAAY,CAAER,gBAAe7X,SAAQ5N,MAAM,CAAC4N,GAAQ,GAExE,CAEAsY,UACM3nB,KAAKymB,UACPzmB,KAAKymB,QAAQpK,SAAS0K,IACpBA,EAAOA,OAAOa,WAAW,IAE3B5nB,KAAKymB,QAAU,KAEnB,EAGF,Y,IC3BIoB,G,oCAzEA,GAAwC,WACxC,IAAIriB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GAoExC6hB,GAAqB,qBACrBC,GAAqB,qBAKzB,SAASC,KAIL,OAHKH,KACDA,GAAa,IAAI,IAEdA,EACX,CAOA,SAASI,GAAetf,GACpB,IACI,OAAOA,EAAMsf,gBAKjB,CAHA,MAAOC,GACH,IAAIhB,EAAgBve,EAAMue,cAC1B,MAAO,CAAC,EAAG,EAAGA,EAAciB,WAAYjB,EAAckB,YAC1D,CACJ,CAOA,SAASvP,GAAUlQ,GACf,IACI,OAAOA,EAAMkQ,YAAY/T,MAAM,EAAG,EAItC,CAFA,MAAOojB,GACH,MAAO,CAAC,EAAGvf,EAAMue,cAAckB,YACnC,CACJ,CAQA,SAASC,GAAe1f,EAAO2f,GAC3B,IACI,OAAO3f,EAAMyM,cAAckT,EAQ/B,CANA,MAAOJ,GACH,MAAO,CACHI,EAAepB,cAAciB,WAAaxf,EAAMue,cAAciB,WAC9DG,EAAepB,cAAcqB,YACzB5f,EAAMue,cAAcqB,YAEhC,CACJ,CAKA,SAASC,GAAc7f,GACnB,IAAI8f,EAAU9f,EAAM8f,QACpB,IAAKA,EACD,OAAO,KAEX,GAAIA,EAAQC,sBAAuB,CAC/B,IAAIC,EAAO,QAAUF,EAAQC,sBACzBrpB,GAAa,QAAoBspB,GACrC,IAAKtpB,EAAY,CACb,IAAIupB,GAAQ,SAAcH,EAAQI,uBAC9BD,IACAvpB,EAAa,IAAI,KAAW,CACxBspB,KAAMA,EACNC,MAAOA,IAGnB,CACA,OAAOvpB,CACX,CACA,GAAIopB,EAAQK,qBAAsB,CAC1BH,EAAO,QAAUF,EAAQK,qBACzBzpB,GAAa,QAAoBspB,GACrC,IAAKtpB,EAAY,CACTupB,GAAQ,SAAcH,EAAQM,wBAC9BH,IACAvpB,EAAa,IAAI,KAAW,CACxBspB,KAAMA,EACNC,MAAOA,IAGnB,CACA,OAAOvpB,CACX,CACA,OAAO,IACX,CAKA,SAAS2pB,GAAiBC,GACtB,OAAOA,EAAKC,gBAAgB1hB,MAAK,SAAU+X,GAEvC,IADA,IAAI4J,EAAW,IAAI7nB,MAAMie,GAChBte,EAAI,EAAGA,EAAIse,IAASte,EACzBkoB,EAASloB,GAAKgoB,EAAK9c,SAASlL,GAEhC,OAAO2lB,QAAQwC,IAAID,EACvB,GACJ,CAMA,SAASE,GAAmB5pB,EAAQ6D,GAChC,IAAIgmB,EAUJ,OARIA,EADA7pB,EAAO8pB,MACG,SAAa9pB,EAAO8pB,MAEzB9pB,EAAO+pB,WACF,SAAa/pB,EAAOgqB,IAAKhqB,EAAO+pB,UAAWlmB,IAG3C,SAAY7D,EAAOgqB,IAAKnmB,GAE/BgmB,EAAQ9hB,KAAKwhB,GACxB,CAQA,SAASU,GAAYC,EAAUC,EAAKC,EAAWC,EAASC,GACpD,GAAIzoB,MAAM+C,QAAQslB,GAAlB,CACI,IAAIjJ,EAAWiJ,EAASvpB,OACxB,IAAKkB,MAAM+C,QAAQulB,IAAQlJ,GAAYkJ,EAAIxpB,OAAQ,CAC/C,IAAIsH,EAAQ,IAAIsC,MAAM8f,GAEtB,MADAC,EAASriB,GACHA,CACV,CACA,IAAK,IAAIzG,EAAI,EAAGA,EAAIyf,IAAYzf,EAC5ByoB,GAAYC,EAAS1oB,GAAI2oB,EAAI3oB,GAAI4oB,EAAWC,EAASC,EAG7D,MAEA,GAAI9c,KAAK+c,IAAIL,EAAWC,GAAOC,EAAYF,EACvC,MAAM,IAAI3f,MAAM8f,EAExB,CAKA,SAASG,GAAkB9L,GACvB,OAAIA,aAAiB+L,WACT,IAER/L,aAAiBgM,YACT,MAERhM,aAAiBiM,YACT,WAERjM,aAAiB9U,aACV,OAEJ,CACX,CAKA,SAASghB,GAAkBlM,GACvB,OAAIA,aAAiB+L,UACV,IAEP/L,aAAiBrR,YAGjBqR,aAAiBmM,kBAFV,IAKPnM,aAAiBgM,WACV,MAEPhM,aAAiBoM,YACV,MAEPpM,aAAiBiM,WACV,WAEPjM,aAAiBqM,YACV,WAEPrM,aAAiB9U,aACV,MAEJ,GACX,CA4CA,IAAIohB,GAA+B,SAAUpkB,GAKzC,SAASokB,EAAcnnB,GACnB,IAAIgD,EAAQD,EAAOjD,KAAKpD,KAAM,CAC1BuG,MAAO,UACPkO,SAAU,KACVpV,WAAY,KACZgmB,OAAQ/hB,EAAQ+hB,OAChB3e,WAAYpD,EAAQoD,WACpBC,aAAqC,IAAxBrD,EAAQqD,YACrBrH,MAAOgE,EAAQhE,SACbU,KAKNsG,EAAMokB,YAAcpnB,EAAQsY,QAC5B,IAAI+O,EAAarkB,EAAMokB,YAAYtqB,OAKnCkG,EAAMskB,eAAiBtnB,EAAQunB,cAK/BvkB,EAAMwkB,eAAiB,IAAIxpB,MAAMqpB,GAKjCrkB,EAAMykB,mBAAqB,IAAIzpB,MAAMqpB,GAKrCrkB,EAAM0kB,iBAKN1kB,EAAM2kB,cAKN3kB,EAAM4kB,UAKN5kB,EAAM6kB,YAAmC,IAAtB7nB,EAAQ8nB,UAK3B9kB,EAAM+kB,WAAY,EAKlB/kB,EAAMS,OAAS,KAIfT,EAAMglB,YAAchoB,EAAQioB,aAAe,UAAY,cACvDjlB,EAAMklB,OAAOllB,EAAMokB,YAAY/oB,KAAI,SAAUlC,GAAU,OAAOA,EAAOgqB,GAAK,IAAGrL,KAAK,MAGlF,IAFA,IAAI7W,EAAOjB,EACP6iB,EAAW,IAAI7nB,MAAMqpB,GAChB1pB,EAAI,EAAGA,EAAI0pB,IAAc1pB,EAC9BkoB,EAASloB,GAAKooB,GAAmB/iB,EAAMokB,YAAYzpB,GAAIqF,EAAMskB,gBAWjE,OATAhE,QAAQwC,IAAID,GACP3hB,MAAK,SAAUoU,GAChBrU,EAAKkkB,WAAW7P,EACpB,IACKnU,OAAM,SAAUC,GACjBgkB,GAAQhkB,MAAMA,GACdH,EAAKR,OAASW,EACdH,EAAKokB,SAAS,QAClB,IACOrlB,CACX,CA8UA,OAnaA,GAAUmkB,EAAepkB,GAkGzBokB,EAAcvnB,UAAUkE,SAAW,WAC/B,OAAOpH,KAAK+G,MAChB,EAQA0jB,EAAcvnB,UAAUuoB,WAAa,SAAU7P,GA0F3C,IAzFA,IAAInK,EACAma,EACAC,EACAC,EACAC,EACAC,EAAkB,IAAI1qB,MAAMsa,EAAQxb,QACpC6rB,EAAe,IAAI3qB,MAAMsa,EAAQxb,QACjC8rB,EAAW,IAAI5qB,MAAMsa,EAAQxb,QAC7BwX,EAAU,EACVuU,EAAcvQ,EAAQxb,OACtB0iB,EAAU,SAAUsJ,GACpB,IAAIC,EAASzQ,EAAQwQ,GACjBE,EAAaD,EAAOjsB,OACpBmsB,OAAe,EACfC,OAAe,EACfC,EAAkB,IAAInrB,MAAMgrB,GAC5BI,EAAkB,IAAIprB,MAAMgrB,GAC5BK,EAAoB,IAAIrrB,MAAMgrB,GAClCL,EAAaG,GAAe,IAAI9qB,MAAMgrB,GACtCJ,EAASE,GAAe,IAAI9qB,MAAMgrB,GAClC,IAAK,IAAIM,EAAa,EAAGA,EAAaN,IAAcM,EAAY,CAC5D,IAAIjkB,EAAQ0jB,EAAOO,GACfC,EAAclkB,EAAMmkB,gBACxBZ,EAASE,GAAaQ,GAAcjkB,EAAMokB,gBAAgB,GAC1Dd,EAAaG,GAAaQ,GAAcC,EACxC,IAAIG,EAAgBC,EAAOvC,YAAY0B,GAAarqB,MACpDiqB,EAAgBI,GAAeY,EACzBA,EAAc5sB,OACduI,EAAMukB,qBACZ,IAAIC,EAAQb,GAAcM,EAAa,GAClCL,IACDA,EAAetE,GAAetf,IAE7B6jB,IACDA,EAAe3T,GAAUlQ,IAE7B,IAAIykB,EAAmB/E,GAAe1f,EAAO0jB,EAAO,IACpDM,EAAkBQ,GAASC,EAAiB,GAC5C,IAAI3gB,EAAiB,CAAC9D,EAAM0kB,eAAgB1kB,EAAM2kB,iBAClDb,EAAgBU,GAAS1gB,EACzB,IAAIuM,EAAcoU,EAAiB,GAAKngB,KAAK+c,IAAIoD,EAAiB,IAClEV,EAAgBS,GAAS,CACrB1gB,EAAe,GACfA,EAAe,GAAKuM,EAE5B,CAOA,GANKvH,GAID,QAAgBA,EAAQ8a,EAAc9a,GAHtCA,EAAS8a,EAKRX,EAGA,CACD,IAAI9B,EAAU,8BAA8BjlB,OAAOunB,EAAa,WAAWvnB,OAAO2nB,EAAc,oBAAoB3nB,OAAO+mB,EAAQ,KACnIlC,GAAYkC,EAAQY,EAAc,EAAG1C,EAASmD,EAAOM,aACzD,MALI3B,EAASY,EAMb,GAAKT,EAIA,CACGA,EAAY3rB,OAASwX,EAAU+U,EAAkBvsB,SACjDwX,EAAUmU,EAAY3rB,OAASusB,EAAkBvsB,QAErD,IAAIotB,EAAqBzB,EAAYA,EAAY3rB,OAAS,GACtDusB,EAAkBA,EAAkBvsB,OAAS,GACjD6sB,EAAOlC,mBAAmBqB,GAAeoB,EACzC,IAAIC,EAA0Bd,EAAkBhrB,KAAI,SAAUgV,GAAc,OAAQA,EAAc6W,CAAqB,IACnH1D,EAAU,kCAAkCjlB,OAAOunB,EAAa,WAAWvnB,OAAO4oB,EAAyB,oBAAoB5oB,OAAOknB,EAAa,KACvJrC,GAAYqC,EAAYjnB,MAAM8S,EAASmU,EAAY3rB,QAASqtB,EAAyB,IAAM3D,EAASmD,EAAOM,aAC/G,MAbIxB,EAAcY,EACdM,EAAOlC,mBAAmBqB,GAAe,EAaxCP,EAIDnC,GAAYmC,EAAsB/mB,MAAM8S,EAASiU,EAAsBzrB,QAASssB,EAAiB,IAAM,iCAAiC7nB,OAAOunB,GAAca,EAAOM,cAHpK1B,EAAwBa,EAKvBZ,EAIDpC,GAAYoC,EAAsBhnB,MAAM8S,EAASkU,EAAsB1rB,QAASqsB,EAAiB,EAAG,iCAAiC5nB,OAAOunB,GAAca,EAAOM,cAHjKzB,EAAwBW,EAK5BQ,EAAOnC,eAAesB,GAAeC,EAAOqB,SAChD,EACIT,EAASjtB,KACJosB,EAAc,EAAGA,EAAcD,IAAeC,EACnDtJ,EAAQsJ,GAEZ,IAAK,IAAInrB,EAAI,EAAGoW,EAAKrX,KAAK8qB,eAAe1qB,OAAQa,EAAIoW,IAAMpW,EAAG,CAC1D,IAAI0sB,EAAgB3tB,KAAK8qB,eAAe7pB,GACxC,MAAO0sB,EAAcvtB,OAAS2rB,EAAY3rB,OACtCutB,EAAcC,aAAQra,EAE9B,CACA,IAAKvT,KAAKwoB,gBACN,KAAIqF,EAAcjS,EAAQ,GAC1B,IAAS3a,EAAI4sB,EAAYztB,OAAS,EAAGa,GAAK,IAAKA,EAAG,CAC9C,IAAI0H,EAAQklB,EAAY5sB,GACpB5B,EAAampB,GAAc7f,GAC/B,GAAItJ,EAAY,CACZW,KAAKX,WAAaA,EAClB,KACJ,CACJ,CAR4B,CAUhCW,KAAKgrB,iBAAmBgB,EACxBhsB,KAAKirB,cAAgBgB,EACrBjsB,KAAKkrB,UAAYgB,EAEjB4B,EAAO,IAAS1B,EAAc,EAAGA,EAAcD,IAAeC,EAAa,CAEvE,QAA6C7Y,IAAzCvT,KAAK0qB,YAAY0B,GAAa2B,OAAsB,CACpD/tB,KAAKqrB,WAAY,EACjB,KACJ,CACA,IAAInM,EAAS+M,EAAaG,GAEtBrqB,EAAQ/B,KAAK0qB,YAAY0B,GAAarqB,MAC1C,GAAIA,GACA,IAASd,EAAI,EAAGA,EAAIc,EAAM3B,SAAUa,EAChC,GAA6B,OAAzBie,EAAOnd,EAAMd,GAAK,GAAa,CAC/BjB,KAAKqrB,WAAY,EACjB,MAAMyC,CACV,OAKR,IAAK,IAAIlB,EAAa,EAAGA,EAAa1N,EAAO9e,SAAUwsB,EACnD,GAA2B,OAAvB1N,EAAO0N,GAAsB,CAC7B5sB,KAAKqrB,WAAY,EACjB,MAAMyC,CACV,CAER,CACA,IAAIE,EAAkBhuB,KAAKqrB,UAAY,EAAI,EAC3CrrB,KAAKiJ,UACD+iB,EAAgBiC,QAAO,SAAUC,EAAa5rB,GAE1C,OADA4rB,GAAe5rB,EACR4rB,CACX,GAAG,GAAKF,EACZ,IAAIvZ,EAAW,IAAI0Z,GAAA,EAAS,CACxB1c,OAAQA,EACRmG,QAASA,EACTgU,OAAQA,EACRG,YAAaA,EACbnG,UAAWiG,IAEf7rB,KAAKyU,SAAWA,EAChBzU,KAAK2lB,aAAamG,GAClB9rB,KAAK8lB,UAAU9lB,KAAKouB,UAAUnjB,KAAKjL,OACnCA,KAAK2rB,SAAS,SACd3rB,KAAKquB,aAAa,CACdhvB,WAAYW,KAAKX,WACjB0sB,YAAaA,EACbzT,QAAQ,SAAiB,QAAU7G,GAASzR,KAAKX,YACjDoS,QAAQ,QAAaA,EAAQzR,KAAKX,YAClCsb,KAAM,GAEd,EACA8P,EAAcvnB,UAAUkrB,UAAY,SAAUjd,EAAGkE,EAAGG,GAmDhD,IAlDA,IAAI/I,EAAiBzM,KAAKoL,YAAY+F,GAClCgb,EAAcnsB,KAAK8qB,eAAe1qB,OAClC+oB,EAAW,IAAI7nB,MAAM6qB,GACrBmC,EAAWtuB,KAAKqrB,UAChBpiB,EAAYjJ,KAAKiJ,UACjB+iB,EAAkBhsB,KAAKgrB,iBACvBiB,EAAejsB,KAAKirB,cACpBsD,EAAavuB,KAAK0qB,YAClBlG,EAAU,SAAU4H,GACpB,IAAI3sB,EAAS8uB,EAAWnC,GACpBoC,EAAmBC,EAAO1D,mBAAmBqB,GAC7CsC,EAAc,CACdzhB,KAAK0hB,MAAMtZ,GAAK5I,EAAe,GAAK+hB,IACpCvhB,KAAK0hB,MAAMnZ,GAAK/I,EAAe,GAAK+hB,IACpCvhB,KAAK0hB,OAAOtZ,EAAI,IAAM5I,EAAe,GAAK+hB,IAC1CvhB,KAAK0hB,OAAOnZ,EAAI,IAAM/I,EAAe,GAAK+hB,KAE1C7lB,EAAQ8lB,EAAO3D,eAAesB,GAAajb,GAC3Cyd,OAAU,EACVnvB,EAAOsC,QACP6sB,EAAUnvB,EAAOsC,MAAMJ,KAAI,SAAUktB,GACjC,OAAOA,EAAa,CACxB,KAGJ,IAAIC,OAAY,EAEZA,EADA,WAAYrvB,GAA4B,OAAlBA,EAAOsuB,OACjBtuB,EAAOsuB,OAGda,EAIWA,EAAQjtB,KAAI,SAAUotB,GAC9B,OAAO9C,EAAaG,GAAa2C,EACrC,IALY9C,EAAaG,GAQjCjD,EAASiD,GAAezjB,EAAM8lB,EAAOnD,aAAa,CAC9C0D,OAAQN,EACRhkB,MAAO+B,EAAe,GACtB9B,OAAQ8B,EAAe,GACvBmiB,QAASA,EACTE,UAAWA,EACXG,KAAMjH,KACNkH,YAAY,GAEpB,EACIT,EAASzuB,KACJosB,EAAc,EAAGA,EAAcD,IAAeC,EACnD5H,EAAQ4H,GAEZ,IAAIxf,EAAaH,EAAe,GAAKA,EAAe,GAChD0iB,EAAaviB,EAAa3D,EAC1BmiB,EAAYprB,KAAKmrB,WACjBe,EAAWlsB,KAAKkrB,UACpB,OAAOtE,QAAQwC,IAAID,GACd3hB,MAAK,SAAU4nB,GAEhB,IAAIpuB,EAEAA,EADAoqB,EACO,IAAIte,WAAWqiB,GAGf,IAAI9lB,aAAa8lB,GAG5B,IADA,IAAI5hB,EAAY,EACPM,EAAa,EAAGA,EAAajB,IAAciB,EAAY,CAE5D,IADA,IAAIwhB,EAAcf,EACTlC,EAAc,EAAGA,EAAcD,IAAeC,EAAa,CAChE,IAAI3sB,EAAS8uB,EAAWnC,GACpBpoB,EAAMvE,EAAOuE,IACbG,EAAM1E,EAAO0E,IACbmrB,OAAO,EAAQC,OAAO,EAC1B,GAAInE,EAAW,CACX,IAAIoE,EAAQtD,EAASE,GAAa,QACtB7Y,IAARvP,IAEIA,EADAwrB,GAASzH,MAAsByH,EACzBC,WAAWD,EAAMzH,KAGjBkC,GAAkBmF,EAAchD,GAAa,UAG/C7Y,IAARpP,IAEIA,EADAqrB,GAAS1H,MAAsB0H,EACzBC,WAAWD,EAAM1H,KAGjBuC,GAAkB+E,EAAchD,GAAa,KAG3DkD,EAAO,KAAOnrB,EAAMH,GACpBurB,GAAQvrB,EAAMsrB,CAClB,CACA,IAAK,IAAIP,EAAc,EAAGA,EAAc/C,EAAgBI,KAAgB2C,EAAa,CACjF,IAAIW,EAAcN,EAAchD,GAAa2C,GAAalhB,GACtDvL,OAAQ,EAOZ,GALIA,EADA8oB,GACQ,SAAMkE,EAAOI,EAAcH,EAAM,EAAG,KAGpCG,EAEPpB,EAGA,CACD,IAAIP,EAAStuB,EAAOsuB,OACpB,QAAexa,IAAXwa,EAAsB,CACtB,IAAIjgB,OAAY,EAEZA,EADArO,EAAOsC,MACKtC,EAAOsC,MAAMgtB,GAAe,EAG5BA,EAEhBhB,EAAS9B,EAAaG,GAAate,EACvC,CACA,IAAI6hB,EAAcC,MAAM7B,KAClB4B,GAAeD,IAAgB3B,GAChC4B,IAAgBC,MAAMF,MACvBL,GAAc,EACdruB,EAAKuM,GAAajL,EAE1B,MApBItB,EAAKuM,GAAajL,EAqBtBiL,GACJ,CACJ,CACI+gB,IACKe,IACDruB,EAAKuM,GAAa,KAEtBA,IAER,CACA,OAAOvM,CACX,IACKyG,OAAM,SAAUC,GAGjB,MADAgkB,GAAQhkB,MAAMA,GACRA,CACV,GACJ,EACO+iB,CACX,CArakC,CAqahC,IAsBFA,GAAcvnB,UAAU2sB,QACxB,YC/uBA,IACAC,WAAAA,CACAC,eADA,EAEAC,YAAAA,EAAAA,GAEAhvB,OACA,OACAa,gBAAAA,iBACAiQ,MAAAA,KACArS,OAAAA,KACAqC,SAAAA,KACAmuB,OAAAA,GACA1tB,SAAAA,GACAR,MAAAA,GAEA,EACA9C,QAAAA,CACAixB,WAAAA,GACA,iCACA,EACAC,WAAAA,GACA,wBACA,oBACA,qBACA,sCACA,uBACA,EACAC,mBACA,+BAIA,6BACA,EACA,gCACA,wBACA,8BACA,0BAEA,oBACAzpB,aAAAA,EACAykB,WAAAA,EACAG,aAAAA,EAAAA,aACA3P,QAAAA,CACA,CACA6N,IAAAA,EAAAA,SACAsE,OAAAA,KAAAA,OAAAA,OAKA,mBACAtsB,GAAAA,EAAAA,SACAlC,QACAE,OAAAA,KAAAA,OACA6T,UAAAA,OAEA,yBACA+c,YAAAA,IACA,kCACA,sDACA,sBACA,kCACA,wCAEAC,MAAAA,IACA,kCACA,MAEA,YADA,iBAKA,GADAtvB,EAAAA,MAAAA,KAAAA,GAAAA,MAAAA,EAAAA,KAAAA,MAAAA,QACA,uCAEA,YADA,iBAIA,sCACA,qBAEA,IAAAuvB,QAAAvvB,SAEA,YACA8B,OAAAA,KAAAA,MAAAA,KAAAA,GAAAA,OAAAA,EAAAA,MAAAA,EAAAA,MACA0tB,WAFA,IAMA,+BAEA,oBAUA,OATA,GACA,uDAKA,qCACA,gBAEA,WACA,EACAC,aAAAA,GACA,8DACA,EACAzuB,mBAAAA,EAAAA,GACA,UACA,eACA,gBACA,MAEA,eACA,EACA6hB,WACA,eACA,OAIA,SACA,4BACA,uBACA1D,EAAAA,GAAAA,SAAAA,EAAAA,GACAA,EAAAA,GAAAA,QAAAA,EAAAA,IACAA,EAAAA,GAAAA,QAAAA,EAAAA,GACA,CACAA,EAAAA,UAAAA,KAAAA,MAAAA,OAAAA,EAGA,SACA,iBACA7B,EAAAA,KAAAA,WACAA,EAAAA,KAAAA,CAAAA,OAAAA,IACAA,EAAAA,KAAAA,KAAAA,cAEA,6BACA,YAEA,6BACAA,EAAAA,KAAAA,SACA,yBACAA,EAAAA,KAAAA,GACAA,EAAAA,KAAAA,GACAA,EAAAA,KAAAA,GACA,sBACAA,EAAAA,KAAAA,KAAAA,mBAEA,MAEAA,EAAAA,KAAAA,SACAA,EAAAA,KAAAA,KAAAA,WAAAA,IACAA,EAAAA,KAAAA,KAAAA,WAAAA,IACAA,EAAAA,KAAAA,KAAAA,WAAAA,IACA,sBACAA,EAAAA,KAAAA,KAAAA,mBAEA,CAGA,qBAAA6B,YAAA7B,SACA,IC1KqQ,MCArQ,IAAI,GAAQ,GAOR,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,SAAe,GAAiB,Q,4ECQzB,SAASoS,GAAgBC,EAAcC,GAC1C,OAAO,KAAcF,gBAAgBC,EAAcC,EACvD,CASO,SAAS,GAAkBC,EAAMC,GACpC,OAAOC,GAAmBF,EAAMC,EAAqB,IAAI1S,KAAK,GAClE,CAUO,SAAS2S,GAAmBF,EAAMC,EAAqB5C,GAC1D,GAAI2C,EAAKG,UAAYC,KAAKC,oBACtBL,EAAKG,UAAYC,KAAKE,UAClBL,EACA5C,EAAY1hB,KAAKnL,OAAOwvB,EAAKO,WAAWC,QAAQ,gBAAiB,KAGjEnD,EAAY1hB,KAAKqkB,EAAKO,eAGzB,CACD,IAAIE,OAAI,EACR,IAAKA,EAAIT,EAAKU,WAAYD,EAAGA,EAAIA,EAAEE,YAC/BT,GAAmBO,EAAGR,EAAqB5C,EAEnD,CACA,OAAOA,CACX,CAKO,SAASuD,GAAWC,GACvB,MAAO,oBAAqBA,CAChC,CAgBO,SAASC,GAAMC,GAClB,OAAO,IAAIC,WAAYC,gBAAgBF,EAAK,kBAChD,CA+BO,SAASG,GAAgBC,EAAaC,GACzC,OAAO,SAKGpB,EAAMqB,GACZ,IAAI5vB,EAAQ0vB,EAAY5uB,UAAkBmQ,IAAb0e,EAAyBA,EAAWjyB,KAAM6wB,EAAMqB,GAC7E,QAAc3e,IAAVjR,EAAqB,CACrB,IAAI6b,EAAiC+T,EAAYA,EAAY9xB,OAAS,GACtE+d,EAAM3R,KAAKlK,EACf,CACH,CACL,CA+BO,SAAS6vB,GAAyBH,EAAaI,EAAcH,GAChE,OAAO,SAKGpB,EAAMqB,GACZ,IAAI5vB,EAAQ0vB,EAAY5uB,UAAkBmQ,IAAb0e,EAAyBA,EAAWjyB,KAAM6wB,EAAMqB,GAC7E,QAAc3e,IAAVjR,EAAqB,CACrB,IAAIovB,EAAiCQ,EAAYA,EAAY9xB,OAAS,GAClEiyB,OAA4B9e,IAAjB6e,EAA6BA,EAAevB,EAAKyB,UAC5DnU,OAAQ,EACRkU,KAAYX,EACZvT,EAAQuT,EAAOW,IAGflU,EAAQ,GACRuT,EAAOW,GAAYlU,GAEvBA,EAAM3R,KAAKlK,EACf,CACH,CACL,CASO,SAASiwB,GAAyBP,EAAaI,EAAcH,GAChE,OAAO,SAKGpB,EAAMqB,GACZ,IAAI5vB,EAAQ0vB,EAAY5uB,UAAkBmQ,IAAb0e,EAAyBA,EAAWjyB,KAAM6wB,EAAMqB,GAC7E,QAAc3e,IAAVjR,EAAqB,CACrB,IAAIovB,EAAiCQ,EAAYA,EAAY9xB,OAAS,GAClEiyB,OAA4B9e,IAAjB6e,EAA6BA,EAAevB,EAAKyB,UAChEZ,EAAOW,GAAY/vB,CACvB,CACH,CACL,CAwDO,SAASkwB,GAAsBC,EAAcC,GAChD,IAAIC,EAAgBF,EACpB,OAAO,SAOGnwB,EAAO4vB,EAAaO,GAC1B,IAAIhU,EAAwCyT,EAAYA,EAAY9xB,OAAS,GACzEywB,EAAOpS,EAAQoS,KACf+B,EAAWD,OACEpf,IAAbqf,IACAA,EAAWH,GAEf,IAAI9B,OAAoCpd,IAArBmf,EAAiCA,EAAmB7B,EAAKF,aAC5E,OAAOD,GAAgBC,EAAoC,EAC9D,CACL,CAQ0C6B,KA8BnC,SAASK,GAAgBC,EAAeC,EAAWC,GAItD,IACI/xB,EAAGoW,EADH4b,OAAkC1f,IAApByf,EAAgCA,EAAkB,CAAC,EAErE,IAAK/xB,EAAI,EAAGoW,EAAKyb,EAAc1yB,OAAQa,EAAIoW,IAAMpW,EAC7CgyB,EAAYH,EAAc7xB,IAAM8xB,EAEpC,OAAOE,CACX,CASO,SAASC,GAAUC,EAAWtC,EAAMqB,EAAaD,GACpD,IAAIX,EACJ,IAAKA,EAAIT,EAAKuC,kBAAmB9B,EAAGA,EAAIA,EAAE+B,mBAAoB,CAC1D,IAAIC,EAAUH,EAAU7B,EAAEX,cAC1B,QAAgBpd,IAAZ+f,EAAuB,CACvB,IAAIC,EAASD,EAAQhC,EAAEgB,gBACR/e,IAAXggB,GACAA,EAAOnwB,KAAK6uB,EAAUX,EAAGY,EAEjC,CACJ,CACJ,CAYO,SAASsB,GAAgB9B,EAAQyB,EAAWtC,EAAMqB,EAAaD,GAGlE,OAFAC,EAAY1lB,KAAKklB,GACjBwB,GAAUC,EAAWtC,EAAMqB,EAAaD,GACfC,EAAYhX,KACzC,CAoFA,IAAIuY,QAAYlgB,EAeT,SAAS,KAIZ,YAHkBA,IAAdkgB,IAA+C,qBAAbjpB,WAClCipB,GAAYjpB,SAASkpB,eAAeC,eAAe,GAAI,GAAI,OAExDF,EACX,CChdA,IAAIG,GAAqB,WACrB,SAASA,IACT,CAyCA,OAjCAA,EAAI1wB,UAAU2wB,KAAO,SAAUp0B,GAC3B,GAAKA,EAGA,IAAsB,kBAAXA,EAAqB,CACjC,IAAIq0B,EAAMnC,GAAMlyB,GAChB,OAAOO,KAAK+zB,iBAAiBD,EACjC,CACK,OAAIrC,GAAWhyB,GACTO,KAAK+zB,iBAAyC,GAG9C/zB,KAAKg0B,aAAoC,EACpD,CAXI,OAAO,IAYf,EAKAJ,EAAI1wB,UAAU6wB,iBAAmB,SAAUD,GACvC,IAAK,IAAIxC,EAAIwC,EAAIvC,WAAYD,EAAGA,EAAIA,EAAEE,YAClC,GAAIF,EAAEN,UAAYC,KAAKgD,aACnB,OAAOj0B,KAAKg0B,aAAoC,GAGxD,OAAO,IACX,EAMAJ,EAAI1wB,UAAU8wB,aAAe,SAAUnD,GAAQ,EACxC+C,CACX,CA5CwB,GA6CxB,YChDA,IAAIM,GAAgB,+BAKb,SAASC,GAAStD,GACrB,OAAOA,EAAKuD,eAAeF,GAAe,OAC9C,CCyBO,SAASG,GAAYxD,GACxB,IAAI9S,EAAI,GAAkB8S,GAAM,GAChC,OAAOyD,GAAkBvW,EAC7B,CAKO,SAASuW,GAAkB5V,GAE9B,IAAI6V,EAAI,4CAA4CC,KAAK9V,GACzD,OAAI6V,EACO9E,WAAW8E,EAAE,SAGpB,CAER,CAKO,SAASE,GAAoB5D,GAChC,IAAI9S,EAAI,GAAkB8S,GAAM,GAChC,OAAO6D,GAA6B3W,EACxC,CAKO,SAAS2W,GAA6BhW,GACzC,IAAI6V,EAAI,gBAAgBC,KAAK9V,GAC7B,OAAI6V,EACOI,SAASJ,EAAE,GAAI,SAGtB,CAER,CAKO,SAASK,GAAW/D,GACvB,OAAO,GAAkBA,GAAM,GAAOgE,MAC1C,CCpFA,IAAI,GAAwC,WACxC,IAAIrvB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GA0BxC6uB,GAAiB,CAAC,KAAM,kCAMxBC,GAAUlC,GAAgBiC,GAAgB,CAC1C,sBAAyBvC,GAAyByC,IAClD,gBAAmBzC,GAAyB0C,IAC5C,mBAAsB1C,GAAyB2C,MAE/CC,GAAqB,SAAU9uB,GAE/B,SAAS8uB,IACL,OAAO9uB,EAAOjD,KAAKpD,OAASA,IAChC,CASA,OAZA,GAAUm1B,EAAK9uB,GAQf8uB,EAAIjyB,UAAU8wB,aAAe,SAAUnD,GACnC,IAAIuE,EAAY5B,GAAgB,CAAC,EAAGuB,GAASlE,EAAM,IACnD,OAAOuE,GAAwB,IACnC,EACOD,CACX,CAdwB,CActB,IAMEE,GAAkBxC,GAAgBiC,GAAgB,CAClD,cAAiBvC,GAAyBqC,IAC1C,KAAQrC,GAAyBqC,IACjC,mBAAsBrC,GAAyBqC,IAC/C,WAAcrC,GAAyBqC,IACvC,QAAWrC,GAAyBqC,IACpC,sBAAyBrC,GAAyBqC,MAOlDU,GAAyBzC,GAAgBiC,GAAgB,CACzD,MAAS3C,GAAyBoD,MAOlCC,GAAqB3C,GAAgBiC,GAAgB,CACrD,cAAiBvC,GAAyBkD,MAO1CC,GAAuB7C,GAAgBiC,GAAgB,CACvD,MAASvC,GAAyBoD,IAClC,QAAWpD,GAAyBqD,MAOpCC,GAAchD,GAAgBiC,GAAgB,CAC9C,KAAQvC,GAAyBuD,MAOjCC,GAAelD,GAAgBiC,GAAgB,CAC/C,IAAO3C,GAAyB6D,IAChC,UAAQziB,IAOR0iB,GAAoBpD,GAAgBiC,GAAgB,CACpD,IAAOvC,GAAyB2D,MAOhCC,GAA8BtD,GAAgBiC,GAAgB,CAC9D,UAAasB,KAObC,GAAgBxD,GAAgBiC,GAAgB,CAChD,MAASvC,GAAyBqC,IAClC,UAAarC,GAAyBqC,MAOtC0B,GAAyBzD,GAAgBiC,GAAgB,CACzD,WAAc3C,GAAyBoE,MAOvCC,GAA0B3D,GAAgBiC,GAAgB,CAC1D,eAAkBvC,GAAyBqC,IAC3C,aAAgBrC,GAAyBqC,IACzC,YAAerC,GAAyBkE,MAOxCC,GAAiC7D,GAAgBiC,GAAgB,CACjE,SAAYvC,GAAyBqC,IACrC,kBAAqBrC,GAAyBqC,IAC9C,KAAQrC,GAAyBqC,IACjC,MAASrC,GAAyBqC,IAClC,mBAAsBrC,GAAyBqC,IAC/C,YAAerC,GAAyBqC,MAOxC+B,GAA2B9D,GAAgBiC,GAAgB,CAC3D,aAAgBvC,GAAyBqC,IACzC,aAAgBrC,GAAyB4B,IACzC,eAAkB5B,GAAyBqE,MAO/C,SAAShB,GAAY/E,EAAMqB,GACvB,OAAOsB,GAAgB,CAAC,EAAG6B,GAAiBxE,EAAMqB,EACtD,CAMA,SAASuD,GAAkB5E,EAAMqB,GAC7B,OAAOsB,GAAgB,CAAC,EAAG8B,GAAwBzE,EAAMqB,EAC7D,CAMA,SAASqE,GAAe1F,EAAMqB,GAC1B,IAAIpxB,EAAO+vB,EAAKgG,aAAa,QAC7B,GAAK/1B,EAGL,OAAO0yB,GAAgB,CAAE,KAAQ1yB,GAAQ00B,GAAoB3E,EAAMqB,EACvE,CAMA,SAASuE,GAAgB5F,EAAMqB,GAC3B,OAAOsB,GAAgB,CAAC,EAAGkC,GAAsB7E,EAAMqB,EAC3D,CAMA,SAASgE,GAAQrF,EAAMqB,GACnB,OAAOsB,GAAgB,CAAC,EAAGqC,GAAahF,EAAMqB,EAClD,CAMA,SAAS8D,GAAQnF,EAAMqB,GACnB,IAAI4E,EAAO3C,GAAStD,GACpB,GAAKiG,EAGL,OAAOtD,GAAgB,CAAE,KAAQsD,GAAQR,GAAwBzF,EAAMqB,EAC3E,CAMA,SAAS4D,GAASjF,EAAMqB,GACpB,OAAOsB,GAAgB,CAAC,EAAGuC,GAAclF,EAAMqB,EACnD,CAMA,SAASkE,GAAcvF,EAAMqB,GACzB,IAAIpxB,EAAO+vB,EAAKgG,aAAa,QACzBv0B,EAAQkxB,GAAgB,CAAC,EAAGyC,GAAmBpF,EAAMqB,GACzD,GAAK5vB,EAAL,CAGA,IAAIovB,EAAgCQ,EAAYA,EAAY9xB,OAAS,GACrEsxB,EAAO5wB,GAAQwB,CAFf,CAGJ,CAMA,SAAS4yB,GAAuBrE,EAAMqB,GAClC,OAAOsB,GAAgB,CAAC,EAAG2C,GAA6BtF,EAAMqB,EAClE,CAMA,SAASyD,GAAU9E,EAAMqB,GACrB,OAAOsB,GAAgB,CAAC,EAAG6C,GAAexF,EAAMqB,EACpD,CAMA,SAAS8C,GAA0BnE,EAAMqB,GACrC,OAAOsB,GAAgB,CAAC,EAAGkD,GAAgC7F,EAAMqB,EACrE,CAMA,SAAS0E,GAAmB/F,EAAMqB,GAC9B,OAAOsB,GAAgB,CAAC,EAAGgD,GAAyB3F,EAAMqB,EAC9D,CAMA,SAAS+C,GAAoBpE,EAAMqB,GAC/B,OAAOsB,GAAgB,CAAC,EAAGmD,GAA0B9F,EAAMqB,EAC/D,CAMA,SAASqD,GAAU1E,EAAMqB,GACrB,OAAO0C,GAAW/D,EACtB,CACA,YC3SA,IAAI,GAAwC,WACxC,IAAIrrB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GA4BxC,GAAiB,CAAC,KAAM,mCAKxB8wB,GAAqB,CAAC,KAAM,kCAM5B,GAAUlE,GAAgB,GAAgB,CAC1C,SAAYN,GAAyByE,MAQrCC,GAAkC,SAAU5wB,GAE5C,SAAS4wB,IACL,IAAI3wB,EAAQD,EAAOjD,KAAKpD,OAASA,KAMjC,OADAsG,EAAM4wB,WAAa,IAAI,GAChB5wB,CACX,CAkBA,OA3BA,GAAU2wB,EAAkB5wB,GAc5B4wB,EAAiB/zB,UAAU8wB,aAAe,SAAUnD,GAChD,IAAIsG,EAAUtG,EAAKgG,aAAa,WAC5BM,IACAA,EAAUA,EAAQtC,QAEtB,IAAIuC,EAAuBp3B,KAAKk3B,WAAWlD,aAAanD,GACxD,OAAKuG,GAGLA,EAAqB,WAAaD,EAClCC,EAAuB5D,GAAgB4D,EAAsB,GAASvG,EAAM,IACrEuG,GAA8C,MAJ1C,IAKf,EACOH,CACX,CA7BqC,CA6BnC,IAMEI,GAAmBxE,GAAgB,GAAgB,CACnD,MAASV,GAAyBmF,IAClC,cAAiBnF,GAAyBoF,MAO1CC,GAAgB3E,GAAgB,GAAgB,CAChD,MAASV,GAAyBsF,IAClC,OAAUtF,GAAyByC,IACnC,kBAAqBzC,GAAyBuF,IAC9C,UAAavF,GAAyBwF,IACtC,YAAexF,GAAyByF,KACzC/E,GAAgBkE,GAAoB,CACnC,MAASxE,GAAyBqC,IAClC,SAAYrC,GAAyBqC,IACrC,iBAAoBrC,GAAyBsF,IAC7C,WAActF,GAAyBqC,OAOvCkD,GAAgBjF,GAAgB,GAAgB,CAChD,UAAaV,GAAyB4F,KACvClF,GAAgBkE,GAAoB,CACnC,MAASxE,GAAyBqC,IAClC,WAAcrC,GAAyBqC,OAOvCoD,GAAoBnF,GAAgB,GAAgB,CACpD,cAAiBN,GAAyBqC,IAC1C,oBAAuBrC,GAAyB0F,MAOhDC,GAA0BrF,GAAgB,GAAgB,CAC1D,iBAAoBd,GAAgBoG,MAOpCC,GAAqBvF,GAAgB,GAAgB,CACrD,WAAcN,GAAyBqC,IACvC,WAAcrC,GAAyBkC,IACvC,WAAclC,GAAyBkC,IACvC,WAAclC,GAAyBkC,IACvC,WAAclC,GAAyBkC,MAOvC4D,GAAoBxF,GAAgB,GAAgB,CACpD,QAAWN,GAAyBqC,IACpC,MAASzC,GAAyByC,KACnC/B,GAAgBkE,GAAoB,CACnC,WAAcxE,GAAyBqC,OAOvC0D,GAAqBzF,GAAgBkE,GAAoB,CACzD,YAAehF,GAAgBwG,IAC/B,YAAexG,GAAgBwG,MAO/BC,GAAc3F,GAAgB,GAAgB,CAC9C,kBAAqBN,GAAyBqC,IAC9C,WAAczC,GAAyBsG,KACxC5F,GAAgBkE,GAAoB,CACnC,aAAgBxE,GAAyBqC,IACzC,WAAcrC,GAAyBqC,IACvC,YAAerC,GAAyBsF,OAOxCa,GAAa7F,GAAgB,GAAgB,CAC7C,cAAiBN,GAAyBgG,IAC1C,iBAAoBhG,GAAyB8B,IAC7C,UAAa9B,GAAyBkC,IACtC,WAAclC,GAAyBkC,IACvC,YAAelC,GAAyBkC,IACxC,aAAgBlC,GAAyBkC,KAC1C5B,GAAgBkE,GAAoB,CACnC,WAAcxE,GAAyBqC,OAO3C,SAASoC,GAAanG,EAAMqB,GACxB,OAAOsB,GAAgB,CAAC,EAAG6D,GAAkBxG,EAAMqB,EACvD,CAMA,SAASoF,GAAUzG,EAAMqB,GACrB,OAAOsB,GAAgB,CAAC,EAAGgE,GAAe3G,EAAMqB,EACpD,CAMA,SAASqF,GAAkB1G,EAAMqB,GAC7B,OAAOsB,GAAgB,CAAC,EAAGgF,GAAa3H,EAAMqB,EAClD,CAMA,SAASuF,GAAU5G,EAAMqB,GACrB,IAAIvyB,EAAQ6zB,GAAgB,CAAC,EAAGsE,GAAejH,EAAMqB,GACrD,GAAKvyB,EAAL,CAGA,IAAIg5B,EAA+C,SAAnC9H,EAAKgG,aAAa,aAElC,OADAl3B,EAAM,aAAeg5B,EACdh5B,CAHP,CAIJ,CAMA,SAAS+3B,GAAsB7G,EAAMqB,GACjC,OAAOsB,GAAgB,CAAC,EAAGwE,GAAmBnH,EAAMqB,EACxD,CAMA,SAASyF,GAAe9G,EAAMqB,GAC1B,OAAOsB,GAAgB,CAAC,EAAG6E,GAAmBxH,EAAMqB,EACxD,CAMA,SAAS0F,GAAgB/G,EAAMqB,GAC3B,IAAIzoB,EAASonB,EAAKgG,aAAa,UAC3B+B,EAAW/H,EAAKgG,aAAa,YAC7BgC,EAAehI,EAAKgG,aAAa,gBACjCiC,EAAW,CAAC,EAUhB,OATIrvB,IACAqvB,EAAS,UAAYrvB,GAErBmvB,IACAE,EAAS,YAAcF,GAEvBC,IACAC,EAAS,gBAAkBD,GAExBC,CACX,CAMA,SAASjB,GAAgBhH,EAAMqB,GAC3B,IAAI6G,EAAcvF,GAAgB,GAAI8E,GAAoBzH,EAAMqB,GAChE,GAA0B,GAAtB6G,EAAY34B,OAGhB,OAAO,QAAe24B,EAC1B,CAMA,SAAShB,GAAclH,EAAMqB,GACzB,IAAI8G,EAAS,CAAC,EAGd,OAFAA,EAAO,UAAYnI,EAAKgG,aAAa,UACrCmC,EAAO,QAAU7E,GAAStD,GACnBmI,CACX,CAMA,SAAST,GAAgB1H,EAAMqB,GAC3B,IAAI6G,EAAcnE,GAAW/D,GAAMoI,MAAM,OACzC,GAAKF,GAAqC,GAAtBA,EAAY34B,OAAhC,CAGA,IAAIiV,GAAK0jB,EAAY,GACjBvjB,GAAKujB,EAAY,GACrB,IAAInJ,MAAMva,KAAMua,MAAMpa,GAGtB,MAAO,CAACH,EAAGG,EANX,CAOJ,CAMA,SAASijB,GAAe5H,EAAMqB,GAC1B,OAAOsB,GAAgB,CAAC,EAAGkF,GAAY7H,EAAMqB,EACjD,CAMA,SAAS+F,GAAyBpH,EAAMqB,GACpC,OAAOsB,GAAgB,GAAI0E,GAAyBrH,EAAMqB,EAC9D,CAMA,SAASiG,GAAqBtH,EAAMqB,GAChC,OAAOsB,GAAgB,CAAC,EAAG4E,GAAoBvH,EAAMqB,EACzD,CACA,Y,gBChUO,SAASgH,GAAaC,EAAKC,GAC9B,IAAIC,EAAY,GAEhB1zB,OAAOuS,KAAKkhB,GAAQ/c,SAAQ,SAAUid,GAChB,OAAdF,EAAOE,SAA6B/lB,IAAd6lB,EAAOE,IAC7BD,EAAU7sB,KAAK8sB,EAAI,IAAMC,mBAAmBH,EAAOE,IAE3D,IACA,IAAIE,EAAKH,EAAUjb,KAAK,KAKxB,OAHA+a,EAAMA,EAAI9H,QAAQ,QAAS,IAE3B8H,GAA4B,IAAtBA,EAAIlb,QAAQ,KAAckb,EAAM,IAAMA,EAAM,IAC3CA,EAAMK,CACjB,CCtBA,IAAI,GAAwC,WACxC,IAAIh0B,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GAsDxCwzB,GAA8B,SAAUpzB,GAKxC,SAASozB,EAAan2B,GAClB,IAAIgD,EAAQD,EAAOjD,KAAKpD,KAAM,CAC1ByR,OAAQnO,EAAQmO,OAChBma,OAAQtoB,EAAQsoB,OAChB8N,QAASp2B,EAAQo2B,QACjB3N,YAAazoB,EAAQyoB,YACrBpT,SAAUrV,EAAQqV,SAClBiN,UAAWtiB,EAAQsiB,UACnB+T,MAAOr2B,EAAQq2B,SACb35B,KAMN,OADAsG,EAAMszB,WAAat2B,EAAQu2B,UACpBvzB,CACX,CAgBA,OApCA,GAAUmzB,EAAcpzB,GAyBxBozB,EAAav2B,UAAU42B,YAAc,SAAU3oB,GAC3C,OAAOnR,KAAK45B,WAAWzoB,EAC3B,EAMAsoB,EAAav2B,UAAU62B,aAAe,WAClC,OAAO/5B,KAAK45B,UAChB,EACOH,CACX,CAtCiC,CAsC/BtL,GAAA,GAcK,SAAS6L,GAAgCC,EAAWC,EAAYC,GAEnE,IAAIpO,EAAc,GAEd8N,EAAY,GAEZH,EAAU,GAEV9T,EAAY,GAEZ+T,EAAQ,GACRS,OAAoC7mB,IAArB4mB,EAAiCA,EAAmB,GACnEE,EAAuB,eACvBC,EAAoB,aACpBC,EAAqB,aACrBC,EAA2B,mBAC3BC,EAAwB,gBACxBC,EAAoB,YACpBC,EAAqB,aACrBhS,EAAOsR,EAAUI,GACjBh7B,GAAa,QAAcspB,GAC3BiS,EAAgBv7B,EAAWw7B,mBAE3BC,EAAiE,MAAhDz7B,EAAW07B,qBAAqBC,OAAO,EAAG,GA4C/D,OA3CAf,EAAUK,GAAmBliB,MAAK,SAAU6iB,EAAGv1B,GAC3C,OAAOA,EAAE80B,GAA4BS,EAAET,EAC3C,IACAP,EAAUK,GAAmBje,SAAQ,SAAU6e,GAC3C,IAAIC,EAoBJ,GAhBIA,IADAf,EAAah6B,OAAS,KACJ,QAAKg6B,GAAc,SAAUgB,GAC3C,OAAIF,EAAIX,IAAuBa,EAAOd,KAKQ,IAA1CY,EAAIX,GAAoBtc,QAAQ,MACxBgc,EAAUM,GAAsB,IAAMW,EAAIX,KAC9Ca,EAAOd,EAGnB,IAKAa,EAAiB,CACjBtB,EAAUrtB,KAAK0uB,EAAIX,IACnB,IAAI5jB,EAA8C,MAAhCukB,EAAIV,GAAuCI,EACzDS,EAAYH,EAAIR,GAChBY,EAAaJ,EAAIP,GACjBG,EACApB,EAAQltB,KAAK,CACT0uB,EAAIT,GAAuB,GAC3BS,EAAIT,GAAuB,KAI/Bf,EAAQltB,KAAK0uB,EAAIT,IAErB1O,EAAYvf,KAAKmK,GACjBiP,EAAUpZ,KAAK6uB,GAAaC,EAAaD,EAAY,CAACA,EAAWC,IACjE3B,EAAMntB,KAAK,CAAC0uB,EAAI,eAAgBA,EAAI,iBACxC,CACJ,IACO,IAAIzB,GAAa,CACpBhoB,OAAQyoB,EACRR,QAASA,EACT3N,YAAaA,EACb8N,UAAWA,EACXjU,UAAWA,EACX+T,MAAOA,GAEf,C,gBCrLI,GAAwC,WACxC,IAAIn0B,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBvE,OAAS,SAAUmE,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOC,OAAOzC,UAAU6C,eAAe3C,KAAKsC,EAAGI,KAAIL,EAAEK,GAAKJ,EAAEI,GAAI,EAC7FN,EAAcC,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,oBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIM,UAAU,uBAAyB3E,OAAOqE,GAAK,iCAE7D,SAASO,IAAOjG,KAAKkG,YAAcT,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEvC,UAAkB,OAANwC,EAAaC,OAAOQ,OAAOT,IAAMO,EAAG/C,UAAYwC,EAAExC,UAAW,IAAI+C,EACnF,CACH,CAd2C,GAgFxC,GAAsB,SAAUI,GAKhC,SAASk1B,EAAKj4B,GACV,IAAIgD,EAAQtG,KACR2G,OAAyC4M,IAA3BjQ,EAAQk4B,gBAA+Bl4B,EAAQk4B,oBACrCjoB,IAAxBjQ,EAAQqD,cACRA,EAAcrD,EAAQqD,aAG1B,IAAI80B,OAA8CloB,IAA5BjQ,EAAQm4B,gBAAgCn4B,EAAQm4B,gBAAkB,MAGpFhnB,EAAWnR,EAAQmR,SACnBinB,EAAOp4B,EAAQo4B,KA+DnB,YA9DanoB,IAATmoB,QAAsCnoB,IAAhBjQ,EAAQmmB,MAC9BiS,GAAO,SAAUp4B,EAAQmmB,MAE7BnjB,EAAQD,EAAOjD,KAAKpD,KAAM,CACtBmlB,aAAc7hB,EAAQ6hB,aACtBC,wBAAyB9hB,EAAQ8hB,wBACjC9R,UAAWhQ,EAAQgQ,UACnBjH,YAAa/I,EAAQ+I,YACrB1F,YAAaA,EACbtH,WAAYiE,EAAQjE,WACpBs8B,2BAA4Br4B,EAAQq4B,2BACpCC,UAAWt4B,EAAQs4B,UACnBnnB,SAAUA,EACVonB,iBAAkBv4B,EAAQu4B,iBAC1BvW,eAAgBhiB,EAAQgiB,eACxBoW,KAAMA,EACNp8B,WAAyBiU,IAAlBjQ,EAAQhE,OAAsBgE,EAAQhE,MAC7CoH,WAAYpD,EAAQoD,WACpBkQ,WAAYtT,EAAQsT,cAClB5W,KAKNsG,EAAMw1B,cAA+BvoB,IAApBjQ,EAAQ6zB,QAAwB7zB,EAAQ6zB,QAAU,QAKnE7wB,EAAMy1B,aAA6BxoB,IAAnBjQ,EAAQmG,OAAuBnG,EAAQmG,OAAS,aAKhEnD,EAAM01B,iBACqBzoB,IAAvBjQ,EAAQ24B,WAA2B34B,EAAQ24B,WAAa,CAAC,EAK7D31B,EAAM41B,OAAS54B,EAAQwO,MAKvBxL,EAAM61B,WAAa74B,EAAQ22B,UAK3B3zB,EAAMgd,OAAShgB,EAAQ3D,MAOvB2G,EAAM81B,iBAAmBX,EACzBn1B,EAAMklB,OAAOllB,EAAM+1B,wBACfX,GAAQA,EAAKt7B,OAAS,IACtBkG,EAAMg2B,iBAAkB,SAA2BZ,EAAK/5B,IAAI2E,EAAMi2B,uBAAuBtxB,KAAK3E,MAE3FA,CACX,CAyJA,OAxOA,GAAUi1B,EAAMl1B,GAqFhBk1B,EAAKr4B,UAAUs5B,QAAU,SAAUd,GAC/B17B,KAAK07B,KAAOA,EACZ,IAAI74B,EAAM64B,EAAKtd,KAAK,MACpBpe,KAAKy8B,oBAAmB,SAA2Bf,EAAK/5B,IAAI3B,KAAKu8B,uBAAuBtxB,KAAKjL,QAAS6C,EAC1G,EAQA04B,EAAKr4B,UAAUw5B,cAAgB,WAC3B,OAAO18B,KAAKg8B,WAChB,EAMAT,EAAKr4B,UAAUy5B,UAAY,WACvB,OAAO38B,KAAK+7B,OAChB,EAMAR,EAAKr4B,UAAU+Q,SAAW,WACtB,OAAOjU,KAAKk8B,MAChB,EAMAX,EAAKr4B,UAAU05B,aAAe,WAC1B,OAAO58B,KAAKm8B,UAChB,EAMAZ,EAAKr4B,UAAU25B,mBAAqB,WAChC,OAAO78B,KAAKo8B,gBAChB,EAMAb,EAAKr4B,UAAU45B,SAAW,WACtB,OAAO98B,KAAKsjB,MAChB,EAMAiY,EAAKr4B,UAAU65B,WAAa,WACxB,OAAO/8B,KAAK87B,QAChB,EAKAP,EAAKr4B,UAAUm5B,qBAAuB,WAClC,IAAIp7B,EAAI,EACJ+7B,EAAM,GACV,IAAK,IAAIn6B,KAAO7C,KAAKg8B,YACjBgB,EAAI/7B,KAAO4B,EAAM,IAAM7C,KAAKg8B,YAAYn5B,GAE5C,OAAOm6B,EAAI5e,KAAK,IACpB,EAMAmd,EAAKr4B,UAAU+5B,iBAAmB,SAAUhB,IACxC,SAAOj8B,KAAKg8B,YAAaC,GACzBj8B,KAAKwrB,OAAOxrB,KAAKq8B,uBACrB,EAKAd,EAAKr4B,UAAUq5B,uBAAyB,SAAU3D,GAC9C,IAAI6C,EAAkBz7B,KAAKo8B,iBAGvB3d,EAAU,CACV,MAASze,KAAKk8B,OACd,MAASl8B,KAAKsjB,OACd,cAAiBtjB,KAAKm8B,YAEH,OAAnBV,IACA,SAAOhd,EAAS,CACZ,QAAW,OACX,QAAW,UACX,QAAWze,KAAK87B,SAChB,OAAU97B,KAAK+7B,UAMvBnD,EACuB,OAAnB6C,EACMvC,GAAaN,EAAUna,GACvBma,EAASvH,QAAQ,eAAe,SAAUkD,EAAGzuB,GAC3C,OAAOA,EAAEo3B,gBAAiBze,EAAUA,EAAQ3Y,EAAEo3B,eAAiB3I,CACnE,IACR,IAAI9f,EAAiEzU,KAAa,SAC9Ei8B,EAAaj8B,KAAKg8B,YACtB,OAAO,SAOGv1B,EAAWsP,EAAY1W,GAC7B,GAAKoH,EAGA,CACD,IAAI02B,EAAiB,CACjB,WAAc1oB,EAASqlB,YAAYrzB,EAAU,IAC7C,QAAWA,EAAU,GACrB,QAAWA,EAAU,KAEzB,SAAO02B,EAAgBlB,GACvB,IAAIxS,EAAMmP,EASV,OAPInP,EADmB,OAAnBgS,EACMvC,GAAazP,EAAK0T,GAGlB1T,EAAI4H,QAAQ,eAAe,SAAUkD,EAAGzuB,GAC1C,OAAOq3B,EAAer3B,EAC1B,IAEG2jB,CACX,CACH,CACL,EACO8R,CACX,CA1OyB,CA0OvB6B,GAAA,GACF,YAyBO,SAASC,GAAwBC,EAASC,GAC7C,IAAIC,EAASF,EAAQ,YAAY,SAC7BG,GAAI,QAAKD,GAAQ,SAAUtC,EAAK7a,EAAOlC,GACvC,OAAO+c,EAAI,eAAiBqC,EAAO,QACvC,IACA,GAAU,OAANE,EACA,OAAO,KAEX,IACIC,EADAC,EAAiBL,EAAQ,YAAY,iBAIjCI,EAFJD,EAAE,qBAAqBr9B,OAAS,EAC5B,eAAgBm9B,GACV,QAAUE,EAAE,sBAAsB,SAAUvC,EAAK7a,EAAOlC,GAC1D,IAAIyf,GAAgB,QAAKD,GAAgB,SAAUE,GAC/C,OAAOA,EAAG,eAAiB3C,EAAI,gBACnC,IACI4C,EAAeF,EAAc,gBAC7BG,GAAQ,QAAcD,GACtBE,GAAQ,QAAcT,EAAO,eACjC,OAAIQ,GAASC,GACF,QAAWD,EAAOC,GAGlBF,GAAgBP,EAAO,aAEtC,KAGM,QAAUE,EAAE,sBAAsB,SAAUvC,EAAK7a,EAAOlC,GAC1D,OAAO+c,EAAI,kBAAoBqC,EAAO,YAC1C,IAIE,EAENG,EAAM,IACNA,EAAM,GAEV,IAAIzD,EAEHwD,EAAE,qBAAqBC,GAAK,iBACzBtD,EAEHqD,EAAE,qBAAqBC,GAAK,uBACzBj0B,EAAgCg0B,EAAE,UAAU,GAC5C,WAAYF,IACZ9zB,EAAS8zB,EAAO,WAEpBG,GAAM,QAAUD,EAAE,UAAU,SAAUvC,EAAK7a,EAAOlC,GAC9C,MAAI,UAAWof,EACJrC,EAAI,UAAYqC,EAAO,SAGvBrC,EAAI,YAEnB,IACIwC,EAAM,IACNA,EAAM,GAEV,IAAI/9B,EAA+B89B,EAAE,SAASC,GAAK,cAC/CzB,EAAa,CAAC,EACd,cAAewB,GACfA,EAAE,aAAaphB,SAAQ,SAAU6e,EAAK7a,EAAOlC,GACzC,IAAItb,EAAMq4B,EAAI,cACV54B,EAAQ44B,EAAI,gBACF3nB,IAAVjR,IACAA,EAAQ44B,EAAI,SAAS,IAEzBe,EAAWp5B,GAAOP,CACtB,IAEJ,IAIIjD,EAJA4+B,EAAaX,EAAQ,YAAY,iBACjCY,GAAe,QAAKD,GAAY,SAAU/C,EAAK7a,EAAOlC,GACtD,OAAO+c,EAAI,eAAiBjB,CAChC,IAEItR,EAAOuV,EAAa,gBAIxB,GAHIvV,IACAtpB,GAAa,QAAcspB,IAE3B,eAAgB4U,EAAQ,CACxB,IAAIY,GAAa,QAAcZ,EAAO,eAClCY,IACK9+B,KAAc,QAAW8+B,EAAY9+B,KACtCA,EAAa8+B,GAGzB,CACA,IAAI7+B,GAAQ,EACR8+B,EAA2D,MAAhD/+B,EAAW07B,qBAAqBC,OAAO,EAAG,GACrDqD,EAASH,EAAaI,WAAW,GAEjCC,EAAsB,CACtBC,WAAY,EACZC,WAAY,EAEZC,WAAYL,EAAOM,YAAc,EACjCC,WAAYP,EAAOQ,aAAe,GAGtC,GAAIzE,EAAc,CACdmE,EAAsBnE,EAAaA,EAAah6B,OAAS,GACzD,IAAIm0B,GAAI,QAAK2J,EAAaI,YAAY,SAAUQ,GAC5C,OAAOA,EAAgBC,aAAeR,EAAoBD,YACtDJ,EAAaa,WAAa,IAAMD,EAAgBC,aAC5CR,EAAoBD,UAChC,IACI/J,IACA8J,EAAS9J,EAEjB,CACA,IAAI5d,EAAwC,MAA1B0nB,EAAOW,iBAA8B3/B,EAAWw7B,mBAC9DjP,EAASwS,EACP,CAACC,EAAOY,cAAc,GAAIZ,EAAOY,cAAc,IAC/CZ,EAAOY,cACTC,EAAYb,EAAOc,UAAYxoB,EAC/ByoB,EAAYf,EAAOgB,WAAa1oB,EAChC2oB,EAAkBpB,EAAa,eAC/BoB,GAAmBlB,IACnBkB,EAAkB,CACdA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,GAChBA,EAAgB,KAGxB,IAAI7tB,EAAS,CACTma,EAAO,GAAKsT,EAAYX,EAAoBC,WAE5C5S,EAAO,GAAKwT,GAAa,EAAIb,EAAoBK,YACjDhT,EAAO,GAAKsT,GAAa,EAAIX,EAAoBG,YACjD9S,EAAO,GAAKwT,EAAYb,EAAoBE,YAEhD,QAAwBlrB,IAApB+rB,KACC,QAAeA,EAAiB7tB,GAAS,CAC1C,IAAI8tB,EAAmB9B,EAAE,oBACrB+B,GAAwB,QAAc,aAAartB,YAEvD,GADAV,EAAS6tB,EACLC,EACAjgC,EACIigC,EAAiB,KAAOC,EAAsB,IAC1CD,EAAiB,KAAOC,EAAsB,OAErD,CACD,IAAIC,GAAuB,QAAgBH,EAAiBpB,EAAa,gBAAiB,aAE1F5+B,EACImgC,EAAqB,GAAK,OAASD,EAAsB,IACrDC,EAAqB,GAAK,OAASD,EAAsB,EACrE,CACJ,CACA,IAAI/qB,EAAWulB,GAAgCkE,EAAczsB,EAAQ2oB,GAEjEsB,EAAO,GACPD,EAAkB8B,EAAO,mBAE7B,GADA9B,OAAsCloB,IAApBkoB,EAAgCA,EAAkB,GAChE,uBAAwB6B,GACxB,YAAaA,EAAQ,sBAErB,IADA,IAAIoC,EAAOpC,EAAQ,sBAAsB,WAAW,OAAO,QAAQ,OAC1Dr8B,EAAI,EAAGoW,EAAKqoB,EAAKt/B,OAAQa,EAAIoW,IAAMpW,EACxC,GAAIy+B,EAAKz+B,GAAG,cAAe,CACvB,IAAI0+B,GAAa,QAAKD,EAAKz+B,GAAG,eAAe,SAAU2+B,GACnD,MAA0B,eAAnBA,EAAQ,OACnB,IACIC,EAAYF,EAAW,iBAAiB,SAK5C,GAJwB,KAApBlE,IAEAA,EAAkBoE,EAAU,IAER,QAApBpE,EAMA,OALI,QAASoE,EAAW,QACpBnE,EAAKlvB,KAA4BkzB,EAAKz+B,GAAG,QAMrD,MACSy+B,EAAKz+B,GAAG,UACbw6B,EAAkB,MAClBC,EAAKlvB,KAA4BkzB,EAAKz+B,GAAG,UAarD,OAToB,IAAhBy6B,EAAKt7B,SACLq7B,EAAkB,OAClBgC,EAAE,eAAephB,SAAQ,SAAUujB,GACC,SAA5BA,EAAQ,kBACRn2B,EAASm2B,EAAQ,UACjBlE,EAAKlvB,KAA4BozB,EAAQ,aAEjD,KAEG,CACHlE,KAAMA,EACN5pB,MAAOyrB,EAAO,SACdtD,UAAWA,EACXxwB,OAAQA,EACRpK,WAAYA,EACZo8B,gBAAiBA,EACjBhnB,SAAUA,EACV9U,MAAOA,EACPs8B,WAAYA,EACZ38B,MAAOA,EACP+M,YAAakxB,EAAO,eAE5B,C,oDCxgBIuC,GAAsB,SAASx8B,GAEjC,IAAIs8B,EAAU,YAAsB,MAAO,CACzCG,WAAYz8B,EAAQy8B,WAAa,IAAM,gBAClCz8B,EAAQD,OAAS,GAAI,gCACrBC,EAAQ08B,WAAa,gBAAgB,MAI5C,UAAwBhgC,KAAM,CAC5B4/B,QAASA,EACTv8B,OAAQC,EAAQD,SAIlBrD,KAAKigC,WAAa,YAAsB,MAAO,CAC7CF,UAAW,YACXG,OAAQlgC,KAAK4/B,UAIf5/B,KAAKmgC,SAAW,YAAsB,MAAO,CAC3CJ,UAAW,aACXG,OAAQlgC,KAAK4/B,UAGXt8B,EAAQ08B,aAEVhgC,KAAKogC,UAAU,CACbL,UAAW,aACXM,YAAa,WACX,IAAI1lB,EAAO3a,KAAK6V,IAAI,QAChB8E,GAAM,EACRA,IAEAA,EAAO1N,KAAKjJ,IAAI,EAAG2W,EAAO,IAE5BA,EAAO1N,KAAK0hB,MAAW,IAALhU,GAAU,IAC5B3a,KAAKsgC,QAAQ3lB,EACf,EAAE1P,KAAKjL,QAGTA,KAAKogC,UAAU,CACbL,UAAW,cACXM,YAAa,WACX,IAAI1lB,EAAO3a,KAAK6V,IAAI,QAChB8E,EAAK,EACPA,IAEAA,GAAQ,GAEVA,EAAO1N,KAAK0hB,MAAW,IAALhU,GAAU,IAC5B3a,KAAKsgC,QAAQ3lB,EACf,EAAE1P,KAAKjL,SAKXA,KAAKugC,aAAe,YAAsB,MAAO,CAC/CR,UAAW,iBACXG,OAAQlgC,KAAK4/B,UAIf5/B,KAAK4/B,QAAQtzB,iBAAiB,YAAa,WACrCtM,KAAKwgC,SAASxgC,KAAKwgC,QAAQtF,IAAIuF,UAAUC,OAAO,YACtD,EAAEz1B,KAAKjL,OAGP,IAAI2gC,EAAiB,KACrB3gC,KAAKigC,WAAW3zB,iBAAiB,SAAU,WACzCtM,KAAK4gC,iBACDD,IACFE,aAAaF,GACbA,EAAiB,MAEnBA,EAAiBG,WAAW,WAC1B9gC,KAAKiO,cAAc,CACjBlJ,KAAM,SACNg8B,KAAM/gC,KAAKghC,UACXC,UAAWjhC,KAAKghC,QAAQ,SACxBE,QAASlhC,KAAKghC,QAAQ,QAE1B,EAAE/1B,KAAKjL,MAAOsD,EAAQ69B,eAAiB,GACzC,EAAEl2B,KAAKjL,OAKP,eAAyBA,KAAKigC,WAAY,CACxCmB,OAAQ,SAAS17B,GAEf1F,KAAKqhC,QAAU37B,CACjB,EAAEuF,KAAKjL,QAGTA,KAAKshC,OAAS,GAGdthC,KAAKuhC,YAAc,EACnBvhC,KAAKkW,IAAI,WAAY5S,EAAQk+B,UAAY,KACzCxhC,KAAKkW,IAAI,UAAW5S,EAAQm+B,SAAWC,KACvC1hC,KAAKkW,IAAI,UAAW5S,EAAQq+B,UAAYD,KACxC1hC,KAAKkW,IAAI,aAAc5S,EAAQs+B,YAC/B5hC,KAAKkW,IAAI,UAAW5S,EAAQsU,SAAW,IACvC5X,KAAKkW,IAAI,UAAW5S,EAAQ4hB,SAAW,GACvCllB,KAAK6hC,YAAYv+B,EAAQw+B,UACrBx+B,EAAQy+B,UAAS/hC,KAAKgiC,SAAY1+B,EAAQy+B,SAC1Cz+B,EAAQ2+B,iBAAgBjiC,KAAKkiC,gBAAmB5+B,EAAQ2+B,gBACxD3+B,EAAQ6+B,iBAAgBniC,KAAKoiC,gBAAmB9+B,EAAQ6+B,gBAG5DniC,KAAKqiC,YAAY/+B,EAAQlE,UAAYkE,EAAQ7D,OAAQ6D,EAAQqX,KAC/D,GACA,QAAgBmlB,GAAqB,MAOrCA,GAAoB58B,UAAUo/B,OAAS,SAAS3gC,GAC9C,2BAAyC3B,KAAM2B,GAC/C3B,KAAKsgC,QAAQtgC,KAAK6V,IAAI,SAAS,GAAG,EACpC,EASAiqB,GAAoB58B,UAAUk9B,UAAY,SAASmC,GACjDviC,KAAK4/B,QAAQa,UAAU+B,IAAI,gBAC3B,YAAsB,SAAU,CAC9BzC,UAAWwC,EAAOxC,gBAAaxsB,EAC/BhU,MAAOgjC,EAAOhjC,MACdkjC,KAAOF,EAAOE,KACdnS,MAAOiS,EAAOlC,YACdH,OAAQlgC,KAAKmgC,UAEjB,EAKAL,GAAoB58B,UAAU2+B,YAAc,SAASzhC,GAC9B,kBAAX,IAENA,EADE,KAAKsiC,KAAKtiC,GACkB,IAArBqvB,WAAWrvB,GACX,MAAMsiC,KAAKtiC,GACU,IAArBqvB,WAAWrvB,GAAiB,GAC5B,KAAKsiC,KAAKtiC,GACW,IAArBqvB,WAAWrvB,GAAiB,KAC5B,KAAKsiC,KAAKtiC,GACW,IAArBqvB,WAAWrvB,GAAiB,KAAO,GACnC,KAAKsiC,KAAKtiC,GACW,IAArBqvB,WAAWrvB,GAAiB,KAAO,GAAK,IAExC,GAGbJ,KAAKkW,IAAI,WAAY9V,GAAU,GAC3BA,EAAQJ,KAAK4/B,QAAQa,UAAU+B,IAAI,eAClCxiC,KAAK4/B,QAAQa,UAAUC,OAAO,eACnC1gC,KAAKsgC,QAAQtgC,KAAK6V,IAAI,QACxB,EAOAiqB,GAAoB58B,UAAU8+B,SAAW,SAASW,GAChD,OAAOA,EAAQ9sB,IAAI,SAAW,EAChC,EAOAiqB,GAAoB58B,UAAUg/B,gBAAkB,SAASS,GACvD,OAAQA,GAAWA,EAAQ9sB,IAAO8sB,EAAQ9sB,IAAI,QAAU,IAC1D,EAOAiqB,GAAoB58B,UAAUk/B,gBAAkB,WAEhD,EAKAtC,GAAoB58B,UAAU0/B,YAAc,WAC1C,OAAO5iC,KAAK4/B,QAAQa,UAAUoC,SAAS,eACzC,EAKA/C,GAAoB58B,UAAU4/B,SAAW,SAASp9B,GAC5CA,EAAG1F,KAAK4/B,QAAQa,UAAU+B,IAAI,gBAC7BxiC,KAAK4/B,QAAQa,UAAUC,OAAO,gBACnC1gC,KAAKiO,cAAc,CAAElJ,KAAM,WAAYg+B,UAAW/iC,KAAK4iC,eACzD,EAIA9C,GAAoB58B,UAAUzC,OAAS,WACrCT,KAAK4/B,QAAQa,UAAUhgC,OAAO,gBAC9BT,KAAKiO,cAAc,CAAElJ,KAAM,WAAYg+B,UAAW/iC,KAAK4iC,eACzD,EAMA9C,GAAoB58B,UAAUm/B,YAAc,SAASjjC,EAAUub,GAC7D3a,KAAKgjC,UAAYhjC,KAAKijC,QAAU,KAC5B7jC,aAAoB,KAAkBY,KAAKijC,QAAU7jC,EACrBY,KAAKgjC,UAAhC5jC,aAAoBkC,MAAwBlC,EAC/B,GACtBY,KAAKsgC,QAAQ3lB,EACf,EAMAmlB,GAAoB58B,UAAUggC,YAAc,WAC1C,OAAOljC,KAAKgjC,WAAahjC,KAAKijC,QAAQC,aACxC,EAMApD,GAAoB58B,UAAUo9B,QAAU,SAAS3lB,EAAMwoB,GACrD,GAAKnjC,KAAKojC,SAAV,CACKzoB,IAAMA,EAAO3a,KAAK6V,IAAI,SAC3B8E,EAAO1N,KAAKjJ,IAAIhE,KAAK6V,IAAI,WAAY5I,KAAK9I,IAAInE,KAAK6V,IAAI,WAAY8E,GAAQ,IAC3E3a,KAAKkW,IAAI,OAAQyE,GACjB3a,KAAKigC,WAAWoD,UAAY,GAC5B,IACI59B,EAAG69B,EADHlkC,EAAWY,KAAKkjC,cAIhBK,EAAQvjC,KAAKshC,OAAS,GAC1BliC,EAASid,QAAQ,SAASmnB,IACpB/9B,EAAIzF,KAAKkiC,gBAAgBsB,MACrB/9B,aAAag+B,OACjBh+B,EAAI,IAAIg+B,KAAKh+B,IAEXzF,KAAKoiC,kBACPkB,EAAKtjC,KAAKoiC,gBAAgBoB,GACpBF,aAAcG,OAClBH,EAAK,IAAIG,KAAKH,KAGb1T,MAAMnqB,IACT89B,EAAM/2B,KAAK,CACTu0B,KAAMt7B,EACNi+B,IAAK9T,MAAM0T,GAAM,KAAOA,EACxBX,QAASa,IAIjB,EAAEv4B,KAAKjL,OAEPujC,EAAMnrB,MAAK,SAAS6iB,EAAEv1B,GACpB,OAAQu1B,EAAE8F,KAAOr7B,EAAEq7B,MAAQ,EAAK9F,EAAE8F,OAAOr7B,EAAEq7B,KAAO,EAAG,CACvD,IAGA,IAAI4C,EAAM,YAAsB,MAAO,CACrCzD,OAAQlgC,KAAKigC,aAIXj8B,EAAMhE,KAAK4jC,SAAW32B,KAAKjJ,IAAIhE,KAAK6V,IAAI,WAAY0tB,EAAMnjC,OAASmjC,EAAM,GAAGxC,KAAOW,KACnFv9B,EAAMnE,KAAK6jC,SAAW52B,KAAK9I,IAAInE,KAAK6V,IAAI,WAAY0tB,EAAMnjC,OAASmjC,EAAMA,EAAMnjC,OAAO,GAAG2gC,MAAQW,KAChGoC,SAAS9/B,KAAMhE,KAAK4jC,SAAW5/B,EAAM,IAAIy/B,MACzCK,SAAS3/B,KAAMnE,KAAK6jC,SAAW1/B,EAAM,IAAIs/B,MAC9C,IAAIM,EAAS5/B,EAAIH,EACbw9B,EAAWxhC,KAAK6V,IAAI,YACpBmuB,EAAQhkC,KAAKikC,QAAUF,EAAQvC,EAAWA,EAASuC,EAAQ,GAAKppB,EAEpE3W,EAAMhE,KAAK4jC,SAAW5jC,KAAK4jC,SAAW,GAAGI,EACzCD,GAAS5/B,EAAIH,GAAOggC,EACpB,cAAwBL,EAAK,CAC3Bj5B,MAAOq5B,EACPvC,SAAU,UAIZxhC,KAAKkkC,UAAUP,EAAK3/B,EAAKG,EAAK6/B,GAG1BhkC,KAAK6V,IAAI,YACX,cAAyB7V,KAAKugC,aAAc,CAAE71B,MAAO1K,KAAK6V,IAAI,YAAcmuB,IAE5E,cAAyBhkC,KAAKugC,aAAc,CAAE71B,MAAO,KAIvD,IAAIy5B,EAAO,GACPC,EAAa,cAAwBpkC,KAAKigC,WAAY,cAGtDoE,EAAO,YAAsB,MAAO,CACpCtE,UAAW,cACXG,OAAQyD,IAIZJ,EAAMlnB,QAAQ,SAASmnB,GAYrB,IAXA,IAAI/9B,EAAI+9B,EAAEzC,KACNuD,EAAId,EAAEtI,IAAM,YAAsB,MAAO,CAC3C6E,UAAW,aACXpgC,MAAO,CACL4kC,KAAMt3B,KAAK0hB,OAAOlpB,EAAEzB,GAAKggC,IAE3BvB,KAAMziC,KAAKgiC,SAASwB,EAAEb,SACtBzC,OAAQmE,IAGNG,EAAMF,EAAEG,iBAAiB,OACpBxjC,EAAE,EAAGA,EAAEujC,EAAIpkC,OAAQa,IAC1BujC,EAAIvjC,GAAGyjC,YAAc,WAAY,OAAO,CAAO,EAI7ClB,EAAEE,KACJ,cAAwBY,EAAG,CACzBK,UAAWnB,EAAEE,IAAIj+B,GAAKu+B,EACtBt5B,OAAQ84B,EAAEE,IAAIj+B,GAAKu+B,EACnBxC,SAAU,UAGd,IASIoD,EAAKnH,EATL8G,EAAO,cAAwBD,EAAG,QAUtC,IARAA,EAAEh4B,iBAAiB,QAAS,WACrBtM,KAAKqhC,SACRrhC,KAAKiO,cAAc,CAAClJ,KAAM,SAAU49B,QAASa,EAAEb,SAEnD,EAAE13B,KAAKjL,OAIF4kC,EAAI,EAAGnH,EAAE0G,EAAKS,GAAMA,IACvB,GAAIL,EAAO9G,EACT,MAGJ0G,EAAKS,GAAOL,EAAO,cAAwBD,EAAG,SAC9C,cAAwBA,EAAG,CAAEO,IAAKD,EAAIR,GACxC,EAAEn5B,KAAKjL,OACPA,KAAK8kC,QAAUX,EAAK/jC,OAEhB+iC,GAAOnjC,KAAK+kC,QAAQ/kC,KAAK4jC,SAAU,CAAEoB,MAAM,EAAOC,SAAU,UAEhEjlC,KAAKiO,cAAc,CACjBlJ,KAAM,SACNg8B,KAAM/gC,KAAKghC,UACXC,UAAWjhC,KAAKghC,QAAQ,SACxBE,QAASlhC,KAAKghC,QAAQ,QA/HE,CAiI5B,EAOAlB,GAAoB58B,UAAUgiC,mBAAqB,SAASnE,GAC1D,OAAQA,EAAO/gC,KAAK4jC,UAAY5jC,KAAKikC,MACvC,EAOAnE,GAAoB58B,UAAUiiC,mBAAqB,SAAS71B,GAC1D,OAAOA,EAAStP,KAAKikC,OAASjkC,KAAK4jC,QACrC,EAOA9D,GAAoB58B,UAAU09B,eAAiB,SAASwE,GACtDplC,KAAKuhC,YAAc6D,OACA7xB,IAAf6xB,IACFplC,KAAKigC,WAAWmF,WAAaA,EAEjC,EAMAtF,GAAoB58B,UAAUmiC,eAAiB,WAE7C,YAAyB9xB,IAArBvT,KAAKuhC,YACAvhC,KAAKigC,WAAWmF,WAGhBplC,KAAKuhC,WAEhB,EAMAzB,GAAoB58B,UAAUghC,UAAY,SAASP,EAAK3/B,EAAKG,EAAK6/B,GAEhE,IAIIv+B,EAAG6/B,EAAIC,EAAOC,EAJdC,EAAO,YAAsB,MAAO,CACtC1F,UAAW,WACXG,OAAQyD,IAGN+B,EAAK,cAAwBD,EAAM,QACnCE,EAAS,cAAwBF,EAAM,UAEvCG,EAAO,IAAKnC,KAAKzjC,KAAK4jC,UAAWiC,cACrCP,GAAM,IAAK7B,KAAK,GAAIqC,YAAYzkC,OAAOukC,IAAS,IAAInC,KAAK,GAAGqC,YAAYzkC,OAAOukC,EAAK,KAAO5B,EAC3F,IAAI+B,EAAQ94B,KAAK0hB,MAAM,EAAEgX,EAAOL,GAAI,EACpC,MAAM,EAAM,CAEV,GADA7/B,EAAI,IAAIg+B,KAAK,GAAGqC,YAAYF,GACxBngC,EAAIzF,KAAK6jC,SAAU,MACvB,YAAsB,MAAO,CAC3B9D,UAAW,kBACXpgC,MAAO,CACL4kC,KAAMvkC,KAAKklC,mBAAmBz/B,GAAKigC,GAErCjD,KAAMmD,EACN1F,OAAQuF,IAEVG,GAAQG,CACV,CAEA,GAAI,YAAYrD,KAAK1iC,KAAK6V,IAAI,iBAC5ByvB,GAAM,IAAK7B,KAAK,EAAE,EAAE,GAAIqC,YAAYzkC,OAAOukC,IAAS,IAAInC,KAAK,EAAE,EAAE,GAAGqC,YAAYzkC,OAAOukC,EAAK,KAAO5B,EACnGwB,EAASv4B,KAAK9I,IAAI,EAAG8I,KAAK0hB,MAAM,GAAK1hB,KAAK0hB,MAAM2W,EAAGK,EAAO,KACtDH,EAAS,IAAI,CACfI,EAAO,IAAKnC,KAAKzjC,KAAK4jC,UAAWiC,cACjCN,EAAQC,EAAO,EACf,MAAM,EAAM,CAIV,GAHA//B,EAAI,IAAIg+B,KAAK,EAAE,EAAE,GACjBh+B,EAAEqgC,YAAYF,GACdngC,EAAEugC,SAAST,EAAM,GACb9/B,EAAIzF,KAAK6jC,SAAU,MACvB,YAAsB,MAAO,CAC3B9D,UAAW,mBACXpgC,MAAO,CACL4kC,KAAMvkC,KAAKklC,mBAAmBz/B,GAAKigC,GAErCjD,KAAMh9B,EAAEwgC,wBAAmB1yB,EAAW,CAAEgyB,MAAO,UAC/CrF,OAAQuF,IAEVF,GAASC,EACLD,EAAQ,KACVK,IACAL,EAAQC,EAAO,EAEnB,CACF,CAGF,GAA6B,QAAzBxlC,KAAK6V,IAAI,cAAuB,CAClCyvB,GAAM,IAAI7B,KAAK,EAAE,EAAE,GAAK,IAAIA,KAAK,EAAE,EAAE,IAAMO,EAC3C,IAAIkC,EAAOj5B,KAAK9I,IAAI,EAAG8I,KAAK0hB,MAAM,GAAK1hB,KAAK0hB,MAAM2W,EAAGK,EAAO,KAC5D,GAAIO,EAAO,GAAI,CACbN,EAAO,IAAKnC,KAAKzjC,KAAK4jC,UAAWiC,cACjCN,EAAQ,EACR,IAAIY,EAAMD,EACV,MAAM,EAKJ,GAJAzgC,EAAI,IAAIg+B,KAAK,EAAE,EAAE,GACjBh+B,EAAEqgC,YAAYF,GACdngC,EAAEugC,SAAST,GACX9/B,EAAEs/B,QAAQoB,GACNvW,MAAMnqB,GACR8/B,IACIA,EAAM,KACRA,EAAQ,EACRK,KAEFO,EAAMD,MACD,CACL,GAAIzgC,EAAIzF,KAAK6jC,SAAU,MACvB,GAAIsC,EAAI,EAAG,CACT,IAAIC,EAAUpmC,KAAKklC,mBAAmBz/B,GAClCzF,KAAKklC,mBAAmB,IAAIzB,KAAKmC,EAAML,EAAM,EAAG,IAAMa,EAAUT,GAClE,YAAsB,MAAO,CAC3B5F,UAAW,iBACXpgC,MAAO,CACL4kC,KAAM6B,EAAUV,GAElBjD,KAAM0D,EACNjG,OAAQuF,GAGd,CACAG,EAAOngC,EAAEogC,cACTN,EAAQ9/B,EAAE4gC,WACVF,EAAM1gC,EAAEu7B,UAAYkF,EAChBC,EAAM,IAAI1C,KAAKmC,EAAML,EAAM,EAAG,GAAGvE,YACnCuE,IACAY,EAAMD,EAEV,CAEJ,CACF,CACF,EAQApG,GAAoB58B,UAAU6hC,QAAU,SAASpC,EAASr/B,GACxD,IAAIy9B,EAiBJ,GAhBAz9B,EAAUA,GAAW,CAAC,EAElBq/B,aAAmBc,KACrB1C,EAAO4B,GAGH3iC,KAAKkjC,cAAcjlB,QAAQ0kB,IAAY,IACzC5B,EAAO/gC,KAAKkiC,gBAAgBS,KAE1B5B,GAAUA,aAAgB0C,OAC5B1C,EAAO,IAAI0C,KAAK1C,IAEbA,IAAQnR,MAAMmR,KACjBA,EAAO,IAAI0C,KAAKpiC,OAAOshC,OAGtB/S,MAAMmR,GAAO,EACK,IAAjBz9B,EAAQ0hC,MAAgBhlC,KAAKigC,WAAWQ,UAAU+B,IAAI,WAC1D,IAAI4C,EAAaplC,KAAKklC,mBAAmBnE,GAQzC,GAPuB,UAAnBz9B,EAAQ2hC,SACVG,GAAc,gBAA0BplC,KAAKigC,YAAY,EAAI,cAAwBjgC,KAAKigC,WAAY,cAAc,EACxF,QAAnB38B,EAAQ2hC,WACjBG,GAAc,gBAA0BplC,KAAKigC,YAAY,EAAI,cAAwBjgC,KAAKigC,WAAY,cAAc,GAEtHjgC,KAAK4gC,eAAewE,IACC,IAAjB9hC,EAAQ0hC,MAAgBhlC,KAAKigC,WAAWQ,UAAUC,OAAO,WACzDiC,EACF,IAAK,IAASa,EAALviC,EAAE,EAAMuiC,EAAIxjC,KAAKshC,OAAOrgC,GAAIA,IAC/BuiC,EAAEb,UAAYA,GAChBa,EAAEtI,IAAIuF,UAAU+B,IAAI,aACpBxiC,KAAKwgC,QAAUgD,GAEfA,EAAEtI,IAAIuF,UAAUC,OAAO,YAI/B,CACF,EAOAZ,GAAoB58B,UAAUojC,UAAY,SAAS7gC,EAAG8gC,GACpD,OAAQA,GACN,IAAK,KACH,OAAO,IAAI9C,KAAKzjC,KAAKwmC,SAAS/gC,EAAG,MAEnC,IAAK,OACH,OAAO,IAAIg+B,KAAKzjC,KAAKwmC,SAAS/gC,EAAG,OAEnC,IAAK,MACH,OAAO,IAAIg+B,KAAKzjC,KAAKwmC,SAAS/gC,EAAG,QAEnC,IAAK,QAMH,OALAA,EAAI,IAAIg+B,KAAKzjC,KAAKwmC,SAAS/gC,EAAG,QAC1BA,EAAEu7B,UAAY,KAChBv7B,EAAI,IAAIg+B,KAAKh+B,EAAEugC,SAASvgC,EAAE4gC,WAAa,KAEzC5gC,EAAIA,EAAEs/B,QAAQ,GACP,IAAItB,KAAKh+B,GAElB,QAAS,OAAO,IAAIg+B,KAAKh+B,GAE7B,EAOAq6B,GAAoB58B,UAAU89B,QAAU,SAASiE,EAAUsB,GACzD,IAAI3B,EAEJ,OADK2B,IAAOA,EAAQtB,GACZA,GACN,IAAK,QAEDL,EADE5kC,KAAK6V,IAAI,aACH,cAAwB7V,KAAKugC,aAAc,SAAS,EAAI,cAAwBvgC,KAAKigC,WAAY,cAAc,GAE/G,gBAA0BjgC,KAAKigC,YAAY,EAAI,cAAwBjgC,KAAKigC,WAAY,cAAc,EAEhH,MAEF,IAAK,MAED2E,EADE5kC,KAAK6V,IAAI,YACL,cAAwB7V,KAAKugC,aAAc,SAAS,EAAI,cAAwBvgC,KAAKigC,WAAY,cAAc,EAE/G,gBAA0BjgC,KAAKigC,YAAY,EAAI,cAAwBjgC,KAAKigC,WAAY,cAAc,EAE9G,MAEF,QACE2E,EAAM,EACN,MAGJ,IAAIn/B,EAAIzF,KAAKmlC,mBAAmBnlC,KAAKqlC,iBAAmBT,GAExD,OADAn/B,EAAIzF,KAAKsmC,UAAU7gC,EAAG8gC,GACf,IAAI9C,KAAKh+B,EAClB,EAQAq6B,GAAoB58B,UAAUsjC,SAAW,SAAS/gC,EAAGghC,GACnD,OAAOx5B,KAAK0hB,MAAMlpB,EAAEghC,GAAKA,CAC3B,EAKA3G,GAAoB58B,UAAUwjC,aAAe,WAC3C,OAAO,IAAIjD,KAAKzjC,KAAK6V,IAAI,WAC3B,EAKAiqB,GAAoB58B,UAAUyjC,WAAa,WACzC,OAAO,IAAIlD,KAAKzjC,KAAK6V,IAAI,WAC3B,EAEA,Y,gBCpqBA,UACA7U,OACA,OACAi2B,iBAAAA,CAAAA,EACA2P,SAAAA,KAEA,EACA3nC,QAAAA,CACA,uBACA,6BACA,UACA,8BACA,WACA,qCACA,QAEA,OADA4nC,EAAAA,EAAAA,MAAAA,KAAAA,kDACA,KAEA,EAEAC,aAAAA,EAAAA,GACA,6BACA,mCACA,oBACA,SAEA,mDACA,SAGA,eAFA,EAGA,EAEA,uBACA,iCACA,IACA,qBACArd,EAAAA,aAAAA,IAAAA,UAAAA,QACAA,EAAAA,aAAAA,IAAAA,UAAAA,mBACA,oCAAAsd,aAAAA,SACA,aACA,2CAGA,CAFA,aACAF,EAAAA,EAAAA,UAAAA,KAAAA,MAAAA,wBACA,CAEA,mCACA,EAEA,qCACA,uBAEA,8BACA,GACAA,EAAAA,EAAAA,UAAAA,KAAAA,MAAAA,yBAGA,IAMA,EANA,OACA,OACA,OACA,OACA,4BACA,WAEA,wBACAG,EAAAA,EAAAA,OAEA,kCACAA,EAAAA,OAAAA,KAAAA,GAAAA,EAAAA,cAEA,gBACA,MACA,SAEA,YACAl1B,QACAmoB,UAAAA,cAEA,IACAgN,EAAAA,IAAAA,KAAAA,EAAAA,WAAAA,OAGA,6BACA,aACA,qBACA,4BACA,UACAxF,EAAAA,KAEA,UACAE,EAAAA,EAEA,CACA,4BACAh8B,OAAAA,OAAAA,EAAAA,WAAAA,EAAAA,WAAAA,YAEAlG,EAAAA,IAAAA,GAAAA,GACA,gBACAF,QACAE,OAAAA,KAAAA,kBAAAA,GACAynC,kBAAAA,IAEAC,EAAAA,KAAAA,EACA,CAEA,SAOA,MANA,sBACApH,UAAAA,aACA6B,WAAAA,MACAH,QAAAA,EACAE,QAAAA,IAGA,wCACA,6BAGA,GACA3S,OAAAA,aAAAA,GAEAoY,EAAAA,OAAAA,YAAAA,KACA,IACA,wCACA3nC,EAAAA,iBAAAA,CACA4nC,KAAAA,IAEA,6DACAC,EAAAA,GAAAA,UAAAA,EACAA,EAAAA,GAAAA,UAAAA,CAGA,CAFA,aACA5b,GAAAA,IAAAA,MACA,CACA0b,EAAAA,IAAAA,GACA,KACA,IACA,mCAEA,yBACArH,UAAAA,sBACAxgC,MAAAA,yDAAAA,KACAkjC,KAAAA,YAEA,wBACA,CAEA,gBACAhhC,GAAAA,EAAAA,GACAlC,QACAi+B,OAAAA,IAmBA,OAjBA+J,EAAAA,GAAAA,kBAAAA,KACA,uCAEA,kEACA,IAEA,sBAEA,eACA,sCACA,gBACA,sCACA,mBACA,IAIA,CACA,EAEAC,eAAAA,EAAAA,EAAAA,WAEA,+GACA,4BACA,YACAjoC,QACAE,OAAAA,KAAAA,kBAAAA,IAAAA,GAAAA,EAAAA,CACAgqB,SAEAyd,kBAAAA,IAEA,YACAzlC,GAAAA,EAAAA,GACAlC,QACAi+B,OAAAA,CACA1rB,KAIA,OADA,sBACA,CACA,IC3MwQ,MCAxQ,IAAI,GAAQ,GAOR,IAAY,OACd,GACA,GACA,IACA,EACA,KACA,KACA,MAIF,SAAe,GAAiB,Q,8DCwBhC21B,EAAAA,EAAAA,UAAAA,kBAA2C,SAAHA,GACxC,iFAMA,OAHA,6CACAxmC,EAAAA,GAEA,gDACA,EAEAwmC,EAAAA,EAAAA,UAAAA,mBAA4C,SAAHA,GACzC,gCACA,2BACA,UACA,OACA,QACA,mCACA,SACA,oCACA,SACA,oCAEA,MACA,OACA,QACA,kCACA,SACA,mCACA,SACA,mCAEA,MACA,OACA,UACA,QACA,qBACA,2BACA,EACA,QACA,qCACA,QACA,qCACA,QACA,MAEA,MACA,QACA,MAEA,oDACA,EAEAA,EAAAA,EAAAA,UAAAA,gBAAyC,SAAHA,EAAAA,GACtC,mFAGA,wDACA,sEAHA,CAIA,EAEAA,EAAAA,EAAAA,UAAAA,iBAA0C,SAAHA,EAAAA,GACvC,iFAGA,+DACA,uEACA,EAGA,UACA3mC,KAAAA,YACA9B,OAAAA,CAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,IACA8wB,WAAAA,CACA4X,KADA,IAEAC,aAFA,KAGAC,WAAAA,EAAAA,GAEAzmC,MAAAA,CACAH,KAAAA,CAAAA,GAEAA,OACA,OACAiB,SAAAA,EACAC,MAAAA,KAEA,EACAhB,SAAAA,IACA,6BACA2mC,eACA,wEACA,EACAjmC,YACA,+BACA,EACAkmC,YACA,oDACA,GAEAC,UACA,0BACA,EACA9oC,QAAAA,CACA,kBACA,IACA,MACA,EACA,kBACA+B,QAAAA,KAAAA,KAAAA,SAAAA,KAAAA,iBAEA,mBACAA,QAAAA,KAAAA,KAAAA,SAAAA,KAAAA,YACA,wBACA,IACAgnC,EAAAA,EAEA,KACA,mEAOA,sEANA,gDACA,6BAEA,CAIA,CAKA,SAHA,kBACA,wBAEA,eACA,mBACA,2BAEA,mBACA,0CACA,6DACA,mBAEA,6BACA,GACA,qBAEA,kBACA,MACA,+DACA,mBACA,+BAGA,wCACA,4EACA,qEAIA,CAFA,aACAnB,EAAAA,EAAAA,UAAAA,KAAAA,MACA,CAEA,eACA,EAEA,sBACA,qCAEA,IACA,8BACA,8EACA,YACAtnC,MAAAA,SACA2nC,kBAAAA,EACAznC,OAAAA,IAAAA,GAAAA,EAAAA,CACAL,SAAAA,CACA,wBAEAC,WAAAA,YACAC,OAAAA,MAIA,wBACAwS,EAAAA,YAAAA,KAAAA,GAEA,gDAGA,CAFA,aACA4Z,GAAAA,IAAAA,MACA,CACA,ICnOkQ,MCSlQ,IAAI,IAAY,OACd,GACA9rB,EACAC,GACA,EACA,KACA,KACA,MAIF,SAAe,GAAiB,O","sources":["webpack://@openeo/web-editor/src/components/maps/ExtentMixin.vue","webpack://@openeo/web-editor/./src/components/maps/ExtentMixin.vue?105c","webpack://@openeo/web-editor/./src/components/maps/ExtentMixin.vue","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue","webpack://@openeo/web-editor/src/components/maps/TextControl.vue","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue?ab63","webpack://@openeo/web-editor/./src/components/maps/TextControl.vue?c848","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue","webpack://@openeo/web-editor/src/components/maps/ChannelControl.vue","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue?3c8a","webpack://@openeo/web-editor/./src/components/maps/ChannelControl.vue?9e5e","webpack://@openeo/web-editor/./node_modules/ol/DataTile.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/TileTexture.js","webpack://@openeo/web-editor/./node_modules/ol/renderer/webgl/TileLayer.js","webpack://@openeo/web-editor/./node_modules/ol/webgl/PaletteTexture.js","webpack://@openeo/web-editor/./node_modules/ol/style/expressions.js","webpack://@openeo/web-editor/./node_modules/ol/layer/WebGLTile.js","webpack://@openeo/web-editor/./node_modules/ol/source/DataTile.js","webpack://@openeo/web-editor/./node_modules/geotiff/dist-module/pool.js","webpack://@openeo/web-editor/./node_modules/ol/source/GeoTIFF.js","webpack://@openeo/web-editor/src/components/maps/GeoTiffMixin.vue","webpack://@openeo/web-editor/./src/components/maps/GeoTiffMixin.vue?7e8a","webpack://@openeo/web-editor/./src/components/maps/GeoTiffMixin.vue","webpack://@openeo/web-editor/./node_modules/ol/xml.js","webpack://@openeo/web-editor/./node_modules/ol/format/XML.js","webpack://@openeo/web-editor/./node_modules/ol/format/xlink.js","webpack://@openeo/web-editor/./node_modules/ol/format/xsd.js","webpack://@openeo/web-editor/./node_modules/ol/format/OWS.js","webpack://@openeo/web-editor/./node_modules/ol/format/WMTSCapabilities.js","webpack://@openeo/web-editor/./node_modules/ol/uri.js","webpack://@openeo/web-editor/./node_modules/ol/tilegrid/WMTS.js","webpack://@openeo/web-editor/./node_modules/ol/source/WMTS.js","webpack://@openeo/web-editor/./node_modules/ol-ext/control/Timeline.js","webpack://@openeo/web-editor/src/components/maps/WebServiceMixin.vue","webpack://@openeo/web-editor/./src/components/maps/WebServiceMixin.vue?cc1d","webpack://@openeo/web-editor/./src/components/maps/WebServiceMixin.vue","webpack://@openeo/web-editor/src/components/viewer/MapViewer.vue","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue?b297","webpack://@openeo/web-editor/./src/components/viewer/MapViewer.vue?e73e"],"sourcesContent":["<script>\nimport GeoJsonMixin from './GeoJsonMixin.vue';\nimport Utils from '../../utils.js';\n\nimport Feature from 'ol/Feature';\nimport { fromExtent as PolygonFromExtent } from 'ol/geom/Polygon';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\nexport default {\n\tmixins: [GeoJsonMixin],\n\tmethods: {\n\t\t// data can be:\n\t\t// bbox: Array of Array (west, south, east, north - WGS84) or STAC Collection\n\t\t// geometry: GeoJSON Object (WGS84) or STAC Item\n\t\tasync addExtent(data, fill = true) {\n\t\t\tlet footprint = null;\n\t\t\tif (Utils.isObject(data)) {\n\t\t\t\tif (data.type === 'Collection') {\n\t\t\t\t\tfootprint = data.extent.spatial.bbox.map(bbox => Utils.extentToBBox(bbox));\n\t\t\t\t}\n\t\t\t\telse if (data.type !== 'Feature' || data.geometry || data.bbox) {\n\t\t\t\t\tfootprint = data;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfootprint = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfootprint = data;\n\t\t\t}\n\n\t\t\tif (Array.isArray(footprint) && footprint.length > 0) {\n\t\t\t\tthis.addRectangles(footprint, fill);\n\t\t\t}\n\t\t\telse if (footprint) {\n\t\t\t\tthis.addGeoJson(footprint, false, \"Footprint\", fill);\n\t\t\t}\n\t\t},\n\n\t\taddRectangles(rectangles, fill = true) {\n\t\t\tlet mapProj = this.map.getView().getProjection();\n\t\t\tlet features = rectangles.map(bbox => {\n\t\t\t\tlet polygon = PolygonFromExtent([bbox.west, bbox.south, bbox.east, bbox.north]).transform(\"EPSG:4326\", mapProj);\n\t\t\t\treturn new Feature(polygon);\n\t\t\t});\n\t\t\tlet source = new VectorSource({\n\t\t\t\tfeatures,\n\t\t\t\tprojection: mapProj,\n\t\t\t\twrapX: false\n\t\t\t});\n\t\t\tlet layer = new VectorLayer({\n\t\t\t\ttitle: \"Bounding Boxes\",\n\t\t\t\tdisplayInLayerSwitcher: false,\n\t\t\t\tsource\n\t\t\t});\n\t\t\tif (!fill) {\n\t\t\t\tthis.removeLayerFill(layer);\n\t\t\t}\n\t\t\tthis.map.addLayer(layer);\n\t\t\t// ToDo: The Collection component has some smart fitting behavior in setMapSize()\n\t\t\t// Implement something similar here, too.\n\t\t\tthis.map.getView().fit(source.getExtent(), this.getFitOptions());\n\t\t\treturn layer;\n\t\t},\n\n\t\tremoveLayerFill(layer) {\n\t\t\tlet style = layer.getStyle();\n\t\t\t// https://github.com/openlayers/openlayers/issues/10131\n\t\t\tif (typeof style === 'function') {\n\t\t\t\tstyle = style()[0];\n\t\t\t}\n\t\t\tstyle.setFill(null);\n\t\t}\n\n\t}\n\n}\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ExtentMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ExtentMixin.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./ExtentMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./ExtentMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.texts.length > 0)?_c('div',{staticClass:\"ol-unselectable ol-control value\",class:{pointer: _vm.texts.length > 1},on:{\"click\":_vm.toggle}},[_vm._v(\" \"+_vm._s(_vm.current)+\" \")]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div v-if=\"texts.length > 0\" class=\"ol-unselectable ol-control value\" @click=\"toggle\" :class=\"{pointer: texts.length > 1}\">\n\t\t{{ current }}\n\t</div>\n</template>\n\n<script>\nimport ControlMixin from './ControlMixin.vue';\n\nexport default {\n\tname: 'TextControl',\n\tmixins: [\n\t\tControlMixin\n\t],\n\tdata() {\n\t\treturn {\n\t\t\ti: 0\n\t\t};\t\n\t},\n\tcomputed: {\n\t\ttexts() {\n\t\t\tif (Array.isArray(this.text)) {\n\t\t\t\treturn this.text;\n\t\t\t}\n\t\t\telse if (typeof this.text === 'string' && this.text.length > 0) {\n\t\t\t\treturn [this.text];\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\tcurrent() {\n\t\t\tif (this.texts.length === 0) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn this.texts[this.i % this.text.length];\n\t\t\t}\n\t\t}\n\t},\n\tprops: {\n\t\ttext: {\n\t\t\ttext: [\n\t\t\t\tString,\n\t\t\t\tArray\n\t\t\t],\n\t\t\tdefault: ''\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggle() {\n\t\t\tthis.i++;\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.pointer {\n\tcursor: pointer;\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TextControl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TextControl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TextControl.vue?vue&type=template&id=fe2bcd86&scoped=true&\"\nimport script from \"./TextControl.vue?vue&type=script&lang=js&\"\nexport * from \"./TextControl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TextControl.vue?vue&type=style&index=0&id=fe2bcd86&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fe2bcd86\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('Splitpanes',{staticClass:\"default-theme\",attrs:{\"horizontal\":\"\"}},[_c('Pane',{attrs:{\"id\":\"map\"}},[_c('div',{staticClass:\"map-viewer\",attrs:{\"id\":_vm.id}},[_c('ProgressControl',{ref:\"progress\",attrs:{\"map\":_vm.map}}),(_vm.isGeoTiff)?_c('TextControl',{attrs:{\"text\":_vm.textControlText}}):_vm._e(),(_vm.isGeoTiff && !_vm.colorMap)?_c('ChannelControl',{attrs:{\"bands\":_vm.bands},on:{\"update\":_vm.updateGeoTiffStyle}}):_vm._e(),(_vm.loading)?_c('div',{staticClass:\"map-loading\"},[_c('i',{staticClass:\"fas fa-spinner fa-spin\"}),_c('span',[_vm._v(\"Loading map...\")])]):_vm._e()],1)]),(_vm.chart)?_c('Pane',{attrs:{\"id\":\"chart\",\"size\":33}},[_c('ScatterChart',_vm._b({attrs:{\"height\":220}},'ScatterChart',_vm.chart,false))],1):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.channels.length > 0),expression:\"channels.length > 0\"}],staticClass:\"ol-unselectable ol-control channels\"},[_c('table',[_c('thead',[_c('tr',[(!_vm.isGray)?_c('th',[_vm._v(\"Channel\")]):_vm._e(),(_vm.multiBand)?_c('th',[_vm._v(\"Band\")]):_vm._e(),_c('th',[_vm._v(\"Min\")]),_c('th',[_vm._v(\"Max\")])])]),_c('tbody',_vm._l((_vm.channels),function(channel,i){return _c('tr',{key:i},[(!_vm.isGray)?_c('th',[_vm._v(_vm._s(_vm.labels[i]))]):_vm._e(),(_vm.multiBand)?_c('td',[_c('select',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.id),expression:\"channel.id\",modifiers:{\"number\":true}}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return _vm._n(val)}); _vm.$set(channel, \"id\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.bands),function(band){return _c('option',{key:band.id,domProps:{\"value\":band.id}},[_vm._v(_vm._s(band.name || band.id))])}),0)]):_vm._e(),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.min),expression:\"channel.min\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"required\":\"\"},domProps:{\"value\":(channel.min)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(channel, \"min\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(channel.max),expression:\"channel.max\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"required\":\"\"},domProps:{\"value\":(channel.max)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(channel, \"max\", _vm._n($event.target.value))},\"blur\":function($event){return _vm.$forceUpdate()}}})])])}),0),(_vm.multiBand)?_c('tfoot',[_c('tr',[_c('td',{attrs:{\"colspan\":_vm.cols}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isGray),expression:\"isGray\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.isGray)?_vm._i(_vm.isGray,null)>-1:(_vm.isGray)},on:{\"change\":function($event){var $$a=_vm.isGray,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isGray=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isGray=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isGray=$$c}}}}),_vm._v(\" Grayscale \")])])]):_vm._e()])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<div v-show=\"channels.length > 0\" class=\"ol-unselectable ol-control channels\">\n\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th v-if=\"!isGray\">Channel</th>\n\t\t\t\t\t<th v-if=\"multiBand\">Band</th>\n\t\t\t\t\t<th>Min</th>\n\t\t\t\t\t<th>Max</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr v-for=\"(channel, i) in channels\" :key=\"i\">\n\t\t\t\t\t<th v-if=\"!isGray\">{{ labels[i] }}</th>\n\t\t\t\t\t<td v-if=\"multiBand\">\n\t\t\t\t\t\t<select v-model.number=\"channel.id\">\n\t\t\t\t\t\t\t<option v-for=\"band in bands\" :key=\"band.id\" :value=\"band.id\">{{ band.name || band.id }}</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td><input type=\"number\" v-model.number=\"channel.min\" required /></td>\n\t\t\t\t\t<td><input type=\"number\" v-model.number=\"channel.max\" required /></td>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t\t<tfoot v-if=\"multiBand\">\n\t\t\t\t<tr>\n\t\t\t\t\t<td :colspan=\"cols\">\n\t\t\t\t\t\t<input type=\"checkbox\" v-model=\"isGray\" /> Grayscale\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t</tfoot>\n\t\t</table>\n\t</div>\n</template>\n\n<script>\nimport ControlMixin from './ControlMixin.vue';\n\nexport default {\n\tname: 'ChannelControl',\n\tmixins: [\n\t\tControlMixin\n\t],\n\tprops: {\n\t\tbands: {\n\t\t\ttype: Array,\n\t\t\tdefault: () => []\n\t\t}\n\t},\n\tcomputed: {\n\t\tmultiBand() {\n\t\t\treturn this.bands.length > 1;\n\t\t},\n\t\tcols() {\n\t\t\tif (this.isGray) {\n\t\t\t\treturn this.multiBand ? 3 : 2;\n\t\t\t}\n\t\t\treturn 4;\n\t\t},\n\t\tlabels() {\n\t\t\treturn this.isGray ? ['Grayscale'] : ['Red', 'Green', 'Blue'];\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tchannels: [],\n\t\t\tisGray: this.bands.length === 1\n\t\t}\n\t},\n\twatch: {\n\t\tbands: {\n\t\t\timmediate: true,\n\t\t\thandler() {\n\t\t\t\tif (this.bands.length === 1) {\n\t\t\t\t\tthis.isGray = true;\n\t\t\t\t}\n\t\t\t\tthis.updateChannels();\n\t\t\t}\n\t\t},\n\t\tisGray() {\n\t\t\tthis.updateChannels();\n\t\t\tthis.emit();\n\t\t},\n\t\tchannels: {\n\t\t\tdeep: true,\n\t\t\thandler() {\n\t\t\t\tthis.emit();\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\tisValid(value) {\n\t\t\treturn (typeof value === 'number');\n\t\t},\n\t\tupdateChannels() {\n\t\t\tthis.channels = this.bands\n\t\t\t\t.slice(0, this.isGray ? 1 : 3)\n\t\t\t\t.map(band => Object.assign({}, band));\n\t\t\t// If only two channels are available, add a third one so that we have enough for RGB\n\t\t\t// If we only have one channel it is grayscale\n\t\t\tif (this.channels.length === 2) {\n\t\t\t\tthis.channels.push(Object.assign({}, this.channels[1]));\n\t\t\t}\n\t\t},\n\t\temit() {\n\t\t\tif (this.channels.filter(c => this.isValid(c.min) && this.isValid(c.max)).length > 0) {\n\t\t\t\tthis.$emit('update', 'channels', this.channels);\n\t\t\t}\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\">\n.ol-control.channels {\n\tbottom: calc(22px + 1em);\n    right: 8px;\n\tposition: absolute;\n\n\tinput {\n\t\tmax-width: 4em;\n\t}\n\tselect {\n\t\tmax-width: 10em;\n\t}\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChannelControl.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ChannelControl.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChannelControl.vue?vue&type=template&id=18ba9d03&\"\nimport script from \"./ChannelControl.vue?vue&type=script&lang=js&\"\nexport * from \"./ChannelControl.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ChannelControl.vue?vue&type=style&index=0&id=18ba9d03&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n/**\n * Data that can be used with a DataTile.  For increased browser compatibility, use\n * Uint8Array instead of Uint8ClampedArray where possible.\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} Data\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\nvar DataTile = /** @class */ (function (_super) {\n    __extends(DataTile, _super);\n    /**\n     * @param {Options} options Tile options.\n     */\n    function DataTile(options) {\n        var _this = this;\n        var state = TileState.IDLE;\n        _this = _super.call(this, options.tileCoord, state, {\n            transition: options.transition,\n            interpolate: options.interpolate,\n        }) || this;\n        /**\n         * @type {function(): Promise<Data>}\n         * @private\n         */\n        _this.loader_ = options.loader;\n        /**\n         * @type {Data}\n         * @private\n         */\n        _this.data_ = null;\n        /**\n         * @type {Error}\n         * @private\n         */\n        _this.error_ = null;\n        /**\n         * @type {import('./size.js').Size}\n         * @private\n         */\n        _this.size_ = options.size || [256, 256];\n        return _this;\n    }\n    /**\n     * Get the tile size.\n     * @return {import('./size.js').Size} Tile size.\n     */\n    DataTile.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the data for the tile.\n     * @return {Data} Tile data.\n     * @api\n     */\n    DataTile.prototype.getData = function () {\n        return this.data_;\n    };\n    /**\n     * Get any loading error.\n     * @return {Error} Loading error.\n     * @api\n     */\n    DataTile.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    DataTile.prototype.load = function () {\n        if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n            return;\n        }\n        this.state = TileState.LOADING;\n        this.changed();\n        var self = this;\n        this.loader_()\n            .then(function (data) {\n            self.data_ = data;\n            self.state = TileState.LOADED;\n            self.changed();\n        })\n            .catch(function (error) {\n            self.error_ = error;\n            self.state = TileState.ERROR;\n            self.changed();\n        });\n    };\n    return DataTile;\n}(Tile));\nexport default DataTile;\n//# sourceMappingURL=DataTile.js.map","/**\n * @module ol/webgl/TileTexture\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport DataTile from '../DataTile.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport { ARRAY_BUFFER, STATIC_DRAW } from '../webgl.js';\nimport { toSize } from '../size.js';\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n    var resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n    bindAndConfigure(gl, texture, interpolate);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").Data} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(helper, texture, data, size, bandCount, interpolate) {\n    var gl = helper.getGL();\n    var textureType;\n    var canInterpolate;\n    if (data instanceof Float32Array) {\n        textureType = gl.FLOAT;\n        helper.getExtension('OES_texture_float');\n        var extension = helper.getExtension('OES_texture_float_linear');\n        canInterpolate = extension !== null;\n    }\n    else {\n        textureType = gl.UNSIGNED_BYTE;\n        canInterpolate = true;\n    }\n    bindAndConfigure(gl, texture, interpolate && canInterpolate);\n    var bytesPerRow = data.byteLength / size[1];\n    var unpackAlignment = 1;\n    if (bytesPerRow % 8 === 0) {\n        unpackAlignment = 8;\n    }\n    else if (bytesPerRow % 4 === 0) {\n        unpackAlignment = 4;\n    }\n    else if (bytesPerRow % 2 === 0) {\n        unpackAlignment = 2;\n    }\n    var format;\n    switch (bandCount) {\n        case 1: {\n            format = gl.LUMINANCE;\n            break;\n        }\n        case 2: {\n            format = gl.LUMINANCE_ALPHA;\n            break;\n        }\n        case 3: {\n            format = gl.RGB;\n            break;\n        }\n        case 4: {\n            format = gl.RGBA;\n            break;\n        }\n        default: {\n            throw new Error(\"Unsupported number of bands: \".concat(bandCount));\n        }\n    }\n    var oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n    gl.texImage2D(gl.TEXTURE_2D, 0, format, size[0], size[1], 0, format, textureType, data);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar pixelContext = null;\nfunction createPixelContext() {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    pixelContext = canvas.getContext('2d');\n}\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n/**\n * @typedef {Object} Options\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\nvar TileTexture = /** @class */ (function (_super) {\n    __extends(TileTexture, _super);\n    /**\n     * @param {Options} options The tile texture options.\n     */\n    function TileTexture(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {TileType}\n         */\n        _this.tile;\n        /**\n         * @type {Array<WebGLTexture>}\n         */\n        _this.textures = [];\n        _this.handleTileChange_ = _this.handleTileChange_.bind(_this);\n        /**\n         * @type {import(\"../size.js\").Size}\n         * @private\n         */\n        _this.renderSize_ = toSize(options.grid.getTileSize(options.tile.tileCoord[0]));\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.gutter_ = options.gutter || 0;\n        /**\n         * @type {number}\n         */\n        _this.bandCount = NaN;\n        /**\n         * @type {import(\"../webgl/Helper.js\").default}\n         * @private\n         */\n        _this.helper_ = options.helper;\n        var coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n        coords.fromArray([\n            0,\n            1,\n            1,\n            1,\n            1,\n            0,\n            0,\n            0,\n        ]);\n        _this.helper_.flushBufferData(coords);\n        /**\n         * @type {WebGLArrayBuffer}\n         */\n        _this.coords = coords;\n        _this.setTile(options.tile);\n        return _this;\n    }\n    /**\n     * @param {TileType} tile Tile.\n     */\n    TileTexture.prototype.setTile = function (tile) {\n        if (tile !== this.tile) {\n            if (this.tile) {\n                this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n            }\n            this.tile = tile;\n            this.textures.length = 0;\n            this.loaded = tile.getState() === TileState.LOADED;\n            if (this.loaded) {\n                this.uploadTile_();\n            }\n            else {\n                if (tile instanceof ImageTile) {\n                    var image = tile.getImage();\n                    if (image instanceof Image && !image.crossOrigin) {\n                        image.crossOrigin = 'anonymous';\n                    }\n                }\n                tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n            }\n        }\n    };\n    TileTexture.prototype.uploadTile_ = function () {\n        var helper = this.helper_;\n        var gl = helper.getGL();\n        var tile = this.tile;\n        if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            this.bandCount = 4;\n            uploadImageTexture(gl, texture, tile.getImage(), tile.interpolate);\n            return;\n        }\n        var sourceTileSize = tile.getSize();\n        var pixelSize = [\n            sourceTileSize[0] + 2 * this.gutter_,\n            sourceTileSize[1] + 2 * this.gutter_,\n        ];\n        var data = tile.getData();\n        var isFloat = data instanceof Float32Array;\n        var pixelCount = pixelSize[0] * pixelSize[1];\n        var DataType = isFloat ? Float32Array : Uint8Array;\n        var bytesPerElement = DataType.BYTES_PER_ELEMENT;\n        var bytesPerRow = data.byteLength / pixelSize[1];\n        this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n        var textureCount = Math.ceil(this.bandCount / 4);\n        if (textureCount === 1) {\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            uploadDataTexture(helper, texture, data, pixelSize, this.bandCount, tile.interpolate);\n            return;\n        }\n        var textureDataArrays = new Array(textureCount);\n        for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            var bandCount = textureIndex < textureCount - 1 ? 4 : this.bandCount % 4;\n            textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n        }\n        var dataIndex = 0;\n        var rowOffset = 0;\n        var colCount = pixelSize[0] * this.bandCount;\n        for (var rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n            for (var colIndex = 0; colIndex < colCount; ++colIndex) {\n                var dataValue = data[rowOffset + colIndex];\n                var pixelIndex = Math.floor(dataIndex / this.bandCount);\n                var bandIndex = colIndex % this.bandCount;\n                var textureIndex = Math.floor(bandIndex / 4);\n                var textureData = textureDataArrays[textureIndex];\n                var bandCount = textureData.length / pixelCount;\n                var textureBandIndex = bandIndex % 4;\n                textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n                ++dataIndex;\n            }\n            rowOffset += bytesPerRow / bytesPerElement;\n        }\n        for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n            var texture = this.textures[textureIndex];\n            var textureData = textureDataArrays[textureIndex];\n            var bandCount = textureData.length / pixelCount;\n            uploadDataTexture(helper, texture, textureData, pixelSize, bandCount, tile.interpolate);\n        }\n    };\n    TileTexture.prototype.handleTileChange_ = function () {\n        if (this.tile.getState() === TileState.LOADED) {\n            this.loaded = true;\n            this.uploadTile_();\n            this.dispatchEvent(EventType.CHANGE);\n        }\n    };\n    TileTexture.prototype.disposeInternal = function () {\n        var gl = this.helper_.getGL();\n        this.helper_.deleteBuffer(this.coords);\n        for (var i = 0; i < this.textures.length; ++i) {\n            gl.deleteTexture(this.textures[i]);\n        }\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n    };\n    /**\n     * Get data for a pixel.  If the tile is not loaded, null is returned.\n     * @param {number} renderCol The column index (in rendered tile space).\n     * @param {number} renderRow The row index (in rendered tile space).\n     * @return {import(\"../DataTile.js\").Data|null} The data.\n     */\n    TileTexture.prototype.getPixelData = function (renderCol, renderRow) {\n        if (!this.loaded) {\n            return null;\n        }\n        var renderWidth = this.renderSize_[0];\n        var renderHeight = this.renderSize_[1];\n        var gutter = this.gutter_;\n        if (this.tile instanceof DataTile) {\n            var sourceSize = this.tile.getSize();\n            var sourceWidthWithoutGutter_1 = sourceSize[0];\n            var sourceHeightWithoutGutter_1 = sourceSize[1];\n            var sourceWidth_1 = sourceWidthWithoutGutter_1 + 2 * gutter;\n            var sourceHeight_1 = sourceHeightWithoutGutter_1 + 2 * gutter;\n            var sourceCol_1 = gutter +\n                Math.floor(sourceWidthWithoutGutter_1 * (renderCol / renderWidth));\n            var sourceRow_1 = gutter +\n                Math.floor(sourceHeightWithoutGutter_1 * (renderRow / renderHeight));\n            var data_1 = this.tile.getData();\n            if (data_1 instanceof DataView) {\n                var bytesPerPixel = data_1.byteLength / (sourceWidth_1 * sourceHeight_1);\n                var offset_1 = bytesPerPixel * (sourceRow_1 * sourceWidth_1 + sourceCol_1);\n                var buffer = data_1.buffer.slice(offset_1, offset_1 + bytesPerPixel);\n                return new DataView(buffer);\n            }\n            var offset = this.bandCount * (sourceRow_1 * sourceWidth_1 + sourceCol_1);\n            return data_1.slice(offset, offset + this.bandCount);\n        }\n        if (!pixelContext) {\n            createPixelContext();\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var image = this.tile.getImage();\n        var sourceWidth = image.width;\n        var sourceHeight = image.height;\n        var sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n        var sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n        var sourceCol = gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n        var sourceRow = gutter +\n            Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n        var data;\n        try {\n            pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            pixelContext = null;\n            return null;\n        }\n        return data;\n    };\n    return TileTexture;\n}(EventTarget));\nexport default TileTexture;\n//# sourceMappingURL=TileTexture.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport { AttributeType } from '../../webgl/Helper.js';\nimport { ELEMENT_ARRAY_BUFFER, STATIC_DRAW } from '../../webgl.js';\nimport { apply as applyTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, translate as translateTransform, } from '../../transform.js';\nimport { boundingExtent, containsCoordinate, getIntersection, isEmpty, } from '../../extent.js';\nimport { create as createMat4, fromTransform as mat4FromTransform, } from '../../vec/mat4.js';\nimport { createOrUpdate as createTileCoord, getKey as getTileCoordKey, } from '../../tilecoord.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toSize } from '../../size.js';\nexport var Uniforms = {\n    TILE_TEXTURE_ARRAY: 'u_tileTextures',\n    TILE_TRANSFORM: 'u_tileTransform',\n    TRANSITION_ALPHA: 'u_transitionAlpha',\n    DEPTH: 'u_depth',\n    TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n    TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n    TEXTURE_RESOLUTION: 'u_textureResolution',\n    TEXTURE_ORIGIN_X: 'u_textureOriginX',\n    TEXTURE_ORIGIN_Y: 'u_textureOriginY',\n    RENDER_EXTENT: 'u_renderExtent',\n    RESOLUTION: 'u_resolution',\n    ZOOM: 'u_zoom',\n};\nexport var Attributes = {\n    TEXTURE_COORD: 'a_textureCoord',\n};\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nvar attributeDescriptions = [\n    {\n        name: Attributes.TEXTURE_COORD,\n        size: 2,\n        type: AttributeType.FLOAT,\n    },\n];\n/**\n * @type {Object<string, boolean>}\n */\nvar empty = {};\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n    return 2 * (1 - 1 / (z + 1)) - 1;\n}\n/**\n * Add a tile texture to the lookup.\n * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n * tile textures by zoom level.\n * @param {import(\"../../webgl/TileTexture.js\").default} tileTexture A tile texture.\n * @param {number} z The zoom level.\n */\nfunction addTileTextureToLookup(tileTexturesByZ, tileTexture, z) {\n    if (!(z in tileTexturesByZ)) {\n        tileTexturesByZ[z] = [];\n    }\n    tileTexturesByZ[z].push(tileTexture);\n}\n/**\n * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n    var layerState = frameState.layerStatesArray[frameState.layerIndex];\n    if (layerState.extent) {\n        extent = getIntersection(extent, fromUserExtent(layerState.extent, frameState.viewState.projection));\n    }\n    var source = /** @type {import(\"../../source/Tile.js\").default} */ (layerState.layer.getRenderSource());\n    if (!source.getWrapX()) {\n        var gridExtent = source\n            .getTileGridForProjection(frameState.viewState.projection)\n            .getExtent();\n        if (gridExtent) {\n            extent = getIntersection(extent, gridExtent);\n        }\n    }\n    return extent;\n}\nfunction getCacheKey(source, tileCoord) {\n    return \"\".concat(source.getKey(), \",\").concat(getTileCoordKey(tileCoord));\n}\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLLayerRenderer<LayerType>}\n * @api\n */\nvar WebGLTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLTileLayerRenderer, _super);\n    /**\n     * @param {LayerType} tileLayer Tile layer.\n     * @param {Options} options Options.\n     */\n    function WebGLTileLayerRenderer(tileLayer, options) {\n        var _this = _super.call(this, tileLayer, {\n            uniforms: options.uniforms,\n        }) || this;\n        /**\n         * The last call to `renderFrame` was completed with all tiles loaded\n         * @type {boolean}\n         */\n        _this.renderComplete = false;\n        /**\n         * This transform converts texture coordinates to screen coordinates.\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.tileTransform_ = createTransform();\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.tempMat4_ = createMat4();\n        /**\n         * @type {import(\"../../TileRange.js\").default}\n         * @private\n         */\n        _this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @type {import(\"../../tilecoord.js\").TileCoord}\n         * @private\n         */\n        _this.tempTileCoord_ = createTileCoord(0, 0, 0);\n        /**\n         * @type {import(\"../../size.js\").Size}\n         * @private\n         */\n        _this.tempSize_ = [0, 0];\n        /**\n         * @type {WebGLProgram}\n         * @private\n         */\n        _this.program_;\n        /**\n         * @private\n         */\n        _this.vertexShader_ = options.vertexShader;\n        /**\n         * @private\n         */\n        _this.fragmentShader_ = options.fragmentShader;\n        /**\n         * Tiles are rendered as a quad with the following structure:\n         *\n         *  [P3]---------[P2]\n         *   |`           |\n         *   |  `     B   |\n         *   |    `       |\n         *   |      `     |\n         *   |   A    `   |\n         *   |          ` |\n         *  [P0]---------[P1]\n         *\n         * Triangle A: P0, P1, P3\n         * Triangle B: P1, P2, P3\n         *\n         * @private\n         */\n        _this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n        _this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n        var cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n        /**\n         * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../webgl/TileTexture.js\").default>}\n         * @private\n         */\n        _this.tileTextureCache_ = new LRUCache(cacheSize);\n        /**\n         * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n         * @private\n         */\n        _this.paletteTextures_ = options.paletteTextures || [];\n        /**\n         * @private\n         * @type {import(\"../../PluggableMap.js\").FrameState|null}\n         */\n        _this.frameState_ = null;\n        return _this;\n    }\n    /**\n     * @param {Options} options Options.\n     */\n    WebGLTileLayerRenderer.prototype.reset = function (options) {\n        _super.prototype.reset.call(this, {\n            uniforms: options.uniforms,\n        });\n        this.vertexShader_ = options.vertexShader;\n        this.fragmentShader_ = options.fragmentShader;\n        this.paletteTextures_ = options.paletteTextures || [];\n        if (this.helper) {\n            this.program_ = this.helper.getProgram(this.fragmentShader_, this.vertexShader_);\n        }\n    };\n    WebGLTileLayerRenderer.prototype.afterHelperCreated = function () {\n        this.program_ = this.helper.getProgram(this.fragmentShader_, this.vertexShader_);\n        this.helper.flushBufferData(this.indices_);\n    };\n    /**\n     * @param {import(\"../../webgl/TileTexture\").TileType} tile Tile.\n     * @return {boolean} Tile is drawable.\n     * @private\n     */\n    WebGLTileLayerRenderer.prototype.isDrawableTile_ = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * Determine whether renderFrame should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    WebGLTileLayerRenderer.prototype.prepareFrameInternal = function (frameState) {\n        var layer = this.getLayer();\n        var source = layer.getRenderSource();\n        if (!source) {\n            return false;\n        }\n        if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n            return false;\n        }\n        return source.getState() === 'ready';\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n     * @param {number} initialZ The zoom level.\n     * @param {Object<number, Array<TileTexture>>} tileTexturesByZ The zoom level.\n     */\n    WebGLTileLayerRenderer.prototype.enqueueTiles = function (frameState, extent, initialZ, tileTexturesByZ) {\n        var viewState = frameState.viewState;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getRenderSource();\n        var tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n        var gutter = tileSource.getGutterForProjection(viewState.projection);\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileTextureCache = this.tileTextureCache_;\n        var minZ = Math.max(initialZ - tileLayer.getPreload(), tileGrid.getMinZoom(), tileLayer.getMinZoom());\n        for (var z = initialZ; z >= minZ; --z) {\n            var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, this.tempTileRange_);\n            var tileResolution = tileGrid.getResolution(z);\n            for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    var tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n                    var cacheKey = getCacheKey(tileSource, tileCoord);\n                    /** @type {TileTexture} */\n                    var tileTexture = void 0;\n                    /** @type {import(\"../../webgl/TileTexture\").TileType} */\n                    var tile = void 0;\n                    if (tileTextureCache.containsKey(cacheKey)) {\n                        tileTexture = tileTextureCache.get(cacheKey);\n                        tile = tileTexture.tile;\n                    }\n                    if (!tileTexture || tileTexture.tile.key !== tileSource.getKey()) {\n                        tile = tileSource.getTile(z, x, y, frameState.pixelRatio, viewState.projection);\n                        if (!tileTexture) {\n                            tileTexture = new TileTexture({\n                                tile: tile,\n                                grid: tileGrid,\n                                helper: this.helper,\n                                gutter: gutter,\n                            });\n                            tileTextureCache.set(cacheKey, tileTexture);\n                        }\n                        else {\n                            if (this.isDrawableTile_(tile)) {\n                                tileTexture.setTile(tile);\n                            }\n                            else {\n                                var interimTile = \n                                /** @type {import(\"../../webgl/TileTexture\").TileType} */ (tile.getInterimTile());\n                                tileTexture.setTile(interimTile);\n                            }\n                        }\n                    }\n                    addTileTextureToLookup(tileTexturesByZ, tileTexture, z);\n                    var tileQueueKey = tile.getKey();\n                    wantedTiles[tileQueueKey] = true;\n                    if (tile.getState() === TileState.IDLE) {\n                        if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n                            frameState.tileQueue.enqueue([\n                                tile,\n                                tileSourceKey,\n                                tileGrid.getTileCoordCenter(tileCoord),\n                                tileResolution,\n                            ]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    WebGLTileLayerRenderer.prototype.renderFrame = function (frameState) {\n        this.frameState_ = frameState;\n        this.renderComplete = true;\n        var gl = this.helper.getGL();\n        this.preRender(gl, frameState);\n        var viewState = frameState.viewState;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getRenderSource();\n        var tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n        var gutter = tileSource.getGutterForProjection(viewState.projection);\n        var extent = getRenderExtent(frameState, frameState.extent);\n        var z = tileGrid.getZForResolution(viewState.resolution, tileSource.zDirection);\n        /**\n         * @type {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>}\n         */\n        var tileTexturesByZ = {};\n        if (frameState.nextExtent) {\n            var targetZ = tileGrid.getZForResolution(viewState.nextResolution, tileSource.zDirection);\n            var nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n            this.enqueueTiles(frameState, nextExtent, targetZ, tileTexturesByZ);\n        }\n        this.enqueueTiles(frameState, extent, z, tileTexturesByZ);\n        /**\n         * A lookup of alpha values for tiles at the target rendering resolution\n         * for tiles that are in transition.  If a tile coord key is absent from\n         * this lookup, the tile should be rendered at alpha 1.\n         * @type {Object<string, number>}\n         */\n        var alphaLookup = {};\n        var uid = getUid(this);\n        var time = frameState.time;\n        var blend = false;\n        // look for cached tiles to use if a target tile is not ready\n        var tileTextures = tileTexturesByZ[z];\n        for (var i = 0, ii = tileTextures.length; i < ii; ++i) {\n            var tileTexture = tileTextures[i];\n            var tile = tileTexture.tile;\n            var tileCoord = tile.tileCoord;\n            if (tileTexture.loaded) {\n                var alpha = tile.getAlpha(uid, time);\n                if (alpha === 1) {\n                    // no need to look for alt tiles\n                    tile.endTransition(uid);\n                    continue;\n                }\n                blend = true;\n                var tileCoordKey = getTileCoordKey(tileCoord);\n                alphaLookup[tileCoordKey] = alpha;\n            }\n            this.renderComplete = false;\n            // first look for child tiles (at z + 1)\n            var coveredByChildren = this.findAltTiles_(tileGrid, tileCoord, z + 1, tileTexturesByZ);\n            if (coveredByChildren) {\n                continue;\n            }\n            // next look for parent tiles\n            var minZoom = tileGrid.getMinZoom();\n            for (var parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n                var coveredByParent = this.findAltTiles_(tileGrid, tileCoord, parentZ, tileTexturesByZ);\n                if (coveredByParent) {\n                    break;\n                }\n            }\n        }\n        this.helper.useProgram(this.program_);\n        this.helper.prepareDraw(frameState, !blend);\n        var zs = Object.keys(tileTexturesByZ)\n            .map(Number)\n            .sort(numberSafeCompareFunction);\n        var centerX = viewState.center[0];\n        var centerY = viewState.center[1];\n        for (var j = 0, jj = zs.length; j < jj; ++j) {\n            var tileZ = zs[j];\n            var tileResolution = tileGrid.getResolution(tileZ);\n            var tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n            var tileOrigin = tileGrid.getOrigin(tileZ);\n            var tileWidthWithGutter = tileSize[0] + 2 * gutter;\n            var tileHeightWithGutter = tileSize[1] + 2 * gutter;\n            var aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n            var centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n            var centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n            var tileScale = viewState.resolution / tileResolution;\n            var depth = depthForZ(tileZ);\n            var tileTextures_1 = tileTexturesByZ[tileZ];\n            for (var i = 0, ii = tileTextures_1.length; i < ii; ++i) {\n                var tileTexture = tileTextures_1[i];\n                if (!tileTexture.loaded) {\n                    continue;\n                }\n                var tile = tileTexture.tile;\n                var tileCoord = tile.tileCoord;\n                var tileCoordKey = getTileCoordKey(tileCoord);\n                var tileCenterI = tileCoord[1];\n                var tileCenterJ = tileCoord[2];\n                resetTransform(this.tileTransform_);\n                scaleTransform(this.tileTransform_, 2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter), -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter));\n                rotateTransform(this.tileTransform_, viewState.rotation);\n                scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n                translateTransform(this.tileTransform_, (tileSize[0] * (tileCenterI - centerI) - gutter) /\n                    tileWidthWithGutter, (tileSize[1] * (tileCenterJ - centerJ) - gutter) /\n                    tileHeightWithGutter);\n                this.helper.setUniformMatrixValue(Uniforms.TILE_TRANSFORM, mat4FromTransform(this.tempMat4_, this.tileTransform_));\n                this.helper.bindBuffer(tileTexture.coords);\n                this.helper.bindBuffer(this.indices_);\n                this.helper.enableAttributes(attributeDescriptions);\n                var textureSlot = 0;\n                while (textureSlot < tileTexture.textures.length) {\n                    var textureProperty = 'TEXTURE' + textureSlot;\n                    var uniformName = \"\".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(textureSlot, \"]\");\n                    gl.activeTexture(gl[textureProperty]);\n                    gl.bindTexture(gl.TEXTURE_2D, tileTexture.textures[textureSlot]);\n                    gl.uniform1i(this.helper.getUniformLocation(uniformName), textureSlot);\n                    ++textureSlot;\n                }\n                for (var paletteIndex = 0; paletteIndex < this.paletteTextures_.length; ++paletteIndex) {\n                    var paletteTexture = this.paletteTextures_[paletteIndex];\n                    gl.activeTexture(gl['TEXTURE' + textureSlot]);\n                    var texture = paletteTexture.getTexture(gl);\n                    gl.bindTexture(gl.TEXTURE_2D, texture);\n                    gl.uniform1i(this.helper.getUniformLocation(paletteTexture.name), textureSlot);\n                    ++textureSlot;\n                }\n                var alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n                if (alpha < 1) {\n                    frameState.animate = true;\n                }\n                this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n                this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_WIDTH, tileWidthWithGutter);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_HEIGHT, tileHeightWithGutter);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_RESOLUTION, tileResolution);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_X, tileOrigin[0] +\n                    tileCenterI * tileSize[0] * tileResolution -\n                    gutter * tileResolution);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_Y, tileOrigin[1] -\n                    tileCenterJ * tileSize[1] * tileResolution +\n                    gutter * tileResolution);\n                var gutterExtent = extent;\n                if (gutter > 0) {\n                    gutterExtent = tileGrid.getTileCoordExtent(tileCoord);\n                    getIntersection(gutterExtent, extent, gutterExtent);\n                }\n                this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n                this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n                this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n                this.helper.drawElements(0, this.indices_.getSize());\n            }\n        }\n        this.helper.finalizeDraw(frameState, this.dispatchPreComposeEvent, this.dispatchPostComposeEvent);\n        var canvas = this.helper.getCanvas();\n        var tileTextureCache = this.tileTextureCache_;\n        while (tileTextureCache.canExpireCache()) {\n            var tileTexture = tileTextureCache.pop();\n            tileTexture.dispose();\n        }\n        // TODO: let the renderers manage their own cache instead of managing the source cache\n        /**\n         * Here we unconditionally expire the source cache since the renderer maintains\n         * its own cache.\n         * @param {import(\"../../PluggableMap.js\").default} map Map.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         */\n        var postRenderFunction = function (map, frameState) {\n            tileSource.expireCache(frameState.viewState.projection, empty);\n        };\n        frameState.postRenderFunctions.push(postRenderFunction);\n        this.postRender(gl, frameState);\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n     */\n    WebGLTileLayerRenderer.prototype.getData = function (pixel) {\n        var gl = this.helper.getGL();\n        if (!gl) {\n            return null;\n        }\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        var layer = this.getLayer();\n        var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        var viewState = frameState.viewState;\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            if (!containsCoordinate(fromUserExtent(layerExtent, viewState.projection), coordinate)) {\n                return null;\n            }\n        }\n        // determine last source suitable for rendering at coordinate\n        var sources = layer.getSources(boundingExtent([coordinate]), viewState.resolution);\n        var i, source, tileGrid;\n        for (i = sources.length - 1; i >= 0; --i) {\n            source = sources[i];\n            if (source.getState() === 'ready') {\n                tileGrid = source.getTileGridForProjection(viewState.projection);\n                if (source.getWrapX()) {\n                    break;\n                }\n                var gridExtent = tileGrid.getExtent();\n                if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n                    break;\n                }\n            }\n        }\n        if (i < 0) {\n            return null;\n        }\n        var tileTextureCache = this.tileTextureCache_;\n        for (var z = tileGrid.getZForResolution(viewState.resolution); z >= tileGrid.getMinZoom(); --z) {\n            var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n            var cacheKey = getCacheKey(source, tileCoord);\n            if (!tileTextureCache.containsKey(cacheKey)) {\n                continue;\n            }\n            var tileTexture = tileTextureCache.get(cacheKey);\n            if (!tileTexture.loaded) {\n                continue;\n            }\n            var tileOrigin = tileGrid.getOrigin(z);\n            var tileSize = toSize(tileGrid.getTileSize(z));\n            var tileResolution = tileGrid.getResolution(z);\n            var col = (coordinate[0] - tileOrigin[0]) / tileResolution -\n                tileCoord[1] * tileSize[0];\n            var row = (tileOrigin[1] - coordinate[1]) / tileResolution -\n                tileCoord[2] * tileSize[1];\n            return tileTexture.getPixelData(col, row);\n        }\n        return null;\n    };\n    /**\n     * Look for tiles covering the provided tile coordinate at an alternate\n     * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n     * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n     * @param {number} altZ The alternate zoom level.\n     * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n     * tile textures by zoom level.\n     * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n     * @private\n     */\n    WebGLTileLayerRenderer.prototype.findAltTiles_ = function (tileGrid, tileCoord, altZ, tileTexturesByZ) {\n        var tileRange = tileGrid.getTileRangeForTileCoordAndZ(tileCoord, altZ, this.tempTileRange_);\n        if (!tileRange) {\n            return false;\n        }\n        var covered = true;\n        var tileTextureCache = this.tileTextureCache_;\n        var source = this.getLayer().getRenderSource();\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var cacheKey = getCacheKey(source, [altZ, x, y]);\n                var loaded = false;\n                if (tileTextureCache.containsKey(cacheKey)) {\n                    var tileTexture = tileTextureCache.get(cacheKey);\n                    if (tileTexture.loaded) {\n                        addTileTextureToLookup(tileTexturesByZ, tileTexture, altZ);\n                        loaded = true;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    WebGLTileLayerRenderer.prototype.removeHelper = function () {\n        if (this.helper) {\n            var tileTextureCache = this.tileTextureCache_;\n            tileTextureCache.forEach(function (tileTexture) { return tileTexture.dispose(); });\n            tileTextureCache.clear();\n        }\n        _super.prototype.removeHelper.call(this);\n    };\n    /**\n     * Clean up.\n     */\n    WebGLTileLayerRenderer.prototype.disposeInternal = function () {\n        var helper = this.helper;\n        if (helper) {\n            var gl = helper.getGL();\n            gl.deleteProgram(this.program_);\n            delete this.program_;\n            helper.deleteBuffer(this.indices_);\n        }\n        _super.prototype.disposeInternal.call(this);\n        delete this.indices_;\n        delete this.tileTextureCache_;\n        delete this.frameState_;\n    };\n    return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\nexport default WebGLTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/webgl/PaletteTexture\n */\nvar PaletteTexture = /** @class */ (function () {\n    /**\n     * @param {string} name The name of the texture.\n     * @param {Uint8Array} data The texture data.\n     */\n    function PaletteTexture(name, data) {\n        this.name = name;\n        this.data = data;\n        /**\n         * @type {WebGLTexture}\n         * @private\n         */\n        this.texture_ = null;\n    }\n    /**\n     * @param {WebGLRenderingContext} gl Rendering context.\n     * @return {WebGLTexture} The texture.\n     */\n    PaletteTexture.prototype.getTexture = function (gl) {\n        if (!this.texture_) {\n            var texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.data.length / 4, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.data);\n            this.texture_ = texture;\n        }\n        return this.texture_;\n    };\n    return PaletteTexture;\n}());\nexport default PaletteTexture;\n//# sourceMappingURL=PaletteTexture.js.map","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport { Uniforms } from '../renderer/webgl/TileLayer.js';\nimport { asArray, fromString, isStringColor } from '../color.js';\nimport { log2 } from '../math.js';\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport var ValueTypes = {\n    NUMBER: 1,\n    STRING: 2,\n    COLOR: 4,\n    BOOLEAN: 8,\n    NUMBER_ARRAY: 16,\n    ANY: 31,\n    NONE: 0,\n};\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport var Operators = {};\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n    if (typeof value === 'number') {\n        return ValueTypes.NUMBER;\n    }\n    if (typeof value === 'boolean') {\n        return ValueTypes.BOOLEAN;\n    }\n    if (typeof value === 'string') {\n        if (isStringColor(value)) {\n            return ValueTypes.COLOR | ValueTypes.STRING;\n        }\n        return ValueTypes.STRING;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Unhandled value type: \".concat(JSON.stringify(value)));\n    }\n    var valueArr = /** @type {Array<*>} */ (value);\n    var onlyNumbers = valueArr.every(function (v) {\n        return typeof v === 'number';\n    });\n    if (onlyNumbers) {\n        if (valueArr.length === 3 || valueArr.length === 4) {\n            return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n        }\n        return ValueTypes.NUMBER_ARRAY;\n    }\n    if (typeof valueArr[0] !== 'string') {\n        throw new Error(\"Expected an expression operator but received: \".concat(JSON.stringify(valueArr)));\n    }\n    var operator = Operators[valueArr[0]];\n    if (operator === undefined) {\n        throw new Error(\"Unrecognized expression operator: \".concat(JSON.stringify(valueArr)));\n    }\n    return operator.getReturnType(valueArr.slice(1));\n}\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n    return log2(valueType) % 1 === 0;\n}\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n */\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n    var s = v.toString();\n    return s.indexOf('.') === -1 ? s + '.0' : s;\n}\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n    if (array.length < 2 || array.length > 4) {\n        throw new Error('`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.');\n    }\n    return \"vec\".concat(array.length, \"(\").concat(array.map(numberToGlsl).join(', '), \")\");\n}\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n    var array = asArray(color).slice();\n    if (array.length < 4) {\n        array.push(1);\n    }\n    return arrayToGlsl(array.map(function (c, i) {\n        return i < 3 ? c / 255 : c;\n    }));\n}\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n    if (context.stringLiteralsMap[string] === undefined) {\n        context.stringLiteralsMap[string] = Object.keys(context.stringLiteralsMap).length;\n    }\n    return context.stringLiteralsMap[string];\n}\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n    return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n    // operator\n    if (Array.isArray(value) && typeof value[0] === 'string') {\n        var operator = Operators[value[0]];\n        if (operator === undefined) {\n            throw new Error(\"Unrecognized expression operator: \".concat(JSON.stringify(value)));\n        }\n        return operator.toGlsl(context, value.slice(1), typeHint);\n    }\n    var valueType = getValueType(value);\n    if ((valueType & ValueTypes.NUMBER) > 0) {\n        return numberToGlsl(/** @type {number} */ (value));\n    }\n    if ((valueType & ValueTypes.BOOLEAN) > 0) {\n        return value.toString();\n    }\n    if ((valueType & ValueTypes.STRING) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.STRING)) {\n        return stringToGlsl(context, value.toString());\n    }\n    if ((valueType & ValueTypes.COLOR) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.COLOR)) {\n        return colorToGlsl(/** @type {Array<number> | string} */ (value));\n    }\n    if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n        return arrayToGlsl(/** @type {Array<number>} */ (value));\n    }\n    throw new Error(\"Unexpected expression \".concat(value, \" (expected type \").concat(typeHint, \")\"));\n}\nfunction assertNumber(value) {\n    if (!(getValueType(value) & ValueTypes.NUMBER)) {\n        throw new Error(\"A numeric value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertNumbers(values) {\n    for (var i = 0; i < values.length; i++) {\n        assertNumber(values[i]);\n    }\n}\nfunction assertString(value) {\n    if (!(getValueType(value) & ValueTypes.STRING)) {\n        throw new Error(\"A string value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertBoolean(value) {\n    if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n        throw new Error(\"A boolean value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertArgsCount(args, count) {\n    if (args.length !== count) {\n        throw new Error(\"Exactly \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsMinCount(args, count) {\n    if (args.length < count) {\n        throw new Error(\"At least \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsMaxCount(args, count) {\n    if (args.length > count) {\n        throw new Error(\"At most \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsEven(args) {\n    if (args.length % 2 !== 0) {\n        throw new Error(\"An even amount of arguments was expected, got \".concat(args, \" instead\"));\n    }\n}\nfunction assertArgsOdd(args) {\n    if (args.length % 2 === 0) {\n        throw new Error(\"An odd amount of arguments was expected, got \".concat(args, \" instead\"));\n    }\n}\nfunction assertUniqueInferredType(args, types) {\n    if (!isTypeUnique(types)) {\n        throw new Error(\"Could not infer only one type from the following expression: \".concat(JSON.stringify(args)));\n    }\n}\nOperators['get'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.attributes.indexOf(value) === -1) {\n            context.attributes.push(value);\n        }\n        var prefix = context.inFragmentShader ? 'v_' : 'a_';\n        return prefix + value;\n    },\n};\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n    return 'u_var_' + variableName;\n}\nOperators['var'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.variables.indexOf(value) === -1) {\n            context.variables.push(value);\n        }\n        return uniformNameForVariable(value);\n    },\n};\nexport var PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n// ['palette', index, colors]\nOperators['palette'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumber(args[0]);\n        var index = expressionToGlsl(context, args[0]);\n        var colors = args[1];\n        if (!Array.isArray(colors)) {\n            throw new Error('The second argument of palette must be an array');\n        }\n        var numColors = colors.length;\n        var palette = new Uint8Array(numColors * 4);\n        for (var i = 0; i < numColors; i++) {\n            var candidate = colors[i];\n            /**\n             * @type {import('../color.js').Color}\n             */\n            var color = void 0;\n            if (typeof candidate === 'string') {\n                color = fromString(candidate);\n            }\n            else {\n                if (!Array.isArray(candidate)) {\n                    throw new Error('The second argument of palette must be an array of strings or colors');\n                }\n                var length_1 = candidate.length;\n                if (length_1 === 4) {\n                    color = candidate;\n                }\n                else {\n                    if (length_1 !== 3) {\n                        throw new Error(\"Expected palette color to have 3 or 4 values, got \".concat(length_1));\n                    }\n                    color = [candidate[0], candidate[1], candidate[2], 1];\n                }\n            }\n            var offset = i * 4;\n            palette[offset] = color[0];\n            palette[offset + 1] = color[1];\n            palette[offset + 2] = color[2];\n            palette[offset + 3] = color[3] * 255;\n        }\n        if (!context.paletteTextures) {\n            context.paletteTextures = [];\n        }\n        var paletteName = \"\".concat(PALETTE_TEXTURE_ARRAY, \"[\").concat(context.paletteTextures.length, \"]\");\n        var paletteTexture = new PaletteTexture(paletteName, palette);\n        context.paletteTextures.push(paletteTexture);\n        return \"texture2D(\".concat(paletteName, \", vec2((\").concat(index, \" + 0.5) / \").concat(numColors, \".0, 0.5))\");\n    },\n};\nvar GET_BAND_VALUE_FUNC = 'getBandValue';\nOperators['band'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 1);\n        assertArgsMaxCount(args, 3);\n        var band = args[0];\n        if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n            var ifBlocks = '';\n            var bandCount = context.bandCount || 1;\n            for (var i = 0; i < bandCount; i++) {\n                var colorIndex = Math.floor(i / 4);\n                var bandIndex = i % 4;\n                if (bandIndex === bandCount - 1 && bandIndex === 1) {\n                    // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n                    bandIndex = 3;\n                }\n                var textureName = \"\".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(colorIndex, \"]\");\n                ifBlocks += \"\\n          if (band == \".concat(i + 1, \".0) {\\n            return texture2D(\").concat(textureName, \", v_textureCoord + vec2(dx, dy))[\").concat(bandIndex, \"];\\n          }\\n        \");\n            }\n            context.functions[GET_BAND_VALUE_FUNC] = \"\\n        float getBandValue(float band, float xOffset, float yOffset) {\\n          float dx = xOffset / \".concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n          float dy = yOffset / \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n          \").concat(ifBlocks, \"\\n        }\\n      \");\n        }\n        var bandExpression = expressionToGlsl(context, band);\n        var xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n        var yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n        return \"\".concat(GET_BAND_VALUE_FUNC, \"(\").concat(bandExpression, \", \").concat(xOffsetExpression, \", \").concat(yOffsetExpression, \")\");\n    },\n};\nOperators['time'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_time';\n    },\n};\nOperators['zoom'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_zoom';\n    },\n};\nOperators['resolution'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_resolution';\n    },\n};\nOperators['*'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" * \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['/'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" / \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['+'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" + \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['-'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" - \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['clamp'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        return \"clamp(\".concat(expressionToGlsl(context, args[0]), \", \").concat(min, \", \").concat(max, \")\");\n    },\n};\nOperators['%'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"mod(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['^'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"pow(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['abs'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"abs(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['floor'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"floor(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['round'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"floor(\".concat(expressionToGlsl(context, args[0]), \" + 0.5)\");\n    },\n};\nOperators['ceil'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"ceil(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['sin'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"sin(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['cos'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"cos(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['atan'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 1);\n        assertArgsMaxCount(args, 2);\n        assertNumbers(args);\n        return args.length === 2\n            ? \"atan(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\")\n            : \"atan(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['>'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" > \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['>='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" >= \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['<'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" < \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['<='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" <= \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nfunction getEqualOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsCount(args, 2);\n            // find common type\n            var type = ValueTypes.ANY;\n            for (var i = 0; i < args.length; i++) {\n                type &= getValueType(args[i]);\n            }\n            if (type === ValueTypes.NONE) {\n                throw new Error(\"All arguments should be of compatible type, got \".concat(JSON.stringify(args), \" instead\"));\n            }\n            // Since it's not possible to have color types here, we can leave it out\n            // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n            type &= ~ValueTypes.COLOR;\n            return \"(\".concat(expressionToGlsl(context, args[0], type), \" \").concat(operator, \" \").concat(expressionToGlsl(context, args[1], type), \")\");\n        },\n    };\n}\nOperators['=='] = getEqualOperator('==');\nOperators['!='] = getEqualOperator('!=');\nOperators['!'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertBoolean(args[0]);\n        return \"(!\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nfunction getDecisionOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsMinCount(args, 2);\n            for (var i = 0; i < args.length; i++) {\n                assertBoolean(args[i]);\n            }\n            var result = '';\n            result = args\n                .map(function (arg) { return expressionToGlsl(context, arg); })\n                .join(\" \".concat(operator, \" \"));\n            result = \"(\".concat(result, \")\");\n            return result;\n        },\n    };\n}\nOperators['all'] = getDecisionOperator('&&');\nOperators['any'] = getDecisionOperator('||');\nOperators['between'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        var value = expressionToGlsl(context, args[0]);\n        return \"(\".concat(value, \" >= \").concat(min, \" && \").concat(value, \" <= \").concat(max, \")\");\n    },\n};\nOperators['array'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER_ARRAY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 2);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var parsedArgs = args.map(function (val) {\n            return expressionToGlsl(context, val, ValueTypes.NUMBER);\n        });\n        return \"vec\".concat(args.length, \"(\").concat(parsedArgs.join(', '), \")\");\n    },\n};\nOperators['color'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 3);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var array = /** @type {Array<number>} */ (args);\n        if (args.length === 3) {\n            array.push(1);\n        }\n        var parsedArgs = args.map(function (val, i) {\n            return (expressionToGlsl(context, val, ValueTypes.NUMBER) +\n                (i < 3 ? ' / 255.0' : ''));\n        });\n        return \"vec\".concat(args.length, \"(\").concat(parsedArgs.join(', '), \")\");\n    },\n};\nOperators['interpolate'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.COLOR | ValueTypes.NUMBER;\n        for (var i = 3; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 6);\n        // validate interpolation type\n        var type = args[0];\n        var interpolation;\n        switch (type[0]) {\n            case 'linear':\n                interpolation = 1;\n                break;\n            case 'exponential':\n                interpolation = type[1];\n                break;\n            default:\n                interpolation = null;\n        }\n        if (!interpolation) {\n            throw new Error(\"Invalid interpolation type for \\\"interpolate\\\" operator, received: \".concat(JSON.stringify(type)));\n        }\n        // compute input/output types\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[1]);\n        var exponent = numberToGlsl(interpolation);\n        var result = '';\n        for (var i = 2; i < args.length - 2; i += 2) {\n            var stop1 = expressionToGlsl(context, args[i]);\n            var output1 = result || expressionToGlsl(context, args[i + 1], outputType);\n            var stop2 = expressionToGlsl(context, args[i + 2]);\n            var output2 = expressionToGlsl(context, args[i + 3], outputType);\n            result = \"mix(\".concat(output1, \", \").concat(output2, \", pow(clamp((\").concat(input, \" - \").concat(stop1, \") / (\").concat(stop2, \" - \").concat(stop1, \"), 0.0, 1.0), \").concat(exponent, \"))\");\n        }\n        return result;\n    },\n};\nOperators['match'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 2; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 4);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['match'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[0]);\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 1; i -= 2) {\n            var match = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\".concat(input, \" == \").concat(match, \" ? \").concat(output, \" : \").concat(result || fallback, \")\");\n        }\n        return result;\n    },\n};\nOperators['case'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 1; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsOdd(args);\n        assertArgsMinCount(args, 3);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['case'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        for (var i = 0; i < args.length - 1; i += 2) {\n            assertBoolean(args[i]);\n        }\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 0; i -= 2) {\n            var condition = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\".concat(condition, \" ? \").concat(output, \" : \").concat(result || fallback, \")\");\n        }\n        return result;\n    },\n};\n//# sourceMappingURL=expressions.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, { Attributes, Uniforms, } from '../renderer/webgl/TileLayer.js';\nimport { PALETTE_TEXTURE_ARRAY, ValueTypes, expressionToGlsl, getStringNumberEquivalent, uniformNameForVariable, } from '../style/expressions.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n    var vertexShader = \"\\n    attribute vec2 \".concat(Attributes.TEXTURE_COORD, \";\\n    uniform mat4 \").concat(Uniforms.TILE_TRANSFORM, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n    uniform float \").concat(Uniforms.TEXTURE_RESOLUTION, \";\\n    uniform float \").concat(Uniforms.TEXTURE_ORIGIN_X, \";\\n    uniform float \").concat(Uniforms.TEXTURE_ORIGIN_Y, \";\\n    uniform float \").concat(Uniforms.DEPTH, \";\\n\\n    varying vec2 v_textureCoord;\\n    varying vec2 v_mapCoord;\\n\\n    void main() {\\n      v_textureCoord = \").concat(Attributes.TEXTURE_COORD, \";\\n      v_mapCoord = vec2(\\n        \").concat(Uniforms.TEXTURE_ORIGIN_X, \" + \").concat(Uniforms.TEXTURE_RESOLUTION, \" * \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \" * v_textureCoord[0],\\n        \").concat(Uniforms.TEXTURE_ORIGIN_Y, \" - \").concat(Uniforms.TEXTURE_RESOLUTION, \" * \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \" * v_textureCoord[1]\\n      );\\n      gl_Position = \").concat(Uniforms.TILE_TRANSFORM, \" * vec4(\").concat(Attributes.TEXTURE_COORD, \", \").concat(Uniforms.DEPTH, \", 1.0);\\n    }\\n  \");\n    /**\n     * @type {import(\"../style/expressions.js\").ParsingContext}\n     */\n    var context = {\n        inFragmentShader: true,\n        variables: [],\n        attributes: [],\n        stringLiteralsMap: {},\n        functions: {},\n        bandCount: bandCount,\n    };\n    var pipeline = [];\n    if (style.color !== undefined) {\n        var color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n        pipeline.push(\"color = \".concat(color, \";\"));\n    }\n    if (style.contrast !== undefined) {\n        var contrast = expressionToGlsl(context, style.contrast, ValueTypes.NUMBER);\n        pipeline.push(\"color.rgb = clamp((\".concat(contrast, \" + 1.0) * color.rgb - (\").concat(contrast, \" / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n    }\n    if (style.exposure !== undefined) {\n        var exposure = expressionToGlsl(context, style.exposure, ValueTypes.NUMBER);\n        pipeline.push(\"color.rgb = clamp((\".concat(exposure, \" + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n    }\n    if (style.saturation !== undefined) {\n        var saturation = expressionToGlsl(context, style.saturation, ValueTypes.NUMBER);\n        pipeline.push(\"\\n      float saturation = \".concat(saturation, \" + 1.0;\\n      float sr = (1.0 - saturation) * 0.2126;\\n      float sg = (1.0 - saturation) * 0.7152;\\n      float sb = (1.0 - saturation) * 0.0722;\\n      mat3 saturationMatrix = mat3(\\n        sr + saturation, sr, sr,\\n        sg, sg + saturation, sg,\\n        sb, sb, sb + saturation\\n      );\\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n    \"));\n    }\n    if (style.gamma !== undefined) {\n        var gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n        pipeline.push(\"color.rgb = pow(color.rgb, vec3(1.0 / \".concat(gamma, \"));\"));\n    }\n    if (style.brightness !== undefined) {\n        var brightness = expressionToGlsl(context, style.brightness, ValueTypes.NUMBER);\n        pipeline.push(\"color.rgb = clamp(color.rgb + \".concat(brightness, \", vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n    }\n    /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n    var uniforms = {};\n    var numVariables = context.variables.length;\n    if (numVariables > 1 && !style.variables) {\n        throw new Error(\"Missing variables in style (expected \".concat(context.variables, \")\"));\n    }\n    var _loop_1 = function (i) {\n        var variableName = context.variables[i];\n        if (!(variableName in style.variables)) {\n            throw new Error(\"Missing '\".concat(variableName, \"' in style variables\"));\n        }\n        var uniformName = uniformNameForVariable(variableName);\n        uniforms[uniformName] = function () {\n            var value = style.variables[variableName];\n            if (typeof value === 'string') {\n                value = getStringNumberEquivalent(context, value);\n            }\n            return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n        };\n    };\n    for (var i = 0; i < numVariables; ++i) {\n        _loop_1(i);\n    }\n    var uniformDeclarations = Object.keys(uniforms).map(function (name) {\n        return \"uniform float \".concat(name, \";\");\n    });\n    var textureCount = Math.ceil(bandCount / 4);\n    uniformDeclarations.push(\"uniform sampler2D \".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(textureCount, \"];\"));\n    if (context.paletteTextures) {\n        uniformDeclarations.push(\"uniform sampler2D \".concat(PALETTE_TEXTURE_ARRAY, \"[\").concat(context.paletteTextures.length, \"];\"));\n    }\n    var functionDefintions = Object.keys(context.functions).map(function (name) {\n        return context.functions[name];\n    });\n    var fragmentShader = \"\\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\\n    precision highp float;\\n    #else\\n    precision mediump float;\\n    #endif\\n\\n    varying vec2 v_textureCoord;\\n    varying vec2 v_mapCoord;\\n    uniform vec4 \".concat(Uniforms.RENDER_EXTENT, \";\\n    uniform float \").concat(Uniforms.TRANSITION_ALPHA, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n    uniform float \").concat(Uniforms.RESOLUTION, \";\\n    uniform float \").concat(Uniforms.ZOOM, \";\\n\\n    \").concat(uniformDeclarations.join('\\n'), \"\\n\\n    \").concat(functionDefintions.join('\\n'), \"\\n\\n    void main() {\\n      if (\\n        v_mapCoord[0] < \").concat(Uniforms.RENDER_EXTENT, \"[0] ||\\n        v_mapCoord[1] < \").concat(Uniforms.RENDER_EXTENT, \"[1] ||\\n        v_mapCoord[0] > \").concat(Uniforms.RENDER_EXTENT, \"[2] ||\\n        v_mapCoord[1] > \").concat(Uniforms.RENDER_EXTENT, \"[3]\\n      ) {\\n        discard;\\n      }\\n\\n      vec4 color = texture2D(\").concat(Uniforms.TILE_TEXTURE_ARRAY, \"[0],  v_textureCoord);\\n\\n      \").concat(pipeline.join('\\n'), \"\\n\\n      if (color.a == 0.0) {\\n        discard;\\n      }\\n\\n      gl_FragColor = color;\\n      gl_FragColor.rgb *= gl_FragColor.a;\\n      gl_FragColor *= \").concat(Uniforms.TRANSITION_ALPHA, \";\\n    }\");\n    return {\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader,\n        uniforms: uniforms,\n        paletteTextures: context.paletteTextures,\n    };\n}\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar WebGLTileLayer = /** @class */ (function (_super) {\n    __extends(WebGLTileLayer, _super);\n    /**\n     * @param {Options} opt_options Tile layer options.\n     */\n    function WebGLTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? assign({}, opt_options) : {};\n        var style = options.style || {};\n        delete options.style;\n        var cacheSize = options.cacheSize;\n        delete options.cacheSize;\n        _this = _super.call(this, options) || this;\n        /**\n         * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n         * @private\n         */\n        _this.sources_ = options.sources;\n        /**\n         * @type {SourceType|null}\n         * @private\n         */\n        _this.renderedSource_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @type {Style}\n         * @private\n         */\n        _this.style_ = style;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.cacheSize_ = cacheSize;\n        /**\n         * @type {Object<string, (string|number)>}\n         * @private\n         */\n        _this.styleVariables_ = _this.style_.variables || {};\n        _this.addChangeListener(LayerProperty.SOURCE, _this.handleSourceUpdate_);\n        return _this;\n    }\n    /**\n     * Gets the sources for this layer, for a given extent and resolution.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<SourceType>} Sources.\n     */\n    WebGLTileLayer.prototype.getSources = function (extent, resolution) {\n        var source = this.getSource();\n        return this.sources_\n            ? typeof this.sources_ === 'function'\n                ? this.sources_(extent, resolution)\n                : this.sources_\n            : source\n                ? [source]\n                : [];\n    };\n    /**\n     * @return {SourceType} The source being rendered.\n     */\n    WebGLTileLayer.prototype.getRenderSource = function () {\n        return this.renderedSource_ || this.getSource();\n    };\n    /**\n     * @return {import(\"../source/Source.js\").State} Source state.\n     */\n    WebGLTileLayer.prototype.getSourceState = function () {\n        var source = this.getRenderSource();\n        return source ? source.getState() : 'undefined';\n    };\n    /**\n     * @private\n     */\n    WebGLTileLayer.prototype.handleSourceUpdate_ = function () {\n        if (this.getSource()) {\n            this.setStyle(this.style_);\n        }\n    };\n    /**\n     * @private\n     * @return {number} The number of source bands.\n     */\n    WebGLTileLayer.prototype.getSourceBandCount_ = function () {\n        var max = Number.MAX_SAFE_INTEGER;\n        var sources = this.getSources([-max, -max, max, max], max);\n        return sources && sources.length && 'bandCount' in sources[0]\n            ? sources[0].bandCount\n            : 4;\n    };\n    WebGLTileLayer.prototype.createRenderer = function () {\n        var parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n        return new WebGLTileLayerRenderer(this, {\n            vertexShader: parsedStyle.vertexShader,\n            fragmentShader: parsedStyle.fragmentShader,\n            uniforms: parsedStyle.uniforms,\n            cacheSize: this.cacheSize_,\n            paletteTextures: parsedStyle.paletteTextures,\n        });\n    };\n    /**\n     * @param {import(\"../PluggableMap\").FrameState} frameState Frame state.\n     * @param {Array<SourceType>} sources Sources.\n     * @return {HTMLElement} Canvas.\n     */\n    WebGLTileLayer.prototype.renderSources = function (frameState, sources) {\n        var layerRenderer = this.getRenderer();\n        var canvas;\n        for (var i = 0, ii = sources.length; i < ii; ++i) {\n            this.renderedSource_ = sources[i];\n            if (layerRenderer.prepareFrame(frameState)) {\n                canvas = layerRenderer.renderFrame(frameState);\n            }\n        }\n        return canvas;\n    };\n    /**\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    WebGLTileLayer.prototype.render = function (frameState, target) {\n        var _this = this;\n        this.rendered = true;\n        var viewState = frameState.viewState;\n        var sources = this.getSources(frameState.extent, viewState.resolution);\n        var ready = true;\n        var _loop_2 = function (i, ii) {\n            var source = sources[i];\n            var sourceState = source.getState();\n            if (sourceState == 'loading') {\n                var onChange_1 = function () {\n                    if (source.getState() == 'ready') {\n                        source.removeEventListener('change', onChange_1);\n                        _this.changed();\n                    }\n                };\n                source.addEventListener('change', onChange_1);\n            }\n            ready = ready && sourceState == 'ready';\n        };\n        for (var i = 0, ii = sources.length; i < ii; ++i) {\n            _loop_2(i, ii);\n        }\n        var canvas = this.renderSources(frameState, sources);\n        if (this.getRenderer().renderComplete && ready) {\n            // Fully rendered, done.\n            this.renderedResolution_ = viewState.resolution;\n            return canvas;\n        }\n        // Render sources from previously fully rendered frames\n        if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n            var altSources = this.getSources(frameState.extent, this.renderedResolution_).filter(function (source) { return !sources.includes(source); });\n            if (altSources.length > 0) {\n                return this.renderSources(frameState, altSources);\n            }\n        }\n        return canvas;\n    };\n    /**\n     * Update the layer style.  The `updateStyleVariables` function is a more efficient\n     * way to update layer rendering.  In cases where the whole style needs to be updated,\n     * this method may be called instead.  Note that calling this method will also replace\n     * any previously set variables, so the new style also needs to include new variables,\n     * if needed.\n     * @param {Style} style The new style.\n     */\n    WebGLTileLayer.prototype.setStyle = function (style) {\n        this.styleVariables_ = style.variables || {};\n        this.style_ = style;\n        var parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n        var renderer = this.getRenderer();\n        renderer.reset({\n            vertexShader: parsedStyle.vertexShader,\n            fragmentShader: parsedStyle.fragmentShader,\n            uniforms: parsedStyle.uniforms,\n            paletteTextures: parsedStyle.paletteTextures,\n        });\n        this.changed();\n    };\n    /**\n     * Update any variables used by the layer style and trigger a re-render.\n     * @param {Object<string, number>} variables Variables to update.\n     * @api\n     */\n    WebGLTileLayer.prototype.updateStyleVariables = function (variables) {\n        assign(this.styleVariables_, variables);\n        this.changed();\n    };\n    return WebGLTileLayer;\n}(BaseTileLayer));\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\nexport default WebGLTileLayer;\n//# sourceMappingURL=WebGLTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { assign } from '../obj.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\nimport { toPromise } from '../functions.js';\nimport { toSize } from '../size.js';\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {number} [tilePixelRatio] Deprecated.  To have tiles scaled, pass a `tileSize` representing\n * the source tile size and a `tileGrid` with the desired rendered tile size.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar DataTileSource = /** @class */ (function (_super) {\n    __extends(DataTileSource, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function DataTileSource(options) {\n        var _this = this;\n        var projection = options.projection === undefined ? 'EPSG:3857' : options.projection;\n        var tileGrid = options.tileGrid;\n        if (tileGrid === undefined && projection) {\n            tileGrid = createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        }\n        _this = _super.call(this, {\n            cacheSize: 0.1,\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: projection,\n            tileGrid: tileGrid,\n            opaque: options.opaque,\n            state: options.state,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: options.interpolate,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {import('../size.js').Size|null}\n         */\n        _this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n        if (!_this.tileSize_ && options.tilePixelRatio && tileGrid) {\n            var renderTileSize = toSize(tileGrid.getTileSize(0));\n            _this.tileSize_ = [\n                renderTileSize[0] * options.tilePixelRatio,\n                renderTileSize[1] * options.tilePixelRatio,\n            ];\n        }\n        /**\n         * @private\n         * @type {Array<import('../size.js').Size>|null}\n         */\n        _this.tileSizes_ = null;\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        /**\n         * @private\n         */\n        _this.loader_ = options.loader;\n        _this.handleTileChange_ = _this.handleTileChange_.bind(_this);\n        /**\n         * @type {number}\n         */\n        _this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n        return _this;\n    }\n    /**\n     * Set the source tile sizes.  The length of the array is expected to match the number of\n     * levels in the tile grid.\n     * @protected\n     * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n     */\n    DataTileSource.prototype.setTileSizes = function (tileSizes) {\n        this.tileSizes_ = tileSizes;\n    };\n    /**\n     * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n     * size.\n     * @protected\n     * @param {number} z Tile zoom level.\n     * @return {import('../size.js').Size} The source tile size.\n     */\n    DataTileSource.prototype.getTileSize = function (z) {\n        if (this.tileSizes_) {\n            return this.tileSizes_[z];\n        }\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        var tileGrid = this.getTileGrid();\n        return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    DataTileSource.prototype.getGutterForProjection = function (projection) {\n        return this.gutter_;\n    };\n    /**\n     * @param {Loader} loader The data loader.\n     * @protected\n     */\n    DataTileSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!DataTile} Tile.\n     */\n    DataTileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var size = this.getTileSize(z);\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return this.tileCache.get(tileCoordKey);\n        }\n        var sourceLoader = this.loader_;\n        function loader() {\n            return toPromise(function () {\n                return sourceLoader(z, x, y);\n            });\n        }\n        var options = assign({\n            tileCoord: [z, x, y],\n            loader: loader,\n            size: size,\n        }, this.tileOptions);\n        var tile = new DataTile(options);\n        tile.key = this.getKey();\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n        this.tileCache.set(tileCoordKey, tile);\n        return tile;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     */\n    DataTileSource.prototype.handleTileChange_ = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    return DataTileSource;\n}(TileSource));\nexport default DataTileSource;\n//# sourceMappingURL=DataTile.js.map","import { getDecoder } from './compression/index.js';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 2) : 2;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} [size] The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {function(): Worker} [createWorker] A function that creates the decoder worker.\n   * Defaults to a worker with all decoders that ship with geotiff.js. The `createWorker()`\n   * function is expected to return a `Worker` compatible with Web Workers. For code that\n   * runs in Node, [web-worker](https://www.npmjs.com/package/web-worker) is a good choice.\n   *\n   * A worker that uses a custom lzw decoder would look like this `my-custom-worker.js` file:\n   * ```js\n   * import { addDecoder, getDecoder } from 'geotiff';\n   * addDecoder(5, () => import ('./my-custom-lzw').then((m) => m.default));\n   * self.addEventListener('message', async (e) => {\n   *   const { id, fileDirectory, buffer } = e.data;\n   *   const decoder = await getDecoder(fileDirectory);\n   *   const decoded = await decoder.decode(fileDirectory, buffer);\n   *   self.postMessage({ decoded, id }, [decoded]);\n   * });\n   * ```\n   * The way the above code is built into a worker by the `createWorker()` function\n   * depends on the used bundler. For most bundlers, something like this will work:\n   * ```js\n   * function createWorker() {\n   *   return new Worker(new URL('./my-custom-worker.js', import.meta.url));\n   * }\n   * ```\n   */\n  constructor(size = defaultPoolSize, createWorker) {\n    this.workers = null;\n    this._awaitingDecoder = null;\n    this.size = size;\n    this.messageId = 0;\n    if (size) {\n      this._awaitingDecoder = createWorker ? Promise.resolve(createWorker) : new Promise((resolve) => {\n        import('./worker/decoder.js').then((module) => {\n          resolve(module.create);\n        });\n      });\n      this._awaitingDecoder.then((create) => {\n        this._awaitingDecoder = null;\n        this.workers = [];\n        for (let i = 0; i < size; i++) {\n          this.workers.push({ worker: create(), idle: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    if (this._awaitingDecoder) {\n      await this._awaitingDecoder;\n    }\n    return this.size === 0\n      ? getDecoder(fileDirectory).then((decoder) => decoder.decode(fileDirectory, buffer))\n      : new Promise((resolve) => {\n        const worker = this.workers.find((candidate) => candidate.idle)\n          || this.workers[Math.floor(Math.random() * this.size)];\n        worker.idle = false;\n        const id = this.messageId++;\n        const onMessage = (e) => {\n          if (e.data.id === id) {\n            worker.idle = true;\n            resolve(e.data.decoded);\n            worker.worker.removeEventListener('message', onMessage);\n          }\n        };\n        worker.worker.addEventListener('message', onMessage);\n        worker.worker.postMessage({ fileDirectory, buffer, id }, [buffer]);\n      });\n  }\n\n  destroy() {\n    if (this.workers) {\n      this.workers.forEach((worker) => {\n        worker.worker.terminate();\n      });\n      this.workers = null;\n    }\n  }\n}\n\nexport default Pool;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport { Pool, fromBlob as tiffFromBlob, fromUrl as tiffFromUrl, fromUrls as tiffFromUrls, } from 'geotiff';\nimport { Projection, get as getCachedProjection, toUserCoordinate, toUserExtent, } from '../proj.js';\nimport { clamp } from '../math.js';\nimport { getCenter, getIntersection } from '../extent.js';\nimport { fromCode as unitsFromCode } from '../proj/Units.js';\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\nvar STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nvar STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\nvar workerPool;\nfunction getWorkerPool() {\n    if (!workerPool) {\n        workerPool = new Pool();\n    }\n    return workerPool;\n}\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n    try {\n        return image.getBoundingBox();\n    }\n    catch (_) {\n        var fileDirectory = image.fileDirectory;\n        return [0, 0, fileDirectory.ImageWidth, fileDirectory.ImageLength];\n    }\n}\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n    try {\n        return image.getOrigin().slice(0, 2);\n    }\n    catch (_) {\n        return [0, image.fileDirectory.ImageLength];\n    }\n}\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n    try {\n        return image.getResolution(referenceImage);\n    }\n    catch (_) {\n        return [\n            referenceImage.fileDirectory.ImageWidth / image.fileDirectory.ImageWidth,\n            referenceImage.fileDirectory.ImageHeight /\n                image.fileDirectory.ImageHeight,\n        ];\n    }\n}\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n    var geoKeys = image.geoKeys;\n    if (!geoKeys) {\n        return null;\n    }\n    if (geoKeys.ProjectedCSTypeGeoKey) {\n        var code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n        var projection = getCachedProjection(code);\n        if (!projection) {\n            var units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n            if (units) {\n                projection = new Projection({\n                    code: code,\n                    units: units,\n                });\n            }\n        }\n        return projection;\n    }\n    if (geoKeys.GeographicTypeGeoKey) {\n        var code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n        var projection = getCachedProjection(code);\n        if (!projection) {\n            var units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n            if (units) {\n                projection = new Projection({\n                    code: code,\n                    units: units,\n                });\n            }\n        }\n        return projection;\n    }\n    return null;\n}\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n    return tiff.getImageCount().then(function (count) {\n        var requests = new Array(count);\n        for (var i = 0; i < count; ++i) {\n            requests[i] = tiff.getImage(i);\n        }\n        return Promise.all(requests);\n    });\n}\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n    var request;\n    if (source.blob) {\n        request = tiffFromBlob(source.blob);\n    }\n    else if (source.overviews) {\n        request = tiffFromUrls(source.url, source.overviews, options);\n    }\n    else {\n        request = tiffFromUrl(source.url, options);\n    }\n    return request.then(getImagesForTIFF);\n}\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n    if (Array.isArray(expected)) {\n        var length_1 = expected.length;\n        if (!Array.isArray(got) || length_1 != got.length) {\n            var error = new Error(message);\n            rejector(error);\n            throw error;\n        }\n        for (var i = 0; i < length_1; ++i) {\n            assertEqual(expected[i], got[i], tolerance, message, rejector);\n        }\n        return;\n    }\n    got = /** @type {number} */ (got);\n    if (Math.abs(expected - got) > tolerance * expected) {\n        throw new Error(message);\n    }\n}\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n    if (array instanceof Int8Array) {\n        return -128;\n    }\n    if (array instanceof Int16Array) {\n        return -32768;\n    }\n    if (array instanceof Int32Array) {\n        return -2147483648;\n    }\n    if (array instanceof Float32Array) {\n        return 1.2e-38;\n    }\n    return 0;\n}\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n    if (array instanceof Int8Array) {\n        return 127;\n    }\n    if (array instanceof Uint8Array) {\n        return 255;\n    }\n    if (array instanceof Uint8ClampedArray) {\n        return 255;\n    }\n    if (array instanceof Int16Array) {\n        return 32767;\n    }\n    if (array instanceof Uint16Array) {\n        return 65535;\n    }\n    if (array instanceof Int32Array) {\n        return 2147483647;\n    }\n    if (array instanceof Uint32Array) {\n        return 4294967295;\n    }\n    if (array instanceof Float32Array) {\n        return 3.4e38;\n    }\n    return 255;\n}\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {boolean} [convertToRGB = false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * @api\n */\nvar GeoTIFFSource = /** @class */ (function (_super) {\n    __extends(GeoTIFFSource, _super);\n    /**\n     * @param {Options} options Data tile options.\n     */\n    function GeoTIFFSource(options) {\n        var _this = _super.call(this, {\n            state: 'loading',\n            tileGrid: null,\n            projection: null,\n            opaque: options.opaque,\n            transition: options.transition,\n            interpolate: options.interpolate !== false,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @type {Array<SourceInfo>}\n         * @private\n         */\n        _this.sourceInfo_ = options.sources;\n        var numSources = _this.sourceInfo_.length;\n        /**\n         * @type {Object}\n         * @private\n         */\n        _this.sourceOptions_ = options.sourceOptions;\n        /**\n         * @type {Array<Array<GeoTIFFImage>>}\n         * @private\n         */\n        _this.sourceImagery_ = new Array(numSources);\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.resolutionFactors_ = new Array(numSources);\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.samplesPerPixel_;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.nodataValues_;\n        /**\n         * @type {Array<Array<GDALMetadata>>}\n         * @private\n         */\n        _this.metadata_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.normalize_ = options.normalize !== false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.addAlpha_ = false;\n        /**\n         * @type {Error}\n         * @private\n         */\n        _this.error_ = null;\n        /**\n         * @type {'readRasters' | 'readRGB'}\n         */\n        _this.readMethod_ = options.convertToRGB ? 'readRGB' : 'readRasters';\n        _this.setKey(_this.sourceInfo_.map(function (source) { return source.url; }).join(','));\n        var self = _this;\n        var requests = new Array(numSources);\n        for (var i = 0; i < numSources; ++i) {\n            requests[i] = getImagesForSource(_this.sourceInfo_[i], _this.sourceOptions_);\n        }\n        Promise.all(requests)\n            .then(function (sources) {\n            self.configure_(sources);\n        })\n            .catch(function (error) {\n            console.error(error); // eslint-disable-line no-console\n            self.error_ = error;\n            self.setState('error');\n        });\n        return _this;\n    }\n    /**\n     * @return {Error} A source loading error. When the source state is `error`, use this function\n     * to get more information about the error. To debug a faulty configuration, you may want to use\n     * a listener like\n     * ```js\n     * geotiffSource.on('change', () => {\n     *   if (geotiffSource.getState() === 'error') {\n     *     console.error(geotiffSource.getError());\n     *   }\n     * });\n     * ```\n     */\n    GeoTIFFSource.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n     * must have the same internal tiled structure.\n     * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n     * from a single GeoTIFF.\n     * @private\n     */\n    GeoTIFFSource.prototype.configure_ = function (sources) {\n        var extent;\n        var origin;\n        var commonRenderTileSizes;\n        var commonSourceTileSizes;\n        var resolutions;\n        var samplesPerPixel = new Array(sources.length);\n        var nodataValues = new Array(sources.length);\n        var metadata = new Array(sources.length);\n        var minZoom = 0;\n        var sourceCount = sources.length;\n        var _loop_1 = function (sourceIndex) {\n            var images = sources[sourceIndex];\n            var imageCount = images.length;\n            var sourceExtent = void 0;\n            var sourceOrigin = void 0;\n            var sourceTileSizes = new Array(imageCount);\n            var renderTileSizes = new Array(imageCount);\n            var sourceResolutions = new Array(imageCount);\n            nodataValues[sourceIndex] = new Array(imageCount);\n            metadata[sourceIndex] = new Array(imageCount);\n            for (var imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n                var image = images[imageIndex];\n                var nodataValue = image.getGDALNoData();\n                metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n                nodataValues[sourceIndex][imageIndex] = nodataValue;\n                var wantedSamples = this_1.sourceInfo_[sourceIndex].bands;\n                samplesPerPixel[sourceIndex] = wantedSamples\n                    ? wantedSamples.length\n                    : image.getSamplesPerPixel();\n                var level = imageCount - (imageIndex + 1);\n                if (!sourceExtent) {\n                    sourceExtent = getBoundingBox(image);\n                }\n                if (!sourceOrigin) {\n                    sourceOrigin = getOrigin(image);\n                }\n                var imageResolutions = getResolutions(image, images[0]);\n                sourceResolutions[level] = imageResolutions[0];\n                var sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n                sourceTileSizes[level] = sourceTileSize;\n                var aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n                renderTileSizes[level] = [\n                    sourceTileSize[0],\n                    sourceTileSize[1] / aspectRatio,\n                ];\n            }\n            if (!extent) {\n                extent = sourceExtent;\n            }\n            else {\n                getIntersection(extent, sourceExtent, extent);\n            }\n            if (!origin) {\n                origin = sourceOrigin;\n            }\n            else {\n                var message = \"Origin mismatch for source \".concat(sourceIndex, \", got [\").concat(sourceOrigin, \"] but expected [\").concat(origin, \"]\");\n                assertEqual(origin, sourceOrigin, 0, message, this_1.viewRejector);\n            }\n            if (!resolutions) {\n                resolutions = sourceResolutions;\n                this_1.resolutionFactors_[sourceIndex] = 1;\n            }\n            else {\n                if (resolutions.length - minZoom > sourceResolutions.length) {\n                    minZoom = resolutions.length - sourceResolutions.length;\n                }\n                var resolutionFactor_1 = resolutions[resolutions.length - 1] /\n                    sourceResolutions[sourceResolutions.length - 1];\n                this_1.resolutionFactors_[sourceIndex] = resolutionFactor_1;\n                var scaledSourceResolutions = sourceResolutions.map(function (resolution) { return (resolution *= resolutionFactor_1); });\n                var message = \"Resolution mismatch for source \".concat(sourceIndex, \", got [\").concat(scaledSourceResolutions, \"] but expected [\").concat(resolutions, \"]\");\n                assertEqual(resolutions.slice(minZoom, resolutions.length), scaledSourceResolutions, 0.02, message, this_1.viewRejector);\n            }\n            if (!commonRenderTileSizes) {\n                commonRenderTileSizes = renderTileSizes;\n            }\n            else {\n                assertEqual(commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length), renderTileSizes, 0.01, \"Tile size mismatch for source \".concat(sourceIndex), this_1.viewRejector);\n            }\n            if (!commonSourceTileSizes) {\n                commonSourceTileSizes = sourceTileSizes;\n            }\n            else {\n                assertEqual(commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length), sourceTileSizes, 0, \"Tile size mismatch for source \".concat(sourceIndex), this_1.viewRejector);\n            }\n            this_1.sourceImagery_[sourceIndex] = images.reverse();\n        };\n        var this_1 = this;\n        for (var sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n            _loop_1(sourceIndex);\n        }\n        for (var i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n            var sourceImagery = this.sourceImagery_[i];\n            while (sourceImagery.length < resolutions.length) {\n                sourceImagery.unshift(undefined);\n            }\n        }\n        if (!this.getProjection()) {\n            var firstSource = sources[0];\n            for (var i = firstSource.length - 1; i >= 0; --i) {\n                var image = firstSource[i];\n                var projection = getProjection(image);\n                if (projection) {\n                    this.projection = projection;\n                    break;\n                }\n            }\n        }\n        this.samplesPerPixel_ = samplesPerPixel;\n        this.nodataValues_ = nodataValues;\n        this.metadata_ = metadata;\n        // decide if we need to add an alpha band to handle nodata\n        outer: for (var sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n            // option 1: source is configured with a nodata value\n            if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n                this.addAlpha_ = true;\n                break;\n            }\n            var values = nodataValues[sourceIndex];\n            // option 2: check image metadata for limited bands\n            var bands = this.sourceInfo_[sourceIndex].bands;\n            if (bands) {\n                for (var i = 0; i < bands.length; ++i) {\n                    if (values[bands[i] - 1] !== null) {\n                        this.addAlpha_ = true;\n                        break outer;\n                    }\n                }\n                continue;\n            }\n            // option 3: check image metadata for all bands\n            for (var imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n                if (values[imageIndex] !== null) {\n                    this.addAlpha_ = true;\n                    break outer;\n                }\n            }\n        }\n        var additionalBands = this.addAlpha_ ? 1 : 0;\n        this.bandCount =\n            samplesPerPixel.reduce(function (accumulator, value) {\n                accumulator += value;\n                return accumulator;\n            }, 0) + additionalBands;\n        var tileGrid = new TileGrid({\n            extent: extent,\n            minZoom: minZoom,\n            origin: origin,\n            resolutions: resolutions,\n            tileSizes: commonRenderTileSizes,\n        });\n        this.tileGrid = tileGrid;\n        this.setTileSizes(commonSourceTileSizes);\n        this.setLoader(this.loadTile_.bind(this));\n        this.setState('ready');\n        this.viewResolver({\n            projection: this.projection,\n            resolutions: resolutions,\n            center: toUserCoordinate(getCenter(extent), this.projection),\n            extent: toUserExtent(extent, this.projection),\n            zoom: 0,\n        });\n    };\n    GeoTIFFSource.prototype.loadTile_ = function (z, x, y) {\n        var sourceTileSize = this.getTileSize(z);\n        var sourceCount = this.sourceImagery_.length;\n        var requests = new Array(sourceCount);\n        var addAlpha = this.addAlpha_;\n        var bandCount = this.bandCount;\n        var samplesPerPixel = this.samplesPerPixel_;\n        var nodataValues = this.nodataValues_;\n        var sourceInfo = this.sourceInfo_;\n        var _loop_2 = function (sourceIndex) {\n            var source = sourceInfo[sourceIndex];\n            var resolutionFactor = this_2.resolutionFactors_[sourceIndex];\n            var pixelBounds = [\n                Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n                Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n                Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n                Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n            ];\n            var image = this_2.sourceImagery_[sourceIndex][z];\n            var samples = void 0;\n            if (source.bands) {\n                samples = source.bands.map(function (bandNumber) {\n                    return bandNumber - 1;\n                });\n            }\n            /** @type {number|Array<number>} */\n            var fillValue = void 0;\n            if ('nodata' in source && source.nodata !== null) {\n                fillValue = source.nodata;\n            }\n            else {\n                if (!samples) {\n                    fillValue = nodataValues[sourceIndex];\n                }\n                else {\n                    fillValue = samples.map(function (sampleIndex) {\n                        return nodataValues[sourceIndex][sampleIndex];\n                    });\n                }\n            }\n            requests[sourceIndex] = image[this_2.readMethod_]({\n                window: pixelBounds,\n                width: sourceTileSize[0],\n                height: sourceTileSize[1],\n                samples: samples,\n                fillValue: fillValue,\n                pool: getWorkerPool(),\n                interleave: false,\n            });\n        };\n        var this_2 = this;\n        for (var sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n            _loop_2(sourceIndex);\n        }\n        var pixelCount = sourceTileSize[0] * sourceTileSize[1];\n        var dataLength = pixelCount * bandCount;\n        var normalize = this.normalize_;\n        var metadata = this.metadata_;\n        return Promise.all(requests)\n            .then(function (sourceSamples) {\n            /** @type {Uint8Array|Float32Array} */\n            var data;\n            if (normalize) {\n                data = new Uint8Array(dataLength);\n            }\n            else {\n                data = new Float32Array(dataLength);\n            }\n            var dataIndex = 0;\n            for (var pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n                var transparent = addAlpha;\n                for (var sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n                    var source = sourceInfo[sourceIndex];\n                    var min = source.min;\n                    var max = source.max;\n                    var gain = void 0, bias = void 0;\n                    if (normalize) {\n                        var stats = metadata[sourceIndex][0];\n                        if (min === undefined) {\n                            if (stats && STATISTICS_MINIMUM in stats) {\n                                min = parseFloat(stats[STATISTICS_MINIMUM]);\n                            }\n                            else {\n                                min = getMinForDataType(sourceSamples[sourceIndex][0]);\n                            }\n                        }\n                        if (max === undefined) {\n                            if (stats && STATISTICS_MAXIMUM in stats) {\n                                max = parseFloat(stats[STATISTICS_MAXIMUM]);\n                            }\n                            else {\n                                max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n                            }\n                        }\n                        gain = 255 / (max - min);\n                        bias = -min * gain;\n                    }\n                    for (var sampleIndex = 0; sampleIndex < samplesPerPixel[sourceIndex]; ++sampleIndex) {\n                        var sourceValue = sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n                        var value = void 0;\n                        if (normalize) {\n                            value = clamp(gain * sourceValue + bias, 0, 255);\n                        }\n                        else {\n                            value = sourceValue;\n                        }\n                        if (!addAlpha) {\n                            data[dataIndex] = value;\n                        }\n                        else {\n                            var nodata = source.nodata;\n                            if (nodata === undefined) {\n                                var bandIndex = void 0;\n                                if (source.bands) {\n                                    bandIndex = source.bands[sampleIndex] - 1;\n                                }\n                                else {\n                                    bandIndex = sampleIndex;\n                                }\n                                nodata = nodataValues[sourceIndex][bandIndex];\n                            }\n                            var nodataIsNaN = isNaN(nodata);\n                            if ((!nodataIsNaN && sourceValue !== nodata) ||\n                                (nodataIsNaN && !isNaN(sourceValue))) {\n                                transparent = false;\n                                data[dataIndex] = value;\n                            }\n                        }\n                        dataIndex++;\n                    }\n                }\n                if (addAlpha) {\n                    if (!transparent) {\n                        data[dataIndex] = 255;\n                    }\n                    dataIndex++;\n                }\n            }\n            return data;\n        })\n            .catch(function (error) {\n            // output then rethrow\n            console.error(error); // eslint-disable-line no-console\n            throw error;\n        });\n    };\n    return GeoTIFFSource;\n}(DataTile));\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\nexport default GeoTIFFSource;\n//# sourceMappingURL=GeoTIFF.js.map","<script>\nimport Utils from '../../utils.js';\n\nimport TextControl from './TextControl.vue';\nimport ChannelControl from './ChannelControl.vue';\n\nimport TileLayer from 'ol/layer/WebGLTile';\nimport GeoTIFF from 'ol/source/GeoTIFF';\n\nexport default {\n\tcomponents: {\n\t\tChannelControl,\n\t\tTextControl\n\t},\n\tdata() {\n\t\treturn {\n\t\t\ttextControlText: 'Pixel Value: -',\n\t\t\tlayer: null,\n\t\t\tsource: null,\n\t\t\tcolorMap: null,\n\t\t\tnoData: [],\n\t\t\tchannels: [],\n\t\t\tbands: []\n\t\t}\n\t},\n\tmethods: {\n\t\tgetBandVar(i) {\n\t\t\treturn ['band', ['var', `${i}band`]];\n\t\t},\n\t\tgetFormula(i) {\n\t\t\tlet min = ['var', `${i}min`];\n\t\t\tlet max = ['var', `${i}max`];\n\t\t\tlet x = this.getBandVar(i);\n\t\t\tlet scale = ['*', ['/', ['-', x, min], ['-', max, min]], 255]; // Linear scaling from min - max to 0 - 255\n\t\t\treturn ['clamp', scale, 0, 255]; // clamp values in case we get cales < 0 or > 255\n\t\t},\n\t\tgetNoDataFormula() {\n\t\t\tlet band = this.getBandVar('alpha');\n\t\t\t// https://github.com/openlayers/openlayers/issues/13588#issuecomment-1125317573\n\t\t\t// return ['clamp', band, 0, 1];\n\t\t\t// return ['/', band, 255];\n\t\t\treturn ['case', ['==', band, 0], 0, 1];\n\t\t},\n\t\tasync addGeoTiff(geotiff, title = \"GeoTiff\") {\n\t\t\tthis.bands = geotiff.getBands();\n\t\t\tthis.colorMap = geotiff.getColorMap();\n\t\t\tthis.noData = geotiff.getNoData();\n\n\t\t\tthis.source = new GeoTIFF({\n\t\t\t\tinterpolate: false,\n\t\t\t\tnormalize: false,\n\t\t\t\tconvertToRGB: geotiff.convertToRGB,\n\t\t\t\tsources: [\n\t\t\t\t\t{\n\t\t\t\t\t\turl: geotiff.getUrl(),\n\t\t\t\t\t\tnodata: this.noData[0] // OL only supports passing one no data value\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\n\t\t\tthis.layer = new TileLayer({\n\t\t\t\tid: geotiff.getUrl(),\n\t\t\t\ttitle,\n\t\t\t\tsource: this.source,\n\t\t\t\tcacheSize: 2048 // https://github.com/openlayers/openlayers/issues/13670\n\t\t\t});\n\t\t\tthis.layer.set('events', {\n\t\t\t\tpointermove: evt => {\n\t\t\t\t\tlet pixelData = this.layer.getData(evt.pixel);\n\t\t\t\t\tlet value = Utils.displayRGBA(pixelData, this.noData, this.noData.length > 0);\n\t\t\t\t\tlet valueText = `Pixel Value: ${value}`;\n\t\t\t\t\tlet coords = this.formatCoords(evt.coordinate);\n\t\t\t\t\tthis.textControlText = [valueText, `${valueText} @ ${coords}`];\n\t\t\t\t},\n\t\t\t\tclick: evt => {\n\t\t\t\t\tlet data = this.layer.getData(evt.pixel);\n\t\t\t\t\tif (!data) {\n\t\t\t\t\t\tthis.chart = null;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdata = Array.from(data).slice(0, this.bands.length);\n\t\t\t\t\tif (data.length < 2 || data.every(x => !isFinite(x))) {\n\t\t\t\t\t\tthis.chart = null;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet coords = this.formatCoords(evt.coordinate);\n\t\t\t\t\tlet label = `Coordinate: ${coords}`;\n\n\t\t\t\t\tlet datasets = [{ label, data }];\n\n\t\t\t\t\tthis.chart = {\n\t\t\t\t\t\tlabels: this.bands.map(band => String(band.name || band.id)),\n\t\t\t\t\t\tdatasets\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.addLayerToMap(this.layer);\n\n\t\t\tlet extent = geotiff.getExtent();\n\t\t\tif (extent) {\n\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions(10));\n\t\t\t}\n\n\t\t\t// Hack to get the initial style set.\n\t\t\t// Not sure yet why this needs a delay -> TODO\n\t\t\tawait new Promise(r => setTimeout(r, 1250));\n\t\t\tthis.setStyle();\n\n\t\t\treturn this.source;\n\t\t},\n\t\tformatCoords(coords) {\n\t\t\treturn coords.map(x => String(parseFloat(x.toFixed(6)))).join(', ');\n\t\t},\n\t\tupdateGeoTiffStyle(type, data) {\n\t\t\tswitch(type) {\n\t\t\t\tcase 'channels':\n\t\t\t\t\tthis.channels = data;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.setStyle();\n\t\t},\n\t\tsetStyle() {\n\t\t\tif (!this.layer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Compute variables\n\t\t\tlet variables = {};\n\t\t\tfor(let i in this.channels) {\n\t\t\t\tlet channel = this.channels[i];\n\t\t\t\tvariables[`${i}band`] = channel.id;\n\t\t\t\tvariables[`${i}min`] = channel.min;\n\t\t\t\tvariables[`${i}max`] = channel.max;\n\t\t\t}\n\t\t\tvariables.alphaband = this.bands.length + 1;\n\n\t\t\t// Create style\n\t\t\tlet color = [];\n\t\t\tif (this.colorMap) {\n\t\t\t\tcolor.push('palette');\n\t\t\t\tcolor.push(['band', 1]);\n\t\t\t\tcolor.push(this.colorMap);\n\t\t\t}\n\t\t\telse if (this.channels.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse if (this.channels.length === 1) {\n\t\t\t\tcolor.push('color');\n\t\t\t\tlet formula = this.getFormula(0);\n\t\t\t\tcolor.push(formula);\n\t\t\t\tcolor.push(formula);\n\t\t\t\tcolor.push(formula);\n\t\t\t\tif (this.noData.length > 0) {\n\t\t\t\t\tcolor.push(this.getNoDataFormula());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcolor.push('color');\n\t\t\t\tcolor.push(this.getFormula(0));\n\t\t\t\tcolor.push(this.getFormula(1));\n\t\t\t\tcolor.push(this.getFormula(2));\n\t\t\t\tif (this.noData.length > 0) {\n\t\t\t\t\tcolor.push(this.getNoDataFormula());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set style\n\t\t\tthis.layer.setStyle({variables, color});\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeoTiffMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GeoTiffMixin.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./GeoTiffMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./GeoTiffMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/format/XML\n */\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = /** @class */ (function () {\n    function XML() {\n    }\n    /**\n     * Read the source document.\n     *\n     * @param {Document|Element|string} source The XML source.\n     * @return {Object} An object representing the source.\n     * @api\n     */\n    XML.prototype.read = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromNode = function (node) { };\n    return XML;\n}());\nexport default XML;\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/xlink\n */\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n    return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n//# sourceMappingURL=xlink.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, getDocument } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, bool ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(getDocument().createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() +\n        '-' +\n        padNumber(date.getUTCMonth() + 1, 2) +\n        '-' +\n        padNumber(date.getUTCDate(), 2) +\n        'T' +\n        padNumber(date.getUTCHours(), 2) +\n        ':' +\n        padNumber(date.getUTCMinutes(), 2) +\n        ':' +\n        padNumber(date.getUTCSeconds(), 2) +\n        'Z';\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(getDocument().createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop, } from '../xml.js';\nimport { readHref } from './xlink.js';\nimport { readString } from './xsd.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\nvar OWS = /** @class */ (function (_super) {\n    __extends(OWS, _super);\n    function OWS() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    OWS.prototype.readFromNode = function (node) {\n        var owsObject = pushParseAndPop({}, PARSERS, node, []);\n        return owsObject ? owsObject : null;\n    };\n    return OWS;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined, // TODO\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Operation': readOperation,\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IndividualName': makeObjectPropertySetter(readString),\n    'PositionName': makeObjectPropertySetter(readString),\n    'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Abstract': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'Fees': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'ServiceTypeVersion': makeObjectPropertySetter(readString),\n    'ServiceType': makeObjectPropertySetter(readString),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ProviderName': makeObjectPropertySetter(readString),\n    'ProviderSite': makeObjectPropertySetter(readHref),\n    'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n    return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n    return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (!name) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'name': name }, CONSTRAINT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n    return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n    var href = readHref(node);\n    if (!href) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'href': href }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n    var name = node.getAttribute('name');\n    var value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n    if (!value) {\n        return undefined;\n    }\n    var object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    object[name] = value;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n    return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n    return readString(node);\n}\nexport default OWS;\n//# sourceMappingURL=OWS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport { boundingExtent } from '../extent.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop, } from '../xml.js';\nimport { readDecimal, readPositiveInteger, readString } from './xsd.js';\nimport { readHref } from './xlink.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents),\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /** @class */ (function (_super) {\n    __extends(WMTSCapabilities, _super);\n    function WMTSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {OWS}\n         * @private\n         */\n        _this.owsParser_ = new OWS();\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    WMTSCapabilities.prototype.readFromNode = function (node) {\n        var version = node.getAttribute('version');\n        if (version) {\n            version = version.trim();\n        }\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n        if (!WMTSCapabilityObject) {\n            return null;\n        }\n        WMTSCapabilityObject['version'] = version;\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n    };\n    return WMTSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n    'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n    'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n    'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!style) {\n        return undefined;\n    }\n    var isDefault = node.getAttribute('isDefault') === 'true';\n    style['isDefault'] = isDefault;\n    return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n    var format = node.getAttribute('format');\n    var template = node.getAttribute('template');\n    var resourceType = node.getAttribute('resourceType');\n    var resource = {};\n    if (format) {\n        resource['format'] = format;\n    }\n    if (template) {\n        resource['template'] = template;\n    }\n    if (resourceType) {\n        resource['resourceType'] = resourceType;\n    }\n    return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n    if (coordinates.length != 2) {\n        return undefined;\n    }\n    return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n    var legend = {};\n    legend['format'] = node.getAttribute('format');\n    legend['href'] = readHref(node);\n    return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n    var coordinates = readString(node).split(/\\s+/);\n    if (!coordinates || coordinates.length != 2) {\n        return undefined;\n    }\n    var x = +coordinates[0];\n    var y = +coordinates[1];\n    if (isNaN(x) || isNaN(y)) {\n        return undefined;\n    }\n    return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/tilegrid/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileGrid from './TileGrid.js';\nimport { find } from '../array.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /** @class */ (function (_super) {\n    __extends(WMTSTileGrid, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTSTileGrid(options) {\n        var _this = _super.call(this, {\n            extent: options.extent,\n            origin: options.origin,\n            origins: options.origins,\n            resolutions: options.resolutions,\n            tileSize: options.tileSize,\n            tileSizes: options.tileSizes,\n            sizes: options.sizes,\n        }) || this;\n        /**\n         * @private\n         * @type {!Array<string>}\n         */\n        _this.matrixIds_ = options.matrixIds;\n        return _this;\n    }\n    /**\n     * @param {number} z Z.\n     * @return {string} MatrixId..\n     */\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\n        return this.matrixIds_[z];\n    };\n    /**\n     * Get the list of matrix identifiers.\n     * @return {Array<string>} MatrixIds.\n     * @api\n     */\n    WMTSTileGrid.prototype.getMatrixIds = function () {\n        return this.matrixIds_;\n    };\n    return WMTSTileGrid;\n}(TileGrid));\nexport default WMTSTileGrid;\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [opt_extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [opt_matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n    /** @type {!Array<number>} */\n    var resolutions = [];\n    /** @type {!Array<string>} */\n    var matrixIds = [];\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n    var origins = [];\n    /** @type {!Array<number|import(\"../size.js\").Size>} */\n    var tileSizes = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var sizes = [];\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n    var supportedCRSPropName = 'SupportedCRS';\n    var matrixIdsPropName = 'TileMatrix';\n    var identifierPropName = 'Identifier';\n    var scaleDenominatorPropName = 'ScaleDenominator';\n    var topLeftCornerPropName = 'TopLeftCorner';\n    var tileWidthPropName = 'TileWidth';\n    var tileHeightPropName = 'TileHeight';\n    var code = matrixSet[supportedCRSPropName];\n    var projection = getProjection(code);\n    var metersPerUnit = projection.getMetersPerUnit();\n    // swap origin x and y coordinates if axis orientation is lat/long\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n    });\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\n        var matrixAvailable;\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\n        // TileMatrixSet from unavailable matrix levels.\n        if (matrixLimits.length > 0) {\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n                    return true;\n                }\n                // Fallback for tileMatrix identifiers that don't get prefixed\n                // by their tileMatrixSet identifiers.\n                if (elt[identifierPropName].indexOf(':') === -1) {\n                    return (matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n                        elt_ml[matrixIdsPropName]);\n                }\n                return false;\n            });\n        }\n        else {\n            matrixAvailable = true;\n        }\n        if (matrixAvailable) {\n            matrixIds.push(elt[identifierPropName]);\n            var resolution = (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n            var tileWidth = elt[tileWidthPropName];\n            var tileHeight = elt[tileHeightPropName];\n            if (switchOriginXY) {\n                origins.push([\n                    elt[topLeftCornerPropName][1],\n                    elt[topLeftCornerPropName][0],\n                ]);\n            }\n            else {\n                origins.push(elt[topLeftCornerPropName]);\n            }\n            resolutions.push(resolution);\n            tileSizes.push(tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]);\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n        }\n    });\n    return new WMTSTileGrid({\n        extent: opt_extent,\n        origins: origins,\n        resolutions: resolutions,\n        matrixIds: matrixIds,\n        tileSizes: tileSizes,\n        sizes: sizes,\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { appendParams } from '../uri.js';\nimport { assign } from '../obj.js';\nimport { containsExtent } from '../extent.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { createFromTileUrlFunctions, expandUrl } from '../tileurlfunction.js';\nimport { equivalent, get as getProjection, transformExtent } from '../proj.js';\nimport { find, findIndex, includes } from '../array.js';\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        // TODO: add support for TileMatrixLimits\n        var requestEncoding = options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ =\n            options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {RequestEncoding}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(_this.createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @param {Array<string>} urls URLs.\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {RequestEncoding} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    WMTS.prototype.createFromWMTSTemplate = function (template) {\n        var requestEncoding = this.requestEncoding_;\n        // context property names are lower case to allow for a case insensitive\n        // replacement as some services use different naming conventions\n        var context = {\n            'layer': this.layer_,\n            'style': this.style_,\n            'tilematrixset': this.matrixSet_,\n        };\n        if (requestEncoding == 'KVP') {\n            assign(context, {\n                'Service': 'WMTS',\n                'Request': 'GetTile',\n                'Version': this.version_,\n                'Format': this.format_,\n            });\n        }\n        // TODO: we may want to create our own appendParams function so that params\n        // order conforms to wmts spec guidance, and so that we can avoid to escape\n        // special template params\n        template =\n            requestEncoding == 'KVP'\n                ? appendParams(template, context)\n                : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n                });\n        var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n        var dimensions = this.dimensions_;\n        return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n                return undefined;\n            }\n            else {\n                var localContext_1 = {\n                    'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                    'TileCol': tileCoord[1],\n                    'TileRow': tileCoord[2],\n                };\n                assign(localContext_1, dimensions);\n                var url = template;\n                if (requestEncoding == 'KVP') {\n                    url = appendParams(url, localContext_1);\n                }\n                else {\n                    url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n                return url;\n            }\n        });\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = \n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = \n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wrapX = false;\n    var switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    var matrix = matrixSetObj.TileMatrix[0];\n    // create default matrixLimit\n    var selectedMatrixLimit = {\n        MinTileCol: 0,\n        MinTileRow: 0,\n        // subtract one to end up at tile top left\n        MaxTileCol: matrix.MatrixWidth - 1,\n        MaxTileRow: matrix.MatrixHeight - 1,\n    };\n    //in case of matrix limits, use matrix limits to calculate extent\n    if (matrixLimits) {\n        selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n        var m = find(matrixSetObj.TileMatrix, function (tileMatrixValue) {\n            return tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n                matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n                    selectedMatrixLimit.TileMatrix;\n        });\n        if (m) {\n            matrix = m;\n        }\n    }\n    var resolution = (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n    var origin = switchXY\n        ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n        : matrix.TopLeftCorner;\n    var tileSpanX = matrix.TileWidth * resolution;\n    var tileSpanY = matrix.TileHeight * resolution;\n    var matrixSetExtent = matrixSetObj['BoundingBox'];\n    if (matrixSetExtent && switchXY) {\n        matrixSetExtent = [\n            matrixSetExtent[1],\n            matrixSetExtent[0],\n            matrixSetExtent[3],\n            matrixSetExtent[2],\n        ];\n    }\n    var extent = [\n        origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n        // add one to get proper bottom/right coordinate\n        origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n        origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n        origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n    ];\n    if (matrixSetExtent !== undefined &&\n        !containsExtent(matrixSetExtent, extent)) {\n        var wgs84BoundingBox = l['WGS84BoundingBox'];\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        extent = matrixSetExtent;\n        if (wgs84BoundingBox) {\n            wrapX =\n                wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n                    wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n        }\n        else {\n            var wgs84MatrixSetExtent = transformExtent(matrixSetExtent, matrixSetObj['SupportedCRS'], 'EPSG:4326');\n            // Ignore slight deviation from the correct x limits\n            wrapX =\n                wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n                    wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap &&\n        'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === 'KVP') {\n                    if (includes(encodings, 'KVP')) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = 'KVP';\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = 'REST';\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin'],\n    };\n}\n//# sourceMappingURL=WMTS.js.map","/*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\r\nimport ol_ext_inherits from '../util/ext'\r\nimport ol_source_Vector from 'ol/source/Vector'\r\nimport ol_control_Control from 'ol/control/Control'\r\nimport ol_ext_element from '../util/element'\r\n\r\n/** Timeline control\r\n *\r\n * @constructor\r\n * @extends {ol.control.Control}\r\n * @fires select\r\n * @fires scroll\r\n * @fires collapse\r\n * @param {Object=} options Control options.\r\n *\t@param {String} options.className class of the control\r\n *\t@param {Array<ol.Feature>} options.features Features to show in the timeline\r\n *\t@param {ol.SourceImageOptions.vector} options.source class of the control\r\n *\t@param {Number} options.interval time interval length in ms or a text with a format d, h, mn, s (31 days = '31d'), default none\r\n *\t@param {String} options.maxWidth width of the time line in px, default 2000px\r\n *\t@param {String} options.minDate minimum date \r\n *\t@param {String} options.maxDate maximum date \r\n *\t@param {Number} options.minZoom Minimum zoom for the line, default .2\r\n *\t@param {Number} options.maxZoom Maximum zoom for the line, default 4\r\n *\t@param {boolean} options.zoomButton Are zoom buttons avaliable, default false\r\n *\t@param {function} options.getHTML a function that takes a feature and returns the html to display\r\n *\t@param {function} options.getFeatureDate a function that takes a feature and returns its date, default the date propertie\r\n *\t@param {function} options.endFeatureDate a function that takes a feature and returns its end date, default no end date\r\n *\t@param {String} options.graduation day|month to show month or day graduation, default show only years\r\n *\t@param {String} options.scrollTimeout Time in milliseconds to get a scroll event, default 15ms\r\n */\r\nvar ol_control_Timeline = function(options) {\r\n\r\n  var element = ol_ext_element.create('DIV', {\r\n    className: (options.className || '') + ' ol-timeline'\r\n      + (options.target ? '': ' ol-unselectable ol-control')\r\n      + (options.zoomButton ? ' ol-hasbutton':'')\r\n  });\r\n\r\n  // Initialize\r\n  ol_control_Control.call(this, {\r\n    element: element,\r\n    target: options.target\r\n  });\r\n\r\n  // Scroll div\r\n  this._scrollDiv = ol_ext_element.create('DIV', {\r\n    className: 'ol-scroll',\r\n    parent: this.element\r\n  });\r\n\r\n  // Add a button bar\r\n  this._buttons = ol_ext_element.create('DIV', {\r\n    className: 'ol-buttons',\r\n    parent: this.element\r\n  });\r\n  // Zoom buttons\r\n  if (options.zoomButton) {\r\n    // Zoom in\r\n    this.addButton({\r\n      className: 'ol-zoom-in',\r\n      handleClick: function(){\r\n        var zoom = this.get('zoom');\r\n        if (zoom>=1) {\r\n          zoom++;\r\n        } else {\r\n          zoom = Math.min(1, zoom + 0.1);\r\n        }\r\n        zoom = Math.round(zoom*100)/100;\r\n        this.refresh(zoom);\r\n      }.bind(this)\r\n    });\r\n    // Zoom out\r\n    this.addButton({\r\n      className: 'ol-zoom-out',\r\n      handleClick: function(){\r\n        var zoom = this.get('zoom');\r\n        if (zoom>1) {\r\n          zoom--;\r\n        } else {\r\n          zoom -= 0.1;\r\n        }\r\n        zoom = Math.round(zoom*100)/100;\r\n        this.refresh(zoom);\r\n      }.bind(this)\r\n    });\r\n  }\r\n\r\n  // Draw center date\r\n  this._intervalDiv = ol_ext_element.create('DIV', {\r\n    className: 'ol-center-date',\r\n    parent: this.element\r\n  });\r\n\r\n  // Remove selection\r\n  this.element.addEventListener('mouseover', function(){\r\n    if (this._select) this._select.elt.classList.remove('ol-select');\r\n  }.bind(this));\r\n\r\n  // Trigger scroll event\r\n  var scrollListener = null;\r\n  this._scrollDiv.addEventListener('scroll', function() {\r\n    this._setScrollLeft();\r\n    if (scrollListener) {\r\n      clearTimeout(scrollListener);\r\n      scrollListener = null;\r\n    }\r\n    scrollListener = setTimeout(function() {\r\n      this.dispatchEvent({ \r\n        type: 'scroll', \r\n        date: this.getDate(), \r\n        dateStart: this.getDate('start'), \r\n        dateEnd: this.getDate('end')\r\n      });\r\n    }.bind(this), options.scrollTimeout || 15);\r\n  }.bind(this));\r\n  // Magic to give \"live\" scroll events on touch devices\r\n  // this._scrollDiv.addEventListener('gesturechange', function() {});\r\n\r\n  // Scroll timeline\r\n  ol_ext_element.scrollDiv(this._scrollDiv, {\r\n    onmove: function(b) {\r\n      // Prevent selection on moving\r\n      this._moving = b; \r\n    }.bind(this)\r\n  });\r\n\r\n  this._tline = [];\r\n\r\n  // Parameters\r\n  this._scrollLeft = 0;\r\n  this.set('maxWidth', options.maxWidth || 2000);\r\n  this.set('minDate', options.minDate || Infinity);\r\n  this.set('maxDate', options.maxDate || -Infinity);\r\n  this.set('graduation', options.graduation);\r\n  this.set('minZoom', options.minZoom || .2);\r\n  this.set('maxZoom', options.maxZoom || 4);\r\n  this.setInterval(options.interval);\r\n  if (options.getHTML) this._getHTML =  options.getHTML;\r\n  if (options.getFeatureDate) this._getFeatureDate =  options.getFeatureDate;\r\n  if (options.endFeatureDate) this._endFeatureDate =  options.endFeatureDate;\r\n\r\n  // Feature source \r\n  this.setFeatures(options.features || options.source, options.zoom);\r\n};\r\nol_ext_inherits(ol_control_Timeline, ol_control_Control);\r\n\r\n/**\r\n * Set the map instance the control is associated with\r\n * and add interaction attached to it to this map.\r\n * @param {_ol_Map_} map The map instance.\r\n */\r\nol_control_Timeline.prototype.setMap = function(map) {\r\n  ol_control_Control.prototype.setMap.call(this, map);\r\n  this.refresh(this.get('zoom')||1, true);\r\n};\r\n\r\n/** Add a button on the timeline\r\n * @param {*} button\r\n *  @param {string} button.className\r\n *  @param {title} button.className\r\n *  @param {Element|string} button.html Content of the element\r\n *  @param {function} button.click a function called when the button is clicked\r\n */\r\nol_control_Timeline.prototype.addButton = function(button) {\r\n  this.element.classList.add('ol-hasbutton');\r\n  ol_ext_element.create('BUTTON', {\r\n    className: button.className || undefined,\r\n    title: button.title,\r\n    html : button.html,\r\n    click: button.handleClick,\r\n    parent: this._buttons\r\n  })\r\n};\r\n\r\n/** Set an interval\r\n * @param {number|string} length the interval length in ms or a farmatted text ie. end with y, 1d, h, mn, s (31 days = '31d'), default none\r\n */\r\nol_control_Timeline.prototype.setInterval = function(length) {\r\n  if (typeof(length)==='string') {\r\n    if (/s$/.test(length)) {\r\n      length = parseFloat(length) * 1000;\r\n    } else if (/mn$/.test(length)) {\r\n      length = parseFloat(length) * 1000 * 60;\r\n    } else if (/h$/.test(length)) {\r\n      length = parseFloat(length) * 1000 * 3600;\r\n    } else if (/d$/.test(length)) {\r\n      length = parseFloat(length) * 1000 * 3600 * 24;\r\n    } else if (/y$/.test(length)) {\r\n      length = parseFloat(length) * 1000 * 3600 * 24 * 365;\r\n    } else {\r\n      length = 0;\r\n    }\r\n  }\r\n  this.set('interval', length || 0);\r\n  if (length) this.element.classList.add('ol-interval');\r\n  else this.element.classList.remove('ol-interval');\r\n  this.refresh(this.get('zoom'));\r\n}\r\n\r\n/** Default html to show in the line\r\n * @param {ol.Feature} feature\r\n * @return {DOMElement|string}\r\n * @private\r\n */\r\nol_control_Timeline.prototype._getHTML = function(feature) {\r\n  return feature.get('name') || '';\r\n};\r\n\r\n/** Default function to get the date of a feature, returns the date attribute\r\n * @param {ol.Feature} feature\r\n * @return {Data|string}\r\n * @private\r\n */\r\nol_control_Timeline.prototype._getFeatureDate = function(feature) {\r\n  return (feature && feature.get) ? feature.get('date') : null;\r\n};\r\n\r\n/** Default function to get the end date of a feature, return undefined\r\n * @param {ol.Feature} feature\r\n * @return {Data|string}\r\n * @private\r\n */\r\nol_control_Timeline.prototype._endFeatureDate = function(/* feature */) {\r\n  return undefined;\r\n};\r\n\r\n/** Is the line collapsed\r\n * @return {boolean}\r\n */\r\nol_control_Timeline.prototype.isCollapsed = function() {\r\n  return this.element.classList.contains('ol-collapsed');\r\n};\r\n\r\n/** Collapse the line\r\n * @param {boolean} b\r\n */\r\nol_control_Timeline.prototype.collapse = function(b) {\r\n  if (b) this.element.classList.add('ol-collapsed');\r\n  else this.element.classList.remove('ol-collapsed');\r\n  this.dispatchEvent({ type: 'collapse', collapsed: this.isCollapsed() });\r\n};\r\n\r\n/** Collapse the line\r\n */\r\nol_control_Timeline.prototype.toggle = function() {\r\n  this.element.classList.toggle('ol-collapsed');\r\n  this.dispatchEvent({ type: 'collapse', collapsed: this.isCollapsed() });\r\n};\r\n\r\n/** Set the features to display in the timeline\r\n * @param {Array<ol.Features>|ol.source.Vector} features An array of features or a vector source\r\n * @param {number} zoom zoom to draw the line default 1\r\n */\r\nol_control_Timeline.prototype.setFeatures = function(features, zoom) {\r\n  this._features = this._source = null;\r\n  if (features instanceof ol_source_Vector) this._source = features;\r\n  else if (features instanceof Array) this._features = features;\r\n  else this._features = [];\r\n  this.refresh(zoom);\r\n};\r\n\r\n/**\r\n * Get features\r\n * @return {Array<ol.Feature>}\r\n */\r\nol_control_Timeline.prototype.getFeatures = function() {\r\n  return this._features || this._source.getFeatures();\r\n}\r\n\r\n/**\r\n * Refresh the timeline with new data\r\n * @param {Number} zoom Zoom factor from 0.25 to 10, default 1\r\n */\r\nol_control_Timeline.prototype.refresh = function(zoom, first) {\r\n  if (!this.getMap()) return;\r\n  if (!zoom) zoom = this.get('zoom');\r\n  zoom = Math.min(this.get('maxZoom'), Math.max(this.get('minZoom'), zoom || 1));\r\n  this.set('zoom', zoom);\r\n  this._scrollDiv.innerHTML = '';\r\n  var features = this.getFeatures();\r\n  var d, d2;\r\n\r\n  // Get features sorted by date\r\n  var tline = this._tline = [];\r\n  features.forEach(function(f) {\r\n    if (d = this._getFeatureDate(f)) {\r\n      if (!(d instanceof Date)) {\r\n        d = new Date(d)\r\n      }\r\n      if (this._endFeatureDate) {\r\n        d2 = this._endFeatureDate(f);\r\n        if (!(d2 instanceof Date)) {\r\n          d2 = new Date(d2)\r\n        }\r\n      }\r\n      if (!isNaN(d)) {\r\n        tline.push({\r\n          date: d,\r\n          end: isNaN(d2) ? null : d2,\r\n          feature: f\r\n        });\r\n      }\r\n    }\r\n  }.bind(this));\r\n\r\n  tline.sort(function(a,b) { \r\n    return (a.date < b.date ? -1 : (a.date===b.date ? 0: 1))\r\n  });\r\n\r\n  // Draw\r\n  var div = ol_ext_element.create('DIV', {\r\n    parent: this._scrollDiv\r\n  });\r\n\r\n  // Calculate width\r\n  var min = this._minDate = Math.min(this.get('minDate'), tline.length ? tline[0].date : Infinity);\r\n  var max = this._maxDate = Math.max(this.get('maxDate'), tline.length ? tline[tline.length-1].date : -Infinity);\r\n  if (!isFinite(min)) this._minDate = min = new Date();\r\n  if (!isFinite(max)) this._maxDate = max = new Date();\r\n  var delta = (max-min);\r\n  var maxWidth = this.get('maxWidth');\r\n  var scale = this._scale = (delta > maxWidth ? maxWidth/delta : 1) * zoom;\r\n  // Leave 10px on right\r\n  min = this._minDate = this._minDate - 10/scale;\r\n  delta = (max-min) * scale;\r\n  ol_ext_element.setStyle(div, {\r\n    width: delta,\r\n    maxWidth: 'unset'\r\n  });\r\n\r\n  // Draw time's bar\r\n  this._drawTime(div, min, max, scale);\r\n\r\n  // Set interval\r\n  if (this.get('interval')) {\r\n    ol_ext_element.setStyle (this._intervalDiv, { width: this.get('interval') * scale });\r\n  } else {\r\n    ol_ext_element.setStyle (this._intervalDiv, { width: '' });\r\n  }\r\n\r\n  // Draw features\r\n  var line = [];\r\n  var lineHeight = ol_ext_element.getStyle(this._scrollDiv, 'lineHeight');\r\n  \r\n  // Wrapper\r\n  var fdiv = ol_ext_element.create('DIV', {\r\n      className: 'ol-features',\r\n      parent: div\r\n  });\r\n\r\n  // Add features on the line\r\n  tline.forEach(function(f) {\r\n    var d = f.date;\r\n    var t = f.elt = ol_ext_element.create('DIV', {\r\n      className: 'ol-feature',\r\n      style: {\r\n        left: Math.round((d-min)*scale),\r\n      },\r\n      html: this._getHTML(f.feature),\r\n      parent: fdiv\r\n    });\r\n    // Prevent image dragging\r\n    var img = t.querySelectorAll('img');\r\n    for (var i=0; i<img.length; i++) {\r\n      img[i].ondragstart = function(){ return false; };\r\n    }\r\n\r\n    // Calculate image width\r\n    if (f.end) {\r\n      ol_ext_element.setStyle(t, { \r\n        minWidth: (f.end-d) * scale, \r\n        width: (f.end-d) * scale, \r\n        maxWidth: 'unset'\r\n      });\r\n    }\r\n    var left = ol_ext_element.getStyle(t, 'left');\r\n    // Select on click\r\n    t.addEventListener('click', function() {\r\n      if (!this._moving) {\r\n        this.dispatchEvent({type: 'select', feature: f.feature });\r\n      }\r\n    }.bind(this));\r\n\r\n    // Find first free Y position\r\n    var pos, l;\r\n    for (pos=0; l=line[pos]; pos++) {\r\n      if (left > l) {\r\n        break;\r\n      }\r\n    }\r\n    line[pos] = left + ol_ext_element.getStyle(t, 'width');\r\n    ol_ext_element.setStyle(t, { top: pos*lineHeight });\r\n  }.bind(this));\r\n  this._nbline = line.length;\r\n\r\n  if (first) this.setDate(this._minDate, { anim: false, position: 'start' });\r\n  // Dispatch scroll event\r\n  this.dispatchEvent({ \r\n    type: 'scroll', \r\n    date: this.getDate(), \r\n    dateStart: this.getDate('start'), \r\n    dateEnd: this.getDate('end')\r\n  });\r\n};\r\n\r\n/** Get offset given a date\r\n * @param {Date} date\r\n * @return {number}\r\n * @private\r\n */\r\nol_control_Timeline.prototype._getOffsetFromDate = function(date) {\r\n  return (date - this._minDate) * this._scale;\r\n};\r\n\r\n/** Get date given an offset\r\n * @param {Date} date\r\n * @return {number}\r\n * @private\r\n */\r\nol_control_Timeline.prototype._getDateFromOffset = function(offset) {\r\n  return offset / this._scale + this._minDate;\r\n};\r\n\r\n/** Set the current position \r\n * @param {number} scrollLeft current position (undefined when scrolling)\r\n * @returns {number}\r\n * @private\r\n */\r\nol_control_Timeline.prototype._setScrollLeft = function(scrollLeft) {\r\n  this._scrollLeft = scrollLeft;\r\n  if (scrollLeft !== undefined) {\r\n    this._scrollDiv.scrollLeft = scrollLeft;\r\n  }\r\n};\r\n\r\n/** Get the current position \r\n * @returns {number}\r\n * @private\r\n */\r\nol_control_Timeline.prototype._getScrollLeft = function() {\r\n  // Unset when scrolling\r\n  if (this._scrollLeft === undefined) {\r\n    return this._scrollDiv.scrollLeft;\r\n  } else {\r\n    // St by user\r\n    return this._scrollLeft;\r\n  }\r\n};\r\n\r\n/**\r\n * Draw dates on line\r\n * @private\r\n */\r\nol_control_Timeline.prototype._drawTime = function(div, min, max, scale) {\r\n  // Times div\r\n  var tdiv = ol_ext_element.create('DIV', {\r\n    className: 'ol-times',\r\n    parent: div\r\n  });\r\n  var d, dt, month, dmonth;\r\n  var dx = ol_ext_element.getStyle(tdiv, 'left');\r\n  var heigth = ol_ext_element.getStyle(tdiv, 'height');\r\n  // Year\r\n  var year = (new Date(this._minDate)).getFullYear();\r\n  dt = ((new Date(0)).setFullYear(String(year)) - new Date(0).setFullYear(String(year-1))) * scale;\r\n  var dyear = Math.round(2*heigth/dt)+1;\r\n  while(true) {\r\n    d = new Date(0).setFullYear(year);\r\n    if (d > this._maxDate) break;\r\n    ol_ext_element.create('DIV', {\r\n      className: 'ol-time ol-year',\r\n      style: {\r\n        left: this._getOffsetFromDate(d) - dx\r\n      },\r\n      html: year,\r\n      parent: tdiv\r\n    });\r\n    year += dyear;\r\n  }\r\n  // Month\r\n  if (/day|month/.test(this.get('graduation'))) {\r\n    dt = ((new Date(0,0,1)).setFullYear(String(year)) - new Date(0,0,1).setFullYear(String(year-1))) * scale;\r\n    dmonth = Math.max(1, Math.round(12 / Math.round(dt/heigth/2)));\r\n    if (dmonth < 12) {\r\n      year = (new Date(this._minDate)).getFullYear();\r\n      month = dmonth+1;\r\n      while(true) {\r\n        d = new Date(0,0,1);\r\n        d.setFullYear(year);\r\n        d.setMonth(month-1);\r\n        if (d > this._maxDate) break;\r\n        ol_ext_element.create('DIV', {\r\n          className: 'ol-time ol-month',\r\n          style: {\r\n            left: this._getOffsetFromDate(d) - dx\r\n          },\r\n          html: d.toLocaleDateString(undefined, { month: 'short'}),\r\n          parent: tdiv\r\n        });\r\n        month += dmonth;\r\n        if (month > 12) {\r\n          year++;\r\n          month = dmonth+1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Day\r\n  if (this.get('graduation')==='day') {\r\n    dt = (new Date(0,1,1) - new Date(0,0,1)) * scale;\r\n    var dday = Math.max(1, Math.round(31 / Math.round(dt/heigth/2)));\r\n    if (dday < 31) {\r\n      year = (new Date(this._minDate)).getFullYear();\r\n      month = 0;\r\n      var day = dday;\r\n      while(true) {\r\n        d = new Date(0,0,1);\r\n        d.setFullYear(year);\r\n        d.setMonth(month);\r\n        d.setDate(day);\r\n        if (isNaN(d)) {\r\n          month++;\r\n          if (month>12) {\r\n            month = 1;\r\n            year++;\r\n          }\r\n          day = dday;\r\n        } else {\r\n          if (d > this._maxDate) break;\r\n          if (day>1) {\r\n            var offdate = this._getOffsetFromDate(d);\r\n            if (this._getOffsetFromDate(new Date(year, month+1, 1)) - offdate > heigth) {\r\n              ol_ext_element.create('DIV', {\r\n                className: 'ol-time ol-day',\r\n                style: {\r\n                  left: offdate - dx\r\n                },\r\n                html: day,\r\n                parent: tdiv\r\n              });\r\n            }\r\n          }\r\n          year = d.getFullYear();\r\n          month = d.getMonth();\r\n          day = d.getDate() + dday;\r\n          if (day > new Date(year, month+1, 0).getDate()) {\r\n            month++;\r\n            day = dday;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/** Center timeline on a date\r\n * @param {Date|String|ol.feature} feature a date or a feature with a date\r\n * @param {Object} options\r\n *  @param {boolean} options.anim animate scroll\r\n *  @param {string} options.position start, end or middle, default middle\r\n */\r\nol_control_Timeline.prototype.setDate = function(feature, options) {\r\n  var date;\r\n  options = options || {};\r\n  // It's a date\r\n  if (feature instanceof Date) {\r\n    date = feature;\r\n  } else {\r\n    // Get date from Feature\r\n    if (this.getFeatures().indexOf(feature) >= 0) {\r\n      date = this._getFeatureDate(feature);\r\n    }\r\n    if (date && !(date instanceof Date)) {\r\n      date = new Date(date);\r\n    }\r\n    if (!date || isNaN(date)) {\r\n      date = new Date(String(feature));\r\n    }\r\n  }\r\n  if (!isNaN(date)) {\r\n    if (options.anim === false) this._scrollDiv.classList.add('ol-move');\r\n    var scrollLeft = this._getOffsetFromDate(date);\r\n    if (options.position==='start') {\r\n      scrollLeft += ol_ext_element.outerWidth(this._scrollDiv)/2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft')/2;\r\n    } else if (options.position==='end') {\r\n      scrollLeft -= ol_ext_element.outerWidth(this._scrollDiv)/2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft')/2;\r\n    }\r\n    this._setScrollLeft(scrollLeft);\r\n    if (options.anim === false) this._scrollDiv.classList.remove('ol-move');\r\n    if (feature) {\r\n      for (var i=0, f; f = this._tline[i]; i++) {\r\n        if (f.feature === feature) {\r\n          f.elt.classList.add('ol-select');\r\n          this._select = f;\r\n        } else {\r\n          f.elt.classList.remove('ol-select');\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/** Get round date (sticked to mn, hour day or month)\r\n * @param {Date} d\r\n * @param {string} stick sticking option to stick date to: 'mn', 'hour', 'day', 'month', default no stick\r\n * @return {Date}\r\n */\r\nol_control_Timeline.prototype.roundDate = function(d, stick) {\r\n  switch (stick) {\r\n    case 'mn': {\r\n      return new Date(this._roundTo(d, 60*1000));\r\n    }\r\n    case 'hour': {\r\n      return new Date(this._roundTo(d, 60*60*1000));\r\n    }\r\n    case 'day': {\r\n      return new Date(this._roundTo(d, 24*60*60*1000));\r\n    }\r\n    case 'month': {\r\n      d = new Date(this._roundTo(d, 24*60*60*1000));\r\n      if (d.getDate() > 15) {\r\n        d = new Date(d.setMonth(d.getMonth() + 1));\r\n      }\r\n      d = d.setDate(1);\r\n      return new Date(d);\r\n    }\r\n    default: return new Date(d);\r\n  }\r\n};\r\n\r\n/** Get the date of the center\r\n * @param {string} position position to get 'start', 'end' or 'middle', default middle\r\n * @param {string} stick sticking option to stick date to: 'mn', 'hour', 'day', 'month', default no stick\r\n * @return {Date}\r\n */\r\nol_control_Timeline.prototype.getDate = function(position, stick) {\r\n  var pos;\r\n  if (!stick) stick = position;\r\n  switch (position) {\r\n    case 'start': {\r\n      if (this.get('interval')) {\r\n        pos = - ol_ext_element.getStyle(this._intervalDiv, 'width')/2 + ol_ext_element.getStyle(this._scrollDiv, 'marginLeft')/2;\r\n      } else {\r\n        pos = - ol_ext_element.outerWidth(this._scrollDiv)/2 + ol_ext_element.getStyle(this._scrollDiv, 'marginLeft')/2;\r\n      }\r\n      break;\r\n    }\r\n    case 'end': {\r\n      if (this.get('interval')) {\r\n        pos = ol_ext_element.getStyle(this._intervalDiv, 'width')/2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft')/2;\r\n      } else {\r\n        pos = ol_ext_element.outerWidth(this._scrollDiv)/2 - ol_ext_element.getStyle(this._scrollDiv, 'marginLeft')/2;\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      pos = 0;\r\n      break;\r\n    }\r\n  }\r\n  var d = this._getDateFromOffset(this._getScrollLeft() + pos);\r\n  d = this.roundDate(d, stick);\r\n  return new Date(d);\r\n};\r\n\r\n/** Round number to \r\n * @param {number} d\r\n * @param {number} r\r\n * @return {number}\r\n * @private\r\n */\r\nol_control_Timeline.prototype._roundTo = function(d, r) {\r\n  return Math.round(d/r) * r;\r\n};\r\n\r\n/** Get the start date of the control\r\n * @return {Date}\r\n */\r\nol_control_Timeline.prototype.getStartDate = function() {\r\n  return new Date(this.get('minDate'));\r\n}\r\n\r\n/** Get the end date of the control\r\n * @return {Date}\r\n */\r\nol_control_Timeline.prototype.getEndDate = function() {\r\n  return new Date(this.get('maxDate'));\r\n}\r\n\r\nexport default ol_control_Timeline","<script>\nimport Utils from '../../utils.js';\n\nimport Collection from 'ol/Collection';\nimport LayerGroup from 'ol/layer/Group';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport WMTSCapabilities from 'ol/format/WMTSCapabilities';\nimport WMTS, {optionsFromCapabilities} from 'ol/source/WMTS';\n\nimport 'ol-ext/control/Timeline.css';\nimport Timeline from 'ol-ext/control/Timeline';\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tWMTSCapabilities: {},\n\t\t\ttimeline: null,\n\t\t}\n\t},\n\tmethods: {\n\t\tasync addWebService(service) {\n\t\t\tswitch(service.type.toLowerCase()) {\n\t\t\t\tcase 'xyz':\n\t\t\t\t\treturn this.updateXYZLayer(service);\n\t\t\t\tcase 'wmts':\n\t\t\t\t\treturn await this.updateWMTSLayer(service);\n\t\t\t\tdefault:\n\t\t\t\t\tUtils.error(this, 'Sorry, this web service type is not supported.');\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\tgetWMTSTimes(capabilities, layerId) {\n\t\t\tconst layers = capabilities.Contents.Layer || [];\n\t\t\tlet layer = layers.find(l => l.Identifier == layerId);\n\t\t\tif (!layer || !layer.Dimension) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tlet timeDimension = layer.Dimension.find(d => d.Identifier === 'TIME');\n\t\t\tif (!timeDimension) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn timeDimension.Value.sort();\n\t\t},\n\n\t\tasync initWMTSLayer(service) {\n\t\t\tif (!this.WMTSCapabilities[service.url]) {\n\t\t\t\ttry {\n\t\t\t\t\tlet url = new URL(service.url);\n\t\t\t\t\turl.searchParams.set('service', 'wmts');\n\t\t\t\t\turl.searchParams.set('request', 'GetCapabilities');\n\t\t\t\t\tlet response = await axios.get(url.toString(), { responseType: 'text' });\n\t\t\t\t\tvar parser = new WMTSCapabilities();\n\t\t\t\t\tthis.WMTSCapabilities[service.url] = parser.read(response.data);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tUtils.exception(this, error, \"WMTS Discovery failed\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.WMTSCapabilities[service.url];\n\t\t},\n\n\t\tasync updateWMTSLayer(service, prefix = \"Service\") {\n\t\t\tlet attrs = service.attributes || {};\n\n\t\t\tlet capabilities = await this.initWMTSLayer(service);\n\t\t\tif (!capabilities) {\n\t\t\t\tUtils.exception(this, error, \"WMTS Discovery failed\");\n\t\t\t}\n\n\t\t\tlet minDate = null;\n\t\t\tlet maxDate = null;\n\t\t\tlet defaultDate = null;\n\t\t\tlet source = null;\n\t\t\tlet title = Utils.getResourceTitle(service, prefix);\n\t\t\tlet layerCollection = new Collection();\n\t\t\tlet layerNames;\n\t\t\tif (Array.isArray(attrs.layers)) {\n\t\t\t\tlayerNames = attrs.layers;\n\t\t\t}\n\t\t\telse if (Array.isArray(capabilities.Contents.Layer)) {\n\t\t\t\tlayerNames = layers.map(l => l.Identifier);\n\t\t\t}\n\t\t\tfor(let layer of layerNames) {\n\t\t\t\tif (!layer) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet options = optionsFromCapabilities(capabilities, {\n\t\t\t\t\tlayer,\n\t\t\t\t\tmatrixSet: 'EPSG:3857'\n\t\t\t\t});\n\t\t\t\tif (!defaultDate) {\n\t\t\t\t\tdefaultDate = new Date(options.dimensions.TIME);\n\t\t\t\t}\n\n\t\t\t\tlet times = this.getWMTSTimes(capabilities, layer);\n\t\t\t\tif (times.length) {\n\t\t\t\t\tlet min = new Date(times[0]);\n\t\t\t\t\tlet max = new Date(times[times.length -1]);\n\t\t\t\t\tif (!minDate || min < minDate) {\n\t\t\t\t\t\tminDate = min;\n\t\t\t\t\t}\n\t\t\t\t\tif (!maxDate || max > maxDate) {\n\t\t\t\t\t\tmaxDate = max;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (Utils.isObject(attrs.dimensions)) {\n\t\t\t\t\tObject.assign(options.dimensions, service.attributes.dimensions);\n\t\t\t\t}\n\t\t\t\tsource = new WMTS(options);\n\t\t\t\tvar mapLayer = new TileLayer({\n\t\t\t\t\ttitle,\n\t\t\t\t\tsource: this.trackTileProgress(source),\n\t\t\t\t\tnoSwitcherDelete: true\n\t\t\t\t});\n\t\t\t\tlayerCollection.push(mapLayer);\n\t\t\t}\n\n\t\t\tif (minDate && maxDate) {\n\t\t\t\tthis.timeline = new Timeline({\n\t\t\t\t\tclassName: 'ol-pointer',\n\t\t\t\t\tgraduation: 'day',\n\t\t\t\t\tminDate: minDate,\n\t\t\t\t\tmaxDate: maxDate\n\t\t\t\t});\n\t\t\t\tlet run;\n\t\t\t\tthis.timeline.on('scroll', function(e) {\n\t\t\t\t\tif (!e.date || e.date > maxDate || e.date < minDate) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (run) {\n\t\t\t\t\t\twindow.clearTimeout(run);\n\t\t\t\t\t}\n\t\t\t\t\trun = window.setTimeout(() => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlet date = e.date.toISOString().substr(0, 10);\n\t\t\t\t\t\t\tsource.updateDimensions({\n\t\t\t\t\t\t\t\tTIME: date\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tlet btns = document.getElementsByClassName('timeline-date-label');\n\t\t\t\t\t\t\tbtns[0].innerText = date;\n\t\t\t\t\t\t\tbtns[0].disabled = true;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\trun = null;\n\t\t\t\t\t}, 500);\n\t\t\t\t});\n\t\t\t\tthis.map.addControl(this.timeline);\n\n\t\t\t\tthis.timeline.addButton({\n\t\t\t\t\tclassName: 'timeline-date-label',\n\t\t\t\t\ttitle: `The date that is shown on the map for the collection '${title}'`,\n\t\t\t\t\thtml: 'No date'\n\t\t\t\t});\n\t\t\t\tthis.timeline.setDate(defaultDate);\n\t\t\t}\n\n\t\t\tlet group = new LayerGroup({\n\t\t\t\tid: service.id,\n\t\t\t\ttitle,\n\t\t\t\tlayers: layerCollection\n\t\t\t});\n\t\t\tgroup.on('change:visible',  () => {\n\t\t\t\tif (this.timeline && this.timeline.element) {\n\t\t\t\t\t// Remove time selector on Map if not required any more https://github.com/Open-EO/openeo-web-editor/issues/207\n\t\t\t\t\tthis.timeline.element.style.display = group.getVisible() ? 'block' : 'none';\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.addLayerToMap(group);\n\n\t\t\tif (this.timeline) {\n\t\t\t\tthis.map.getLayers().on('remove', event => {\n\t\t\t\t\tif (event.element === group) {\n\t\t\t\t\t\tthis.map.removeControl(this.timeline);\n\t\t\t\t\t\tthis.timeline = null;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn group;\n\t\t},\n\n\t\tupdateXYZLayer(service, prefix = \"Service\") {\n\t\t\t// Replace/add a query parameter with a unique ID so that OpenLayers doesn't load tiles from cache\n\t\t\tlet url = Utils.replaceParam(service.url, '__editorSessionId', new Date().getTime()).replace(/%7B/g, '{').replace(/%7D/g, '}');\n\t\t\tlet title = Utils.getResourceTitle(service, prefix);\n\t\t\tlet layer = new TileLayer({\n\t\t\t\ttitle,\n\t\t\t\tsource: this.trackTileProgress(new XYZ({\n\t\t\t\t\turl\n\t\t\t\t})),\n\t\t\t\tnoSwitcherDelete: true\n\t\t\t});\n\t\t\tlet group = new LayerGroup({\n\t\t\t\tid: service.id,\n\t\t\t\ttitle,\n\t\t\t\tlayers: [\n\t\t\t\t\tlayer\n\t\t\t\t]\n\t\t\t});\n\t\t\tthis.addLayerToMap(group);\n\t\t\treturn group;\n\t\t}\n\t}\n}\n</script>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WebServiceMixin.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./WebServiceMixin.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./WebServiceMixin.vue?vue&type=script&lang=js&\"\nexport * from \"./WebServiceMixin.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<Splitpanes horizontal class=\"default-theme\">\n\t\t<Pane id=\"map\">\n\t\t\t<div :id=\"id\" class=\"map-viewer\">\n\t\t\t\t<ProgressControl ref=\"progress\" :map=\"map\" />\n\t\t\t\t<TextControl v-if=\"isGeoTiff\" :text=\"textControlText\" />\n\t\t\t\t<ChannelControl v-if=\"isGeoTiff && !colorMap\" :bands=\"bands\" @update=\"updateGeoTiffStyle\" />\n\t\t\t\t<div v-if=\"loading\" class=\"map-loading\">\n\t\t\t\t\t<i class=\"fas fa-spinner fa-spin\"></i>\n\t\t\t\t\t<span>Loading map...</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Pane>\n\t\t<Pane v-if=\"chart\" id=\"chart\" :size=\"33\">\n\t\t\t<ScatterChart v-bind=\"chart\" :height=\"220\" />\n\t\t</Pane>\n\t</Splitpanes>\n</template>\n\n<script>\nimport { GeoTIFFImage } from 'geotiff';\n\nimport Utils from '../../utils.js';\nimport GeoTIFF from '../../formats/geotiff';\nimport JSON_ from '../../formats/json';\n\nimport { Splitpanes, Pane } from 'splitpanes';\n\nimport ExtentMixin from '../maps/ExtentMixin.vue';\nimport GeoTiffMixin from '../maps/GeoTiffMixin.vue';\nimport MapMixin from '../maps/MapMixin.vue';\nimport ScatterChart from './ScatterChart.vue';\nimport WebServiceMixin from '../maps/WebServiceMixin.vue';\n\nimport { Service } from '@openeo/js-client';\n\nimport Feature from 'ol/Feature';\nimport { fromExtent as PolygonFromExtent } from 'ol/geom/Polygon';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\n\n// Integrate changes/fixes from https://github.com/geotiffjs/geotiff.js/pull/303 until released/integrated by geotiff.js\nGeoTIFFImage.prototype.getSampleByteSize = function(i) {\n    if (!this.fileDirectory.BitsPerSample || this.fileDirectory.BitsPerSample.length === 0) {\n      return;\n    }\n    if (i >= this.fileDirectory.BitsPerSample.length) {\n      i = 0;\n    }\n    return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n};\n\nGeoTIFFImage.prototype.getReaderForSample = function(sampleIndex) {\n    const format = this.getSampleFormat(sampleIndex);\n    const bitsPerSample = this.getBitsPerSample(sampleIndex);\n    switch (format) {\n      case 1: // unsigned integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getUint8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getUint16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getUint32;\n        }\n        break;\n      case 2: // twos complement signed integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getInt8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getInt16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getInt32;\n        }\n        break;\n      case 3:\n        switch (bitsPerSample) {\n          case 16:\n            return function (offset, littleEndian) {\n              return getFloat16(this, offset, littleEndian);\n            };\n          case 32:\n            return DataView.prototype.getFloat32;\n          case 64:\n            return DataView.prototype.getFloat64;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    throw Error('Unsupported data format/bitsPerSample');\n};\n\nGeoTIFFImage.prototype.getSampleFormat = function(sampleIndex = 0) {\n    if (!this.fileDirectory.SampleFormat || this.fileDirectory.SampleFormat.length === 0) {\n      return 1;\n    }\n    return typeof this.fileDirectory.SampleFormat[sampleIndex] !== 'undefined'\n      ? this.fileDirectory.SampleFormat[sampleIndex] : this.fileDirectory.SampleFormat[0];\n};\n\nGeoTIFFImage.prototype.getBitsPerSample = function(sampleIndex = 0) {\n    if (!this.fileDirectory.BitsPerSample || this.fileDirectory.BitsPerSample.length === 0) {\n      return;\n    }\n    return typeof this.fileDirectory.BitsPerSample[sampleIndex] !== 'undefined'\n      ? this.fileDirectory.BitsPerSample[sampleIndex] : this.fileDirectory.BitsPerSample[0];\n};\n// End of geotiff.js fixes\n\nexport default {\n\tname: 'MapViewer',\n\tmixins: [ExtentMixin, GeoTiffMixin, MapMixin, WebServiceMixin],\n\tcomponents: {\n\t\tPane,\n\t\tScatterChart,\n\t\tSplitpanes,\n\t},\n\tprops: {\n\t\tdata: {}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tloading: true,\n\t\t\tchart: null\n\t\t};\n\t},\n\tcomputed: {\n\t\t...Utils.mapState(['connection']),\n\t\tisWebService() {\n\t\t\treturn this.data instanceof Service && typeof this.data.type === 'string';\n\t\t},\n\t\tisGeoTiff() {\n\t\t\treturn this.data instanceof GeoTIFF;\n\t\t},\n\t\tisGeoJson() {\n\t\t\treturn this.data instanceof JSON_ && this.data.isGeoJson;\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.$emit('mounted', this);\n\t},\n\tmethods: {\n\t\tasync renderMap() {\n\t\t\ttry {\n\t\t\t\tlet view;\n\t\t\t\tlet data;\n\t\t\t\tif (this.isGeoJson) {\n\t\t\t\t\tdata = await this.data.loadData(this.connection);\n\t\t\t\t}\n\t\t\t\telse if (this.isGeoTiff) {\n\t\t\t\t\tdata = await this.data.loadData(this.connection);\n\t\t\t\t\tlet projection = data.getProjection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tview = projection;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this.isWebService && Utils.isMapServiceSupported(this.data.type)) {\n\t\t\t\t\tif (this.data.type.toLowerCase() === 'wmts') {\n\t\t\t\t\t\tlet capabilities = await this.initWMTSLayer(this.data);\n\t\t\t\t\t\t// ToDo: Right now we assume Web Mercator is always available, better check the capabilities...\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(\"Sorry, the given data can't be shown on a web map.\");\n\t\t\t\t}\n\n\t\t\t\tawait this.createMap(view);\n\t\t\t\tthis.addLayerSwitcher();\n\n\t\t\t\tif (this.isGeoJson) {\n\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\tthis.addGeoJson(data, true);\n\t\t\t\t}\n\t\t\t\telse if (this.isGeoTiff) {\n\t\t\t\t\tlet proj = this.map.getView().getProjection();\n\t\t\t\t\tif (proj.basemap || ['EPSG:3857', 'EPSG:4326'].includes(proj.getCode())) {\n\t\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\t}\n\t\t\t\t\tlet stac = this.data.getContext();\n\t\t\t\t\tif (stac) {\n\t\t\t\t\t\tthis.addExtent(stac, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis.addGeoTiff(data);\n\t\t\t\t}\n\t\t\t\telse if (this.isWebService && Utils.isMapServiceSupported(this.data.type)) {\n\t\t\t\t\tthis.addBasemaps();\n\t\t\t\t\tthis.addWebService(this.data);\n\t\t\t\t}\n\n\t\t\t\tif (this.$listeners && this.$listeners.drop) {\n\t\t\t\t\tthis.map.getViewport().addEventListener('dragover', event => event.preventDefault());\n\t\t\t\t\tthis.map.getViewport().addEventListener('drop', this.$listeners.drop);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tUtils.exception(this, error);\n\t\t\t}\n\n\t\t\tthis.loading = false;\n\t\t},\n\n\t\tasync addCollection() {\n\t\t\tlet layer = this.showWebService(this.data);\n\t\t\t// Fit to extent of collection\n\t\t\ttry {\n\t\t\t\tlet bbox = service.attributes.bbox;\n\t\t\t\tlet extent = [...this.fromLonLat([bbox.west, bbox.south]), ...this.fromLonLat([bbox.east, bbox.north])];\n\t\t\t\tlet extentLayer = new VectorLayer({\n\t\t\t\t\ttitle: \"Extent\",\n\t\t\t\t\tnoSwitcherDelete: true,\n\t\t\t\t\tsource: new VectorSource({\n\t\t\t\t\t\tfeatures: [\n\t\t\t\t\t\t\tnew Feature(PolygonFromExtent(extent))\n\t\t\t\t\t\t],\n\t\t\t\t\t\tprojection: \"EPSG:4326\",\n\t\t\t\t\t\twrapX: false\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\n\t\t\t\tthis.removeLayerFill(extentLayer);\n\t\t\t\tlayer.getLayers().push(extentLayer);\n\n\t\t\t\tthis.map.getView().fit(extent, this.getFitOptions(10));\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t}\n\n}\n</script>\n\n<style src=\"../maps/MapMixin.css\"></style>\n\n<style lang=\"scss\">\n.map-viewer {\n\tposition: relative;\n\n\t.map-loading {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tbackground-color: rgba(0,0,0,0.6);\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tz-index: 9999;\n\t\tcolor: white;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-direction: column;\n\n\t\t> i {\n\t\t\tfont-size: 2em;\n\t\t}\n\t}\n}\n.ol-control.value {\n\ttop: 0.5em;\n\tleft: 3em;\n}\n.ol-control.ol-timeline .timeline-date-label {\n\twidth: 7em;\n    font-size: 0.8em;\n    font-weight: normal;\n}\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapViewer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MapViewer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapViewer.vue?vue&type=template&id=5bd1f6c4&\"\nimport script from \"./MapViewer.vue?vue&type=script&lang=js&\"\nexport * from \"./MapViewer.vue?vue&type=script&lang=js&\"\nimport style0 from \"../maps/MapMixin.css?vue&type=style&index=0&prod&lang=css&\"\nimport style1 from \"./MapViewer.vue?vue&type=style&index=1&id=5bd1f6c4&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["mixins","methods","footprint","addRectangles","features","projection","wrapX","title","displayInLayerSwitcher","source","removeLayerFill","style","render","staticRenderFns","component","_vm","this","_c","_self","texts","length","staticClass","class","pointer","on","toggle","_v","_s","current","_e","name","ControlMixin","data","i","computed","props","text","String","Array","default","attrs","id","ref","map","isGeoTiff","textControlText","colorMap","bands","updateGeoTiffStyle","loading","chart","_b","directives","rawName","value","channels","expression","isGray","multiBand","_l","channel","key","labels","modifiers","$event","$$selectedVal","prototype","filter","call","target","options","o","selected","val","_value","_n","$set","multiple","band","domProps","min","composing","$forceUpdate","max","cols","isArray","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","slice","type","watch","immediate","handler","deep","isValid","updateChannels","emit","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","TypeError","__","constructor","create","DataTile","_super","_this","state","TileState","tileCoord","transition","interpolate","loader_","loader","data_","error_","size_","size","getSize","getData","getError","load","changed","self","then","catch","error","Tile","bindAndConfigure","gl","texture","resampleFilter","LINEAR","NEAREST","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","uploadImageTexture","image","texImage2D","RGBA","UNSIGNED_BYTE","uploadDataTexture","helper","bandCount","textureType","canInterpolate","getGL","Float32Array","FLOAT","getExtension","extension","format","bytesPerRow","byteLength","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","Error","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","pixelContext","createPixelContext","canvas","document","createElement","width","height","getContext","TileTexture","tile","textures","handleTileChange_","bind","renderSize_","grid","getTileSize","gutter_","gutter","NaN","helper_","coords","fromArray","flushBufferData","setTile","removeEventListener","EventType","loaded","getState","uploadTile_","ImageTile","getImage","Image","crossOrigin","addEventListener","createTexture","push","sourceTileSize","pixelSize","isFloat","pixelCount","DataType","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","Math","floor","textureCount","ceil","textureDataArrays","textureIndex","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataValue","pixelIndex","bandIndex","textureData","textureBandIndex","dispatchEvent","disposeInternal","deleteBuffer","deleteTexture","getPixelData","renderCol","renderRow","renderWidth","renderHeight","sourceSize","sourceWidthWithoutGutter_1","sourceHeightWithoutGutter_1","sourceWidth_1","sourceHeight_1","sourceCol_1","sourceRow_1","data_1","DataView","bytesPerPixel","offset_1","buffer","offset","clearRect","sourceWidth","sourceHeight","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","drawImage","getImageData","err","Uniforms","TILE_TEXTURE_ARRAY","TILE_TRANSFORM","TRANSITION_ALPHA","DEPTH","TEXTURE_PIXEL_WIDTH","TEXTURE_PIXEL_HEIGHT","TEXTURE_RESOLUTION","TEXTURE_ORIGIN_X","TEXTURE_ORIGIN_Y","RENDER_EXTENT","RESOLUTION","ZOOM","Attributes","TEXTURE_COORD","attributeDescriptions","empty","depthForZ","z","addTileTextureToLookup","tileTexturesByZ","tileTexture","getRenderExtent","frameState","extent","layerState","layerStatesArray","layerIndex","viewState","layer","getRenderSource","getWrapX","gridExtent","getTileGridForProjection","getExtent","getCacheKey","getKey","WebGLTileLayerRenderer","tileLayer","uniforms","renderComplete","tileTransform_","tempMat4_","tempTileRange_","TileRange","tempTileCoord_","tempSize_","program_","vertexShader_","vertexShader","fragmentShader_","fragmentShader","indices_","cacheSize","undefined","tileTextureCache_","LRUCache","paletteTextures_","paletteTextures","frameState_","reset","getProgram","afterHelperCreated","isDrawableTile_","getLayer","tileState","useInterimTilesOnError","getUseInterimTilesOnError","prepareFrameInternal","enqueueTiles","initialZ","tileSource","tileGrid","getGutterForProjection","tileSourceKey","wantedTiles","tileTextureCache","minZ","getPreload","getMinZoom","tileRange","getTileRangeForExtentAndZ","tileResolution","getResolution","x","minX","maxX","y","minY","maxY","cacheKey","containsKey","get","getTile","pixelRatio","interimTile","getInterimTile","set","tileQueueKey","tileQueue","isKeyQueued","enqueue","getTileCoordCenter","renderFrame","preRender","getZForResolution","resolution","zDirection","nextExtent","targetZ","nextResolution","alphaLookup","uid","time","blend","tileTextures","ii","alpha","getAlpha","endTransition","tileCoordKey","coveredByChildren","findAltTiles_","minZoom","parentZ","coveredByParent","useProgram","prepareDraw","zs","keys","Number","sort","centerX","center","centerY","j","jj","tileZ","tileSize","tileOrigin","getOrigin","tileWidthWithGutter","tileHeightWithGutter","aspectRatio","centerI","centerJ","tileScale","depth","tileTextures_1","tileCenterI","tileCenterJ","rotation","setUniformMatrixValue","mat4","bindBuffer","enableAttributes","textureSlot","textureProperty","uniformName","activeTexture","uniform1i","getUniformLocation","paletteIndex","paletteTexture","getTexture","animate","setUniformFloatValue","gutterExtent","getTileCoordExtent","setUniformFloatVec4","zoom","drawElements","finalizeDraw","dispatchPreComposeEvent","dispatchPostComposeEvent","getCanvas","canExpireCache","pop","dispose","postRenderFunction","expireCache","postRenderFunctions","postRender","pixel","coordinate","pixelToCoordinateTransform","layerExtent","sources","getSources","getTileCoordForCoordAndZ","col","row","altZ","getTileRangeForTileCoordAndZ","covered","removeHelper","forEach","clear","deleteProgram","PaletteTexture","texture_","ValueTypes","NUMBER","STRING","COLOR","BOOLEAN","NUMBER_ARRAY","ANY","NONE","Operators","getValueType","JSON","stringify","valueArr","onlyNumbers","every","v","operator","getReturnType","isTypeUnique","valueType","numberToGlsl","s","toString","indexOf","arrayToGlsl","array","join","colorToGlsl","color","c","getStringNumberEquivalent","context","string","stringLiteralsMap","stringToGlsl","expressionToGlsl","typeHint","toGlsl","assertNumber","assertNumbers","values","assertString","assertBoolean","assertArgsCount","args","count","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertArgsOdd","assertUniqueInferredType","types","uniformNameForVariable","variableName","attributes","prefix","inFragmentShader","variables","PALETTE_TEXTURE_ARRAY","index","colors","numColors","palette","candidate","length_1","paletteName","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","result","arg","functions","ifBlocks","colorIndex","textureName","bandExpression","xOffsetExpression","yOffsetExpression","parsedArgs","opt_typeHint","interpolation","outputType","input","exponent","stop1","output1","stop2","output2","fallback","match","output","condition","parseStyle","pipeline","contrast","exposure","saturation","gamma","brightness","numVariables","_loop_1","uniformDeclarations","functionDefintions","WebGLTileLayer","opt_options","sources_","renderedSource_","renderedResolution_","style_","cacheSize_","styleVariables_","addChangeListener","handleSourceUpdate_","getSource","getSourceState","setStyle","getSourceBandCount_","MAX_SAFE_INTEGER","createRenderer","parsedStyle","renderSources","layerRenderer","getRenderer","prepareFrame","rendered","ready","_loop_2","sourceState","onChange_1","altSources","includes","renderer","updateStyleVariables","BaseTile","DataTileSource","maxResolution","maxZoom","attributions","attributionsCollapsible","opaque","tilePixelRatio","tileSize_","renderTileSize","tileSizes_","tileLoadingKeys_","setTileSizes","tileSizes","getTileGrid","setLoader","tileCache","sourceLoader","tileOptions","event","TileEventType","defaultPoolSize","navigator","hardwareConcurrency","Pool","createWorker","workers","_awaitingDecoder","messageId","Promise","resolve","module","worker","idle","async","fileDirectory","decoder","decode","find","random","onMessage","e","decoded","postMessage","destroy","terminate","workerPool","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","getWorkerPool","getBoundingBox","_","ImageWidth","ImageLength","getResolutions","referenceImage","ImageHeight","getProjection","geoKeys","ProjectedCSTypeGeoKey","code","units","ProjLinearUnitsGeoKey","GeographicTypeGeoKey","GeogAngularUnitsGeoKey","getImagesForTIFF","tiff","getImageCount","requests","all","getImagesForSource","request","blob","overviews","url","assertEqual","expected","got","tolerance","message","rejector","abs","getMinForDataType","Int8Array","Int16Array","Int32Array","getMaxForDataType","Uint8ClampedArray","Uint16Array","Uint32Array","GeoTIFFSource","sourceInfo_","numSources","sourceOptions_","sourceOptions","sourceImagery_","resolutionFactors_","samplesPerPixel_","nodataValues_","metadata_","normalize_","normalize","addAlpha_","readMethod_","convertToRGB","setKey","configure_","console","setState","origin","commonRenderTileSizes","commonSourceTileSizes","resolutions","samplesPerPixel","nodataValues","metadata","sourceCount","sourceIndex","images","imageCount","sourceExtent","sourceOrigin","sourceTileSizes","renderTileSizes","sourceResolutions","imageIndex","nodataValue","getGDALNoData","getGDALMetadata","wantedSamples","this_1","getSamplesPerPixel","level","imageResolutions","getTileWidth","getTileHeight","viewRejector","resolutionFactor_1","scaledSourceResolutions","reverse","sourceImagery","unshift","firstSource","outer","nodata","additionalBands","reduce","accumulator","TileGrid","loadTile_","viewResolver","addAlpha","sourceInfo","resolutionFactor","this_2","pixelBounds","round","samples","bandNumber","fillValue","sampleIndex","window","pool","interleave","dataLength","sourceSamples","transparent","gain","bias","stats","parseFloat","sourceValue","nodataIsNaN","isNaN","getView","components","ChannelControl","TextControl","noData","getBandVar","getFormula","getNoDataFormula","pointermove","click","label","datasets","formatCoords","createElementNS","namespaceURI","qualifiedName","node","normalizeWhitespace","getAllTextContent_","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","replace","n","firstChild","nextSibling","isDocument","object","parse","xml","DOMParser","parseFromString","makeArrayPusher","valueReader","opt_this","objectStack","makeObjectPropertyPusher","opt_property","property","localName","makeObjectPropertySetter","makeSimpleNodeFactory","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","document_","implementation","createDocument","XML","read","doc","readFromDocument","readFromNode","ELEMENT_NODE","NAMESPACE_URI","readHref","getAttributeNS","readDecimal","readDecimalString","m","exec","readPositiveInteger","readNonNegativeIntegerString","parseInt","readString","trim","NAMESPACE_URIS","PARSERS","readServiceIdentification","readServiceProvider","readOperationsMetadata","OWS","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","readValue","CONSTRAINT_PARSERS","readAllowedValues","CONTACT_INFO_PARSERS","readPhone","readAddress","DCP_PARSERS","readHttp","HTTP_PARSERS","readGet","OPERATION_PARSERS","readDcp","OPERATIONS_METADATA_PARSERS","readOperation","PHONE_PARSERS","REQUEST_METHOD_PARSERS","readConstraint","SERVICE_CONTACT_PARSERS","readContactInfo","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","readServiceContact","getAttribute","href","OWS_NAMESPACE_URIS","readContents","WMTSCapabilities","owsParser_","version","WMTSCapabilityObject","CONTENTS_PARSERS","readLayer","readTileMatrixSet","LAYER_PARSERS","readStyle","readTileMatrixSetLink","readDimensions","readResourceUrl","readBoundingBox","STYLE_PARSERS","readLegendUrl","TMS_LINKS_PARSERS","readTileMatrixLimitsList","TMS_LIMITS_LIST_PARSERS","readTileMatrixLimits","TMS_LIMITS_PARSERS","DIMENSION_PARSERS","WGS84_BBOX_READERS","readCoordinates","TMS_PARSERS","readTileMatrix","TM_PARSERS","isDefault","template","resourceType","resource","coordinates","legend","split","appendParams","uri","params","keyParams","k","encodeURIComponent","qs","WMTSTileGrid","origins","sizes","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","opt_extent","opt_matrixLimits","matrixLimits","supportedCRSPropName","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","tileWidthPropName","tileHeightPropName","metersPerUnit","getMetersPerUnit","switchOriginXY","getAxisOrientation","substr","a","elt","matrixAvailable","elt_ml","tileWidth","tileHeight","WMTS","imageSmoothing","requestEncoding","urls","reprojectionErrorThreshold","tileClass","tileLoadFunction","version_","format_","dimensions_","dimensions","layer_","matrixSet_","requestEncoding_","getKeyForDimensions_","tileUrlFunction","createFromWMTSTemplate","setUrls","setTileUrlFunction","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","toLowerCase","localContext_1","TileImage","optionsFromCapabilities","wmtsCap","config","layers","l","idx","tileMatrixSets","tileMatrixSet","el","supportedCRS","proj1","proj2","matrixSets","matrixSetObj","projConfig","switchXY","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","constraint","element","encodings","ol_control_Timeline","className","zoomButton","_scrollDiv","parent","_buttons","addButton","handleClick","refresh","_intervalDiv","_select","classList","remove","scrollListener","_setScrollLeft","clearTimeout","setTimeout","date","getDate","dateStart","dateEnd","scrollTimeout","onmove","_moving","_tline","_scrollLeft","maxWidth","minDate","Infinity","maxDate","graduation","setInterval","interval","getHTML","_getHTML","getFeatureDate","_getFeatureDate","endFeatureDate","_endFeatureDate","setFeatures","setMap","button","add","html","test","feature","isCollapsed","contains","collapse","collapsed","_features","_source","getFeatures","first","getMap","innerHTML","d2","tline","f","Date","end","div","_minDate","_maxDate","isFinite","delta","scale","_scale","_drawTime","line","lineHeight","fdiv","t","left","img","querySelectorAll","ondragstart","minWidth","pos","top","_nbline","setDate","anim","position","_getOffsetFromDate","_getDateFromOffset","scrollLeft","_getScrollLeft","dt","month","dmonth","tdiv","dx","heigth","year","getFullYear","setFullYear","dyear","setMonth","toLocaleDateString","dday","day","offdate","getMonth","roundDate","stick","_roundTo","r","getStartDate","getEndDate","timeline","Utils","getWMTSTimes","responseType","layerNames","defaultDate","noSwitcherDelete","layerCollection","run","TIME","btns","group","updateXYZLayer","GeoTIFFImage","Pane","ScatterChart","Splitpanes","isWebService","isGeoJson","mounted","view"],"sourceRoot":""}
{"version":3,"file":"js/4432.cb15b106.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/@radiantearth/stac-fields/I18N.js","webpack://@openeo/web-editor/./node_modules/@radiantearth/stac-fields/formatters.js","webpack://@openeo/web-editor/./node_modules/@radiantearth/stac-fields/helper.js","webpack://@openeo/web-editor/./node_modules/@radiantearth/stac-fields/datatypes.js"],"sourcesContent":["const Defaults = {\n\tcollatorOptions: {},\n\tnumberFormatterOptions: {\n\t\tmaximumFractionDigits: 10\n\t},\n\tdateFormatterOptions: {\n\t\tday: 'numeric',\n\t\tmonth: 'numeric',\n\t\tyear: 'numeric'\n\t},\n\tdateTimeFormatterOptions: {\n\t\tday: 'numeric',\n\t\tmonth: 'numeric',\n\t\tyear: 'numeric',\n\t\thour: 'numeric',\n\t\tminute: 'numeric',\n\t\tsecond: 'numeric',\n\t\ttimeZone: \"UTC\",\n\t\ttimeZoneName: \"short\"\n\t}\n};\n\nconst I18N = {\n\n\tlocales: [],\n\tcollator: new Intl.Collator([], Defaults.collatorOptions),\n\tdateFormatter: new Intl.DateTimeFormat([], Defaults.dateFormatterOptions),\n\tdateTimeFormatter: new Intl.DateTimeFormat([], Defaults.dateTimeFormatterOptions),\n\tnumberFormatter: new Intl.NumberFormat([], Defaults.numberFormatterOptions),\n\ttranslate: null, // function(value: string, vars: array|object = null) : string\n\n\tgetDefaults() {\n\t\treturn Defaults;\n\t},\n\n\tsetLocales(locales, dateFormatterOptions = {}, dateTimeFormatterOptions = {}, numberFormatterOptions = {}, collatorOptions = {}) {\n\t\tthis.locales = locales;\n\n\t\tcollatorOptions = Object.assign({}, Defaults.collatorOptions, collatorOptions);\n\t\tthis.collator = new Intl.Collator(locales, collatorOptions);\n\n\t\tdateFormatterOptions = Object.assign({}, Defaults.dateFormatterOptions, dateFormatterOptions);\n\t\tthis.dateFormatter = new Intl.DateTimeFormat(locales, dateFormatterOptions);\n\n\t\tdateTimeFormatterOptions = Object.assign({}, Defaults.dateTimeFormatterOptions, dateTimeFormatterOptions);\n\t\tthis.dateTimeFormatter = new Intl.DateTimeFormat(locales, dateTimeFormatterOptions);\n\n\t\tnumberFormatterOptions = Object.assign({}, Defaults.numberFormatterOptions, numberFormatterOptions);\n\t\tthis.numberFormatter = new Intl.NumberFormat(locales, numberFormatterOptions);\n\t},\n\n\tsetTranslator(fn) {\n\t\tthis.translate = fn;\n\t},\n\n\tformat(value, vars = null) {\n\t\tif (vars) {\n\t\t\tfor(let key in vars) {\n\t\t\t\tvalue = value.replaceAll(`{${key}}`, vars[key]);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n};\n\nmodule.exports = I18N;","const _ = require('./helper');\nconst DataTypes = require('./datatypes');\nconst I18N = require('./I18N');\nconst Registry = require('./registry');\n\nconst Formatters = {\n\n\tallowHtmlInCommonMark: false,\n\n\tformatUrl(value, field, spec = {}, context = null, parent = null) {\n\t\tlet title = _.isObject(parent) && typeof parent === 'string' ? parent.title : value;\n\t\treturn _.toLink(value, title, parent.rel || \"\");\n\t},\n\n\tformatLink(value) {\n\t\treturn _.toList(value, false, value => _.toLink(value.href, value.title, value.rel));\n\t},\n\n\tformatMediaType(value, field, spec = {}) {\n\t\treturn _.e(_.t(Formatters._formatMediaType(value, field, spec)));\n\t},\n\n\t_formatMediaType(value, field, spec = {}) {\n\t\tlet short = Boolean(spec.shorten);\n\n\t\tconst mediaType = Registry.getDependency('content-type');\n\t\tif (!mediaType) {\n\t\t\treturn short ? \"\" : _.e(value);\n\t\t}\n\n\t\tlet media;\n\t\ttry {\n\t\t\tmedia = mediaType.parse(value);\n\t\t} catch (error) {\n\t\t\tconsole.warn(error);\n\t\t\treturn short ? \"\" : _.e(value);\n\t\t}\n\n\t\tswitch(media.type) {\n\t\t\t// not supported: image/vnd.stac.geotiff; cloud-optimized=true\n\t\t\tcase 'image/tiff':\n\t\t\t\tif (media.parameters.application === \"geotiff\") {\n\t\t\t\t\tif (media.parameters.profile === \"cloud-optimized\") {\n\t\t\t\t\t\treturn short ? 'COG' : 'Cloud-Optimized GeoTIFF image';\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn short ? 'GeoTiff' : 'GeoTIFF image';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn short ? 'TIFF' : 'TIFF image';\n\t\t\t\t}\n\t\t\tcase 'image/jp2':\n\t\t\t\treturn short ? 'JPEG 2000' : 'JPEG 2000 image';\n\t\t\tcase 'image/png':\n\t\t\tcase 'image/apng':\n\t\t\tcase 'image/vnd.mozilla.apng':\n\t\t\t\treturn short ? 'PNG' : 'PNG image';\n\t\t\tcase 'image/gif':\n\t\t\t\treturn short ? 'GIF' : 'GIF image';\n\t\t\tcase 'image/jpeg':\n\t\t\tcase 'image/jpg':\n\t\t\t\treturn short ? 'JPEG' : 'JPEG image';\n\t\t\tcase 'image/webp':\n\t\t\t\treturn short ? 'WebP' : 'WebP image';\n\t\t\tcase 'image/bmp':\n\t\t\tcase 'image/x-bmp':\n\t\t\tcase 'image/x-ms-bmp':\n\t\t\tcase 'image/wbmp':\n\t\t\t\treturn short ? 'Bitmap' : 'Bitmap image';\n\t\t\tcase 'image/svg+xml':\n\t\t\t\treturn short ? 'SVG' : 'SVG vector image';\n\t\t\tcase 'text/csv':\n\t\t\t\treturn short ? 'CSV' : 'Comma-separated values (CSV)';\n\t\t\tcase 'text/xml':\n\t\t\tcase 'application/xml':\n\t\t\t\treturn 'XML';\n\t\t\tcase 'text/json':\n\t\t\tcase 'application/json':\n\t\t\t\treturn 'JSON';\n\t\t\tcase 'application/x-ndjson':\n\t\t\t\treturn short ? 'NDJSON' : 'Newline Delimited JSON';\n\t\t\tcase 'text/yaml':\n\t\t\tcase 'text/vnd.yaml':\n\t\t\tcase 'text/x-yaml':\n\t\t\tcase 'application/x-yaml':\n\t\t\t\treturn 'YAML';\n\t\t\tcase 'application/geo+json':\n\t\t\t\treturn 'GeoJSON';\n\t\t\tcase 'application/gml+xml':\n\t\t\t\treturn 'GML';\n\t\t\tcase 'application/vnd.google-earth.kml+xml':\n\t\t\tcase 'application/vnd.google-earth.kmz':\n\t\t\t\treturn 'KML';\n\t\t\tcase 'application/geopackage+vnd.sqlite3':\n\t\t\tcase 'application/geopackage+sqlite3':\n\t\t\t\treturn 'GeoPackage';\n\t\t\tcase 'text/html':\n\t\t\tcase 'application/html':\n\t\t\tcase 'application/xhtml+xml':\n\t\t\t\treturn short ? 'HTML' : 'HTML (Website)';\n\t\t\tcase 'text/plain':\n\t\t\t\treturn short ? 'Text' : 'Text document';\n\t\t\tcase 'text/markdown':\n\t\t\t\treturn short ? 'Markdown' : 'Markdown document';\n\t\t\tcase 'application/pdf':\n\t\t\t\treturn short ? 'PDF' : 'PDF document';\n\t\t\tcase 'application/zip':\n\t\t\t\treturn short ? 'ZIP' : 'ZIP archive';\n\t\t\tcase 'application/gzip':\n\t\t\t\treturn short ? 'GZIP' : 'GZIP archive';\n\t\t\tcase 'application/x-hdf':\n\t\t\t\treturn 'HDF';\n\t\t\tcase 'application/netcdf':\n\t\t\tcase 'application/x-netcdf':\n\t\t\t\treturn 'NetCDF';\n\t\t\tcase 'application/x.mrf':\n\t\t\t\treturn short ? 'MRF' : 'Meta Raster Format';\n\t\t\tcase 'application/wmo-GRIB2':\n\t\t\t\treturn 'GRIB 2';\n\t\t\tcase 'application/grib':\n\t\t\t\treturn `GRIB ${media.parameters.edition || \"\"}`.trim();\n\t\t\tcase 'application/bufr':\n\t\t\t\treturn `BUFR ${media.parameters.edition || \"\"}`.trim();\n\t\t\tcase 'application/octet-stream':\n\t\t\t\treturn short ? 'Binary' : 'Binary file';\n\t\t\tcase 'application/vnd.laszip':\n\t\t\t\treturn 'LASzip';\n\t\t\tcase 'application/vnd.laszip+copc': // https://github.com/copcio/copcio.github.io/issues/53\n\t\t\t\treturn short ? 'COPC' : 'Cloud-Optimized Point Cloud (LASzip)';\n\t\t\tcase 'application/vnd+zarr': // https://github.com/zarr-developers/zarr-specs/issues/123\n\t\t\t\treturn 'Zarr';\n\t\t\tcase 'application/x-parquet': // Inofficial\n\t\t\tcase 'application/vnd.apache.parquet': // Official (tbc): https://github.com/opengeospatial/geoparquet/issues/115\n\t\t\t\treturn 'Parquet'\n\t\t\tcase 'application/vnd.pmtiles':\n\t\t\t\treturn 'PMTiles';\n\t\t\tcase 'application/vnd.cov+json':\n\t\t\t\treturn 'CoverageJSON';\n\t\t\tcase 'application/vnd.flatgeobuf':\n\t\t\t\treturn 'FlatGeobuf'; // inofficial: https://github.com/flatgeobuf/flatgeobuf/discussions/112\n\t\t\tcase 'application/x-filegdb':\n\t\t\t\treturn short ? 'Geodatabase' : 'Esri File Geodatabase';\n\t\t\tcase 'application/vnd.nitf':\n\t\t\t\treturn short ? 'NITF' : 'National Imagery Transmission Format';\n\t\t\tcase 'application/3dtiles+json':\n\t\t\t\treturn '3D Tiles';\n\t\t\tdefault: {\n\t\t\t\tlet [group, format] = media.type.split('/');\n\t\t\t\tformat = _.formatKey(format.replace(/^(vnd|x)[.+-]/, ''));\n\t\t\t\tif (short) {\n\t\t\t\t\treturn format;\n\t\t\t\t}\n\t\t\t\tswitch(group) {\n\t\t\t\t\tcase 'audio':\n\t\t\t\t\t\treturn `${format} audio`;\n\t\t\t\t\tcase 'image':\n\t\t\t\t\t\treturn `${format} image`;\n\t\t\t\t\tcase 'font':\n\t\t\t\t\t\treturn `Font`;\n\t\t\t\t\tcase 'model':\n\t\t\t\t\t\treturn `${format} 3D model`;\n\t\t\t\t\tcase 'video':\n\t\t\t\t\t\treturn `${format} video`;\n\t\t\t\t\tcase 'text':\n\t\t\t\t\tcase 'application':\n\t\t\t\t\t\treturn format;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tformatTimestamp(value) {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\treturn I18N.dateTimeFormatter.format(new Date(value));\n\t\t\t} catch (error) {}\n\t\t}\n\t\treturn DataTypes.null();\n\t},\n\n\tformatPercent0to1(value, field, spec = {}) {\n\t\treturn DataTypes.number(value * 100, spec.unit);\n\t},\n\n\tformatDate(value) {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\treturn I18N.dateFormatter.format(new Date(value));\n\t\t\t} catch (error) {}\n\t\t}\n\t\treturn DataTypes.null();\n\t},\n\n\tformatDuration(value) {\n\t\tif (typeof value === 'string') {\n\t\t\tconst lib = Registry.getDependency('@musement/iso-duration');\n\t\t\tif (!lib) {\n\t\t\t\treturn _.e(value);\n\t\t\t}\n\t\t\tconst { isoDuration, en } = lib;\n\t\t\tisoDuration.setLocales({ en }, { fallbackLocale: 'en' });\n\t\t\tlet formatted = isoDuration(value).humanize('en');\n\t\t\tif (formatted.length === 0) {\n\t\t\t\treturn _.e(_.t('none'));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn _.e(formatted);\n\t\t\t}\n\t\t}\n\t\treturn DataTypes.null();\n\t},\n\n\tformatLanguageCode(value) {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn _.toList(value, true, Formatters.formatLanguageCode, false);\n\t\t}\n\t\telse if (typeof value !== 'string' || value.length < 2) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\tconst list = require('./languages.json');\n\t\tconst [code, ...rest] = value.split('-');\n\t\tif (code in list) {\n\t\t\tconst name = list[code];\n\t\t\tif (rest.length > 0) {\n\t\t\t\treturn _.e(_.t(`${name} (${rest.join(' ')})`));\n\t\t\t}\n\t\t\treturn _.e(_.t(name));\n\t\t}\n\t\treturn _.e(_.t(value));\n\t},\n\n\tformatLicense(value, field, spec = {}, context = null) {\n\t\tif (typeof value !== 'string' || value.length === 0) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\t// We could use the spdx-license-ids and/or spdx-to-html packages previously used in STAC Browser,\n\t\t// but let's try it without additional dependency for now.\n\t\tif (value !== 'other' && value !== 'proprietary' && value !== 'various' && value.match(/^[\\w\\.\\-]+$/i)) { // SPDX\n\t\t\treturn _.toLink(`https://spdx.org/licenses/${value}.html`, value, \"license\");\n\t\t}\n\t\t\n\t\tlet licenses = Array.isArray(context.links) ? context.links.filter(link => (_.isObject(link) && typeof link.href === 'string' && link.rel === 'license')) : [];\n\t\tif (licenses.length > 0) {\n\t\t\treturn _.toList(licenses, false, link => _.toLink(link.href, link.title || value, \"license\"));\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.string(value);\n\t\t}\n\t},\n\n\tformatProviders(value) {\n\t\treturn _.toList(value, false, provider => {\n\t\t\tlet name = provider.name;\n\t\t\tlet roles = '';\n\t\t\tlet description = '';\n\t\t\tif (typeof provider.url === 'string' && provider.url.length > 0) {\n\t\t\t\tname = _.toLink(provider.url, name);\n\t\t\t}\n\t\t\tif (Array.isArray(provider.roles) && provider.roles.length > 0) {\n\t\t\t\troles = provider.roles.map(r => DataTypes.format(r)).join(', ');\n\t\t\t\troles = ` (<em>${roles}</em>)`;\n\t\t\t}\n\t\t\tif (typeof provider.description === 'string' && provider.description.length > 0) {\n\t\t\t\tdescription = Formatters.formatCommonMark(provider.description);\n\t\t\t}\n\t\t\treturn `${name}${roles}${description}`;\n\t\t});\n\t},\n\n\tformatCommonMark(value) {\n\t\tif (typeof value !== 'string' || value.length === 0) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\tconst commonmark = Registry.getDependency('commonmark');\n\t\tlet html;\n\t\tif (commonmark) {\n\t\t\tlet reader = new commonmark.Parser();\n\t\t\tlet writer = new commonmark.HtmlRenderer({safe: !Formatters.allowHtmlInCommonMark, smart: true});\n\t\t\thtml = writer.render(reader.parse(value));\n\t\t}\n\t\telse if (Formatters.allowHtmlInCommonMark) {\n\t\t\thtml = value;\n\t\t}\n\t\telse {\n\t\t\thtml = _.e(value);\n\t\t}\n\t\treturn `<div class=\"description\">${html}</div>`;\n\t},\n\n\tformatSoftware(value) {\n\t\tif (!_.isObject(value)) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\tlet list = [];\n\t\tfor(let software in value) {\n\t\t\tlet version = value[software];\n\t\t\tif ((typeof version === 'string' && version.length > 0) || typeof version === 'number') {\n\t\t\t\tlist.push(`${software} (${version})`);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlist.push(software);\n\t\t\t}\n\t\t}\n\t\treturn _.toList(list, true, null, false);\n\t},\n\n\tformatDOI(value) {\n\t\tvalue = DataTypes.format(value);\n\t\treturn _.toLink(`http://doi.org/${value}`, value);\n\t},\n\n\tformatCRS(value) {\n\t\treturn _.toList(value, false, value => {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tlet title = value\n\t\t\t\t\t.replace(/^https?:\\/\\/www\\.opengis\\.net\\/def\\/crs\\//i, '') // HTTP(s) URI\n\t\t\t\t\t.replace(/^urn:ogc:def:crs:/i, ''); // OGC URN\n\t\t\t\treturn _.toLink(value, title);\n\t\t\t}\n\t\t\treturn DataTypes.format(value);\n\t\t});\n\t},\n\n\tformatCrsCode(value) {\n\t\tif (typeof value === 'string') {\n\t\t\tconst [authority, code] = value.split(':', 2);\n\t\t\tswitch(authority.toUpperCase()) {\n\t\t\t\tcase 'EPSG':\n\t\t\t\tcase 'ESRI':\n\t\t\t\tcase 'IAU_2015':\n\t\t\t\tcase 'IGNF':\n\t\t\t\tcase 'MKG':\n\t\t\t\tcase 'OGC':\n\t\t\t\t\treturn _.toLink(`https://spatialreference.org/ref/${authority.toLowerCase()}/${code}/`, value);\n\t\t\t\tdefault:\n\t\t\t\t\treturn DataTypes.string(value);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn DataTypes.null();\n\t},\n\n\t/**\n\t * @deprecated Use formatCrsCode instead\n\t */\n\tformatEPSG(value) {\n\t\tif (typeof value === 'number') {\n\t\t\treturn Formatters.formatCrsCode(`EPSG:${value}`);\n\t\t}\n\t\telse if (typeof value === 'string') {\n\t\t\treturn Formatters.formatCrsCode(value);\n\t\t}\n\t\treturn DataTypes.null();\n\t},\n\n\tformatExtent(value, field, spec = {}) {\n\t\tif (!Array.isArray(value) || value.length < 2) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\telse if (value[0] === value[1]) {\n\t\t\treturn DataTypes.format(value[0], spec.unit);\n\t\t}\n\t\telse if (value[0] === null) {\n\t\t\treturn `< ${DataTypes.format(value[1], spec.unit)}`;\n\t\t}\n\t\telse if (value[1] === null) {\n\t\t\treturn `> ${DataTypes.format(value[0], spec.unit)}`;\n\t\t}\n\t\telse {\n\t\t\treturn value.map(v => DataTypes.format(v, spec.unit)).join(' – ');\n\t\t}\n\t},\n\n\tformatHexColor(value) {\n\t\tif (typeof value !== 'string' || !value.match(/^#?[\\dA-F]{3,8}$/i)) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\tif (value.startsWith('#')) {\n\t\t\tvalue = value.substring(1);\n\t\t}\n\t\treturn `<div class=\"color\" style=\"background-color: #${value}\"><code class=\"color-code\">#${value}</code></div>`;\n\t},\n\n\tformatPROJJSON(value) {\n\t\tif (!_.isObject(value)) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\tif (_.isObject(value.id) && value.id.authority === 'EPSG' && typeof value.code === 'number' && value.code > 0) {\n\t\t\treturn 'EPSG ' + Formatters.formatEPSG(value);\n\t\t}\n\t\telse if (typeof value.name === 'string') {\n\t\t\treturn DataTypes.string(value.name);\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.object(value);\n\t\t}\n\t},\n\n\tformatTemporalExtent(value, field, spec = {}) {\t\n\t\tif (!Array.isArray(value) || value.length !== 2) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\tvalue = value.map(d => {\n\t\t\ttry {\n\t\t\t\treturn d ? new Date(d) : null;\n\t\t\t} catch(e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t});\n\n\t\ttry {\n\t\t\tconst [start, end] = value;\n\t\t\tif (start || end) {\n\t\t\t\tconst base = spec.shorten ? I18N.dateFormatter : I18N.dateTimeFormatter;\n\t\t\t\tif (!start) {\n\t\t\t\t\treturn _.t(\"Until {0}\", [base.format(end)]);\n\t\t\t\t}\n\t\t\t\telse if (!end) {\n\t\t\t\t\treturn _.t(\"{0} until present\", [base.format(start)]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn base.formatRange(start, end);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {}\n\n\t\treturn DataTypes.null();\n\t},\n\n\tformatTemporalExtents(value, field, spec = {}) {\n\t\tlet sortExtents = (a,b) => {\n\t\t\tif (a[0] === null) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn I18N.collator.compare(a[0], b[0]);\n\t\t\t}\n\t\t};\n\t\treturn _.toList(value, sortExtents, v => Formatters.formatTemporalExtent(v, field, spec));\n\t},\n\n\tformatWKT2(value) {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t\t\n\t\t// This is a VERY simplistic WKT2 formatter, which may fail to render properly in some cases.\n\t\tlet indent = -1;\n\t\tlet formatted;\n\t\ttry {\n\t\t\tformatted = value.replace(/([A-Z]+)\\[|\\]/ig, (match, keyword) => {\n\t\t\t\tif (match === ']') {\n\t\t\t\t\tindent--;\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tindent++;\n\t\t\t\t\tlet tabs = \"  \".repeat(indent);\n\t\t\t\t\treturn `\\n${tabs}${keyword}[`;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (e) {\n\t\t\t// In case the formatting did not work properly\n\t\t\t// (usually the number of [ and ] doesn't match)\n\t\t\t// just return the unformatted value\n\t\t\tformatted = value;\n\t\t\t\n\t\t}\n\n\t\treturn `<pre>${formatted}</pre>`;\n\t},\n\n\tfileSizeUnits: ['B', 'kB', 'MB', 'GB', 'TB'],\n\n\tformatFileSize(value) {\n\t\tif (typeof value !== 'number') {\n\t\t\treturn DataTypes.format(value);\n\t\t}\n\t\tvar i = value == 0 ? 0 : Math.floor( Math.log(value) / Math.log(1024) );\n\t\treturn _.unit(( value / Math.pow(1024, i) ).toFixed(2) * 1, Formatters.fileSizeUnits[i]);\n\t},\n\n\tformatChecksum(value) {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn DataTypes.null();\n\t\t}\n\n\t\tconst multihash = Registry.getDependency('multihashes');\n\t\tif (!multihash) {\n\t\t\treturn _.e(value);\n\t\t}\n\n\t\ttry {\n\t\t\tconst meta = multihash.decode(_.hexToUint8(value));\n\t\t\tconst name = _.e(meta.name);\n\t\t\tconst hex = _.e(_.uint8ToHex(meta.digest));\n\t\t\treturn `<div class=\"checksum\"><input class=\"checksum-input\" size=\"32\" value=\"${hex}\" readonly><br><span class=\"checksum-algo\">${_.t('Hashing algorithm:')} <strong>${name}</strong></span></div>`;\n\t\t} catch (error) {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t},\n\n\tfileDataTypes: {\n\t\t\"int8\": \"8-bit integer\",\n\t\t\"int16\": \"16-bit integer\",\n\t\t\"int32\": \"32-bit integer\",\n\t\t\"int64\": \"64-bit integer\",\n\t\t\"uint8\": \"unsigned 8-bit integer\",\n\t\t\"uint16\": \"unsigned 16-bit integer\",\n\t\t\"uint32\": \"unsigned 32-bit integer\",\n\t\t\"uint64\": \"unsigned 64-bit integer\",\n\t\t\"float16\": \"16-bit float\",\n\t\t\"float32\": \"32-bit float\",\n\t\t\"float64\": \"64-bit float\",\n\t\t\"cint16\": \"16-bit complex integer\",\n\t\t\"cint32\": \"32-bit complex integer\",\n\t\t\"cfloat32\": \"32-bit complex float\",\n\t\t\"cfloat64\": \"64-bit complex float\"\n\t},\n\n\tformatFileDataType(value) {\n\t\tif (value === \"other\") {\n\t\t\treturn _.t(\"non-standard\");\n\t\t}\n\t\telse if (typeof value === 'string' && value in Formatters.fileDataTypes) {\n\t\t\treturn _.abbrev(_.t(value), _.t(Formatters.fileDataTypes[value]));\n\t\t}\n\n\t\treturn DataTypes.null();\n\t},\n\n\tformatTransform(value) {\n\t\tif (Array.isArray(value) && value.length % 3 === 0) {\n\t\t\tlet rows = [];\n\t\t\tfor (let i = 0; i < value.length; i = i+3) {\n\t\t\t\tlet chunk = value.slice(i, i + 3);\n\t\t\t\trows.push(`[${Formatters.formatCSV(chunk)}]`);\n\t\t\t}\n\t\t\treturn rows.join('<br>');\n\t\t}\n\t\telse {\n\t\t\treturn Formatters.formatCSV(value);\n\t\t}\n\t},\n\n\tformatShape(value, field, spec = {}) {\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value.map(x => DataTypes.format(x, spec.unit)).join(' × ');\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.format(value, spec.unit);\n\t\t}\n\t},\n\n\tformatCSV(value) {\n\t\tif (Array.isArray(value)) {\n\t\t\tlet numeric = value.find(v => typeof v === 'number') !== undefined;\n\t\t\t// If there's potentially a comma in the values (decimal or thousand separators in numbers), use semicolon instead of comma.\n\t\t\treturn value.map(DataTypes.format).join(numeric ? '; ' : ', ');\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.format(value);\n\t\t}\n\t},\n\n\tformatImage(value, field) { // from url or link\n\t\tlet title = \"\";\n\t\tlet src = null;\n\t\tif (_.isObject(value)) {\n\t\t\tsrc = value.href;\n\t\t\ttitle = value.title || \"\";\n\t\t}\n\t\telse if (typeof value === 'string') {\n\t\t\tsrc = value;\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.format(src);\n\t\t}\n\n\t\treturn `<img src=\"${_.e(src)}\" title=\"${_.e(title)}\" class=\"${_.e(field.replace(':', '_'))}\">`;\n\t},\n\n\tformatPhone(value) {\n\t\treturn _.toLink(`tel:${value}`, value);\n\t},\n\n\tformatEmail(value) {\n\t\treturn _.toLink(`mailto:${value}`, value);\n\t},\n\n\tformatConcepts(value) {\n\t\treturn _.toList(value, false, concept => {\n\t\t\tif (!_.isObject(concept)) {\n\t\t\t\treturn DataTypes.format(concept);\n\t\t\t}\n\n\t\t\tlet html = \"\";\n\t\t\tif (concept.title) {\n\t\t\t\tlet title = concept.title;\n\t\t\t\tif (concept.url) {\n\t\t\t\t\ttitle = _.toLink(concept.url, concept.title);\n\t\t\t\t}\n\t\t\t\thtml += `<strong>${title}</strong> (<code>${_.e(concept.id)}</code>)`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet title = concept.id;\n\t\t\t\tif (concept.url) {\n\t\t\t\t\ttitle = _.toLink(concept.url, concept.id);\n\t\t\t\t}\n\t\t\t\thtml += `<strong><code>${title}</code></strong>`;\n\t\t\t}\n\t\t\tif (concept.description) {\n\t\t\t\thtml += `<br><small>${_.e(concept.description)}</small>`;\n\t\t\t}\n\t\t\treturn html;\n\t\t});\n\t},\n\n\tformatAddress(value) { // array or object\n\t\treturn _.toList(value, false, address => {\n\t\t\tif (!_.isObject(address)) {\n\t\t\t\treturn DataTypes.format(address);\n\t\t\t}\n\n\t\t\tlet lines = Array.isArray(address.deliveryPoint) ? address.deliveryPoint.slice(0) : [];\n\n\t\t\tif (address.postalCode && address.city) {\n\t\t\t\t// Try to create a compact address\n\t\t\t\tlet line = `${address.postalCode} ${address.city}`;\n\t\t\t\tif (address.administrativeArea) {\n\t\t\t\t\tline += ` (${address.administrativeArea})`;\n\t\t\t\t}\n\t\t\t\tif (typeof address.country === 'string' && address.country.length > 0) {\n\t\t\t\t\tif (address.country.length === 2 && address.country.toUpperCase() === address.country) { // is ISO code\n\t\t\t\t\t\tline = address.country + '-' + line;\n\t\t\t\t\t\tlines.push(line);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlines.push(line);\n\t\t\t\t\t\tlines.push(address.country.toUpperCase());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Long version of the address\n\t\t\t\tif (address.city) {\n\t\t\t\t\tlines.push(address.city);\n\t\t\t\t}\n\t\t\t\tif (address.administrativeArea) {\n\t\t\t\t\tlines.push(address.administrativeArea);\n\t\t\t\t}\n\t\t\t\tif (address.postalCode) {\n\t\t\t\t\tlines.push(address.postalCode);\n\t\t\t\t}\n\t\t\t\tif (typeof address.country === 'string' && address.country.length > 0) {\n\t\t\t\t\tlines.push(address.country.toUpperCase());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn DataTypes.string(lines.join(\"\\n\\n\"));\n\t\t});\n\t},\n\n\tformatGridCode(value) {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn DataTypes.format(value);\n\t\t}\n\n\t\tlet splitHalf = function(parts, value, labelA, labelB) {\n\t\t\tlet len = value.length;\n\t\t\tif ((len % 2) === 1) {\n\t\t\t\tparts.push(`Code: ${value}`);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet mid = len/2;\n\t\t\t\tlet a = value.substring(0, mid);\n\t\t\t\tparts.push(`${labelA}: ${a}`);\n\t\t\t\tlet b = value.substring(mid, len);\n\t\t\t\tparts.push(`${labelB}: ${b}`);\n\t\t\t}\n\t\t};\n\n\t\tlet [designator, code] = value.split(/-(.*)/);\n\t\tlet parts = [];\n\t\tswitch(designator) {\n\t\t\tcase 'MGRS': \n\t\t\t\tparts.push(_.abbrev(_.t(designator), _.t('Military Grid Reference System')));\n\t\t\t\tlet [, utm, band, sq, coord] = code.match(/^(\\d{2})([C-X])([A-Z]{2})(\\d*)$/);\n\t\t\t\tparts.push(`${_.t(\"UTM Zone\")}: ${utm}`);\n\t\t\t\tparts.push(`${_.t(\"Latitude Band\")}: ${band}`);\n\t\t\t\tparts.push(`${_.t(\"Square Identifier\")}: ${sq}`);\n\t\t\t\tif (coord) {\n\t\t\t\t\tsplitHalf(parts, coord, _.t(\"Easting\"), _.t(\"Northing\"));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'MSIN':\n\t\t\t\tparts.push(_.t('MODIS Sinusoidal Tile Grid'));\n\t\t\t\tsplitHalf(parts, code, _.t('Horizontal'), _.t('Vertical'));\n\t\t\t\tbreak;\n\t\t\tcase 'WRS1':\n\t\t\tcase 'WRS2':\n\t\t\t\tlet version = designator.substring(3,4);\n\t\t\t\tparts.push(_.abbrev(_.t('WRS-' + version), _.t('Worldwide Reference System ' + version)));\n\t\t\t\tsplitHalf(parts, code, _.t('Path'), _.t('Row'));\n\t\t\t\tbreak;\n\t\t\tcase 'DOQ':\n\t\t\t\tparts.push(_abbrev(_.t(designator), _.t('Digital Orthophoto Quadrangle')));\n\t\t\t\tparts.push(`${_.t(\"Quadrangle\")}: ${code}`);\n\t\t\t\tbreak;\n\t\t\tcase 'DOQQ':\n\t\t\t\tparts.push(_abbrev(_.t(designator), _.t('Digital Orthophoto Quarter Quadrangle')));\n\t\t\t\tlet quad = code.substr(0, code.length - 2);\n\t\t\t\tparts.push(`${_.t(\"Quadrangle\")}: ${quad}`);\n\t\t\t\tlet quarter = code.substr(-2);\n\t\t\t\tlet a = quarter[0] === 'N' ? _.t('North') : _.t('South');\n\t\t\t\tlet b = quarter[1] === 'E' ? _.t('East') : _.t('West');\n\t\t\t\tparts.push(`${_.t(\"Quarter\")}: ${a} ${b}`);\n\t\t\t\tbreak;\n\t\t\tcase 'MXRA':\n\t\t\t\tparts.push(_.t('Maxar ARD Tile Grid'));\n\t\t\t\tlet [zone, quadkey] = code.split(/-(.*)/);\n\t\t\t\tif (zone.startsWith('Z')) {\n\t\t\t\t\tzone = zone.substring(1);\n\t\t\t\t}\n\t\t\t\tparts.push(`${_.t(\"UTM Zone\")}: ${zone}`);\n\t\t\t\tparts.push(`${_.t(\"Quadkey\")}: ${quadkey}`);\n\t\t\t\tbreak;\n\t\t\tcase 'EASE':\n\t\t\t\tlet [dggs, components] = code.split('-');\n\t\t\t\tif (dggs === 'DGGS') {\n\t\t\t\t\tparts.push(_.t('EASE-DGGS'));\n\t\t\t\t\tlet [level, rowcol, ...fractions] = components.split('.');\n\t\t\t\t\tparts.push(`${_.t(\"Level\")}: ${level}`);\n\t\t\t\t\tif (rowcol.length === 6) {\n\t\t\t\t\t\tparts.push(`${_.t(\"Level 0 row cell\")}: ${rowcol.substring(0,3)}`);\n\t\t\t\t\t\tparts.push(`${_.t(\"Level 0 column cell\")}: ${rowcol.substring(3,6)}`);\n\t\t\t\t\t\tfor(let i in fractions) {\n\t\t\t\t\t\t\tlet value = fractions[i];\n\t\t\t\t\t\t\tif (value.length === 2) {\n\t\t\t\t\t\t\t\tparts.push(`${_.t(\"Fraction of level {i} row cell\", {i})}: ${value[0]}`);\n\t\t\t\t\t\t\t\tparts.push(`${_.t(\"Fraction of level {i} column cell\", {i})}: ${value[1]}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tcase 'CDEM':\n\t\t\t\tlet [, n, e] = code.match(/^([A-Z]\\d+)([A-Z]\\d+)$/);\n\t\t\t\tparts.push(_.t(\"Copernicus Digital Elevation Model Grid\"));\n\t\t\t\tparts.push(`${_.t(\"Easting\")}: ${e}`);\n\t\t\t\tparts.push(`${_.t(\"Northing\")}: ${n}`);\n\t\t\tdefault:\n\t\t\t\tparts.push(value);\n\t\t}\n\n\t\treturn parts.join('<br>');\n\t}\n\n};\n\nmodule.exports = Formatters;","const I18N = require('./I18N');\r\n\r\nconst _ = {\r\n\r\n\te(str) {\r\n\t\tif (typeof str !== 'string') {\r\n\t\t\tstr = String(str);\r\n\t\t}\r\n\t\treturn str.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, '&apos;');\r\n\t},\r\n\r\n\tt(value, vars = null) {\r\n\t\tif (typeof I18N.translate === 'function') {\r\n\t\t\treturn I18N.translate(value, vars);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn I18N.format(value, vars);\r\n\t\t}\r\n\t},\r\n\t\r\n\ttoNothing(label = null) {\r\n\t\tif (label === null) {\r\n\t\t\tlabel = _.t('n/a');\r\n\t\t}\r\n\t\treturn `<i class=\"null\">${label}</i>`;\r\n\t},\r\n\r\n\ttoList(list, sort = false, formatter = null, ordered = null) {\r\n\t\tlet tag = ordered === true ? 'ol' : 'ul';\r\n\t\tif (!Array.isArray(list)) {\r\n\t\t\tlist = [list];\r\n\t\t}\r\n\t\tif (sort) {\r\n\t\t\tlist = list.slice(0);\r\n\t\t\tif (typeof sort === 'function') {\r\n\t\t\t\tlist.sort(sort);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.sort();\r\n\t\t\t}\r\n\t\t\tif (ordered === null) {\r\n\t\t\t\ttag = 'ol';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (typeof formatter === 'function') {\r\n\t\t\tlist = list.map(formatter);\r\n\t\t}\r\n\t\tif (list.length === 0) {\r\n\t\t\treturn _.toNothing();\r\n\t\t}\r\n\t\telse if (list.length === 1) {\r\n\t\t\treturn list[0];\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn `<${tag}><li>${list.join(\"</li><li>\")}</li></${tag}>`;\r\n\t\t}\r\n\t},\r\n\r\n\ttoLink(url, title = \"\", rel = \"\", target = \"_blank\") {\r\n\t\tif (!title) {\r\n\t\t\tif (url.length > 50) {\r\n\t\t\t\ttitle = url.replace(/^\\w+:\\/\\/([^\\/]+)((\\/[^\\/\\?]+)*\\/([^\\/\\?]+)(\\?.*)?)?$/i, function(...x) {\r\n\t\t\t\t\tif (x[4]) {\r\n\t\t\t\t\t\treturn x[1] + '​/[…]/​' + x[4]; // There are invisible zero-width whitespaces after and before the slashes. It allows breaking the link in the browser. Be careful when editing.\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn x[1];\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttitle = url.replace(/^\\w+:\\/\\//i, '');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn `<a href=\"${_.e(url)}\" rel=\"${_.e(rel)}\" target=\"${_.e(target)}\">${_.e(title)}</a>`;\r\n\t},\r\n\r\n\ttoObject(obj, formatter = null, keyFormatter = null, keyOrder = [], filter = null, path = []) {\r\n\t\tlet html = '<dl>';\r\n\t\tlet keys = Array.isArray(keyOrder) && keyOrder.length >= 2 ? keyOrder : Object.keys(obj);\r\n\t\tfor(let key of keys) {\r\n\t\t\tif (!(key in obj) || (typeof filter === 'function' && path.length > 0 && !filter(path[0], path.concat([key]))) ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet label;\r\n\t\t\tif (typeof keyFormatter === 'function') {\r\n\t\t\t\tlabel = keyFormatter(key, obj);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel = _.formatKey(key, true);\r\n\t\t\t}\r\n\t\t\tlet value = obj[key];\r\n\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\tvalue = formatter(value, key, obj);\r\n\t\t\t}\r\n\t\t\thtml += `<dt>${label}</dt><dd>${value}</dd>`;\r\n\t\t}\r\n\t\thtml += `</dl>`;\r\n\t\treturn html;\r\n\t},\r\n\r\n\tabbrev(short, long) {\r\n\t\treturn `<abbr title=\"${_.e(long)}\">${_.e(short)}</abbr>`;\r\n\t},\r\n\r\n\tisObject(obj) {\r\n\t\treturn (typeof obj === 'object' && obj === Object(obj) && !Array.isArray(obj));\r\n\t},\r\n\r\n\tformatKey(key, prefix = false) {\r\n\t\tif (key.includes('/')) {\r\n\t\t\t// Slashes are strong indicators for URIs or media types, don't format\r\n\t\t\treturn _.e(_.t(key));\r\n\t\t}\r\n\t\tif (prefix === false) {\r\n\t\t\tkey = key.replace(/^[\\w-]+:/i, '');\r\n\t\t}\r\n\t\tlet formatted = key.split(/[:_\\-\\s]/g).map(part => part.substr(0, 1).toUpperCase() + part.substr(1)).join(' ');\r\n\t\treturn _.e(_.t(formatted));\r\n\t},\r\n\r\n\thexToUint8(hexString) {\r\n\t\tif(hexString.length === 0 || hexString.length % 2 !== 0){\r\n\t\t\tthrow new Error(`The string \"${hexString}\" is not valid hex.`);\r\n\t\t}\r\n\t\treturn new Uint8Array(hexString.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\r\n\t},\r\n\r\n\tuint8ToHex(bytes) {\r\n\t\treturn bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\r\n\t},\r\n\r\n\tkeysFromListOfObjects(objectList) {\r\n\t\treturn objectList.reduce(\r\n\t\t\t(arr, o) => Object.keys(o).reduce(\r\n\t\t\t\t(a, k) => {\r\n\t\t\t\t\tif (a.indexOf(k) == -1) {\r\n\t\t\t\t\t\ta.push(k);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn a;\r\n\t\t\t\t},\r\n\t\t\t\tarr\r\n\t\t\t),\r\n\t\t\t[]\r\n\t\t);\r\n\t},\r\n\r\n\tunit(value, unit = '') {\r\n\t\tif (typeof unit === 'string' && unit.length > 0) {\r\n\t\t\tunit = _.t(unit);\r\n\t\t\treturn `${value}&nbsp;<span class=\"unit\">${unit}</unit>`;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n};\r\n\r\nmodule.exports = _;","const _ = require('./helper');\nconst I18N = require('./I18N');\n\nconst DataTypes = {\n\n\tarray(arr, sort = false, unit = '') {\n\t\treturn _.toList(arr, sort, v => DataTypes.format(v, unit));\n\t},\n\t\n\tobject(obj) {\n\t\treturn _.toObject(obj, v => DataTypes.format(v));\n\t},\n\t\n\tnull(label = null) {\n\t\tif (label === null) {\n\t\t\tlabel = _.t('n/a');\n\t\t}\n\t\treturn _.toNothing(label);\n\t},\n\t\n\tnumber(num, unit = '') {\n\t\tif (typeof num !== 'number') {\n\t\t\tnum = parseFloat(num);\n\t\t}\n\t\treturn _.unit(I18N.numberFormatter.format(num), unit);\n\t},\n\n\tstring(str, unit = '') {\n\t\treturn _.unit(_.e(str).replace(/(\\r\\n|\\r|\\n){2,}/g, '<br>'), unit);\n\t},\n\t\n\tboolean(bool) {\n\t\treturn bool ? '✔️' : '❌';\n\t},\n\t\n\tformat(value, unit = '') {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn DataTypes.boolean(value);\n\t\t}\n\t\telse if (typeof value === 'number') {\n\t\t\treturn DataTypes.number(value, unit);\n\t\t}\n\t\telse if (typeof value === 'string') {\n\t\t\treturn DataTypes.string(value, unit);\n\t\t}\n\t\telse if (Array.isArray(value)) {\n\t\t\treturn DataTypes.array(value, unit);\n\t\t}\n\t\telse if (_.isObject(value)) {\n\t\t\treturn DataTypes.object(value);\n\t\t}\n\t\telse {\n\t\t\treturn DataTypes.null();\n\t\t}\n\t}\n\n};\n\nmodule.exports = DataTypes;"],"names":["Defaults","collatorOptions","numberFormatterOptions","maximumFractionDigits","dateFormatterOptions","day","month","year","dateTimeFormatterOptions","hour","minute","second","timeZone","timeZoneName","I18N","locales","collator","Intl","Collator","dateFormatter","DateTimeFormat","dateTimeFormatter","numberFormatter","NumberFormat","translate","getDefaults","setLocales","this","Object","assign","setTranslator","fn","format","value","vars","key","replaceAll","module","exports","_","DataTypes","Registry","Formatters","allowHtmlInCommonMark","formatUrl","field","spec","context","parent","title","isObject","toLink","rel","formatLink","toList","href","formatMediaType","e","t","_formatMediaType","short","Boolean","shorten","mediaType","getDependency","media","parse","error","console","warn","type","parameters","application","profile","edition","trim","group","split","formatKey","replace","formatTimestamp","Date","null","formatPercent0to1","number","unit","formatDate","formatDuration","lib","isoDuration","en","fallbackLocale","formatted","humanize","length","formatLanguageCode","Array","isArray","list","code","rest","name","join","formatLicense","match","licenses","links","filter","link","string","formatProviders","provider","roles","description","url","map","r","formatCommonMark","commonmark","html","reader","Parser","writer","HtmlRenderer","safe","smart","render","formatSoftware","software","version","push","formatDOI","formatCRS","formatCrsCode","authority","toUpperCase","toLowerCase","formatEPSG","formatExtent","v","formatHexColor","startsWith","substring","formatPROJJSON","id","object","formatTemporalExtent","d","start","end","base","formatRange","formatTemporalExtents","sortExtents","a","b","compare","formatWKT2","indent","keyword","tabs","repeat","fileSizeUnits","formatFileSize","i","Math","floor","log","pow","toFixed","formatChecksum","multihash","meta","decode","hexToUint8","hex","uint8ToHex","digest","fileDataTypes","formatFileDataType","abbrev","formatTransform","rows","chunk","slice","formatCSV","formatShape","x","numeric","undefined","find","formatImage","src","formatPhone","formatEmail","formatConcepts","concept","formatAddress","address","lines","deliveryPoint","postalCode","city","line","administrativeArea","country","formatGridCode","splitHalf","parts","labelA","labelB","len","mid","designator","utm","band","sq","coord","_abbrev","quad","substr","quarter","zone","quadkey","dggs","components","level","rowcol","fractions","n","str","String","toNothing","label","sort","formatter","ordered","tag","target","toObject","obj","keyFormatter","keyOrder","path","keys","concat","long","prefix","includes","part","hexString","Error","Uint8Array","byte","parseInt","bytes","reduce","toString","padStart","keysFromListOfObjects","objectList","arr","o","k","indexOf","array","num","parseFloat","boolean","bool"],"sourceRoot":""}
{"version":3,"file":"js/8731.aff251da.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/ModelBuilder.vue?3ecb","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Block.vue?e333","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/BlockParameter.vue?5d1f","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/model-builder/BlockParameter.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/BlockParameter.vue?c62f","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/BlockParameter.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/config.js","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/model-builder/Block.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Block.vue?0c0a","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Block.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Edge.vue?86a1","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/segment.js","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/model-builder/Edge.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Edge.vue?9654","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/model-builder/Edge.vue","webpack://@openeo/web-editor/node_modules/@openeo/vue-components/components/ModelBuilder.vue","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/ModelBuilder.vue?8e67","webpack://@openeo/web-editor/./node_modules/@openeo/vue-components/components/ModelBuilder.vue","webpack://@openeo/web-editor/./node_modules/intersects/box-box.js","webpack://@openeo/web-editor/./node_modules/intersects/box-line.js","webpack://@openeo/web-editor/./node_modules/intersects/box-point.js","webpack://@openeo/web-editor/./node_modules/intersects/line-box.js","webpack://@openeo/web-editor/./node_modules/intersects/line-line.js","webpack://@openeo/web-editor/./node_modules/intersects/line-point.js","webpack://@openeo/web-editor/./node_modules/intersects/line-polygon.js","webpack://@openeo/web-editor/./node_modules/intersects/lineToLine.js","webpack://@openeo/web-editor/./node_modules/intersects/lineToPolygon.js","webpack://@openeo/web-editor/./node_modules/intersects/polygon-point.js","webpack://@openeo/web-editor/./node_modules/intersects/polygon-polygon.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"div\",class:_vm.classes,style:(_vm.style),attrs:{\"id\":_vm.id,\"tabindex\":\"0\"},on:{\"mousemove\":_vm.onMouseMove,\"mousedown\":_vm.onMouseDown,\"wheel\":_vm.onMouseWheel,\"keydown\":_vm.onKeyDown,\"focus\":function($event){_vm.hasFocus = true},\"blur\":function($event){_vm.hasFocus = false}}},[_c('svg',{staticClass:\"canvas\",attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"version\":\"1.1\"}},[_vm._l((_vm.edges),function(edge){return _c('Edge',{key:edge.id,attrs:{\"id\":edge.id,\"parameter1\":edge.parameter1,\"parameter2\":edge.parameter2,\"selected\":edge.selected,\"inactive\":edge.inactive,\"issues\":edge.issues,\"state\":_vm.state},on:{\"mounted\":node => _vm.mount(edge, node),\"unmounted\":() => _vm.mount(edge),\"position\":function($event){return _vm.updateEdgePos(edge, arguments)}}})}),_vm._l((_vm.hiddenParameterRefEdges),function(edge){return _c('Edge',{key:edge.id,attrs:{\"id\":edge.id,\"parameter1\":edge.parameter1,\"parameter2\":edge.parameter2,\"inactive\":true,\"lineColor\":[200,200,200,1],\"lineWidth\":2,\"state\":_vm.state},on:{\"mounted\":node => _vm.mount(edge, node),\"unmounted\":() => _vm.mount(edge)}})}),(_vm.linkingLine)?_c('line',_vm._b({},'line',_vm.linkingLine,false)):_vm._e(),(_vm.selectRect)?_c('rect',_vm._b({},'rect',_vm.selectRect,false)):_vm._e()],2),_c('div',{staticClass:\"blocks\"},_vm._l((_vm.blocks),function(block){return _c('Block',{key:block.id,attrs:{\"id\":block.id,\"type\":block.type,\"spec\":block.spec,\"state\":_vm.state,\"selected\":block.selected,\"position\":block.position,\"origin\":block.origin,\"process_id\":block.process_id,\"namespace\":block.namespace,\"result\":block.result,\"args\":block.arguments,\"description\":block.description},on:{\"update\":(...args) => _vm.updateBlock(block, ...args),\"mounted\":node => _vm.mount(block, node),\"unmounted\":() => _vm.mount(block),\"move\":_vm.startDragBlock}})}),1),(_vm.state.scale < 0.7 || _vm.showZoomInfo)?_c('div',{staticClass:\"zoomInfo\"},[(_vm.state.scale < 0.7)?_c('div',[_vm._v(\" Zoom in for more details. \")]):_vm._e(),(_vm.showZoomInfo)?_c('div',[_vm._v(\" Zoom with \"),_c('kbd',[_vm._v(\"STRG\")]),_vm._v(\" or \"),_c('kbd',[_vm._v(\"Meta\")]),_vm._v(\" key and the mouse wheel. \")]):_vm._e()]):_vm._e(),(_vm.parameterViewer)?_c('ParameterViewer',_vm._b({on:{\"close\":function($event){_vm.parameterViewer = null}}},'ParameterViewer',_vm.parameterViewer,false)):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{ref:\"div\",class:_vm.containerClasses,style:(_vm.styles),attrs:{\"id\":'block' + this.id},on:{\"mousedown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"]))return null;$event.preventDefault();$event.stopPropagation();if('button' in $event && $event.button !== 0)return null;return _vm.onMouseDown.apply(null, arguments)}}},[_c('div',{staticClass:\"blockTitle\",on:{\"mousedown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"]))return null;$event.preventDefault();$event.stopPropagation();if('button' in $event && $event.button !== 0)return null;return _vm.emitDrag.apply(null, arguments)}}},[_c('span',{staticClass:\"titleText\",attrs:{\"title\":_vm.plainTitle}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.invalid),expression:\"invalid\"}],staticClass:\"invalid\",attrs:{\"title\":\"Process or Collection not supported!\"}},[_c('i',{staticClass:\"fas fa-exclamation-triangle\"})]),_vm._v(\" \"+_vm._s(_vm.name)+\" \"),(_vm.showId)?_c('span',{staticClass:\"blockId\"},[_vm._v(_vm._s(_vm.id))]):_vm._e()]),_c('div',{staticClass:\"blockicon\",on:{\"mousedown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"left\",37,$event.key,[\"Left\",\"ArrowLeft\"]))return null;$event.preventDefault();$event.stopPropagation();if('button' in $event && $event.button !== 0)return null;return _vm.focus()}}},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsDescription && !_vm.showDescriptionField),expression:\"allowsDescription && !showDescriptionField\"}],staticClass:\"addDescription\",attrs:{\"title\":\"Add description\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.addDescription()}}},[_c('i',{staticClass:\"fas fa-comment-medical\"})]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsDelete),expression:\"allowsDelete\"}],staticClass:\"delete\",attrs:{\"title\":\"Remove (DEL)\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.remove()}}},[_c('i',{staticClass:\"fas fa-trash\"})]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsInfo),expression:\"allowsInfo\"}],staticClass:\"info\",attrs:{\"title\":\"Details\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.showInfo()}}},[_c('i',{staticClass:\"fas fa-info\"})]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.allowsParameterChange),expression:\"allowsParameterChange\"}],staticClass:\"settings\",attrs:{\"title\":_vm.isParameter ? 'Edit parameter' : 'Change parameter values'},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.edit.apply(null, arguments)}}},[_c('i',{staticClass:\"fas fa-edit\"})])])]),_c('div',{staticClass:\"inout\"},[_c('div',{staticClass:\"inputs\"},_vm._l((_vm.parameters),function(param,i){return _c('BlockParameter',{key:i,ref:\"parameters\",refInFor:true,attrs:{\"state\":_vm.state,\"value\":_vm.args[param.name],\"name\":param.name,\"description\":param.description,\"optional\":param.optional,\"deprecated\":param.deprecated,\"experimental\":param.experimental,\"default\":param.default,\"schema\":param.schema},on:{\"input\":value => _vm.updateArgument(param.name, value),\"edgesChanged\":function($event){return _vm.edgesChanged(param, $event)}}})}),1),_c('div',{staticClass:\"outputs\"},[_c('BlockParameter',_vm._b({ref:\"output\",attrs:{\"state\":_vm.state,\"label\":_vm.outputLabel},on:{\"input\":_vm.updateResult}},'BlockParameter',_vm.output,false))],1)]),(_vm.showDescriptionField)?_c('textarea',{ref:\"descriptionField\",staticClass:\"editDescription\",attrs:{\"readonly\":!_vm.state.editable,\"placeholder\":\"Type description here...\"},domProps:{\"value\":_vm.description},on:{\"input\":_vm.updateDescription,\"blur\":_vm.updateDescription,\"mousedown\":function($event){$event.stopPropagation();}}}):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{class:_vm.classes},[(!_vm.output)?_c('div',_vm._g({ref:\"circle\",class:_vm.circleClasses},_vm.circleListeners)):_vm._e(),_c('span',_vm._g({staticClass:\"text\"},_vm.textListeners),[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.unspecified),expression:\"unspecified\"}],staticClass:\"unspecified\",attrs:{\"title\":\"Parameter is likely unsupported!\"}},[_c('i',{staticClass:\"fas fa-exclamation-triangle\"})]),_c('span',{staticClass:\"label\"},[_vm._v(_vm._s(_vm.displayLabel))]),(_vm.displayValue.length)?[_vm._v(\": \")]:_vm._e(),_c('span',{staticClass:\"value\",domProps:{\"innerHTML\":_vm._s(_vm.displayValue)}})],2),(_vm.output)?_c('div',_vm._g({ref:\"circle\",class:_vm.circleClasses,attrs:{\"title\":\"Output of the process\"}},_vm.circleListeners)):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div :class=\"classes\">\r\n        <div v-if=\"!output\" ref=\"circle\" :class=\"circleClasses\" v-on=\"circleListeners\"></div>\r\n        <span class=\"text\" v-on=\"textListeners\">\r\n            <span v-show=\"unspecified\" class=\"unspecified\" title=\"Parameter is likely unsupported!\">\r\n                <i class=\"fas fa-exclamation-triangle\"></i>\r\n            </span>\r\n            <span class=\"label\">{{ displayLabel }}</span><template v-if=\"displayValue.length\">: </template>\r\n            <span class=\"value\" v-html=\"displayValue\"></span>\r\n        </span>\r\n        <div v-if=\"output\" ref=\"circle\" :class=\"circleClasses\" v-on=\"circleListeners\" title=\"Output of the process\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ProcessSchema } from '@openeo/js-commons';\r\nimport { ProcessGraph } from '@openeo/js-processgraphs';\r\nimport Utils from '../../utils.js';\r\n\r\nexport default {\r\n    name: 'BlockParameter',\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'output'\r\n        },\r\n        description: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        optional: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        deprecated: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        experimental: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        default: {},\r\n        value: {},\r\n        schema: {\r\n            type: [Object, Array],\r\n            default: null\r\n        },\r\n        label: {\r\n            type: String\r\n        },\r\n        output: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        state: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            // The attached edges\r\n            edges: []\r\n        };\r\n    },\r\n    computed: {\r\n        schemas() {\r\n            if (this.schema instanceof ProcessSchema) {\r\n                return this.schema;\r\n            }\r\n            else {\r\n                return new ProcessSchema(this.schema);\r\n            }\r\n        },\r\n        hasValue() {\r\n            return (this.value !== undefined);\r\n        },\r\n        textListeners() {\r\n            if (this.allowsArgumentChange) {\r\n                return {\r\n                    click: this.openEditorForArguments\r\n                };\r\n            }\r\n            else {\r\n                return {};\r\n            }\r\n        },\r\n        circleListeners() {\r\n            var listeners = {};\r\n            if (this.state.editable) {\r\n                listeners.mousedown = event => {\r\n                    if (event.which == 1) {\r\n                        this.state.root.link(this);\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                };\r\n\r\n                if (this.output) {\r\n                    // Allow specifying the result node\r\n                    listeners.dblclick = event => {\r\n                        if (event.which == 1) {\r\n                            this.$emit('input', true);\r\n                        }\r\n                    };\r\n                }\r\n\r\n                // Handle focus on the I/Os\r\n                listeners.mouseover = () => this.state.linkFrom && this.state.root.link(this);\r\n                listeners.mouseout = () => this.state.linkTo && this.state.root.unlink(this);\r\n            }\r\n            return listeners;\r\n        },\r\n        classes() {\r\n            let classes = [\r\n                this.output ? 'output' : 'input',\r\n                'connector',\r\n                'field_' + this.name,\r\n                (this.hasValue || this.optional || this.output || this.getEdgeCount() > 0) ? 'hasValue' : 'noValue',\r\n            ];\r\n            if (this.allowsArgumentChange) {\r\n                classes.push(\"editable\");\r\n            }\r\n            return classes;\r\n        },\r\n        unspecified() {\r\n            return !this.$parent.invalid && this.state.root.hasProcesses && this.schemas.unspecified;\r\n        },\r\n        circleClasses() {\r\n            var classes = ['circle'];\r\n            if (this.getEdgeCount() > 0) {\r\n                classes.push('io_active');\r\n            }\r\n\r\n            for (var edge of this.edges) {\r\n                if (edge.selected) {\r\n                    classes.push('io_selected');\r\n                }\r\n                else if (edge.issues.length > 0) {\r\n                    classes.push('io_issues');\r\n                }\r\n            }\r\n\r\n            if (this.state.linkFrom == this || this.state.linkTo == this) {\r\n                classes.push('io_selected');\r\n            }\r\n            return classes;\r\n        },\r\n        displayValue() {\r\n            var maxLength = 38 - this.displayLabel.length;\r\n            var formattedValue = null;\r\n            if (this.isEditable && !this.state.compactMode && !Utils.isRef(this.value)) {\r\n                let value = typeof this.value !== 'undefined' ? this.value : this.default;\r\n                if (typeof value !== 'undefined') {\r\n                    formattedValue = this.formatValue(value, maxLength, true);\r\n                }\r\n            }\r\n\r\n            if (typeof formattedValue === 'string') {\r\n                if (formattedValue.length === 0) {\r\n                    formattedValue = '<em>Empty</em>';\r\n                }\r\n            }\r\n            else {\r\n                formattedValue = '';\r\n            }\r\n            return formattedValue;\r\n        },\r\n        displayLabel() {\r\n            if (this.output && this.state.compactMode) {\r\n                return '';\r\n            }\r\n            else if (typeof this.label === 'string' && (this.label.length > 0 || this.output)) {\r\n                return this.label;\r\n            }\r\n            else {\r\n                return this.name;\r\n            }\r\n        },\r\n        isArrayType() {\r\n            return this.schemas.nativeDataType() === 'array';\r\n        },\r\n        isObjectType() {\r\n            return this.schemas.nativeDataType() === 'object';\r\n        },\r\n        isEditable() {\r\n            return !this.output && this.schemas.isEditable();\r\n        },\r\n        allowsArgumentChange() {\r\n            return (!this.output && this.schemas.isEditable());\r\n        },\r\n        allowsMultipleInputs() {\r\n            // Is there any type that potentially allows multiple inputs?\r\n            return this.isArrayType || this.isObjectType || this.schemas.nativeDataType() === 'any';\r\n        },\r\n    },\r\n    watch: {\r\n        edges() {\r\n            this.updateEdgeStatus();\r\n            this.$emit('edgesChanged', this.edges, this);\r\n        },\r\n        value: {\r\n            immediate: true,\r\n            handler() {\r\n                this.updateEdgeStatus();\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        updateEdgeStatus() {\r\n            if (!this.output) {\r\n                for(var edge of this.edges) {\r\n                    edge.inactive = !this.isEdgeUsed(edge);\r\n                }\r\n            }\r\n        },\r\n        getCirclePosition() {\r\n            try {\r\n                var dim = this.state.root.domBoundingBox(this.$refs.circle);\r\n                var blocksDim = this.state.root.getDimensions();\r\n                var x = (dim.offsetLeft - blocksDim.offsetLeft) + dim.width / 2;\r\n                var y = (dim.offsetTop - blocksDim.offsetTop) + dim.height / 2;\r\n                return [x, y];\r\n            } catch (error) {\r\n                console.warn(error);\r\n                return null;\r\n            }\r\n        },\r\n        openEditorForArguments() {\r\n            if (this.allowsArgumentChange) {\r\n                this.$parent.showArguments(this.name);\r\n            }\r\n        },\r\n        jsonSchema() {\r\n            return this.schemas.toJSON();\r\n        },\r\n        setValue(value) {\r\n            if (this.schemas.nativeDataType() == 'boolean' && !Utils.isRef(value)) {\r\n                value = !!value;\r\n            }\r\n            this.$emit('input', value);\r\n        },\r\n        resetValue() {\r\n            if (typeof this.default !== 'undefined') {\r\n                this.setValue(this.default);\r\n                return;\r\n            }\r\n            \r\n            var value;\r\n            if (this.schemas.nullable()) {\r\n                value = null;\r\n            }\r\n            else {\r\n                var dataType = this.schemas.nativeDataType();\r\n                switch(dataType) {\r\n                    case 'object':\r\n                        value = {};\r\n                        break;\r\n                    case 'array':\r\n                        value = [];\r\n                        break;\r\n                    case 'string':\r\n                        value = '';\r\n                        break;\r\n                    case 'integer':\r\n                    case 'number':\r\n                        value = 0;\r\n                        break;\r\n                    case 'boolean':\r\n                        value = false;\r\n                        break;\r\n                    default:\r\n                        value = undefined;\r\n                }\r\n            }\r\n            this.setValue(value);\r\n        },\r\n        getEdgeRef(edge) {\r\n            if (this.output) {\r\n                return this.value;\r\n            }\r\n            else {\r\n                return edge.parameter1.value;\r\n            }\r\n        },\r\n        addRefToValue(edge) {\r\n            var ref = this.getEdgeRef(edge);\r\n            if (!ref) {\r\n                return;\r\n            }\r\n            else if (!this.allowsMultipleInputs) {\r\n                this.setValue(ref);\r\n            }\r\n            else if (this.isArrayType) {\r\n                if (Utils.isRef(this.value)) {\r\n                    this.setValue([this.value, ref]);\r\n                }\r\n                else if (Array.isArray(this.value) && this.value.length > 0) {\r\n                    var value = this.value;\r\n                    value.push(ref);\r\n                    this.setValue(value);\r\n                }\r\n                else {\r\n                    this.setValue(ref);\r\n                }\r\n            }\r\n            else if (this.isObjectType) {\r\n                var propertyCount = Utils.size(this.value);\r\n                if (this.getEdgeCount() === 1 && (!this.hasValue || !propertyCount)) {\r\n                    this.setValue(ref);\r\n                }\r\n                else if (!propertyCount) {\r\n                    this.resetValue();\r\n                }\r\n                else {\r\n                    // Don't change value\r\n                }\r\n            }\r\n            else {\r\n                // ToDo: This is probably of data type mixed or any, how to handle?\r\n                this.setValue(ref);\r\n            }\r\n        },\r\n        removeRefFromValue(edge) {\r\n            if (!this.output) {\r\n                var ref = this.getEdgeRef(edge);\r\n                if (Utils.isRefEqual(ref, this.value)) {\r\n                    this.resetValue();\r\n                }\r\n                else if (this.isArrayType || this.isObjectType) {\r\n                    this.setValue(this.removeRefFromValueDeep(this.value, ref));\r\n                }\r\n            }\r\n        },\r\n        removeRefFromValueDeep(value, ref) {\r\n            if (Array.isArray(value)) {\r\n                var i = value.length;\r\n                while(--i >= 0) {\r\n                    if (value[i] === null || typeof value[i] !== 'object') {\r\n                        continue;\r\n                    }\r\n                    else if (Utils.isRefEqual(ref, value[i])) {\r\n                        value.splice(i, 1);\r\n                    }\r\n                    else {\r\n                        value[i] = this.removeRefFromValueDeep(value[i], ref);\r\n                    }\r\n                }\r\n\r\n            }\r\n            else if (Utils.isObject(value)) {\r\n                for(var key in value) {\r\n                    if (!value.hasOwnProperty(key) || value[key] === null || typeof value[key] !== 'object') {\r\n                        continue;\r\n                    }\r\n                    else if (Utils.isRefEqual(ref, value[key])) {\r\n                        delete value[key];\r\n                    }\r\n                    else {\r\n                        value[i] = this.removeRefFromValueDeep(value[key], ref);\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        },\r\n        addEdge(edge) {\r\n            this.edges.push(edge);\r\n            if (!this.isEdgeUsed(edge) && !this.output) {\r\n                this.addRefToValue(edge);\r\n            }\r\n        },\r\n        eraseEdge(edge) {\r\n            for (var k in this.edges) {\r\n                if (this.edges[k] == edge) {\r\n                    this.removeRefFromValue(edge);\r\n                    this.$delete(this.edges, k);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        isEdgeUsed(edge) {\r\n            var ref = this.getEdgeRef(edge);\r\n            if (Utils.isRefEqual(ref, this.value)) {\r\n                return true;\r\n            }\r\n            return this.hasRefInValue(ref, this.value);\r\n        },\r\n        hasRefInValue(ref, value) {\r\n            if (!value || typeof value !== 'object') {\r\n                return false;\r\n            }\r\n            else if (Utils.isRefEqual(ref, value)) {\r\n                return true;\r\n            }\r\n            for(let key in value) {\r\n                if (this.hasRefInValue(ref, value[key])) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        getEdgeCount() {\r\n            return this.edges.length;\r\n        },\r\n        formatProcess(pg, maxLength) {\r\n            if (pg instanceof ProcessGraph && pg.getNodeCount() === 1) {\r\n                return this.formatValue(pg.getResultNode().process_id, maxLength);\r\n            }\r\n            var nodes = Object.values(pg.process_graph);\r\n            if (nodes.length === 1) {\r\n                return this.formatValue(nodes[0].process_id, maxLength);\r\n            }\r\n            else {\r\n                return 'Process';\r\n            }\r\n        },\r\n        formatValue(value, maxLength, html = true) {\r\n            if (typeof value === 'object') {\r\n                if (value === null) {\r\n                    return 'n/a';\r\n                }\r\n                else if (Array.isArray(value)) {\r\n                    return this.formatArray(value, maxLength, html);\r\n                }\r\n                else {\r\n                    return this.formatObject(value, maxLength, html);\r\n                }\r\n            }\r\n            else if (typeof value === 'string') {\r\n                if (value.length > maxLength) {\r\n                    var text = Utils.htmlentities(value.substr(0, maxLength));\r\n                    return html ? text + '<span title=\"' + Utils.htmlentities(value) + '\">…</span>' : text;\r\n                }\r\n                else {\r\n                    return Utils.htmlentities(value);\r\n                }\r\n            }\r\n            else if (typeof value === 'boolean') {\r\n                return value ? '✔️' : '❌';\r\n            }\r\n            else if (typeof value === 'number') {\r\n                return value.toString();\r\n            }\r\n            else {\r\n                return Utils.htmlentities(JSON.stringify(value));\r\n            }\r\n        },\r\n        formatArray(values, maxLength, html = true) {\r\n            let parts = [];\r\n            for(let i in values) {\r\n                let value = values[i];\r\n                let formatted = this.formatValue(value, 10, html);\r\n                let unformatted = Utils.htmlentities_decode(this.formatValue(value, 10, false));\r\n\r\n                if (unformatted.length > maxLength) {\r\n                    if (parts.length === 0) {\r\n                        return this.formatArraySimple(values, 'List(' + values.length + ')');\r\n                    }\r\n                    else {\r\n                        parts.push(this.formatArraySimple(values, '…'));\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                parts.push(formatted);\r\n                maxLength -= unformatted.length + 2;\r\n            }\r\n            \r\n            return parts.join(\", \");\r\n        },\r\n        formatArraySimple(values, text, html = true) {\r\n            if (html && values.length < 10) {\r\n                let title = values.map(v => this.formatValue(v, 25, false)).join(', ');\r\n                return '<span title=\"' + title + '\">' + text + '</span>';\r\n            }\r\n            else {\r\n                return text;\r\n            }\r\n        },\r\n        formatObject(value, maxLength, html = true) {\r\n            if (Object.keys(value).length === 0) {\r\n                return 'None';\r\n            }\r\n            else if (value instanceof ProcessGraph || Utils.isObject(value.process_graph)) {\r\n                return this.formatProcess(value, maxLength);\r\n            }\r\n            else if (Utils.isRef(value)) {\r\n                return this.formatValue(Utils.formatRef(value), maxLength);\r\n            }\r\n            else if (typeof value.west !== 'undefined' && typeof value.east !== 'undefined' && typeof value.south !== 'undefined' && typeof value.north !== 'undefined') {\r\n                return maxLength >= 12 ? 'Bounding Box' : 'BBox';\r\n            }\r\n            else if (Utils.detectGeoJson(value)) {\r\n                return this.formatValue(value.type, maxLength);\r\n            }\r\n\r\n            // Fallback to default\r\n            return html ? '<span title=\"' + Utils.htmlentities(JSON.stringify(value)) + '\">Object</span>' : 'Object';\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.vue-component.model-builder {\r\n    .block .connector {\r\n        font-size: 0.9em;\r\n        margin: 0.2em 0;\r\n        white-space: nowrap;\r\n        \r\n        &.noValue {\r\n            color: red;\r\n        }\r\n        &.editable .label,\r\n        &.editable .value {\r\n            cursor: pointer;\r\n        }\r\n        span[title] {\r\n            cursor: help;\r\n        }\r\n        .input {\r\n            max-width: 100%;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n        }\r\n        .output {\r\n            text-align: right;\r\n        }\r\n        .unspecified {\r\n            color: red;\r\n            margin-right: 0.3em;\r\n        }\r\n        .circle {\r\n            width: 0.8em;\r\n            height: 0.8em;\r\n            margin: 0 0.2em;\r\n            border: 1px solid #888;\r\n            background-color: transparent;\r\n            display: inline-block;\r\n\r\n            &.io_active {\r\n                background-color: #FFC800;\r\n            }\r\n            &.io_selected {\r\n                background-color: #00C800 !important;\r\n            }\r\n            &.io_issues {\r\n                background-color: #FF0000;\r\n            }\r\n        }\r\n    }\r\n\r\n    &.editable .circle {\r\n        cursor: pointer;\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BlockParameter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BlockParameter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BlockParameter.vue?vue&type=template&id=70b6715c&\"\nimport script from \"./BlockParameter.vue?vue&type=script&lang=js&\"\nexport * from \"./BlockParameter.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BlockParameter.vue?vue&type=style&index=0&id=70b6715c&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default {\r\n\tdefaultScale: 1.3,\r\n\tblockWidth: {\r\n\t\tcompactParams: 110,\r\n\t\tcompact: 60,\r\n\t\tnormalParams: 220,\r\n\t\tnormal: 110\r\n\t}\r\n};","<template>\r\n    <div :id=\"'block' + this.id\" ref=\"div\" :class=\"containerClasses\" @mousedown.prevent.stop.left=\"onMouseDown\" :style=\"styles\">\r\n        <div class=\"blockTitle\" @mousedown.prevent.stop.left=\"emitDrag\">\r\n            <span class=\"titleText\" :title=\"plainTitle\">\r\n                <span v-show=\"invalid\" class=\"invalid\" title=\"Process or Collection not supported!\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>\r\n                </span>\r\n                {{ name }}\r\n                <span v-if=\"showId\" class=\"blockId\">{{ id }}</span>\r\n            </span>\r\n            <div class=\"blockicon\" @mousedown.prevent.stop.left=\"focus()\">\r\n                <span v-show=\"allowsDescription && !showDescriptionField\" class=\"addDescription\" title=\"Add description\" @click.stop.prevent=\"addDescription()\">\r\n                    <i class=\"fas fa-comment-medical\"></i>\r\n                </span>\r\n                <span v-show=\"allowsDelete\" class=\"delete\" title=\"Remove (DEL)\" @click.stop.prevent=\"remove()\">\r\n                    <i class=\"fas fa-trash\"></i>\r\n                </span>\r\n                <span v-show=\"allowsInfo\" class=\"info\" title=\"Details\" @click.stop.prevent=\"showInfo()\">\r\n                    <i class=\"fas fa-info\"></i>\r\n                </span>\r\n                <span v-show=\"allowsParameterChange\" class=\"settings\" :title=\"isParameter ? 'Edit parameter' : 'Change parameter values'\" @click.stop.prevent=\"edit\">\r\n                    <i class=\"fas fa-edit\"></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"inout\">\r\n            <div class=\"inputs\">\r\n                <BlockParameter v-for=\"(param, i) in parameters\" :key=\"i\" ref=\"parameters\" :state=\"state\" :value=\"args[param.name]\" @input=\"value => updateArgument(param.name, value)\" @edgesChanged=\"edgesChanged(param, $event)\" :name=\"param.name\" :description=\"param.description\" :optional=\"param.optional\" :deprecated=\"param.deprecated\" :experimental=\"param.experimental\" :default=\"param.default\" :schema=\"param.schema\" />\r\n            </div>\r\n            <div class=\"outputs\">\r\n                <BlockParameter ref=\"output\" :state=\"state\" :label=\"outputLabel\" v-bind=\"output\" @input=\"updateResult\" />\r\n            </div>\r\n        </div>\r\n        <textarea ref=\"descriptionField\" v-if=\"showDescriptionField\" :value=\"description\" :readonly=\"!state.editable\" class=\"editDescription\" placeholder=\"Type description here...\" @input=\"updateDescription\" @blur=\"updateDescription\" @mousedown.stop=\"\"></textarea>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport BlockParameter from './BlockParameter.vue';\r\nimport Utils from '../../utils.js';\r\nimport { ProcessParameter, ProcessUtils } from '@openeo/js-commons';\r\nimport { Utils as PgUtils } from '@openeo/js-processgraphs';\r\nimport Config from './config.js';\r\n\r\n/*\r\nEvents:\r\n\r\nEmits locally:\r\n- moved(x, y) - The block has been moved\r\n- input(value) - The value has been updated\r\n- move() - A block is now being moved\r\n- mounted(node) - The block is now part of the DOM.\r\n- unmounted(node) - The block not not part of the DOM anylonger.\r\n*/\r\n\r\nconst defaultFontSize = 10;\r\n\r\nexport default {\r\n    name: 'Block',\r\n    components: {\r\n        BlockParameter\r\n    },\r\n    props: {\r\n        id: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        type: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        selected: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        position: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        process_id: {\r\n            type: String\r\n        },\r\n        namespace: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        description: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        args: {\r\n            type: Object,\r\n            default: () => ({})\r\n        },\r\n        result: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        origin: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        spec: {\r\n            type: Object,\r\n            default: () => null\r\n        },\r\n        state: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            showDescriptionField: false,\r\n            drag: null // Is the user dragging ?\r\n        };\r\n    },\r\n    watch: {\r\n        'state.compactMode'() {\r\n            this.$emit('moved', this.position);\r\n        },\r\n        description: {\r\n            immediate: true,\r\n            handler() {\r\n                this.showDescriptionField = (this.description !== null);\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        // Visualizations\r\n        width() {\r\n            let size = Config.blockWidth;\r\n            if (this.parameters.length > 0) {\r\n                return this.state.compactMode ? size.compactParams : size.normalParams;\r\n            }\r\n            else {\r\n                return this.state.compactMode ? size.compact : size.normal;\r\n            }\r\n        },\r\n        styles() {\r\n            return {\r\n                marginLeft: Math.round(this.state.center[0] + this.position[0] * this.state.scale) + 'px',\r\n                marginTop: Math.round(this.state.center[1] + this.position[1] * this.state.scale) + 'px',\r\n                fontSize: Math.round(this.state.scale * defaultFontSize) + 'px',\r\n                width: Math.round(this.state.scale * this.width) + 'px',\r\n            };\r\n        },\r\n        plainTitle() {\r\n            let parts = [];\r\n            parts.push(this.name);\r\n            if (this.namespace) {\r\n                parts.push(`@${this.namespace}`);\r\n            }\r\n            if (this.showId) {\r\n                parts.push(` ${this.id}`);\r\n            }\r\n            return parts.join('');\r\n        },\r\n        name() {\r\n            switch(this.type) {\r\n                case 'process':\r\n                    if (this.collectionId) {\r\n                        return this.collectionId;\r\n                    }\r\n                    else {\r\n                        return this.processId;\r\n                    }\r\n                case 'parameter':\r\n                    return this.spec.name;\r\n                default:\r\n                    return this.id.substr(1);\r\n            }\r\n        },\r\n        outputLabel() {\r\n            if (this.result) {\r\n                return \"Result\";\r\n            }\r\n            else if (this.isParameter) {\r\n                return \"Process Parameter\";\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        },\r\n        containerClasses() {\r\n            var classes = ['block'];\r\n            if (this.collectionId) {\r\n                classes.push('block_collection');\r\n            }\r\n            else if (this.isParameter) {\r\n                classes.push('block_argument');\r\n            }\r\n            if (this.result) {\r\n                classes.push('block_result');\r\n            }\r\n            if (this.selected) {\r\n                classes.push('block_selected');\r\n            }\r\n            if (this.invalid) {\r\n                classes.push('block_invalid');\r\n            }\r\n\r\n            return classes;\r\n        },\r\n        invalid() {\r\n            if (this.type !== 'process' || !this.$parent.hasProcesses) {\r\n                // We can only check processes for validity\r\n                // Also, don't check for validity if no processes to validate against are given\r\n                return false;\r\n            }\r\n            else if (this.namespace && Utils.isUrl(this.namespace)) {\r\n                // If the namespace is a URL, then don't complain about a missing process\r\n                return false;\r\n            }\r\n            else if (!this.processId) {\r\n                return true;\r\n            }\r\n\r\n            // Check that the process exists\r\n            if (!this.spec) {\r\n                return true;\r\n            }\r\n\r\n            // Check that the collection exists\r\n            if (this.processId === 'load_collection' && !Utils.isRef(this.args.id)) {\r\n                for(let collection of this.$parent.collections) {\r\n                    if (this.args.id === collection.id) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        processId() {\r\n            if (this.type === 'process') {\r\n                if (this.process_id) {\r\n                    return this.process_id;\r\n                }\r\n                else if (Utils.isObject(this.spec) && this.spec.id) {\r\n                    return this.spec.id;\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        collectionId() {\r\n            if (this.type === 'process' && this.processId === 'load_collection' && !Utils.isRef(this.args.id)) {\r\n                return this.args.id;\r\n            }\r\n            return null;\r\n        },\r\n        isParameter() {\r\n            return this.type === 'parameter';\r\n        },\r\n        allowsParameterChange() {\r\n            if (this.isParameter) {\r\n                return this.state.editable && !!this.$parent.supports('editParameter');\r\n            }\r\n            else {\r\n                return this.parameters.filter(p => p.isEditable()).length > 0;\r\n            }\r\n        },\r\n        allowsDelete() {\r\n            return (this.state.editable && (!this.spec || (Utils.isObject(this.spec) && this.origin !== 'schema')));\r\n        },\r\n        allowsInfo() {\r\n            if (this.collectionId) {\r\n                return this.$parent.supports('showCollection');\r\n            }\r\n            else if (this.isParameter) {\r\n                return Utils.isObject(this.spec) && this.$parent.supports('showParameter');\r\n            }\r\n            else {\r\n                return this.$parent.supports('showProcess');\r\n            }\r\n        },\r\n        allowsDescription() {\r\n            // ToDo: Remove type restriction and store description for parameters.\r\n            return (this.state.editable && this.type === 'process');\r\n        },\r\n        showId() {\r\n            return (this.type !== 'parameter');\r\n        },\r\n        // Parameters and related\r\n        hasParametersDefined() {\r\n            return Boolean(Utils.isObject(this.spec) && Array.isArray(this.spec.parameters) && this.spec.parameters.length > 0);\r\n        },\r\n        parameters() {\r\n            let names = [];\r\n            let parameters = [];\r\n            if (this.hasParametersDefined) {\r\n                parameters = this.spec.parameters.map(p => new ProcessParameter(p));\r\n                names = parameters.map(p => p.name);\r\n            }\r\n            if (Utils.size(this.args) > 0) {\r\n                for(var key in this.args) {\r\n                    if (!names.includes(key)) {\r\n                        parameters.push(new ProcessParameter({\r\n                            name: key,\r\n                            description: ''\r\n                        }));\r\n                    }\r\n                }\r\n            }\r\n            return parameters;\r\n        },\r\n        fields() {\r\n            var fields = {};\r\n            for(var p of this.parameters) {\r\n                fields[p.name] = p;\r\n            }\r\n            fields.output = this.output;\r\n            return fields;\r\n        },\r\n        output() {\r\n            var spec = {};\r\n            if (Utils.isObject(this.spec)) {\r\n                if (this.isParameter) {\r\n                    spec = this.spec;\r\n                }\r\n                else if (Utils.isObject(this.spec.returns)) {\r\n                    spec = this.spec.returns;\r\n                }\r\n            }\r\n            var output = {\r\n                name: \"output\",\r\n                schema: spec.schema || {},\r\n                description: spec.description || '',\r\n                optional: true,\r\n                output: true,\r\n                value: {}\r\n            };\r\n            if (this.isParameter) {\r\n                output.value.from_parameter = this.id.substr(1);\r\n            }\r\n            else {\r\n                output.value.from_node = this.id.substr(1);\r\n            }\r\n            return output;\r\n        }\r\n    },\r\n    mounted() {\r\n        // ToDo: Move mousemove listener for dragging to Blocks?\r\n        this.draggingFn = this.dragging.bind(this);\r\n        document.addEventListener('mousemove', this.draggingFn);\r\n        // ToDO: Replace with mouseleave?\r\n        this.stopDragFn = this.stopDrag.bind(this);\r\n        document.addEventListener('mouseup', this.stopDragFn);\r\n\r\n        this.$emit('mounted', this);\r\n    },\r\n    beforeDestroy() {\r\n        document.removeEventListener('mousemove', this.draggingFn);\r\n        document.removeEventListener('mouseup', this.stopDragFn);\r\n\r\n        this.$emit('unmounted', this);\r\n    },\r\n    methods: {\r\n        edit() {\r\n            if (this.isParameter) {\r\n                this.editParameter();\r\n            }\r\n            else {\r\n                this.showArguments();\r\n            }\r\n        },\r\n        hasParameter(name) {\r\n            return this.hasParametersDefined && !!this.spec.parameters.find(p => p.name === name);\r\n        },\r\n        updateDescription(event) {\r\n\t\t\tlet elem = event.composedPath()[0]; // event.target doesn't work in web components\r\n            let value;\r\n            if (elem && typeof elem.value === 'string' && (elem.value.length > 0 || event.type === 'input')) {\r\n                value = elem.value;\r\n            }\r\n            else {\r\n                value = null;\r\n            }\r\n            this.showDescriptionField = (value !== null);\r\n            if (this.description !== value) {\r\n                this.$emit('update', 'description', value);\r\n            }\r\n        },\r\n        updatePosition(pos, saveHistory = true) {\r\n            pos = Utils.ensurePoint(pos);\r\n            if (this.position[0] !== pos[0] || this.position[1] !== pos[1]) {\r\n                this.$emit('update', 'position', pos, saveHistory);\r\n            }\r\n        },\r\n        updateArguments(value) {\r\n            let removeParameters = Object.keys(this.args)\r\n                    .filter(key => typeof value[key] === 'undefined' && (!this.hasParametersDefined || this.hasParameter(key)));\r\n            // Remove default values\r\n            for(let p of this.parameters) {\r\n                if (typeof value[p.name] !== 'undefined' && p.optional && typeof p.default !== 'undefined' && Utils.equals(p.default, value[p.name]))  {\r\n                    delete value[p.name];\r\n                }\r\n            }\r\n            this.$emit('update', 'arguments', value, removeParameters);\r\n        },\r\n        updateArgument(key, value) {\r\n            let args = Utils.deepClone(this.args);\r\n            args[key] = value;\r\n            this.updateArguments(args);\r\n        },\r\n        updateResult(value) {\r\n            if (this.hasOutputEdges()) {\r\n                this.state.root.$emit(\"error\", \"A result node can't have outgoing edges.\");\r\n                return;\r\n            }\r\n            if (value !== this.result) {\r\n                this.$emit('update', 'result', value);\r\n            }\r\n        },\r\n        focus() {\r\n            this.$parent.focus();\r\n        },\r\n        onMouseDown(event) {\r\n            this.select(!this.selected, !event.shiftKey);\r\n        },\r\n        select(selected = true, unselectOthers = true) {\r\n            this.$emit('update', 'selected', selected, unselectOthers);\r\n            this.focus();\r\n        },\r\n        getDimensions() {\r\n            let dim = this.$parent.domBoundingBox(this.$refs.div);\r\n            var blocksDim = this.$parent.getDimensions();\r\n            dim.x = dim.offsetLeft - blocksDim.offsetLeft;\r\n            dim.y = dim.offsetTop - blocksDim.offsetTop;\r\n            return dim;\r\n        },\r\n        edgesChanged(parameter, edges) {\r\n            parameter.refs = edges.map(edge => edge.parameter1.value);\r\n        },\r\n        editParameter() {\r\n            this.$parent.$emit('editParameter', this.spec, \"Edit Parameter: \" + this.plainTitle, data => this.$emit('update', 'spec', data));\r\n        },\r\n        showArguments(parameterName = null) {\r\n            this.$parent.$emit('editArguments', this.parameters.filter(p => p.isEditable()), this.args, this.plainTitle, this.state.editable, parameterName, data => this.updateArguments(data), this);\r\n        },\r\n        showInfo() {\r\n            if(this.collectionId) {\r\n                this.$parent.$emit('showCollection', this.collectionId);\r\n            }\r\n            else if (this.isParameter) {\r\n                this.$parent.$emit('showParameter', this.spec);\r\n            }\r\n            else {\r\n                this.$parent.$emit('showProcess', this.processId, this.namespace);\r\n            }\r\n        },\r\n        async addDescription() {\r\n            this.select();\r\n            this.showDescriptionField = true;\r\n            await this.$nextTick();\r\n            this.$refs.descriptionField.focus();\r\n        },\r\n        async emitDrag(event) {\r\n            this.select(true, !event.shiftKey);\r\n            this.focus();\r\n            await this.$nextTick();\r\n            this.$emit('move', event);\r\n        },\r\n        getDragPos(pos, mouse) {\r\n            return [mouse[0]/this.state.scale-pos[0], mouse[1]/this.state.scale-pos[1]];\r\n        },\r\n        startDrag(event) {\r\n            if (!this.selected) {\r\n                return;\r\n            }\r\n\r\n            let mousePos = this.$parent.getMousePos(event);\r\n            this.drag = {\r\n                origin: this.position,\r\n                mouse: this.getDragPos(this.position, mousePos)\r\n            };\r\n        },\r\n        stopDrag() {\r\n            if (!this.drag) {\r\n                return;\r\n            }\r\n\r\n            var delta = 5 / this.state.scale; // Only store History if block was moved enough\r\n            if (Math.abs(this.drag.origin[0] - this.position[0]) > delta || Math.abs(this.drag.origin[1] - this.position[1]) > delta) {\r\n                this.updatePosition(this.position);\r\n            }\r\n            this.drag = null;\r\n        },\r\n        dragging(event) {\r\n            if (!this.drag) {\r\n                return;\r\n            }\r\n            \r\n            let mousePos = this.$parent.getMousePos(event);\r\n            let drapPos = this.getDragPos(this.drag.mouse, mousePos);\r\n            // Don't store for each run a history step...\r\n            this.updatePosition(drapPos, false);\r\n        },\r\n\r\n        hasOutputEdges() {\r\n            return this.$refs.output && this.$refs.output.getEdgeCount() > 0;\r\n        },\r\n\r\n        async remove() {\r\n            await this.$parent.removeBlock(this);\r\n        },\r\n\r\n        /**\r\n         * Getting a field by name\r\n         */\r\n        getBlockParameter(name) {\r\n            if (name === 'output' && this.$refs.output) {\r\n                return this.$refs.output;\r\n            }\r\n            else if (Array.isArray(this.$refs.parameters)) {\r\n                var params = this.$refs.parameters.filter(param => param.name === name);\r\n                if (params.length > 0) {\r\n                    return params[0];\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n\r\n        isParameterScoped(parameterName, referenceName) {\r\n            let parameterBlock = this.getBlockParameter(parameterName);\r\n            let cbParams = ProcessUtils.getCallbackParameters(parameterBlock).map(cbParam => cbParam.name);\r\n            return cbParams.includes(referenceName);\r\n        },\r\n\r\n        hiddenParameterRef(parameterBlock) {\r\n            if (this.type !== 'process') {\r\n                return null;\r\n            }\r\n            let globalParam = parameterBlock.id.substr(1);\r\n            for (let argName in this.args) {\r\n                let value = this.args[argName];\r\n                if (Utils.isObject(value) && Utils.isObject(value.process_graph)) {\r\n                    let refs = PgUtils.getRefs(value, true, true);\r\n                    if (refs.find(r => r.from_parameter === globalParam && !this.isParameterScoped(argName, r.from_parameter))) {\r\n                        return argName;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.vue-component.model-builder {\r\n    .block {\r\n        position:absolute;\r\n        border:2px solid #ccc;\r\n        margin-left:0px;\r\n        margin-top:0px;\r\n        background-color:#fafafa;\r\n        opacity:0.8;\r\n        font-size:14px;\r\n        user-select:none;\r\n        -moz-user-select:none;\r\n        -khtml-user-select:none;\r\n        -webkit-user-select:none;\r\n        -o-user-select:none;\r\n\r\n        .description {\r\n            display:none;\r\n            width:200px;\r\n            padding:3px;\r\n            border:1px solid #083776;\r\n            border-radius:5px;\r\n            color:#001531;\r\n            background-color:#91bcf6;\r\n            margin-top:15px;\r\n            position:absolute;\r\n            font-weight:normal;\r\n        }\r\n\r\n        .blockTitle {\r\n            display: flex;\r\n            padding: 0.3em 0.1em;\r\n            font-weight:bold;\r\n            background-color:#ddd;\r\n            margin-bottom: 0.1em;\r\n            cursor: move;\r\n            font-size: 0.9em;\r\n            \r\n            .blockId {\r\n                opacity: 0.4;\r\n                margin-left: 0.25em;\r\n                font-weight: normal;\r\n            }\r\n            \r\n            .namespace {\r\n                font-weight: normal;\r\n            }\r\n\r\n            .titleText {\r\n                flex-grow: 1;\r\n                white-space: nowrap;\r\n                overflow: hidden;\r\n                text-overflow: ellipsis;\r\n            }\r\n            \r\n            .blockicon {\r\n                white-space: nowrap;\r\n                text-align: center;\r\n\r\n                i.fas {\r\n                    min-width: 1.4em;\r\n                    cursor: pointer;\r\n                    opacity: 0.5;\r\n                    margin-left: 0.1em;\r\n\r\n                    &:hover {\r\n                        opacity:1.0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        .invalid {\r\n            color: red;\r\n            cursor: help;\r\n        }\r\n\r\n        .inout {\r\n            display: flex;\r\n        }\r\n\r\n        .inputs {\r\n            flex-grow: 1;\r\n            max-width: 100%;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n        }\r\n\r\n        .editDescription {\r\n            padding: 0.3em 0.2em;\r\n            box-sizing: border-box;\r\n            font-size: 0.9em;\r\n            line-height: 1em;\r\n            overflow: auto;\r\n            border: 0;\r\n            border-top: 1px dotted #ccc;\r\n            background-color: transparent;\r\n            width: 100%;\r\n            max-width: 100%;\r\n            height: 3.7em;\r\n            min-height: 2.5em;\r\n            resize: none;\r\n\r\n            &:focus {\r\n                outline: 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    .block_collection {\r\n        border:2px solid #6B8DAF;\r\n\r\n        .blockTitle {\r\n            background-color:#A3B7CC;\r\n        }\r\n        .field_id { /* Hide collection ID as it's shown in the title */\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .block_result {\r\n        border:2px solid #888;\r\n\r\n        .field_output .circle {\r\n            background-color: #888;\r\n            cursor: auto;\r\n        }\r\n    }\r\n\r\n    .block_argument {\r\n        border:2px solid #B28C6B;\r\n\r\n        .blockTitle {\r\n            background-color:#CCB7A3;\r\n        }\r\n    }\r\n\r\n    .block_selected {\r\n        border:2px solid #0a0 !important; /* important is used to override the styles for block_collection and block_argument above */\r\n\r\n        .blockTitle {\r\n            background-color:#0c0 !important;\r\n        }\r\n    }\r\n\r\n    .block_invalid {\r\n        border:2px solid #ff0000 !important; /* important is used to override the styles for block_selected above */\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Block.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Block.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Block.vue?vue&type=template&id=bf488dbc&\"\nimport script from \"./Block.vue?vue&type=script&lang=js&\"\nexport * from \"./Block.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Block.vue?vue&type=style&index=0&id=bf488dbc&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('g',_vm._l((_vm.lines),function(line,i){return _c('line',_vm._b({key:i},'line',line,false))}),0)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default class Segment {\r\n\r\n    constructor(x, y, dx, dy) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n    }\r\n\r\n    /**\r\n     * Distance\r\n     */\r\n    distance(point1, point2) {\r\n        return Math.sqrt(Math.pow(point2.x-point1.x,2) + Math.pow(point2.y-point1.y,2));\r\n    }\r\n\r\n    /**\r\n     * Distance with a point\r\n     */\r\n    distanceP(point) {\r\n        var normal = this.normal();\r\n        normal.x = point.x;\r\n        normal.y = point.y;\r\n        var intersection = this.intersection(normal);\r\n\r\n        return [intersection[0], this.distance(normal.alpha(intersection[1]), point)];\r\n    }\r\n\r\n    /**\r\n     * Normal\r\n     */\r\n    normal() {\r\n        return new Segment(this.x, this.y, this.dy, -this.dx);\r\n    }\r\n\r\n    /**\r\n     * Gets the intersection alpha with another \r\n     */\r\n    intersection(other) {\r\n        var a = this.dx;\r\n        var b = -other.dx;\r\n        var c = this.dy;\r\n        var d = -other.dy;\r\n        var b0 = other.x-this.x;\r\n        var b1 = other.y-this.y;\r\n        var det = a*d - b*c;\r\n\r\n        if (det == 0) {\r\n            return null;\r\n        }\r\n\r\n        var r1 = (d*b0 - b*b1)/det;\r\n        var r2 = (-c*b0 + a*b1)/det;\r\n\r\n        return [r1, r2];\r\n    }\r\n\r\n    /**\r\n     * Gets the alpha point\r\n     */\r\n    alpha(a) {\r\n        var point = {};\r\n        point.x = this.x+this.dx*a;\r\n        point.y = this.y+this.dy*a;\r\n\r\n        return point;\r\n    }\r\n\r\n}","<template>\r\n    <g>\r\n        <line v-for=\"(line, i) in lines\" :key=\"i\" v-bind=\"line\" />\r\n    </g>\r\n</template>\r\n\r\n<script>\r\nimport Segment from './segment.js';\r\n\r\nexport default {\r\n    name: 'Edge',\r\n    props: {\r\n        id: {},\r\n        parameter1: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        parameter2: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        selected: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        inactive: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        issues: {\r\n            type: Array,\r\n            default: () => ([])\r\n        },\r\n        lineWidth: {\r\n            type: Number,\r\n            default: 3\r\n        },\r\n        lineColor: {\r\n            type: Array,\r\n            default: () => ([255, 200, 0, 1])\r\n        },\r\n        state: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            position1: null,\r\n            position2: null\r\n        }\r\n    },\r\n    computed: {\r\n        segment() {\r\n            return new Segment(\r\n                this.position1[0],\r\n                this.position1[1], \r\n                this.position2[0] - this.position1[0],\r\n                this.position2[1] - this.position1[1]\r\n            );\r\n        },\r\n        scaledLineWidth() {\r\n            return this.lineWidth * this.state.scale;\r\n        },\r\n        lines() {\r\n            // Drawing the arrow\r\n            var xM = ((this.position1[0]+this.position2[0])/2.0);\r\n            var yM = ((this.position1[1]+this.position2[1])/2.0);\r\n\r\n            var alpha = (35*Math.PI/180.0);\r\n            var cos = Math.cos(alpha);\r\n            var sin = Math.sin(alpha);\r\n            var cosB = Math.cos(-alpha);\r\n            var sinB = Math.sin(-alpha);\r\n\r\n            var norm = Math.sqrt(Math.pow(this.position1[0]-this.position2[0],2)+Math.pow(this.position1[1]-this.position2[1],2));\r\n            var arrowLength = this.state.scale*10/(norm/1.5);\r\n            var xA = (this.position1[0]-xM)*arrowLength;\r\n            var yA = (this.position1[1]-yM)*arrowLength;\r\n\r\n            var lineStyle = this.getLineStyle(this.scaledLineWidth, this.selected, this.inactive);\r\n            var arrowStyle = this.getLineStyle(this.scaledLineWidth / 1.5, this.selected);\r\n\r\n            var mainLine = this.getLine(this.position1[0], this.position1[1], this.position2[0], this.position2[1], lineStyle);\r\n            if (this.inactive || norm/this.state.scale < 25) {\r\n                // Hide arrow\r\n                return [mainLine];\r\n            }\r\n            else {\r\n                return [\r\n                    mainLine,\r\n                    this.getLine(xM, yM, xM+(xA*cos-yA*sin), yM+(yA*cos+xA*sin), arrowStyle),\r\n                    this.getLine(xM, yM, xM+(xA*cosB-yA*sinB), yM+(yA*cosB+xA*sinB), arrowStyle)\r\n                ];\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        'state.center'() {\r\n            this.updatePositions();\r\n        },\r\n        'state.scale'() {\r\n            this.updatePositions();\r\n        },\r\n        'state.moving'() {\r\n            this.updatePositions();\r\n        }\r\n    },\r\n    created() {\r\n        this.updatePositions();\r\n    },\r\n    mounted() {\r\n        this.$emit('mounted', this);\r\n    },\r\n    beforeDestroy() {\r\n        this.$emit('unmounted', this);\r\n    },\r\n    methods: {\r\n        updatePositions() {\r\n            let pos1 = this.parameter1.getCirclePosition();\r\n            let pos2 = this.parameter2.getCirclePosition();\r\n            if (!pos1 || !pos2) {\r\n                return;\r\n            }\r\n            if (!this.position1 || !this.position2 || pos1[0] !== this.position1[0] || pos1[1] !== this.position1[1] || pos2[0] !== this.position2[0] || pos2[1] !== this.position2[1]) {\r\n                this.position1 = Object.freeze(pos1);\r\n                this.position2 = Object.freeze(pos2);\r\n                this.$emit('position', this.position1, this.position2);\r\n            }\r\n        },\r\n        getLineStyle(lineWidth, selected = false, dashed = false) {\r\n            let dashLength = 2 * this.state.scale;\r\n            let color = this.lineColor;\r\n            if (selected) {\r\n                color = [0, 200, 0, 1];\r\n            }\r\n            else if (this.issues.length > 0) {\r\n                color = [255, 0, 0, 1];\r\n            }\r\n            return {\r\n                'stroke': `rgba(${color.join(', ')})`,\r\n                'stroke-width': lineWidth,\r\n                'stroke-dasharray': dashed ? dashLength * 3 + ' ' + dashLength * 2 : 'none'\r\n            }\r\n        },\r\n        /**\r\n         * Get line options.\r\n         * \r\n         * @param x1 {number} The x-coordinate for the start of the line.\r\n         * @param y1 {number} The y-coordinate for the start of the line.\r\n         * @param x2 {number} The x-coordinate for the end of the line.\r\n         * @param y2 {number} The y-coordinate for the end of the line.\r\n         * @param [settings] {object} Additional settings for this node.\r\n         * @return {object} Options for SVG Line\r\n         */\r\n        getLine(x1, y1, x2, y2, settings = {}) {\r\n            return Object.assign({x1, y1, x2, y2}, settings);\r\n        },\r\n        /**\r\n         * Does the position collide the line ?\r\n         */\r\n        collide(x, y) {\r\n            if (!this.segment) {\r\n                return false;\r\n            }\r\n\r\n            var dp = this.segment.distanceP({x: x, y: y});\r\n\r\n            if (dp[0] >= 0 && dp[0] <= 1) {\r\n                if (dp[1] < (this.lineWidth*this.state.scale)*2) {\r\n                    return dp[0];\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n        /**\r\n         * Test if this edge is the same than another\r\n         */\r\n        equals(other) {\r\n            if (this.parameter1 == other.parameter1 && this.parameter2 == other.parameter2) {\r\n                return true;\r\n            }\r\n            else if (this.parameter1 == other.parameter2 && this.parameter2 == other.parameter1) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n}\r\n</script>","import mod from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Edge.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Edge.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Edge.vue?vue&type=template&id=83b3fc4e&\"\nimport script from \"./Edge.vue?vue&type=script&lang=js&\"\nexport * from \"./Edge.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div ref=\"div\" :id=\"id\" :class=\"classes\" tabindex=\"0\" :style=\"style\"\r\n        @mousemove=\"onMouseMove\"\r\n        @mousedown=\"onMouseDown\"\r\n        @wheel=\"onMouseWheel\"\r\n        @keydown=\"onKeyDown\"\r\n        @focus=\"hasFocus = true\"\r\n        @blur=\"hasFocus = false\">\r\n        <!-- tabindex is to allow focus for delete keystroke etc -->\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"canvas\">\r\n            <Edge v-for=\"edge in edges\" :key=\"edge.id\" :id=\"edge.id\"\r\n                :parameter1=\"edge.parameter1\" :parameter2=\"edge.parameter2\"\r\n                :selected=\"edge.selected\" :inactive=\"edge.inactive\" :issues=\"edge.issues\" :state=\"state\"\r\n                @mounted=\"node => mount(edge, node)\" @unmounted=\"() => mount(edge)\"\r\n                @position=\"updateEdgePos(edge, arguments)\" />\r\n            <Edge v-for=\"edge in hiddenParameterRefEdges\" :key=\"edge.id\" :id=\"edge.id\"\r\n                :parameter1=\"edge.parameter1\" :parameter2=\"edge.parameter2\"\r\n                @mounted=\"node => mount(edge, node)\" @unmounted=\"() => mount(edge)\"\r\n                :inactive=\"true\" :lineColor=\"[200,200,200,1]\" :lineWidth=\"2\" :state=\"state\" />\r\n            <line v-if=\"linkingLine\" v-bind=\"linkingLine\" />\r\n            <rect v-if=\"selectRect\" v-bind=\"selectRect\" />\r\n        </svg>\r\n        <div class=\"blocks\">\r\n            <Block v-for=\"(block) in blocks\" :key=\"block.id\"\r\n                :id=\"block.id\" :type=\"block.type\" :spec=\"block.spec\" :state=\"state\"\r\n                :selected=\"block.selected\" :position=\"block.position\" :origin=\"block.origin\"\r\n                :process_id=\"block.process_id\" :namespace=\"block.namespace\" :result=\"block.result\" :args=\"block.arguments\" :description=\"block.description\" \r\n                @update=\"(...args) => updateBlock(block, ...args)\"\r\n                @mounted=\"node => mount(block, node)\" @unmounted=\"() => mount(block)\"\r\n                @move=\"startDragBlock\" />\r\n        </div>\r\n        <div v-if=\"state.scale < 0.7 || showZoomInfo\" class=\"zoomInfo\">\r\n            <div v-if=\"state.scale < 0.7\">\r\n                Zoom in for more details.\r\n            </div>\r\n            <div v-if=\"showZoomInfo\">\r\n                Zoom with <kbd>STRG</kbd> or <kbd>Meta</kbd> key and the mouse wheel.\r\n            </div>\r\n        </div>\r\n        <ParameterViewer v-if=\"parameterViewer\" v-bind=\"parameterViewer\" @close=\"parameterViewer = null\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Block from './model-builder/Block.vue';\r\nimport Edge from './model-builder/Edge.vue';\r\nimport Utils from '../utils.js';\r\nimport { ProcessRegistry } from '@openeo/js-commons';\r\nimport { JsonSchemaValidator, ProcessGraph, Utils as PgUtils } from '@openeo/js-processgraphs';\r\nimport Vue from 'vue';\r\nimport boxIntersectsBox from 'intersects/box-box';\r\nimport boxIntersectsLine from 'intersects/box-line';\r\nimport Config from './model-builder/config.js';\r\n\r\nconst getDefaultState = function(blocks) {\r\n    return Vue.observable({\r\n        root: blocks,\r\n        editable: false,\r\n        compactMode: false,\r\n        moving: null, // Is the user dragging the view?\r\n        selecting: null, // Is the user multi-selecting?\r\n        center: [0,0],\r\n        mouse: [0,0],\r\n        scale: Config.defaultScale,\r\n        linkFrom: null, // Array\r\n        linkTo: null // Array\r\n    });\r\n};\r\nconst MARGIN = 20;\r\n\r\nconst selectionChangeWatcher = function (newVal, oldVal) {\r\n    if (!Array.isArray(newVal) || !Array.isArray(oldVal) || newVal.length !== oldVal.length || !newVal.every((value,i) => value.id === oldVal[i].id)) {\r\n        this.$emit('selectionChanged', this.selectedBlocks, this.selectedEdges);\r\n    }\r\n};\r\n\r\nexport default {\r\n    name: 'ModelBuilder',\r\n    components: {\r\n        Block,\r\n        Edge,\r\n        ParameterViewer: () => import('./model-builder/ParameterViewer.vue')\r\n    },\r\n    props: {\r\n        id: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        editable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        value: {\r\n            type: Object,\r\n            default: () => ({})\r\n        },\r\n        collections: {\r\n            type: Array,\r\n            default: () => []\r\n        },\r\n        processes: {\r\n            type: [Array, Object],\r\n            default: () => []\r\n        },\r\n\t\tparent: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: null\r\n\t\t},\r\n\t\tparentSchema: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: null\r\n\t\t},\r\n        historySize: {\r\n            type: Number,\r\n            default: 30\r\n        },\r\n        explicitZoom: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        height: {\r\n            type: String,\r\n            default: null\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isMounted: false,\r\n            allMounted: false,\r\n\r\n            // Current offset for block that are generated without specific coordinates so that not all block occur on the same position\r\n            newBlockOffset: 0,\r\n\r\n            // History\r\n            history: [],\r\n            historyPointer: null,\r\n\r\n            process: Object.freeze(this.value),\r\n            // Metadata for blocks to show\r\n            blocks: [],\r\n            // Metadata for edges to show\r\n            edges: [],\r\n            hiddenParameterRefEdges: {},\r\n\r\n            processGraph: null,\r\n\r\n            // Next block id\r\n            nextBlockId: 1,\r\n            // Next edge id\r\n            nextEdgeId: 1,\r\n            // Copy&Paste\r\n            clipboard: null,\r\n\r\n            activeTransactions: 0,\r\n            hasFocus: false,\r\n            linkingLine: null,\r\n            parameterViewer: null,\r\n\r\n            showZoomInfo: this.explicitZoom,\r\n            \r\n            // State specific to this blocks instance including all children\r\n            state: getDefaultState(this)\r\n        };\r\n    },\r\n    computed: {\r\n        style() {\r\n            let style = {};\r\n            if (typeof this.height === 'string') {\r\n                style.height = this.height;\r\n            }\r\n            return style;\r\n        },\r\n        classes() {\r\n            let classes = [\r\n                'vue-component',\r\n                'model-builder'\r\n            ];\r\n            if (this.hasFocus) {\r\n                classes.push('focus');\r\n            }\r\n            if (this.editable) {\r\n                classes.push('editable');\r\n            }\r\n\r\n            if (this.state.compactMode) {\r\n                classes.push('compact');\r\n            }\r\n\r\n            if (this.state.scale < 0.5) {\r\n                classes.push('scale_xs');\r\n            }\r\n            else if (this.state.scale < 0.7) {\r\n                classes.push('scale_s');\r\n            }\r\n            else if (this.state.scale < 0.9) {\r\n                classes.push('scale_m');\r\n            }\r\n            else if (this.state.scale < 1.1) {\r\n                classes.push('scale_l');\r\n            }\r\n            else {\r\n                classes.push('scale_xl');\r\n            }\r\n\r\n            return classes;\r\n        },\r\n        selectRect() {\r\n            if (!this.state.selecting) {\r\n                return null;\r\n            }\r\n            return {\r\n                x: Math.min(this.state.selecting.current[0], this.state.selecting.start[0]),\r\n                y: Math.min(this.state.selecting.current[1], this.state.selecting.start[1]),\r\n                width: Math.abs(this.state.selecting.current[0] - this.state.selecting.start[0]),\r\n                height: Math.abs(this.state.selecting.current[1] - this.state.selecting.start[1]),\r\n                'stroke': 'rgba(0,0,0,0.8)',\r\n                'stroke-width': 1,\r\n                'fill': 'rgba(0,0,0,0.05)'\r\n            };\r\n        },\r\n        processRegistry() {\r\n            // If I link between openeo-web-editor and openeo-vue-components, instanceof ProcessRegistry fails.\r\n            // Webpack seems to mangle names and thus I need to check for specific processes alternatively to detect whether this could be a ProcessRegistry.\r\n            if (this.processes instanceof ProcessRegistry || (typeof this.processes.count === 'function' && typeof this.processes.get === 'function')) {\r\n                return this.processes;\r\n            }\r\n            else if (Array.isArray(this.processes)) {\r\n                return new ProcessRegistry(this.processes);\r\n            }\r\n            else {\r\n                throw new Error('Invalid processes specified, must be ProcessRegistry or Array');\r\n            }\r\n        },\r\n        hasProcesses() {\r\n            return this.processRegistry.count() > 0;\r\n        },\r\n        processBlocks() {\r\n            return this.blocks.filter(b => b.type === 'process');\r\n        },\r\n        selectedBlocks() {\r\n            return this.blocks.filter(block => block.selected);\r\n        },\r\n        selectedEdges() {\r\n            return this.edges.filter(edge => edge.selected);\r\n        },\r\n        selectedSideEdge() {\r\n            if (this.selectedEdges.length === 1 && this.selectedEdges[0].selectedParameter) {\r\n                return this.selectedEdges[0];\r\n            }\r\n            return null;\r\n        },\r\n        hasSelection() {\r\n            return this.selectedBlocks.length > 0 || this.selectedEdges.length > 0;\r\n        },\r\n        processParametersFromSchemas() {\r\n            // Get all process parameters from the parent process\r\n            // this.parent.$parent => ModelBuilder instance\r\n\t\t\tlet parentParams = [];\r\n\t\t\tif (this.parent && this.parent.$parent && typeof this.parent.$parent.getPgParameters === 'function') {\r\n\t\t\t\tparentParams = this.parent.$parent.getPgParameters().map(block => block.spec);\r\n\t\t\t}\r\n\r\n            let callbackParams = [];\r\n            // If we have a parameter schema given, go through the parameter schema and get the available process parameters from there.\r\n            if (this.parentSchema) {\r\n\t\t\t    callbackParams = this.parentSchema.getCallbackParameters();\r\n            }\r\n\r\n            // Remove all parameters from the parent that are overridden by the more specific parameters.\r\n            let filteredParentParams = parentParams.filter(p1 => !callbackParams.find(p2 => p1.name === p2.name));\r\n            // Add the filtered parameters from the parent to the more specific parameters\r\n            return callbackParams.concat(filteredParentParams);\r\n        }\r\n    },\r\n    watch: {\r\n        parentSchema() {\r\n            this.importPgParameters(this.processParametersFromSchemas, 'schema');\r\n        },\r\n        async value(value) {\r\n            // Only run if component has been mounted\r\n            if (!this.allMounted) {\r\n                return;\r\n            }\r\n\r\n            // Only import when user changes data (i.e. not a BlocksProcess exported from export())\r\n            if (!(value instanceof BlocksProcess)) {\r\n                this.process = value;\r\n                await this.import(value, { propagate: false, undoOnError: false }); // don't propagate, otherwise results in an infinite loop\r\n            }\r\n        },\r\n        editable: {\r\n            immediate: true,\r\n            handler(editable) {\r\n                this.state.editable = editable;\r\n            }\r\n        },\r\n        selectedEdges: selectionChangeWatcher,\r\n        selectedBlocks: selectionChangeWatcher,\r\n        allMounted() {\r\n            this.updateHiddenParameterRefEdges();\r\n        },\r\n        isMounted() {\r\n            this.checkAllMounted();\r\n        }\r\n    },\r\n\tbeforeCreate() {\r\n\t\tUtils.enableHtmlProps(this);\r\n\t},\r\n    async created() {\r\n        if (!this.supports('error')) {\r\n            // Print error to console if event is not supported by implementing context\r\n            this.$on('error', (msg, title = null) => console.error(msg, title));\r\n        }\r\n        if (!this.supports('editArguments')) {\r\n            this.$on('editArguments', (...args) => this.showParameterViewer(...args));\r\n        }\r\n    },\r\n    async mounted() {\r\n        Utils.loadFontAwesome(this);\r\n\r\n        // Setting up default viewer center\r\n        this.moveCenter(0, 0, true);\r\n\r\n        // ToDo: Replace with mouseleave?\r\n        this.onDocumentMouseUpFn = this.onDocumentMouseUp.bind(this)\r\n        document.addEventListener('mouseup', this.onDocumentMouseUpFn);\r\n\r\n        await this.importPgParameters(this.processParametersFromSchemas, 'schema');\r\n        if (!await this.import(this.value, { propagate: false, undoOnError: false })) {\r\n            this.perfectScale();\r\n        }\r\n        selectionChangeWatcher.bind(this)();\r\n\r\n        this.isMounted = true;\r\n    },\r\n    beforeDestroy() {\r\n        document.removeEventListener('mouseup', this.onDocumentMouseUpFn);\r\n    },\r\n    methods: {\r\n        updateEdgePos(edge, pos) {\r\n            edge.position1 = pos[0];\r\n            edge.position2 = pos[1];\r\n        },\r\n        mount(elem, node = null) {\r\n            elem.$el = node;\r\n            this.checkAllMounted();\r\n        },\r\n        checkAllMounted() {\r\n            if (!this.isMounted) {\r\n                this.allMounted = false;\r\n            }\r\n            else {\r\n                this.allMounted = !this.blocks.find(block => !block.$el) || !this.edges.find(edge => !edge.$el);\r\n            }\r\n        },\r\n        updateBlockArguments(block, args, removedParams) {\r\n            if (removedParams.length > 0) {\r\n                this.parameterRemoved(block, removedParams);\r\n            }\r\n            this.$set(block, 'arguments', args);\r\n            this.commit();\r\n            if(removedParams.length > 0) {\r\n                this.$nextTick(() => this.refreshEdges());\r\n            }\r\n        },\r\n        updateBlockDescription(block, description) {\r\n            this.$set(block, 'description', description);\r\n            this.commit();\r\n        },\r\n        updateBlockPos(block, pos, saveHistory = true) {\r\n            this.$set(block, 'position', pos);\r\n            this.commit(null, saveHistory, false);\r\n        },\r\n        updateBlockResult(block, result) {\r\n            this.$set(block, 'result', result);\r\n            this.commit();\r\n        },\r\n        updateBlockSelected(block, selected, unselectOthers = true) {\r\n            if (unselectOthers) {\r\n                this.unselectAll();\r\n            }\r\n            this.$set(block, 'selected', selected);\r\n            this.commit(null, false, false);\r\n        },\r\n        updateBlockSpec(block, data) {\r\n            let parameterFields = ['name', 'schema', 'description', 'optional', 'deprecated', 'experimental', 'default'];\r\n            let newBlock = Utils.omitFromObject(block.spec, parameterFields);\r\n            Object.assign(newBlock, data);\r\n            // Remove default values (and unset default value if parameter is required)\r\n            if (!newBlock.optional) {\r\n                delete newBlock.optional;\r\n                delete newBlock.default;\r\n            }\r\n            if (!newBlock.deprecated) {\r\n                delete newBlock.deprecated;\r\n            }\r\n            if (!newBlock.experimental) {\r\n                delete newBlock.experimental;\r\n            }\r\n            this.$set(block, 'spec', newBlock);\r\n            this.commit();\r\n        },\r\n        updateBlock(block, key, value, extra) {\r\n            switch(key) {\r\n                case 'arguments':\r\n                    this.updateBlockArguments(block, value, extra);\r\n                    break;\r\n                case 'description':\r\n                    this.updateBlockDescription(block, value);\r\n                    break;\r\n                case 'position':\r\n                    this.updateBlockPos(block, value, extra);\r\n                    break;\r\n                case 'result':\r\n                    this.setResultNode(block, value);\r\n                    break;\r\n                case 'selected':\r\n                    this.updateBlockSelected(block, value, extra);\r\n                    break;\r\n                case 'spec':\r\n                    this.updateBlockSpec(block, value);\r\n                    break;\r\n            }\r\n        },\r\n        updateHiddenParameterRefEdges() {\r\n            // We can only reliably detect parameter refs if we know which parameters a process makes available to the child process\r\n            // So if we don't have process schemas, don't offer this functionality.\r\n            // Also don't execute (yet) if no parameters are given or not all elements are mounted yet.\r\n            if (!this.hasProcesses || !this.allMounted || !this.blocks.find(block => block.type === 'parameter')) {\r\n                this.hiddenParameterRefEdges = {};\r\n                return;\r\n            }\r\n\r\n            let hiddenRefs = {};\r\n            for(let process of this.processBlocks) {\r\n                for (let argName in process.arguments) {\r\n                    let value = process.arguments[argName];\r\n                    if (!Utils.isObject(value) || !Utils.isObject(value.process_graph)) {\r\n                        continue; // Process can only have hidden refs it it contains a process graph\r\n                    }\r\n                    \r\n                    let refs = PgUtils.getRefs(value, true, true).filter(ref => typeof ref.from_parameter !== 'undefined');\r\n                    for(let ref of refs) {\r\n                        try {\r\n                            if (process.$el.isParameterScoped(argName, ref.from_parameter)) {\r\n                                continue; // Skip if the parameter usage is scoped (i.e. defined as process parameetr for the children)\r\n                            }\r\n                            let parameter = this.getPgParameterById('$' + ref.from_parameter);\r\n                            if (!parameter) {\r\n                                continue; // Skip if parameter can't be found\r\n                            }\r\n                            let parameter1 = parameter.$el.getBlockParameter('output');\r\n                            let parameter2 = process.$el.getBlockParameter(argName);\r\n                            let id = `${parameter.id}->${process.id}:${argName}`;\r\n                            if (parameter1 && parameter2) {\r\n                                if (this.hiddenParameterRefEdges[id]) {\r\n                                    hiddenRefs[id] = this.hiddenParameterRefEdges[id];\r\n                                }\r\n                                else {\r\n                                    hiddenRefs[id] = {\r\n                                        $el: null,\r\n                                        id,\r\n                                        parameter1,\r\n                                        parameter2\r\n                                    };\r\n                                }\r\n                            }\r\n                        } catch(error) {\r\n                             console.warn(error);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            this.hiddenParameterRefEdges = hiddenRefs;\r\n        },\r\n        parameterRemoved(block, parameterNames) {\r\n            for(let edge of this.edges.slice(0)) {\r\n                if(edge.parameter2.$parent.id === block.id && parameterNames.includes(edge.parameter2.name)) {\r\n                    this.removeEdge(edge);\r\n                }\r\n            }\r\n        },\r\n        startDragBlock(event) {\r\n            for(let block of this.blocks) {\r\n                if (block.$el) {\r\n                    block.$el.startDrag(event);\r\n                }\r\n            }\r\n        },\r\n        refreshEdges() {\r\n            this.refreshEdgesFor(this.edges);\r\n            this.refreshEdgesFor(Object.values(this.hiddenParameterRefEdges));\r\n        },\r\n        refreshEdgesFor(edges) {\r\n            for(let edge of edges) {\r\n                if (edge.$el) {\r\n                    edge.$el.updatePositions();\r\n                }\r\n            }\r\n        },\r\n        supports(event) {\r\n            return Boolean(this.$listeners && this.$listeners[event]);\r\n        },\r\n        focus() {\r\n            this.$refs.div.focus();\r\n        },\r\n        link(parameter) {\r\n            if (this.state.linkFrom) {\r\n                this.state.linkTo = parameter;\r\n            }\r\n            else {\r\n                this.state.linkFrom = parameter;\r\n            }\r\n        },\r\n        unlink(parameter = null) {\r\n            if (parameter) {\r\n                if (this.state.linkTo == parameter) {\r\n                    this.state.linkTo = null;\r\n                }\r\n                else if (this.state.linkFrom == parameter) {\r\n                    this.state.linkFrom = null;\r\n                    this.linkingLine = null;\r\n                }\r\n            }\r\n            else {\r\n                this.state.linkTo = null;\r\n                this.state.linkFrom = null;\r\n                this.linkingLine = null;\r\n            }\r\n        },\r\n        multiSelect() {\r\n            let box = this.selectRect;\r\n            this.blocks\r\n                .filter(b => {\r\n                    if (Array.isArray(b.position) && b.$el) {\r\n                        let pos = b.$el.getDimensions();\r\n                        return boxIntersectsBox(box.x, box.y, box.width, box.height, pos.x, pos.y, pos.width, pos.height);\r\n                    }\r\n                    return false;\r\n                })\r\n                .map(b => b.selected = true);\r\n            this.edges\r\n                .filter(e => Array.isArray(e.position1) && Array.isArray(e.position2) && boxIntersectsLine(box.x, box.y, box.width, box.height, e.position1[0], e.position1[1], e.position2[0], e.position2[1]))\r\n                .map(e => e.selected = true);\r\n        },\r\n        toJSON() {\r\n            let process = this.export();\r\n            return JSON.stringify(process, null, 2);\r\n        },\r\n        async onDocumentMouseUp(event) {\r\n            if (this.parameterViewer) {\r\n                return;\r\n            }\r\n            if (this.selectedSideEdge) {\r\n                this.selectEdge(this.selectedSideEdge, null); // Reset selectedParameter, but don't change selected state.\r\n            }\r\n            if (this.state.selecting) {\r\n                this.multiSelect();\r\n                this.state.selecting = null;\r\n            }\r\n            if (this.state.moving) {\r\n                this.state.moving = null;\r\n            }\r\n            if (this.state.editable && this.state.linkFrom) {\r\n                if (event.which == 1 && this.state.linkTo) {\r\n                    try {\r\n                        await this.addEdge(this.state.linkFrom, this.state.linkTo);\r\n                    } catch (error) {\r\n                        this.$emit(\"error\", error);\r\n                    }\r\n                }\r\n                this.unlink();\r\n            }\r\n        },\r\n        async onKeyDown(event) {\r\n            if (this.parameterViewer) {\r\n                return;\r\n            }\r\n            var allInputs = document.querySelectorAll('input, textarea, button, select, datalist');\r\n            for(let el of allInputs) {\r\n                if (el === document.activeElement) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            let captured = false;\r\n            if (this.state.editable) {\r\n                // delete selected blocks/edges\r\n                if (event.code === 'Delete') {\r\n                    this.deleteSelected();\r\n                    captured = true;\r\n                }\r\n                else if (event.ctrlKey || event.metaKey) { // STRG for Win/Linux, meta/cmd from Mac\r\n                    if (event.code === 'KeyV') {\r\n                        if (!navigator || !navigator.clipboard || typeof navigator.clipboard.readText !== 'function') {\r\n                            this.$emit('error', 'Pasting is not supported by your browser.');\r\n                            return;\r\n                        }\r\n                        if (this.hasSelection && this.clipboard) {\r\n                            return; // ToDo: Implement pasting for selected blocks\r\n                        }\r\n                        else {\r\n                            try {\r\n                                const text = await navigator.clipboard.readText();\r\n                                let process = JSON.parse(text);\r\n                                await this.import(process);\r\n                            } catch(error) {\r\n                                this.$emit('error', error, 'Paste Error');\r\n                            }\r\n                        }\r\n                        captured = true;\r\n                    }\r\n                    else if (event.code === 'KeyC') {\r\n                        if (!navigator || !navigator.clipboard || typeof navigator.clipboard.writeText !== 'function') {\r\n                            this.$emit('error', 'Copying is not supported by your browser.');\r\n                            return;\r\n                        }\r\n                        if (this.hasSelection) {\r\n                            this.clipboard = {\r\n                                blocks: this.selectedBlocks.slice(0),\r\n                                edges: this.selectedEdges.slice(0)\r\n                            };\r\n                        }\r\n                        else {\r\n                            try {\r\n                                let json = this.toJSON();\r\n                                await navigator.clipboard.writeText(json);\r\n                                captured = true;\r\n                            } catch(error) {\r\n                                this.$emit('error', error, 'Copy Error');\r\n                            }\r\n                        }\r\n                        captured = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (captured) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }\r\n        },\r\n        onMouseWheel(event) {\r\n            if (this.parameterViewer) {\r\n                return;\r\n            }\r\n            if (!this.explicitZoom || this.hasFocus || event.ctrlKey || event.metaKey) { // STRG for Win/Linux, meta/cmd for Mac\r\n                let mouse = this.getMousePos(event);\r\n                var dX = mouse[0] - this.state.center[0];\r\n                var dY = mouse[1] - this.state.center[1];\r\n                var deltaScale = Math.pow(1.1, Math.sign(event.deltaY)*-1);\r\n                this.moveCenter(-dX*(deltaScale-1), -dY*(deltaScale-1));\r\n                this.state.scale *= deltaScale;\r\n                event.preventDefault();\r\n                this.showZoomInfo = false;\r\n            }\r\n        },\r\n        domBoundingBox(el) {\r\n            var rect = el.getBoundingClientRect();\r\n            rect.offsetTop = rect.top + Math.max(document.documentElement.scrollTop, document.body.scrollTop);\r\n            rect.offsetLeft = rect.left + Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);\r\n            return rect;\r\n        },\r\n        getMousePos(event) {\r\n            let root = this.$refs.div.getBoundingClientRect();\r\n            return [\r\n                event.clientX - root.left,\r\n                event.clientY - root.top\r\n            ];\r\n        },\r\n        onMouseMove(event) {\r\n            if (this.parameterViewer) {\r\n                return;\r\n            }\r\n            try {\r\n                let mousePos = this.getMousePos(event);\r\n\r\n                if (this.state.editable && this.selectedSideEdge) {\r\n                    var origin = this.selectedSideEdge.selectedParameter.getCirclePosition();\r\n                    if (origin) {\r\n                        var distance = Math.sqrt(Math.pow(mousePos[0]-origin[0], 2)+Math.pow(mousePos[1]-origin[1], 2));\r\n                        if (distance > 10) {\r\n                            this.link(this.selectedSideEdge.selectedParameter);\r\n                            this.removeEdge(this.selectedSideEdge);\r\n                            this.commit();\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (this.state.selecting) {\r\n                    this.state.selecting.current = mousePos;\r\n                }\r\n\r\n                if (this.state.moving) {\r\n                    this.moveCenter((mousePos[0]-this.state.moving[0]), (mousePos[1]-this.state.moving[1]));\r\n                    this.state.moving = mousePos;\r\n                }\r\n\r\n                if (this.state.linkFrom) {\r\n                    var position = this.state.linkFrom.getCirclePosition();\r\n                    if (position) {\r\n                        this.linkingLine = {\r\n                            x1: position[0],\r\n                            y1: position[1],\r\n                            x2: mousePos[0],\r\n                            y2: mousePos[1],\r\n                            'stroke': 'rgba(0,0,0,0.4)',\r\n                            'stroke-width': 3 * this.state.scale\r\n                        };\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                this.$emit(\"error\", error);\r\n            }\r\n        },\r\n        onMouseDown(event) {\r\n            if (this.parameterViewer) {\r\n                return;\r\n            }\r\n            let sideSelected = null;\r\n            let mousePos = this.getMousePos(event);\r\n\r\n            if (event.which == 1) {\r\n                if (event.shiftKey) {\r\n                    // Start multi select via box\r\n                    this.state.selecting = {\r\n                        start: mousePos,\r\n                        current: mousePos\r\n                    }\r\n                }\r\n                else {\r\n                    // No multiselect: unselect all\r\n                    this.unselectAll();\r\n                }\r\n\r\n                // Select edges\r\n                for (var edge of this.edges) {\r\n                    if (!edge.$el) {\r\n                        continue;\r\n                    }\r\n                    var collide = edge.$el.collide(mousePos[0], mousePos[1]);\r\n                    if (collide != false) {\r\n                        if (this.selectedEdges.length === 0 && !event.shiftKey) {\r\n                            if (collide < 0.3) {\r\n                                sideSelected = edge.parameter2;\r\n                            }\r\n                            else if (collide > 0.7) {\r\n                                sideSelected = edge.parameter1;\r\n                            }\r\n                        }\r\n                        this.selectEdge(edge, true, sideSelected);\r\n                        if (edge.issues.length > 0) {\r\n                            for(let issue of edge.issues) {\r\n                                this.$emit('error', issue);\r\n                            }\r\n                        }\r\n                        event.preventDefault();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (event.which == 2 || (event.which == 1 && !sideSelected && !event.shiftKey)) {\r\n                this.state.moving = mousePos;\r\n            }\r\n\r\n            this.focus();\r\n        },\r\n\r\n        getDimensions() {\r\n            return this.domBoundingBox(this.$refs.div);\r\n        },\r\n\r\n        async clear() {\r\n            return await this.startTransaction(async () => {\r\n                this.edges = [];\r\n                // Don't remove parameters injected by props (fixed callback parameters)\r\n                this.blocks = this.blocks.filter(b => b.type === 'parameter' && Utils.isObject(b.spec) && b.origin === 'schema');\r\n                this.nextBlockId = 1;\r\n                this.nextEdgeId = 1;\r\n                this.process = {};\r\n                this.updateHiddenParameterRefEdges();\r\n                return true;\r\n            });\r\n        },\r\n\r\n        commit(data = null, history = true, propagate = true) {\r\n            // Don't commit when in a transaction\r\n            if (this.activeTransactions > 0) {\r\n                return;\r\n            }\r\n\r\n            if (history !== false) {\r\n                this.saveHistory();\r\n            }\r\n            if (propagate !== false) {\r\n                this.$emit('input', data === null ? this.export() : data);\r\n                this.updateHiddenParameterRefEdges();\r\n            }\r\n            else {\r\n                this.refreshEdges();\r\n            }\r\n        },\r\n    \r\n        /**\r\n         * Save the current situation to the history\r\n         */\r\n        saveHistory() {\r\n            var data = this.export(true);\r\n            this.history.splice(this.historyPointer + 1, this.historySize, Object.freeze(data));\r\n            if (this.history.length > this.historySize) {\r\n                this.history.shift();\r\n            }\r\n            this.historyPointer = this.history.length - 1;\r\n            this.$emit('historyChanged', this.history, this.historyPointer);\r\n        },\r\n        async undo() {\r\n            await this.historyStep(-1);\r\n        },\r\n        async redo() {\r\n            await this.historyStep(1);\r\n        },\r\n        async historyStep(step) {\r\n            var index = this.historyPointer + step;\r\n            var element = this.history[index];\r\n            if (element) {\r\n                this.historyPointer = index;\r\n                this.import(element, { saveHistory: false, undoOnError: false, perfectScale: false });\r\n                this.$emit('historyChanged', this.history, this.historyPointer);\r\n            }\r\n        },\r\n\r\n        setResultNode(block, result = true) {\r\n            block = this.getBlockById(block.id);\r\n            if (!block || block.result === result) {\r\n                return; // Nothing to change\r\n            }\r\n\r\n            this.updateBlockResult(block, result);\r\n            var foundNewResultNode = false;\r\n            var hasOtherBlocks = false;\r\n            for(var other of this.processBlocks) {\r\n                if (block && other.id === block.id) {\r\n                    continue;\r\n                }\r\n                \r\n                hasOtherBlocks = true;\r\n                // If we set a new result node, ensure that only that node is a result node and no other.\r\n                if (result) {\r\n                    this.updateBlockResult(other, false);\r\n                }\r\n                // Find a potential result node if we don't want this to be the result node\r\n                else {\r\n                    if (other.$el && !other.$el.hasOutputEdges()) {\r\n                        this.updateBlockResult(other, true);\r\n                        foundNewResultNode = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            // If we have no new potential result node, communicate to the user.\r\n            if (hasOtherBlocks && !result && !foundNewResultNode) {\r\n                this.$emit(\"error\", \"No result node available, please specify one.\");\r\n            }\r\n        },\r\n\r\n        getPositionForPageXY(x, y) {\r\n            var rect = this.getDimensions();\r\n            if (x !== null) {\r\n                x = (x - rect.offsetLeft - this.state.center[0]) / this.state.scale;\r\n            }\r\n            if (y !== null) {\r\n                y = (y - rect.offsetTop - this.state.center[1]) / this.state.scale;\r\n            }\r\n            return [x, y];\r\n        },\r\n\r\n        addProcess(process_id, args = {}, position = [], namespace = null) {\r\n            return this.addBlock({\r\n                process_id,\r\n                namespace,\r\n                arguments: args,\r\n                position\r\n            });\r\n        },\r\n\r\n        addBlock(node, id = null) {\r\n            let num = String(this.incrementId(id));\r\n            if (id === null && Utils.hasText(node.process_id)) {\r\n                id = node.process_id.replace(/^([a-z]*).*$/i, \"$1\") + num;\r\n                if (this.getBlockById('#' + id)) {\r\n                    id = num;\r\n                }\r\n            }\r\n            else {\r\n                id = num;\r\n            }\r\n            if (typeof node.toJSON === 'function') {\r\n                node = node.toJSON();\r\n            }\r\n            var block = {\r\n                id: '#' + id,\r\n                type: 'process',\r\n                selected: false,\r\n                position: node.position,\r\n                process_id: node.process_id,\r\n                namespace: node.namespace,\r\n                arguments: node.arguments,\r\n                description: node.description || null,\r\n                result: node.result || false\r\n            };\r\n            if (this.processRegistry) {\r\n                block.spec = this.processRegistry.get(node.process_id, node.namespace);\r\n            }\r\n\r\n            var size = this.getBlockSize(block);\r\n            block.position = Utils.ensurePoint(block.position, () => this.getNewBlockDefaultPosition(size));\r\n\r\n            // If there's already a result node, remove the flag here\r\n            if (block.result && this.blocks.filter(b => b.result === true).length) {\r\n                delete block.result;\r\n            }\r\n            // Make this the result node if there's no node yet\r\n            else if (this.processBlocks.length === 0) {\r\n                block.result = true;\r\n            }\r\n            \r\n            this.blocks.push(Vue.observable(block));\r\n            this.commit();\r\n            return block;\r\n        },\r\n\r\n        getNewBlockDefaultPosition(blockSize) {\r\n            var rect = this.getDimensions();\r\n            var position = [\r\n                (-this.state.center[0] + rect.width/2)/this.state.scale - blockSize[0]/2 + this.newBlockOffset,\r\n                (-this.state.center[1] + rect.height/2)/this.state.scale - blockSize[1]/2 + this.newBlockOffset\r\n            ];\r\n            if (this.newBlockOffset < 150) {\r\n                this.newBlockOffset += 10;\r\n            }\r\n            return position;\r\n        },\r\n\r\n        getBlockSize(block) {\r\n            if (block.$el) {\r\n                let dim = block.$el.getDimensions();\r\n                return [dim.width / this.state.scale, dim.height / this.state.scale];\r\n            }\r\n\r\n            let inputs = Math.max(\r\n                Utils.size(block.arguments),\r\n                Utils.isObject(block.spec) ? Utils.size(block.spec.parameters) : 0\r\n            );\r\n\r\n            let size = Config.blockWidth;\r\n            let width;\r\n            if (inputs > 0) {\r\n                width = this.state.compactMode ? size.compactParams : size.normalParams;\r\n            }\r\n            else {\r\n                width = this.state.compactMode ? size.compact : size.normal;\r\n            }\r\n\r\n            let commentHeight = typeof block.description === 'string' ? 40 : 0;\r\n            let height = MARGIN + inputs * 15 + commentHeight;\r\n\r\n            return [width, height];\r\n        },\r\n\r\n        moveCenter(dX, dY, reset = false) {\r\n            var rect = this.getDimensions();\r\n            this.state.center = [\r\n                (reset ? rect.width/2 : this.state.center[0]) + dX,\r\n                (reset ? rect.height/2 : this.state.center[1]) + dY\r\n            ];\r\n            this.newBlockOffset = 0;\r\n        },\r\n\r\n        unselectAll() {\r\n            for(var block of this.blocks) {\r\n                this.updateBlockSelected(block, false, false);\r\n            }\r\n            for(var edge of this.edges) {\r\n                this.selectEdge(edge, false);\r\n            }\r\n        },\r\n\r\n        selectEdge(edge, select = true, parameter = null) {\r\n            if (!Utils.isObject(edge)) {\r\n                edge = this.edges[edge];\r\n            }\r\n            if (edge.selected === select) {\r\n                return false; // Nothing to change\r\n            }\r\n            if (select !== null) {\r\n                this.$set(edge, \"selected\", select);\r\n            }\r\n            this.$set(edge, \"selectedParameter\", parameter);\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Edge to remove\r\n         */\r\n        removeEdge(edge) {\r\n            edge.parameter1.eraseEdge(edge);\r\n            edge.parameter2.eraseEdge(edge);\r\n            this.$delete(this.edges, this.edges.indexOf(edge));\r\n        },\r\n            \r\n        /**\r\n         * Remove a block\r\n         */\r\n        async removeBlock(block) {\r\n            // Check if the parameter for this block is used in child processes (callbacks).\r\n            // Then don't delete, but give error instead.\r\n            if (block.type === 'parameter') {\r\n                let param = null;\r\n                let conflictBlock = this.blocks.find(otherBlock => {\r\n                    param = otherBlock.$el.hiddenParameterRef(block);\r\n                    return (param !== null);\r\n                });\r\n                if (conflictBlock) {\r\n                    throw new Error(`Parameter is still used in '${conflictBlock.id}', parameter '${param}'. Only unused parameters can be deleted.`);\r\n                }\r\n            }\r\n\r\n            // now start deleting the block\r\n            return await this.startTransaction(async () => {\r\n                var i = this.blocks.findIndex(b => b.id == block.id);\r\n                if (i < 0) {\r\n                    return false;\r\n                }\r\n\r\n                for (var edge of this.edges.slice(0)) {\r\n                    if (edge.parameter1.$parent.id === block.id || edge.parameter2.$parent.id === block.id) {\r\n                        this.removeEdge(edge);\r\n                    }\r\n                }\r\n\r\n                if (block.result) {\r\n                    this.setResultNode(block, false);\r\n                }\r\n\r\n                this.$delete(this.blocks, i);\r\n                return true;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Retreive a block by ID\r\n         */\r\n        getBlockById(blockId) {\r\n            var blocks = this.blocks.filter(block => block.id === blockId);\r\n            if (blocks.length > 0) {\r\n                return blocks[0];\r\n            }\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * Delete the current link\r\n         */\r\n        async deleteSelected() {\r\n            if (!this.hasSelection) {\r\n                return false;\r\n            }\r\n\r\n            return await this.startTransaction(async () => {\r\n                // Remove the selected blocks and its edges\r\n                for(var block of this.selectedBlocks.slice(0)) { // copy to avoid race condition\r\n                    if (block.$el.allowsDelete) {\r\n                        await this.removeBlock(block);\r\n                    }\r\n                }\r\n\r\n                // Removes the selected edges\r\n                for(var edge of this.selectedEdges.slice(0)) { // copy to avoid race condition\r\n                    this.removeEdge(edge);\r\n                }\r\n                return true;\r\n            });\r\n        },\r\n\r\n        async addEdgeByNames(b1, p1, b2, p2) {\r\n            var blocks = [];\r\n            for(var id of [b1, b2]) {\r\n                var block = this.getBlockById(id);\r\n                if (!block) {\r\n                    throw \"Can't find block: \" + id;\r\n                }\r\n                else if (!block.$el) {\r\n                    throw \"Block not mounted yet: \" + id;\r\n                }\r\n                blocks.push(block.$el);\r\n            }\r\n            await this.addEdge(\r\n                blocks[0].getBlockParameter(p1),\r\n                blocks[1].getBlockParameter(p2)\r\n            );\r\n        },\r\n \r\n        async addEdge(p1, p2) {\r\n            if (!p1 || !p2) {\r\n                throw 'One of the parameters is invalid.';\r\n            }\r\n            // Check whether you want to connect the same parameters\r\n            if (p1 == p2) {\r\n                return; // Probably by mistake, don't show an error to not annoy people\r\n            }\r\n            // Check whether you want to connect the block to itself\r\n            if (p1.$parent == p2.$parent) {\r\n                throw 'You can\\'t link a block to itself';\r\n            }\r\n\r\n            var id = this.nextEdgeId++;\r\n            var edge = {id, selected: false, inactive: false, issues: [], $el: null};\r\n            if (p1.output) {\r\n                edge.parameter1 = p1;\r\n                edge.parameter2 = p2;\r\n            }\r\n            else {\r\n                // Reverse the order of in and out\r\n                edge.parameter1 = p2;\r\n                edge.parameter2 = p1;\r\n            }\r\n\r\n            // You have to link an input with an output\r\n            if (edge.parameter1.output === edge.parameter2.output) {\r\n                throw 'You have to link an input with an output';\r\n            }\r\n            // Check for non-recursiveness\r\n            if (this.allSuccessors(edge.parameter1).indexOf(edge.parameter2.id) !== -1) {\r\n                throw 'You can not create a loop';\r\n            }\r\n            // Check whether the data type allows multiple input edges\r\n            if (edge.parameter2.getEdgeCount() > 0 && !edge.parameter2.allowsMultipleInputs) {\r\n                throw 'Parameter accepts only one input';\r\n            }\r\n\r\n            // Check whether the edge exists\r\n            for (var other of this.edges) {\r\n                if (other.$el && other.$el.equals(edge)) {\r\n                    throw 'This connection exists already';\r\n                }\r\n            }\r\n\r\n            // Check type compatibility\r\n            if (!JsonSchemaValidator.isSchemaCompatible(edge.parameter2.schema || {}, edge.parameter1.schema || {}, false, true)) {\r\n                let issue = 'Incoming data type is not compatible for parameter \"' + edge.parameter2.name + '\"';\r\n                edge.issues.push(issue);\r\n                this.$emit('error', issue);\r\n            }\r\n\r\n            return await this.startTransaction(async () => {\r\n                this.unlink();\r\n\r\n                // Create edge\r\n                this.edges.push(Vue.observable(edge));\r\n                edge.parameter1.addEdge(edge);\r\n                edge.parameter2.addEdge(edge);\r\n\r\n                // Update result node\r\n                this.setResultNode(edge.parameter1.$parent, false);\r\n                return true;\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Find all successors of a block, and their successors\r\n         */\r\n        allSuccessors(outputParameter) {\r\n            var block = outputParameter.$parent;\r\n            // Blocks already explored\r\n            var explored = {};\r\n            var exploreList = [block];\r\n            explored[block.id] = true;\r\n        \r\n            while (exploreList.length > 0) {\r\n                var currentBlock = exploreList.pop();\r\n                for (var key in currentBlock.edges) {\r\n                    for (var i in currentBlock.edges[key]) {\r\n                        var edge = currentBlock.edges[key][i];\r\n                        if (edge.block1 == currentBlock) {\r\n                            var target = edge.block2;\r\n                            if (!(target.id in explored)) {\r\n                                explored[target.id] = true;\r\n                                exploreList.push(target);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return Object.values(explored);\r\n        },\r\n\r\n        /**\r\n         * Changing the compact mode\r\n         */\r\n        async toggleCompact() {\r\n            this.state.compactMode = !this.state.compactMode;\r\n            this.$emit('compactMode', this.state.compactMode);\r\n            await this.$nextTick();\r\n            this.refreshEdges();\r\n        },\r\n\r\n        export(internal = false) {\r\n            let data = {\r\n                process_graph: {}\r\n            };\r\n\r\n            for(let block of this.processBlocks) {\r\n                let keys = ['process_id', 'namespace', 'arguments', 'description', 'result'];\r\n                if (internal) {\r\n                    // Keep internal state for history\r\n                    keys.push('position');\r\n                }\r\n                let copy = Utils.pickFromObject(block, keys);\r\n                // Remove default values for simplicity\r\n                if (copy.description === null) {\r\n                    delete copy.description;\r\n                }\r\n                if (copy.result !== true) {\r\n                    delete copy.result;\r\n                }\r\n                if (!copy.namespace) {\r\n                    delete copy.namespace;\r\n                }\r\n                let nodeId = block.id.substr(1);\r\n                data.process_graph[nodeId] = copy;\r\n            }\r\n\r\n            if (!this.parent) {\r\n                data.parameters = [];\r\n                let parameterBlocks = this.getPgParameters();\r\n                for(let param of parameterBlocks) {\r\n                    data.parameters.push(param.spec);\r\n                }\r\n            }\r\n\r\n            // ToDo: Currently, we just use the id, categories, result value etc from the original process.\r\n            // Implement to allow custom settings from users.\r\n            return new BlocksProcess(Object.assign({}, this.process, data));\r\n        },\r\n\r\n        // Options may contain:\r\n        // - undoOnError: don't undo changes when an error occured (default: true)\r\n        // - saveHistory: commit the changes to the history (default: true)\r\n        // - propagate: emit the changes to the parent v-model (default: true)\r\n        async startTransaction(fn, options = {}, ...args) {\r\n            let success;\r\n            this.activeTransactions++;\r\n\r\n            try {\r\n                success = await fn(args);\r\n            } catch (error) {\r\n                // If an error occured: show it and restore the last working state from history.\r\n                this.$emit('error', error, \"Model is invalid\");\r\n                if (options.undoOnError !== false) {\r\n                    try {\r\n                        await this.undo();\r\n                    } catch (error2) {\r\n                        this.$emit('error', error, \"Revert failed\");\r\n                    }\r\n                }\r\n                success = false;\r\n            }\r\n\r\n            this.activeTransactions--;\r\n            this.commit(null, options.saveHistory, options.propagate);\r\n\r\n            return success;\r\n        },\r\n\r\n        // Options may contain:\r\n        // - all from startTransaction()\r\n        // - clear: Clear the model builder before import (default: true)\r\n        // - perfectScale: Apply perfect scale after import (default: true)\r\n        async import(process, options = {}) {\r\n            return await this.startTransaction(async () => {\r\n                // clear screen...\r\n                if (options.clear !== false) {\r\n                    await this.clear();\r\n                    this.process = process instanceof ProcessGraph ? process.toJSON() : process;\r\n                }\r\n\r\n                if (!Utils.isObject(process)) {\r\n                    return false;\r\n                }\r\n\r\n                // Parse process\r\n                let pg;\r\n                if (process instanceof ProcessGraph) {\r\n                    // Make a copy\r\n                    pg = new ProcessGraph(process.toJSON(), this.processRegistry);\r\n                    pg.setParent(process.parentProcessId, process.parentParameterName);\r\n                }\r\n                else {\r\n                    pg = new ProcessGraph(process, this.processRegistry);\r\n                }\r\n                pg.allowEmpty();\r\n                pg.parse();\r\n                this.processGraph = Object.freeze(pg);\r\n\r\n                await this.importPgParameters(this.processGraph.getProcessParameters(true), 'user', options.clear !== false);\r\n                await this.importNodes(this.processGraph.getStartNodes());\r\n                await this.importEdges(this.processGraph);\r\n\r\n                if (options.perfectScale !== false) {\r\n                    this.perfectScale();\r\n                }\r\n\r\n                this.$nextTick(() => this.updateHiddenParameterRefEdges());\r\n\r\n                return true;\r\n            }, options);\r\n        },\r\n\r\n        async importPgParameters(params, origin, clear = true) {\r\n            if (!Array.isArray(params)) {\r\n                return;\r\n            }\r\n\r\n            let options = {\r\n                undoOnError: false,\r\n                saveHistory: false,\r\n                propagate: false\r\n            };\r\n            return await this.startTransaction(async () => {\r\n                // Remove existing parameters from the given origin\r\n                if (clear) {\r\n                    this.blocks = this.blocks.filter(b => b.type !== 'parameter' || b.origin !== origin);\r\n                }\r\n\r\n                let size = this.getBlockSize({}); // Estimate base size for an empty block\r\n                let position = [0,0];\r\n                for(var i in params) {\r\n                    position = [\r\n                        -size[0] - MARGIN,\r\n                        i * (size[1] + MARGIN)\r\n                    ];\r\n\r\n                    await this.addPgParameter(params[i], origin, position);\r\n                }\r\n            }, options);\r\n        },\r\n\r\n        async addPgParameter(param, origin = 'user', position = null) {\r\n            return await this.startTransaction(async () => {\r\n                let id = '$' + param.name;\r\n                // Check a parameter with the same name exists\r\n                if (this.blocks.findIndex(p => p.type === 'parameter' && p.id == id) >= 0) {\r\n                    return false;\r\n                }\r\n                param = Utils.deepClone(param);\r\n                if (typeof param.schema === 'undefined') {\r\n                    param.schema = {};\r\n                }\r\n                this.blocks.push(Vue.observable({\r\n                    id,\r\n                    type: 'parameter',\r\n                    origin,\r\n                    position: Utils.ensurePoint(position, () => this.getNewBlockDefaultPosition(this.getBlockSize({}))),\r\n                    spec: Object.freeze(param)\r\n                }));\r\n                return true;\r\n            });\r\n        },\r\n\r\n        getPgParameters() {\r\n            return this.blocks.filter(b => b.type === 'parameter');\r\n        },\r\n\r\n        getPgParameterById(id) {\r\n            return this.blocks.find(b => b.type === 'parameter' && b.id === id);\r\n        },\r\n\r\n        async importEdges(pg) {\r\n            var nodes = pg.getNodes();\r\n            for(var node of Object.values(nodes)) {\r\n                var args = node.getArgumentNames();\r\n                for(let i in args) {\r\n                    var val = node.getRawArgument(args[i]);\r\n                    switch(node.getArgumentType(args[i])) {\r\n                        case 'result':\r\n                            await this.addEdgeByNames('#' + pg.getNode(val.from_node).id, \"output\", '#' + node.id, args[i], false);\r\n                            break;\r\n                        case 'parameter':\r\n                            await this.addEdgeByNames('$' + val.from_parameter, \"output\", '#' + node.id, args[i], false);\r\n                            break;\r\n                        case 'object':\r\n                        case 'array':\r\n                            await this.importEdgeDeep(val, pg, node, args, i);\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        async importEdgeDeep(val, pg, node, args, i) {\r\n            for(let k in val) {\r\n                // k !== 'process_graph' prevents importing sub process graphs like in load_collection, see #118\r\n                if(val[k] && typeof val[k] === \"object\" && k !== 'process_graph') {\r\n                    await this.importEdgeDeep(val[k], pg, node, args, i);\r\n                }\r\n                else if (!Utils.isRef(val)) {\r\n                    continue;\r\n                }\r\n                else if (val.from_node) {\r\n                    await this.addEdgeByNames('#' + pg.getNode(val.from_node).id, \"output\", '#' + node.id, args[i], false);\r\n                }\r\n                else if (val.from_parameter) {\r\n                    await this.addEdgeByNames('$' + val.from_parameter, \"output\", '#' + node.id, args[i], false);\r\n                }\r\n            }\r\n        },\r\n\r\n        async importNodes(nodes, x = 0, y = 0, imported = []) {\r\n            let nextNodes = [];\r\n            let maxX = 0;\r\n            for(let node of nodes) {\r\n                // `node` is a Node class instance as defined by the js-processgraphs library\r\n                // `data` is the simple object that is defined by JSON process graphs\r\n                // `block` is the representation used by the Block component to render the block\r\n\r\n                // To get a better layout, only add the block once all previous nodes are added\r\n                if (imported.includes(node.id) || node.getPreviousNodes().find(prev => !imported.includes(prev.id)) !== undefined) {\r\n                    y += MARGIN / 2; // add a small offset so that lines going through a box are easier to see\r\n                    continue;\r\n                }\r\n\r\n                let data = typeof node.toJSON === 'function' ? node.toJSON() : node;\r\n                data.position = Utils.ensurePoint(data.position, () => [x,y]);\r\n\r\n                let block = this.addBlock(data, node.id);\r\n                imported.push(node.id);\r\n\r\n                let size = this.getBlockSize(block);\r\n                maxX = Math.max(maxX, data.position[0] + size[0]);\r\n                y = data.position[1] + size[1] + MARGIN;\r\n\r\n                nextNodes = nextNodes.concat(node.getNextNodes());\r\n            }\r\n            if (nextNodes.length) {\r\n                await this.importNodes(nextNodes, maxX + MARGIN, 0, imported);\r\n            }\r\n        },\r\n\r\n        incrementId(id = null) {\r\n            if (typeof id !== 'number' && (typeof id !== 'string' || id.length === 0)) {\r\n                id = this.nextBlockId;\r\n                this.nextBlockId++;\r\n            }\r\n            let int = Number.parseInt(id, 10);\r\n            if (!Number.isNaN(int)) {\r\n                this.nextBlockId = Math.max(this.nextBlockId, int+1);\r\n            }\r\n            return id;\r\n        },\r\n\r\n        /**\r\n         * Go to the perfect scale\r\n         */\r\n        perfectScale() {\r\n            if (!this.$refs.div || this.blocks.length === 0) {\r\n                return;\r\n            }\r\n\r\n            var xMin = null, xMax = null;\r\n            var yMin = null, yMax = null;\r\n\r\n            for (let block of this.blocks) {\r\n                let size = this.getBlockSize(block);\r\n                let pos = Utils.ensurePoint(block.position);\r\n                if (xMin == null) {\r\n                    xMin = pos[0]-15\r\n                    xMax = pos[0]+size[0]+15;\r\n                    yMin = pos[1]-15\r\n                    yMax = pos[1]+size[1]+15;\r\n                } else {\r\n                    xMin = Math.min(xMin, pos[0]-15);\r\n                    xMax = Math.max(xMax, pos[0]+size[0]+15);\r\n                    yMin = Math.min(yMin, pos[1]-15);\r\n                    yMax = Math.max(yMax, pos[1]+size[1]+15);\r\n                }\r\n            }\r\n\r\n            var rect = this.$refs.div.getBoundingClientRect();\r\n            var scaleA = rect.width/(xMax-xMin);\r\n            var scaleB = rect.height/(yMax-yMin);\r\n            this.state.scale = Math.min(scaleA, scaleB, 1.5); // Don't scale higher than 1.5\r\n            this.state.center = [\r\n                rect.width/2 - this.state.scale*(xMin+xMax)/2.0,\r\n                rect.height/2 - this.state.scale*(yMin+yMax)/2.0\r\n            ];\r\n            this.newBlockOffset = 0;\r\n        },\r\n\r\n        showParameterViewer(parameters, values, title, isEditable, selectParameterName, saveCallback, parent) {\r\n            this.parameterViewer = {\r\n                parameters,\r\n                values,\r\n                title,\r\n                selectParameterName,\r\n                parent\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nclass BlocksProcess {\r\n    constructor(process) {\r\n        Object.assign(this, process);\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.vue-component.model-builder {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tposition: relative;\r\n\r\n    &.editable.focus .blocks {\r\n        border-color: rgba(22, 102, 182, 0.3);\r\n    }\r\n\r\n    &:focus,\r\n    .blocks:focus,\r\n    .canvas:focus {\r\n        outline: 0;\r\n    }\r\n    \r\n    .canvas {\r\n        width: 100%;\r\n        height: 100%;\r\n        position: absolute;\r\n        z-index: 1;\r\n    }\r\n    \r\n    .blocks {\r\n        box-sizing: border-box;\r\n        border: 1px solid transparent;\r\n        overflow: hidden;\r\n        position: absolute;\r\n        z-index: 3;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    &.compact .blockicon .delete,\r\n    &.compact .blockicon .info,\r\n    &.compact .blockicon .addDescription,\r\n    &.compact .blockId,\r\n    &.compact .editDescription, \r\n    &.scale_xs .blockicon,\r\n    &.scale_s .blockicon,\r\n    &.scale_xs .connector .text {\r\n        display: none;\r\n    }\r\n    .zoomInfo {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        display: inline-block;\r\n        padding: 0.3em;\r\n        background-color: #f9f9f9;\r\n        border-radius: 0 0 0 0.3em;\r\n        z-index: 5;\r\n    }\r\n    &.scale_xs .editDescription {\r\n        visibility: hidden;\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ModelBuilder.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../@vue/vue-loader-v15/lib/index.js??vue-loader-options!./ModelBuilder.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModelBuilder.vue?vue&type=template&id=e9f8f992&\"\nimport script from \"./ModelBuilder.vue?vue&type=script&lang=js&\"\nexport * from \"./ModelBuilder.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModelBuilder.vue?vue&type=style&index=0&id=e9f8f992&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict'\n\n/**\n * box-box collision\n * @param {number} x1 top-left corner of first box\n * @param {number} y1 top-left corner of first box\n * @param {number} w1 width of first box\n * @param {number} h1 height of first box\n * @param {number} x2 top-left corner of second box\n * @param {number} y2 top-left corner of second box\n * @param {number} w2 width of second box\n * @param {number} h2 height of second box\n */\nmodule.exports = function boxBox(x1, y1, w1, h1, x2, y2, w2, h2)\n{\n    return x1 < x2 + w2 && x1 + w1 > x2 && y1 < y2 + h2 && y1 + h1 > y2\n}\n","'use strict'\n\nvar lineBox = require('./line-box')\n\n/**\n * box-line collision\n * @param {number} xb top-left corner of box\n * @param {number} yb top-left corner of box\n * @param {number} wb width of box\n * @param {number} hb height of box\n * @param {number} x1 first point of line\n * @param {number} y1 first point of line\n * @param {number} x2 second point of line\n * @param {number} y2 second point of line\n */\nmodule.exports = function boxLine(xb, yb, wb, hb, x1, y1, x2, y2)\n{\n    return lineBox(x1, y1, x2, y2, xb, yb, wb, hb)\n}\n","'use strict'\n\n/**\n * box-point collision\n * @param {number} x1 top-left corner of box\n * @param {number} y1 top-left corner of box\n * @param {number} w1 width of box\n * @param {number} h1 height of box\n * @param {number} x2 of point\n * @param {number} y2 of point\n * @return {boolean}\n */\nmodule.exports = function boxPoint(x1, y1, w1, h1, x2, y2)\n{\n    return x2 >= x1 && x2 <= x1 + w1 && y2 >= y1 && y2 <= y1 + h1\n}\n","'use strict'\n\nvar boxPoint = require('./box-point')\nvar lineLine = require('./line-line')\n\n/**\n * line-box collision\n number @param {number} x1 point 1 of line\n number @param {number} y1 point 1 of line\n number @param {number} x2 point 2 of line\n number @param {number} y2 point 2 of line\n number @param {number} xb top-left of box\n number @param {number} yb top-left of box\n number @param {number} wb width of box\n number @param {number} hb height of box\n */\nmodule.exports = function lineBox(x1, y1, x2, y2, xb, yb, wb, hb)\n{\n    if (boxPoint(xb, yb, wb, hb, x1, y1) || boxPoint(xb, yb, wb, hb, x2, y2))\n    {\n        return true\n    }\n    return lineLine(x1, y1, x2, y2, xb, yb, xb + wb, yb) ||\n        lineLine(x1, y1, x2, y2, xb + wb, yb, xb + wb, yb + hb) ||\n        lineLine(x1, y1, x2, y2, xb, yb + hb, xb + wb, yb + hb) ||\n        lineLine(x1, y1, x2, y2, xb, yb, xb, yb + hb)\n}\n","'use strict'\n\nconst lineToPolygon = require('./lineToPolygon')\nconst polygonPolygon = require('./polygon-polygon')\nconst linePolygon = require('./line-polygon')\nconst lineToLine = require('./lineToLine')\n\n/**\n * line-line collision\n * from http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect\n * @param {number} x1 first point in line 1\n * @param {number} y1 first point in line 1\n * @param {number} x2 second point in line 1\n * @param {number} y2 second point in line 1\n * @param {number} x3 first point in line 2\n * @param {number} y3 first point in line 2\n * @param {number} x4 second point in line 2\n * @param {number} y4 second point in line 2\n * @param {number} [thickness1] of line 1 (the line is centered in its thickness--see demo)\n * @param {number} [thickness2] of line 2 (the line is centered in its thickness--see demo)\n * @return {boolean}\n */\nmodule.exports = function lineLine(x1, y1, x2, y2, x3, y3, x4, y4, thickness1, thickness2)\n{\n    if (thickness1 || thickness2)\n    {\n        return lineLineThickness(x1, y1, x2, y2, x3, y3, x4, y4, thickness1, thickness2)\n    }\n    else\n    {\n        return lineToLine(x1, y1, x2, y2, x3, y3, x4, y4)\n    }\n}\n\nfunction lineLineThickness(x1, y1, x2, y2, x3, y3, x4, y4, thickness1, thickness2)\n{\n    if (thickness1 && thickness2)\n    {\n        return polygonPolygon(lineToPolygon(x1, y1, x2, y2, thickness1), lineToPolygon(x3, y3, x4, y4, thickness2))\n    }\n    else if (thickness1)\n    {\n        return linePolygon(x3, y3, x4, y4, lineToPolygon(x1, y1, x2, y2, thickness1))\n    }\n    else if (thickness2)\n    {\n        return linePolygon(x1, y1, x2, y2, lineToPolygon(x3, y3, x4, y4, thickness1))\n    }\n}","'use strict'\n\nfunction distanceSquared(x1, y1, x2, y2)\n{\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n}\n\n/**\n * line-point collision\n * from https://stackoverflow.com/a/17693146/1955997\n * @param {number} x1 first point in line\n * @param {number} y1 first point in line\n * @param {number} x2 second point in line\n * @param {number} y2 second point in line\n * @param {number} xp point\n * @param {number} yp point\n * @param {number} [tolerance=1]\n * @return {boolean}\n */\nmodule.exports = function linePoint(x1, y1, x2, y2, xp, yp, tolerance)\n{\n    tolerance = tolerance || 1\n    return Math.abs(distanceSquared(x1, y1, x2, y2) - (distanceSquared(x1, y1, xp, yp) + distanceSquared(x2, y2, xp, yp))) <= tolerance\n}","var polygonPoint = require('./polygon-point')\nvar lineLine = require('./lineToLine')\n\n/**\n * line-polygon collision\n @param {number} x1 point 1 of line\n @param {number} y1 point 1 of line\n @param {number} x2 point 2 of line\n @param {number} y2 point 2 of line\n @param {number[]} points of polygon\n @param {tolerance=1} maximum distance of point to polygon's edges that triggers collision (see pointLine)\n */\nmodule.exports = function linePolygon(x1, y1, x2, y2, points, tolerance)\n{\n    var length = points.length\n\n    // check if first point is inside the shape (this covers if the line is completely enclosed by the shape)\n    if (polygonPoint(points, x1, y1, tolerance))\n    {\n        return true\n    }\n\n    // check for intersections for all of the sides\n    for (var i = 0; i < length; i += 2)\n    {\n        var j = (i + 2) % length\n        if (lineLine(x1, y1, x2, y2, points[i], points[i + 1], points[j], points[j + 1]))\n        {\n            return true\n        }\n    }\n    return false\n}\n","'use strict'\n\n/**\n * lineToLine helper function (to avoid circular dependencies)\n * from http://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect\n * @param {number} x1 first point in line 1\n * @param {number} y1 first point in line 1\n * @param {number} x2 second point in line 1\n * @param {number} y2 second point in line 1\n * @param {number} x3 first point in line 2\n * @param {number} y3 first point in line 2\n * @param {number} x4 second point in line 2\n * @param {number} y4 second point in line 2\n * @return {boolean}\n */\nmodule.exports = function lineToLine(x1, y1, x2, y2, x3, y3, x4, y4)\n{\n    var s1_x = x2 - x1\n    var s1_y = y2 - y1\n    var s2_x = x4 - x3\n    var s2_y = y4 - y3\n    var s = (-s1_y * (x1 - x3) + s1_x * (y1 - y3)) / (-s2_x * s1_y + s1_x * s2_y)\n    var t = (s2_x * (y1 - y3) - s2_y * (x1 - x3)) / (-s2_x * s1_y + s1_x * s2_y)\n    return s >= 0 && s <= 1 && t >= 0 && t <= 1\n}","'use strict'\n\n/**\n * turns a line into a polygon using thickness\n * @param {number} x1 first point of line\n * @param {number} y1 first point of line\n * @param {number} x2 second point of line\n * @param {number} y2 second point of line\n * @param {number} thickness of line\n */\nmodule.exports = function lineToPolygon(x1, y1, x2, y2, thickness)\n{\n    const angle = Math.atan2(y2 - y1, x2 - x1) - Math.PI / 2\n    const half = thickness / 2\n    const cos = Math.cos(angle) * half\n    const sin = Math.sin(angle) * half\n    return [\n        x1 - cos, y1 - sin,\n        x2 - cos, y2 - sin,\n        x2 + cos, y2 + sin,\n        x1 + cos, y1 + sin\n    ]\n}","'use strict'\n\nconst linePoint = require('./line-point')\n\n/**\n * polygon-point collision\n * based on https://stackoverflow.com/a/17490923/1955997\n * @param {number[]} points [x1, y1, x2, y2, ... xn, yn] of polygon\n * @param {number} x of point\n * @param {number} y of point\n * @param {number} [tolerance=1] maximum distance of point to polygon's edges that triggers collision (see pointLine)\n */\nmodule.exports = function polygonPoint(points, x, y, tolerance)\n{\n    var length = points.length\n    var c = false\n    var i, j\n    for (i = 0, j = length - 2; i < length; i += 2)\n    {\n        if (((points[i + 1] > y) !== (points[j + 1] > y)) && (x < (points[j] - points[i]) * (y - points[i + 1]) / (points[j + 1] - points[i + 1]) + points[i]))\n        {\n            c = !c\n        }\n        j = i\n    }\n    if (c)\n    {\n        return true\n    }\n    for (i = 0; i < length; i += 2)\n    {\n        var p1x = points[i]\n        var p1y = points[i + 1]\n        var p2x, p2y\n        if (i === length - 2)\n        {\n            p2x = points[0]\n            p2y = points[1]\n        }\n        else\n        {\n            p2x = points[i + 2]\n            p2y = points[i + 3]\n        }\n        if (linePoint(p1x, p1y, p2x, p2y, x, y, tolerance))\n        {\n            return true\n        }\n    }\n    return false\n}\n","'use strict'\n\n/**\n * polygon-polygon collision\n * based on http://stackoverflow.com/questions/10962379/how-to-check-intersection-between-2-rotated-rectangles\n * @param {number[]} points1 [x1, y1, x2, y2, ... xn, yn] of first polygon\n * @param {number[]} points2 [x1, y1, x2, y2, ... xn, yn] of second polygon\n * @return {boolean}\n */\nmodule.exports = function polygonPolygon(points1, points2)\n{\n    var a = points1\n    var b = points2\n    var polygons = [a, b]\n    var minA, maxA, projected, minB, maxB, j\n    for (var i = 0; i < polygons.length; i++)\n    {\n        var polygon = polygons[i]\n        for (var i1 = 0; i1 < polygon.length; i1 += 2)\n        {\n            var i2 = (i1 + 2) % polygon.length\n            var normal = { x: polygon[i2 + 1] - polygon[i1 + 1], y: polygon[i1] - polygon[i2] }\n            minA = maxA = null\n            for (j = 0; j < a.length; j += 2)\n            {\n                projected = normal.x * a[j] + normal.y * a[j + 1]\n                if (minA === null || projected < minA)\n                {\n                    minA = projected\n                }\n                if (maxA === null || projected > maxA)\n                {\n                    maxA = projected\n                }\n            }\n            minB = maxB = null\n            for (j = 0; j < b.length; j += 2)\n            {\n                projected = normal.x * b[j] + normal.y * b[j + 1]\n                if (minB === null || projected < minB)\n                {\n                    minB = projected\n                }\n                if (maxB === null || projected > maxB)\n                {\n                    maxB = projected\n                }\n            }\n            if (maxA < minB || maxB < minA)\n            {\n                return false\n            }\n        }\n    }\n    return true\n}\n"],"names":["render","_vm","this","_c","_self","ref","class","classes","style","attrs","id","on","onMouseMove","onMouseDown","onMouseWheel","onKeyDown","$event","hasFocus","staticClass","_l","edge","key","parameter1","parameter2","selected","inactive","issues","state","node","mount","updateEdgePos","arguments","_b","linkingLine","_e","selectRect","block","type","spec","position","origin","process_id","namespace","result","description","args","updateBlock","startDragBlock","scale","showZoomInfo","_v","parameterViewer","staticRenderFns","containerClasses","indexOf","_k","keyCode","preventDefault","stopPropagation","button","apply","emitDrag","plainTitle","directives","name","rawName","value","expression","_s","focus","allowsDescription","showDescriptionField","addDescription","remove","showInfo","isParameter","edit","param","i","refInFor","optional","deprecated","experimental","default","schema","updateArgument","edgesChanged","outputLabel","updateResult","output","editable","domProps","updateDescription","_g","circleClasses","circleListeners","textListeners","displayLabel","displayValue","props","String","Boolean","Object","Array","label","required","data","edges","computed","schemas","ProcessSchema","hasValue","undefined","allowsArgumentChange","click","openEditorForArguments","listeners","mousedown","event","which","root","link","dblclick","$emit","mouseover","linkFrom","mouseout","linkTo","unlink","getEdgeCount","push","unspecified","$parent","invalid","hasProcesses","length","maxLength","formattedValue","isEditable","compactMode","formatValue","isArrayType","nativeDataType","isObjectType","allowsMultipleInputs","watch","updateEdgeStatus","immediate","handler","methods","isEdgeUsed","getCirclePosition","dim","domBoundingBox","$refs","circle","blocksDim","getDimensions","x","offsetLeft","width","y","offsetTop","height","error","console","warn","showArguments","jsonSchema","toJSON","setValue","resetValue","nullable","dataType","getEdgeRef","addRefToValue","isArray","propertyCount","removeRefFromValue","removeRefFromValueDeep","splice","hasOwnProperty","addEdge","eraseEdge","k","$delete","hasRefInValue","formatProcess","pg","ProcessGraph","getNodeCount","getResultNode","nodes","values","process_graph","html","formatArray","formatObject","text","substr","toString","JSON","stringify","parts","formatted","unformatted","formatArraySimple","join","title","map","v","keys","west","east","south","north","component","defaultScale","blockWidth","compactParams","compact","normalParams","normal","defaultFontSize","components","BlockParameter","drag","size","parameters","styles","marginLeft","Math","round","center","marginTop","fontSize","showId","collectionId","processId","collection","collections","allowsParameterChange","supports","filter","p","allowsDelete","allowsInfo","hasParametersDefined","names","ProcessParameter","includes","fields","returns","from_parameter","from_node","mounted","draggingFn","dragging","bind","document","addEventListener","stopDragFn","stopDrag","beforeDestroy","removeEventListener","editParameter","hasParameter","find","elem","composedPath","updatePosition","pos","saveHistory","updateArguments","removeParameters","hasOutputEdges","select","shiftKey","unselectOthers","div","parameter","refs","parameterName","async","$nextTick","descriptionField","getDragPos","mouse","startDrag","mousePos","getMousePos","delta","abs","drapPos","removeBlock","getBlockParameter","params","isParameterScoped","referenceName","parameterBlock","cbParams","ProcessUtils","cbParam","hiddenParameterRef","globalParam","argName","r","line","Segment","constructor","dx","dy","distance","point1","point2","sqrt","pow","distanceP","point","intersection","alpha","other","a","b","c","d","b0","b1","det","r1","r2","lineWidth","Number","lineColor","position1","position2","segment","scaledLineWidth","lines","xM","yM","PI","cos","sin","cosB","sinB","norm","arrowLength","xA","yA","lineStyle","getLineStyle","arrowStyle","mainLine","getLine","updatePositions","created","pos1","pos2","freeze","dashed","dashLength","color","x1","y1","x2","y2","settings","assign","collide","dp","equals","getDefaultState","blocks","moving","selecting","MARGIN","selectionChangeWatcher","newVal","oldVal","every","selectedBlocks","selectedEdges","Block","Edge","ParameterViewer","processes","parent","parentSchema","historySize","explicitZoom","isMounted","allMounted","newBlockOffset","history","historyPointer","process","hiddenParameterRefEdges","processGraph","nextBlockId","nextEdgeId","clipboard","activeTransactions","min","current","start","processRegistry","ProcessRegistry","count","get","Error","processBlocks","selectedSideEdge","selectedParameter","hasSelection","processParametersFromSchemas","parentParams","getPgParameters","callbackParams","getCallbackParameters","filteredParentParams","p1","p2","concat","importPgParameters","BlocksProcess","import","propagate","undoOnError","updateHiddenParameterRefEdges","checkAllMounted","beforeCreate","$on","msg","showParameterViewer","moveCenter","onDocumentMouseUpFn","onDocumentMouseUp","perfectScale","$el","updateBlockArguments","removedParams","parameterRemoved","$set","commit","refreshEdges","updateBlockDescription","updateBlockPos","updateBlockResult","updateBlockSelected","unselectAll","updateBlockSpec","parameterFields","newBlock","extra","setResultNode","hiddenRefs","getPgParameterById","parameterNames","slice","removeEdge","refreshEdgesFor","$listeners","multiSelect","box","e","export","selectEdge","allInputs","querySelectorAll","el","activeElement","captured","code","deleteSelected","ctrlKey","metaKey","navigator","readText","parse","writeText","json","dX","dY","deltaScale","sign","deltaY","rect","getBoundingClientRect","top","max","documentElement","scrollTop","body","left","scrollLeft","clientX","clientY","sideSelected","issue","startTransaction","shift","historyStep","step","index","element","getBlockById","foundNewResultNode","hasOtherBlocks","getPositionForPageXY","addProcess","addBlock","num","incrementId","replace","getBlockSize","getNewBlockDefaultPosition","blockSize","inputs","commentHeight","reset","conflictBlock","otherBlock","findIndex","blockId","b2","allSuccessors","JsonSchemaValidator","outputParameter","explored","exploreList","currentBlock","pop","block1","target","block2","internal","copy","nodeId","parameterBlocks","fn","options","success","undo","error2","clear","setParent","parentProcessId","parentParameterName","allowEmpty","getProcessParameters","importNodes","getStartNodes","importEdges","addPgParameter","getNodes","getArgumentNames","val","getRawArgument","getArgumentType","addEdgeByNames","getNode","importEdgeDeep","imported","nextNodes","maxX","getPreviousNodes","prev","getNextNodes","int","parseInt","isNaN","xMin","xMax","yMin","yMax","scaleA","scaleB","selectParameterName","saveCallback","module","exports","w1","h1","w2","h2","lineBox","xb","yb","wb","hb","boxPoint","lineLine","lineToPolygon","polygonPolygon","linePolygon","lineToLine","lineLineThickness","x3","y3","x4","y4","thickness1","thickness2","distanceSquared","xp","yp","tolerance","polygonPoint","points","j","s1_x","s1_y","s2_x","s2_y","s","t","thickness","angle","atan2","half","linePoint","p2x","p2y","p1x","p1y","points1","points2","minA","maxA","projected","minB","maxB","polygons","polygon","i1","i2"],"sourceRoot":""}
{"version":3,"file":"js/871.c6954558.js","mappings":"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","sources":["webpack://@openeo/web-editor/./node_modules/ol/array.js","webpack://@openeo/web-editor/./node_modules/ol/centerconstraint.js","webpack://@openeo/web-editor/./node_modules/ol/color.js","webpack://@openeo/web-editor/./node_modules/ol/colorlike.js","webpack://@openeo/web-editor/./node_modules/ol/control/Control.js","webpack://@openeo/web-editor/./node_modules/ol/control/FullScreen.js","webpack://@openeo/web-editor/./node_modules/ol/control/ScaleLine.js","webpack://@openeo/web-editor/./node_modules/ol/control/Attribution.js","webpack://@openeo/web-editor/./node_modules/ol/control/Rotate.js","webpack://@openeo/web-editor/./node_modules/ol/control/Zoom.js","webpack://@openeo/web-editor/./node_modules/ol/control/defaults.js","webpack://@openeo/web-editor/./node_modules/ol/css.js","webpack://@openeo/web-editor/./node_modules/ol/dom.js","webpack://@openeo/web-editor/./node_modules/ol/easing.js","webpack://@openeo/web-editor/./node_modules/ol/events.js","webpack://@openeo/web-editor/./node_modules/ol/events/Event.js","webpack://@openeo/web-editor/./node_modules/ol/events/EventType.js","webpack://@openeo/web-editor/./node_modules/ol/events/Key.js","webpack://@openeo/web-editor/./node_modules/ol/events/Target.js","webpack://@openeo/web-editor/./node_modules/ol/events/condition.js","webpack://@openeo/web-editor/./node_modules/ol/featureloader.js","webpack://@openeo/web-editor/./node_modules/ol/format/Feature.js","webpack://@openeo/web-editor/./node_modules/ol/format/JSONFeature.js","webpack://@openeo/web-editor/./node_modules/ol/format/GeoJSON.js"],"sourcesContent":["/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n"],"names":["binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","length","found","a","b","descending","linearFindNearest","arr","target","direction","n","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","index","res","createExtent","extent","onlyCenter","smooth","center","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","x","y","ratio","Math","log","max","none","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","toString","fromNamed","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","fromString","MAX_CACHE_SIZE","cache","cacheSize","s","hasOwnProperty","key","fromStringInternal_","asArray","r","g","exec","d","hasAlpha","parseInt","substr","startsWith","slice","split","map","Number","normalize","push","undefined","round","isStringColor","test","asColorLike","Control","constructor","options","super","element","pointerEvents","this","target_","map_","listenerKeys","render","setTarget","disposeInternal","getMap","setMap","ii","getOverlayContainerStopEvent","POSTRENDER","mapEvent","getElementById","events","FullScreenEventType","ENTERFULLSCREEN","LEAVEFULLSCREEN","FullScreen","on","once","un","keys_","keys","source_","source","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","bind","cssClassName_","className","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","label","labelNode_","createTextNode","labelActive","labelActiveNode_","tipLabel","button_","title","setAttribute","addEventListener","CLICK","handleClick_","setClassName_","event","preventDefault","handleFullScreen_","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullScreen","getTargetElement","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","wasInFullscreen","dispatchEvent","updateSize","fullscreen","classList","remove","add","oldMap","removeChangeListener","TARGET","addChangeListener","listeners","requestFullscreen","fullscreenEnabled","fullscreenElement","exitFullscreen","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedVisible_","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","units","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","getUnits","get","updateElement_","set","setDpi","viewState","display","projection","pointResolutionUnits","pointResolution","getPointResolution","nominalCount","suffix","metersPerDegree","METERS_PER_UNIT","degrees","count","width","decimalCount","previousCount","previousWidth","previousDecimalCount","floor","decimal","pow","isNaN","html","createScaleBar","toFixed","innerHTML","scale","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","scaleBarText","join","position","top","isLast","lengthString","margin","inchesPerMeter","frameState","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","String","EventType","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","layer","getAttributions","some","getSource","getAttributionsCollapsible","setCollapsible","attributions","visible","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","button","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","rotation","getRotation","PI","animate","easing","setRotation","transform","contains","Zoom","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","defaults","controls","Collection","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","value","families","family","createCanvasContext2D","height","canvasPool","settings","canvas","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","easeIn","t","easeOut","inAndOut","linear","listen","type","listener","thisArg","originalListener","removeEventListener","apply","arguments","eventsKey","listenOnce","unlistenByKey","BaseEvent","propagationStopped","defaultPrevented","stopPropagation","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","LEFT","UP","RIGHT","DOWN","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","handleEvent","call","pr","getListeners","hasListener","Object","indexOf","splice","all","var_args","conditions","pass","altKeyOnly","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","focus","targetElement","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","never","singleClick","SINGLECLICK","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerEvent","pointerType","primaryAction","isPrimary","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","getType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","features","dataProjection","addFeatures","FeatureFormat","defaultFeatureProjection","supportedMediaTypes","getReadOptions","setWorldExtent","adaptOptions","assign","readFeature","readGeometry","writeFeature","feature","writeFeatures","writeGeometry","geometry","transformGeometryWithOptions","write","transformed","equivalent","clone","decimals","power","coordinates","applyTransform","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","GeoJSON","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","Feature","setGeometryName","setGeometry","setId","setProperties","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","properties","id","getId","hasProperties","getProperties","getGeometry","getGeometryName","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","Error","geometries","GeometryCollection","Point","LineString","MultiLineString","MultiPoint","MultiPolygon","Polygon","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","getGeometriesArray","getCoordinates","right","rightHanded"],"sourceRoot":""}